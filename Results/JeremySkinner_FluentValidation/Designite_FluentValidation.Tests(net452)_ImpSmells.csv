Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,FluentValidation.Tests,AbstractValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\AbstractValidatorTester.cs,,The length of the parameter PreValidationReturnValueTheoryData is 34.
Long Statement,FluentValidation.Tests,CascadingFailuresTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CascadingFailuresTester.cs,Validation_continues_on_failure_when_set_to_Stop_globally_and_overriden_at_rule_level_async,The length of the statement  "			validator.RuleFor(x => x.Surname).Cascade(CascadeMode.Continue).MustAsync(async (x' c) => x != null).MustAsync(async (x' c) => x == "foo"); " is 139.
Long Statement,FluentValidation.Tests,CascadingFailuresTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CascadingFailuresTester.cs,Validation_stops_on_first_Failure_when_set_to_Continue_globally_and_overriden_at_rule_level_async,The length of the statement  "			validator.RuleFor(x => x.Surname).Cascade(CascadeMode.StopOnFirstFailure).MustAsync(async (x' c) => x != null).MustAsync(async (x' c) => x == "foo"); " is 149.
Long Statement,FluentValidation.Tests,CascadingFailuresTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CascadingFailuresTester.cs,Validation_continues_on_failure_when_set_to_StopOnFirstFailure_at_validator_level_and_overriden_at_rule_level_async,The length of the statement  "			validator.RuleFor(x => x.Surname).Cascade(CascadeMode.Continue).MustAsync(async (x' c) => x != null).MustAsync(async (x' c) => x == "foo"); " is 139.
Long Statement,FluentValidation.Tests,CascadingFailuresTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CascadingFailuresTester.cs,Validation_stops_on_failure_when_set_to_Continue_and_overriden_at_rule_level_async,The length of the statement  "			validator.RuleFor(x => x.Surname).Cascade(CascadeMode.StopOnFirstFailure).MustAsync(async (x' c) => x != null).MustAsync(async (x' c) => x == "foo"); " is 149.
Long Statement,FluentValidation.Tests,CollectionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorTests.cs,Condition_should_work_with_child_collection,The length of the statement  "				v => v.RuleFor(x => x.Orders).SetCollectionValidator(new OrderValidator()).When(x => x.Orders.Count == 3 /*there are only 2*/) " is 126.
Long Statement,FluentValidation.Tests,CollectionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorTests.cs,Async_condition_should_work_with_child_collection,The length of the statement  "	                                                v => v.RuleFor(x => x.Orders).SetCollectionValidator(new OrderValidator()).WhenAsync(async (x'c) => x.Orders.Count == 3 /*there are only 2*/) " is 141.
Long Statement,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,Condition_should_work_with_child_collection,The length of the statement  "				v => v.RuleFor(x => x.Orders).SetCollectionValidator(y => new OrderValidator(y)).When(x => x.Orders.Count == 4 /*there are only 3*/) " is 132.
Long Statement,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,Async_condition_should_work_with_child_collection,The length of the statement  "				v => v.RuleFor(x => x.Orders).SetCollectionValidator(y => new OrderValidator(y)).WhenAsync(async (x' c) => x.Orders.Count == 4 /*there are only 3*/) " is 148.
Long Statement,FluentValidation.Tests,ConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ConditionTests.cs,Async_condition_is_applied_to_single_validator_in_the_chain_when_ApplyConditionTo_set_to_CurrentValidator,The length of the statement  "				v => v.RuleFor(x => x.Surname).NotNull().NotEqual("foo").WhenAsync(async (x'c) => x.Id > 0' ApplyConditionTo.CurrentValidator) " is 126.
Long Statement,FluentValidation.Tests,CreditCardValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CreditCardValidatorTests.cs,IsValidTests,The length of the statement  "			validator.Validate(new Person { CreditCard = "1234-5678-9012-3452" }).IsValid.ShouldBeTrue(); // Good checksum' with dashes " is 123.
Long Statement,FluentValidation.Tests,CreditCardValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CreditCardValidatorTests.cs,IsValidTests,The length of the statement  "			validator.Validate(new Person { CreditCard = "1234 5678 9012 3452" }).IsValid.ShouldBeTrue(); // Good checksum' with spaces " is 123.
Long Statement,FluentValidation.Tests,EnumValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,When_the_enum_is_not_initialized_with_valid_value_then_the_validator_should_fail,The length of the statement  "			var result = validator.Validate(new Person());                                         // Default value 0 is not defined in Enum " is 128.
Long Statement,FluentValidation.Tests,EnumValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,Flags_enum_with_overlapping_flags_valid_when_using_bitwise_value,The length of the statement  "			poco.EnumWithOverlappingFlagsValue = EnumWithOverlappingFlags.A | EnumWithOverlappingFlags.B | EnumWithOverlappingFlags.C; " is 122.
Long Statement,FluentValidation.Tests,EqualValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EqualValidatorTests.cs,Should_succeed_on_case_insensitive_comparison_using_expression,The length of the statement  "			var validator = new TestValidator { v => v.RuleFor(x => x.Surname).Equal(x => x.Forename' StringComparer.OrdinalIgnoreCase) }; " is 126.
Long Statement,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,When_the_to_is_smaller_than_the_from_then_the_validator_should_throw,The length of the statement  "			typeof(ArgumentOutOfRangeException).ShouldBeThrownBy(() => new TestValidator{v => v.RuleFor(x => x.Id).ExclusiveBetween(10' 1)}); " is 129.
Long Statement,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,Uses_useful_error_message_when_used_on_non_property,The length of the statement  "				ex.Message.ShouldEqual("Could not infer property name for expression: x => x.NickNames.AsEnumerable(). Please explicitly specify a property name by calling OverridePropertyName as part of the rule chain. Eg: RuleForEach(x => x).NotNull().OverridePropertyName(\"MyProperty\")"); " is 277.
Long Statement,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,Condition_should_work_with_child_collection,The length of the statement  "				v => v.RuleForEach(x => x.Orders).SetValidator(new OrderValidator()).When(x => x.Orders.Count == 3 /*there are only 2*/) " is 120.
Long Statement,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,Async_condition_should_work_with_child_collection,The length of the statement  "	                                                v => v.RuleForEach(x => x.Orders).SetValidator(new OrderValidator()).WhenAsync(async (x'c) => x.Orders.Count == 3 /*there are only 2*/) " is 135.
Long Statement,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,When_the_to_is_smaller_than_the_from_then_the_validator_should_throw,The length of the statement  "			typeof(ArgumentOutOfRangeException).ShouldBeThrownBy(() => 	new TestValidator(v => v.RuleFor(x => x.Id).InclusiveBetween(10' 1))); " is 130.
Long Statement,FluentValidation.Tests,LanguageManagerTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LanguageManagerTests.cs,CheckParametersMatch,The length of the statement  "				$"Translation for language {languageCode}' key {translationKey} has parameters {string.Join("'"' translatedParameters)}' expected {string.Join("'"' referenceParameters)}"); " is 172.
Long Statement,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_validator_fails_the_error_message_should_be_set,The length of the statement  "			result.Errors.Single().ErrorMessage.ShouldEqual("'Surname' must be between 1 and 2 characters. You entered 27 characters."); " is 124.
Long Statement,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_minlength_validator_fails_the_error_message_should_be_set,The length of the statement  "			result.Errors.Single().ErrorMessage.ShouldEqual("The length of 'Surname' must be at least 4 characters. You entered 3 characters."); " is 132.
Long Statement,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_maxlength_validator_fails_the_error_message_should_be_set,The length of the statement  "			result.Errors.Single().ErrorMessage.ShouldEqual("The length of 'Surname' must be 4 characters or fewer. You entered 5 characters."); " is 132.
Long Statement,FluentValidation.Tests,LessThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanValidatorTester.cs,Validates_against_property,The length of the statement  "			var validator = new TestValidator(v => v.RuleFor(x => x.Id).LessThan(x => x.AnotherInt).WithMessage("{ComparisonProperty}")); " is 125.
Long Statement,FluentValidation.Tests,LocalisedMessagesTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LocalisedMessagesTester.cs,Sets_localised_message_via_type_name,The length of the statement  "			validator.RuleFor(x => x.Surname).NotEmpty().WithLocalizedMessage(typeof(MyResources)' nameof(MyResources.notempty_error)); " is 123.
Long Statement,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Understands_numeric_formats,The length of the statement  "			result.ShouldEqual($"{-123.456789:c3} {-123.456789:c4} {1234.567:f} {0.912:p} {123:d} {1052.0329112756:e} {1052.0329112756:e2} {123:0000}"); " is 140.
Long Statement,FluentValidation.Tests,NotEqualValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\NotEqualValidatorTests.cs,Should_not_be_valid_for_case_insensitve_comparison_with_expression,The length of the statement  "			var validator = new TestValidator(v => v.RuleFor(x => x.Forename).NotEqual(x => x.Surname' StringComparer.OrdinalIgnoreCase)); " is 126.
Long Statement,FluentValidation.Tests,OnFailureTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\OnFailureTests.cs,Should_be_able_to_access_error_message_in_OnFailure,The length of the statement  "			_validator.RuleFor(person => person.Surname).NotNull().WithMessage("You must specify Surname!").OnFailure((person'ctx' message) => { " is 132.
Long Statement,FluentValidation.Tests,OnFailureTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\OnFailureTests.cs,ShouldHaveChildValidator_should_be_true,The length of the statement  "			_validator.RuleFor(person => person.Address).SetValidator(new AddressValidatorWithOnFailure()).OnFailure((p'ctx)=> { Debug.WriteLine(p.Forename); }); " is 149.
Long Statement,FluentValidation.Tests,RegularExpressionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RegularExpressionValidatorTests.cs,When_the_text_matches_the_lambda_regex_regular_expression_then_the_validator_should_pass,The length of the statement  "			var result = validator3.Validate(new Person { Surname = input' AnotherRegex = new System.Text.RegularExpressions.Regex(@"^\w\d$") }); " is 133.
Long Statement,FluentValidation.Tests,RegularExpressionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RegularExpressionValidatorTests.cs,When_the_text_does_not_match_the_lambda_regex_regular_expression_then_the_validator_should_fail,The length of the statement  "			var result = validator3.Validate(new Person { Surname = "S33"' AnotherRegex = new System.Text.RegularExpressions.Regex(@"^\w\d$") }); " is 133.
Long Statement,FluentValidation.Tests,RegularExpressionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RegularExpressionValidatorTests.cs,When_the_text_does_not_match_the_lambda_regex_regular_expression_then_the_validator_should_fail,The length of the statement  "			result = validator3.Validate(new Person { Surname = " 5"' AnotherRegex = new System.Text.RegularExpressions.Regex(@"^\w\d$") }); " is 128.
Long Statement,FluentValidation.Tests,RegularExpressionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RegularExpressionValidatorTests.cs,Can_access_expression_in_message_lambda_regex,The length of the statement  "			var result = v.Validate(new Person { Forename = ""' AnotherRegex = new System.Text.RegularExpressions.Regex(@"^\w\d$") }); " is 122.
Long Statement,FluentValidation.Tests,RuleBuilderTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleBuilderTests.cs,Should_throw_if_message_is_null,The length of the statement  "			typeof(ArgumentNullException).ShouldBeThrownBy(() => builder.SetValidator(new TestPropertyValidator()).WithMessage((string)null)); " is 130.
Long Statement,FluentValidation.Tests,RuleBuilderTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleBuilderTests.cs,Should_throw_if_property_name_is_null,The length of the statement  "			typeof(ArgumentNullException).ShouldBeThrownBy(() => builder.SetValidator(new TestPropertyValidator()).WithName((string)null)); " is 127.
Long Statement,FluentValidation.Tests,RuleBuilderTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleBuilderTests.cs,Should_throw_when_async_predicate_is_null,The length of the statement  "			typeof (ArgumentNullException).ShouldBeThrownBy(() => builder.SetValidator(new TestPropertyValidator()).WhenAsync((Func<Person' CancellationToken' Task<bool>>) null)); " is 167.
Long Statement,FluentValidation.Tests,RuleBuilderTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleBuilderTests.cs,Should_throw_when_async_inverse_predicate_is_null,The length of the statement  "			typeof (ArgumentNullException).ShouldBeThrownBy(() => builder.SetValidator(new TestPropertyValidator()).UnlessAsync((Func<Person' CancellationToken' Task<bool>>) null)); " is 169.
Long Statement,FluentValidation.Tests,RuleBuilderTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleBuilderTests.cs,Calling_validate_should_delegate_to_underlying_validator,The length of the statement  "			builder.Rule.Validate(new ValidationContext<Person>(person' new PropertyChain()' new DefaultValidatorSelector())).ToList(); " is 123.
Long Statement,FluentValidation.Tests,RuleBuilderTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleBuilderTests.cs,Calling_ValidateAsync_should_delegate_to_underlying_sync_validator,The length of the statement  "			await builder.Rule.ValidateAsync(new ValidationContext<Person>(person' new PropertyChain()' new DefaultValidatorSelector())' new CancellationToken()); " is 150.
Long Statement,FluentValidation.Tests,RuleBuilderTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleBuilderTests.cs,Calling_ValidateAsync_should_delegate_to_underlying_async_validator,The length of the statement  "			var validator = new Mock<PropertyValidator>(MockBehavior.Loose' ValidatorOptions.LanguageManager.GetStringForValidator<AsyncPredicateValidator>()) {CallBase = true}; " is 165.
Long Statement,FluentValidation.Tests,RuleBuilderTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleBuilderTests.cs,Calling_ValidateAsync_should_delegate_to_underlying_async_validator,The length of the statement  "			validator.Setup(v => v.ValidateAsync(It.IsAny<PropertyValidatorContext>()' It.IsAny<CancellationToken>())).Returns(tcs.Task); " is 125.
Long Statement,FluentValidation.Tests,RuleBuilderTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleBuilderTests.cs,Calling_ValidateAsync_should_delegate_to_underlying_async_validator,The length of the statement  "			await builder.Rule.ValidateAsync(new ValidationContext<Person>(person' new PropertyChain()' new DefaultValidatorSelector())' new CancellationToken()); " is 150.
Long Statement,FluentValidation.Tests,RuleBuilderTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleBuilderTests.cs,Calling_ValidateAsync_should_delegate_to_underlying_async_validator,The length of the statement  "			validator.Verify(x => x.ValidateAsync(It.Is<PropertyValidatorContext>(c => (string)c.PropertyValue == "Foo")' It.IsAny<CancellationToken>())); " is 142.
Long Statement,FluentValidation.Tests,RuleBuilderTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleBuilderTests.cs,Nullable_object_with_condition_should_not_throw,The length of the statement  "			builder.Rule.Validate(new ValidationContext<Person>(new Person()' new PropertyChain()' new DefaultValidatorSelector())); " is 120.
Long Statement,FluentValidation.Tests,RuleBuilderTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleBuilderTests.cs,Nullable_object_with_async_condition_should_not_throw,The length of the statement  "			builder.Rule.Validate(new ValidationContext<Person>(new Person()' new PropertyChain()' new DefaultValidatorSelector())); " is 120.
Long Statement,FluentValidation.Tests,RuleBuilderTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleBuilderTests.cs,Result_should_use_custom_property_name_when_no_property_name_can_be_determined,The length of the statement  "			var results = builder.Rule.Validate(new ValidationContext<Person>(new Person()' new PropertyChain()' new DefaultValidatorSelector())); " is 134.
Long Statement,FluentValidation.Tests,RuleBuilderTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleBuilderTests.cs,Conditional_child_validator_should_register_with_validator_type_not_property,The length of the statement  "			builder.Rule.Validators.OfType<ChildValidatorAdaptor>().Single().ValidatorType.ShouldEqual(typeof(NoopAddressValidator)); " is 121.
Long Statement,FluentValidation.Tests,RulesetTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RulesetTests.cs,Executes_rules_in_specified_ruleset,The length of the statement  "			var result = validator.Validate(new ValidationContext<Person>(new Person()' new PropertyChain()' new RulesetValidatorSelector("Names"))); " is 137.
Long Statement,FluentValidation.Tests,RulesetTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RulesetTests.cs,Ruleset_cascades_to_child_validator,The length of the statement  "			var result = validator.Validate(new ValidationContext<Person>(person' new PropertyChain()' new RulesetValidatorSelector("Test"))); " is 130.
Long Statement,FluentValidation.Tests,RulesetTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RulesetTests.cs,Ruleset_cascades_to_child_collection_validator,The length of the statement  "			var result = validator.Validate(new ValidationContext<Person>(person' new PropertyChain()' new RulesetValidatorSelector("Test"))); " is 130.
Long Statement,FluentValidation.Tests,RulesetTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RulesetTests.cs,Executes_multiple_rulesets,The length of the statement  "			var result = validator.Validate(new ValidationContext<Person>(person' new PropertyChain()' new RulesetValidatorSelector("Names"' "Id"))); " is 137.
Long Statement,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The length of the statement  "			result.Errors[0].ErrorMessage.ShouldEqual("'Discount' must not be more than 4 digits in total' with allowance for 2 decimals. 3 digits and 6 decimals were found."); " is 164.
Long Statement,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The length of the statement  "			result.Errors[0].ErrorMessage.ShouldEqual("'Discount' must not be more than 4 digits in total' with allowance for 2 decimals. 2 digits and 4 decimals were found."); " is 164.
Long Statement,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The length of the statement  "			result.Errors[0].ErrorMessage.ShouldEqual("'Discount' must not be more than 4 digits in total' with allowance for 2 decimals. 1 digits and 3 decimals were found."); " is 164.
Long Statement,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The length of the statement  "			result.Errors[0].ErrorMessage.ShouldEqual("'Discount' must not be more than 4 digits in total' with allowance for 2 decimals. 4 digits and 1 decimals were found."); " is 164.
Long Statement,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The length of the statement  "			result.Errors[0].ErrorMessage.ShouldEqual("'Discount' must not be more than 4 digits in total' with allowance for 2 decimals. 5 digits and 0 decimals were found."); " is 164.
Long Statement,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The length of the statement  "			result.Errors[0].ErrorMessage.ShouldEqual("'Discount' must not be more than 4 digits in total' with allowance for 2 decimals. 3 digits and 25 decimals were found."); " is 165.
Long Statement,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Condition_can_be_used_inside_ruleset,The length of the statement  "			validator.RuleSet("foo"' () => { validator.When(x => x.Id > 0' () => { validator.RuleFor(x => x.Forename).NotNull(); }); }); " is 124.
Long Statement,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,RuleSet_can_be_used_inside_condition,The length of the statement  "			validator.When(x => x.Id > 0' () => { validator.RuleSet("foo"' () => { validator.RuleFor(x => x.Forename).NotNull(); }); }); " is 124.
Long Statement,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,RuleSet_can_be_used_inside_async_condition,The length of the statement  "			validator.WhenAsync(async (x'c) => (x.Id > 0)' () => { validator.RuleSet("foo"' () => { validator.RuleFor(x => x.Forename).NotNull(); }); }); " is 141.
Long Statement,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Executes_customasync_rule_when_condition_true,The length of the statement  "			validator.When(x => true' () => validator.RuleFor(x=>x).CustomAsync(async (x'ctx'c) => ctx.AddFailure(new ValidationFailure("foo"' "bar")))); " is 141.
Long Statement,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Executes_customasync_rule_when_async_condition_true,The length of the statement  "			validator.WhenAsync(async (x'c) =>(true)' () => validator.RuleFor(x=>x).CustomAsync(async (x'ctx'c) => ctx.AddFailure(new ValidationFailure("foo"' "bar")))); " is 157.
Long Statement,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Nested_conditions_with_CustomAsync_rule,The length of the statement  "					validator.RuleFor(x=>x).CustomAsync(async (x'ctx'c) => ctx.AddFailure(new ValidationFailure("Custom"' "The validation failed"))); " is 129.
Long Statement,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Nested_async_conditions_with_CustomAsync_rule,The length of the statement  "					validator.RuleFor(x=>x).CustomAsync(async (x'ctx'c) => ctx.AddFailure(new ValidationFailure("Custom"' "The validation failed"))); " is 129.
Long Statement,FluentValidation.Tests,StringEnumValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\StringEnumValidatorTests.cs,When_validation_fails_the_default_error_should_be_set,The length of the statement  "			result.Errors.Single().ErrorMessage.ShouldEqual("'Gender String' has a range of values which does not include 'invalid'."); " is 123.
Long Statement,FluentValidation.Tests,StringEnumValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\StringEnumValidatorTests.cs,When_enumType_is_not_an_enum_it_should_throw,The length of the statement  "			var exception = Assert.Throws<ArgumentOutOfRangeException>(() => new TestValidator { v => v.RuleFor(x => x.GenderString).IsEnumName(typeof(Person)) }); " is 151.
Long Statement,FluentValidation.Tests,StringEnumValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\StringEnumValidatorTests.cs,When_enumType_is_not_an_enum_it_should_throw,The length of the statement  "			exception.Message.ShouldEqual("The type 'Person' is not an enum and can't be used with IsEnumName." + Environment.NewLine + "Parameter name: enumType"); " is 152.
Long Statement,FluentValidation.Tests,UserStateTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\UserStateTester.cs,Throws_when_provider_is_null,The length of the statement  "			typeof(ArgumentNullException).ShouldBeThrownBy(() => validator.RuleFor(x => x.Surname).NotNull().WithState((Func<Person' object>) null)); " is 137.
Long Statement,FluentValidation.Tests,ValidateAndThrowTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidateAndThrowTester.cs,Populates_errors,The length of the statement  "			var ex = (ValidationException)typeof(ValidationException).ShouldBeThrownBy(() => validator.ValidateAndThrow(new Person())); " is 123.
Long Statement,FluentValidation.Tests,ValidateAndThrowTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidateAndThrowTester.cs,ToString_provides_error_details,The length of the statement  "            string expected = "FluentValidation.ValidationException: Validation failed: " + Environment.NewLine + " -- Surname: 'Surname' must not be empty." + Environment.NewLine + " -- Forename: 'Forename' must not be empty."; " is 216.
Long Statement,FluentValidation.Tests,ValidatorTesterTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidatorTesterTester.cs,ShouldNotHaveValidationError_should_have_validation_error_details_when_thrown_ruleforeach,The length of the statement  "			Assert.Contains("The length of 'Nick Names' must be at least 5 characters. You entered 4 characters."' validationTestException.Message); " is 136.
Long Statement,FluentValidation.Tests,ValidatorTesterTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidatorTesterTester.cs,ShouldHaveValidationError_Should_throw_when_there_are_no_validation_errors,The length of the statement  "			typeof(ValidationTestException).ShouldBeThrownBy(() => validator.ShouldHaveValidationErrorFor(x => x.Forename' "test")); " is 120.
Long Statement,FluentValidation.Tests,ValidatorTesterTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidatorTesterTester.cs,ShouldNotHaveValidationError_should_throw_when_there_are_errors,The length of the statement  "			typeof(ValidationTestException).ShouldBeThrownBy(() => validator.ShouldNotHaveValidationErrorFor(x => x.Forename' (string) null)); " is 130.
Long Statement,FluentValidation.Tests,ValidatorTesterTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidatorTesterTester.cs,ShouldHaveValidationError_should_throw_when_there_are_no_validation_errors_with_preconstructed_object,The length of the statement  "			typeof(ValidationTestException).ShouldBeThrownBy(() => validator.ShouldHaveValidationErrorFor(x => x.Forename' new Person {Forename = "test"})); " is 144.
Long Statement,FluentValidation.Tests,ValidatorTesterTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidatorTesterTester.cs,ShouldNotHaveValidationError_should_throw_when_there_are_errors_with_preconstructed_object,The length of the statement  "			typeof(ValidationTestException).ShouldBeThrownBy(() => validator.ShouldNotHaveValidationErrorFor(x => x.Forename' new Person {Forename = null})); " is 145.
Long Statement,FluentValidation.Tests,ValidatorTesterTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidatorTesterTester.cs,ShouldHaveChildValidator_throws_when_property_does_not_have_child_validator,The length of the statement  "			ex.Message.ShouldEqual("Expected property 'Address' to have a child validator of type 'AddressValidator.'. Instead found 'none'"); " is 130.
Long Statement,FluentValidation.Tests,ValidatorTesterTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidatorTesterTester.cs,ShouldHaveChildvalidator_throws_when_collection_property_Does_not_have_child_validator,The length of the statement  "			ex.Message.ShouldEqual("Expected property 'Orders' to have a child validator of type 'OrderValidator.'. Instead found 'none'"); " is 127.
Long Statement,FluentValidation.Tests,ValidatorTesterTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidatorTesterTester.cs,ShouldHaveChildValidator_should_throw_when_property_has_a_different_child_validator,The length of the statement  "			ex.Message.ShouldEqual("Expected property 'Address' to have a child validator of type 'OrderValidator.'. Instead found 'AddressValidator'"); " is 140.
Long Statement,FluentValidation.Tests,ValidatorTesterTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidatorTesterTester.cs,ShouldHaveValidationError_with_an_unmatched_rule_and_a_single_error_should_throw_an_exception,The length of the statement  "      Assert.Equal("Expected a validation error for property NullableInt.Value\n----\nProperties with Validation Errors:\n[0]: NullableInt\n"' ex.Message); " is 149.
Long Statement,FluentValidation.Tests,ValidatorTesterTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidatorTesterTester.cs,ShouldHaveValidationError_with_an_unmatched_rule_and_multiple_errors_should_throw_an_exception,The length of the statement  "      Assert.Equal("Expected a validation error for property NullableInt.Value\n----\nProperties with Validation Errors:\n[0]: NullableInt\n[1]: Age\n[2]: AnotherInt\n"' ex.Message); " is 176.
Long Statement,FluentValidation.Tests,ValidatorTesterTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidatorTesterTester.cs,Expected_severity_check,The length of the statement  "				e.Message.ShouldEqual($"Expected a severity of '{nameof(Severity.Error)}'. Actual severity was '{nameof(Severity.Warning)}'"); " is 126.
Magic Number,FluentValidation.Tests,AbstractValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\AbstractValidatorTester.cs,Uses_named_parameters_to_validate_ruleset,The following statement contains a magic number: result.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,AccessorCacheTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\AccessorCacheTests.cs,Benchmark,The following statement contains a magic number: i < 20000
Magic Number,FluentValidation.Tests,AssemblyScannerTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\AssemblyScannerTester.cs,ForEach_iterates_over_types,The following statement contains a magic number: results.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,CascadingFailuresTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CascadingFailuresTester.cs,Validation_continues_on_failure,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,CascadingFailuresTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CascadingFailuresTester.cs,Validation_continues_on_failure_when_set_to_Stop_globally_and_overriden_at_rule_level,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,CascadingFailuresTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CascadingFailuresTester.cs,Validation_continues_to_second_validator_when_first_validator_succeeds_and_cascade_set_to_stop,The following statement contains a magic number: validator.RuleFor(x => x.Surname).NotNull().Length(2' 10);
Magic Number,FluentValidation.Tests,CascadingFailuresTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CascadingFailuresTester.cs,Validation_continues_to_second_validator_when_first_validator_succeeds_and_cascade_set_to_stop,The following statement contains a magic number: validator.RuleFor(x => x.Surname).NotNull().Length(2' 10);
Magic Number,FluentValidation.Tests,CascadingFailuresTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CascadingFailuresTester.cs,Validation_continues_when_set_to_Continue_at_validator_level,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,CascadingFailuresTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CascadingFailuresTester.cs,Validation_continues_on_failure_when_set_to_StopOnFirstFailure_at_validator_level_and_overriden_at_rule_level,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,CascadingFailuresTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CascadingFailuresTester.cs,Validation_continues_on_failure_async,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,CascadingFailuresTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CascadingFailuresTester.cs,Validation_continues_on_failure_when_set_to_Stop_globally_and_overriden_at_rule_level_async,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,CascadingFailuresTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CascadingFailuresTester.cs,Validation_continues_when_set_to_Continue_at_validator_level_async,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,CascadingFailuresTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CascadingFailuresTester.cs,Validation_continues_on_failure_when_set_to_StopOnFirstFailure_at_validator_level_and_overriden_at_rule_level_async,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,ChainedValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ChainedValidationTester.cs,ChainedValidationTester,The following statement contains a magic number: person = new Person {  				Address = new Address {  					Country = new Country()  				}'  				Orders = new List<Order> {  					new Order() { Amount = 5 }'  					new Order() { ProductName = "Foo" }    	  				}  			};
Magic Number,FluentValidation.Tests,ChainedValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ChainedValidationTester.cs,Validates_chained_property,The following statement contains a magic number: results.Errors.Count.ShouldEqual(3);
Magic Number,FluentValidation.Tests,ChainedValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ChainedValidationTester.cs,Validates_chained_property,The following statement contains a magic number: results.Errors[2].PropertyName.ShouldEqual("Address.Country.Name");
Magic Number,FluentValidation.Tests,ChainedValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ChainedValidationTester.cs,Should_allow_normal_rules_and_chained_property_on_same_property,The following statement contains a magic number: result.Errors.Count.ShouldEqual(4);
Magic Number,FluentValidation.Tests,ChainedValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ChainedValidationTester.cs,Explicitly_included_properties_should_be_propagated_to_nested_validators,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,ChainedValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ChainedValidationTester.cs,Explicitly_included_properties_should_be_propagated_to_nested_validators_using_strings,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,ChainedValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ChainedValidationTester.cs,Condition_should_work_with_chained_property,The following statement contains a magic number: result.Errors.Count.ShouldEqual(3);
Magic Number,FluentValidation.Tests,ChainedValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ChainedValidationTester.cs,Chained_validator_descriptor,The following statement contains a magic number: members.Count.ShouldEqual(4);
Magic Number,FluentValidation.Tests,ChainedValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ChainedValidationTester.cs,Chained_validator_descriptor,The following statement contains a magic number: members[2].Key.ShouldEqual("Address.Country.Name");
Magic Number,FluentValidation.Tests,ChainedValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ChainedValidationTester.cs,Chained_validator_descriptor,The following statement contains a magic number: members[3].Key.ShouldEqual("Address.Line1");
Magic Number,FluentValidation.Tests,ChainingValidatorsTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ChainingValidatorsTester.cs,Should_create_multiple_validators,The following statement contains a magic number: validator.Cast<PropertyRule>().Single().Validators.Count().ShouldEqual(2);
Magic Number,FluentValidation.Tests,ChainingValidatorsTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ChainingValidatorsTester.cs,Should_execute_multiple_validators,The following statement contains a magic number: validator.Validate(new Person()).Errors.Count().ShouldEqual(2);
Magic Number,FluentValidation.Tests,ChildRulesTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ChildRulesTests.cs,Can_define_nested_rules_for_collection,The following statement contains a magic number: var result = validator.Validate(new Person {Orders = new List<Order> {  				new Order { ProductName = null' Amount = 10 }'  				new Order { ProductName = "foo"' Amount = 0}'  				new Order { ProductName = "foo"' Amount = 10 }  			}});
Magic Number,FluentValidation.Tests,ChildRulesTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ChildRulesTests.cs,Can_define_nested_rules_for_collection,The following statement contains a magic number: var result = validator.Validate(new Person {Orders = new List<Order> {  				new Order { ProductName = null' Amount = 10 }'  				new Order { ProductName = "foo"' Amount = 0}'  				new Order { ProductName = "foo"' Amount = 10 }  			}});
Magic Number,FluentValidation.Tests,ChildRulesTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ChildRulesTests.cs,Can_define_nested_rules_for_collection,The following statement contains a magic number: result.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,CollectionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorTests.cs,CollectionValidatorTests,The following statement contains a magic number: person = new Person() {  				Orders = new List<Order>() {  					new Order { Amount = 5}'  					new Order { ProductName = "Foo"}  				}  			};
Magic Number,FluentValidation.Tests,CollectionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorTests.cs,Validates_collection,The following statement contains a magic number: results.Errors.Count.ShouldEqual(3);
Magic Number,FluentValidation.Tests,CollectionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorTests.cs,Validates_collection,The following statement contains a magic number: results.Errors[2].PropertyName.ShouldEqual("Orders[1].Amount");
Magic Number,FluentValidation.Tests,CollectionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorTests.cs,Collection_should_be_explicitly_included_with_expression,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,CollectionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorTests.cs,Collection_should_be_explicitly_included_with_string,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,CollectionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorTests.cs,Condition_should_work_with_child_collection,The following statement contains a magic number: var validator = new TestValidator() {  				v => v.RuleFor(x => x.Orders).SetCollectionValidator(new OrderValidator()).When(x => x.Orders.Count == 3 /*there are only 2*/)  			};
Magic Number,FluentValidation.Tests,CollectionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorTests.cs,Async_condition_should_work_with_child_collection,The following statement contains a magic number: var validator = new TestValidator() {  	                                                v => v.RuleFor(x => x.Orders).SetCollectionValidator(new OrderValidator()).WhenAsync(async (x'c) => x.Orders.Count == 3 /*there are only 2*/)  	                                            };
Magic Number,FluentValidation.Tests,CollectionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorTests.cs,Skips_null_items,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,CollectionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorTests.cs,Top_level_collection,The following statement contains a magic number: result.Errors.Count.ShouldEqual(4);
Magic Number,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,CollectionValidatorWithParentTests,The following statement contains a magic number: person = new Person() {  				AnotherInt = 99'  				Children = new List<Person>() {  					new Person() {Email = "person@email.com"}  				}'  				Orders = new List<Order>() {  					new Order {ProductName = "email_that_does_not_belong_to_a_person"' Amount = 99}'  					new Order {ProductName = "person@email.com"' Amount = 1}'  					new Order {ProductName = "another_email_that_does_not_belong_to_a_person"' Amount = 1}'  				}  			};
Magic Number,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,CollectionValidatorWithParentTests,The following statement contains a magic number: person = new Person() {  				AnotherInt = 99'  				Children = new List<Person>() {  					new Person() {Email = "person@email.com"}  				}'  				Orders = new List<Order>() {  					new Order {ProductName = "email_that_does_not_belong_to_a_person"' Amount = 99}'  					new Order {ProductName = "person@email.com"' Amount = 1}'  					new Order {ProductName = "another_email_that_does_not_belong_to_a_person"' Amount = 1}'  				}  			};
Magic Number,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,Validates_collection,The following statement contains a magic number: results.Errors.Count.ShouldEqual(3);
Magic Number,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,Validates_collection,The following statement contains a magic number: results.Errors[2].PropertyName.ShouldEqual("Orders[2].ProductName");
Magic Number,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,Validates_collection_asynchronously,The following statement contains a magic number: results.Errors.Count.ShouldEqual(3);
Magic Number,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,Validates_collection_asynchronously,The following statement contains a magic number: results.Errors[2].PropertyName.ShouldEqual("Orders[2].ProductName");
Magic Number,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,Validates_collection_several_levels_deep,The following statement contains a magic number: results.Errors.Count.ShouldEqual(3);
Magic Number,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,Validates_collection_several_levels_deep,The following statement contains a magic number: results.Errors[2].PropertyName.ShouldEqual("Item1.Orders[2].ProductName");
Magic Number,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,Validates_collection_several_levels_deep_async,The following statement contains a magic number: results.Errors.Count.ShouldEqual(3);
Magic Number,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,Validates_collection_several_levels_deep_async,The following statement contains a magic number: results.Errors[2].PropertyName.ShouldEqual("Item1.Orders[2].ProductName");
Magic Number,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,Collection_should_be_explicitly_included_with_expression,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,Collection_should_be_explicitly_included_with_string,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,Condition_should_work_with_child_collection,The following statement contains a magic number: var validator = new TestValidator() {  				v => v.RuleFor(x => x.Orders).SetCollectionValidator(y => new OrderValidator(y)).When(x => x.Orders.Count == 4 /*there are only 3*/)  			};
Magic Number,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,Async_condition_should_work_with_child_collection,The following statement contains a magic number: var validator = new TestValidator() {  				v => v.RuleFor(x => x.Orders).SetCollectionValidator(y => new OrderValidator(y)).WhenAsync(async (x' c) => x.Orders.Count == 4 /*there are only 3*/)  			};
Magic Number,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,Skips_null_items,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,Should_work_with_top_level_collection_validator,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,CollectionValidatorWithParentTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\CollectionValidatorWithParentTests.cs,Should_work_with_top_level_collection_validator_and_overriden_name,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,ComparerTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ComparerTester.cs,Should_fail_with_different_type_values,The following statement contains a magic number: double myDouble = 100.12;
Magic Number,FluentValidation.Tests,ComparerTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ComparerTester.cs,Should_fail_with_different_type_values,The following statement contains a magic number: long myLong = 100;
Magic Number,FluentValidation.Tests,ComparerTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ComparerTester.cs,Should_succeed_with_same_type_values,The following statement contains a magic number: double myDouble = 100.12;
Magic Number,FluentValidation.Tests,ComparerTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ComparerTester.cs,Should_succeed_with_same_type_values,The following statement contains a magic number: double myOther = 100.12;
Magic Number,FluentValidation.Tests,ComparerTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ComparerTester.cs,Should_succeed_with_same_object_values,The following statement contains a magic number: var first = new MyObject {Id = 5};
Magic Number,FluentValidation.Tests,ComparerTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ComparerTester.cs,Should_succeed_with_same_object_values,The following statement contains a magic number: var second = new MyObject {Id = 5};
Magic Number,FluentValidation.Tests,ComparerTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ComparerTester.cs,Should_fail_with_different_object_values,The following statement contains a magic number: var first = new MyObject {Id = 5};
Magic Number,FluentValidation.Tests,ComparerTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ComparerTester.cs,Should_fail_with_different_object_values,The following statement contains a magic number: var second = new MyObject {Id = 6};
Magic Number,FluentValidation.Tests,ComparerTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ComparerTester.cs,Should_fail_with_different_object_types,The following statement contains a magic number: var first = new MyObject {Id = 5};
Magic Number,FluentValidation.Tests,ComparerTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ComparerTester.cs,Should_fail_with_different_object_types,The following statement contains a magic number: var second = 5;
Magic Number,FluentValidation.Tests,ComplexValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ComplexValidationTester.cs,ComplexValidationTester,The following statement contains a magic number: person = new Person {  				Address = new Address {  					Country = new Country()  				}'  				Orders = new List<Order> {  					new Order() { Amount = 5 }'                      new Order() { ProductName = "Foo" }    	                  }  			};
Magic Number,FluentValidation.Tests,ComplexValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ComplexValidationTester.cs,Validates_complex_property,The following statement contains a magic number: results.Errors.Count.ShouldEqual(3);
Magic Number,FluentValidation.Tests,ComplexValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ComplexValidationTester.cs,Validates_complex_property,The following statement contains a magic number: results.Errors[2].PropertyName.ShouldEqual("Address.Country.Name");
Magic Number,FluentValidation.Tests,ComplexValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ComplexValidationTester.cs,Should_allow_normal_rules_and_complex_property_on_same_property,The following statement contains a magic number: result.Errors.Count.ShouldEqual(4);
Magic Number,FluentValidation.Tests,ComplexValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ComplexValidationTester.cs,Explicitly_included_properties_should_be_propagated_to_nested_validators,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,ComplexValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ComplexValidationTester.cs,Explicitly_included_properties_should_be_propagated_to_nested_validators_using_strings,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,DefaultValidatorExtensionTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\DefaultValidatorExtensionTester.cs,Length_should_create_LengthValidator,The following statement contains a magic number: validator.RuleFor(x => x.Surname).Length(1' 20);
Magic Number,FluentValidation.Tests,DefaultValidatorExtensionTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\DefaultValidatorExtensionTester.cs,Length_should_create_ExactLengthValidator,The following statement contains a magic number: validator.RuleFor(x => x.Surname).Length(5);
Magic Number,FluentValidation.Tests,DefaultValidatorExtensionTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\DefaultValidatorExtensionTester.cs,Length_should_create_MaximumLengthValidator,The following statement contains a magic number: validator.RuleFor(x => x.Surname).MaximumLength(5);
Magic Number,FluentValidation.Tests,DefaultValidatorExtensionTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\DefaultValidatorExtensionTester.cs,Length_should_create_MinimumLengthValidator,The following statement contains a magic number: validator.RuleFor(x => x.Surname).MinimumLength(5);
Magic Number,FluentValidation.Tests,DefaultValidatorExtensionTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\DefaultValidatorExtensionTester.cs,ScalePrecision_should_create_ScalePrecisionValidator,The following statement contains a magic number: validator.RuleFor(x => x.Discount).ScalePrecision(2' 5);
Magic Number,FluentValidation.Tests,DefaultValidatorExtensionTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\DefaultValidatorExtensionTester.cs,ScalePrecision_should_create_ScalePrecisionValidator,The following statement contains a magic number: validator.RuleFor(x => x.Discount).ScalePrecision(2' 5);
Magic Number,FluentValidation.Tests,DefaultValidatorExtensionTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\DefaultValidatorExtensionTester.cs,ScalePrecision_should_create_ScalePrecisionValidator_with_ignore_trailing_zeros,The following statement contains a magic number: validator.RuleFor(x => x.Discount).ScalePrecision(2' 5' true);
Magic Number,FluentValidation.Tests,DefaultValidatorExtensionTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\DefaultValidatorExtensionTester.cs,ScalePrecision_should_create_ScalePrecisionValidator_with_ignore_trailing_zeros,The following statement contains a magic number: validator.RuleFor(x => x.Discount).ScalePrecision(2' 5' true);
Magic Number,FluentValidation.Tests,EnumValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,When_the_enum_is_initialized_with_invalid_value_then_the_validator_should_fail,The following statement contains a magic number: var result = validator.Validate(new Person { Gender = (EnumGender)3 });
Magic Number,FluentValidation.Tests,EnumValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,Nullable_enum_invalid_when_bad_value_specified,The following statement contains a magic number: var result = validator.Validate(new Foo() { Gender = (EnumGender)42 });
Magic Number,FluentValidation.Tests,EnumValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,Flags_enum_validates_correctly_when_using_zero_value,The following statement contains a magic number: result.Errors.Count().ShouldEqual(2);
Magic Number,FluentValidation.Tests,FlagsEnumPoco,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,PopulateWithInvalidPositiveValues,The following statement contains a magic number: SByteValue = (SByteEnum)123;
Magic Number,FluentValidation.Tests,FlagsEnumPoco,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,PopulateWithInvalidPositiveValues,The following statement contains a magic number: ByteValue = (ByteEnum)123;
Magic Number,FluentValidation.Tests,FlagsEnumPoco,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,PopulateWithInvalidPositiveValues,The following statement contains a magic number: Int16Value = (Int16Enum)123;
Magic Number,FluentValidation.Tests,FlagsEnumPoco,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,PopulateWithInvalidPositiveValues,The following statement contains a magic number: UInt16Value = (UInt16Enum)123;
Magic Number,FluentValidation.Tests,FlagsEnumPoco,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,PopulateWithInvalidPositiveValues,The following statement contains a magic number: Int32Value = (Int32Enum)123;
Magic Number,FluentValidation.Tests,FlagsEnumPoco,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,PopulateWithInvalidPositiveValues,The following statement contains a magic number: UInt32Value = (UInt32Enum)123;
Magic Number,FluentValidation.Tests,FlagsEnumPoco,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,PopulateWithInvalidPositiveValues,The following statement contains a magic number: Int64Value = (Int64Enum)123;
Magic Number,FluentValidation.Tests,FlagsEnumPoco,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,PopulateWithInvalidPositiveValues,The following statement contains a magic number: UInt64Value = (UInt64Enum)123;
Magic Number,FluentValidation.Tests,FlagsEnumPoco,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,PopulateWithInvalidPositiveValues,The following statement contains a magic number: EnumWithNegativesValue = (EnumWithNegatives)123;
Magic Number,FluentValidation.Tests,FlagsEnumPoco,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,PopulateWithInvalidPositiveValues,The following statement contains a magic number: EnumWithOverlappingFlagsValue = (EnumWithOverlappingFlags)123;
Magic Number,FluentValidation.Tests,FlagsEnumPoco,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,PopulateWithInvalidNegativeValues,The following statement contains a magic number: SByteValue = (SByteEnum)(-123);
Magic Number,FluentValidation.Tests,FlagsEnumPoco,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,PopulateWithInvalidNegativeValues,The following statement contains a magic number: Int16Value = (Int16Enum)(-123);
Magic Number,FluentValidation.Tests,FlagsEnumPoco,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,PopulateWithInvalidNegativeValues,The following statement contains a magic number: Int32Value = (Int32Enum)(-123);
Magic Number,FluentValidation.Tests,FlagsEnumPoco,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,PopulateWithInvalidNegativeValues,The following statement contains a magic number: Int64Value = (Int64Enum)(-123);
Magic Number,FluentValidation.Tests,FlagsEnumPoco,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,PopulateWithInvalidNegativeValues,The following statement contains a magic number: EnumWithNegativesValue = (EnumWithNegatives)(-123);
Magic Number,FluentValidation.Tests,FlagsEnumPoco,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\EnumValidatorTests.cs,PopulateWithInvalidNegativeValues,The following statement contains a magic number: EnumWithOverlappingFlagsValue = (EnumWithOverlappingFlags)(-123);
Magic Number,FluentValidation.Tests,ExactLengthValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExactLengthValidatorTester.cs,When_the_text_is_an_exact_length_the_validator_should_pass,The following statement contains a magic number: var validator = new TestValidator { v => v.RuleFor(x => x.Surname).Length(4) };
Magic Number,FluentValidation.Tests,ExactLengthValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExactLengthValidatorTester.cs,When_the_text_length_is_smaller_the_validator_should_fail,The following statement contains a magic number: var validator = new TestValidator {v => v.RuleFor(x => x.Surname).Length(10) };
Magic Number,FluentValidation.Tests,ExactLengthValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExactLengthValidatorTester.cs,When_the_validator_fails_the_error_message_should_be_set,The following statement contains a magic number: var validator = new TestValidator { v => v.RuleFor(x => x.Surname).Length(2) };
Magic Number,FluentValidation.Tests,ExactLengthValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExactLengthValidatorTester.cs,Min_and_max_properties_should_be_set,The following statement contains a magic number: var validator = new ExactLengthValidator(5);
Magic Number,FluentValidation.Tests,ExactLengthValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExactLengthValidatorTester.cs,Min_and_max_properties_should_be_set,The following statement contains a magic number: validator.Min.ShouldEqual(5);
Magic Number,FluentValidation.Tests,ExactLengthValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExactLengthValidatorTester.cs,Min_and_max_properties_should_be_set,The following statement contains a magic number: validator.Max.ShouldEqual(5);
Magic Number,FluentValidation.Tests,ExactLengthValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExactLengthValidatorTester.cs,When_exact_length_rule_failes_error_should_have_exact_length_error_errorcode,The following statement contains a magic number: var validator = new TestValidator { v => v.RuleFor(x => x.Surname).Length(2) };
Magic Number,FluentValidation.Tests,ExactLengthValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExactLengthValidatorTester.cs,When_exact_length_rule_failes_error_should_have_exact_length_error_errorcode,The following statement contains a magic number: error.FormattedMessagePlaceholderValues.Count.ShouldEqual(5);
Magic Number,FluentValidation.Tests,ExactLengthValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExactLengthValidatorTester.cs,When_exact_length_rule_failes_error_should_have_exact_length_error_errorcode,The following statement contains a magic number: error.FormattedMessagePlaceholderValues["MinLength"].ShouldEqual(2);
Magic Number,FluentValidation.Tests,ExactLengthValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExactLengthValidatorTester.cs,When_exact_length_rule_failes_error_should_have_exact_length_error_errorcode,The following statement contains a magic number: error.FormattedMessagePlaceholderValues["MaxLength"].ShouldEqual(2);
Magic Number,FluentValidation.Tests,ExactLengthValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExactLengthValidatorTester.cs,When_exact_length_rule_failes_error_should_have_exact_length_error_errorcode,The following statement contains a magic number: error.FormattedMessagePlaceholderValues["TotalLength"].ShouldEqual(4);
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,ExclusiveBetweenValidatorTests,The following statement contains a magic number: fromDate = new DateTime(2009' 1' 1);
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,ExclusiveBetweenValidatorTests,The following statement contains a magic number: toDate = new DateTime(2009' 12' 31);
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,ExclusiveBetweenValidatorTests,The following statement contains a magic number: toDate = new DateTime(2009' 12' 31);
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,ExclusiveBetweenValidatorTests,The following statement contains a magic number: toDate = new DateTime(2009' 12' 31);
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,When_the_value_is_between_the_range_specified_then_the_validator_should_pass,The following statement contains a magic number: var validator = new TestValidator { v => v.RuleFor(x => x.Id).ExclusiveBetween(1' 10) };
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,When_the_value_is_between_the_range_specified_then_the_validator_should_pass,The following statement contains a magic number: var result = validator.Validate(new Person { Id = 5 });
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,When_the_value_is_smaller_than_the_range_then_the_validator_should_fail,The following statement contains a magic number: var validator = new TestValidator { v => v.RuleFor(x => x.Id).ExclusiveBetween(1' 10) };
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,When_the_text_is_larger_than_the_range_then_the_validator_should_fail,The following statement contains a magic number: var validator = new TestValidator { v => v.RuleFor(x => x.Id).ExclusiveBetween(1' 10) };
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,When_the_text_is_larger_than_the_range_then_the_validator_should_fail,The following statement contains a magic number: var result = validator.Validate(new Person { Id = 11 });
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,When_the_value_is_exactly_the_size_of_the_upper_bound_then_the_validator_should_fail,The following statement contains a magic number: var validator = new TestValidator { v => v.RuleFor(x => x.Id).ExclusiveBetween(1' 10) };
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,When_the_value_is_exactly_the_size_of_the_upper_bound_then_the_validator_should_fail,The following statement contains a magic number: var result = validator.Validate(new Person { Id = 10 });
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,When_the_value_is_exactly_the_size_of_the_lower_bound_then_the_validator_should_fail,The following statement contains a magic number: var validator = new TestValidator { v => v.RuleFor(x => x.Id).ExclusiveBetween(1' 10) };
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,When_the_to_is_smaller_than_the_from_then_the_validator_should_throw,The following statement contains a magic number: typeof(ArgumentOutOfRangeException).ShouldBeThrownBy(() => new TestValidator{v => v.RuleFor(x => x.Id).ExclusiveBetween(10' 1)});
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,When_the_validator_fails_the_error_message_should_be_set,The following statement contains a magic number: var validator = new TestValidator { v => v.RuleFor(x => x.Id).ExclusiveBetween(1' 10) };
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,To_and_from_properties_should_be_set,The following statement contains a magic number: var propertyValidator = new ExclusiveBetweenValidator(1' 10);
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,To_and_from_properties_should_be_set,The following statement contains a magic number: propertyValidator.To.ShouldEqual(10);
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,Validates_with_nullable_when_property_is_null,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.NullableInt).ExclusiveBetween(1' 5));
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,Validates_with_nullable_when_property_not_null,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.NullableInt).ExclusiveBetween(1' 5));
Magic Number,FluentValidation.Tests,ExclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ExclusiveBetweenValidatorTests.cs,Validates_with_nullable_when_property_not_null,The following statement contains a magic number: var result = validator.Validate(new Person { NullableInt = 10 });
Magic Number,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,ForEachRuleTests,The following statement contains a magic number: _person = new Person() {  				Orders = new List<Order>() {  					new Order { Amount = 5}'  					new Order { ProductName = "Foo"}  				}  			};
Magic Number,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,Executes_rule_for_each_item_in_collection,The following statement contains a magic number: result.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,Executes_rule_for_each_item_in_collection_async,The following statement contains a magic number: result.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,Regular_rules_can_drop_into_RuleForEach,The following statement contains a magic number: validator.RuleFor(x => x.Children)  				.Must(x => x.Count > 2).WithMessage("Foo")  				.ForEach(forEachElement => {  					forEachElement.NotNull().WithMessage("Bar");  				});
Magic Number,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,Regular_rules_can_drop_into_RuleForEach,The following statement contains a magic number: result.Errors.Count.ShouldEqual(3);
Magic Number,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,Regular_rules_can_drop_into_RuleForEach,The following statement contains a magic number: result.Errors[2].ErrorMessage.ShouldEqual("Bar");
Magic Number,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,Regular_rules_can_drop_into_RuleForEach,The following statement contains a magic number: result.Errors[2].PropertyName.ShouldEqual("Children[1]");
Magic Number,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,Validates_collection,The following statement contains a magic number: results.Errors.Count.ShouldEqual(3);
Magic Number,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,Validates_collection,The following statement contains a magic number: results.Errors[2].PropertyName.ShouldEqual("Orders[1].Amount");
Magic Number,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,Collection_should_be_explicitly_included_with_expression,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,Collection_should_be_explicitly_included_with_string,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,Condition_should_work_with_child_collection,The following statement contains a magic number: var validator = new TestValidator() {  				v => v.RuleForEach(x => x.Orders).SetValidator(new OrderValidator()).When(x => x.Orders.Count == 3 /*there are only 2*/)  			};
Magic Number,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,Async_condition_should_work_with_child_collection,The following statement contains a magic number: var validator = new TestValidator() {  	                                                v => v.RuleForEach(x => x.Orders).SetValidator(new OrderValidator()).WhenAsync(async (x'c) => x.Orders.Count == 3 /*there are only 2*/)  	                                            };
Magic Number,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,Skips_null_items,The following statement contains a magic number: results.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,ForEachRuleTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ForEachRuleTests.cs,Top_level_collection,The following statement contains a magic number: result.Errors.Count.ShouldEqual(4);
Magic Number,FluentValidation.Tests,GreaterThanOrEqualToValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\GreaterThanOrEqualToValidatorTester.cs,Should_succeed_when_greater_than_input,The following statement contains a magic number: var result = validator.Validate(new Person{Id=2});
Magic Number,FluentValidation.Tests,GreaterThanOrEqualToValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\GreaterThanOrEqualToValidatorTester.cs,Validates_with_nullable_when_property_is_null,The following statement contains a magic number: validator = new TestValidator(v => v.RuleFor(x => x.NullableInt).GreaterThanOrEqualTo(5));
Magic Number,FluentValidation.Tests,GreaterThanOrEqualToValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\GreaterThanOrEqualToValidatorTester.cs,Validates_with_nullable_when_property_not_null,The following statement contains a magic number: validator = new TestValidator(v => v.RuleFor(x => x.NullableInt).GreaterThanOrEqualTo(5));
Magic Number,FluentValidation.Tests,GreaterThanOrEqualToValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\GreaterThanOrEqualToValidatorTester.cs,Should_localize_value,The following statement contains a magic number: orderValidator.RuleFor(x => x.Amount).GreaterThanOrEqualTo(1.2M).WithMessage("{ComparisonValue}");
Magic Number,FluentValidation.Tests,GreaterThanOrEqualToValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\GreaterThanOrEqualToValidatorTester.cs,Validates_with_nullable_when_property_is_null_cross_property,The following statement contains a magic number: var result = validator.Validate(new Person { Id = 5 });
Magic Number,FluentValidation.Tests,GreaterThanOrEqualToValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\GreaterThanOrEqualToValidatorTester.cs,Validates_with_nullable_when_property_not_null_cross_property,The following statement contains a magic number: var result = validator.Validate(new Person { NullableInt = 1' Id = 5 });
Magic Number,FluentValidation.Tests,GreaterThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\GreaterThanValidatorTester.cs,Should_succeed_when_greater_than_input,The following statement contains a magic number: var result = validator.Validate(new Person{Id=2});
Magic Number,FluentValidation.Tests,GreaterThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\GreaterThanValidatorTester.cs,Validates_with_nullable_when_property_is_null,The following statement contains a magic number: validator = new TestValidator(v => v.RuleFor(x => x.NullableInt).GreaterThan(5));
Magic Number,FluentValidation.Tests,GreaterThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\GreaterThanValidatorTester.cs,Validates_with_nullable_when_property_not_null,The following statement contains a magic number: validator = new TestValidator(v => v.RuleFor(x => x.NullableInt).GreaterThan(5));
Magic Number,FluentValidation.Tests,GreaterThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\GreaterThanValidatorTester.cs,Validates_with_nullable_when_property_is_null_cross_property,The following statement contains a magic number: var result = validator.Validate(new Person { Id = 5 });
Magic Number,FluentValidation.Tests,GreaterThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\GreaterThanValidatorTester.cs,Validates_with_nullable_when_property_not_null_cross_property,The following statement contains a magic number: var result = validator.Validate(new Person { NullableInt = 1' Id = 5 });
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,InclusiveBetweenValidatorTests,The following statement contains a magic number: fromDate = new DateTime(2009' 1' 1);
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,InclusiveBetweenValidatorTests,The following statement contains a magic number: toDate = new DateTime(2009' 12' 31);
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,InclusiveBetweenValidatorTests,The following statement contains a magic number: toDate = new DateTime(2009' 12' 31);
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,InclusiveBetweenValidatorTests,The following statement contains a magic number: toDate = new DateTime(2009' 12' 31);
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,When_the_value_is_between_the_range_specified_then_the_validator_should_pass,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Id).InclusiveBetween(1' 10));
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,When_the_value_is_between_the_range_specified_then_the_validator_should_pass,The following statement contains a magic number: var result = validator.Validate(new Person { Id = 5 });
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,When_the_value_is_smaller_than_the_range_then_the_validator_should_fail,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Id).InclusiveBetween(1' 10));
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,When_the_text_is_larger_than_the_range_then_the_validator_should_fail,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Id).InclusiveBetween(1' 10));
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,When_the_text_is_larger_than_the_range_then_the_validator_should_fail,The following statement contains a magic number: var result = validator.Validate(new Person() { Id = 11 });
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,When_the_value_is_exactly_the_size_of_the_upper_bound_then_the_validator_should_pass,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Id).InclusiveBetween(1' 10));
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,When_the_value_is_exactly_the_size_of_the_upper_bound_then_the_validator_should_pass,The following statement contains a magic number: var result = validator.Validate(new Person { Id = 10 });
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,When_the_value_is_exactly_the_size_of_the_lower_bound_then_the_validator_should_pass,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Id).InclusiveBetween(1' 10));
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,When_the_to_is_smaller_than_the_from_then_the_validator_should_throw,The following statement contains a magic number: typeof(ArgumentOutOfRangeException).ShouldBeThrownBy(() => 	new TestValidator(v => v.RuleFor(x => x.Id).InclusiveBetween(10' 1)));
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,When_the_validator_fails_the_error_message_should_be_set,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Id).InclusiveBetween(1' 10));
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,To_and_from_properties_should_be_set,The following statement contains a magic number: var validator = new InclusiveBetweenValidator(1' 10);
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,To_and_from_properties_should_be_set,The following statement contains a magic number: validator.To.ShouldEqual(10);
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,Validates_with_nullable_when_property_is_null,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.NullableInt).InclusiveBetween(1' 5));
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,Validates_with_nullable_when_property_not_null,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.NullableInt).InclusiveBetween(1' 5));
Magic Number,FluentValidation.Tests,InclusiveBetweenValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InclusiveBetweenValidatorTests.cs,Validates_with_nullable_when_property_not_null,The following statement contains a magic number: var result = validator.Validate(new Person { NullableInt = 10 });
Magic Number,FluentValidation.Tests,InlineValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\InlineValidatorTester.cs,Uses_inline_validator_to_build_rules,The following statement contains a magic number: result.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_text_is_between_the_range_specified_then_the_validator_should_pass,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Surname).Length(1' 10));
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_text_is_between_the_lambda_range_specified_then_the_validator_should_pass,The following statement contains a magic number: var result = validator.Validate(new Person { Surname = "Test"' MinLength = 1' MaxLength = 10 });
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_text_is_smaller_than_the_range_then_the_validator_should_fail,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Surname).Length(5' 10));
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_text_is_smaller_than_the_range_then_the_validator_should_fail,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Surname).Length(5' 10));
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_text_is_smaller_than_the_lambda_range_then_the_validator_should_fail,The following statement contains a magic number: var result = validator.Validate(new Person { Surname = "Test"' MinLength = 5' MaxLength = 10 });
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_text_is_smaller_than_the_lambda_range_then_the_validator_should_fail,The following statement contains a magic number: var result = validator.Validate(new Person { Surname = "Test"' MinLength = 5' MaxLength = 10 });
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_text_is_larger_than_the_range_then_the_validator_should_fail,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Surname).Length(1' 2));
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_text_is_larger_than_the_lambda_range_then_the_validator_should_fail,The following statement contains a magic number: var result = validator.Validate(new Person { Surname = "Test"' MinLength = 1' MaxLength = 2 });
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_text_is_exactly_the_size_of_the_upper_bound_then_the_validator_should_pass,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Surname).Length(1' 4));
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_text_is_exactly_the_size_of_the_lambda_upper_bound_then_the_validator_should_pass,The following statement contains a magic number: var result = validator.Validate(new Person { Surname = "Test"' MinLength = 1' MaxLength = 4 });
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_text_is_exactly_the_size_of_the_lower_bound_then_the_validator_should_pass,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Surname).Length(4' 5));
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_text_is_exactly_the_size_of_the_lower_bound_then_the_validator_should_pass,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Surname).Length(4' 5));
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_text_is_exactly_the_size_of_the_lambda_lower_bound_then_the_validator_should_pass,The following statement contains a magic number: var result = validator.Validate(new Person { Surname = "Test"' MinLength = 4' MaxLength = 5 });
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_text_is_exactly_the_size_of_the_lambda_lower_bound_then_the_validator_should_pass,The following statement contains a magic number: var result = validator.Validate(new Person { Surname = "Test"' MinLength = 4' MaxLength = 5 });
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_max_is_smaller_than_the_min_then_the_validator_should_throw,The following statement contains a magic number: typeof(ArgumentOutOfRangeException).ShouldBeThrownBy(() =>   				new TestValidator(v => v.RuleFor(x => x.Surname).Length(10'1))    				);
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_validator_fails_the_error_message_should_be_set,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Surname).Length(1' 2));
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,Min_and_max_properties_should_be_set,The following statement contains a magic number: var validator = new LengthValidator(1' 5);
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,Min_and_max_properties_should_be_set,The following statement contains a magic number: validator.Max.ShouldEqual(5);
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_input_is_null_then_the_validator_should_pass,The following statement contains a magic number: var validator = new TestValidator {  				v => v.RuleFor(x => x.Surname).Length(5)  			};
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_minlength_validator_fails_the_error_message_should_be_set,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Surname).MinimumLength(4));
Magic Number,FluentValidation.Tests,LengthValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LengthValidatorTests.cs,When_the_maxlength_validator_fails_the_error_message_should_be_set,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Surname).MaximumLength(4));
Magic Number,FluentValidation.Tests,LessThanOrEqualToValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanOrEqualToValidatorTester.cs,Should_fail_when_greater_than_input,The following statement contains a magic number: var result = validator.Validate(new Person{Id=2});
Magic Number,FluentValidation.Tests,LessThanOrEqualToValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanOrEqualToValidatorTester.cs,Should_succeed_when_less_than_input_using_different_types,The following statement contains a magic number: new LessThanOrEqualValidator(100M).IsValid(20D' 100M).ShouldBeTrue();
Magic Number,FluentValidation.Tests,LessThanOrEqualToValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanOrEqualToValidatorTester.cs,Should_succeed_when_less_than_input_using_different_types,The following statement contains a magic number: new LessThanOrEqualValidator(100M).IsValid(20D' 100M).ShouldBeTrue();
Magic Number,FluentValidation.Tests,LessThanOrEqualToValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanOrEqualToValidatorTester.cs,Should_succeed_when_less_than_input_using_different_types,The following statement contains a magic number: new LessThanOrEqualValidator(100M).IsValid(20D' 100M).ShouldBeTrue();
Magic Number,FluentValidation.Tests,LessThanOrEqualToValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanOrEqualToValidatorTester.cs,Should_set_default_error_when_validation_fails,The following statement contains a magic number: var result = validator.Validate(new Person{Id=2});
Magic Number,FluentValidation.Tests,LessThanOrEqualToValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanOrEqualToValidatorTester.cs,Validates_with_nullable_when_property_is_null,The following statement contains a magic number: validator = new TestValidator(v => v.RuleFor(x => x.NullableInt).LessThanOrEqualTo(5));
Magic Number,FluentValidation.Tests,LessThanOrEqualToValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanOrEqualToValidatorTester.cs,Validates_with_nullable_when_property_not_null,The following statement contains a magic number: validator = new TestValidator(v => v.RuleFor(x => x.NullableInt).LessThanOrEqualTo(5));
Magic Number,FluentValidation.Tests,LessThanOrEqualToValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanOrEqualToValidatorTester.cs,Validates_with_nullable_when_property_not_null,The following statement contains a magic number: var result = validator.Validate(new Person { NullableInt = 10 });
Magic Number,FluentValidation.Tests,LessThanOrEqualToValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanOrEqualToValidatorTester.cs,Validates_with_nullable_when_property_is_null_cross_property,The following statement contains a magic number: var result = validator.Validate(new Person { Id = 5 });
Magic Number,FluentValidation.Tests,LessThanOrEqualToValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanOrEqualToValidatorTester.cs,Validates_with_nullable_when_property_not_null_cross_property,The following statement contains a magic number: var result = validator.Validate(new Person { NullableInt = 10' Id = 5 });
Magic Number,FluentValidation.Tests,LessThanOrEqualToValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanOrEqualToValidatorTester.cs,Validates_with_nullable_when_property_not_null_cross_property,The following statement contains a magic number: var result = validator.Validate(new Person { NullableInt = 10' Id = 5 });
Magic Number,FluentValidation.Tests,LessThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanValidatorTester.cs,Should_fail_when_greater_than_input,The following statement contains a magic number: var result = validator.Validate(new Person{Id=2});
Magic Number,FluentValidation.Tests,LessThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanValidatorTester.cs,Should_set_default_validation_message_when_validation_fails,The following statement contains a magic number: var result = validator.Validate(new Person{Id=2});
Magic Number,FluentValidation.Tests,LessThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanValidatorTester.cs,Validates_against_property,The following statement contains a magic number: var result = validator.Validate(new Person { Id = 2' AnotherInt = 1 });
Magic Number,FluentValidation.Tests,LessThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanValidatorTester.cs,Should_not_throw_when_value_to_compare_is_of_different_type,The following statement contains a magic number: new LessThanValidator(10M).IsValid(5M' 10).ShouldBeTrue();
Magic Number,FluentValidation.Tests,LessThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanValidatorTester.cs,Should_not_throw_when_value_to_compare_is_of_different_type,The following statement contains a magic number: new LessThanValidator(10M).IsValid(5M' 10).ShouldBeTrue();
Magic Number,FluentValidation.Tests,LessThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanValidatorTester.cs,Should_not_throw_when_value_to_compare_is_of_different_type,The following statement contains a magic number: new LessThanValidator(10M).IsValid(5M' 10).ShouldBeTrue();
Magic Number,FluentValidation.Tests,LessThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanValidatorTester.cs,Extracts_property_from_constant_using_expression,The following statement contains a magic number: IComparisonValidator validator = new LessThanValidator(2);
Magic Number,FluentValidation.Tests,LessThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanValidatorTester.cs,Extracts_property_from_constant_using_expression,The following statement contains a magic number: validator.ValueToCompare.ShouldEqual(2);
Magic Number,FluentValidation.Tests,LessThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanValidatorTester.cs,Validates_with_nullable_when_property_is_null,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.NullableInt).LessThan(5));
Magic Number,FluentValidation.Tests,LessThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanValidatorTester.cs,Validates_with_nullable_when_property_not_null,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.NullableInt).LessThan(5));
Magic Number,FluentValidation.Tests,LessThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanValidatorTester.cs,Validates_with_nullable_when_property_not_null,The following statement contains a magic number: var result = validator.Validate(new Person { NullableInt = 10 });
Magic Number,FluentValidation.Tests,LessThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanValidatorTester.cs,Validates_with_nullable_when_property_null_cross_property,The following statement contains a magic number: var result = validator.Validate(new Person {Id = 5});
Magic Number,FluentValidation.Tests,LessThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanValidatorTester.cs,Validates_with_nullable_when_property_not_null_cross_property,The following statement contains a magic number: var result = validator.Validate(new Person {NullableInt = 10' Id = 5});
Magic Number,FluentValidation.Tests,LessThanValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\LessThanValidatorTester.cs,Validates_with_nullable_when_property_not_null_cross_property,The following statement contains a magic number: var result = validator.Validate(new Person {NullableInt = 10' Id = 5});
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Format_property_value,The following statement contains a magic number: string result = formatter  				.AppendPropertyValue(123.45)  				.BuildMessage("{PropertyValue:#.#}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Understands_numeric_formats,The following statement contains a magic number: string result = formatter  				.AppendArgument("d"' 123)  				.AppendArgument("e"' 1052.0329112756)  				.AppendArgument("c"' -123.456789)  				.AppendArgument("f"' 1234.567)  				.AppendArgument("p"' 0.912)  				.BuildMessage("{c:c3} {c:c4} {f:f} {p:p} {d:d} {e:e} {e:e2} {d:0000}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Understands_numeric_formats,The following statement contains a magic number: string result = formatter  				.AppendArgument("d"' 123)  				.AppendArgument("e"' 1052.0329112756)  				.AppendArgument("c"' -123.456789)  				.AppendArgument("f"' 1234.567)  				.AppendArgument("p"' 0.912)  				.BuildMessage("{c:c3} {c:c4} {f:f} {p:p} {d:d} {e:e} {e:e2} {d:0000}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Understands_numeric_formats,The following statement contains a magic number: string result = formatter  				.AppendArgument("d"' 123)  				.AppendArgument("e"' 1052.0329112756)  				.AppendArgument("c"' -123.456789)  				.AppendArgument("f"' 1234.567)  				.AppendArgument("p"' 0.912)  				.BuildMessage("{c:c3} {c:c4} {f:f} {p:p} {d:d} {e:e} {e:e2} {d:0000}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Understands_numeric_formats,The following statement contains a magic number: string result = formatter  				.AppendArgument("d"' 123)  				.AppendArgument("e"' 1052.0329112756)  				.AppendArgument("c"' -123.456789)  				.AppendArgument("f"' 1234.567)  				.AppendArgument("p"' 0.912)  				.BuildMessage("{c:c3} {c:c4} {f:f} {p:p} {d:d} {e:e} {e:e2} {d:0000}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Understands_numeric_formats,The following statement contains a magic number: string result = formatter  				.AppendArgument("d"' 123)  				.AppendArgument("e"' 1052.0329112756)  				.AppendArgument("c"' -123.456789)  				.AppendArgument("f"' 1234.567)  				.AppendArgument("p"' 0.912)  				.BuildMessage("{c:c3} {c:c4} {f:f} {p:p} {d:d} {e:e} {e:e2} {d:0000}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Understands_numeric_formats,The following statement contains a magic number: result.ShouldEqual($"{-123.456789:c3} {-123.456789:c4} {1234.567:f} {0.912:p} {123:d} {1052.0329112756:e} {1052.0329112756:e2} {123:0000}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Understands_numeric_formats,The following statement contains a magic number: result.ShouldEqual($"{-123.456789:c3} {-123.456789:c4} {1234.567:f} {0.912:p} {123:d} {1052.0329112756:e} {1052.0329112756:e2} {123:0000}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Understands_numeric_formats,The following statement contains a magic number: result.ShouldEqual($"{-123.456789:c3} {-123.456789:c4} {1234.567:f} {0.912:p} {123:d} {1052.0329112756:e} {1052.0329112756:e2} {123:0000}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Understands_numeric_formats,The following statement contains a magic number: result.ShouldEqual($"{-123.456789:c3} {-123.456789:c4} {1234.567:f} {0.912:p} {123:d} {1052.0329112756:e} {1052.0329112756:e2} {123:0000}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Understands_numeric_formats,The following statement contains a magic number: result.ShouldEqual($"{-123.456789:c3} {-123.456789:c4} {1234.567:f} {0.912:p} {123:d} {1052.0329112756:e} {1052.0329112756:e2} {123:0000}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Understands_numeric_formats,The following statement contains a magic number: result.ShouldEqual($"{-123.456789:c3} {-123.456789:c4} {1234.567:f} {0.912:p} {123:d} {1052.0329112756:e} {1052.0329112756:e2} {123:0000}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Understands_numeric_formats,The following statement contains a magic number: result.ShouldEqual($"{-123.456789:c3} {-123.456789:c4} {1234.567:f} {0.912:p} {123:d} {1052.0329112756:e} {1052.0329112756:e2} {123:0000}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Understands_numeric_formats,The following statement contains a magic number: result.ShouldEqual($"{-123.456789:c3} {-123.456789:c4} {1234.567:f} {0.912:p} {123:d} {1052.0329112756:e} {1052.0329112756:e2} {123:0000}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Adds_formatted_argument_and_custom_arguments,The following statement contains a magic number: string result = formatter  				.AppendArgument("foo"' 123.43)  				.AppendAdditionalArguments("baz")  				.BuildMessage("{foo:#.#} {0}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Adds_formatted_argument_and_formatted_custom_arguments,The following statement contains a magic number: string result = formatter  				.AppendArgument("foo"' 123.43)  				.AppendAdditionalArguments(.6789)  				.BuildMessage("{foo:#.#} {0:p1}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Adds_formatted_argument_and_formatted_custom_arguments,The following statement contains a magic number: string result = formatter  				.AppendArgument("foo"' 123.43)  				.AppendAdditionalArguments(.6789)  				.BuildMessage("{foo:#.#} {0:p1}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Adds_formatted_argument_and_formatted_custom_arguments,The following statement contains a magic number: result.ShouldEqual($"{123.43:#.#} {.6789:p1}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Adds_formatted_argument_and_formatted_custom_arguments,The following statement contains a magic number: result.ShouldEqual($"{123.43:#.#} {.6789:p1}");
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Should_ignore_unknown_numbered_parameters,The following statement contains a magic number: var now = new DateTime(2018' 2' 1);
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Should_ignore_unknown_numbered_parameters,The following statement contains a magic number: var now = new DateTime(2018' 2' 1);
Magic Number,FluentValidation.Tests,MessageFormatterTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\MessageFormatterTests.cs,Should_format_arguments_when_there_are_formattable_arguments,The following statement contains a magic number: string result = mock  				.AppendPropertyValue(123)  				.BuildMessage("{PropertyValue:d}");
Magic Number,FluentValidation.Tests,OnFailureTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\OnFailureTests.cs,OnFailure_called_for_each_failed_rule,The following statement contains a magic number: _validator.RuleFor(person => person.Age).GreaterThanOrEqualTo(18).OnFailure((person' ctx) => {  				invoked += 1;  			});
Magic Number,FluentValidation.Tests,OnFailureTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\OnFailureTests.cs,OnFailure_called_for_each_failed_rule,The following statement contains a magic number: _validator.Validate(new Person { Forename = "John"' Age = 17 });
Magic Number,FluentValidation.Tests,OnFailureTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\OnFailureTests.cs,OnFailure_called_for_each_failed_rule,The following statement contains a magic number: invoked.ShouldEqual(4);
Magic Number,FluentValidation.Tests,OnFailureTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\OnFailureTests.cs,OnFailure_called_for_each_failed_rule_asyncAsync,The following statement contains a magic number: _validator.RuleFor(person => person.Age).GreaterThanOrEqualTo(18).OnFailure((person' ctx) => {  				invoked += 1;  			});
Magic Number,FluentValidation.Tests,OnFailureTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\OnFailureTests.cs,OnFailure_called_for_each_failed_rule_asyncAsync,The following statement contains a magic number: await _validator.ValidateAsync(new Person { Forename = "John"' Age = 17 });
Magic Number,FluentValidation.Tests,OnFailureTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\OnFailureTests.cs,OnFailure_called_for_each_failed_rule_asyncAsync,The following statement contains a magic number: invoked.ShouldEqual(4);
Magic Number,FluentValidation.Tests,Person,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\Person.cs,CalculateSalary,The following statement contains a magic number: return 20;
Magic Number,FluentValidation.Tests,PredicateValidatorTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\PredicateValidatorTester.cs,When_validation_fails_metadata_should_be_set_on_failure,The following statement contains a magic number: error.FormattedMessagePlaceholderValues.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,RuleBuilderTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleBuilderTests.cs,Nullable_object_with_condition_should_not_throw,The following statement contains a magic number: builder.GreaterThanOrEqualTo(3).When(x => x.NullableInt != null);
Magic Number,FluentValidation.Tests,RuleBuilderTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleBuilderTests.cs,Nullable_object_with_async_condition_should_not_throw,The following statement contains a magic number: builder.GreaterThanOrEqualTo(3).WhenAsync(async (x'c) => x.NullableInt != null);
Magic Number,FluentValidation.Tests,RuleBuilderTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleBuilderTests.cs,Result_should_use_custom_property_name_when_no_property_name_can_be_determined,The following statement contains a magic number: builder.GreaterThan(100).WithName("Foo");
Magic Number,FluentValidation.Tests,RuleDependencyTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleDependencyTests.cs,TestAsyncWithDependentRules_SyncEntry,The following statement contains a magic number: validator.RuleFor(o => o.Forename)  				.NotNull()  				.DependentRules(() => {  					validator.RuleFor(o => o.Address).NotNull();  					validator.RuleFor(o => o.Age).MustAsync(async (p' token) => await Task.FromResult(p > 10));  				});
Magic Number,FluentValidation.Tests,RuleDependencyTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleDependencyTests.cs,TestAsyncWithDependentRules_SyncEntry,The following statement contains a magic number: Assert.Equal(2' result.Errors.Count);
Magic Number,FluentValidation.Tests,RuleDependencyTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleDependencyTests.cs,TestAsyncWithDependentRules_AsyncEntry,The following statement contains a magic number: validator.RuleFor(o => o)  				.MustAsync(async (p' ct) => await Task.FromResult(p.Forename != null))  				.DependentRules(() => {  					validator.RuleFor(o => o.Address).NotNull();  					validator.RuleFor(o => o.Age).MustAsync(async (p' token) => await Task.FromResult(p > 10));  				});
Magic Number,FluentValidation.Tests,RuleDependencyTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleDependencyTests.cs,TestAsyncWithDependentRules_AsyncEntry,The following statement contains a magic number: Assert.Equal(2' result.Errors.Count);
Magic Number,FluentValidation.Tests,AsyncValidator,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleDependencyTests.cs,AsyncValidator,The following statement contains a magic number: RuleFor(model => model)  					.MustAsync(async (ie' ct) => {  						await Task.Delay(500);  						return true;  					})  					.DependentRules(() => {  						RuleFor(m => m)  							.MustAsync(async (ie' ct) => {  								await Task.Delay(1000);  								return false;  							});  					});
Magic Number,FluentValidation.Tests,AsyncValidator,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleDependencyTests.cs,AsyncValidator,The following statement contains a magic number: RuleFor(model => model)  					.MustAsync(async (ie' ct) => {  						await Task.Delay(500);  						return true;  					})  					.DependentRules(() => {  						RuleFor(m => m)  							.MustAsync(async (ie' ct) => {  								await Task.Delay(1000);  								return false;  							});  					});
Magic Number,FluentValidation.Tests,AsyncValidator2,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RuleDependencyTests.cs,AsyncValidator2,The following statement contains a magic number: RuleFor(model => model)  					.Must((ie) => true)  					.DependentRules(() => {  						RuleFor(m => m)  							.MustAsync(async (ie' ct) => {  								await Task.Delay(1000);  								return false;  							});  					});
Magic Number,FluentValidation.Tests,RulesetTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RulesetTests.cs,Executes_rules_in_specified_ruleset,The following statement contains a magic number: result.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,RulesetTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RulesetTests.cs,Ruleset_cascades_to_child_collection_validator,The following statement contains a magic number: result.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,RulesetTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RulesetTests.cs,Executes_multiple_rulesets,The following statement contains a magic number: result.Errors.Count.ShouldEqual(3);
Magic Number,FluentValidation.Tests,RulesetTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RulesetTests.cs,Executes_all_rules,The following statement contains a magic number: result.Errors.Count.ShouldEqual(3);
Magic Number,FluentValidation.Tests,RulesetTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RulesetTests.cs,Executes_rules_in_default_ruleset_and_specific_ruleset,The following statement contains a magic number: result.Errors.Count.ShouldEqual(3);
Magic Number,FluentValidation.Tests,RulesetTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RulesetTests.cs,Trims_spaces,The following statement contains a magic number: result.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,RulesetTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\RulesetTests.cs,Executes_in_rule_in_default_and_none,The following statement contains a magic number: result.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Discount).ScalePrecision(2' 4));
Magic Number,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The following statement contains a magic number: var validator = new TestValidator(v => v.RuleFor(x => x.Discount).ScalePrecision(2' 4));
Magic Number,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The following statement contains a magic number: var result = validator.Validate(new Person {Discount = 123.456778m});
Magic Number,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The following statement contains a magic number: result = validator.Validate(new Person {Discount = 12.34M});
Magic Number,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The following statement contains a magic number: result = validator.Validate(new Person {Discount = 12.3414M});
Magic Number,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The following statement contains a magic number: result = validator.Validate(new Person {Discount = 1.344M});
Magic Number,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The following statement contains a magic number: result = validator.Validate(new Person {Discount = 156.3M});
Magic Number,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The following statement contains a magic number: result = validator.Validate(new Person {Discount = 1565.0M});
Magic Number,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The following statement contains a magic number: validator = new TestValidator(v => v.RuleFor(x => x.Discount).ScalePrecision(2' 4' true));
Magic Number,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The following statement contains a magic number: validator = new TestValidator(v => v.RuleFor(x => x.Discount).ScalePrecision(2' 4' true));
Magic Number,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The following statement contains a magic number: result = validator.Validate(new Person {Discount = 1565.0M});
Magic Number,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The following statement contains a magic number: result = validator.Validate(new Person {Discount = 15655.0M});
Magic Number,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The following statement contains a magic number: result = validator.Validate(new Person {Discount = 155.0000000000000000000000000M});
Magic Number,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The following statement contains a magic number: result = validator.Validate(new Person {Discount = 155.0000000000000000000000001M});
Magic Number,FluentValidation.Tests,ScalePrecisionValidatorTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ScalePrecisionValidatorTests.cs,Scale_and_precision_should_work,The following statement contains a magic number: result = validator.Validate(new Person {Discount = 00000000000000000000155.0000000000000000000000000M});
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Shared_When_is_applied_to_grouped_rules_when_initial_predicate_is_true,The following statement contains a magic number: var person = new Person() {  				Id = 4 // triggers the shared When predicate  			};
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Shared_When_is_applied_to_grouped_rules_when_initial_predicate_is_true,The following statement contains a magic number: result.Errors.Count.ShouldEqual(3);
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Shared_async_When_is_applied_to_grouped_rules_when_initial_predicate_is_true,The following statement contains a magic number: var person = new Person() {  				Id = 4 // triggers the shared When predicate  			};
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Shared_async_When_is_applied_to_grouped_rules_when_initial_predicate_is_true,The following statement contains a magic number: result.Errors.Count.ShouldEqual(3);
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Shared_When_is_applied_to_groupd_rules_when_initial_predicate_is_true_and_all_individual_rules_are_satisfied,The following statement contains a magic number: var person = new Person() {  			                          	Id = 4' // triggers the shared When predicate  			                          	Forename = "Kevin"' // satisfies RuleFor( x => x.Forename ).NotEmpty()  			                          	Surname = "Smith"' // satisfies RuleFor( x => x.Surname ).NotEmpty().Equal( "Smith" )  			                          };
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Shared_async_When_is_applied_to_groupd_rules_when_initial_predicate_is_true_and_all_individual_rules_are_satisfied,The following statement contains a magic number: var person = new Person() {  			                          	Id = 4' // triggers the shared When predicate  			                          	Forename = "Kevin"' // satisfies RuleFor( x => x.Forename ).NotEmpty()  			                          	Surname = "Smith"' // satisfies RuleFor( x => x.Surname ).NotEmpty().Equal( "Smith" )  			                          };
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Shared_When_respects_the_smaller_scope_of_an_inner_Unless_when_the_inner_Unless_predicate_is_satisfied,The following statement contains a magic number: var person = new Person() {  			                          	Id = 4 // triggers the shared When predicate  			                          };
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Shared_async_When_respects_the_smaller_scope_of_an_inner_Unless_when_the_inner_Unless_predicate_is_satisfied,The following statement contains a magic number: var person = new Person() {  			                          	Id = 4 // triggers the shared When predicate  			                          };
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Shared_When_respects_the_smaller_scope_of_a_inner_Unless_when_the_inner_Unless_predicate_fails,The following statement contains a magic number: var person = new Person() {  			                          	Id = 4 // triggers the shared When predicate  			                          };
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Shared_async_When_respects_the_smaller_scope_of_a_inner_Unless_when_the_inner_Unless_predicate_fails,The following statement contains a magic number: var person = new Person() {  			                          	Id = 4 // triggers the shared When predicate  			                          };
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Outer_Unless_clause_will_trump_an_inner_Unless_clause_when_inner_fails_but_the_outer_is_satisfied,The following statement contains a magic number: var person = new Person() {  			                          	Id = 4' // triggers the shared When predicate  			                          	Age = 70 // satisfies the outer Unless predicate  			                          };
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Outer_Unless_clause_will_trump_an_inner_Unless_clause_when_inner_fails_but_the_outer_is_satisfied,The following statement contains a magic number: var person = new Person() {  			                          	Id = 4' // triggers the shared When predicate  			                          	Age = 70 // satisfies the outer Unless predicate  			                          };
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Outer_async_Unless_clause_will_trump_an_inner_Unless_clause_when_inner_fails_but_the_outer_is_satisfied,The following statement contains a magic number: var person = new Person() {  			                          	Id = 4' // triggers the shared When predicate  			                          	Age = 70 // satisfies the outer Unless predicate  			                          };
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Outer_async_Unless_clause_will_trump_an_inner_Unless_clause_when_inner_fails_but_the_outer_is_satisfied,The following statement contains a magic number: var person = new Person() {  			                          	Id = 4' // triggers the shared When predicate  			                          	Age = 70 // satisfies the outer Unless predicate  			                          };
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Condition_can_be_used_inside_ruleset,The following statement contains a magic number: var result = validator.Validate(new Person {Id = 5}' ruleSet : "foo");
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Async_condition_can_be_used_inside_ruleset,The following statement contains a magic number: var result = await validator.ValidateAsync(new Person {Id = 5}' ruleSet: "foo");
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,RuleSet_can_be_used_inside_condition,The following statement contains a magic number: var result = validator.Validate(new Person {Id = 5}' ruleSet : "foo");
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,RuleSet_can_be_used_inside_async_condition,The following statement contains a magic number: var result = await validator.ValidateAsync(new Person {Id = 5}' ruleSet: "foo");
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,When_condition_only_executed_once,The following statement contains a magic number: validator.When(x => {  				executions++;  				return x.Age > 10;  			}' () => {  				validator.RuleFor(x => x.Surname).NotNull();  				validator.RuleFor(x => x.Forename).NotNull();  			});
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,When_condition_only_executed_once,The following statement contains a magic number: validator.Validate(new Person {Age = 11});
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,WhenAsync_condition_only_executed_once,The following statement contains a magic number: validator.WhenAsync(async (x' ct) => {  				executions++;  				return x.Age > 10;  			}' () => {  				validator.RuleFor(x => x.Surname).NotNull();  				validator.RuleFor(x => x.Forename).NotNull();  			});
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,WhenAsync_condition_only_executed_once,The following statement contains a magic number: await validator.ValidateAsync(new Person {Age = 11});
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Runs_otherwise_conditions_for_When,The following statement contains a magic number: validator.When(x => x.Age > 10' () => {  				validator.RuleFor(x => x.Forename).NotNull();  			}).Otherwise(() => {  				validator.RuleFor(x => x.Surname).NotNull();  			});
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Runs_otherwise_conditions_for_When,The following statement contains a magic number: var result1 = validator.Validate(new Person {Age = 11});
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Runs_otherwise_conditions_for_When,The following statement contains a magic number: var result2 = validator.Validate(new Person {Age = 9});
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Runs_otherwise_conditons_for_Unless,The following statement contains a magic number: validator.Unless(x => x.Age > 10' () => {  				validator.RuleFor(x => x.Forename).NotNull();  			}).Otherwise(() => {  				validator.RuleFor(x => x.Surname).NotNull();  			});
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Runs_otherwise_conditons_for_Unless,The following statement contains a magic number: var result1 = validator.Validate(new Person {Age = 11});
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Runs_otherwise_conditons_for_Unless,The following statement contains a magic number: var result2 = validator.Validate(new Person {Age = 9});
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Runs_otherwise_conditions_for_WhenAsync,The following statement contains a magic number: validator.WhenAsync(async (x' ct) => x.Age > 10' () => {  				validator.RuleFor(x => x.Forename).NotNull();  			}).Otherwise(() => {  				validator.RuleFor(x => x.Surname).NotNull();  			});
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Runs_otherwise_conditions_for_WhenAsync,The following statement contains a magic number: var result1 = await validator.ValidateAsync(new Person {Age = 11});
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Runs_otherwise_conditions_for_WhenAsync,The following statement contains a magic number: var result2 = await validator.ValidateAsync(new Person {Age = 9});
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Runs_otherwise_conditions_for_UnlessAsync,The following statement contains a magic number: validator.UnlessAsync(async (x' ct) => x.Age > 10' () => {  				validator.RuleFor(x => x.Forename).NotNull();  			}).Otherwise(() => {  				validator.RuleFor(x => x.Surname).NotNull();  			});
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Runs_otherwise_conditions_for_UnlessAsync,The following statement contains a magic number: var result1 = await validator.ValidateAsync(new Person {Age = 11});
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,Runs_otherwise_conditions_for_UnlessAsync,The following statement contains a magic number: var result2 = await validator.ValidateAsync(new Person {Age = 9});
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,When_condition_executed_for_each_instance_of_RuleForEach_condition_should_not_be_cached,The following statement contains a magic number: executions.ShouldEqual(2);
Magic Number,FluentValidation.Tests,SharedConditionTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,When_async_condition_executed_for_each_instance_of_RuleForEach_condition_should_not_be_cached,The following statement contains a magic number: executions.ShouldEqual(2);
Magic Number,FluentValidation.Tests,SharedConditionWithScopedUnlessValidator,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,SharedConditionWithScopedUnlessValidator,The following statement contains a magic number: When(x => x.Id > 0 && x.Age <= 65' () => { RuleFor(x => x.Orders.Count).Equal(0).Unless(x => String.IsNullOrWhiteSpace(x.CreditCard) == false); });
Magic Number,FluentValidation.Tests,SharedAsyncConditionWithScopedUnlessValidator,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\SharedConditionTests.cs,SharedAsyncConditionWithScopedUnlessValidator,The following statement contains a magic number: WhenAsync(async (x'c) => x.Id > 0 && x.Age <= 65'  					() => {  						RuleFor(x => x.Orders.Count).Equal(0).UnlessAsync(async (x'c) => String.IsNullOrWhiteSpace(x.CreditCard) == false);  					}  				);
Magic Number,FluentValidation.Tests,StandalonePropertyValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\StandalonePropertyValidationTester.cs,Should_validate_property_value_without_instance_different_types,The following statement contains a magic number: var validator = new EqualValidator(100M);
Magic Number,FluentValidation.Tests,StandalonePropertyValidationTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\StandalonePropertyValidationTester.cs,Should_validate_property_value_without_instance_different_types,The following statement contains a magic number: var rule = new PropertyRule(null' x => 100D /* double */' null' null' typeof(string)' null) {  				PropertyName = "Surname"  			};
Magic Number,FluentValidation.Tests,ValidationResultTests,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidationResultTests.cs,Should_add_errors,The following statement contains a magic number: result.Errors.Count.ShouldEqual(2);
Magic Number,FluentValidation.Tests,ValidatorTesterTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidatorTesterTester.cs,ValidatorTesterTester,The following statement contains a magic number: validator.RuleFor(x => x.CreditCard).Must(creditCard => !string.IsNullOrEmpty(creditCard)).WhenAsync((x' cancel) => Task.Run(() => { return x.Age >= 18; }));
Magic Number,FluentValidation.Tests,ValidatorTesterTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidatorTesterTester.cs,ValidatorTesterTester,The following statement contains a magic number: validator.RuleForEach(person => person.NickNames).MinimumLength(5);
Magic Number,FluentValidation.Tests,ValidatorTesterTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidatorTesterTester.cs,ShouldHaveValidationError_with_an_unmatched_rule_and_a_single_error_should_throw_an_exception,The following statement contains a magic number: validator.RuleFor(x => x.NullableInt).GreaterThanOrEqualTo(3);
Magic Number,FluentValidation.Tests,ValidatorTesterTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidatorTesterTester.cs,ShouldHaveValidationError_with_an_unmatched_rule_and_multiple_errors_should_throw_an_exception,The following statement contains a magic number: validator.RuleFor(x => x.AnotherInt).GreaterThan(2);
Magic Number,FluentValidation.Tests,ValidatorTesterTester,D:\research\architectureSmells\repos\JeremySkinner_FluentValidation\src\FluentValidation.Tests\ValidatorTesterTester.cs,ShouldNotHaveValidationError_should_correctly_handle_explicitly_providing_object_to_validate,The following statement contains a magic number: var unitOfMeasure = new UnitOfMeasure {  				Value = 1'  				Type = 43  			};
