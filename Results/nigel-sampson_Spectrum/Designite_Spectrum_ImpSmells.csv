Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,GetHashCode,The following statement contains a magic number: unchecked  				{  					var hashCode = H.GetHashCode();  					hashCode = (hashCode * 397) ^ S.GetHashCode();  					hashCode = (hashCode * 397) ^ L.GetHashCode();  					return hashCode;  				}
Magic Number,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,GetHashCode,The following statement contains a magic number: unchecked  				{  					var hashCode = H.GetHashCode();  					hashCode = (hashCode * 397) ^ S.GetHashCode();  					hashCode = (hashCode * 397) ^ L.GetHashCode();  					return hashCode;  				}
Magic Number,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,ToRGB,The following statement contains a magic number: v = (l <= 0.5) ? (l * (1.0 + s)) : (l + s - l * s);
Magic Number,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,ToRGB,The following statement contains a magic number: if (v > 0)                  {                      double m;                      double sv;                      int sextant;                      double fract' vsf' mid1' mid2;                        m = l + l - v;                      sv = (v - m) / v;                      var hue = (h / 360.0) * 6.0;                      sextant = (int)hue;                      fract = hue - sextant;                      vsf = v * sv * fract;                      mid1 = m + vsf;                      mid2 = v - vsf;                      switch (sextant)                      {                          case 0:                              r = v;                              g = mid1;                              b = m;                              break;                          case 1:                              r = mid2;                              g = v;                              b = m;                              break;                          case 2:                              r = m;                              g = v;                              b = mid1;                              break;                          case 3:                              r = m;                              g = mid2;                              b = v;                              break;                          case 4:                              r = mid1;                              g = m;                              b = v;                              break;                          case 5:                              r = v;                              g = m;                              b = mid2;                              break;                      }                  }
Magic Number,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,ToRGB,The following statement contains a magic number: if (v > 0)                  {                      double m;                      double sv;                      int sextant;                      double fract' vsf' mid1' mid2;                        m = l + l - v;                      sv = (v - m) / v;                      var hue = (h / 360.0) * 6.0;                      sextant = (int)hue;                      fract = hue - sextant;                      vsf = v * sv * fract;                      mid1 = m + vsf;                      mid2 = v - vsf;                      switch (sextant)                      {                          case 0:                              r = v;                              g = mid1;                              b = m;                              break;                          case 1:                              r = mid2;                              g = v;                              b = m;                              break;                          case 2:                              r = m;                              g = v;                              b = mid1;                              break;                          case 3:                              r = m;                              g = mid2;                              b = v;                              break;                          case 4:                              r = mid1;                              g = m;                              b = v;                              break;                          case 5:                              r = v;                              g = m;                              b = mid2;                              break;                      }                  }
Magic Number,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,ToRGB,The following statement contains a magic number: if (v > 0)                  {                      double m;                      double sv;                      int sextant;                      double fract' vsf' mid1' mid2;                        m = l + l - v;                      sv = (v - m) / v;                      var hue = (h / 360.0) * 6.0;                      sextant = (int)hue;                      fract = hue - sextant;                      vsf = v * sv * fract;                      mid1 = m + vsf;                      mid2 = v - vsf;                      switch (sextant)                      {                          case 0:                              r = v;                              g = mid1;                              b = m;                              break;                          case 1:                              r = mid2;                              g = v;                              b = m;                              break;                          case 2:                              r = m;                              g = v;                              b = mid1;                              break;                          case 3:                              r = m;                              g = mid2;                              b = v;                              break;                          case 4:                              r = mid1;                              g = m;                              b = v;                              break;                          case 5:                              r = v;                              g = m;                              b = mid2;                              break;                      }                  }
Magic Number,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,ToRGB,The following statement contains a magic number: if (v > 0)                  {                      double m;                      double sv;                      int sextant;                      double fract' vsf' mid1' mid2;                        m = l + l - v;                      sv = (v - m) / v;                      var hue = (h / 360.0) * 6.0;                      sextant = (int)hue;                      fract = hue - sextant;                      vsf = v * sv * fract;                      mid1 = m + vsf;                      mid2 = v - vsf;                      switch (sextant)                      {                          case 0:                              r = v;                              g = mid1;                              b = m;                              break;                          case 1:                              r = mid2;                              g = v;                              b = m;                              break;                          case 2:                              r = m;                              g = v;                              b = mid1;                              break;                          case 3:                              r = m;                              g = mid2;                              b = v;                              break;                          case 4:                              r = mid1;                              g = m;                              b = v;                              break;                          case 5:                              r = v;                              g = m;                              b = mid2;                              break;                      }                  }
Magic Number,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,ToRGB,The following statement contains a magic number: if (v > 0)                  {                      double m;                      double sv;                      int sextant;                      double fract' vsf' mid1' mid2;                        m = l + l - v;                      sv = (v - m) / v;                      var hue = (h / 360.0) * 6.0;                      sextant = (int)hue;                      fract = hue - sextant;                      vsf = v * sv * fract;                      mid1 = m + vsf;                      mid2 = v - vsf;                      switch (sextant)                      {                          case 0:                              r = v;                              g = mid1;                              b = m;                              break;                          case 1:                              r = mid2;                              g = v;                              b = m;                              break;                          case 2:                              r = m;                              g = v;                              b = mid1;                              break;                          case 3:                              r = m;                              g = mid2;                              b = v;                              break;                          case 4:                              r = mid1;                              g = m;                              b = v;                              break;                          case 5:                              r = v;                              g = m;                              b = mid2;                              break;                      }                  }
Magic Number,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,ToRGB,The following statement contains a magic number: if (v > 0)                  {                      double m;                      double sv;                      int sextant;                      double fract' vsf' mid1' mid2;                        m = l + l - v;                      sv = (v - m) / v;                      var hue = (h / 360.0) * 6.0;                      sextant = (int)hue;                      fract = hue - sextant;                      vsf = v * sv * fract;                      mid1 = m + vsf;                      mid2 = v - vsf;                      switch (sextant)                      {                          case 0:                              r = v;                              g = mid1;                              b = m;                              break;                          case 1:                              r = mid2;                              g = v;                              b = m;                              break;                          case 2:                              r = m;                              g = v;                              b = mid1;                              break;                          case 3:                              r = m;                              g = mid2;                              b = v;                              break;                          case 4:                              r = mid1;                              g = m;                              b = v;                              break;                          case 5:                              r = v;                              g = m;                              b = mid2;                              break;                      }                  }
Magic Number,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,ToRGB,The following statement contains a magic number: return new RGB(                      Convert.ToByte(r * 255.0)'                      Convert.ToByte(g * 255.0)'                      Convert.ToByte(b * 255.0));
Magic Number,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,ToRGB,The following statement contains a magic number: return new RGB(                      Convert.ToByte(r * 255.0)'                      Convert.ToByte(g * 255.0)'                      Convert.ToByte(b * 255.0));
Magic Number,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,ToRGB,The following statement contains a magic number: return new RGB(                      Convert.ToByte(r * 255.0)'                      Convert.ToByte(g * 255.0)'                      Convert.ToByte(b * 255.0));
Magic Number,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,ToHSV,The following statement contains a magic number: var v1 = ((2 * L) + (S * (1.0d - Math.Abs(2.0d * L - 1)))) / 2.0d;
Magic Number,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,ToHSV,The following statement contains a magic number: var s1 = (2 * (v1 - L)) / v1;
Magic Number,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,GetTetradicColours,The following statement contains a magic number: return ShiftHue(-60' 120' 180);
Magic Number,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,GetTetradicColours,The following statement contains a magic number: return ShiftHue(-60' 120' 180);
Magic Number,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,GetTetradicColours,The following statement contains a magic number: return ShiftHue(-60' 120' 180);
Magic Number,Spectrum,HSV,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSV.cs,GetHashCode,The following statement contains a magic number: unchecked                  {                      var hashCode = H.GetHashCode();                      hashCode = (hashCode * 397) ^ S.GetHashCode();                      hashCode = (hashCode * 397) ^ V.GetHashCode();                      return hashCode;                  }
Magic Number,Spectrum,HSV,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSV.cs,GetHashCode,The following statement contains a magic number: unchecked                  {                      var hashCode = H.GetHashCode();                      hashCode = (hashCode * 397) ^ S.GetHashCode();                      hashCode = (hashCode * 397) ^ V.GetHashCode();                      return hashCode;                  }
Magic Number,Spectrum,HSV,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSV.cs,ToRGB,The following statement contains a magic number: if (S.IsNearTo(0.0d))                  {                      return new RGB(                          Convert.ToByte(V * 255.0)'                          Convert.ToByte(V * 255.0)'                          Convert.ToByte(V * 255.0));                  }
Magic Number,Spectrum,HSV,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSV.cs,ToRGB,The following statement contains a magic number: if (S.IsNearTo(0.0d))                  {                      return new RGB(                          Convert.ToByte(V * 255.0)'                          Convert.ToByte(V * 255.0)'                          Convert.ToByte(V * 255.0));                  }
Magic Number,Spectrum,HSV,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSV.cs,ToRGB,The following statement contains a magic number: if (S.IsNearTo(0.0d))                  {                      return new RGB(                          Convert.ToByte(V * 255.0)'                          Convert.ToByte(V * 255.0)'                          Convert.ToByte(V * 255.0));                  }
Magic Number,Spectrum,HSV,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSV.cs,ToRGB,The following statement contains a magic number: if (i == 0)                  {                      r = V;                      g = v3;                      b = v1;                  }                  else if (i == 1)                  {                      r = v2;                      g = V;                      b = v1;                  }                  else if (i == 2)                  {                      r = v1;                      g = V;                      b = v3;                  }                  else if (i == 3)                  {                      r = v1;                      g = v2;                      b = V;                  }                  else if (i == 4)                  {                      r = v3;                      g = v1;                      b = V;                  }                  else                  {                      r = V;                      g = v1;                      b = v2;                  }
Magic Number,Spectrum,HSV,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSV.cs,ToRGB,The following statement contains a magic number: if (i == 0)                  {                      r = V;                      g = v3;                      b = v1;                  }                  else if (i == 1)                  {                      r = v2;                      g = V;                      b = v1;                  }                  else if (i == 2)                  {                      r = v1;                      g = V;                      b = v3;                  }                  else if (i == 3)                  {                      r = v1;                      g = v2;                      b = V;                  }                  else if (i == 4)                  {                      r = v3;                      g = v1;                      b = V;                  }                  else                  {                      r = V;                      g = v1;                      b = v2;                  }
Magic Number,Spectrum,HSV,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSV.cs,ToRGB,The following statement contains a magic number: if (i == 0)                  {                      r = V;                      g = v3;                      b = v1;                  }                  else if (i == 1)                  {                      r = v2;                      g = V;                      b = v1;                  }                  else if (i == 2)                  {                      r = v1;                      g = V;                      b = v3;                  }                  else if (i == 3)                  {                      r = v1;                      g = v2;                      b = V;                  }                  else if (i == 4)                  {                      r = v3;                      g = v1;                      b = V;                  }                  else                  {                      r = V;                      g = v1;                      b = v2;                  }
Magic Number,Spectrum,HSV,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSV.cs,ToRGB,The following statement contains a magic number: return new RGB(                     Convert.ToByte(r * 255.0)'                     Convert.ToByte(g * 255.0)'                     Convert.ToByte(b * 255.0));
Magic Number,Spectrum,HSV,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSV.cs,ToRGB,The following statement contains a magic number: return new RGB(                     Convert.ToByte(r * 255.0)'                     Convert.ToByte(g * 255.0)'                     Convert.ToByte(b * 255.0));
Magic Number,Spectrum,HSV,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSV.cs,ToRGB,The following statement contains a magic number: return new RGB(                     Convert.ToByte(r * 255.0)'                     Convert.ToByte(g * 255.0)'                     Convert.ToByte(b * 255.0));
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,RGB,The following statement contains a magic number: if (hex.Length == 6)                  {                      r = Byte.Parse(hex.Substring(0' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                  }                  else if (hex.Length == 8)                  {                      r = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(6' 2)' NumberStyles.HexNumber);                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,RGB,The following statement contains a magic number: if (hex.Length == 6)                  {                      r = Byte.Parse(hex.Substring(0' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                  }                  else if (hex.Length == 8)                  {                      r = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(6' 2)' NumberStyles.HexNumber);                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,RGB,The following statement contains a magic number: if (hex.Length == 6)                  {                      r = Byte.Parse(hex.Substring(0' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                  }                  else if (hex.Length == 8)                  {                      r = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(6' 2)' NumberStyles.HexNumber);                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,RGB,The following statement contains a magic number: if (hex.Length == 6)                  {                      r = Byte.Parse(hex.Substring(0' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                  }                  else if (hex.Length == 8)                  {                      r = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(6' 2)' NumberStyles.HexNumber);                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,RGB,The following statement contains a magic number: if (hex.Length == 6)                  {                      r = Byte.Parse(hex.Substring(0' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                  }                  else if (hex.Length == 8)                  {                      r = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(6' 2)' NumberStyles.HexNumber);                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,RGB,The following statement contains a magic number: if (hex.Length == 6)                  {                      r = Byte.Parse(hex.Substring(0' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                  }                  else if (hex.Length == 8)                  {                      r = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(6' 2)' NumberStyles.HexNumber);                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,RGB,The following statement contains a magic number: if (hex.Length == 6)                  {                      r = Byte.Parse(hex.Substring(0' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                  }                  else if (hex.Length == 8)                  {                      r = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(6' 2)' NumberStyles.HexNumber);                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,RGB,The following statement contains a magic number: if (hex.Length == 6)                  {                      r = Byte.Parse(hex.Substring(0' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                  }                  else if (hex.Length == 8)                  {                      r = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(6' 2)' NumberStyles.HexNumber);                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,RGB,The following statement contains a magic number: if (hex.Length == 6)                  {                      r = Byte.Parse(hex.Substring(0' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                  }                  else if (hex.Length == 8)                  {                      r = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(6' 2)' NumberStyles.HexNumber);                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,RGB,The following statement contains a magic number: if (hex.Length == 6)                  {                      r = Byte.Parse(hex.Substring(0' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                  }                  else if (hex.Length == 8)                  {                      r = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(6' 2)' NumberStyles.HexNumber);                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,RGB,The following statement contains a magic number: if (hex.Length == 6)                  {                      r = Byte.Parse(hex.Substring(0' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                  }                  else if (hex.Length == 8)                  {                      r = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(6' 2)' NumberStyles.HexNumber);                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,RGB,The following statement contains a magic number: if (hex.Length == 6)                  {                      r = Byte.Parse(hex.Substring(0' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                  }                  else if (hex.Length == 8)                  {                      r = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(6' 2)' NumberStyles.HexNumber);                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,RGB,The following statement contains a magic number: if (hex.Length == 6)                  {                      r = Byte.Parse(hex.Substring(0' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                  }                  else if (hex.Length == 8)                  {                      r = Byte.Parse(hex.Substring(2' 2)' NumberStyles.HexNumber);                      g = Byte.Parse(hex.Substring(4' 2)' NumberStyles.HexNumber);                      b = Byte.Parse(hex.Substring(6' 2)' NumberStyles.HexNumber);                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,GetHashCode,The following statement contains a magic number: unchecked                  {                      var hashCode = R.GetHashCode();                      hashCode = (hashCode * 397) ^ G.GetHashCode();                      hashCode = (hashCode * 397) ^ B.GetHashCode();                      return hashCode;                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,GetHashCode,The following statement contains a magic number: unchecked                  {                      var hashCode = R.GetHashCode();                      hashCode = (hashCode * 397) ^ G.GetHashCode();                      hashCode = (hashCode * 397) ^ B.GetHashCode();                      return hashCode;                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,ToHSV,The following statement contains a magic number: if (Math.Abs(percentage[0] - percentage.Max()) < 0.01)                  {                      h = (percentage[1] - percentage[2]) / delta;                  }                  else if (Math.Abs(percentage[1] - percentage.Max()) < 0.01)                  {                      h = 2 + (percentage[2] - percentage[0]) / delta;                  }                  else                  {                      h = 4 + (percentage[0] - percentage[1]) / delta;                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,ToHSV,The following statement contains a magic number: if (Math.Abs(percentage[0] - percentage.Max()) < 0.01)                  {                      h = (percentage[1] - percentage[2]) / delta;                  }                  else if (Math.Abs(percentage[1] - percentage.Max()) < 0.01)                  {                      h = 2 + (percentage[2] - percentage[0]) / delta;                  }                  else                  {                      h = 4 + (percentage[0] - percentage[1]) / delta;                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,ToHSV,The following statement contains a magic number: if (Math.Abs(percentage[0] - percentage.Max()) < 0.01)                  {                      h = (percentage[1] - percentage[2]) / delta;                  }                  else if (Math.Abs(percentage[1] - percentage.Max()) < 0.01)                  {                      h = 2 + (percentage[2] - percentage[0]) / delta;                  }                  else                  {                      h = 4 + (percentage[0] - percentage[1]) / delta;                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,ToHSV,The following statement contains a magic number: if (Math.Abs(percentage[0] - percentage.Max()) < 0.01)                  {                      h = (percentage[1] - percentage[2]) / delta;                  }                  else if (Math.Abs(percentage[1] - percentage.Max()) < 0.01)                  {                      h = 2 + (percentage[2] - percentage[0]) / delta;                  }                  else                  {                      h = 4 + (percentage[0] - percentage[1]) / delta;                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,ToHSV,The following statement contains a magic number: if (Math.Abs(percentage[0] - percentage.Max()) < 0.01)                  {                      h = (percentage[1] - percentage[2]) / delta;                  }                  else if (Math.Abs(percentage[1] - percentage.Max()) < 0.01)                  {                      h = 2 + (percentage[2] - percentage[0]) / delta;                  }                  else                  {                      h = 4 + (percentage[0] - percentage[1]) / delta;                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,ToHSV,The following statement contains a magic number: if (Math.Abs(percentage[0] - percentage.Max()) < 0.01)                  {                      h = (percentage[1] - percentage[2]) / delta;                  }                  else if (Math.Abs(percentage[1] - percentage.Max()) < 0.01)                  {                      h = 2 + (percentage[2] - percentage[0]) / delta;                  }                  else                  {                      h = 4 + (percentage[0] - percentage[1]) / delta;                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,ToHSV,The following statement contains a magic number: h *= 60;
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,ToHSL,The following statement contains a magic number: if (max > 0.0d)                  {                      if (l < 0.5d)                          s = delta / (max + min);                      else                          s = delta / (2 - max - min);                  }                  else                  {                      s = 0;                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,ToHSL,The following statement contains a magic number: if (Math.Abs(percentage[0] - percentage.Max()) < 0.01)                  {                      h = (percentage[1] - percentage[2]) / delta;                  }                  else if (Math.Abs(percentage[1] - percentage.Max()) < 0.01)                  {                      h = 2 + (percentage[2] - percentage[0]) / delta;                  }                  else                  {                      h = 4 + (percentage[0] - percentage[1]) / delta;                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,ToHSL,The following statement contains a magic number: if (Math.Abs(percentage[0] - percentage.Max()) < 0.01)                  {                      h = (percentage[1] - percentage[2]) / delta;                  }                  else if (Math.Abs(percentage[1] - percentage.Max()) < 0.01)                  {                      h = 2 + (percentage[2] - percentage[0]) / delta;                  }                  else                  {                      h = 4 + (percentage[0] - percentage[1]) / delta;                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,ToHSL,The following statement contains a magic number: if (Math.Abs(percentage[0] - percentage.Max()) < 0.01)                  {                      h = (percentage[1] - percentage[2]) / delta;                  }                  else if (Math.Abs(percentage[1] - percentage.Max()) < 0.01)                  {                      h = 2 + (percentage[2] - percentage[0]) / delta;                  }                  else                  {                      h = 4 + (percentage[0] - percentage[1]) / delta;                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,ToHSL,The following statement contains a magic number: if (Math.Abs(percentage[0] - percentage.Max()) < 0.01)                  {                      h = (percentage[1] - percentage[2]) / delta;                  }                  else if (Math.Abs(percentage[1] - percentage.Max()) < 0.01)                  {                      h = 2 + (percentage[2] - percentage[0]) / delta;                  }                  else                  {                      h = 4 + (percentage[0] - percentage[1]) / delta;                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,ToHSL,The following statement contains a magic number: if (Math.Abs(percentage[0] - percentage.Max()) < 0.01)                  {                      h = (percentage[1] - percentage[2]) / delta;                  }                  else if (Math.Abs(percentage[1] - percentage.Max()) < 0.01)                  {                      h = 2 + (percentage[2] - percentage[0]) / delta;                  }                  else                  {                      h = 4 + (percentage[0] - percentage[1]) / delta;                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,ToHSL,The following statement contains a magic number: if (Math.Abs(percentage[0] - percentage.Max()) < 0.01)                  {                      h = (percentage[1] - percentage[2]) / delta;                  }                  else if (Math.Abs(percentage[1] - percentage.Max()) < 0.01)                  {                      h = 2 + (percentage[2] - percentage[0]) / delta;                  }                  else                  {                      h = 4 + (percentage[0] - percentage[1]) / delta;                  }
Magic Number,Spectrum,RGB,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.RGB.cs,ToHSL,The following statement contains a magic number: h *= 60;
Magic Number,Spectrum,DoubleExtensions,C:\repos\nigel-sampson_Spectrum\Spectrum\DoubleExtensions.cs,IsNearTo,The following statement contains a magic number: var difference = 1.0d / Math.Pow(10' digits);
Missing Default,Spectrum,HSL,C:\repos\nigel-sampson_Spectrum\Spectrum\Color.HSL.cs,ToRGB,The following switch statement is missing a default case: switch (sextant)                      {                          case 0:                              r = v;                              g = mid1;                              b = m;                              break;                          case 1:                              r = mid2;                              g = v;                              b = m;                              break;                          case 2:                              r = m;                              g = v;                              b = mid1;                              break;                          case 3:                              r = m;                              g = mid2;                              b = v;                              break;                          case 4:                              r = mid1;                              g = m;                              b = v;                              break;                          case 5:                              r = v;                              g = m;                              b = mid2;                              break;                      }
