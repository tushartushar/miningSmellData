Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,AssertState,Cyclomatic complexity of the method is 8
Long Parameter List,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,AssertState,The method has 8 parameters. Parameters: key' locked' lockId' lockDate' timeout' flags' ttl' items
Virtual Method Call from Constructor,Harbour.RedisSessionStateStore.Tests,RedisTest,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisTest.cs,RedisTest,The constructor "RedisTest" calls a virtual method "GetRedisClient".
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,SetRangeInHashRaw,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,GetAllEntriesFromHashRaw,The following statement contains a magic number: redis.SetRangeInHashRaw("abc:123"' new Dictionary<string' byte[]>()              {                  { "a"' new byte[] { 1' 2' 3' 4 } }'                  { "b"' new byte[] { 1 } }'                  { "c"' new byte[0] }'              });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,GetAllEntriesFromHashRaw,The following statement contains a magic number: redis.SetRangeInHashRaw("abc:123"' new Dictionary<string' byte[]>()              {                  { "a"' new byte[] { 1' 2' 3' 4 } }'                  { "b"' new byte[] { 1 } }'                  { "c"' new byte[0] }'              });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,GetAllEntriesFromHashRaw,The following statement contains a magic number: redis.SetRangeInHashRaw("abc:123"' new Dictionary<string' byte[]>()              {                  { "a"' new byte[] { 1' 2' 3' 4 } }'                  { "b"' new byte[] { 1 } }'                  { "c"' new byte[0] }'              });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,GetAllEntriesFromHashRaw,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,GetAllEntriesFromHashRaw,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2' 3' 4 }' result["a"]);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,GetAllEntriesFromHashRaw,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2' 3' 4 }' result["a"]);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,GetAllEntriesFromHashRaw,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2' 3' 4 }' result["a"]);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,GetValueFromHashRaw,The following statement contains a magic number: redis.SetRangeInHashRaw("abc:123"' new Dictionary<string' byte[]>()              {                  { "a"' new byte[]{ 1' 2' 3' 4 } }              });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,GetValueFromHashRaw,The following statement contains a magic number: redis.SetRangeInHashRaw("abc:123"' new Dictionary<string' byte[]>()              {                  { "a"' new byte[]{ 1' 2' 3' 4 } }              });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,GetValueFromHashRaw,The following statement contains a magic number: redis.SetRangeInHashRaw("abc:123"' new Dictionary<string' byte[]>()              {                  { "a"' new byte[]{ 1' 2' 3' 4 } }              });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,GetValueFromHashRaw,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2' 3' 4 }' result);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,GetValueFromHashRaw,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2' 3' 4 }' result);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,GetValueFromHashRaw,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2' 3' 4 }' result);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,SetEntryInHashIfNotExists,The following statement contains a magic number: Assert.True(redis.SetEntryInHashIfNotExists("abc:123"' "a"' new byte[] { 1' 2' 3' 4 }));
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,SetEntryInHashIfNotExists,The following statement contains a magic number: Assert.True(redis.SetEntryInHashIfNotExists("abc:123"' "a"' new byte[] { 1' 2' 3' 4 }));
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,SetEntryInHashIfNotExists,The following statement contains a magic number: Assert.True(redis.SetEntryInHashIfNotExists("abc:123"' "a"' new byte[] { 1' 2' 3' 4 }));
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,SetEntryInHashIfNotExists,The following statement contains a magic number: Assert.Equal(new byte[]{ 1' 2' 3' 4 }' redis.GetValueFromHashRaw("abc:123"' "a"));
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,SetEntryInHashIfNotExists,The following statement contains a magic number: Assert.Equal(new byte[]{ 1' 2' 3' 4 }' redis.GetValueFromHashRaw("abc:123"' "a"));
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,SetEntryInHashIfNotExists,The following statement contains a magic number: Assert.Equal(new byte[]{ 1' 2' 3' 4 }' redis.GetValueFromHashRaw("abc:123"' "a"));
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,SetEntryInHashIfNotExists,The following statement contains a magic number: Assert.False(redis.SetEntryInHashIfNotExists("abc:123"' "a"' new byte[] { 4' 5' 6' 7 }));
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,SetEntryInHashIfNotExists,The following statement contains a magic number: Assert.False(redis.SetEntryInHashIfNotExists("abc:123"' "a"' new byte[] { 4' 5' 6' 7 }));
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,SetEntryInHashIfNotExists,The following statement contains a magic number: Assert.False(redis.SetEntryInHashIfNotExists("abc:123"' "a"' new byte[] { 4' 5' 6' 7 }));
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,SetEntryInHashIfNotExists,The following statement contains a magic number: Assert.False(redis.SetEntryInHashIfNotExists("abc:123"' "a"' new byte[] { 4' 5' 6' 7 }));
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,SetEntryInHashIfNotExists,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2' 3' 4 }' redis.GetValueFromHashRaw("abc:123"' "a"));
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,SetEntryInHashIfNotExists,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2' 3' 4 }' redis.GetValueFromHashRaw("abc:123"' "a"));
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisClientExtensionsTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisClientExtensionsTests.cs,SetEntryInHashIfNotExists,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2' 3' 4 }' redis.GetValueFromHashRaw("abc:123"' "a"));
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,ToMap,The following statement contains a magic number: var data = new RedisSessionState()              {                  Created = new DateTime(2011' 12' 22' 1' 1' 1' DateTimeKind.Utc)'                  Locked = true'                  LockId = 999'                  LockDate = new DateTime(2011' 11' 22' 1' 1' 1' DateTimeKind.Utc)'                  Timeout = 3'                  Flags = SessionStateActions.InitializeItem              };
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,ToMap,The following statement contains a magic number: var data = new RedisSessionState()              {                  Created = new DateTime(2011' 12' 22' 1' 1' 1' DateTimeKind.Utc)'                  Locked = true'                  LockId = 999'                  LockDate = new DateTime(2011' 11' 22' 1' 1' 1' DateTimeKind.Utc)'                  Timeout = 3'                  Flags = SessionStateActions.InitializeItem              };
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,ToMap,The following statement contains a magic number: var data = new RedisSessionState()              {                  Created = new DateTime(2011' 12' 22' 1' 1' 1' DateTimeKind.Utc)'                  Locked = true'                  LockId = 999'                  LockDate = new DateTime(2011' 11' 22' 1' 1' 1' DateTimeKind.Utc)'                  Timeout = 3'                  Flags = SessionStateActions.InitializeItem              };
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,ToMap,The following statement contains a magic number: var data = new RedisSessionState()              {                  Created = new DateTime(2011' 12' 22' 1' 1' 1' DateTimeKind.Utc)'                  Locked = true'                  LockId = 999'                  LockDate = new DateTime(2011' 11' 22' 1' 1' 1' DateTimeKind.Utc)'                  Timeout = 3'                  Flags = SessionStateActions.InitializeItem              };
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,ToMap,The following statement contains a magic number: var data = new RedisSessionState()              {                  Created = new DateTime(2011' 12' 22' 1' 1' 1' DateTimeKind.Utc)'                  Locked = true'                  LockId = 999'                  LockDate = new DateTime(2011' 11' 22' 1' 1' 1' DateTimeKind.Utc)'                  Timeout = 3'                  Flags = SessionStateActions.InitializeItem              };
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,ToMap,The following statement contains a magic number: var data = new RedisSessionState()              {                  Created = new DateTime(2011' 12' 22' 1' 1' 1' DateTimeKind.Utc)'                  Locked = true'                  LockId = 999'                  LockDate = new DateTime(2011' 11' 22' 1' 1' 1' DateTimeKind.Utc)'                  Timeout = 3'                  Flags = SessionStateActions.InitializeItem              };
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,ToMap,The following statement contains a magic number: var data = new RedisSessionState()              {                  Created = new DateTime(2011' 12' 22' 1' 1' 1' DateTimeKind.Utc)'                  Locked = true'                  LockId = 999'                  LockDate = new DateTime(2011' 11' 22' 1' 1' 1' DateTimeKind.Utc)'                  Timeout = 3'                  Flags = SessionStateActions.InitializeItem              };
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,ToMap,The following statement contains a magic number: var data = new RedisSessionState()              {                  Created = new DateTime(2011' 12' 22' 1' 1' 1' DateTimeKind.Utc)'                  Locked = true'                  LockId = 999'                  LockDate = new DateTime(2011' 11' 22' 1' 1' 1' DateTimeKind.Utc)'                  Timeout = 3'                  Flags = SessionStateActions.InitializeItem              };
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,ToMap,The following statement contains a magic number: Assert.Equal(new byte[] { 3' 0' 0' 0 }' map["timeout"]);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,TryParse_should_pass_with_valid_data,The following statement contains a magic number: var raw = new Dictionary<string' byte[]>()              {                  { "created"' date1Bytes }'                  { "locked"' new byte[] { 1 } }'                  { "lockId"' lockIdBytes }'                  { "lockDate"' date2Bytes }'                  { "timeout"' new byte[] { 3' 0' 0' 0 } }'                  { "flags"' new byte[] { 1' 0' 0' 0 } }'                  { "items"' itemsBytes }              };
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,TryParse_should_pass_with_valid_data,The following statement contains a magic number: Assert.Equal(new DateTime(2011' 12' 22' 1' 1' 1' DateTimeKind.Utc)' data.Created);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,TryParse_should_pass_with_valid_data,The following statement contains a magic number: Assert.Equal(new DateTime(2011' 12' 22' 1' 1' 1' DateTimeKind.Utc)' data.Created);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,TryParse_should_pass_with_valid_data,The following statement contains a magic number: Assert.Equal(new DateTime(2011' 12' 22' 1' 1' 1' DateTimeKind.Utc)' data.Created);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,TryParse_should_pass_with_valid_data,The following statement contains a magic number: Assert.Equal(999' data.LockId);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,TryParse_should_pass_with_valid_data,The following statement contains a magic number: Assert.Equal(new DateTime(2011' 11' 22' 1' 1' 1' DateTimeKind.Utc)' data.LockDate);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,TryParse_should_pass_with_valid_data,The following statement contains a magic number: Assert.Equal(new DateTime(2011' 11' 22' 1' 1' 1' DateTimeKind.Utc)' data.LockDate);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,TryParse_should_pass_with_valid_data,The following statement contains a magic number: Assert.Equal(new DateTime(2011' 11' 22' 1' 1' 1' DateTimeKind.Utc)' data.LockDate);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,TryParse_should_pass_with_valid_data,The following statement contains a magic number: Assert.Equal(3' data.Timeout);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateTests.cs,TryParse_should_pass_with_valid_data,The following statement contains a magic number: Assert.Equal(2' data.Items.Count);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,CreateUnitializedItem,The following statement contains a magic number: provider.CreateUninitializedItem(null' "1234"' 555);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,CreateUnitializedItem,The following statement contains a magic number: AssertState(key'                  locked: false' lockId: 0' lockDate: DateTime.MinValue'                  timeout: 555' flags: SessionStateActions.InitializeItem);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,ResetItemTimeout,The following statement contains a magic number: redis.ExpireEntryIn(key' TimeSpan.FromMinutes(10));
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,ResetItemTimeout,The following statement contains a magic number: var httpContext = CreateHttpContextWithSession(sessionTimeout: 20);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,ResetItemTimeout,The following statement contains a magic number: Assert.Equal(20' ttl.TotalMinutes);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,RemoveItem_should_remove_if_lockId_matches,The following statement contains a magic number: redis.SetSessionState(key' new RedisSessionState()              {                  Locked = true'                  LockDate = DateTime.UtcNow'                  LockId = 999              });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,RemoveItem_should_remove_if_lockId_matches,The following statement contains a magic number: provider.RemoveItem(null' "1234"' 999' null);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,RemoveItem_should_not_remove_if_lockId_does_not_match,The following statement contains a magic number: redis.SetSessionState(key' new RedisSessionState()              {                  Locked = true'                  LockDate = DateTime.UtcNow'                  LockId = 999              });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,RemoveItem_should_not_remove_if_lockId_does_not_match,The following statement contains a magic number: provider.RemoveItem(null' "1234"' 111' null);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,RemoveItem_should_not_remove_if_session_id_does_not_exist,The following statement contains a magic number: redis.SetSessionState(key' new RedisSessionState()              {                  Locked = true'                  LockDate = DateTime.UtcNow'                  LockId = 999              });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,RemoveItem_should_not_remove_if_session_id_does_not_exist,The following statement contains a magic number: provider.RemoveItem(null' "5678"' 999' null);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,ReleaseItemExclusive_should_not_remove_lock_if_lockId_does_not_match,The following statement contains a magic number: redis.SetSessionState(key' new RedisSessionState()              {                  Locked = true' LockId = 999' LockDate = lockDate              });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,ReleaseItemExclusive_should_not_remove_lock_if_lockId_does_not_match,The following statement contains a magic number: provider.ReleaseItemExclusive(null' "5678"' 111);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,ReleaseItemExclusive_should_not_remove_lock_if_lockId_does_not_match,The following statement contains a magic number: AssertState(key'                  locked: true' lockId: 999' lockDate: lockDate);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,ReleaseItemExclusive_should_not_remove_lock_if_session_id_does_not_exist,The following statement contains a magic number: redis.SetSessionState(key' new RedisSessionState()              {                  Locked = true' LockId = 2' LockDate = lockDate              });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,ReleaseItemExclusive_should_not_remove_lock_if_session_id_does_not_exist,The following statement contains a magic number: provider.ReleaseItemExclusive(null' "1234"' 111);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,ReleaseItemExclusive_should_not_remove_lock_if_session_id_does_not_exist,The following statement contains a magic number: AssertState(key'                  locked: true' lockId: 2' lockDate: lockDate);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,ReleaseItemExclusive_should_clear_lock_and_reset_timeout_for_locked_session,The following statement contains a magic number: var httpContext = CreateHttpContextWithSession(sessionTimeout: 20);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,ReleaseItemExclusive_should_clear_lock_and_reset_timeout_for_locked_session,The following statement contains a magic number: redis.SetSessionState(key' new RedisSessionState()              {                  Locked = true' LockId = 222' LockDate = lockDate              });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,ReleaseItemExclusive_should_clear_lock_and_reset_timeout_for_locked_session,The following statement contains a magic number: provider.ReleaseItemExclusive(httpContext' "1234"' 222);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,ReleaseItemExclusive_should_clear_lock_and_reset_timeout_for_locked_session,The following statement contains a magic number: AssertState(key'                  locked: false' lockId: 0' lockDate: DateTime.MinValue'                  ttl: 20);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,SetAndReleaseItemExclusive_should_add_new_item_and_set_timeout_if_newItem_is_true,The following statement contains a magic number: var item = this.CreateSessionStoreData(333' new Dictionary<string' object>()              {                  { "name"' "Felix" }'                  { "age"' 1 }              });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,SetAndReleaseItemExclusive_should_add_new_item_and_set_timeout_if_newItem_is_true,The following statement contains a magic number: AssertState(key'                  locked: false'                  flags: 0'                  timeout: 333'                  items: new Hashtable()                  {                      { "name"' "Felix" }'                      { "age"' 1 }                  });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,SetAndReleaseItemExclusive_should_not_update_if_lock_id_does_not_match,The following statement contains a magic number: var validLockId = 999;
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,SetAndReleaseItemExclusive_should_not_update_if_lock_id_does_not_match,The following statement contains a magic number: var invalidLockId = 111;
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,SetAndReleaseItemExclusive_should_not_update_if_lock_id_does_not_match,The following statement contains a magic number: var item = this.CreateSessionStoreData(333' new Dictionary<string' object>());
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,SetAndReleaseItemExclusive_should_update_items_and_release_lock_for_locked_session,The following statement contains a magic number: var updatedItems = this.CreateSessionStoreData(999' new Dictionary<string' object>()              {                  { "name"' "Daisy" }'                  { "age"' 3 }              });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,SetAndReleaseItemExclusive_should_update_items_and_release_lock_for_locked_session,The following statement contains a magic number: var updatedItems = this.CreateSessionStoreData(999' new Dictionary<string' object>()              {                  { "name"' "Daisy" }'                  { "age"' 3 }              });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,SetAndReleaseItemExclusive_should_update_items_and_release_lock_for_locked_session,The following statement contains a magic number: AssertState(key'                  locked: false' ttl: 999'                  items: new Hashtable()                  {                      { "name"' "Daisy" }'                      { "age"' 3 }                  });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,SetAndReleaseItemExclusive_should_update_items_and_release_lock_for_locked_session,The following statement contains a magic number: AssertState(key'                  locked: false' ttl: 999'                  items: new Hashtable()                  {                      { "name"' "Daisy" }'                      { "age"' 3 }                  });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,GetItem_should_return_data_and_extend_session_if_session_found_and_not_locked,The following statement contains a magic number: redis.SetSessionState(key' new RedisSessionState()              {                  Flags = SessionStateActions.None'                  Items = itemsA'                  Timeout = 80              });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,GetItem_should_return_data_and_extend_session_if_session_found_and_not_locked,The following statement contains a magic number: Assert.Equal(80' data.Timeout);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,GetItem_should_return_data_and_extend_session_if_session_found_and_not_locked,The following statement contains a magic number: Assert.Equal(80' ttl.TotalMinutes);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,GetItemExclusive_should_return_data_and_lock_session_and_extend_session_if_session_found_and_not_locked,The following statement contains a magic number: redis.SetSessionState(key' new RedisSessionState()              {                  Locked = false'                  Flags = SessionStateActions.None'                  Items = itemsA'                  Timeout = 80              });
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,GetItemExclusive_should_return_data_and_lock_session_and_extend_session_if_session_found_and_not_locked,The following statement contains a magic number: AssertState(key'                  ttl: 80'                  locked: true'                  lockId: 1'                  lockDate: DateTime.UtcNow);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,GetItemExclusive_should_return_data_and_lock_session_and_extend_session_if_session_found_and_not_locked,The following statement contains a magic number: Assert.Equal(80' data.Timeout);
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,AssertState,The following statement contains a magic number: var t = (ttl ?? (int)timeout) * 60;
Magic Number,Harbour.RedisSessionStateStore.Tests,RedisSessionStateStoreProviderTests,D:\research\architectureSmells\repos1\TheCloudlessSky_Harbour.RedisSessionStateStore\tests\Harbour.RedisSessionStateStore.Tests\RedisSessionStateStoreProviderTests.cs,AssertState,The following statement contains a magic number: Assert.True(Math.Abs(t - ttlActual.TotalSeconds) < 10);
