Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OpenGraphNet,OpenGraph,D:\research\architectureSmells\repos\ghorsey_OpenGraph-Net\src\OpenGraphNet\OpenGraph.cs,MakeGraph,Cyclomatic complexity of the method is 10
Complex Method,OpenGraphNet,OpenGraph,D:\research\architectureSmells\repos\ghorsey_OpenGraph-Net\src\OpenGraphNet\OpenGraph.cs,ParseHtml,Cyclomatic complexity of the method is 8
Long Parameter List,OpenGraphNet,OpenGraph,D:\research\architectureSmells\repos\ghorsey_OpenGraph-Net\src\OpenGraphNet\OpenGraph.cs,MakeGraph,The method has 11 parameters. Parameters: title' type' image' url' description' siteName' audio' video' locale' localeAlternates' determiner
Long Statement,OpenGraphNet,HttpDownloader,D:\research\architectureSmells\repos\ghorsey_OpenGraph-Net\src\OpenGraphNet\HttpDownloader.cs,ProcessContent,The length of the statement  "            var s = response.GetResponseStream() ?? throw new InvalidOperationException(Messages.Response_stream_came_back_as_null); " is 120.
Long Statement,OpenGraphNet,HttpDownloader,D:\research\architectureSmells\repos\ghorsey_OpenGraph-Net\src\OpenGraphNet\HttpDownloader.cs,CheckMetaCharSetAndReEncode,The length of the statement  "            Match m = new Regex(@"<meta\s+.*?charset\s*=\s*?""?(?<charset>[A-Za-z0-9_-]+?)"""' RegexOptions.Singleline | RegexOptions.IgnoreCase).Match(html); " is 146.
Long Statement,OpenGraphNet,OpenGraph,D:\research\architectureSmells\repos\ghorsey_OpenGraph-Net\src\OpenGraphNet\OpenGraph.cs,GetOpenGraphPrefix,The length of the statement  "            var value = metaTag.Attributes.Contains("property") ? metaTag.Attributes["property"].Value : metaTag.Attributes["name"].Value; " is 126.
Long Statement,OpenGraphNet,OpenGraph,D:\research\architectureSmells\repos\ghorsey_OpenGraph-Net\src\OpenGraphNet\OpenGraph.cs,ParseNamespaces,The length of the statement  "            if (head != null && head.Attributes.Contains("prefix") && Regex.IsMatch(head.Attributes["prefix"].Value' NamespacePattern)) " is 123.
Long Statement,OpenGraphNet,OpenGraph,D:\research\architectureSmells\repos\ghorsey_OpenGraph-Net\src\OpenGraphNet\OpenGraph.cs,ParseNamespaces,The length of the statement  "            else if (html != null && html.Attributes.Any(a => a.Name.StartsWith("xmlns:"' StringComparison.InvariantCultureIgnoreCase))) " is 124.
Long Statement,OpenGraphNet,OpenGraph,D:\research\architectureSmells\repos\ghorsey_OpenGraph-Net\src\OpenGraphNet\OpenGraph.cs,SetNamespace,The length of the statement  "                var ns = NamespaceRegistry.Instance.Namespaces.First(ns2 => ns2.Key.Equals(prefix' StringComparison.InvariantCultureIgnoreCase)); " is 129.
Long Statement,OpenGraphNet,OpenGraph,D:\research\architectureSmells\repos\ghorsey_OpenGraph-Net\src\OpenGraphNet\OpenGraph.cs,ValidateSpecification,The length of the statement  "                        throw new InvalidSpecificationException($"The parsed HTML does not meet the open graph specification' missing element: {required}"); " is 132.
Long Statement,OpenGraphNet.Metadata,StructuredMetadata,D:\research\architectureSmells\repos\ghorsey_OpenGraph-Net\src\OpenGraphNet\Metadata\StructuredMetadata.cs,IsMyProperty,The length of the statement  "            return propertyKey.StartsWith(myKey' StringComparison.OrdinalIgnoreCase) && !string.Equals(propertyKey' myKey' StringComparison.InvariantCultureIgnoreCase); " is 156.
Empty Catch Block,OpenGraphNet,HttpDownloader,D:\research\architectureSmells\repos\ghorsey_OpenGraph-Net\src\OpenGraphNet\HttpDownloader.cs,SetEncodingFromHeader,The method has an empty catch block.
Empty Catch Block,OpenGraphNet,HttpDownloader,D:\research\architectureSmells\repos\ghorsey_OpenGraph-Net\src\OpenGraphNet\HttpDownloader.cs,CheckMetaCharSetAndReEncode,The method has an empty catch block.
Magic Number,OpenGraphNet,OpenGraph,D:\research\architectureSmells\repos\ghorsey_OpenGraph-Net\src\OpenGraphNet\OpenGraph.cs,ParseNamespaces,The following statement contains a magic number: var ns = match.Groups[2].Value;
Magic Number,OpenGraphNet,OpenGraph,D:\research\architectureSmells\repos\ghorsey_OpenGraph-Net\src\OpenGraphNet\OpenGraph.cs,MakeDocumentToParse,The following statement contains a magic number: string toParse = content.Substring(0' indexOfClosingHead + 7);
