Design smell,Namespace,Class,File,Cause
Unnecessary Abstraction,LinqExtender.Abstraction,IQueryContextImpl,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Abstraction\IQueryContextImpl.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: Collection
Unnecessary Abstraction,LinqExtender.Abstraction,IContainer,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Abstraction\IContainer.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: Container' Name
Unnecessary Abstraction,LinqExtender.Abstraction,IQueryObject,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Abstraction\IQueryObject.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: 
Unnecessary Abstraction,LinqExtender.Ast,Expression,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Ast\Expression.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: CodeType
Unnecessary Abstraction,LinqExtender,GroupByContainer,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Bucket.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: Key
Unnecessary Abstraction,LinqExtender,TreeNodeInfo,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\BucketImpl.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: Level' CompoundOperator' Id' ParentId
Unutilized Abstraction,LinqExtender,Queryable,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Queryable.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Imperative Abstraction,LinqExtender,TreeNode,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\TreeNode.cs,The tool detected the smell in this class because it looks like that an operation is turned into a class. This class contains only the following public method: Clone
Unnecessary Abstraction,LinqExtender,Node,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\TreeNode.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: Value
Unnecessary Abstraction,LinqExtender,QueryObject,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\QueryObject.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: ReferringObject
Unnecessary Abstraction,LinqExtender.Attributes,UniqueIdentifierAttribute,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Attributes\UniqueIdentifierAttribute.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: 
Unnecessary Abstraction,LinqExtender.Attributes,IgnoreAttribute,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Attributes\IgnoreAttribute.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: 
Unexploited Encapsulation,LinqExtender,BucketItem,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\BucketItem.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: Bucket' BucketItem (in method "GetFullContainerName" of class "BucketItem").
Deficient Encapsulation,LinqExtender,MethodNames,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\MethodNames.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Group
Deficient Encapsulation,LinqExtender,MethodNames,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\MethodNames.cs,The tool detected the smell in this class because the class declares global (public static) fields. Following fields are declared with public static modifiers: Group
Broken Modularization,LinqExtender.Abstraction,IBucket,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Abstraction\IBucket.cs,The tool detected the smell in this class because it contains only data members without any method implementation. Following fields and properties are declared in this class: Name' IsDirty' ItemsToTake' ItemsToSkip' Items' Methods' OrderByItems' UniqueItems
Broken Modularization,LinqExtender,MethodNames,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\MethodNames.cs,The tool detected the smell in this class because it contains only data members without any method implementation. Following fields and properties are declared in this class: ' Group' Join' Take' Skip' Where' Select' Orderby' ThenBy' Orderbydesc
Insufficient Modularization,LinqExtender,Query<T>,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Query.cs,The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 26 public methods
Insufficient Modularization,LinqExtender,Query<T>,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Query.cs,The tool detected the smell in this class because the class contains large number of methods. Total methods in the class: 43 methods
Insufficient Modularization,LinqExtender,Query<T>,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Query.cs,The tool detected the smell in this class because the class is highly complex. The sum of cyclomatic complexity of all methods of this class (i.e.' WMC) is: 118
Cyclically-dependent Modularization,LinqExtender.Abstraction,IBucket,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Abstraction\IBucket.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: LinqExtender.Abstraction.IBucket' LinqExtender.Bucket
Cyclically-dependent Modularization,LinqExtender,BucketItem,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\BucketItem.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: LinqExtender.BucketItem' LinqExtender.Bucket
Cyclically-dependent Modularization,LinqExtender,ProjectedQuery<T;S>,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\ProjectedQuery.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: LinqExtender.ProjectedQuery<T'S>' LinqExtender.Query<T>
Cyclically-dependent Modularization,LinqExtender.Fluent,FluentExpressionTree,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Fluent\FluentExpressionTree.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: LinqExtender.Fluent.FluentExpressionTree' LinqExtender.Fluent.FluentExpressionTree<T>
Cyclically-dependent Modularization,LinqExtender.Abstraction,IBucket,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Abstraction\IBucket.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: LinqExtender.Abstraction.IBucket' LinqExtender.Bucket' LinqExtender.BucketItem
Cyclically-dependent Modularization,LinqExtender,Bucket,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Bucket.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: LinqExtender.Bucket' LinqExtender.BucketItem' LinqExtender.Utility' LinqExtender.MemberReference
Cyclically-dependent Modularization,LinqExtender,Bucket,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Bucket.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: LinqExtender.Bucket' LinqExtender.BucketItem' LinqExtender.Utility' LinqExtender.TypeReference' LinqExtender.MemberReference
Cyclic Hierarchy,LinqExtender.Abstraction,IBucket,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Abstraction\IBucket.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: Bucket
Unfactored Hierarchy,LinqExtender.Ast,LogicalExpression,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Ast\LogicalExpression.cs,The tool detected the smell because a set of code clones has been found where at least one pair of classes belong to the same inheritance hierarchy. List of classes with start and end line numbers where clones has been found are:  LogicalExpression (D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Ast\LogicalExpression.cs' [14' 33])' BinaryExpression (D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Ast\BinaryExpression.cs' [17' 36])
Rebellious Hierarchy,LinqExtender.Collection,QueryCollection<T>,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Collection\QueryCollection.cs,The tool detected the smell in this class because method(s) of this class reject the methods provided by its supertypes. The method(s) that reject the suptertype's method are: AddRange' Sort
Cyclic Hierarchy,LinqExtender.Fluent,FluentExpressionTree,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Fluent\FluentExpressionTree.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: FluentExpressionTree<T>
Missing Hierarchy,LinqExtender.Fluent,FluentExpressionTree<T>,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Fluent\FluentExpressionTree.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: TreeNode' BucketItem (in method "BuildItem" of class "FluentExpressionTree<T>").
Broken Hierarchy,LinqExtender.Fluent,FluentExpressionTree<T>,D:\research\architectureSmells\repos\mehfuzh_LinqExtender\Source\Fluent\FluentExpressionTree.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): LinqExtender.Fluent.FluentExpressionTree
