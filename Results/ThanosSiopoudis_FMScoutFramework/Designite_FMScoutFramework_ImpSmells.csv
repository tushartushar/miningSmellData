Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FMScoutFramework.Core.Managers,GameManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\GameManager.cs,findFMProcess,Cyclomatic complexity of the method is 9
Long Parameter List,FMScoutFramework,ProcessMemoryAPI,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\ProcessMemoryAPI.cs,GetBaseAddress,The method has 5 parameters. Parameters: ProcessID' buffer' bufferend' heap' endaddress
Long Parameter List,FMScoutFramework.Core.Managers,PropertyInvoker,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\PropertyInvoker.cs,Set,The method has 5 parameters. Parameters: offset' baseObject' memoryAddress' databaseMode' value
Long Parameter List,FMScoutFramework.Core.Managers,PropertyInvoker,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\PropertyInvoker.cs,GetString,The method has 5 parameters. Parameters: offset' additionalStringOffset' baseObject' memoryAddress' databaseMode
Long Parameter List,FMScoutFramework.Core.Managers,PropertyInvoker,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\PropertyInvoker.cs,GetPointer,The method has 5 parameters. Parameters: offset' baseObject' memoryAddress' databaseMode' version
Long Statement,FMScoutFramework.Core.Entities.GameVersions,Steam_15_3_2_Mac,C:\repos\ThanosSiopoudis_FMScoutFramework\Defines\Versions\Steam_15_3_2_Mac.cs,SupportsProcess,The length of the statement  "			int numberOfObjects = GameManager.TryGetPointerObjects(MemoryAddresses.MainAddress' MemoryAddresses.Continent' ProcessManager.fmProcess' "15"); " is 143.
Long Statement,FMScoutFramework.Core.Entities.GameVersions,Steam_16_2_0_Linux,C:\repos\ThanosSiopoudis_FMScoutFramework\Defines\Versions\Steam_16_2_0_Linux.cs,SupportsProcess,The length of the statement  "			int numberOfObjects = GameManager.TryGetPointerObjects(MemoryAddresses.MainAddress' MemoryAddresses.Continent' ProcessManager.fmProcess' "15"); " is 143.
Long Statement,FMScoutFramework.Core.Entities.InGame,ContractClause,C:\repos\ThanosSiopoudis_FMScoutFramework\Entities\Ingame\ContractClauses.cs,ToString,The length of the statement  "				result = string.Format ("{0}/pw {1}"' this.Value.ToString ("C0"' CultureInfo.CreateSpecificCulture ("en-GB"))' this.Info); " is 122.
Long Statement,FMScoutFramework.Core.Managers,GameManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\GameManager.cs,findFMProcess,The length of the statement  "					foreach (var versionType in Assembly.GetCallingAssembly().GetTypes().Where(t => typeof(IIVersion).IsAssignableFrom(t))) { " is 121.
Long Statement,FMScoutFramework.Core.Managers,ObjectManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ObjectManager.cs,GetPersonMemoryAddresses,The length of the statement  "				byte[] buffer = ProcessManager.ReadProcessMemory(memoryBatch.Min()' Convert.ToInt32(memoryBatch.Max() + 2000 - memoryBatch.Min())); " is 131.
Long Statement,FMScoutFramework.Core.Managers,ObjectManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ObjectManager.cs,GetPersonMemoryAddresses,The length of the statement  "                byte[] buffer = ProcessManager.ReadProcessMemory(memoryBatch.Min()' Convert.ToUInt32(memoryBatch.Max() + 2000 - memoryBatch.Min())); " is 132.
Long Statement,FMScoutFramework.Core.Managers,ObjectManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ObjectManager.cs,GetPersonMemoryAddresses,The length of the statement  "				byte[] buffer = ProcessManager.ReadProcessMemory(memoryBatch.Min()' Convert.ToInt32(memoryBatch.Max() + 2000 - memoryBatch.Min())); " is 131.
Long Statement,FMScoutFramework.Core.Managers,ObjectManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ObjectManager.cs,GetMemoryAddresses,The length of the statement  "			int memoryAddress = ProcessManager.ReadInt32 (GameManager.Version.MemoryAddresses.MainAddress + GameManager.Version.MemoryAddresses.MainOffset); " is 144.
Long Statement,FMScoutFramework.Core.Managers,ObjectManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ObjectManager.cs,GetMemoryAddresses,The length of the statement  "			int memoryAddress = ProcessManager.ReadInt32 (GameManager.Version.MemoryAddresses.MainAddress + GameManager.Version.MemoryAddresses.MainOffset); " is 144.
Long Statement,FMScoutFramework.Core.Managers,ObjectManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ObjectManager.cs,GetMemoryAddresses,The length of the statement  "            int memoryAddress = ProcessManager.ReadInt32(ProcessManager.fmProcess.BaseAddress + GameManager.Version.MemoryAddresses.MainAddress); " is 133.
Complex Conditional,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,ReadDateTime,The conditional expression  "days > 0 && days < 366 && years > 1900 && years < 2150"  is complex.
Empty Catch Block,FMScoutFramework.Core.Managers,GameManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\GameManager.cs,findFMProcess,The method has an empty catch block.
Empty Catch Block,FMScoutFramework.Core.Managers,ObjectManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ObjectManager.cs,RetrieveObjectRealtime,The method has an empty catch block.
Magic Number,FMScoutFramework.Core.Entities.GameVersions,Steam_14_3_0_Linux,C:\repos\ThanosSiopoudis_FMScoutFramework\Defines\Versions\Steam_14_3_0_Linux.cs,SupportsProcess,The following statement contains a magic number: if (numberOfObjects != 7)  				return false;
Magic Number,FMScoutFramework.Core.Entities.GameVersions,Steam_14_3_0_Linux,C:\repos\ThanosSiopoudis_FMScoutFramework\Defines\Versions\Steam_14_3_0_Linux.cs,SupportsProcess,The following statement contains a magic number: if (dt.Year < 2012 || dt.Year > 2150)  				return false;
Magic Number,FMScoutFramework.Core.Entities.GameVersions,Steam_14_3_0_Linux,C:\repos\ThanosSiopoudis_FMScoutFramework\Defines\Versions\Steam_14_3_0_Linux.cs,SupportsProcess,The following statement contains a magic number: if (dt.Year < 2012 || dt.Year > 2150)  				return false;
Magic Number,FMScoutFramework.Core.Entities.GameVersions,Steam_14_3_1_Linux,C:\repos\ThanosSiopoudis_FMScoutFramework\Defines\Versions\Steam_14_3_1_Linux.cs,SupportsProcess,The following statement contains a magic number: if (numberOfObjects != 7)  				return false;
Magic Number,FMScoutFramework.Core.Entities.GameVersions,Steam_14_3_1_Linux,C:\repos\ThanosSiopoudis_FMScoutFramework\Defines\Versions\Steam_14_3_1_Linux.cs,SupportsProcess,The following statement contains a magic number: if (dt.Year < 2012 || dt.Year > 2150)  				return false;
Magic Number,FMScoutFramework.Core.Entities.GameVersions,Steam_14_3_1_Linux,C:\repos\ThanosSiopoudis_FMScoutFramework\Defines\Versions\Steam_14_3_1_Linux.cs,SupportsProcess,The following statement contains a magic number: if (dt.Year < 2012 || dt.Year > 2150)  				return false;
Magic Number,FMScoutFramework.Core.Entities.GameVersions,Steam_16_2_0_Linux,C:\repos\ThanosSiopoudis_FMScoutFramework\Defines\Versions\Steam_16_2_0_Linux.cs,SupportsProcess,The following statement contains a magic number: if (numberOfObjects != 7)  				return false;
Magic Number,FMScoutFramework.Core.Entities.GameVersions,Steam_16_2_0_Linux,C:\repos\ThanosSiopoudis_FMScoutFramework\Defines\Versions\Steam_16_2_0_Linux.cs,SupportsProcess,The following statement contains a magic number: if (dt.Year < 2012 || dt.Year > 2150)  				return false;
Magic Number,FMScoutFramework.Core.Entities.GameVersions,Steam_16_2_0_Linux,C:\repos\ThanosSiopoudis_FMScoutFramework\Defines\Versions\Steam_16_2_0_Linux.cs,SupportsProcess,The following statement contains a magic number: if (dt.Year < 2012 || dt.Year > 2150)  				return false;
Magic Number,FMScoutFramework.Core.Utilities,BitwiseOperations,C:\repos\ThanosSiopoudis_FMScoutFramework\Utilities\BitwiseOperations.cs,ror,The following statement contains a magic number: return (value >> bits) | (value << (32 - bits));
Magic Number,FMScoutFramework.Core.Utilities,BitwiseOperations,C:\repos\ThanosSiopoudis_FMScoutFramework\Utilities\BitwiseOperations.cs,ror_short,The following statement contains a magic number: return ((value >> bits) | (value << (16 - bits)) & 0xFFFF);
Magic Number,FMScoutFramework.Core.Utilities,BitwiseOperations,C:\repos\ThanosSiopoudis_FMScoutFramework\Utilities\BitwiseOperations.cs,rol,The following statement contains a magic number: return (value << bits) | (value >> (32 - bits));
Magic Number,FMScoutFramework.Core.Utilities,BitwiseOperations,C:\repos\ThanosSiopoudis_FMScoutFramework\Utilities\BitwiseOperations.cs,rol_short,The following statement contains a magic number: return ((value << bits) | (value >> (16 - bits)) & 0xFFFF) & 0xffff;
Magic Number,FMScoutFramework,ProcessMemoryAPI,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\ProcessMemoryAPI.cs,GetBaseAddress,The following statement contains a magic number: foreach (string line in memoryMap) {  				if (line.Contains ("[heap]")) {  					heapAddressLine = memoryMap [i];  					staticBlockAddressLine = memoryMap [i - 3];  					break;  				}  				i++;  			}
Magic Number,FMScoutFramework.Core.Managers,GameManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\GameManager.cs,findFMProcess,The following statement contains a magic number: if (!fmLoaded) {  				// Try to find info about the version  				// Lookup the objects in the memory  				for (int i = fmProcess.BaseAddress; i < fmProcess.EndPoint - 4; i += 4) {  					try {  						int continents = TryGetPointerObjects(i' 0x1c' fmProcess);  						if (continents == 7)  						{  							Debug.WriteLine ("Found a candidate @ 0x{0:X}"' i);  							Debug.WriteLine ("Persons: {0}"' TryGetPointerObjects(i' 0x3c' fmProcess));  						}  					}  					catch {  					}  				}  			}
Magic Number,FMScoutFramework.Core.Managers,GameManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\GameManager.cs,findFMProcess,The following statement contains a magic number: if (!fmLoaded) {  				// Try to find info about the version  				// Lookup the objects in the memory  				for (int i = fmProcess.BaseAddress; i < fmProcess.EndPoint - 4; i += 4) {  					try {  						int continents = TryGetPointerObjects(i' 0x1c' fmProcess);  						if (continents == 7)  						{  							Debug.WriteLine ("Found a candidate @ 0x{0:X}"' i);  							Debug.WriteLine ("Persons: {0}"' TryGetPointerObjects(i' 0x3c' fmProcess));  						}  					}  					catch {  					}  				}  			}
Magic Number,FMScoutFramework.Core.Managers,GameManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\GameManager.cs,findFMProcess,The following statement contains a magic number: if (!fmLoaded) {  				// Try to find info about the version  				// Lookup the objects in the memory  				for (int i = fmProcess.BaseAddress; i < fmProcess.EndPoint - 4; i += 4) {  					try {  						int continents = TryGetPointerObjects(i' 0x1c' fmProcess);  						if (continents == 7)  						{  							Debug.WriteLine ("Found a candidate @ 0x{0:X}"' i);  							Debug.WriteLine ("Persons: {0}"' TryGetPointerObjects(i' 0x3c' fmProcess));  						}  					}  					catch {  					}  				}  			}
Magic Number,FMScoutFramework.Core.Managers,ObjectManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ObjectManager.cs,GetPersonMemoryAddresses,The following statement contains a magic number: foreach (var memoryBatch in memoryAddressBatches)  			{                  #if LINUX  				byte[] buffer = ProcessManager.ReadProcessMemory(memoryBatch.Min()' Convert.ToInt32(memoryBatch.Max() + 2000 - memoryBatch.Min()));                  #endif                  #if WINDOWS                  byte[] buffer = ProcessManager.ReadProcessMemory(memoryBatch.Min()' Convert.ToUInt32(memoryBatch.Max() + 2000 - memoryBatch.Min()));                  #endif  				#if MAC  				byte[] buffer = ProcessManager.ReadProcessMemory(memoryBatch.Min()' Convert.ToInt32(memoryBatch.Max() + 2000 - memoryBatch.Min()));  				#endif  				int lowestPointerInBatch = memoryBatch.Min();  				foreach (int memoryAddress in memoryBatch)  				{  					//first 4 bytes contain the type  					int type = ProcessManager.ReadInt32(buffer' memoryAddress + 0x0 - lowestPointerInBatch);  					lock (memAddrSyncroot)  					{  						if (type == GameManager.Version.PersonEnum.Player) {  							memoryAddresses.PlayerAddresses.Add (memoryAddress);  						} else if (type == GameManager.Version.PersonEnum.Staff) {  							memoryAddresses.StaffAddresses.Add (memoryAddress);  						} else if (type == GameManager.Version.PersonEnum.HumanManager) {  							memoryAddresses.HumanManagersAddresses.Add (memoryAddress);  						} else if (type == GameManager.Version.PersonEnum.PlayerStaff) {  							memoryAddresses.PlayerStaffAddresses.Add (memoryAddress);  						} else {  							// Dump it  							if (unknownAddresses.IndexOf (type) < 0 && type > 0x0) {  								int personID = ProcessManager.ReadInt32 (buffer' memoryAddress + 0x8 - lowestPointerInBatch);  								Debug.WriteLine ("Found Unknown Person Type: {0:X} @ 0x{1:X} with ID: {2}"' type' memoryAddress' personID);  								unknownAddresses.Add (type);  							}  						}  					}  				}  			}
Magic Number,FMScoutFramework.Core.Managers,ObjectManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ObjectManager.cs,SplitMemoryAddressesIntoBuffer,The following statement contains a magic number: const int bitshift = 18;
Magic Number,FMScoutFramework.Core.Managers,ObjectManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ObjectManager.cs,SplitMemoryAddressesIntoBuffer,The following statement contains a magic number: int['] chunks = new int[maxBytes >> bitshift' 10000];
Magic Number,FMScoutFramework.Core.Managers,ObjectManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ObjectManager.cs,GetMemoryAddresses,The following statement contains a magic number: byte[] pointerCache = ProcessManager.ReadProcessMemory (firstAddress' numberOfObjects * 4);
Magic Number,FMScoutFramework.Core.Managers,ObjectManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ObjectManager.cs,GetMemoryAddresses,The following statement contains a magic number: for (int i = 0; i < pointerCache.Length; i += 4) {  				int toAdd = ProcessManager.ReadInt32 (pointerCache' i);  				if (toAdd != 0)  					memoryAddresses.Add (toAdd);  			}
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,ReadInt16,The following statement contains a magic number: byte[] buffer = ReadProcessMemory (address' 2);
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,ReadFloat,The following statement contains a magic number: byte[] buffer = ReadProcessMemory (address' 4);
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,ReadDouble,The following statement contains a magic number: byte[] buffer = ReadProcessMemory (address' 4);
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,ReadInt32,The following statement contains a magic number: byte[] buffer = ReadProcessMemory (address' 4);
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,ReadUInt32,The following statement contains a magic number: byte[] buffer = ReadProcessMemory ((int)address' 4);
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,ReadUInt16,The following statement contains a magic number: byte[] buffer = ReadProcessMemory (address' 2);
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,ReadDateTime,The following statement contains a magic number: if (days > 0 && days < 366 && years > 1900 && years < 2150) {  				return FMScoutFramework.Core.Converters.DateConverter.FromFmDateTime ((days - 1)' years);  			}
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,ReadDateTime,The following statement contains a magic number: if (days > 0 && days < 366 && years > 1900 && years < 2150) {  				return FMScoutFramework.Core.Converters.DateConverter.FromFmDateTime ((days - 1)' years);  			}
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,ReadDateTime,The following statement contains a magic number: if (days > 0 && days < 366 && years > 1900 && years < 2150) {  				return FMScoutFramework.Core.Converters.DateConverter.FromFmDateTime ((days - 1)' years);  			}
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,ReadDateTime,The following statement contains a magic number: return new DateTime (1900' 1' 1);
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,ReadString,The following statement contains a magic number: if (!readStringCache.ContainsKey (cacheKey)) {  				if (!isRead)  					currentAddress = ProcessManager.ReadInt32 (currentAddress);    				if (addBufferIndex >= 0)  					currentAddress = ProcessManager.ReadInt32 (currentAddress + (int)addBufferIndex);    				string str = "";    				// Skip the first byte  				currentAddress += 0x1;  				// Get the string Length  				int length = (int)ProcessManager.ReadInt16(currentAddress);  				if (length <= 0) {  					return "-";  				}  				length = length * 2;  				currentAddress += 0x3;                    #if WINDOWS                  byte[] buffer = ProcessManager.ReadProcessMemory(currentAddress' (uint)length);                  #endif    				#if LINUX || MAC  				byte[] buffer = ProcessManager.ReadProcessMemory (currentAddress' length);                  #endif  				if (buffer.Length < length) {  					return "";  				}  				str = UnicodeEncoding.Unicode.GetString (buffer);    				readStringCache.Add (cacheKey' str);  			}
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,GetAddress,The following statement contains a magic number: try {  				num += buffer[index];  				num += buffer[index + 1] * 0x100;  				num += buffer[index + 2] * 0x10000;  				num += buffer[index + 3] * 0x1000000;  			}  			catch {  				return 0;  			}
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,GetAddress,The following statement contains a magic number: try {  				num += buffer[index];  				num += buffer[index + 1] * 0x100;  				num += buffer[index + 2] * 0x10000;  				num += buffer[index + 3] * 0x1000000;  			}  			catch {  				return 0;  			}
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,WriteDateTime,The following statement contains a magic number: WriteInt16(value.Year' address + 2);
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,WriteInt16,The following statement contains a magic number: byte[] buffer = new byte[2];
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,WriteInt16,The following statement contains a magic number: if (!reverse)              {                  buffer[0] = (byte)(value & 0xFF);                  buffer[1] = (byte)((value & 0xFF00) >> 8);              }              else              {                  buffer[1] = (byte)(value & 0xFF);                  buffer[0] = (byte)((value & 0xFF00) >> 8);              }
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,WriteInt16,The following statement contains a magic number: if (!reverse)              {                  buffer[0] = (byte)(value & 0xFF);                  buffer[1] = (byte)((value & 0xFF00) >> 8);              }              else              {                  buffer[1] = (byte)(value & 0xFF);                  buffer[0] = (byte)((value & 0xFF00) >> 8);              }
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,WriteInt16,The following statement contains a magic number: WriteProcessMemory(address' buffer' 2);
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,WriteInt32,The following statement contains a magic number: byte[] buffer = new byte[4];
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,WriteInt32,The following statement contains a magic number: if (!reverse)              {                  buffer[0] = (byte)(value & 0xFF);                  buffer[1] = (byte)((value & 0xFF00) >> 8);                  buffer[2] = (byte)((value & 0xFF0000) >> 0x10);                  buffer[3] = (byte)((value & 0xFF000000) >> 0x18);              }              else              {                  buffer[3] = (byte)(value & 0xFF);                  buffer[2] = (byte)((value & 0xFF00) >> 8);                  buffer[1] = (byte)((value & 0xFF0000) >> 0x10);                  buffer[0] = (byte)((value & 0xFF000000) >> 0x18);              }
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,WriteInt32,The following statement contains a magic number: if (!reverse)              {                  buffer[0] = (byte)(value & 0xFF);                  buffer[1] = (byte)((value & 0xFF00) >> 8);                  buffer[2] = (byte)((value & 0xFF0000) >> 0x10);                  buffer[3] = (byte)((value & 0xFF000000) >> 0x18);              }              else              {                  buffer[3] = (byte)(value & 0xFF);                  buffer[2] = (byte)((value & 0xFF00) >> 8);                  buffer[1] = (byte)((value & 0xFF0000) >> 0x10);                  buffer[0] = (byte)((value & 0xFF000000) >> 0x18);              }
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,WriteInt32,The following statement contains a magic number: if (!reverse)              {                  buffer[0] = (byte)(value & 0xFF);                  buffer[1] = (byte)((value & 0xFF00) >> 8);                  buffer[2] = (byte)((value & 0xFF0000) >> 0x10);                  buffer[3] = (byte)((value & 0xFF000000) >> 0x18);              }              else              {                  buffer[3] = (byte)(value & 0xFF);                  buffer[2] = (byte)((value & 0xFF00) >> 8);                  buffer[1] = (byte)((value & 0xFF0000) >> 0x10);                  buffer[0] = (byte)((value & 0xFF000000) >> 0x18);              }
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,WriteInt32,The following statement contains a magic number: if (!reverse)              {                  buffer[0] = (byte)(value & 0xFF);                  buffer[1] = (byte)((value & 0xFF00) >> 8);                  buffer[2] = (byte)((value & 0xFF0000) >> 0x10);                  buffer[3] = (byte)((value & 0xFF000000) >> 0x18);              }              else              {                  buffer[3] = (byte)(value & 0xFF);                  buffer[2] = (byte)((value & 0xFF00) >> 8);                  buffer[1] = (byte)((value & 0xFF0000) >> 0x10);                  buffer[0] = (byte)((value & 0xFF000000) >> 0x18);              }
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,WriteInt32,The following statement contains a magic number: if (!reverse)              {                  buffer[0] = (byte)(value & 0xFF);                  buffer[1] = (byte)((value & 0xFF00) >> 8);                  buffer[2] = (byte)((value & 0xFF0000) >> 0x10);                  buffer[3] = (byte)((value & 0xFF000000) >> 0x18);              }              else              {                  buffer[3] = (byte)(value & 0xFF);                  buffer[2] = (byte)((value & 0xFF00) >> 8);                  buffer[1] = (byte)((value & 0xFF0000) >> 0x10);                  buffer[0] = (byte)((value & 0xFF000000) >> 0x18);              }
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,WriteInt32,The following statement contains a magic number: if (!reverse)              {                  buffer[0] = (byte)(value & 0xFF);                  buffer[1] = (byte)((value & 0xFF00) >> 8);                  buffer[2] = (byte)((value & 0xFF0000) >> 0x10);                  buffer[3] = (byte)((value & 0xFF000000) >> 0x18);              }              else              {                  buffer[3] = (byte)(value & 0xFF);                  buffer[2] = (byte)((value & 0xFF00) >> 8);                  buffer[1] = (byte)((value & 0xFF0000) >> 0x10);                  buffer[0] = (byte)((value & 0xFF000000) >> 0x18);              }
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,WriteInt32,The following statement contains a magic number: WriteProcessMemory(address' buffer' 4);
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,WriteFloat,The following statement contains a magic number: WriteProcessMemory(address' buffer' 4);
Magic Number,FMScoutFramework.Core.Managers,ProcessManager,C:\repos\ThanosSiopoudis_FMScoutFramework\VirtualMemory\Managers\ProcessManager.cs,WriteString,The following statement contains a magic number: WriteProcessMemory(address' value' 4);
