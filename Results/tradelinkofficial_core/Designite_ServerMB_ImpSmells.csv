Implementation smell,Namespace,Class,File,Method,Description
Long Method,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,m_HistMgr_OnDataEvent,The method has 136 lines of code.
Long Method,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,tl_newSendOrderRequest,The method has 121 lines of code.
Long Method,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The method has 162 lines of code.
Complex Method,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,m_OrderClient_OnHistoryAdded,Cyclomatic complexity of the method is 8
Complex Method,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,m_HistMgr_OnDataEvent,Cyclomatic complexity of the method is 10
Complex Method,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,tl_newOrderCancelRequest,Cyclomatic complexity of the method is 9
Complex Method,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,tl_newSendOrderRequest,Cyclomatic complexity of the method is 11
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,tl_newRegisterSymbols,The length of the statement  "					 * TODO: pmh - determine which qsf level(s) the user desires rather than waste an Advise on one they don't? How to do that? " is 122.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,tl_newRegisterSymbols,The length of the statement  "					int _qsf = (int)enumQuoteServiceFlags.qsfLevelOne + (int)enumQuoteServiceFlags.qsfTimeAndSales;  //pmh - L1 & T&S regardless. " is 125.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,tl_newRegisterSymbols,The length of the statement  "					if (syms[i].Substring(1' 1) != "+") _qsf += (int)enumQuoteServiceFlags.qsfOptions;               //pmh - Add options chain if not options symbol " is 144.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,submitBarRequest,The length of the statement  "						  debug(symbol + "Day: lID:" + lRequestID + " lPd:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs + " bUp:" + bUpdate); " is 137.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,submitBarRequest,The length of the statement  "                    moDayBar.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate); " is 121.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,submitBarRequest,The length of the statement  "						  debug(symbol + "Min: lID:" + lRequestID + " lPd:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs + " bUp:" + bUpdate + " ext:" + bExtSession); " is 161.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,submitBarRequest,The length of the statement  "                    moMinBar.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate' bExtSession); " is 134.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,submitBarRequest,The length of the statement  "						debug(symbol + "Tick: lID:" + lRequestID + " filter:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs + " bUp:" + bUpdate); " is 141.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,submitBarRequest,The length of the statement  "//						  moTickBar.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate); " is 132.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,submitBarRequest,The length of the statement  "						  moTickBar.SendRequest(symbol' lRequestID' (int)MBTHISTLib.enumTickRequestFilter.trfAllTicks' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate); " is 164.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,m_OrderClient_OnAccountLoaded,The length of the statement  "				  // + " DefaultAccount is: " + m_OrderClient.Accounts.DefaultAccount.Account + ";" + m_OrderClient.Accounts.DefaultAccount.Customer); " is 132.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,m_OrderClient_OnHistoryAdded,The length of the statement  "			  debug(String.Format("m_OrderClient_OnHistoryAdded {0} {1} {2} {3} {4} {5} {6}"' pHist.Symbol' pHist.Event' pHist.OrderNumber' tlid' price' pHist.Quantity' pHist.Message)); " is 171.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,m_OrderClient_OnPositionAdded,The length of the statement  "			  debug(String.Format("m_OrderClient_OnPositionAdded: {0} {1} {2}"' pPos.Account.Account' pPos.Symbol' pPos.AggregatePosition)); " is 126.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,m_OrderClient_OnPositionUpdated,The length of the statement  "			  debug(String.Format("m_OrderClient_OnPositionUpdated: {0} {1} {2}"' pPos.Account.Account' pPos.Symbol' pPos.AggregatePosition)); " is 128.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,PositionHasChanged,The length of the statement  "//pmh bug!        (decimal)(((pPos.IntradayPosition * pPos.IntradayPrice) + (pPos.OvernightPosition * pPos.OvernightPrice)) / (pPos.IntradayPrice + pPos.OvernightPosition)) " is 172.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,PositionHasChanged,The length of the statement  "						(decimal)(((pPos.IntradayPosition * pPos.IntradayPrice) + (pPos.OvernightPosition * pPos.OvernightPrice)) / (pPos.IntradayPosition + pPos.OvernightPosition)) " is 157.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,test,The length of the statement  "                if (m_OrderClient.Accounts.DefaultAccount != null && m_OrderClient.Accounts.DefaultAccount.State == enumAcctState.asLoaded) " is 123.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,tl_newOrderCancelRequest,The length of the statement  "                    debug(String.Format("WARNING: Repeated cancel request for order {0} received from TradeLink. MBT Order is {1}. Checking if complete..."' tlid' bid)); " is 149.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,tl_newOrderCancelRequest,The length of the statement  "                        debug(String.Format("WARNING: Repeated cancel request for order that no longer exists: {0} received from TradeLink. MBT Order was {1}. Checking if complete..."' tlid' bid)); " is 173.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,tl_newOrderCancelRequest,The length of the statement  "                debug(String.Format("WARNING: Repeated cancel request for completely canceled order {0} received from TradeLink. No current MBT Order exists for it"' tlid)); " is 157.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,tl_newSendOrderRequest,The length of the statement  "            //bool good = m_OrderClient.Submit(side' o.UnsignedSize' o.symbol' (double)o.price' (double)o.stopp' tif' 0' otype' voltype' 0' m_account' route' ""' 0' 0' dt' dt' 0' 0' 0' 0' 0' ref res); " is 188.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,tl_newSendOrderRequest,The length of the statement  "					debug(String.Format("Order failed: [{o}]. Account [{1}]. pbstrRetMsg: [{2}]"' o' o.Account' pbstrRetMsg)); // 9/13/12 - pmh " is 123.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,tl_newSendOrderRequest,The length of the statement  "					debug(String.Format("Order sent: [{o}]. Account [{1}]. token: [{2}]"' o' o.Account' token));             // 9/13/12 - pmh " is 121.
Long Statement,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,DisplayOrder,The length of the statement  "				retVal += "BuySell=" + (order.BuySell == MBConst.VALUE_BUY ? "Buy" : (order.BuySell == MBConst.VALUE_SELL ? "Sell" : "undefined BuySell: " + order.BuySell)); " is 157.
Long Statement,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ServerMBMain)); " is 132.
Long Statement,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The length of the statement  "            this.toolTip1.SetToolTip(this._loginbut' "if you experience problems using MBTrading' please email tradelink-users@googlegr" + " is 126.
Long Statement,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The length of the statement  "            this._verbon.DataBindings.Add(new System.Windows.Forms.Binding("Checked"' global::ServerMB.Properties.Settings.Default' "VerboseDebugging"' true' System.Windows.Forms.DataSourceUpdateMode.OnPropertyChanged)); " is 208.
Long Statement,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The length of the statement  "            this._id.DataBindings.Add(new System.Windows.Forms.Binding("Value"' global::ServerMB.Properties.Settings.Default' "memberid"' true' System.Windows.Forms.DataSourceUpdateMode.OnPropertyChanged)); " is 194.
Long Statement,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The length of the statement  "            this._pass.DataBindings.Add(new System.Windows.Forms.Binding("Text"' global::ServerMB.Properties.Settings.Default' "password"' true' System.Windows.Forms.DataSourceUpdateMode.OnPropertyChanged)); " is 195.
Long Statement,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The length of the statement  "            this._user.DataBindings.Add(new System.Windows.Forms.Binding("Text"' global::ServerMB.Properties.Settings.Default' "username"' true' System.Windows.Forms.DataSourceUpdateMode.OnPropertyChanged)); " is 195.
Empty Catch Block,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,ServerMBMain_FormClosing,The method has an empty catch block.
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,submitBarRequest,The following statement contains a magic number: int lRequestID = (int)br.Interval % 100;
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,submitBarRequest,The following statement contains a magic number: int lPeriod = (int)br.Interval / 100;
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,submitBarRequest,The following statement contains a magic number: int lMaxRecs = br.CustomInterval / 10;
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,submitBarRequest,The following statement contains a magic number: bool bUpdate = (br.CustomInterval % 10 == 0) ? false : true;
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,submitBarRequest,The following statement contains a magic number: int lRequestType = lRequestID % 10;
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,submitBarRequest,The following statement contains a magic number: switch (lRequestType)              {                  case 1:                      MbtHistDayBar moDayBar = m_HistMgr.CreateHistDayBar();                      moDayBar.Clear();  						  debug(symbol + "Day: lID:" + lRequestID + " lPd:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs + " bUp:" + bUpdate);                      moDayBar.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate);                      break;                  case 2:                      MbtHistMinBar moMinBar = m_HistMgr.CreateHistMinBar();                      moMinBar.Clear();  						  debug(symbol + "Min: lID:" + lRequestID + " lPd:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs + " bUp:" + bUpdate + " ext:" + bExtSession);                      moMinBar.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate' bExtSession);                      break;                  case 3:                      MbtHistTick moTickBar = m_HistMgr.CreateHistTick();                      moTickBar.Clear();  						lPeriod=0; // for all ticks  						debug(symbol + "Tick: lID:" + lRequestID + " filter:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs + " bUp:" + bUpdate);  //						  moTickBar.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate);  						  moTickBar.SendRequest(symbol' lRequestID' (int)MBTHISTLib.enumTickRequestFilter.trfAllTicks' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate);                      break;  						//pmh - 9/13/12 - PV bar  					 case 4:  						  MbtHistPVBar moMinPV = m_HistMgr.CreateHistPVBar();  						  moMinPV.Clear();  						  debug(symbol + "PV: lID:" + lRequestID + " lPd:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs);  						  moMinPV.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs);  						  break;  				}
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,submitBarRequest,The following statement contains a magic number: switch (lRequestType)              {                  case 1:                      MbtHistDayBar moDayBar = m_HistMgr.CreateHistDayBar();                      moDayBar.Clear();  						  debug(symbol + "Day: lID:" + lRequestID + " lPd:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs + " bUp:" + bUpdate);                      moDayBar.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate);                      break;                  case 2:                      MbtHistMinBar moMinBar = m_HistMgr.CreateHistMinBar();                      moMinBar.Clear();  						  debug(symbol + "Min: lID:" + lRequestID + " lPd:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs + " bUp:" + bUpdate + " ext:" + bExtSession);                      moMinBar.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate' bExtSession);                      break;                  case 3:                      MbtHistTick moTickBar = m_HistMgr.CreateHistTick();                      moTickBar.Clear();  						lPeriod=0; // for all ticks  						debug(symbol + "Tick: lID:" + lRequestID + " filter:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs + " bUp:" + bUpdate);  //						  moTickBar.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate);  						  moTickBar.SendRequest(symbol' lRequestID' (int)MBTHISTLib.enumTickRequestFilter.trfAllTicks' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate);                      break;  						//pmh - 9/13/12 - PV bar  					 case 4:  						  MbtHistPVBar moMinPV = m_HistMgr.CreateHistPVBar();  						  moMinPV.Clear();  						  debug(symbol + "PV: lID:" + lRequestID + " lPd:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs);  						  moMinPV.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs);  						  break;  				}
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,submitBarRequest,The following statement contains a magic number: switch (lRequestType)              {                  case 1:                      MbtHistDayBar moDayBar = m_HistMgr.CreateHistDayBar();                      moDayBar.Clear();  						  debug(symbol + "Day: lID:" + lRequestID + " lPd:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs + " bUp:" + bUpdate);                      moDayBar.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate);                      break;                  case 2:                      MbtHistMinBar moMinBar = m_HistMgr.CreateHistMinBar();                      moMinBar.Clear();  						  debug(symbol + "Min: lID:" + lRequestID + " lPd:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs + " bUp:" + bUpdate + " ext:" + bExtSession);                      moMinBar.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate' bExtSession);                      break;                  case 3:                      MbtHistTick moTickBar = m_HistMgr.CreateHistTick();                      moTickBar.Clear();  						lPeriod=0; // for all ticks  						debug(symbol + "Tick: lID:" + lRequestID + " filter:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs + " bUp:" + bUpdate);  //						  moTickBar.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate);  						  moTickBar.SendRequest(symbol' lRequestID' (int)MBTHISTLib.enumTickRequestFilter.trfAllTicks' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate);                      break;  						//pmh - 9/13/12 - PV bar  					 case 4:  						  MbtHistPVBar moMinPV = m_HistMgr.CreateHistPVBar();  						  moMinPV.Clear();  						  debug(symbol + "PV: lID:" + lRequestID + " lPd:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs);  						  moMinPV.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs);  						  break;  				}
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,MbtDayInt2CustInt,The following statement contains a magic number: switch (lPeriod)  				{  						case -3:  							return 365 * (int)BarInterval.Day;   						case -2:  							return 30 * (int)BarInterval.Day;   						case -1:  							return 7 * (int)BarInterval.Day;   						case 0: return (int)BarInterval.Day;   						default: return lPeriod * (int)BarInterval.Day;   				}
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,MbtDayInt2CustInt,The following statement contains a magic number: switch (lPeriod)  				{  						case -3:  							return 365 * (int)BarInterval.Day;   						case -2:  							return 30 * (int)BarInterval.Day;   						case -1:  							return 7 * (int)BarInterval.Day;   						case 0: return (int)BarInterval.Day;   						default: return lPeriod * (int)BarInterval.Day;   				}
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,MbtDayInt2CustInt,The following statement contains a magic number: switch (lPeriod)  				{  						case -3:  							return 365 * (int)BarInterval.Day;   						case -2:  							return 30 * (int)BarInterval.Day;   						case -1:  							return 7 * (int)BarInterval.Day;   						case 0: return (int)BarInterval.Day;   						default: return lPeriod * (int)BarInterval.Day;   				}
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,MbtDayInt2CustInt,The following statement contains a magic number: switch (lPeriod)  				{  						case -3:  							return 365 * (int)BarInterval.Day;   						case -2:  							return 30 * (int)BarInterval.Day;   						case -1:  							return 7 * (int)BarInterval.Day;   						case 0: return (int)BarInterval.Day;   						default: return lPeriod * (int)BarInterval.Day;   				}
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,MbtDayInt2CustInt,The following statement contains a magic number: switch (lPeriod)  				{  						case -3:  							return 365 * (int)BarInterval.Day;   						case -2:  							return 30 * (int)BarInterval.Day;   						case -1:  							return 7 * (int)BarInterval.Day;   						case 0: return (int)BarInterval.Day;   						default: return lPeriod * (int)BarInterval.Day;   				}
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,m_HistMgr_OnDataEvent,The following statement contains a magic number: int lRequestType = lRequestId % 10;
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,m_HistMgr_OnDataEvent,The following statement contains a magic number: switch (lRequestType)  			  {  				  case 1:  					  //pmh ?!? - debug("number of client");  					  MbtHistDayBar barDay = pHist as MbtHistDayBar;  					  debug("Day bar' " + barDay.Count + " recs");  					  barDay.Last();  					  while (!barDay.Bof)  					  {  						  debug("number of client"); //pmh ?!?  						  symbol = barDay.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  open = Convert.ToDecimal(barDay.Open' System.Globalization.CultureInfo.InvariantCulture);  						  high = Convert.ToDecimal(barDay.High' System.Globalization.CultureInfo.InvariantCulture);  						  low = Convert.ToDecimal(barDay.Low' System.Globalization.CultureInfo.InvariantCulture);  						  close = Convert.ToDecimal(barDay.Close' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barDay.TotalVolume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barDay.CloseDate);  						  time = 0;  						  MbtCustInt = MbtDayInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barDay.Symbol' MbtCustInt);  						  debug("number of client" + tl.NumClients);  						  debug("bar" + BarImpl.Serialize(b));  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barDay.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;    				  case 2:  					  MbtHistMinBar barMin = pHist as MbtHistMinBar;  					  debug("Min bar' " + barMin.Count + " recs");  					  barMin.Last();  					  while (!barMin.Bof)  					  {  						  symbol = barMin.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  open = Convert.ToDecimal(barMin.Open' System.Globalization.CultureInfo.InvariantCulture);  						  high = Convert.ToDecimal(barMin.High' System.Globalization.CultureInfo.InvariantCulture);  						  low = Convert.ToDecimal(barMin.Low' System.Globalization.CultureInfo.InvariantCulture);  						  close = Convert.ToDecimal(barMin.Close' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barMin.TotalVolume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barMin.LocalDateTime);  						  time = Util.ToTLTime(barMin.LocalDateTime);  						  MbtCustInt = MbtMinInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barMin.Symbol' MbtCustInt);  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barMin.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;    				  case 3:  					  /* pmh  					   * 0 = All ticks  					   * 1 = Trade ticks  					   * 2 = Bid/Ask ticks  					   * 3 = Bid ticks  					   * 4 = Ask ticks  					   */  					  MbtHistTick barTick = pHist as MbtHistTick;  					  debug("Tick bar' " + barTick.Count + " recs (showing only 1 - Trade ticks)");  					  TickImpl k = new TickImpl(barTick.Symbol);  					  //MBT default tick data is trade data  					  int lTickFilter = 1;  					  barTick.First();  					  switch (lTickFilter)  					  {  						  case 1:  							  while (!barTick.Bof)  							  {  								  k.symbol = barTick.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  								  k.trade = Convert.ToDecimal(barTick.Price);  								  k.ex = barTick.Exchange;  								  k.size = barTick.Volume;  								  k.date = Util.ToTLDate(barTick.LocalDateTime);  								  k.time = Util.ToTLTime(barTick.LocalDateTime);  								  SendNewTick(k);  								  barTick.Previous();  							  };  							  break;  					  }  					  break;    				  case 4: //pmh - 9/15/12 - PV bars  					  MbtHistPVBar barPV = pHist as MbtHistPVBar;  					  debug("PV bar' " + barPV.Count + " recs");  					  barPV.Last();  					  while (!barPV.Bof)  					  {  						  open = high = low = 0;  						  symbol = barPV.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  close = Convert.ToDecimal(barPV.Price' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barPV.Volume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barPV.LocalDateTime);  						  time = Util.ToTLTime(barPV.LocalDateTime);  						  MbtCustInt = MbtMinInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barPV.Symbol' MbtCustInt);  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barPV.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;  			  }
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,m_HistMgr_OnDataEvent,The following statement contains a magic number: switch (lRequestType)  			  {  				  case 1:  					  //pmh ?!? - debug("number of client");  					  MbtHistDayBar barDay = pHist as MbtHistDayBar;  					  debug("Day bar' " + barDay.Count + " recs");  					  barDay.Last();  					  while (!barDay.Bof)  					  {  						  debug("number of client"); //pmh ?!?  						  symbol = barDay.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  open = Convert.ToDecimal(barDay.Open' System.Globalization.CultureInfo.InvariantCulture);  						  high = Convert.ToDecimal(barDay.High' System.Globalization.CultureInfo.InvariantCulture);  						  low = Convert.ToDecimal(barDay.Low' System.Globalization.CultureInfo.InvariantCulture);  						  close = Convert.ToDecimal(barDay.Close' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barDay.TotalVolume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barDay.CloseDate);  						  time = 0;  						  MbtCustInt = MbtDayInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barDay.Symbol' MbtCustInt);  						  debug("number of client" + tl.NumClients);  						  debug("bar" + BarImpl.Serialize(b));  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barDay.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;    				  case 2:  					  MbtHistMinBar barMin = pHist as MbtHistMinBar;  					  debug("Min bar' " + barMin.Count + " recs");  					  barMin.Last();  					  while (!barMin.Bof)  					  {  						  symbol = barMin.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  open = Convert.ToDecimal(barMin.Open' System.Globalization.CultureInfo.InvariantCulture);  						  high = Convert.ToDecimal(barMin.High' System.Globalization.CultureInfo.InvariantCulture);  						  low = Convert.ToDecimal(barMin.Low' System.Globalization.CultureInfo.InvariantCulture);  						  close = Convert.ToDecimal(barMin.Close' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barMin.TotalVolume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barMin.LocalDateTime);  						  time = Util.ToTLTime(barMin.LocalDateTime);  						  MbtCustInt = MbtMinInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barMin.Symbol' MbtCustInt);  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barMin.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;    				  case 3:  					  /* pmh  					   * 0 = All ticks  					   * 1 = Trade ticks  					   * 2 = Bid/Ask ticks  					   * 3 = Bid ticks  					   * 4 = Ask ticks  					   */  					  MbtHistTick barTick = pHist as MbtHistTick;  					  debug("Tick bar' " + barTick.Count + " recs (showing only 1 - Trade ticks)");  					  TickImpl k = new TickImpl(barTick.Symbol);  					  //MBT default tick data is trade data  					  int lTickFilter = 1;  					  barTick.First();  					  switch (lTickFilter)  					  {  						  case 1:  							  while (!barTick.Bof)  							  {  								  k.symbol = barTick.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  								  k.trade = Convert.ToDecimal(barTick.Price);  								  k.ex = barTick.Exchange;  								  k.size = barTick.Volume;  								  k.date = Util.ToTLDate(barTick.LocalDateTime);  								  k.time = Util.ToTLTime(barTick.LocalDateTime);  								  SendNewTick(k);  								  barTick.Previous();  							  };  							  break;  					  }  					  break;    				  case 4: //pmh - 9/15/12 - PV bars  					  MbtHistPVBar barPV = pHist as MbtHistPVBar;  					  debug("PV bar' " + barPV.Count + " recs");  					  barPV.Last();  					  while (!barPV.Bof)  					  {  						  open = high = low = 0;  						  symbol = barPV.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  close = Convert.ToDecimal(barPV.Price' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barPV.Volume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barPV.LocalDateTime);  						  time = Util.ToTLTime(barPV.LocalDateTime);  						  MbtCustInt = MbtMinInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barPV.Symbol' MbtCustInt);  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barPV.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;  			  }
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,m_HistMgr_OnDataEvent,The following statement contains a magic number: switch (lRequestType)  			  {  				  case 1:  					  //pmh ?!? - debug("number of client");  					  MbtHistDayBar barDay = pHist as MbtHistDayBar;  					  debug("Day bar' " + barDay.Count + " recs");  					  barDay.Last();  					  while (!barDay.Bof)  					  {  						  debug("number of client"); //pmh ?!?  						  symbol = barDay.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  open = Convert.ToDecimal(barDay.Open' System.Globalization.CultureInfo.InvariantCulture);  						  high = Convert.ToDecimal(barDay.High' System.Globalization.CultureInfo.InvariantCulture);  						  low = Convert.ToDecimal(barDay.Low' System.Globalization.CultureInfo.InvariantCulture);  						  close = Convert.ToDecimal(barDay.Close' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barDay.TotalVolume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barDay.CloseDate);  						  time = 0;  						  MbtCustInt = MbtDayInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barDay.Symbol' MbtCustInt);  						  debug("number of client" + tl.NumClients);  						  debug("bar" + BarImpl.Serialize(b));  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barDay.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;    				  case 2:  					  MbtHistMinBar barMin = pHist as MbtHistMinBar;  					  debug("Min bar' " + barMin.Count + " recs");  					  barMin.Last();  					  while (!barMin.Bof)  					  {  						  symbol = barMin.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  open = Convert.ToDecimal(barMin.Open' System.Globalization.CultureInfo.InvariantCulture);  						  high = Convert.ToDecimal(barMin.High' System.Globalization.CultureInfo.InvariantCulture);  						  low = Convert.ToDecimal(barMin.Low' System.Globalization.CultureInfo.InvariantCulture);  						  close = Convert.ToDecimal(barMin.Close' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barMin.TotalVolume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barMin.LocalDateTime);  						  time = Util.ToTLTime(barMin.LocalDateTime);  						  MbtCustInt = MbtMinInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barMin.Symbol' MbtCustInt);  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barMin.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;    				  case 3:  					  /* pmh  					   * 0 = All ticks  					   * 1 = Trade ticks  					   * 2 = Bid/Ask ticks  					   * 3 = Bid ticks  					   * 4 = Ask ticks  					   */  					  MbtHistTick barTick = pHist as MbtHistTick;  					  debug("Tick bar' " + barTick.Count + " recs (showing only 1 - Trade ticks)");  					  TickImpl k = new TickImpl(barTick.Symbol);  					  //MBT default tick data is trade data  					  int lTickFilter = 1;  					  barTick.First();  					  switch (lTickFilter)  					  {  						  case 1:  							  while (!barTick.Bof)  							  {  								  k.symbol = barTick.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  								  k.trade = Convert.ToDecimal(barTick.Price);  								  k.ex = barTick.Exchange;  								  k.size = barTick.Volume;  								  k.date = Util.ToTLDate(barTick.LocalDateTime);  								  k.time = Util.ToTLTime(barTick.LocalDateTime);  								  SendNewTick(k);  								  barTick.Previous();  							  };  							  break;  					  }  					  break;    				  case 4: //pmh - 9/15/12 - PV bars  					  MbtHistPVBar barPV = pHist as MbtHistPVBar;  					  debug("PV bar' " + barPV.Count + " recs");  					  barPV.Last();  					  while (!barPV.Bof)  					  {  						  open = high = low = 0;  						  symbol = barPV.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  close = Convert.ToDecimal(barPV.Price' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barPV.Volume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barPV.LocalDateTime);  						  time = Util.ToTLTime(barPV.LocalDateTime);  						  MbtCustInt = MbtMinInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barPV.Symbol' MbtCustInt);  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barPV.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;  			  }
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,m_HistMgr_OnDataEvent,The following statement contains a magic number: switch (lRequestType)  			  {  				  case 1:  					  //pmh ?!? - debug("number of client");  					  MbtHistDayBar barDay = pHist as MbtHistDayBar;  					  debug("Day bar' " + barDay.Count + " recs");  					  barDay.Last();  					  while (!barDay.Bof)  					  {  						  debug("number of client"); //pmh ?!?  						  symbol = barDay.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  open = Convert.ToDecimal(barDay.Open' System.Globalization.CultureInfo.InvariantCulture);  						  high = Convert.ToDecimal(barDay.High' System.Globalization.CultureInfo.InvariantCulture);  						  low = Convert.ToDecimal(barDay.Low' System.Globalization.CultureInfo.InvariantCulture);  						  close = Convert.ToDecimal(barDay.Close' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barDay.TotalVolume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barDay.CloseDate);  						  time = 0;  						  MbtCustInt = MbtDayInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barDay.Symbol' MbtCustInt);  						  debug("number of client" + tl.NumClients);  						  debug("bar" + BarImpl.Serialize(b));  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barDay.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;    				  case 2:  					  MbtHistMinBar barMin = pHist as MbtHistMinBar;  					  debug("Min bar' " + barMin.Count + " recs");  					  barMin.Last();  					  while (!barMin.Bof)  					  {  						  symbol = barMin.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  open = Convert.ToDecimal(barMin.Open' System.Globalization.CultureInfo.InvariantCulture);  						  high = Convert.ToDecimal(barMin.High' System.Globalization.CultureInfo.InvariantCulture);  						  low = Convert.ToDecimal(barMin.Low' System.Globalization.CultureInfo.InvariantCulture);  						  close = Convert.ToDecimal(barMin.Close' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barMin.TotalVolume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barMin.LocalDateTime);  						  time = Util.ToTLTime(barMin.LocalDateTime);  						  MbtCustInt = MbtMinInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barMin.Symbol' MbtCustInt);  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barMin.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;    				  case 3:  					  /* pmh  					   * 0 = All ticks  					   * 1 = Trade ticks  					   * 2 = Bid/Ask ticks  					   * 3 = Bid ticks  					   * 4 = Ask ticks  					   */  					  MbtHistTick barTick = pHist as MbtHistTick;  					  debug("Tick bar' " + barTick.Count + " recs (showing only 1 - Trade ticks)");  					  TickImpl k = new TickImpl(barTick.Symbol);  					  //MBT default tick data is trade data  					  int lTickFilter = 1;  					  barTick.First();  					  switch (lTickFilter)  					  {  						  case 1:  							  while (!barTick.Bof)  							  {  								  k.symbol = barTick.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  								  k.trade = Convert.ToDecimal(barTick.Price);  								  k.ex = barTick.Exchange;  								  k.size = barTick.Volume;  								  k.date = Util.ToTLDate(barTick.LocalDateTime);  								  k.time = Util.ToTLTime(barTick.LocalDateTime);  								  SendNewTick(k);  								  barTick.Previous();  							  };  							  break;  					  }  					  break;    				  case 4: //pmh - 9/15/12 - PV bars  					  MbtHistPVBar barPV = pHist as MbtHistPVBar;  					  debug("PV bar' " + barPV.Count + " recs");  					  barPV.Last();  					  while (!barPV.Bof)  					  {  						  open = high = low = 0;  						  symbol = barPV.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  close = Convert.ToDecimal(barPV.Price' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barPV.Volume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barPV.LocalDateTime);  						  time = Util.ToTLTime(barPV.LocalDateTime);  						  MbtCustInt = MbtMinInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barPV.Symbol' MbtCustInt);  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barPV.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;  			  }
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,m_HistMgr_OnDataEvent,The following statement contains a magic number: switch (lRequestType)  			  {  				  case 1:  					  //pmh ?!? - debug("number of client");  					  MbtHistDayBar barDay = pHist as MbtHistDayBar;  					  debug("Day bar' " + barDay.Count + " recs");  					  barDay.Last();  					  while (!barDay.Bof)  					  {  						  debug("number of client"); //pmh ?!?  						  symbol = barDay.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  open = Convert.ToDecimal(barDay.Open' System.Globalization.CultureInfo.InvariantCulture);  						  high = Convert.ToDecimal(barDay.High' System.Globalization.CultureInfo.InvariantCulture);  						  low = Convert.ToDecimal(barDay.Low' System.Globalization.CultureInfo.InvariantCulture);  						  close = Convert.ToDecimal(barDay.Close' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barDay.TotalVolume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barDay.CloseDate);  						  time = 0;  						  MbtCustInt = MbtDayInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barDay.Symbol' MbtCustInt);  						  debug("number of client" + tl.NumClients);  						  debug("bar" + BarImpl.Serialize(b));  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barDay.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;    				  case 2:  					  MbtHistMinBar barMin = pHist as MbtHistMinBar;  					  debug("Min bar' " + barMin.Count + " recs");  					  barMin.Last();  					  while (!barMin.Bof)  					  {  						  symbol = barMin.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  open = Convert.ToDecimal(barMin.Open' System.Globalization.CultureInfo.InvariantCulture);  						  high = Convert.ToDecimal(barMin.High' System.Globalization.CultureInfo.InvariantCulture);  						  low = Convert.ToDecimal(barMin.Low' System.Globalization.CultureInfo.InvariantCulture);  						  close = Convert.ToDecimal(barMin.Close' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barMin.TotalVolume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barMin.LocalDateTime);  						  time = Util.ToTLTime(barMin.LocalDateTime);  						  MbtCustInt = MbtMinInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barMin.Symbol' MbtCustInt);  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barMin.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;    				  case 3:  					  /* pmh  					   * 0 = All ticks  					   * 1 = Trade ticks  					   * 2 = Bid/Ask ticks  					   * 3 = Bid ticks  					   * 4 = Ask ticks  					   */  					  MbtHistTick barTick = pHist as MbtHistTick;  					  debug("Tick bar' " + barTick.Count + " recs (showing only 1 - Trade ticks)");  					  TickImpl k = new TickImpl(barTick.Symbol);  					  //MBT default tick data is trade data  					  int lTickFilter = 1;  					  barTick.First();  					  switch (lTickFilter)  					  {  						  case 1:  							  while (!barTick.Bof)  							  {  								  k.symbol = barTick.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  								  k.trade = Convert.ToDecimal(barTick.Price);  								  k.ex = barTick.Exchange;  								  k.size = barTick.Volume;  								  k.date = Util.ToTLDate(barTick.LocalDateTime);  								  k.time = Util.ToTLTime(barTick.LocalDateTime);  								  SendNewTick(k);  								  barTick.Previous();  							  };  							  break;  					  }  					  break;    				  case 4: //pmh - 9/15/12 - PV bars  					  MbtHistPVBar barPV = pHist as MbtHistPVBar;  					  debug("PV bar' " + barPV.Count + " recs");  					  barPV.Last();  					  while (!barPV.Bof)  					  {  						  open = high = low = 0;  						  symbol = barPV.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  close = Convert.ToDecimal(barPV.Price' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barPV.Volume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barPV.LocalDateTime);  						  time = Util.ToTLTime(barPV.LocalDateTime);  						  MbtCustInt = MbtMinInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barPV.Symbol' MbtCustInt);  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barPV.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;  			  }
Magic Number,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,m_HistMgr_OnDataEvent,The following statement contains a magic number: switch (lRequestType)  			  {  				  case 1:  					  //pmh ?!? - debug("number of client");  					  MbtHistDayBar barDay = pHist as MbtHistDayBar;  					  debug("Day bar' " + barDay.Count + " recs");  					  barDay.Last();  					  while (!barDay.Bof)  					  {  						  debug("number of client"); //pmh ?!?  						  symbol = barDay.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  open = Convert.ToDecimal(barDay.Open' System.Globalization.CultureInfo.InvariantCulture);  						  high = Convert.ToDecimal(barDay.High' System.Globalization.CultureInfo.InvariantCulture);  						  low = Convert.ToDecimal(barDay.Low' System.Globalization.CultureInfo.InvariantCulture);  						  close = Convert.ToDecimal(barDay.Close' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barDay.TotalVolume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barDay.CloseDate);  						  time = 0;  						  MbtCustInt = MbtDayInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barDay.Symbol' MbtCustInt);  						  debug("number of client" + tl.NumClients);  						  debug("bar" + BarImpl.Serialize(b));  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barDay.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;    				  case 2:  					  MbtHistMinBar barMin = pHist as MbtHistMinBar;  					  debug("Min bar' " + barMin.Count + " recs");  					  barMin.Last();  					  while (!barMin.Bof)  					  {  						  symbol = barMin.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  open = Convert.ToDecimal(barMin.Open' System.Globalization.CultureInfo.InvariantCulture);  						  high = Convert.ToDecimal(barMin.High' System.Globalization.CultureInfo.InvariantCulture);  						  low = Convert.ToDecimal(barMin.Low' System.Globalization.CultureInfo.InvariantCulture);  						  close = Convert.ToDecimal(barMin.Close' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barMin.TotalVolume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barMin.LocalDateTime);  						  time = Util.ToTLTime(barMin.LocalDateTime);  						  MbtCustInt = MbtMinInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barMin.Symbol' MbtCustInt);  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barMin.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;    				  case 3:  					  /* pmh  					   * 0 = All ticks  					   * 1 = Trade ticks  					   * 2 = Bid/Ask ticks  					   * 3 = Bid ticks  					   * 4 = Ask ticks  					   */  					  MbtHistTick barTick = pHist as MbtHistTick;  					  debug("Tick bar' " + barTick.Count + " recs (showing only 1 - Trade ticks)");  					  TickImpl k = new TickImpl(barTick.Symbol);  					  //MBT default tick data is trade data  					  int lTickFilter = 1;  					  barTick.First();  					  switch (lTickFilter)  					  {  						  case 1:  							  while (!barTick.Bof)  							  {  								  k.symbol = barTick.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  								  k.trade = Convert.ToDecimal(barTick.Price);  								  k.ex = barTick.Exchange;  								  k.size = barTick.Volume;  								  k.date = Util.ToTLDate(barTick.LocalDateTime);  								  k.time = Util.ToTLTime(barTick.LocalDateTime);  								  SendNewTick(k);  								  barTick.Previous();  							  };  							  break;  					  }  					  break;    				  case 4: //pmh - 9/15/12 - PV bars  					  MbtHistPVBar barPV = pHist as MbtHistPVBar;  					  debug("PV bar' " + barPV.Count + " recs");  					  barPV.Last();  					  while (!barPV.Bof)  					  {  						  open = high = low = 0;  						  symbol = barPV.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  close = Convert.ToDecimal(barPV.Price' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barPV.Volume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barPV.LocalDateTime);  						  time = Util.ToTLTime(barPV.LocalDateTime);  						  MbtCustInt = MbtMinInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barPV.Symbol' MbtCustInt);  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barPV.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;  			  }
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(25' 43);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(25' 43);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label1.Margin = new System.Windows.Forms.Padding(2' 0' 2' 0);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label1.Margin = new System.Windows.Forms.Padding(2' 0' 2' 0);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(58' 13);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(58' 13);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 2;
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(28' 64);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(28' 64);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label2.Margin = new System.Windows.Forms.Padding(2' 0' 2' 0);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label2.Margin = new System.Windows.Forms.Padding(2' 0' 2' 0);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(56' 13);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(56' 13);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 4;
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._loginbut.Location = new System.Drawing.Point(84' 88);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._loginbut.Location = new System.Drawing.Point(84' 88);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._loginbut.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._loginbut.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._loginbut.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._loginbut.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._loginbut.Size = new System.Drawing.Size(61' 27);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._loginbut.Size = new System.Drawing.Size(61' 27);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._loginbut.TabIndex = 5;
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(26' 22);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(26' 22);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label3.Margin = new System.Windows.Forms.Padding(2' 0' 2' 0);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label3.Margin = new System.Windows.Forms.Padding(2' 0' 2' 0);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(57' 13);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(57' 13);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 7;
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._report.Location = new System.Drawing.Point(149' 88);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._report.Location = new System.Drawing.Point(149' 88);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._report.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._report.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._report.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._report.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._report.Size = new System.Drawing.Size(27' 27);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._report.Size = new System.Drawing.Size(27' 27);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._report.TabIndex = 12;
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._togmsg.Location = new System.Drawing.Point(57' 88);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._togmsg.Location = new System.Drawing.Point(57' 88);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._togmsg.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._togmsg.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._togmsg.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._togmsg.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._togmsg.Size = new System.Drawing.Size(23' 27);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._togmsg.Size = new System.Drawing.Size(23' 27);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._togmsg.TabIndex = 11;
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._verbon.Location = new System.Drawing.Point(120' 123);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._verbon.Location = new System.Drawing.Point(120' 123);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._verbon.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._verbon.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._verbon.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._verbon.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._verbon.Size = new System.Drawing.Size(56' 23);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._verbon.Size = new System.Drawing.Size(56' 23);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._verbon.TabIndex = 13;
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._id.Location = new System.Drawing.Point(87' 22);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._id.Location = new System.Drawing.Point(87' 22);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._id.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._id.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._id.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._id.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._id.Maximum = new decimal(new int[] {              -727379968'              232'              0'              0});
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._id.Maximum = new decimal(new int[] {              -727379968'              232'              0'              0});
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._id.Size = new System.Drawing.Size(68' 20);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._id.Size = new System.Drawing.Size(68' 20);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._id.TabIndex = 8;
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._pass.Location = new System.Drawing.Point(87' 64);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._pass.Location = new System.Drawing.Point(87' 64);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._pass.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._pass.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._pass.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._pass.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._pass.Size = new System.Drawing.Size(68' 20);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._pass.Size = new System.Drawing.Size(68' 20);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._pass.TabIndex = 3;
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._user.Location = new System.Drawing.Point(87' 43);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._user.Location = new System.Drawing.Point(87' 43);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._user.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._user.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._user.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._user.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._user.Size = new System.Drawing.Size(68' 20);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this._user.Size = new System.Drawing.Size(68' 20);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(198' 157);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(198' 157);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Magic Number,ServerMB,ServerMBMain,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMBMain.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(2' 2' 2' 2);
Missing Default,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,tl_newUnknownRequest,The following switch statement is missing a default case: switch (t)              {                  case MessageTypes.BARREQUEST:                      {                          debug("got barrequest: " + msg);                          try                          {                              BarRequest br = BarRequest.Deserialize(msg);                              if (waitforhistorical2complete) _barrequests.Write(br);                              else submitBarRequest(br);                          }                          catch (Exception ex)                          {                              debug("error parsing bar request: " + msg);                              debug(ex.Message + ex.StackTrace);                          }                          return 0;                      }              }
Missing Default,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,submitBarRequest,The following switch statement is missing a default case: switch (lRequestType)              {                  case 1:                      MbtHistDayBar moDayBar = m_HistMgr.CreateHistDayBar();                      moDayBar.Clear();  						  debug(symbol + "Day: lID:" + lRequestID + " lPd:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs + " bUp:" + bUpdate);                      moDayBar.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate);                      break;                  case 2:                      MbtHistMinBar moMinBar = m_HistMgr.CreateHistMinBar();                      moMinBar.Clear();  						  debug(symbol + "Min: lID:" + lRequestID + " lPd:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs + " bUp:" + bUpdate + " ext:" + bExtSession);                      moMinBar.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate' bExtSession);                      break;                  case 3:                      MbtHistTick moTickBar = m_HistMgr.CreateHistTick();                      moTickBar.Clear();  						lPeriod=0; // for all ticks  						debug(symbol + "Tick: lID:" + lRequestID + " filter:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs + " bUp:" + bUpdate);  //						  moTickBar.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate);  						  moTickBar.SendRequest(symbol' lRequestID' (int)MBTHISTLib.enumTickRequestFilter.trfAllTicks' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs' bUpdate);                      break;  						//pmh - 9/13/12 - PV bar  					 case 4:  						  MbtHistPVBar moMinPV = m_HistMgr.CreateHistPVBar();  						  moMinPV.Clear();  						  debug(symbol + "PV: lID:" + lRequestID + " lPd:" + lPeriod + " b:" + dtStart + " e:" + dtEnd + " lMax:" + lMaxRecs);  						  moMinPV.SendRequest(symbol' lRequestID' lPeriod' dtStart.ToUniversalTime()' dtEnd.ToUniversalTime()' lMaxRecs);  						  break;  				}
Missing Default,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,m_HistMgr_OnDataEvent,The following switch statement is missing a default case: switch (lRequestType)  			  {  				  case 1:  					  //pmh ?!? - debug("number of client");  					  MbtHistDayBar barDay = pHist as MbtHistDayBar;  					  debug("Day bar' " + barDay.Count + " recs");  					  barDay.Last();  					  while (!barDay.Bof)  					  {  						  debug("number of client"); //pmh ?!?  						  symbol = barDay.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  open = Convert.ToDecimal(barDay.Open' System.Globalization.CultureInfo.InvariantCulture);  						  high = Convert.ToDecimal(barDay.High' System.Globalization.CultureInfo.InvariantCulture);  						  low = Convert.ToDecimal(barDay.Low' System.Globalization.CultureInfo.InvariantCulture);  						  close = Convert.ToDecimal(barDay.Close' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barDay.TotalVolume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barDay.CloseDate);  						  time = 0;  						  MbtCustInt = MbtDayInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barDay.Symbol' MbtCustInt);  						  debug("number of client" + tl.NumClients);  						  debug("bar" + BarImpl.Serialize(b));  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barDay.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;    				  case 2:  					  MbtHistMinBar barMin = pHist as MbtHistMinBar;  					  debug("Min bar' " + barMin.Count + " recs");  					  barMin.Last();  					  while (!barMin.Bof)  					  {  						  symbol = barMin.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  open = Convert.ToDecimal(barMin.Open' System.Globalization.CultureInfo.InvariantCulture);  						  high = Convert.ToDecimal(barMin.High' System.Globalization.CultureInfo.InvariantCulture);  						  low = Convert.ToDecimal(barMin.Low' System.Globalization.CultureInfo.InvariantCulture);  						  close = Convert.ToDecimal(barMin.Close' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barMin.TotalVolume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barMin.LocalDateTime);  						  time = Util.ToTLTime(barMin.LocalDateTime);  						  MbtCustInt = MbtMinInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barMin.Symbol' MbtCustInt);  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barMin.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;    				  case 3:  					  /* pmh  					   * 0 = All ticks  					   * 1 = Trade ticks  					   * 2 = Bid/Ask ticks  					   * 3 = Bid ticks  					   * 4 = Ask ticks  					   */  					  MbtHistTick barTick = pHist as MbtHistTick;  					  debug("Tick bar' " + barTick.Count + " recs (showing only 1 - Trade ticks)");  					  TickImpl k = new TickImpl(barTick.Symbol);  					  //MBT default tick data is trade data  					  int lTickFilter = 1;  					  barTick.First();  					  switch (lTickFilter)  					  {  						  case 1:  							  while (!barTick.Bof)  							  {  								  k.symbol = barTick.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  								  k.trade = Convert.ToDecimal(barTick.Price);  								  k.ex = barTick.Exchange;  								  k.size = barTick.Volume;  								  k.date = Util.ToTLDate(barTick.LocalDateTime);  								  k.time = Util.ToTLTime(barTick.LocalDateTime);  								  SendNewTick(k);  								  barTick.Previous();  							  };  							  break;  					  }  					  break;    				  case 4: //pmh - 9/15/12 - PV bars  					  MbtHistPVBar barPV = pHist as MbtHistPVBar;  					  debug("PV bar' " + barPV.Count + " recs");  					  barPV.Last();  					  while (!barPV.Bof)  					  {  						  open = high = low = 0;  						  symbol = barPV.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  						  close = Convert.ToDecimal(barPV.Price' System.Globalization.CultureInfo.InvariantCulture);  						  vol = Convert.ToInt64(barPV.Volume' System.Globalization.CultureInfo.InvariantCulture);  						  date = Util.ToTLDate(barPV.LocalDateTime);  						  time = Util.ToTLTime(barPV.LocalDateTime);  						  MbtCustInt = MbtMinInt2CustInt((int)br.Interval / 100);  						  b = new BarImpl(open' high' low' close' vol' date' time' barPV.Symbol' MbtCustInt);  						  tl.TLSend(BarImpl.Serialize(b)' MessageTypes.BARRESPONSE' br.Client);  						  barPV.Previous();  					  }  					  //use this message to inform that the data for requestID is completed  					  tl.TLSend(Convert.ToString(lRequestId)' MessageTypes.CUSTOM40' br.Client);  					  break;  			  }
Missing Default,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,m_HistMgr_OnDataEvent,The following switch statement is missing a default case: switch (lTickFilter)  					  {  						  case 1:  							  while (!barTick.Bof)  							  {  								  k.symbol = barTick.Symbol; //pmh - 10/4/12 - was absent' but not sure if needed  								  k.trade = Convert.ToDecimal(barTick.Price);  								  k.ex = barTick.Exchange;  								  k.size = barTick.Volume;  								  k.date = Util.ToTLDate(barTick.LocalDateTime);  								  k.time = Util.ToTLTime(barTick.LocalDateTime);  								  SendNewTick(k);  								  barTick.Previous();  							  };  							  break;  					  }
Missing Default,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,OnTSData,The following switch statement is missing a default case: switch (tt)              {                  case enumTickType.ttAskTick:                      k.ask = (decimal)pRec.dPrice;                      k.oe = pRec.bstrExchange;                      k.os = pRec.lSize;                      break;                  case enumTickType.ttBidTick:                      k.bid = (decimal)pRec.dPrice;                      k.be = pRec.bstrExchange;                      k.bs = pRec.lSize;                      break;                  case enumTickType.ttTradeTick:                      k.trade = (decimal)pRec.dPrice;                      k.ex = pRec.bstrExchange;                      k.size = pRec.lSize;                      break;              }
Missing Default,ServerMB,ServerMB,D:\research\architectureSmells\repos1\tradelinkofficial_core\ServerMB\ServerMB.cs,OnLevel2Data,The following switch statement is missing a default case: switch (ems)              {                  case enumMarketSide.msAsk:                      k.ask = (decimal)pRec.dPrice;                      k.oe = pRec.bstrSource;                      k.os = k.AskSize = pRec.lSize;                      k.trade = k.ask;                      k.size = k.AskSize;                      break;                  case enumMarketSide.msBid:                      k.bid = (decimal)pRec.dPrice;                      k.be = pRec.bstrSource;                      k.bs = k.BidSize = pRec.lSize;                      k.trade = k.bid;                      k.size = k.BidSize;                      break;              }
