Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Recurly.Tests,BaseClientTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\BaseClientTest.cs,GetResourceFailureClient,The length of the statement  "            response.Setup(_ => _.Content).Returns("{\"error\":{ \"type\": \"not_found\"' \"message\": \"MyResource not found\"}}");" is 120.
Long Statement,Recurly.Tests,JsonSerializerTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\JsonSerializerTest.cs,DeserializeWithArrays,The length of the statement  "            var json = "{\"my_array_string\":[\"a\"' \"b\"]' \"my_array_sub_resource\": [{ \"my_string\": \"subresource1\" }' { \"my_string\": \"subresource2\" } ]}";" is 154.
Long Statement,Recurly.Tests,JsonSerializerTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\JsonSerializerTest.cs,Serialize,The length of the statement  "            var json = "{\"my_string\":\"benjamin\"'\"my_float\":3.14'\"my_int\":3'\"my_sub_resource\":{\"my_string\":\"subresource\"}'\"my_array_string\":[\"a\"'\"b\"]'\"my_array_sub_resource\":[{\"my_string\":\"subresource1\"}'{\"my_string\":\"subresource2\"}]}";" is 253.
Magic Number,Recurly.Tests,BaseClientTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\BaseClientTest.cs,CanProperlyFetchAResource,The following statement contains a magic number: MyResource resource = client.GetResource("benjamin"' "param1"' new DateTime(2020' 01' 01));
Magic Number,Recurly.Tests,BaseClientTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\BaseClientTest.cs,CanProperlyFetchAResourceAsync,The following statement contains a magic number: MyResource resource = await client.GetResourceAsync("benjamin"' "param1"' new DateTime(2020' 01' 01));
Magic Number,Recurly.Tests,BaseClientTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\BaseClientTest.cs,WillThrowNotFoundExceptionForNon200,The following statement contains a magic number: Assert.Throws<Recurly.Errors.NotFound>(() => client.GetResource("benjamin"' "param1"' new DateTime(2020' 01' 01)));
Magic Number,Recurly.Tests,BaseClientTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\BaseClientTest.cs,WillThrowAnExceptionWhenResponseHasErrorException,The following statement contains a magic number: Assert.Throws<Recurly.RecurlyError>(() => client.GetResource("benjamin"' "param1"' new DateTime(2020' 01' 01)));
Magic Number,Recurly.Tests,JsonSerializerTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\JsonSerializerTest.cs,Deserialize,The following statement contains a magic number: Assert.Equal(3.14f' resource.MyFloat);
Magic Number,Recurly.Tests,JsonSerializerTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\JsonSerializerTest.cs,Deserialize,The following statement contains a magic number: Assert.Equal(3' resource.MyInt);
Magic Number,Recurly.Tests,JsonSerializerTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\JsonSerializerTest.cs,DeserializeWithDateTime,The following statement contains a magic number: Assert.Equal(new DateTime(2019' 4' 26' 12' 0' 0)' resource.MyDateTime);
Magic Number,Recurly.Tests,JsonSerializerTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\JsonSerializerTest.cs,DeserializeWithDateTime,The following statement contains a magic number: Assert.Equal(new DateTime(2019' 4' 26' 12' 0' 0)' resource.MyDateTime);
Magic Number,Recurly.Tests,JsonSerializerTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\JsonSerializerTest.cs,DeserializeWithDateTime,The following statement contains a magic number: Assert.Equal(new DateTime(2019' 4' 26' 12' 0' 0)' resource.MyDateTime);
Magic Number,Recurly.Tests,JsonSerializerTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\JsonSerializerTest.cs,DeserializeWithDateTime,The following statement contains a magic number: Assert.Equal(new DateTime(2019' 4' 26' 12' 0' 0)' resource.MyDateTime);
Magic Number,Recurly.Tests,JsonSerializerTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\JsonSerializerTest.cs,Serialize,The following statement contains a magic number: var resource = new MyResource()             {                 MyString = "benjamin"'                 MyFloat = 3.14f'                 MyInt = 3'                 MySubResource = new MySubResource() { MyString = "subresource" }'                 MyArrayString = new List<string>() { "a"' "b" }'                 MyArraySubResource = new List<MySubResource>()                 {                     new MySubResource() { MyString = "subresource1" }'                     new MySubResource() { MyString = "subresource2" }'                 }             };
Magic Number,Recurly.Tests,JsonSerializerTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\JsonSerializerTest.cs,Serialize,The following statement contains a magic number: var resource = new MyResource()             {                 MyString = "benjamin"'                 MyFloat = 3.14f'                 MyInt = 3'                 MySubResource = new MySubResource() { MyString = "subresource" }'                 MyArrayString = new List<string>() { "a"' "b" }'                 MyArraySubResource = new List<MySubResource>()                 {                     new MySubResource() { MyString = "subresource1" }'                     new MySubResource() { MyString = "subresource2" }'                 }             };
Magic Number,Recurly.Tests,PagerTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\PagerTest.cs,EnumerableTest,The following statement contains a magic number: i < 3
Magic Number,Recurly.Tests,PagerTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\PagerTest.cs,EnumerableTest,The following statement contains a magic number: Assert.Equal(5' i);
Magic Number,Recurly.Tests,PagerTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\PagerTest.cs,EnumerablePagesTest,The following statement contains a magic number: Assert.Equal(3' count);
Magic Number,Recurly.Tests,PagerTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\PagerTest.cs,EnumerablePagesTest,The following statement contains a magic number: Assert.Equal(5' total);
Magic Number,Recurly.Tests,UtilsTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\UtilsTest.cs,QueryString,The following statement contains a magic number: d.Add("int"' 123);
Magic Number,Recurly.Tests,UtilsTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\UtilsTest.cs,QueryString,The following statement contains a magic number: d.Add("float"' 123.456);
Magic Number,Recurly.Tests,UtilsTest,C:\research\architectureSmells\repos\recurly_recurly-client-net\Recurly.Tests\UtilsTest.cs,QueryString,The following statement contains a magic number: d.Add("date"' new DateTime(2020' 1' 1));
