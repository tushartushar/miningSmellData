Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DD.Cloud.OctopusDeploy.Powershell,GetOctoProject,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoProject.cs,ProcessRecordAsync,Cyclomatic complexity of the method is 8
Complex Method,DD.Cloud.OctopusDeploy.Powershell,GetOctoTeam,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoTeam.cs,ProcessRecordAsync,Cyclomatic complexity of the method is 9
Complex Method,DD.Cloud.OctopusDeploy.Powershell,GetOctoUser,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoUser.cs,ProcessRecordAsync,Cyclomatic complexity of the method is 13
Complex Method,DD.Cloud.OctopusDeploy.Powershell,WaitOctoTask,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\WaitOctoTask.cs,ProcessRecordAsync,Cyclomatic complexity of the method is 11
Long Parameter List,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,ProcessRecordAsync,The method has 5 parameters.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoDeploymentProcess,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoDeploymentProcess.cs,ProcessRecordAsync,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoDeployment,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoDeployment.cs,ProcessRecordAsync,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoEnvironment,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoEnvironment.cs,ProcessRecordAsync,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoEnvironment,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoEnvironment.cs,ProcessRecordAsync,The length of the statement  "		WriteObject (response.Data.FirstOrDefault (i => string.Compare (i.Name' filterByName' StringComparison.InvariantCultureIgnoreCase) == 0)); " is 138.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoFeed,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoFeed.cs,ProcessRecordAsync,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoProject,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoProject.cs,ProcessRecordAsync,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoProject,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoProject.cs,ProcessRecordAsync,The length of the statement  "				WriteError (new ErrorRecord (new Exception (tmpResponse.ErrorMessage ?? tmpResponse.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 136.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoProject,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoProject.cs,ProcessRecordAsync,The length of the statement  "		WriteObject (allProjectsResponse.Data.Items.Where (i => string.IsNullOrWhiteSpace (projectGroupId) || (!string.IsNullOrWhiteSpace (projectGroupId) && string.Compare (projectGroupId' i.ProjectGroupId' StringComparison.InvariantCultureIgnoreCase) == 0))' true); " is 259.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoProject,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoProject.cs,ProcessRecordAsync,The length of the statement  "		WriteObject (allProjectsResponse.Data.Items.FirstOrDefault (i => (string.IsNullOrWhiteSpace (projectGroupId) && string.Compare (i.Name' filterByName' StringComparison.InvariantCultureIgnoreCase) == 0) || (!string.IsNullOrWhiteSpace (projectGroupId) && string.Compare (i.Name' filterByName' StringComparison.InvariantCultureIgnoreCase) == 0 && string.Compare (i.ProjectGroupId' projectGroupId' StringComparison.InvariantCultureIgnoreCase) == 0))); " is 446.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoProjectGroup,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoProjectGroup.cs,ProcessRecordAsync,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoProjectGroup,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoProjectGroup.cs,ProcessRecordAsync,The length of the statement  "		WriteObject (response.Data.FirstOrDefault (i => string.Compare (i.Name' filterByName' StringComparison.InvariantCultureIgnoreCase) == 0)); " is 138.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoFeeds,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoFeeds.cs,ProcessRecordAsync,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoFeeds,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoFeeds.cs,GetNextFeeds,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoTeam,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoTeam.cs,ProcessRecordAsync,The length of the statement  "			WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoTeam,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoTeam.cs,ProcessRecordAsync,The length of the statement  "			WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoTeam,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoTeam.cs,ProcessRecordAsync,The length of the statement  "				WriteObject (allTeams.Data.FirstOrDefault (i => (string.Compare (i.Name' filterByTeamName' StringComparison.InvariantCultureIgnoreCase) == 0))); " is 144.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoUserPermissions,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoUserPermissions.cs,ProcessRecordAsync,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoUser,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoUser.cs,ProcessRecordAsync,The length of the statement  "			WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoUser,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoUser.cs,ProcessRecordAsync,The length of the statement  "			WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoUser,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoUser.cs,ProcessRecordAsync,The length of the statement  "				WriteObject (allUsers.Data.FirstOrDefault (i => (string.Compare (i.Username' filterByUsername' StringComparison.InvariantCultureIgnoreCase) == 0))); " is 148.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoUser,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoUser.cs,ProcessRecordAsync,The length of the statement  "				foreach (var user in allUsers.Data.Where (user => user.EmailAddress != null && user.EmailAddress.ToLower ().Contains (filterByEmailAddress.ToLower ()))) { " is 154.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoReleases,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoReleases.cs,ProcessRecordAsync,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoReleases,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoReleases.cs,GetNextReleases,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoRelease.cs,ProcessRecordAsync,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoLibraryVariableSet,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoLibraryVariableSet.cs,ProcessRecordAsync,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoVariableSet,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoVariableSet.cs,ProcessRecordAsync,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,GetOctoVariableSet,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoVariableSet.cs,GetProjectAsync,The length of the statement  "		ThrowTerminatingError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 141.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoDeployment,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoDeployment.cs,ProcessRecordAsync,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,RemoveOctoUser,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\RemoveOctoUser.cs,ProcessRecordAsync,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoUser,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoUser.cs,ProcessRecordAsync,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,SetOctoTeam,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\SetOctoTeam.cs,ProcessRecordAsync,The length of the statement  "			WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,SetOctoTeam,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\SetOctoTeam.cs,GetTeamAsync,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,SetOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\SetOctoRelease .cs,ProcessRecordAsync,The length of the statement  "			WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,SetOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\SetOctoRelease .cs,GetReleaseAsync,The length of the statement  "		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,ProcessRecordAsync,The length of the statement  "	var specificPackageVersions = SpecificPackageVersions.Cast<DictionaryEntry> ().ToDictionary (k => k.Key.ToString ()' v => v.Value.ToString ()); " is 143.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,ProcessRecordAsync,The length of the statement  "	var tasks = packageTemplates.Select (packageTemplate => GetLatestPackageFromTemplatesAsync (client' packageTemplate' specificPackageVersions)); " is 143.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,ProcessRecordAsync,The length of the statement  "	string packagesDescription = string.Join (System.Environment.NewLine' packages.OrderBy (package => package.PackageId).Select (package => string.Format ("- {0} {1}"' package.PackageId' package.Version))); " is 203.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,ProcessRecordAsync,The length of the statement  "	var releaseNotes = string.IsNullOrEmpty (ReleaseNotes) ? packagesDescription : string.Join (System.Environment.NewLine + System.Environment.NewLine' ReleaseNotes' packagesDescription); " is 184.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,ProcessRecordAsync,The length of the statement  "		ThrowTerminatingError (new ErrorRecord (new Exception (string.Format ("Unable to create a release. ProjectId:{0} ChannelId:{1} Version:{2}' selected packages: {3}' Release Notes {4}' Api: {5}' Api Error:{6}"' projectId' channelId' Version' packagesDescription' releaseNotes' response.ResponseUri.ToString ()' response.ErrorMessage ?? response.Content))' "ApiError"' ErrorCategory.OpenError' null)); " is 398.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,ProcessRecordAsync,The length of the statement  "		WriteVerbose (string.Format ("Api: {0}' Http Status:{1} Api Response:{2}"' response.ResponseUri' response.StatusCode' response.Content)); " is 137.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,GetProjectAsync,The length of the statement  "		ThrowTerminatingError (new ErrorRecord (new Exception (string.Format ("Unable to get project. projectId:{0}' Api: {1}' Api Error:{2}"' projectId' response.ResponseUri.ToString ()' response.ErrorMessage ?? response.Content))' "ApiError"' ErrorCategory.OpenError' null)); " is 269.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,GetProjectAsync,The length of the statement  "	WriteVerbose (string.Format ("Api: {0}' Http Status:{1} Api Response:{2}"' response.ResponseUri' response.StatusCode' response.Content)); " is 137.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,GetProjectChannelAsync,The length of the statement  "		ThrowTerminatingError (new ErrorRecord (new Exception (string.Format ("Unable to get project channel. projectId:{0} channelName:{1}' Api: {2}' Api Error:{3}"' projectId' channelName' response.ResponseUri.ToString ()' response.ErrorMessage ?? response.Content))' "ApiError"' ErrorCategory.OpenError' null)); " is 306.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,GetProjectChannelAsync,The length of the statement  "	WriteVerbose (string.Format ("Api: {0}' Http Status:{1} Api Response:{2}"' response.ResponseUri' response.StatusCode' response.Content)); " is 137.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,GetProjectChannelAsync,The length of the statement  "	channel = response.Data.Items.FirstOrDefault (ch => string.Compare (ch.Name' channelName.Trim (' ')' StringComparison.OrdinalIgnoreCase) == 0); " is 143.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,GetProjectChannelAsync,The length of the statement  "		ThrowTerminatingError (new ErrorRecord (new Exception (string.Format ("Channel is missing from the project. ProjectId:{0} ChannelName:{1}"' projectId' channelName))' "MissingChannel"' ErrorCategory.ObjectNotFound' null)); " is 221.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,GetPackageTemplatesAsync,The length of the statement  "		ThrowTerminatingError (new ErrorRecord (new Exception (string.Format ("Unable to get deploymentprocess template. deploymentProcessId:{0} channelId:{1}' Api: {2}' Api Error:{3}"' deploymentProcessId' channelId' response.ResponseUri.ToString ()' response.ErrorMessage ?? response.Content))' "ApiError"' ErrorCategory.OpenError' null)); " is 333.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,GetPackageTemplatesAsync,The length of the statement  "	WriteVerbose (string.Format ("Api: {0}' Http Status:{1} Api Response:{2}"' response.ResponseUri' response.StatusCode' response.Content)); " is 137.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,GetLatestPackageFromTemplatesAsync,The length of the statement  "			ThrowTerminatingError (new ErrorRecord (new Exception (string.Format ("Package is missing from feed. PackageId:{0} Version:{1} Feed:{2}' Api: {3}' Api Error:{4}"' packageTemplate.NuGetPackageId' specificPackageVersions [packageTemplate.NuGetPackageId]' packageTemplate.NuGetFeedName' noteResponse.ResponseUri.ToString ()' noteResponse.ErrorMessage ?? noteResponse.Content))' "MissingPackage"' ErrorCategory.ObjectNotFound' null)); " is 430.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,GetLatestPackageFromTemplatesAsync,The length of the statement  "		WriteVerbose (string.Format ("Api: {0}' Http Status:{1} Api Response:{2}"' noteResponse.ResponseUri' noteResponse.StatusCode' noteResponse.Content)); " is 149.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,GetLatestPackageFromTemplatesAsync,The length of the statement  "		ThrowTerminatingError (new ErrorRecord (new Exception (string.Format ("Package is missing from feed. PackageId:{0} Feed:{1}' Api: {2}' Api Error:{3}"' packageTemplate.NuGetPackageId' packageTemplate.NuGetFeedId' response.ResponseUri.ToString ()' response.ErrorMessage ?? response.Content))' "MissingPackage"' ErrorCategory.OpenError' null)); " is 341.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,GetLatestPackageFromTemplatesAsync,The length of the statement  "	WriteVerbose (string.Format ("Api: {0}' Http Status:{1} Api Response:{2}"' response.ResponseUri' response.StatusCode' response.Content)); " is 137.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,GetLatestPackageFromTemplatesAsync,The length of the statement  "		ThrowTerminatingError (new ErrorRecord (new Exception (string.Format ("Package is missing from feed. PackageId:{0} Feed:{1}"' packageTemplate.NuGetPackageId' packageTemplate.NuGetFeedName))' "MissingPackage"' ErrorCategory.ObjectNotFound' null)); " is 246.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,ThreadAffinitiveSynchronizationContext,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\ThreadAffinitiveSynchronizationContext.cs,Post,The length of the statement  "		throw new InvalidOperationException ("Cannot enqueue the specified callback because the synchronisation context's message pump has already been terminated."' eMessagePumpAlreadyTerminated); " is 189.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,ThreadAffinitiveSynchronizationContext,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\ThreadAffinitiveSynchronizationContext.cs,RunSynchronized,The length of the statement  "			rootOperationTask.ContinueWith (operationTask => synchronizationContext.TerminateMessagePump ()' scheduler: TaskScheduler.Default); " is 131.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,ThreadAffinitiveSynchronizationContext,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\ThreadAffinitiveSynchronizationContext.cs,RunSynchronized,The length of the statement  "			catch (AggregateException eWaitForTask)// The TPL will almost always wrap an AggregateException around any exception thrown by the async operation. " is 147.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,ThreadAffinitiveSynchronizationContext,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\ThreadAffinitiveSynchronizationContext.cs,RunSynchronized,The length of the statement  "			rootOperationTask.ContinueWith (operationTask => synchronizationContext.TerminateMessagePump ()' scheduler: TaskScheduler.Default); " is 131.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,ThreadAffinitiveSynchronizationContext,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\ThreadAffinitiveSynchronizationContext.cs,RunSynchronized,The length of the statement  "			catch (AggregateException eWaitForTask)// The TPL will almost always wrap an AggregateException around any exception thrown by the async operation. " is 147.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,WaitOctoTask,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\WaitOctoTask.cs,ProcessRecordAsync,The length of the statement  "			WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null)); " is 130.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,WaitOctoTask,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\WaitOctoTask.cs,ProcessRecordAsync,The length of the statement  "		progerssRecord = new ProgressRecord (1' "Waiting for deployment to complete."' ProgressCountToStatusDescription (progressCount++)); " is 131.
Long Statement,DD.Cloud.OctopusDeploy.Powershell,WaitOctoTask,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\WaitOctoTask.cs,ProcessRecordAsync,The length of the statement  "	progerssRecord = new ProgressRecord (1' "Waiting for deployment to complete."' ProgressCountToStatusDescription (progressCount++)); " is 131.
Magic Number,DD.Cloud.OctopusDeploy.Powershell,GetOctoFeeds,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoFeeds.cs,ProcessRecordAsync,The following statement contains a magic number: if (response.StatusCode != HttpStatusCode.OK) {  	WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null));  }  else {  	if (All) {  		var allFeeds = new List<Feed> ();  		allFeeds.AddRange (response.Data.Items);  		var pages = ((double)response.Data.TotalResults - Skip) / response.Data.ItemsPerPage;  		// the number of Skipped results might affect the number of pages  		var numOfPages = (int)Math.Ceiling (pages);  		for (var i = 1; i < numOfPages; i++)// we'll start from 1 since the first call was already invoked  		 {  			var percentComplete = (i + 1) * 100 / numOfPages;  			var tmp = await GetNextFeeds (client' response.Data.ItemsPerPage * i + Skip' percentComplete);  			// the number of skipped results should be passed to the GetNext method  			allFeeds.AddRange (tmp.Items);  		}  		response.Data.Items = allFeeds;  		WriteObject (response.Data);  	}  	else {  		WriteObject (response.Data);  	}  }  
Magic Number,DD.Cloud.OctopusDeploy.Powershell,GetOctoFeeds,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoFeeds.cs,ProcessRecordAsync,The following statement contains a magic number: if (All) {  	var allFeeds = new List<Feed> ();  	allFeeds.AddRange (response.Data.Items);  	var pages = ((double)response.Data.TotalResults - Skip) / response.Data.ItemsPerPage;  	// the number of Skipped results might affect the number of pages  	var numOfPages = (int)Math.Ceiling (pages);  	for (var i = 1; i < numOfPages; i++)// we'll start from 1 since the first call was already invoked  	 {  		var percentComplete = (i + 1) * 100 / numOfPages;  		var tmp = await GetNextFeeds (client' response.Data.ItemsPerPage * i + Skip' percentComplete);  		// the number of skipped results should be passed to the GetNext method  		allFeeds.AddRange (tmp.Items);  	}  	response.Data.Items = allFeeds;  	WriteObject (response.Data);  }  else {  	WriteObject (response.Data);  }  
Magic Number,DD.Cloud.OctopusDeploy.Powershell,GetOctoFeeds,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoFeeds.cs,ProcessRecordAsync,The following statement contains a magic number: for (var i = 1; i < numOfPages; i++)// we'll start from 1 since the first call was already invoked   {  	var percentComplete = (i + 1) * 100 / numOfPages;  	var tmp = await GetNextFeeds (client' response.Data.ItemsPerPage * i + Skip' percentComplete);  	// the number of skipped results should be passed to the GetNext method  	allFeeds.AddRange (tmp.Items);  }  
Magic Number,DD.Cloud.OctopusDeploy.Powershell,GetOctoReleases,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoReleases.cs,ProcessRecordAsync,The following statement contains a magic number: if (response.StatusCode != HttpStatusCode.OK) {  	WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null));  }  else {  	if (All) {  		var allReleases = new List<Release> ();  		allReleases.AddRange (response.Data.Items);  		var pages = ((double)response.Data.TotalResults - Skip) / response.Data.ItemsPerPage;  		// the number of Skipped results might affect the number of pages  		var numOfPages = (int)Math.Ceiling (pages);  		for (var i = 1; i < numOfPages; i++)// we'll start from 1 since the first call was already invoked  		 {  			var percentComplete = (i + 1) * 100 / numOfPages;  			var tmp = await GetNextReleases (client' projectId' response.Data.ItemsPerPage * i + Skip' percentComplete);  			// the number of skipped results should be passed to the GetNext method  			allReleases.AddRange (tmp.Items);  		}  		response.Data.Items = allReleases;  		WriteObject (response.Data);  	}  	else {  		WriteObject (response.Data);  	}  }  
Magic Number,DD.Cloud.OctopusDeploy.Powershell,GetOctoReleases,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoReleases.cs,ProcessRecordAsync,The following statement contains a magic number: if (All) {  	var allReleases = new List<Release> ();  	allReleases.AddRange (response.Data.Items);  	var pages = ((double)response.Data.TotalResults - Skip) / response.Data.ItemsPerPage;  	// the number of Skipped results might affect the number of pages  	var numOfPages = (int)Math.Ceiling (pages);  	for (var i = 1; i < numOfPages; i++)// we'll start from 1 since the first call was already invoked  	 {  		var percentComplete = (i + 1) * 100 / numOfPages;  		var tmp = await GetNextReleases (client' projectId' response.Data.ItemsPerPage * i + Skip' percentComplete);  		// the number of skipped results should be passed to the GetNext method  		allReleases.AddRange (tmp.Items);  	}  	response.Data.Items = allReleases;  	WriteObject (response.Data);  }  else {  	WriteObject (response.Data);  }  
Magic Number,DD.Cloud.OctopusDeploy.Powershell,GetOctoReleases,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoReleases.cs,ProcessRecordAsync,The following statement contains a magic number: for (var i = 1; i < numOfPages; i++)// we'll start from 1 since the first call was already invoked   {  	var percentComplete = (i + 1) * 100 / numOfPages;  	var tmp = await GetNextReleases (client' projectId' response.Data.ItemsPerPage * i + Skip' percentComplete);  	// the number of skipped results should be passed to the GetNext method  	allReleases.AddRange (tmp.Items);  }  
Magic Number,DD.Cloud.OctopusDeploy.Powershell,WaitOctoTask,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\WaitOctoTask.cs,ProcessRecordAsync,The following statement contains a magic number: while (true) {  	var response = await client.ExecuteTaskAsync<Contracts.Task> (request);  	if (response.StatusCode != HttpStatusCode.OK) {  		WriteError (new ErrorRecord (new Exception (response.ErrorMessage ?? response.Content)' "Failed"' ErrorCategory.OpenError' null));  		break;  	}  	if (response.Data.IsCompleted) {  		WriteObject (response.Data);  		break;  	}  	progerssRecord = new ProgressRecord (1' "Waiting for deployment to complete."' ProgressCountToStatusDescription (progressCount++));  	progerssRecord.CurrentOperation = "In progress";  	progerssRecord.RecordType = ProgressRecordType.Processing;  	WriteProgress (progerssRecord);  	await System.Threading.Tasks.Task.Delay (TimeSpan.FromSeconds (5));  }  
Magic Number,DD.Cloud.OctopusDeploy.Powershell,WaitOctoTask,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\WaitOctoTask.cs,ProcessRecordAsync,The following statement contains a magic number: await System.Threading.Tasks.Task.Delay (TimeSpan.FromSeconds (5));  
Magic Number,DD.Cloud.OctopusDeploy.Powershell,WaitOctoTask,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\WaitOctoTask.cs,ProgressCountToStatusDescription,The following statement contains a magic number: return new string ('*'' 1 + progressCount % 10);  
Missing Default,DD.Cloud.OctopusDeploy.Powershell,GetOctoDeploymentProcess,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoDeploymentProcess.cs,ProcessRecordAsync,The following switch statement is missing a default case: switch (ParameterSetName) {  case "GetOctoDeploymentProcessById": {  	deploymentProcessId = DeploymentProcessId;  	break;  }  }  
Missing Default,DD.Cloud.OctopusDeploy.Powershell,GetOctoDeployment,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoDeployment.cs,ProcessRecordAsync,The following switch statement is missing a default case: switch (ParameterSetName) {  case "GetOctoDeploymentByReleaseId": {  	releaseId = ReleaseId;  	break;  }  case "GetOctoDeploymentByRelease": {  	releaseId = Release.Id;  	break;  }  }  
Missing Default,DD.Cloud.OctopusDeploy.Powershell,GetOctoEnvironment,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoEnvironment.cs,ProcessRecordAsync,The following switch statement is missing a default case: switch (ParameterSetName) {  case "GetOctoEnvironmentByName": {  	filterByName = Name;  	break;  }  }  
Missing Default,DD.Cloud.OctopusDeploy.Powershell,GetOctoFeed,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoFeed.cs,ProcessRecordAsync,The following switch statement is missing a default case: switch (ParameterSetName) {  case "GetOctoFeedsByFeedId": {  	feedId = FeedId;  	break;  }  case "GetOctoFeedsByFeed": {  	feedId = Feed.Id;  	break;  }  }  
Missing Default,DD.Cloud.OctopusDeploy.Powershell,GetOctoProject,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoProject.cs,ProcessRecordAsync,The following switch statement is missing a default case: switch (ParameterSetName) {  case "GetOctoProjectByName": {  	filterByName = Name;  	break;  }  }  
Missing Default,DD.Cloud.OctopusDeploy.Powershell,GetOctoProjectGroup,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoProjectGroup.cs,ProcessRecordAsync,The following switch statement is missing a default case: switch (ParameterSetName) {  case "GetOctoProjectGroupByName": {  	filterByName = Name;  	break;  }  }  
Missing Default,DD.Cloud.OctopusDeploy.Powershell,GetOctoTeam,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoTeam.cs,ProcessRecordAsync,The following switch statement is missing a default case: switch (ParameterSetName) {  case "GetOctoTeamByTeamId": {  	teamId = TeamId;  	break;  }  case "GetOctoTeamByTeamName": {  	filterByTeamName = TeamName;  	break;  }  }  
Missing Default,DD.Cloud.OctopusDeploy.Powershell,GetOctoUser,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoUser.cs,ProcessRecordAsync,The following switch statement is missing a default case: switch (ParameterSetName) {  case "GetOctoUserByUserId": {  	userId = UserId;  	break;  }  case "GetOctoUserByUsername": {  	filterByUsername = Username;  	break;  }  case "GetOctoUserByEmailAddress": {  	filterByEmailAddress = EmailAddress;  	break;  }  }  
Missing Default,DD.Cloud.OctopusDeploy.Powershell,GetOctoReleases,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoReleases.cs,ProcessRecordAsync,The following switch statement is missing a default case: switch (ParameterSetName) {  case "GetOctoReleasesByProjectId": {  	projectId = ProjectId;  	break;  }  case "GetOctoReleasesByProject": {  	projectId = Project.Id;  	break;  }  }  
Missing Default,DD.Cloud.OctopusDeploy.Powershell,GetOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoRelease.cs,ProcessRecordAsync,The following switch statement is missing a default case: switch (ParameterSetName) {  case "GetOctoReleaseByProjectId": {  	projectId = ProjectId;  	break;  }  case "GetOctoReleaseByProject": {  	projectId = Project.Id;  	break;  }  }  
Missing Default,DD.Cloud.OctopusDeploy.Powershell,GetOctoTask,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoTask.cs,ProcessRecordAsync,The following switch statement is missing a default case: switch (ParameterSetName) {  case "GetOctoTaskByTaskId": {  	taskId = TaskId;  	break;  }  case "GetOctoTaskByDeployment": {  	taskId = Deployment.TaskId;  	break;  }  case "GetOctoTaskByDeploymentId": {  	var deployment = await GetDeploymentAsync (client' DeploymentId);  	taskId = deployment.TaskId;  	break;  }  }  
Missing Default,DD.Cloud.OctopusDeploy.Powershell,GetOctoLibraryVariableSet,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoLibraryVariableSet.cs,ProcessRecordAsync,The following switch statement is missing a default case: switch (ParameterSetName) {  case "GetOctoLibraryVariableSetByLibraryVariableSetId": {  	libraryVariableSetId = LibraryVariableSetId;  	break;  }  }  
Missing Default,DD.Cloud.OctopusDeploy.Powershell,GetOctoVariableSet,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\GetOctoVariableSet.cs,ProcessRecordAsync,The following switch statement is missing a default case: switch (ParameterSetName) {  case "GetOctoVariableSetByVariableSetId": {  	variableSetId = VariableSetId;  	break;  }  case "GetOctoVariableSetByProject": {  	variableSetId = Project.VariableSetId;  	break;  }  case "GetOctoVariableSetByProjectId": {  	var project = await GetProjectAsync (client' ProjectId);  	variableSetId = project.VariableSetId;  	break;  }  }  
Missing Default,DD.Cloud.OctopusDeploy.Powershell,NewOctoDeployment,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoDeployment.cs,ProcessRecordAsync,The following switch statement is missing a default case: switch (ParameterSetName) {  case "NewOctoDeploymentByReleaseId": {  	releaseId = ReleaseId;  	break;  }  case "NewOctoDeploymentByRelease": {  	releaseId = Release.Id;  	break;  }  }  
Missing Default,DD.Cloud.OctopusDeploy.Powershell,SetOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\SetOctoRelease .cs,ProcessRecordAsync,The following switch statement is missing a default case: switch (ParameterSetName) {  case "SetOctoReleaseByProjectId": {  	projectId = ProjectId;  	break;  }  case "SetOctoReleaseByProject": {  	projectId = Project.Id;  	break;  }  }  
Missing Default,DD.Cloud.OctopusDeploy.Powershell,NewOctoRelease,C:\repos\DimensionDataCBUSydney_OctopusDeploy.Powershell\OctopusDeploy.Powershell\NewOctoRelease.cs,ProcessRecordAsync,The following switch statement is missing a default case: switch (ParameterSetName) {  case "NewOctoReleaseByProjectId": {  	projectId = ProjectId;  	var project = await GetProjectAsync (client' ProjectId);  	deploymentProecessId = project.DeploymentProcessId;  	break;  }  case "NewOctoReleaseByProject": {  	projectId = Project.Id;  	deploymentProecessId = Project.DeploymentProcessId;  	break;  }  }  
