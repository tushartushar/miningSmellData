Implementation smell,Namespace,Class,File,Method,Description
Long Method,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The method has 123 lines of code.
Long Method,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The method has 179 lines of code.
Long Method,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The method has 151 lines of code.
Long Method,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The method has 292 lines of code.
Long Method,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadInCommonFormat,The method has 109 lines of code.
Complex Method,LCardAnalizator.calculation,ClassFilter,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassFilter.cs,filterSmooth,Cyclomatic complexity of the method is 8
Complex Method,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,Cyclomatic complexity of the method is 8
Complex Method,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,Cyclomatic complexity of the method is 8
Complex Method,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,Cyclomatic complexity of the method is 19
Complex Method,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,OutputData,Cyclomatic complexity of the method is 14
Complex Method,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,OutputDataMaxMin,Cyclomatic complexity of the method is 8
Complex Method,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,Cyclomatic complexity of the method is 12
Complex Method,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,Cyclomatic complexity of the method is 11
Complex Method,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,Cyclomatic complexity of the method is 21
Complex Method,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,Cyclomatic complexity of the method is 20
Complex Method,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,Cyclomatic complexity of the method is 16
Complex Method,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawFunc,Cyclomatic complexity of the method is 8
Complex Method,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,Cyclomatic complexity of the method is 21
Complex Method,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,hScrollBar1_Scroll,Cyclomatic complexity of the method is 9
Complex Method,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,Cyclomatic complexity of the method is 49
Complex Method,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,bw_ProgressChanged,Cyclomatic complexity of the method is 8
Complex Method,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,addEventsToolStripMenuItem_Click,Cyclomatic complexity of the method is 13
Complex Method,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,CreateGraphPercent,Cyclomatic complexity of the method is 13
Complex Method,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateRecord,Cyclomatic complexity of the method is 8
Complex Method,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateRecordWindows7,Cyclomatic complexity of the method is 8
Complex Method,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,Cyclomatic complexity of the method is 10
Complex Method,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,Cyclomatic complexity of the method is 10
Complex Method,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHead,Cyclomatic complexity of the method is 8
Complex Method,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadWindows7,Cyclomatic complexity of the method is 8
Complex Method,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadInCommonFormat,Cyclomatic complexity of the method is 14
Long Parameter List,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,Calculate2,The method has 7 parameters.
Long Parameter List,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,Calculate3,The method has 8 parameters.
Long Parameter List,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,SetData,The method has 5 parameters.
Long Parameter List,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawGraphick,The method has 9 parameters.
Long Parameter List,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawGraphickWithEventMaxMin,The method has 13 parameters.
Long Parameter List,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,CreateGraph,The method has 8 parameters.
Long Parameter List,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,CreateGraph,The method has 12 parameters.
Long Parameter List,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,CreateGraphPercent,The method has 9 parameters.
Long Parameter List,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,CreateGraphMaxMin,The method has 17 parameters.
Long Parameter List,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,AppendEventsToGraph,The method has 10 parameters.
Long Parameter List,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,AppendEventsToGraph,The method has 6 parameters.
Long Statement,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The length of the statement  "		if (record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu) { " is 122.
Long Statement,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The length of the statement  "			for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++) " is 160.
Long Statement,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The length of the statement  "		if (record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu) { " is 122.
Long Statement,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The length of the statement  "			for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++) { " is 162.
Long Statement,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The length of the statement  "		if (record.ch [ch_vu] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value) { " is 139.
Long Statement,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The length of the statement  "			for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++) " is 181.
Long Statement,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The length of the statement  "		if (record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value) { " is 143.
Long Statement,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The length of the statement  "			for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++) { " is 183.
Long Statement,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,LoadTexture,The length of the statement  "	BitmapData data = bmp.LockBits (new Rectangle (0' 0' bmp.Width' bmp.Height)' ImageLockMode.ReadOnly' System.Drawing.Imaging.PixelFormat.Format24bppRgb); " is 152.
Long Statement,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,LoadTexture,The length of the statement  "	Gl.glTexImage2D (Gl.GL_TEXTURE_2D' 0' (int)Gl.GL_RGB' data.Width' data.Height' 0' Gl.GL_BGR_EXT' Gl.GL_UNSIGNED_BYTE' data.Scan0); " is 130.
Long Statement,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,GetBitmap,The length of the statement  "	BitmapData bitmapData = bitmap.LockBits (new Rectangle (0' 0' bitmap.Width' bitmap.Height)' ImageLockMode.WriteOnly' PixelFormat.Format24bppRgb); " is 145.
Long Statement,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,GetBitmapDiff,The length of the statement  "	BitmapData bitmapData = bitmap.LockBits (new Rectangle (0' 2' bitmap.Width' bitmap.Height - 2)' ImageLockMode.WriteOnly' PixelFormat.Format24bppRgb); " is 149.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The length of the statement  "			System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251")); " is 123.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The length of the statement  "			if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) { " is 183.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,SaveParametrs,The length of the statement  "		System.IO.StreamWriter fconfig = new System.IO.StreamWriter (@"config"' false' System.Text.Encoding.GetEncoding ("windows-1251")); " is 130.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,SaveParametrs,The length of the statement  "		sfile = posX_window.ToString () + ' ' + posY_window.ToString () + ' ' + width_w.ToString () + ' ' + height_w.ToString (); " is 121.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,SaveParametrs,The length of the statement  "		sfile = mnuSA.Checked.ToString () + ' ' + mnuST.Checked.ToString () + ' ' + mnuSD.Checked.ToString () + ' ' + mnuSN.Checked.ToString () + ' ' + mnuSF.Checked.ToString () + ' ' + mnuSFExperimentTime.Checked.ToString () + ' ' + mnuSFKadrsNumber.Checked.ToString () + ' ' + mnuSFInputTimeInSec.Checked.ToString (); " is 311.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,AppendReportEvents,The length of the statement  "			richTextBoxReport.AppendText ("t" + i.ToString () + "=" + calc_record.t_min_loc [i].ToString () + "  " + calc_record.min_loc [i].ToString ()); " is 142.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,AppendReportEvents,The length of the statement  "			richTextBoxReport.AppendText ("t" + i.ToString () + "=" + calc_record.t_max_loc [i].ToString () + "  " + calc_record.max_loc [i].ToString ()); " is 142.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,createDrawGraphCreateReport,The length of the statement  "	ZedGraphHelper.CreateGraph (ref zedGraphControlTimeAcceleration' ref calc_record.t_ac' "время' с"' ref calc_record.ac' "ускорение' рад/c^2"' calc_record.kol_ac' ""' ""); " is 169.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,createDrawGraphCreateReport,The length of the statement  "	ZedGraphHelper.CreateGraph (ref zedGraphControlSpeedAcceleration' ref calc_record.vu' "частота вращения' об/мин"' ref calc_record.ac' "ускорение' рад/c^2"' calc_record.kol_ac' ""' ""); " is 184.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,createDrawGraphCreateReport,The length of the statement  "	ZedGraphHelper.CreateGraph (ref zedGraphControlTimeSpeed' ref calc_record.t_vu' "время' сек"' ref calc_record.vu' "частота вращения' об/мин"' calc_record.kol_vu' ""' ""); " is 170.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,createDrawGraphCreateReport,The length of the statement  "	ZedGraphHelper.CreateGraph (ref zedGraphControlTimeSpeedAcc' ref calc_record.t_vu' "время' сек"' ref calc_record.vu' "частота вращения' об/мин"' calc_record.kol_vu' ""' ""); " is 173.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,createDrawGraphCreateReport,The length of the statement  "	ZedGraphHelper.CreateGraphPercent (ref zedGraphControlTimeSpeedAcc' ref calc_record.t_ac' "время' с"' ref calc_record.vu' ref calc_record.ac' "Относительные ед.' %"' calc_record.kol_ac' ""' ""); " is 194.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,createDrawGraphCreateReport,The length of the statement  "	ZedGraphHelper.CreateGraph (ref zedGraphControlDegreeSpeed' ref calc_record.degree_vu' "градусы"' ref calc_record.vu' "частота вращения' об/мин"' calc_record.kol_vu' ""' ""); " is 174.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,createDrawGraphCreateReport,The length of the statement  "	ZedGraphHelper.CreateGraph (ref zedGraphControlDegreeAcc' ref calc_record.degree_ac' "градусы"' ref calc_record.ac' "ускорение' рад/c^2"' calc_record.kol_ac' ""' ""); " is 166.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,ReCalc,The length of the statement  "		calc_record.Calculate3 (record' with_diff_parm' OutStep' InStep' flagTimeSpeed' number_zub' gaussB' SelectedIndexSmooth); " is 121.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CalcEvents,The length of the statement  "				ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlTimeSpeed' calc_record.t_max_loc' calc_record.max_loc' calc_record.t_min_loc' calc_record.min_loc' calc_record.t_InEng' calc_record.InEng' name_minum); " is 206.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CalcEvents,The length of the statement  "				ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlTimeAcceleration' calc_record.t_max_loc' calc_record.max_loc_ac' calc_record.t_min_loc' calc_record.min_loc_ac' calc_record.t_InEng' calc_record.InEng_ac' name_minum); " is 222.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CalcEvents,The length of the statement  "				ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlTimeSpeed' null' null' calc_record.t_min_loc' calc_record.min_loc' null' null' name_minum); " is 146.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CalcEvents,The length of the statement  "				ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlTimeAcceleration' null' null' calc_record.t_min_loc' calc_record.min_loc_ac' null' null' name_minum); " is 156.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,bw_ProgressChanged,The length of the statement  "		cl2d.DrawGraphick (record.time' "t' секунды"' record.ch' "U' В"' m' names' record.NumberOfChannels' OpenGlControlGraph.Width' OpenGlControlGraph.Height); " is 153.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,addEventsToolStripMenuItem_Click,The length of the statement  "			int numberPointsDiff = Convert.ToInt32 ((calc_record.front_vu.LongLength - manualStartPoint - diffPoints) / manualStep); " is 120.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,addEventsToolStripMenuItem_Click,The length of the statement  "				ZedGraphHelper.CreateGraph (ref zedGraphControlSource' ref record.time' "Время' сек"' ref record.ch [nChannel - 1]' ""' record.KadrsNumber' ref pointsX' ref pointsY' "Опорные точки"' StylePoint.getStyleStartPoint ()' "График исходных данных"); " is 243.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,addEventsToolStripMenuItem_Click,The length of the statement  "				ZedGraphHelper.CreateGraph (ref zedGraphControlFiltered' ref record.time' "Время' сек"' ref filterY' ""' record.KadrsNumber' ref pointsX' ref pointsY' "Опорные точки"' StylePoint.getStyleStartPoint ()' "График отфильтрованных данных"); " is 235.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,addEventsToolStripMenuItem_Click,The length of the statement  "			ZedGraphHelper.CreateGraph (ref zedGraphControlDegreeSpeed' ref calc_record.degree_vu' "градусы"' ref calc_record.vu' "частота вращения' об/мин"' calc_record.kol_vu' ref pointsDegreeX' ref pointsDegreeY' "Опорные точки"' StylePoint.getStyleStartPoint ()' ""); " is 259.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,addEventsToolStripMenuItem_Click,The length of the statement  "			ZedGraphHelper.CreateGraph (ref zedGraphControlDegreeAcc' ref calc_record.degree_ac' "градусы"' ref calc_record.ac' "ускорение' рад/c^2"' calc_record.kol_ac' ref pointsDegreeX' ref pointsY' "Опорные точки"' StylePoint.getStyleStartPoint ()' ""); " is 245.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,addEventsToolStripMenuItem_Click,The length of the statement  "			ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlTimeSpeed' pointsTimeX' pointsTimeYVu' "Опорные точки"' StylePoint.getStyleStartPoint ()); " is 145.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,addEventsToolStripMenuItem_Click,The length of the statement  "			ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlTimeAcceleration' pointsTimeX' pointsTimeYAc' "Опорные точки"' StylePoint.getStyleStartPoint ()); " is 152.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,addEventsToolStripMenuItem_Click,The length of the statement  "			ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlTimeSpeed' pointsDiffTimeX' pointsDiffTimeYVu' "Точки смещения"' StylePoint.getStyleDiffPoint ()); " is 153.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,addEventsToolStripMenuItem_Click,The length of the statement  "			ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlTimeAcceleration' pointsDiffTimeX' pointsDiffTimeYAc' "Точки смещения"' StylePoint.getStyleDiffPoint ()); " is 160.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,addEventsToolStripMenuItem_Click,The length of the statement  "			ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlDegreeSpeed' pointsDiffDegreeX' pointsDiffTimeYVu' "Точки смещения"' StylePoint.getStyleDiffPoint ()); " is 157.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,addEventsToolStripMenuItem_Click,The length of the statement  "			ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlDegreeAcc' pointsDiffDegreeX' pointsDiffTimeYAc' "Точки смещения"' StylePoint.getStyleDiffPoint ()); " is 155.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,Filter,The length of the statement  "			ZedGraphHelper.CreateGraph (ref zedGraphControlSource' ref record.time' "Время' сек"' ref record.ch [nChannel - 1]' ""' record.KadrsNumber' ""' "График исходных данных"); " is 170.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,Filter,The length of the statement  "			ZedGraphHelper.CreateGraph (ref zedGraphControlFiltered' ref record.time' "Время' сек"' ref filterY' ""' record.KadrsNumber' ""' "График отфильтрованных данных"); " is 162.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,aboutSmoothGaussianToolStripMenuItem_Click,The length of the statement  "	//http://docs.opencv.org/doc/tutorials/imgproc/gausian_median_blur_bilateral_filter/gausian_median_blur_bilateral_filter.html " is 125.
Long Statement,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,aboutSmoothGaussianToolStripMenuItem_Click,The length of the statement  "	ProcessStartInfo sInfo = new ProcessStartInfo ("http://docs.opencv.org/doc/tutorials/imgproc/gausian_median_blur_bilateral_filter/gausian_median_blur_bilateral_filter.html"); " is 174.
Long Statement,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadCommonFormat,The length of the statement  "		if (data50Lines.Contains (tagExperimentTime) && (data50Lines.Contains (tagNumberOfFrames) || data50Lines.Contains (tagKadrsNumber)) && data50Lines.Contains (tagNumberOfChannels) && data50Lines.Contains (tagInputRateInkHz) && data50Lines.Contains (tagInputTimeInSec) && data50Lines.Contains (tagTimeMarkersScale) && data50Lines.Contains (tagDataAsTimeSequence)) " is 360.
Complex Conditional,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The conditional expression  "(pow_x > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0)"  is complex.
Complex Conditional,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The conditional expression  "(pow_x > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0)"  is complex.
Complex Conditional,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The conditional expression  "(pow_y > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0)"  is complex.
Complex Conditional,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The conditional expression  "(pow_y > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0)"  is complex.
Complex Conditional,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The conditional expression  "posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height"  is complex.
Complex Conditional,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadCommonFormat,The conditional expression  "data50Lines.Contains (tagExperimentTime) && (data50Lines.Contains (tagNumberOfFrames) || data50Lines.Contains (tagKadrsNumber)) && data50Lines.Contains (tagNumberOfChannels) && data50Lines.Contains (tagInputRateInkHz) && data50Lines.Contains (tagInputTimeInSec) && data50Lines.Contains (tagTimeMarkersScale) && data50Lines.Contains (tagDataAsTimeSequence)"  is complex.
Empty Catch Block,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,SaveParametrs,The method has an empty catch block.
Magic Number,LCardAnalizator.calculation,ClassFilter,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassFilter.cs,filterSmooth,The following statement contains a magic number: if (typeFilter == 2)  	Cv.Smooth (Mat' Mat' SmoothType.BlurNoScale' numberPoints);  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMedianChannelImpuls,The following statement contains a magic number: res = (res + record.ch [ch_number].Max ()) / 2.0;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: for (i = 0; i < record.KadrsNumber - 4; i++) {  	if (record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu) {  		q++;  		i++;  		for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++)  			;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: for (i = 0; i < record.KadrsNumber - 4; i++) {  	if (record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu) {  		q++;  		i++;  		for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++)  			;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: for (i = 0; i < record.KadrsNumber - 4; i++) {  	if (record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu) {  		q++;  		i++;  		for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++)  			;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: for (i = 0; i < record.KadrsNumber - 4; i++) {  	if (record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu) {  		q++;  		i++;  		for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++)  			;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: if (record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu) {  	q++;  	i++;  	for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++)  		;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: if (record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu) {  	q++;  	i++;  	for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++)  		;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: if (record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu) {  	q++;  	i++;  	for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++)  		;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++)  	;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++)  	;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: for (i = 0; i < record.KadrsNumber - 4; i++) {  	if (record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu) {  		front_vu [q] = record.time [i];  		q++;  		i++;  		for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++) {  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: for (i = 0; i < record.KadrsNumber - 4; i++) {  	if (record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu) {  		front_vu [q] = record.time [i];  		q++;  		i++;  		for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++) {  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: for (i = 0; i < record.KadrsNumber - 4; i++) {  	if (record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu) {  		front_vu [q] = record.time [i];  		q++;  		i++;  		for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++) {  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: for (i = 0; i < record.KadrsNumber - 4; i++) {  	if (record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu) {  		front_vu [q] = record.time [i];  		q++;  		i++;  		for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++) {  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: if (record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu) {  	front_vu [q] = record.time [i];  	q++;  	i++;  	for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++) {  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: if (record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu) {  	front_vu [q] = record.time [i];  	q++;  	i++;  	for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++) {  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: if (record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu) {  	front_vu [q] = record.time [i];  	q++;  	i++;  	for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++) {  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++) {  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFrontVu,The following statement contains a magic number: for (; (i < record.KadrsNumber - 4) && record.ch [ch_vu] [i] > median_vu && record.ch [ch_vu] [i + 1] > median_vu && record.ch [ch_vu] [i + 2] > median_vu; i++) {  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: for (i = 0; i < record.KadrsNumber - 4; i++) {  	if (record.ch [ch_vu] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value) {  		q++;  		i++;  		for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++)  			;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: for (i = 0; i < record.KadrsNumber - 4; i++) {  	if (record.ch [ch_vu] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value) {  		q++;  		i++;  		for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++)  			;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: for (i = 0; i < record.KadrsNumber - 4; i++) {  	if (record.ch [ch_vu] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value) {  		q++;  		i++;  		for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++)  			;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: for (i = 0; i < record.KadrsNumber - 4; i++) {  	if (record.ch [ch_vu] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value) {  		q++;  		i++;  		for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++)  			;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: if (record.ch [ch_vu] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value) {  	q++;  	i++;  	for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++)  		;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: if (record.ch [ch_vu] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value) {  	q++;  	i++;  	for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++)  		;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: if (record.ch [ch_vu] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value) {  	q++;  	i++;  	for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++)  		;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++)  	;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++)  	;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: for (i = 0; i < record.KadrsNumber - 4; i++) {  	if (record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value) {  		res [q] = record.time [i];  		q++;  		i++;  		for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++) {  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: for (i = 0; i < record.KadrsNumber - 4; i++) {  	if (record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value) {  		res [q] = record.time [i];  		q++;  		i++;  		for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++) {  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: for (i = 0; i < record.KadrsNumber - 4; i++) {  	if (record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value) {  		res [q] = record.time [i];  		q++;  		i++;  		for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++) {  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: for (i = 0; i < record.KadrsNumber - 4; i++) {  	if (record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value) {  		res [q] = record.time [i];  		q++;  		i++;  		for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++) {  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: if (record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value) {  	res [q] = record.time [i];  	q++;  	i++;  	for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++) {  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: if (record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value) {  	res [q] = record.time [i];  	q++;  	i++;  	for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++) {  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: if (record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value) {  	res [q] = record.time [i];  	q++;  	i++;  	for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++) {  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++) {  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetFront,The following statement contains a magic number: for (; (i < record.KadrsNumber - 4) && record.ch [ch_number] [i] > median_value && record.ch [ch_number] [i + 1] > median_value && record.ch [ch_number] [i + 2] > median_value; i++) {  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVu,The following statement contains a magic number: for (i = 0; i < kol_front_vu / OutStep - 1; i = i + 1) {  	for (j = i * OutStep; j < i * OutStep + OutStep; j = j + InStep) {  		start_time = front_vu [j];  		end_time = front_vu [j + OutStep];  		T [s] = (end_time - start_time) * number_zub / (1.0 + OutStep);  		vu [s] = 60.0 / T [s];  		degree_vu [s] = j + OutStep / 2;  		t_vu [s] = (start_time + end_time) / 2;  		s++;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVu,The following statement contains a magic number: for (i = 0; i < kol_front_vu / OutStep - 1; i = i + 1) {  	for (j = i * OutStep; j < i * OutStep + OutStep; j = j + InStep) {  		start_time = front_vu [j];  		end_time = front_vu [j + OutStep];  		T [s] = (end_time - start_time) * number_zub / (1.0 + OutStep);  		vu [s] = 60.0 / T [s];  		degree_vu [s] = j + OutStep / 2;  		t_vu [s] = (start_time + end_time) / 2;  		s++;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVu,The following statement contains a magic number: for (i = 0; i < kol_front_vu / OutStep - 1; i = i + 1) {  	for (j = i * OutStep; j < i * OutStep + OutStep; j = j + InStep) {  		start_time = front_vu [j];  		end_time = front_vu [j + OutStep];  		T [s] = (end_time - start_time) * number_zub / (1.0 + OutStep);  		vu [s] = 60.0 / T [s];  		degree_vu [s] = j + OutStep / 2;  		t_vu [s] = (start_time + end_time) / 2;  		s++;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVu,The following statement contains a magic number: for (j = i * OutStep; j < i * OutStep + OutStep; j = j + InStep) {  	start_time = front_vu [j];  	end_time = front_vu [j + OutStep];  	T [s] = (end_time - start_time) * number_zub / (1.0 + OutStep);  	vu [s] = 60.0 / T [s];  	degree_vu [s] = j + OutStep / 2;  	t_vu [s] = (start_time + end_time) / 2;  	s++;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVu,The following statement contains a magic number: for (j = i * OutStep; j < i * OutStep + OutStep; j = j + InStep) {  	start_time = front_vu [j];  	end_time = front_vu [j + OutStep];  	T [s] = (end_time - start_time) * number_zub / (1.0 + OutStep);  	vu [s] = 60.0 / T [s];  	degree_vu [s] = j + OutStep / 2;  	t_vu [s] = (start_time + end_time) / 2;  	s++;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVu,The following statement contains a magic number: for (j = i * OutStep; j < i * OutStep + OutStep; j = j + InStep) {  	start_time = front_vu [j];  	end_time = front_vu [j + OutStep];  	T [s] = (end_time - start_time) * number_zub / (1.0 + OutStep);  	vu [s] = 60.0 / T [s];  	degree_vu [s] = j + OutStep / 2;  	t_vu [s] = (start_time + end_time) / 2;  	s++;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVu,The following statement contains a magic number: vu [s] = 60.0 / T [s];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVu,The following statement contains a magic number: degree_vu [s] = j + OutStep / 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVu,The following statement contains a magic number: t_vu [s] = (start_time + end_time) / 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVu,The following statement contains a magic number: kol_vu = s - 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVuGauss,The following statement contains a magic number: for (i = 0; i < kol_vu; i++) {  	data_vu [i] = 60.0 / ((front_vu [i + 1] - front_vu [i]) * Convert.ToDouble (number_zub));  	t_vu [i] = (front_vu [i + 1] + front_vu [i]) / 2.0;  	degree_vu [i] = i + 0.5;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVuGauss,The following statement contains a magic number: for (i = 0; i < kol_vu; i++) {  	data_vu [i] = 60.0 / ((front_vu [i + 1] - front_vu [i]) * Convert.ToDouble (number_zub));  	t_vu [i] = (front_vu [i + 1] + front_vu [i]) / 2.0;  	degree_vu [i] = i + 0.5;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVuGauss,The following statement contains a magic number: for (i = 0; i < kol_vu; i++) {  	data_vu [i] = 60.0 / ((front_vu [i + 1] - front_vu [i]) * Convert.ToDouble (number_zub));  	t_vu [i] = (front_vu [i + 1] + front_vu [i]) / 2.0;  	degree_vu [i] = i + 0.5;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVuGauss,The following statement contains a magic number: data_vu [i] = 60.0 / ((front_vu [i + 1] - front_vu [i]) * Convert.ToDouble (number_zub));  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVuGauss,The following statement contains a magic number: t_vu [i] = (front_vu [i + 1] + front_vu [i]) / 2.0;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVuGauss,The following statement contains a magic number: degree_vu [i] = i + 0.5;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVuGauss,The following statement contains a magic number: if (Math.Abs (in_gaussB) > 1)  	vu = ClassFilter.SmoothGauss (t_vu' data_vu' Convert.ToInt32 (Math.Abs (in_gaussB)));  else  	vu = ClassFilter.SmoothGauss (t_vu' data_vu' 3);  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetVuGauss,The following statement contains a magic number: vu = ClassFilter.SmoothGauss (t_vu' data_vu' 3);  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetAcceleration,The following statement contains a magic number: kol_ac = kol_vu - 2 - 2 * with_diff;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetAcceleration,The following statement contains a magic number: kol_ac = kol_vu - 2 - 2 * with_diff;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetAcceleration,The following statement contains a magic number: for (i = 0; i < kol_ac; i++) {  	v1 = 0;  	v2 = 0;  	t1 = 0;  	t2 = 0;  	for (j = i; j < i + with_diff; j++) {  		v1 += vu [j];  		v2 += vu [j + with_diff];  		t1 += t_vu [j];  		t2 += t_vu [j + with_diff];  	}  	k = ((v2 - v1) / 60.0) / (t2 - t1);  	x = (t1 + t2) / (2.0 * with_diff);  	vu_ac [i] = (v2 + v1) / (2.0 * with_diff);  	ac [i] = k * 2 * Math.PI;  	t_ac [i] = x;  	degree_ac [i] = (degree_vu [i] + degree_vu [i + with_diff - 1]) / 2.0;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetAcceleration,The following statement contains a magic number: for (i = 0; i < kol_ac; i++) {  	v1 = 0;  	v2 = 0;  	t1 = 0;  	t2 = 0;  	for (j = i; j < i + with_diff; j++) {  		v1 += vu [j];  		v2 += vu [j + with_diff];  		t1 += t_vu [j];  		t2 += t_vu [j + with_diff];  	}  	k = ((v2 - v1) / 60.0) / (t2 - t1);  	x = (t1 + t2) / (2.0 * with_diff);  	vu_ac [i] = (v2 + v1) / (2.0 * with_diff);  	ac [i] = k * 2 * Math.PI;  	t_ac [i] = x;  	degree_ac [i] = (degree_vu [i] + degree_vu [i + with_diff - 1]) / 2.0;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetAcceleration,The following statement contains a magic number: for (i = 0; i < kol_ac; i++) {  	v1 = 0;  	v2 = 0;  	t1 = 0;  	t2 = 0;  	for (j = i; j < i + with_diff; j++) {  		v1 += vu [j];  		v2 += vu [j + with_diff];  		t1 += t_vu [j];  		t2 += t_vu [j + with_diff];  	}  	k = ((v2 - v1) / 60.0) / (t2 - t1);  	x = (t1 + t2) / (2.0 * with_diff);  	vu_ac [i] = (v2 + v1) / (2.0 * with_diff);  	ac [i] = k * 2 * Math.PI;  	t_ac [i] = x;  	degree_ac [i] = (degree_vu [i] + degree_vu [i + with_diff - 1]) / 2.0;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetAcceleration,The following statement contains a magic number: for (i = 0; i < kol_ac; i++) {  	v1 = 0;  	v2 = 0;  	t1 = 0;  	t2 = 0;  	for (j = i; j < i + with_diff; j++) {  		v1 += vu [j];  		v2 += vu [j + with_diff];  		t1 += t_vu [j];  		t2 += t_vu [j + with_diff];  	}  	k = ((v2 - v1) / 60.0) / (t2 - t1);  	x = (t1 + t2) / (2.0 * with_diff);  	vu_ac [i] = (v2 + v1) / (2.0 * with_diff);  	ac [i] = k * 2 * Math.PI;  	t_ac [i] = x;  	degree_ac [i] = (degree_vu [i] + degree_vu [i + with_diff - 1]) / 2.0;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetAcceleration,The following statement contains a magic number: for (i = 0; i < kol_ac; i++) {  	v1 = 0;  	v2 = 0;  	t1 = 0;  	t2 = 0;  	for (j = i; j < i + with_diff; j++) {  		v1 += vu [j];  		v2 += vu [j + with_diff];  		t1 += t_vu [j];  		t2 += t_vu [j + with_diff];  	}  	k = ((v2 - v1) / 60.0) / (t2 - t1);  	x = (t1 + t2) / (2.0 * with_diff);  	vu_ac [i] = (v2 + v1) / (2.0 * with_diff);  	ac [i] = k * 2 * Math.PI;  	t_ac [i] = x;  	degree_ac [i] = (degree_vu [i] + degree_vu [i + with_diff - 1]) / 2.0;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetAcceleration,The following statement contains a magic number: k = ((v2 - v1) / 60.0) / (t2 - t1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetAcceleration,The following statement contains a magic number: x = (t1 + t2) / (2.0 * with_diff);  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetAcceleration,The following statement contains a magic number: vu_ac [i] = (v2 + v1) / (2.0 * with_diff);  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetAcceleration,The following statement contains a magic number: ac [i] = k * 2 * Math.PI;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetAcceleration,The following statement contains a magic number: degree_ac [i] = (degree_vu [i] + degree_vu [i + with_diff - 1]) / 2.0;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: mid_value = (0.60 * vu.Max () + 0.40 * vu.Min ());  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: mid_value = (0.60 * vu.Max () + 0.40 * vu.Min ());  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (kol_max > 0) {  	max_loc = new double[kol_max];  	min_loc = new double[kol_max - 1];  	t_max_loc = new double[kol_max];  	t_min_loc = new double[kol_max - 1];  	max_loc_ac = new double[kol_max];  	min_loc_ac = new double[kol_max - 1];  	pos_max_loc = new int[kol_max];  	//находим максимальные значения  	kol_max = 0;  	for (i = 0; i < kol_vu; i++) {  		if (vu [i] > mid_value) {  			max_loc [kol_max] = vu [i];  			max_loc_ac [kol_max] = ac [i];  			t_max_loc [kol_max] = t_vu [i];  			pos_max_loc [kol_max] = i;  			while (i < kol_vu && vu [i] > mid_value) {  				if (vu [i] > max_loc [kol_max]) {  					max_loc [kol_max] = vu [i];  					t_max_loc [kol_max] = t_vu [i];  					max_loc_ac [kol_max] = ac [i];  					pos_max_loc [kol_max] = i;  				}  				i++;  			}  			kol_max++;  		}  	}  	//находим мимимальные значения  	int j;  	pos_min_loc = new int[kol_max];  	InEng = new double[(kol_max - 2) * 4];  	t_InEng = new double[(kol_max - 2) * 4];  	InEng_ac = new double[(kol_max - 2) * 4];  	pos_InEng = new int[(kol_max - 2) * 4];  	kolInEng = kol_max * 3;  	for (j = 0; j < kol_max - 1; j++) {  		i = pos_max_loc [j];  		min_loc [j] = vu [i];  		min_loc_ac [j] = ac [i];  		t_min_loc [j] = t_vu [i];  		pos_min_loc [j] = i;  		for (; i < pos_max_loc [j + 1]; i++)  			if (vu [i] < min_loc [j]) {  				min_loc [j] = vu [i];  				min_loc_ac [j] = ac [i];  				t_min_loc [j] = t_vu [i];  				pos_min_loc [j] = i;  			}  	}  	i = pos_min_loc [0];  	for (j = 0; j < kol_max - 2; j++) {  		i = pos_min_loc [j];  		if (i + 180 >= kol_front_vu - 1) {  			t_InEng [j * 4] = front_vu [kol_front_vu - 2];  			InEng [j * 4] = vu [kol_front_vu - 2];  			InEng_ac [j * 4] = ac [kol_front_vu - 3];  			pos_InEng [j * 4] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4] = front_vu [i + 180];  			InEng [j * 4] = vu [i + 180];  			InEng_ac [j * 4] = ac [i + 180];  			pos_InEng [j * 4] = i + 180;  		}  		if (i + 360 >= kol_front_vu - 1) {  			t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  			InEng [j * 4 + 1] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  			pos_InEng [j * 4 + 1] = kol_front_vu - 2;  		}  		else {  			t_InEng [j * 4 + 1] = front_vu [i + 360];  			InEng [j * 4 + 1] = vu [i + 360];  			InEng_ac [j * 4 + 1] = ac [i + 360];  			pos_InEng [j * 4 + 1] = i + 360;  		}  		if (i + 360 + 180 >= kol_front_vu - 1) {  			InEng [j * 4 + 2] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 2] = kol_front_vu - 2;  		}  		else {  			InEng [j * 4 + 2] = vu [i + 360 + 180];  			InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  			t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  			pos_InEng [j * 4 + 2] = i + 360 + 180;  		}  		if (i + 360 + 360 >= kol_front_vu - 1) {  			InEng [j * 4 + 3] = vu [kol_front_vu - 2];  			InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  			t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  			pos_InEng [j * 4 + 3] = kol_front_vu - 3;  		}  		else {  			InEng [j * 4 + 3] = vu [i + 360 + 360];  			InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  			t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  			pos_InEng [j * 4 + 3] = i + 720;  		}  	}  }  else {  	max_loc = null;  	min_loc = null;  	t_max_loc = null;  	t_min_loc = null;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng = new double[(kol_max - 2) * 4];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng = new double[(kol_max - 2) * 4];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng = new double[(kol_max - 2) * 4];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng = new double[(kol_max - 2) * 4];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac = new double[(kol_max - 2) * 4];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac = new double[(kol_max - 2) * 4];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng = new int[(kol_max - 2) * 4];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng = new int[(kol_max - 2) * 4];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: kolInEng = kol_max * 3;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: for (j = 0; j < kol_max - 2; j++) {  	i = pos_min_loc [j];  	if (i + 180 >= kol_front_vu - 1) {  		t_InEng [j * 4] = front_vu [kol_front_vu - 2];  		InEng [j * 4] = vu [kol_front_vu - 2];  		InEng_ac [j * 4] = ac [kol_front_vu - 3];  		pos_InEng [j * 4] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4] = front_vu [i + 180];  		InEng [j * 4] = vu [i + 180];  		InEng_ac [j * 4] = ac [i + 180];  		pos_InEng [j * 4] = i + 180;  	}  	if (i + 360 >= kol_front_vu - 1) {  		t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  		InEng [j * 4 + 1] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  		pos_InEng [j * 4 + 1] = kol_front_vu - 2;  	}  	else {  		t_InEng [j * 4 + 1] = front_vu [i + 360];  		InEng [j * 4 + 1] = vu [i + 360];  		InEng_ac [j * 4 + 1] = ac [i + 360];  		pos_InEng [j * 4 + 1] = i + 360;  	}  	if (i + 360 + 180 >= kol_front_vu - 1) {  		InEng [j * 4 + 2] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 2] = kol_front_vu - 2;  	}  	else {  		InEng [j * 4 + 2] = vu [i + 360 + 180];  		InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  		t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  		pos_InEng [j * 4 + 2] = i + 360 + 180;  	}  	if (i + 360 + 360 >= kol_front_vu - 1) {  		InEng [j * 4 + 3] = vu [kol_front_vu - 2];  		InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  		t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  		pos_InEng [j * 4 + 3] = kol_front_vu - 3;  	}  	else {  		InEng [j * 4 + 3] = vu [i + 360 + 360];  		InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  		t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  		pos_InEng [j * 4 + 3] = i + 720;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 180 >= kol_front_vu - 1) {  	t_InEng [j * 4] = front_vu [kol_front_vu - 2];  	InEng [j * 4] = vu [kol_front_vu - 2];  	InEng_ac [j * 4] = ac [kol_front_vu - 3];  	pos_InEng [j * 4] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4] = front_vu [i + 180];  	InEng [j * 4] = vu [i + 180];  	InEng_ac [j * 4] = ac [i + 180];  	pos_InEng [j * 4] = i + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 180 >= kol_front_vu - 1) {  	t_InEng [j * 4] = front_vu [kol_front_vu - 2];  	InEng [j * 4] = vu [kol_front_vu - 2];  	InEng_ac [j * 4] = ac [kol_front_vu - 3];  	pos_InEng [j * 4] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4] = front_vu [i + 180];  	InEng [j * 4] = vu [i + 180];  	InEng_ac [j * 4] = ac [i + 180];  	pos_InEng [j * 4] = i + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 180 >= kol_front_vu - 1) {  	t_InEng [j * 4] = front_vu [kol_front_vu - 2];  	InEng [j * 4] = vu [kol_front_vu - 2];  	InEng_ac [j * 4] = ac [kol_front_vu - 3];  	pos_InEng [j * 4] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4] = front_vu [i + 180];  	InEng [j * 4] = vu [i + 180];  	InEng_ac [j * 4] = ac [i + 180];  	pos_InEng [j * 4] = i + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 180 >= kol_front_vu - 1) {  	t_InEng [j * 4] = front_vu [kol_front_vu - 2];  	InEng [j * 4] = vu [kol_front_vu - 2];  	InEng_ac [j * 4] = ac [kol_front_vu - 3];  	pos_InEng [j * 4] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4] = front_vu [i + 180];  	InEng [j * 4] = vu [i + 180];  	InEng_ac [j * 4] = ac [i + 180];  	pos_InEng [j * 4] = i + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 180 >= kol_front_vu - 1) {  	t_InEng [j * 4] = front_vu [kol_front_vu - 2];  	InEng [j * 4] = vu [kol_front_vu - 2];  	InEng_ac [j * 4] = ac [kol_front_vu - 3];  	pos_InEng [j * 4] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4] = front_vu [i + 180];  	InEng [j * 4] = vu [i + 180];  	InEng_ac [j * 4] = ac [i + 180];  	pos_InEng [j * 4] = i + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 180 >= kol_front_vu - 1) {  	t_InEng [j * 4] = front_vu [kol_front_vu - 2];  	InEng [j * 4] = vu [kol_front_vu - 2];  	InEng_ac [j * 4] = ac [kol_front_vu - 3];  	pos_InEng [j * 4] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4] = front_vu [i + 180];  	InEng [j * 4] = vu [i + 180];  	InEng_ac [j * 4] = ac [i + 180];  	pos_InEng [j * 4] = i + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 180 >= kol_front_vu - 1) {  	t_InEng [j * 4] = front_vu [kol_front_vu - 2];  	InEng [j * 4] = vu [kol_front_vu - 2];  	InEng_ac [j * 4] = ac [kol_front_vu - 3];  	pos_InEng [j * 4] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4] = front_vu [i + 180];  	InEng [j * 4] = vu [i + 180];  	InEng_ac [j * 4] = ac [i + 180];  	pos_InEng [j * 4] = i + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 180 >= kol_front_vu - 1) {  	t_InEng [j * 4] = front_vu [kol_front_vu - 2];  	InEng [j * 4] = vu [kol_front_vu - 2];  	InEng_ac [j * 4] = ac [kol_front_vu - 3];  	pos_InEng [j * 4] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4] = front_vu [i + 180];  	InEng [j * 4] = vu [i + 180];  	InEng_ac [j * 4] = ac [i + 180];  	pos_InEng [j * 4] = i + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 180 >= kol_front_vu - 1) {  	t_InEng [j * 4] = front_vu [kol_front_vu - 2];  	InEng [j * 4] = vu [kol_front_vu - 2];  	InEng_ac [j * 4] = ac [kol_front_vu - 3];  	pos_InEng [j * 4] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4] = front_vu [i + 180];  	InEng [j * 4] = vu [i + 180];  	InEng_ac [j * 4] = ac [i + 180];  	pos_InEng [j * 4] = i + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 180 >= kol_front_vu - 1) {  	t_InEng [j * 4] = front_vu [kol_front_vu - 2];  	InEng [j * 4] = vu [kol_front_vu - 2];  	InEng_ac [j * 4] = ac [kol_front_vu - 3];  	pos_InEng [j * 4] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4] = front_vu [i + 180];  	InEng [j * 4] = vu [i + 180];  	InEng_ac [j * 4] = ac [i + 180];  	pos_InEng [j * 4] = i + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 180 >= kol_front_vu - 1) {  	t_InEng [j * 4] = front_vu [kol_front_vu - 2];  	InEng [j * 4] = vu [kol_front_vu - 2];  	InEng_ac [j * 4] = ac [kol_front_vu - 3];  	pos_InEng [j * 4] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4] = front_vu [i + 180];  	InEng [j * 4] = vu [i + 180];  	InEng_ac [j * 4] = ac [i + 180];  	pos_InEng [j * 4] = i + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 180 >= kol_front_vu - 1) {  	t_InEng [j * 4] = front_vu [kol_front_vu - 2];  	InEng [j * 4] = vu [kol_front_vu - 2];  	InEng_ac [j * 4] = ac [kol_front_vu - 3];  	pos_InEng [j * 4] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4] = front_vu [i + 180];  	InEng [j * 4] = vu [i + 180];  	InEng_ac [j * 4] = ac [i + 180];  	pos_InEng [j * 4] = i + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 180 >= kol_front_vu - 1) {  	t_InEng [j * 4] = front_vu [kol_front_vu - 2];  	InEng [j * 4] = vu [kol_front_vu - 2];  	InEng_ac [j * 4] = ac [kol_front_vu - 3];  	pos_InEng [j * 4] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4] = front_vu [i + 180];  	InEng [j * 4] = vu [i + 180];  	InEng_ac [j * 4] = ac [i + 180];  	pos_InEng [j * 4] = i + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 180 >= kol_front_vu - 1) {  	t_InEng [j * 4] = front_vu [kol_front_vu - 2];  	InEng [j * 4] = vu [kol_front_vu - 2];  	InEng_ac [j * 4] = ac [kol_front_vu - 3];  	pos_InEng [j * 4] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4] = front_vu [i + 180];  	InEng [j * 4] = vu [i + 180];  	InEng_ac [j * 4] = ac [i + 180];  	pos_InEng [j * 4] = i + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 180 >= kol_front_vu - 1) {  	t_InEng [j * 4] = front_vu [kol_front_vu - 2];  	InEng [j * 4] = vu [kol_front_vu - 2];  	InEng_ac [j * 4] = ac [kol_front_vu - 3];  	pos_InEng [j * 4] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4] = front_vu [i + 180];  	InEng [j * 4] = vu [i + 180];  	InEng_ac [j * 4] = ac [i + 180];  	pos_InEng [j * 4] = i + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 180 >= kol_front_vu - 1) {  	t_InEng [j * 4] = front_vu [kol_front_vu - 2];  	InEng [j * 4] = vu [kol_front_vu - 2];  	InEng_ac [j * 4] = ac [kol_front_vu - 3];  	pos_InEng [j * 4] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4] = front_vu [i + 180];  	InEng [j * 4] = vu [i + 180];  	InEng_ac [j * 4] = ac [i + 180];  	pos_InEng [j * 4] = i + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 180 >= kol_front_vu - 1) {  	t_InEng [j * 4] = front_vu [kol_front_vu - 2];  	InEng [j * 4] = vu [kol_front_vu - 2];  	InEng_ac [j * 4] = ac [kol_front_vu - 3];  	pos_InEng [j * 4] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4] = front_vu [i + 180];  	InEng [j * 4] = vu [i + 180];  	InEng_ac [j * 4] = ac [i + 180];  	pos_InEng [j * 4] = i + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4] = front_vu [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4] = front_vu [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4] = vu [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4] = vu [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4] = ac [kol_front_vu - 3];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4] = ac [kol_front_vu - 3];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4] = kol_front_vu - 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4] = kol_front_vu - 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4] = front_vu [i + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4] = front_vu [i + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4] = vu [i + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4] = vu [i + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4] = ac [i + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4] = ac [i + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4] = i + 180;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4] = i + 180;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 >= kol_front_vu - 1) {  	t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  	InEng [j * 4 + 1] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  	pos_InEng [j * 4 + 1] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4 + 1] = front_vu [i + 360];  	InEng [j * 4 + 1] = vu [i + 360];  	InEng_ac [j * 4 + 1] = ac [i + 360];  	pos_InEng [j * 4 + 1] = i + 360;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 >= kol_front_vu - 1) {  	t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  	InEng [j * 4 + 1] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  	pos_InEng [j * 4 + 1] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4 + 1] = front_vu [i + 360];  	InEng [j * 4 + 1] = vu [i + 360];  	InEng_ac [j * 4 + 1] = ac [i + 360];  	pos_InEng [j * 4 + 1] = i + 360;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 >= kol_front_vu - 1) {  	t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  	InEng [j * 4 + 1] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  	pos_InEng [j * 4 + 1] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4 + 1] = front_vu [i + 360];  	InEng [j * 4 + 1] = vu [i + 360];  	InEng_ac [j * 4 + 1] = ac [i + 360];  	pos_InEng [j * 4 + 1] = i + 360;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 >= kol_front_vu - 1) {  	t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  	InEng [j * 4 + 1] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  	pos_InEng [j * 4 + 1] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4 + 1] = front_vu [i + 360];  	InEng [j * 4 + 1] = vu [i + 360];  	InEng_ac [j * 4 + 1] = ac [i + 360];  	pos_InEng [j * 4 + 1] = i + 360;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 >= kol_front_vu - 1) {  	t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  	InEng [j * 4 + 1] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  	pos_InEng [j * 4 + 1] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4 + 1] = front_vu [i + 360];  	InEng [j * 4 + 1] = vu [i + 360];  	InEng_ac [j * 4 + 1] = ac [i + 360];  	pos_InEng [j * 4 + 1] = i + 360;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 >= kol_front_vu - 1) {  	t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  	InEng [j * 4 + 1] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  	pos_InEng [j * 4 + 1] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4 + 1] = front_vu [i + 360];  	InEng [j * 4 + 1] = vu [i + 360];  	InEng_ac [j * 4 + 1] = ac [i + 360];  	pos_InEng [j * 4 + 1] = i + 360;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 >= kol_front_vu - 1) {  	t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  	InEng [j * 4 + 1] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  	pos_InEng [j * 4 + 1] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4 + 1] = front_vu [i + 360];  	InEng [j * 4 + 1] = vu [i + 360];  	InEng_ac [j * 4 + 1] = ac [i + 360];  	pos_InEng [j * 4 + 1] = i + 360;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 >= kol_front_vu - 1) {  	t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  	InEng [j * 4 + 1] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  	pos_InEng [j * 4 + 1] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4 + 1] = front_vu [i + 360];  	InEng [j * 4 + 1] = vu [i + 360];  	InEng_ac [j * 4 + 1] = ac [i + 360];  	pos_InEng [j * 4 + 1] = i + 360;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 >= kol_front_vu - 1) {  	t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  	InEng [j * 4 + 1] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  	pos_InEng [j * 4 + 1] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4 + 1] = front_vu [i + 360];  	InEng [j * 4 + 1] = vu [i + 360];  	InEng_ac [j * 4 + 1] = ac [i + 360];  	pos_InEng [j * 4 + 1] = i + 360;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 >= kol_front_vu - 1) {  	t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  	InEng [j * 4 + 1] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  	pos_InEng [j * 4 + 1] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4 + 1] = front_vu [i + 360];  	InEng [j * 4 + 1] = vu [i + 360];  	InEng_ac [j * 4 + 1] = ac [i + 360];  	pos_InEng [j * 4 + 1] = i + 360;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 >= kol_front_vu - 1) {  	t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  	InEng [j * 4 + 1] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  	pos_InEng [j * 4 + 1] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4 + 1] = front_vu [i + 360];  	InEng [j * 4 + 1] = vu [i + 360];  	InEng_ac [j * 4 + 1] = ac [i + 360];  	pos_InEng [j * 4 + 1] = i + 360;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 >= kol_front_vu - 1) {  	t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  	InEng [j * 4 + 1] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  	pos_InEng [j * 4 + 1] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4 + 1] = front_vu [i + 360];  	InEng [j * 4 + 1] = vu [i + 360];  	InEng_ac [j * 4 + 1] = ac [i + 360];  	pos_InEng [j * 4 + 1] = i + 360;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 >= kol_front_vu - 1) {  	t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  	InEng [j * 4 + 1] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  	pos_InEng [j * 4 + 1] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4 + 1] = front_vu [i + 360];  	InEng [j * 4 + 1] = vu [i + 360];  	InEng_ac [j * 4 + 1] = ac [i + 360];  	pos_InEng [j * 4 + 1] = i + 360;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 >= kol_front_vu - 1) {  	t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  	InEng [j * 4 + 1] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  	pos_InEng [j * 4 + 1] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4 + 1] = front_vu [i + 360];  	InEng [j * 4 + 1] = vu [i + 360];  	InEng_ac [j * 4 + 1] = ac [i + 360];  	pos_InEng [j * 4 + 1] = i + 360;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 >= kol_front_vu - 1) {  	t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  	InEng [j * 4 + 1] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  	pos_InEng [j * 4 + 1] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4 + 1] = front_vu [i + 360];  	InEng [j * 4 + 1] = vu [i + 360];  	InEng_ac [j * 4 + 1] = ac [i + 360];  	pos_InEng [j * 4 + 1] = i + 360;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 >= kol_front_vu - 1) {  	t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  	InEng [j * 4 + 1] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  	pos_InEng [j * 4 + 1] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4 + 1] = front_vu [i + 360];  	InEng [j * 4 + 1] = vu [i + 360];  	InEng_ac [j * 4 + 1] = ac [i + 360];  	pos_InEng [j * 4 + 1] = i + 360;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 >= kol_front_vu - 1) {  	t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  	InEng [j * 4 + 1] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  	pos_InEng [j * 4 + 1] = kol_front_vu - 2;  }  else {  	t_InEng [j * 4 + 1] = front_vu [i + 360];  	InEng [j * 4 + 1] = vu [i + 360];  	InEng_ac [j * 4 + 1] = ac [i + 360];  	pos_InEng [j * 4 + 1] = i + 360;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 1] = front_vu [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 1] = vu [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 1] = vu [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 1] = ac [kol_front_vu - 3];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4 + 1] = kol_front_vu - 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4 + 1] = kol_front_vu - 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 1] = front_vu [i + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 1] = front_vu [i + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 1] = vu [i + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 1] = vu [i + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 1] = ac [i + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 1] = ac [i + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4 + 1] = i + 360;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4 + 1] = i + 360;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 180 >= kol_front_vu - 1) {  	InEng [j * 4 + 2] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 2] = kol_front_vu - 2;  }  else {  	InEng [j * 4 + 2] = vu [i + 360 + 180];  	InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  	t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  	pos_InEng [j * 4 + 2] = i + 360 + 180;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 2] = vu [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 2] = vu [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 2] = vu [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 2] = ac [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 2] = front_vu [kol_front_vu - 3];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4 + 2] = kol_front_vu - 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4 + 2] = kol_front_vu - 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4 + 2] = kol_front_vu - 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 2] = vu [i + 360 + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 2] = vu [i + 360 + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 2] = vu [i + 360 + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 2] = vu [i + 360 + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 2] = ac [i + 360 + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 2] = front_vu [i + 360 + 180];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4 + 2] = i + 360 + 180;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4 + 2] = i + 360 + 180;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4 + 2] = i + 360 + 180;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4 + 2] = i + 360 + 180;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: if (i + 360 + 360 >= kol_front_vu - 1) {  	InEng [j * 4 + 3] = vu [kol_front_vu - 2];  	InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  	t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  	pos_InEng [j * 4 + 3] = kol_front_vu - 3;  }  else {  	InEng [j * 4 + 3] = vu [i + 360 + 360];  	InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  	t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  	pos_InEng [j * 4 + 3] = i + 720;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 3] = vu [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 3] = vu [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 3] = vu [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 3] = ac [kol_front_vu - 2];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 3] = front_vu [kol_front_vu - 3];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4 + 3] = kol_front_vu - 3;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4 + 3] = kol_front_vu - 3;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4 + 3] = kol_front_vu - 3;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 3] = vu [i + 360 + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 3] = vu [i + 360 + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 3] = vu [i + 360 + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng [j * 4 + 3] = vu [i + 360 + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: InEng_ac [j * 4 + 3] = ac [i + 360 + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: t_InEng [j * 4 + 3] = front_vu [i + 360 + 360];  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4 + 3] = i + 720;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4 + 3] = i + 720;  
Magic Number,WindowsFormsGraphickOpenGL,ClassCalc,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassCalc.cs,GetMaxMin,The following statement contains a magic number: pos_InEng [j * 4 + 3] = i + 720;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: idx = 90;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: idy = 60;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: for (i = 0; i < 4; i++) {  	colors_func [i] = new float[3];  	flags_ch [i] = true;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: for (i = 0; i < 4; i++) {  	colors_func [i] = new float[3];  	flags_ch [i] = true;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: colors_func [i] = new float[3];  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: colors_func [0] [0] = (float)(Color.DarkGreen.R / 255.0);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: colors_func [0] [1] = (float)(Color.DarkGreen.G / 255.0);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: colors_func [0] [2] = (float)(Color.DarkGreen.B / 255.0);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: colors_func [0] [2] = (float)(Color.DarkGreen.B / 255.0);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: colors_func [1] [0] = 255;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: colors_func [2] [2] = 255;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: colors_func [2] [2] = 255;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: colors_func [2] [2] = 255;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: colors_func [3] [0] = 124;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: colors_func [3] [0] = 124;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: colors_func [3] [1] = 65;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: colors_func [3] [1] = 65;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: colors_func [3] [2] = 0;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,ClassOpenGLGraphick2D,The following statement contains a magic number: colors_func [3] [2] = 0;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (n > 0) {  	name_x = in_name_x;  	width = in_width;  	max_x = x.Max ();  	min_x = x.Min ();  	pow_x = Math.Floor (Math.Log10 (Math.Abs (max_x - min_x)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_x);  	if (pow_x < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_x) <= 15) {  			imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  			imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  			imax = Math.Round (max_x / newdiv' round) * newdiv;  			imin = Math.Round (min_x / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_x / idiv) * idiv;  		imin = Math.Floor (min_x / idiv) * idiv;  	}  	while (imax < max_x)  		imax = imax + idiv;  	while (imin > min_x)  		imin = imin - idiv;  	max_x = imax;  	min_x = imin;  	div_x = max_x - min_x;  	hx = idiv;  	nx = Convert.ToInt32 (div_x / hx);  	if (max_x > (nx + 2) * hx) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_x)));  		if ((pow_x > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_x = Convert.ToInt32 (Math.Abs (pow_x - pow_max));  		else  			dec_x = Convert.ToInt32 (Math.Abs (pow_x) + Math.Abs (pow_max));  	}  	else  		dec_x = 1;  	if (dec_x == 0)  		dec_x = 1;  	if (nx == 1 || nx == 2 || nx == 3) {  		nx = nx * 2;  		hx = hx / 2;  	}  	prx = div_x / (width - 2 * idx);  	ddx = prx * idx;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (n > 0) {  	name_x = in_name_x;  	width = in_width;  	max_x = x.Max ();  	min_x = x.Min ();  	pow_x = Math.Floor (Math.Log10 (Math.Abs (max_x - min_x)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_x);  	if (pow_x < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_x) <= 15) {  			imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  			imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  			imax = Math.Round (max_x / newdiv' round) * newdiv;  			imin = Math.Round (min_x / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_x / idiv) * idiv;  		imin = Math.Floor (min_x / idiv) * idiv;  	}  	while (imax < max_x)  		imax = imax + idiv;  	while (imin > min_x)  		imin = imin - idiv;  	max_x = imax;  	min_x = imin;  	div_x = max_x - min_x;  	hx = idiv;  	nx = Convert.ToInt32 (div_x / hx);  	if (max_x > (nx + 2) * hx) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_x)));  		if ((pow_x > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_x = Convert.ToInt32 (Math.Abs (pow_x - pow_max));  		else  			dec_x = Convert.ToInt32 (Math.Abs (pow_x) + Math.Abs (pow_max));  	}  	else  		dec_x = 1;  	if (dec_x == 0)  		dec_x = 1;  	if (nx == 1 || nx == 2 || nx == 3) {  		nx = nx * 2;  		hx = hx / 2;  	}  	prx = div_x / (width - 2 * idx);  	ddx = prx * idx;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (n > 0) {  	name_x = in_name_x;  	width = in_width;  	max_x = x.Max ();  	min_x = x.Min ();  	pow_x = Math.Floor (Math.Log10 (Math.Abs (max_x - min_x)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_x);  	if (pow_x < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_x) <= 15) {  			imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  			imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  			imax = Math.Round (max_x / newdiv' round) * newdiv;  			imin = Math.Round (min_x / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_x / idiv) * idiv;  		imin = Math.Floor (min_x / idiv) * idiv;  	}  	while (imax < max_x)  		imax = imax + idiv;  	while (imin > min_x)  		imin = imin - idiv;  	max_x = imax;  	min_x = imin;  	div_x = max_x - min_x;  	hx = idiv;  	nx = Convert.ToInt32 (div_x / hx);  	if (max_x > (nx + 2) * hx) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_x)));  		if ((pow_x > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_x = Convert.ToInt32 (Math.Abs (pow_x - pow_max));  		else  			dec_x = Convert.ToInt32 (Math.Abs (pow_x) + Math.Abs (pow_max));  	}  	else  		dec_x = 1;  	if (dec_x == 0)  		dec_x = 1;  	if (nx == 1 || nx == 2 || nx == 3) {  		nx = nx * 2;  		hx = hx / 2;  	}  	prx = div_x / (width - 2 * idx);  	ddx = prx * idx;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (n > 0) {  	name_x = in_name_x;  	width = in_width;  	max_x = x.Max ();  	min_x = x.Min ();  	pow_x = Math.Floor (Math.Log10 (Math.Abs (max_x - min_x)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_x);  	if (pow_x < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_x) <= 15) {  			imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  			imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  			imax = Math.Round (max_x / newdiv' round) * newdiv;  			imin = Math.Round (min_x / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_x / idiv) * idiv;  		imin = Math.Floor (min_x / idiv) * idiv;  	}  	while (imax < max_x)  		imax = imax + idiv;  	while (imin > min_x)  		imin = imin - idiv;  	max_x = imax;  	min_x = imin;  	div_x = max_x - min_x;  	hx = idiv;  	nx = Convert.ToInt32 (div_x / hx);  	if (max_x > (nx + 2) * hx) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_x)));  		if ((pow_x > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_x = Convert.ToInt32 (Math.Abs (pow_x - pow_max));  		else  			dec_x = Convert.ToInt32 (Math.Abs (pow_x) + Math.Abs (pow_max));  	}  	else  		dec_x = 1;  	if (dec_x == 0)  		dec_x = 1;  	if (nx == 1 || nx == 2 || nx == 3) {  		nx = nx * 2;  		hx = hx / 2;  	}  	prx = div_x / (width - 2 * idx);  	ddx = prx * idx;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (n > 0) {  	name_x = in_name_x;  	width = in_width;  	max_x = x.Max ();  	min_x = x.Min ();  	pow_x = Math.Floor (Math.Log10 (Math.Abs (max_x - min_x)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_x);  	if (pow_x < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_x) <= 15) {  			imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  			imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  			imax = Math.Round (max_x / newdiv' round) * newdiv;  			imin = Math.Round (min_x / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_x / idiv) * idiv;  		imin = Math.Floor (min_x / idiv) * idiv;  	}  	while (imax < max_x)  		imax = imax + idiv;  	while (imin > min_x)  		imin = imin - idiv;  	max_x = imax;  	min_x = imin;  	div_x = max_x - min_x;  	hx = idiv;  	nx = Convert.ToInt32 (div_x / hx);  	if (max_x > (nx + 2) * hx) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_x)));  		if ((pow_x > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_x = Convert.ToInt32 (Math.Abs (pow_x - pow_max));  		else  			dec_x = Convert.ToInt32 (Math.Abs (pow_x) + Math.Abs (pow_max));  	}  	else  		dec_x = 1;  	if (dec_x == 0)  		dec_x = 1;  	if (nx == 1 || nx == 2 || nx == 3) {  		nx = nx * 2;  		hx = hx / 2;  	}  	prx = div_x / (width - 2 * idx);  	ddx = prx * idx;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (n > 0) {  	name_x = in_name_x;  	width = in_width;  	max_x = x.Max ();  	min_x = x.Min ();  	pow_x = Math.Floor (Math.Log10 (Math.Abs (max_x - min_x)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_x);  	if (pow_x < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_x) <= 15) {  			imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  			imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  			imax = Math.Round (max_x / newdiv' round) * newdiv;  			imin = Math.Round (min_x / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_x / idiv) * idiv;  		imin = Math.Floor (min_x / idiv) * idiv;  	}  	while (imax < max_x)  		imax = imax + idiv;  	while (imin > min_x)  		imin = imin - idiv;  	max_x = imax;  	min_x = imin;  	div_x = max_x - min_x;  	hx = idiv;  	nx = Convert.ToInt32 (div_x / hx);  	if (max_x > (nx + 2) * hx) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_x)));  		if ((pow_x > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_x = Convert.ToInt32 (Math.Abs (pow_x - pow_max));  		else  			dec_x = Convert.ToInt32 (Math.Abs (pow_x) + Math.Abs (pow_max));  	}  	else  		dec_x = 1;  	if (dec_x == 0)  		dec_x = 1;  	if (nx == 1 || nx == 2 || nx == 3) {  		nx = nx * 2;  		hx = hx / 2;  	}  	prx = div_x / (width - 2 * idx);  	ddx = prx * idx;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (n > 0) {  	name_x = in_name_x;  	width = in_width;  	max_x = x.Max ();  	min_x = x.Min ();  	pow_x = Math.Floor (Math.Log10 (Math.Abs (max_x - min_x)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_x);  	if (pow_x < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_x) <= 15) {  			imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  			imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  			imax = Math.Round (max_x / newdiv' round) * newdiv;  			imin = Math.Round (min_x / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_x / idiv) * idiv;  		imin = Math.Floor (min_x / idiv) * idiv;  	}  	while (imax < max_x)  		imax = imax + idiv;  	while (imin > min_x)  		imin = imin - idiv;  	max_x = imax;  	min_x = imin;  	div_x = max_x - min_x;  	hx = idiv;  	nx = Convert.ToInt32 (div_x / hx);  	if (max_x > (nx + 2) * hx) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_x)));  		if ((pow_x > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_x = Convert.ToInt32 (Math.Abs (pow_x - pow_max));  		else  			dec_x = Convert.ToInt32 (Math.Abs (pow_x) + Math.Abs (pow_max));  	}  	else  		dec_x = 1;  	if (dec_x == 0)  		dec_x = 1;  	if (nx == 1 || nx == 2 || nx == 3) {  		nx = nx * 2;  		hx = hx / 2;  	}  	prx = div_x / (width - 2 * idx);  	ddx = prx * idx;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (n > 0) {  	name_x = in_name_x;  	width = in_width;  	max_x = x.Max ();  	min_x = x.Min ();  	pow_x = Math.Floor (Math.Log10 (Math.Abs (max_x - min_x)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_x);  	if (pow_x < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_x) <= 15) {  			imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  			imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  			imax = Math.Round (max_x / newdiv' round) * newdiv;  			imin = Math.Round (min_x / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_x / idiv) * idiv;  		imin = Math.Floor (min_x / idiv) * idiv;  	}  	while (imax < max_x)  		imax = imax + idiv;  	while (imin > min_x)  		imin = imin - idiv;  	max_x = imax;  	min_x = imin;  	div_x = max_x - min_x;  	hx = idiv;  	nx = Convert.ToInt32 (div_x / hx);  	if (max_x > (nx + 2) * hx) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_x)));  		if ((pow_x > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_x = Convert.ToInt32 (Math.Abs (pow_x - pow_max));  		else  			dec_x = Convert.ToInt32 (Math.Abs (pow_x) + Math.Abs (pow_max));  	}  	else  		dec_x = 1;  	if (dec_x == 0)  		dec_x = 1;  	if (nx == 1 || nx == 2 || nx == 3) {  		nx = nx * 2;  		hx = hx / 2;  	}  	prx = div_x / (width - 2 * idx);  	ddx = prx * idx;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (n > 0) {  	name_x = in_name_x;  	width = in_width;  	max_x = x.Max ();  	min_x = x.Min ();  	pow_x = Math.Floor (Math.Log10 (Math.Abs (max_x - min_x)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_x);  	if (pow_x < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_x) <= 15) {  			imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  			imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  			imax = Math.Round (max_x / newdiv' round) * newdiv;  			imin = Math.Round (min_x / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_x / idiv) * idiv;  		imin = Math.Floor (min_x / idiv) * idiv;  	}  	while (imax < max_x)  		imax = imax + idiv;  	while (imin > min_x)  		imin = imin - idiv;  	max_x = imax;  	min_x = imin;  	div_x = max_x - min_x;  	hx = idiv;  	nx = Convert.ToInt32 (div_x / hx);  	if (max_x > (nx + 2) * hx) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_x)));  		if ((pow_x > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_x = Convert.ToInt32 (Math.Abs (pow_x - pow_max));  		else  			dec_x = Convert.ToInt32 (Math.Abs (pow_x) + Math.Abs (pow_max));  	}  	else  		dec_x = 1;  	if (dec_x == 0)  		dec_x = 1;  	if (nx == 1 || nx == 2 || nx == 3) {  		nx = nx * 2;  		hx = hx / 2;  	}  	prx = div_x / (width - 2 * idx);  	ddx = prx * idx;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (n > 0) {  	name_x = in_name_x;  	width = in_width;  	max_x = x.Max ();  	min_x = x.Min ();  	pow_x = Math.Floor (Math.Log10 (Math.Abs (max_x - min_x)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_x);  	if (pow_x < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_x) <= 15) {  			imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  			imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  			imax = Math.Round (max_x / newdiv' round) * newdiv;  			imin = Math.Round (min_x / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_x / idiv) * idiv;  		imin = Math.Floor (min_x / idiv) * idiv;  	}  	while (imax < max_x)  		imax = imax + idiv;  	while (imin > min_x)  		imin = imin - idiv;  	max_x = imax;  	min_x = imin;  	div_x = max_x - min_x;  	hx = idiv;  	nx = Convert.ToInt32 (div_x / hx);  	if (max_x > (nx + 2) * hx) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_x)));  		if ((pow_x > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_x = Convert.ToInt32 (Math.Abs (pow_x - pow_max));  		else  			dec_x = Convert.ToInt32 (Math.Abs (pow_x) + Math.Abs (pow_max));  	}  	else  		dec_x = 1;  	if (dec_x == 0)  		dec_x = 1;  	if (nx == 1 || nx == 2 || nx == 3) {  		nx = nx * 2;  		hx = hx / 2;  	}  	prx = div_x / (width - 2 * idx);  	ddx = prx * idx;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (n > 0) {  	name_x = in_name_x;  	width = in_width;  	max_x = x.Max ();  	min_x = x.Min ();  	pow_x = Math.Floor (Math.Log10 (Math.Abs (max_x - min_x)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_x);  	if (pow_x < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_x) <= 15) {  			imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  			imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  			imax = Math.Round (max_x / newdiv' round) * newdiv;  			imin = Math.Round (min_x / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_x / idiv) * idiv;  		imin = Math.Floor (min_x / idiv) * idiv;  	}  	while (imax < max_x)  		imax = imax + idiv;  	while (imin > min_x)  		imin = imin - idiv;  	max_x = imax;  	min_x = imin;  	div_x = max_x - min_x;  	hx = idiv;  	nx = Convert.ToInt32 (div_x / hx);  	if (max_x > (nx + 2) * hx) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_x)));  		if ((pow_x > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_x = Convert.ToInt32 (Math.Abs (pow_x - pow_max));  		else  			dec_x = Convert.ToInt32 (Math.Abs (pow_x) + Math.Abs (pow_max));  	}  	else  		dec_x = 1;  	if (dec_x == 0)  		dec_x = 1;  	if (nx == 1 || nx == 2 || nx == 3) {  		nx = nx * 2;  		hx = hx / 2;  	}  	prx = div_x / (width - 2 * idx);  	ddx = prx * idx;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: idiv = Math.Pow (10' pow_x);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (pow_x < 0) {  	int round;  	double newdiv;  	if (Math.Abs (pow_x) <= 15) {  		imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  		imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  	}  	else {  		round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  		newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  		imax = Math.Round (max_x / newdiv' round) * newdiv;  		imin = Math.Round (min_x / newdiv' round) * newdiv;  	}  }  else {  	imax = Math.Floor (max_x / idiv) * idiv;  	imin = Math.Floor (min_x / idiv) * idiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (pow_x < 0) {  	int round;  	double newdiv;  	if (Math.Abs (pow_x) <= 15) {  		imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  		imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  	}  	else {  		round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  		newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  		imax = Math.Round (max_x / newdiv' round) * newdiv;  		imin = Math.Round (min_x / newdiv' round) * newdiv;  	}  }  else {  	imax = Math.Floor (max_x / idiv) * idiv;  	imin = Math.Floor (min_x / idiv) * idiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (pow_x < 0) {  	int round;  	double newdiv;  	if (Math.Abs (pow_x) <= 15) {  		imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  		imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  	}  	else {  		round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  		newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  		imax = Math.Round (max_x / newdiv' round) * newdiv;  		imin = Math.Round (min_x / newdiv' round) * newdiv;  	}  }  else {  	imax = Math.Floor (max_x / idiv) * idiv;  	imin = Math.Floor (min_x / idiv) * idiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (pow_x < 0) {  	int round;  	double newdiv;  	if (Math.Abs (pow_x) <= 15) {  		imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  		imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  	}  	else {  		round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  		newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  		imax = Math.Round (max_x / newdiv' round) * newdiv;  		imin = Math.Round (min_x / newdiv' round) * newdiv;  	}  }  else {  	imax = Math.Floor (max_x / idiv) * idiv;  	imin = Math.Floor (min_x / idiv) * idiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (Math.Abs (pow_x) <= 15) {  	imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  	imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  }  else {  	round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  	newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  	imax = Math.Round (max_x / newdiv' round) * newdiv;  	imin = Math.Round (min_x / newdiv' round) * newdiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (Math.Abs (pow_x) <= 15) {  	imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  	imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  }  else {  	round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  	newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  	imax = Math.Round (max_x / newdiv' round) * newdiv;  	imin = Math.Round (min_x / newdiv' round) * newdiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (Math.Abs (pow_x) <= 15) {  	imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  	imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  }  else {  	round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  	newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  	imax = Math.Round (max_x / newdiv' round) * newdiv;  	imin = Math.Round (min_x / newdiv' round) * newdiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (Math.Abs (pow_x) <= 15) {  	imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  	imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  }  else {  	round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  	newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  	imax = Math.Round (max_x / newdiv' round) * newdiv;  	imin = Math.Round (min_x / newdiv' round) * newdiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (max_x > (nx + 2) * hx) {  	double pow_max;  	pow_max = Math.Floor (Math.Log10 (Math.Abs (max_x)));  	if ((pow_x > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  		dec_x = Convert.ToInt32 (Math.Abs (pow_x - pow_max));  	else  		dec_x = Convert.ToInt32 (Math.Abs (pow_x) + Math.Abs (pow_max));  }  else  	dec_x = 1;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (nx == 1 || nx == 2 || nx == 3) {  	nx = nx * 2;  	hx = hx / 2;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (nx == 1 || nx == 2 || nx == 3) {  	nx = nx * 2;  	hx = hx / 2;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (nx == 1 || nx == 2 || nx == 3) {  	nx = nx * 2;  	hx = hx / 2;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: if (nx == 1 || nx == 2 || nx == 3) {  	nx = nx * 2;  	hx = hx / 2;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: nx = nx * 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: hx = hx / 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X,The following statement contains a magic number: prx = div_x / (width - 2 * idx);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_XW,The following statement contains a magic number: if (n > 0) {  	width = in_width;  	prx = div_x / (width - 2 * idx);  	ddx = prx * idx;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_XW,The following statement contains a magic number: prx = div_x / (width - 2 * idx);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: idiv = Math.Pow (10' pow_x);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: if (pow_x < 0) {  	int round;  	double newdiv;  	if (Math.Abs (pow_x) <= 15) {  		imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  		imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  	}  	else {  		round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  		newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  		imax = Math.Round (max_x / newdiv' round) * newdiv;  		imin = Math.Round (min_x / newdiv' round) * newdiv;  	}  }  else {  	imax = Math.Floor (max_x / idiv) * idiv;  	imin = Math.Floor (min_x / idiv) * idiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: if (pow_x < 0) {  	int round;  	double newdiv;  	if (Math.Abs (pow_x) <= 15) {  		imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  		imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  	}  	else {  		round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  		newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  		imax = Math.Round (max_x / newdiv' round) * newdiv;  		imin = Math.Round (min_x / newdiv' round) * newdiv;  	}  }  else {  	imax = Math.Floor (max_x / idiv) * idiv;  	imin = Math.Floor (min_x / idiv) * idiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: if (pow_x < 0) {  	int round;  	double newdiv;  	if (Math.Abs (pow_x) <= 15) {  		imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  		imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  	}  	else {  		round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  		newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  		imax = Math.Round (max_x / newdiv' round) * newdiv;  		imin = Math.Round (min_x / newdiv' round) * newdiv;  	}  }  else {  	imax = Math.Floor (max_x / idiv) * idiv;  	imin = Math.Floor (min_x / idiv) * idiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: if (pow_x < 0) {  	int round;  	double newdiv;  	if (Math.Abs (pow_x) <= 15) {  		imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  		imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  	}  	else {  		round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  		newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  		imax = Math.Round (max_x / newdiv' round) * newdiv;  		imin = Math.Round (min_x / newdiv' round) * newdiv;  	}  }  else {  	imax = Math.Floor (max_x / idiv) * idiv;  	imin = Math.Floor (min_x / idiv) * idiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: if (Math.Abs (pow_x) <= 15) {  	imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  	imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  }  else {  	round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  	newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  	imax = Math.Round (max_x / newdiv' round) * newdiv;  	imin = Math.Round (min_x / newdiv' round) * newdiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: if (Math.Abs (pow_x) <= 15) {  	imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  	imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  }  else {  	round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  	newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  	imax = Math.Round (max_x / newdiv' round) * newdiv;  	imin = Math.Round (min_x / newdiv' round) * newdiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: if (Math.Abs (pow_x) <= 15) {  	imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  	imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  }  else {  	round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  	newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  	imax = Math.Round (max_x / newdiv' round) * newdiv;  	imin = Math.Round (min_x / newdiv' round) * newdiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: if (Math.Abs (pow_x) <= 15) {  	imax = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x)));  	imin = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x)));  }  else {  	round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  	newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  	imax = Math.Round (max_x / newdiv' round) * newdiv;  	imin = Math.Round (min_x / newdiv' round) * newdiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: round = Convert.ToInt32 (Math.Abs (pow_x)) % 15;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: newdiv = Math.Pow (10' Convert.ToInt32 (pow_x) - Convert.ToInt32 (pow_x) % 15);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: if (max_x > (nx + 2) * hx) {  	double pow_max;  	pow_max = Math.Floor (Math.Log10 (Math.Abs (max_x)));  	if ((pow_x > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  		dec_x = Convert.ToInt32 (Math.Abs (pow_x - pow_max));  	else  		dec_x = Convert.ToInt32 (Math.Abs (pow_x) + Math.Abs (pow_max));  }  else  	dec_x = 1;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: if (nx == 1 || nx == 2 || nx == 3) {  	nx = nx * 2;  	hx = hx / 2;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: if (nx == 1 || nx == 2 || nx == 3) {  	nx = nx * 2;  	hx = hx / 2;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: if (nx == 1 || nx == 2 || nx == 3) {  	nx = nx * 2;  	hx = hx / 2;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: if (nx == 1 || nx == 2 || nx == 3) {  	nx = nx * 2;  	hx = hx / 2;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: nx = nx * 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: hx = hx / 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_X_zoom,The following statement contains a magic number: prx = div_x / (width - 2 * idx);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (n > 0) {  	int j;  	name_y = in_name_y;  	height = in_height;  	if (flags_ch [0]) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	for (j = 1; j < n; j++) {  		if (flags_ch [j]) {  			if (max_y < y [j].Max ())  				max_y = y [j].Max ();  			if (min_y > y [j].Min ())  				min_y = y [j].Min ();  		}  	}  	for (j = 0; j < n; j++)  		if (flags_ch [j])  			break;  	if (j == n) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	pow_y = Math.Floor (Math.Log10 (Math.Abs (max_y - min_y)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_y);  	if (pow_y < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_y) <= 15) {  			imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  			imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  			imax = Math.Round (max_y / newdiv' round) * newdiv;  			imin = Math.Round (min_y / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_y / idiv) * idiv;  		imin = Math.Floor (min_y / idiv) * idiv;  	}  	while (imax < max_y)  		imax = imax + idiv;  	while (imin > min_y)  		imin = imin - idiv;  	max_y = imax;  	min_y = imin;  	div_y = max_y - min_y;  	hy = idiv;  	if (max_y > (ny + 2) * hy) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_y)));  		if ((pow_y > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_y = Convert.ToInt32 (Math.Abs (pow_y - pow_max));  		else  			dec_y = Convert.ToInt32 (Math.Abs (pow_y) + Math.Abs (pow_max));  	}  	else  		dec_y = 1;  	if (dec_y == 0)  		dec_y = 1;  	ny = Convert.ToInt32 (div_y / hy);  	if (ny == 1 || ny == 2 || ny == 3) {  		ny = ny * 2;  		hy = hy / 2;  	}  	pry = div_y / (height - 2 * idy);  	ddy = pry * idy;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (n > 0) {  	int j;  	name_y = in_name_y;  	height = in_height;  	if (flags_ch [0]) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	for (j = 1; j < n; j++) {  		if (flags_ch [j]) {  			if (max_y < y [j].Max ())  				max_y = y [j].Max ();  			if (min_y > y [j].Min ())  				min_y = y [j].Min ();  		}  	}  	for (j = 0; j < n; j++)  		if (flags_ch [j])  			break;  	if (j == n) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	pow_y = Math.Floor (Math.Log10 (Math.Abs (max_y - min_y)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_y);  	if (pow_y < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_y) <= 15) {  			imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  			imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  			imax = Math.Round (max_y / newdiv' round) * newdiv;  			imin = Math.Round (min_y / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_y / idiv) * idiv;  		imin = Math.Floor (min_y / idiv) * idiv;  	}  	while (imax < max_y)  		imax = imax + idiv;  	while (imin > min_y)  		imin = imin - idiv;  	max_y = imax;  	min_y = imin;  	div_y = max_y - min_y;  	hy = idiv;  	if (max_y > (ny + 2) * hy) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_y)));  		if ((pow_y > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_y = Convert.ToInt32 (Math.Abs (pow_y - pow_max));  		else  			dec_y = Convert.ToInt32 (Math.Abs (pow_y) + Math.Abs (pow_max));  	}  	else  		dec_y = 1;  	if (dec_y == 0)  		dec_y = 1;  	ny = Convert.ToInt32 (div_y / hy);  	if (ny == 1 || ny == 2 || ny == 3) {  		ny = ny * 2;  		hy = hy / 2;  	}  	pry = div_y / (height - 2 * idy);  	ddy = pry * idy;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (n > 0) {  	int j;  	name_y = in_name_y;  	height = in_height;  	if (flags_ch [0]) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	for (j = 1; j < n; j++) {  		if (flags_ch [j]) {  			if (max_y < y [j].Max ())  				max_y = y [j].Max ();  			if (min_y > y [j].Min ())  				min_y = y [j].Min ();  		}  	}  	for (j = 0; j < n; j++)  		if (flags_ch [j])  			break;  	if (j == n) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	pow_y = Math.Floor (Math.Log10 (Math.Abs (max_y - min_y)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_y);  	if (pow_y < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_y) <= 15) {  			imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  			imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  			imax = Math.Round (max_y / newdiv' round) * newdiv;  			imin = Math.Round (min_y / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_y / idiv) * idiv;  		imin = Math.Floor (min_y / idiv) * idiv;  	}  	while (imax < max_y)  		imax = imax + idiv;  	while (imin > min_y)  		imin = imin - idiv;  	max_y = imax;  	min_y = imin;  	div_y = max_y - min_y;  	hy = idiv;  	if (max_y > (ny + 2) * hy) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_y)));  		if ((pow_y > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_y = Convert.ToInt32 (Math.Abs (pow_y - pow_max));  		else  			dec_y = Convert.ToInt32 (Math.Abs (pow_y) + Math.Abs (pow_max));  	}  	else  		dec_y = 1;  	if (dec_y == 0)  		dec_y = 1;  	ny = Convert.ToInt32 (div_y / hy);  	if (ny == 1 || ny == 2 || ny == 3) {  		ny = ny * 2;  		hy = hy / 2;  	}  	pry = div_y / (height - 2 * idy);  	ddy = pry * idy;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (n > 0) {  	int j;  	name_y = in_name_y;  	height = in_height;  	if (flags_ch [0]) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	for (j = 1; j < n; j++) {  		if (flags_ch [j]) {  			if (max_y < y [j].Max ())  				max_y = y [j].Max ();  			if (min_y > y [j].Min ())  				min_y = y [j].Min ();  		}  	}  	for (j = 0; j < n; j++)  		if (flags_ch [j])  			break;  	if (j == n) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	pow_y = Math.Floor (Math.Log10 (Math.Abs (max_y - min_y)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_y);  	if (pow_y < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_y) <= 15) {  			imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  			imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  			imax = Math.Round (max_y / newdiv' round) * newdiv;  			imin = Math.Round (min_y / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_y / idiv) * idiv;  		imin = Math.Floor (min_y / idiv) * idiv;  	}  	while (imax < max_y)  		imax = imax + idiv;  	while (imin > min_y)  		imin = imin - idiv;  	max_y = imax;  	min_y = imin;  	div_y = max_y - min_y;  	hy = idiv;  	if (max_y > (ny + 2) * hy) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_y)));  		if ((pow_y > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_y = Convert.ToInt32 (Math.Abs (pow_y - pow_max));  		else  			dec_y = Convert.ToInt32 (Math.Abs (pow_y) + Math.Abs (pow_max));  	}  	else  		dec_y = 1;  	if (dec_y == 0)  		dec_y = 1;  	ny = Convert.ToInt32 (div_y / hy);  	if (ny == 1 || ny == 2 || ny == 3) {  		ny = ny * 2;  		hy = hy / 2;  	}  	pry = div_y / (height - 2 * idy);  	ddy = pry * idy;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (n > 0) {  	int j;  	name_y = in_name_y;  	height = in_height;  	if (flags_ch [0]) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	for (j = 1; j < n; j++) {  		if (flags_ch [j]) {  			if (max_y < y [j].Max ())  				max_y = y [j].Max ();  			if (min_y > y [j].Min ())  				min_y = y [j].Min ();  		}  	}  	for (j = 0; j < n; j++)  		if (flags_ch [j])  			break;  	if (j == n) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	pow_y = Math.Floor (Math.Log10 (Math.Abs (max_y - min_y)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_y);  	if (pow_y < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_y) <= 15) {  			imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  			imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  			imax = Math.Round (max_y / newdiv' round) * newdiv;  			imin = Math.Round (min_y / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_y / idiv) * idiv;  		imin = Math.Floor (min_y / idiv) * idiv;  	}  	while (imax < max_y)  		imax = imax + idiv;  	while (imin > min_y)  		imin = imin - idiv;  	max_y = imax;  	min_y = imin;  	div_y = max_y - min_y;  	hy = idiv;  	if (max_y > (ny + 2) * hy) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_y)));  		if ((pow_y > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_y = Convert.ToInt32 (Math.Abs (pow_y - pow_max));  		else  			dec_y = Convert.ToInt32 (Math.Abs (pow_y) + Math.Abs (pow_max));  	}  	else  		dec_y = 1;  	if (dec_y == 0)  		dec_y = 1;  	ny = Convert.ToInt32 (div_y / hy);  	if (ny == 1 || ny == 2 || ny == 3) {  		ny = ny * 2;  		hy = hy / 2;  	}  	pry = div_y / (height - 2 * idy);  	ddy = pry * idy;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (n > 0) {  	int j;  	name_y = in_name_y;  	height = in_height;  	if (flags_ch [0]) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	for (j = 1; j < n; j++) {  		if (flags_ch [j]) {  			if (max_y < y [j].Max ())  				max_y = y [j].Max ();  			if (min_y > y [j].Min ())  				min_y = y [j].Min ();  		}  	}  	for (j = 0; j < n; j++)  		if (flags_ch [j])  			break;  	if (j == n) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	pow_y = Math.Floor (Math.Log10 (Math.Abs (max_y - min_y)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_y);  	if (pow_y < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_y) <= 15) {  			imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  			imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  			imax = Math.Round (max_y / newdiv' round) * newdiv;  			imin = Math.Round (min_y / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_y / idiv) * idiv;  		imin = Math.Floor (min_y / idiv) * idiv;  	}  	while (imax < max_y)  		imax = imax + idiv;  	while (imin > min_y)  		imin = imin - idiv;  	max_y = imax;  	min_y = imin;  	div_y = max_y - min_y;  	hy = idiv;  	if (max_y > (ny + 2) * hy) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_y)));  		if ((pow_y > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_y = Convert.ToInt32 (Math.Abs (pow_y - pow_max));  		else  			dec_y = Convert.ToInt32 (Math.Abs (pow_y) + Math.Abs (pow_max));  	}  	else  		dec_y = 1;  	if (dec_y == 0)  		dec_y = 1;  	ny = Convert.ToInt32 (div_y / hy);  	if (ny == 1 || ny == 2 || ny == 3) {  		ny = ny * 2;  		hy = hy / 2;  	}  	pry = div_y / (height - 2 * idy);  	ddy = pry * idy;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (n > 0) {  	int j;  	name_y = in_name_y;  	height = in_height;  	if (flags_ch [0]) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	for (j = 1; j < n; j++) {  		if (flags_ch [j]) {  			if (max_y < y [j].Max ())  				max_y = y [j].Max ();  			if (min_y > y [j].Min ())  				min_y = y [j].Min ();  		}  	}  	for (j = 0; j < n; j++)  		if (flags_ch [j])  			break;  	if (j == n) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	pow_y = Math.Floor (Math.Log10 (Math.Abs (max_y - min_y)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_y);  	if (pow_y < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_y) <= 15) {  			imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  			imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  			imax = Math.Round (max_y / newdiv' round) * newdiv;  			imin = Math.Round (min_y / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_y / idiv) * idiv;  		imin = Math.Floor (min_y / idiv) * idiv;  	}  	while (imax < max_y)  		imax = imax + idiv;  	while (imin > min_y)  		imin = imin - idiv;  	max_y = imax;  	min_y = imin;  	div_y = max_y - min_y;  	hy = idiv;  	if (max_y > (ny + 2) * hy) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_y)));  		if ((pow_y > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_y = Convert.ToInt32 (Math.Abs (pow_y - pow_max));  		else  			dec_y = Convert.ToInt32 (Math.Abs (pow_y) + Math.Abs (pow_max));  	}  	else  		dec_y = 1;  	if (dec_y == 0)  		dec_y = 1;  	ny = Convert.ToInt32 (div_y / hy);  	if (ny == 1 || ny == 2 || ny == 3) {  		ny = ny * 2;  		hy = hy / 2;  	}  	pry = div_y / (height - 2 * idy);  	ddy = pry * idy;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (n > 0) {  	int j;  	name_y = in_name_y;  	height = in_height;  	if (flags_ch [0]) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	for (j = 1; j < n; j++) {  		if (flags_ch [j]) {  			if (max_y < y [j].Max ())  				max_y = y [j].Max ();  			if (min_y > y [j].Min ())  				min_y = y [j].Min ();  		}  	}  	for (j = 0; j < n; j++)  		if (flags_ch [j])  			break;  	if (j == n) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	pow_y = Math.Floor (Math.Log10 (Math.Abs (max_y - min_y)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_y);  	if (pow_y < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_y) <= 15) {  			imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  			imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  			imax = Math.Round (max_y / newdiv' round) * newdiv;  			imin = Math.Round (min_y / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_y / idiv) * idiv;  		imin = Math.Floor (min_y / idiv) * idiv;  	}  	while (imax < max_y)  		imax = imax + idiv;  	while (imin > min_y)  		imin = imin - idiv;  	max_y = imax;  	min_y = imin;  	div_y = max_y - min_y;  	hy = idiv;  	if (max_y > (ny + 2) * hy) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_y)));  		if ((pow_y > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_y = Convert.ToInt32 (Math.Abs (pow_y - pow_max));  		else  			dec_y = Convert.ToInt32 (Math.Abs (pow_y) + Math.Abs (pow_max));  	}  	else  		dec_y = 1;  	if (dec_y == 0)  		dec_y = 1;  	ny = Convert.ToInt32 (div_y / hy);  	if (ny == 1 || ny == 2 || ny == 3) {  		ny = ny * 2;  		hy = hy / 2;  	}  	pry = div_y / (height - 2 * idy);  	ddy = pry * idy;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (n > 0) {  	int j;  	name_y = in_name_y;  	height = in_height;  	if (flags_ch [0]) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	for (j = 1; j < n; j++) {  		if (flags_ch [j]) {  			if (max_y < y [j].Max ())  				max_y = y [j].Max ();  			if (min_y > y [j].Min ())  				min_y = y [j].Min ();  		}  	}  	for (j = 0; j < n; j++)  		if (flags_ch [j])  			break;  	if (j == n) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	pow_y = Math.Floor (Math.Log10 (Math.Abs (max_y - min_y)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_y);  	if (pow_y < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_y) <= 15) {  			imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  			imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  			imax = Math.Round (max_y / newdiv' round) * newdiv;  			imin = Math.Round (min_y / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_y / idiv) * idiv;  		imin = Math.Floor (min_y / idiv) * idiv;  	}  	while (imax < max_y)  		imax = imax + idiv;  	while (imin > min_y)  		imin = imin - idiv;  	max_y = imax;  	min_y = imin;  	div_y = max_y - min_y;  	hy = idiv;  	if (max_y > (ny + 2) * hy) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_y)));  		if ((pow_y > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_y = Convert.ToInt32 (Math.Abs (pow_y - pow_max));  		else  			dec_y = Convert.ToInt32 (Math.Abs (pow_y) + Math.Abs (pow_max));  	}  	else  		dec_y = 1;  	if (dec_y == 0)  		dec_y = 1;  	ny = Convert.ToInt32 (div_y / hy);  	if (ny == 1 || ny == 2 || ny == 3) {  		ny = ny * 2;  		hy = hy / 2;  	}  	pry = div_y / (height - 2 * idy);  	ddy = pry * idy;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (n > 0) {  	int j;  	name_y = in_name_y;  	height = in_height;  	if (flags_ch [0]) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	for (j = 1; j < n; j++) {  		if (flags_ch [j]) {  			if (max_y < y [j].Max ())  				max_y = y [j].Max ();  			if (min_y > y [j].Min ())  				min_y = y [j].Min ();  		}  	}  	for (j = 0; j < n; j++)  		if (flags_ch [j])  			break;  	if (j == n) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	pow_y = Math.Floor (Math.Log10 (Math.Abs (max_y - min_y)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_y);  	if (pow_y < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_y) <= 15) {  			imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  			imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  			imax = Math.Round (max_y / newdiv' round) * newdiv;  			imin = Math.Round (min_y / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_y / idiv) * idiv;  		imin = Math.Floor (min_y / idiv) * idiv;  	}  	while (imax < max_y)  		imax = imax + idiv;  	while (imin > min_y)  		imin = imin - idiv;  	max_y = imax;  	min_y = imin;  	div_y = max_y - min_y;  	hy = idiv;  	if (max_y > (ny + 2) * hy) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_y)));  		if ((pow_y > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_y = Convert.ToInt32 (Math.Abs (pow_y - pow_max));  		else  			dec_y = Convert.ToInt32 (Math.Abs (pow_y) + Math.Abs (pow_max));  	}  	else  		dec_y = 1;  	if (dec_y == 0)  		dec_y = 1;  	ny = Convert.ToInt32 (div_y / hy);  	if (ny == 1 || ny == 2 || ny == 3) {  		ny = ny * 2;  		hy = hy / 2;  	}  	pry = div_y / (height - 2 * idy);  	ddy = pry * idy;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (n > 0) {  	int j;  	name_y = in_name_y;  	height = in_height;  	if (flags_ch [0]) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	for (j = 1; j < n; j++) {  		if (flags_ch [j]) {  			if (max_y < y [j].Max ())  				max_y = y [j].Max ();  			if (min_y > y [j].Min ())  				min_y = y [j].Min ();  		}  	}  	for (j = 0; j < n; j++)  		if (flags_ch [j])  			break;  	if (j == n) {  		max_y = y [0].Max ();  		min_y = y [0].Min ();  	}  	pow_y = Math.Floor (Math.Log10 (Math.Abs (max_y - min_y)));  	double imax' imin' idiv;  	idiv = Math.Pow (10' pow_y);  	if (pow_y < 0) {  		int round;  		double newdiv;  		if (Math.Abs (pow_y) <= 15) {  			imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  			imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  		}  		else {  			round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  			newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  			imax = Math.Round (max_y / newdiv' round) * newdiv;  			imin = Math.Round (min_y / newdiv' round) * newdiv;  		}  	}  	else {  		imax = Math.Floor (max_y / idiv) * idiv;  		imin = Math.Floor (min_y / idiv) * idiv;  	}  	while (imax < max_y)  		imax = imax + idiv;  	while (imin > min_y)  		imin = imin - idiv;  	max_y = imax;  	min_y = imin;  	div_y = max_y - min_y;  	hy = idiv;  	if (max_y > (ny + 2) * hy) {  		double pow_max;  		pow_max = Math.Floor (Math.Log10 (Math.Abs (max_y)));  		if ((pow_y > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  			dec_y = Convert.ToInt32 (Math.Abs (pow_y - pow_max));  		else  			dec_y = Convert.ToInt32 (Math.Abs (pow_y) + Math.Abs (pow_max));  	}  	else  		dec_y = 1;  	if (dec_y == 0)  		dec_y = 1;  	ny = Convert.ToInt32 (div_y / hy);  	if (ny == 1 || ny == 2 || ny == 3) {  		ny = ny * 2;  		hy = hy / 2;  	}  	pry = div_y / (height - 2 * idy);  	ddy = pry * idy;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: idiv = Math.Pow (10' pow_y);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (pow_y < 0) {  	int round;  	double newdiv;  	if (Math.Abs (pow_y) <= 15) {  		imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  		imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  	}  	else {  		round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  		newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  		imax = Math.Round (max_y / newdiv' round) * newdiv;  		imin = Math.Round (min_y / newdiv' round) * newdiv;  	}  }  else {  	imax = Math.Floor (max_y / idiv) * idiv;  	imin = Math.Floor (min_y / idiv) * idiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (pow_y < 0) {  	int round;  	double newdiv;  	if (Math.Abs (pow_y) <= 15) {  		imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  		imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  	}  	else {  		round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  		newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  		imax = Math.Round (max_y / newdiv' round) * newdiv;  		imin = Math.Round (min_y / newdiv' round) * newdiv;  	}  }  else {  	imax = Math.Floor (max_y / idiv) * idiv;  	imin = Math.Floor (min_y / idiv) * idiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (pow_y < 0) {  	int round;  	double newdiv;  	if (Math.Abs (pow_y) <= 15) {  		imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  		imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  	}  	else {  		round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  		newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  		imax = Math.Round (max_y / newdiv' round) * newdiv;  		imin = Math.Round (min_y / newdiv' round) * newdiv;  	}  }  else {  	imax = Math.Floor (max_y / idiv) * idiv;  	imin = Math.Floor (min_y / idiv) * idiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (pow_y < 0) {  	int round;  	double newdiv;  	if (Math.Abs (pow_y) <= 15) {  		imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  		imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  	}  	else {  		round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  		newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  		imax = Math.Round (max_y / newdiv' round) * newdiv;  		imin = Math.Round (min_y / newdiv' round) * newdiv;  	}  }  else {  	imax = Math.Floor (max_y / idiv) * idiv;  	imin = Math.Floor (min_y / idiv) * idiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (Math.Abs (pow_y) <= 15) {  	imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  	imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  }  else {  	round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  	newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  	imax = Math.Round (max_y / newdiv' round) * newdiv;  	imin = Math.Round (min_y / newdiv' round) * newdiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (Math.Abs (pow_y) <= 15) {  	imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  	imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  }  else {  	round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  	newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  	imax = Math.Round (max_y / newdiv' round) * newdiv;  	imin = Math.Round (min_y / newdiv' round) * newdiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (Math.Abs (pow_y) <= 15) {  	imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  	imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  }  else {  	round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  	newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  	imax = Math.Round (max_y / newdiv' round) * newdiv;  	imin = Math.Round (min_y / newdiv' round) * newdiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (Math.Abs (pow_y) <= 15) {  	imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  	imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  }  else {  	round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  	newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  	imax = Math.Round (max_y / newdiv' round) * newdiv;  	imin = Math.Round (min_y / newdiv' round) * newdiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (max_y > (ny + 2) * hy) {  	double pow_max;  	pow_max = Math.Floor (Math.Log10 (Math.Abs (max_y)));  	if ((pow_y > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  		dec_y = Convert.ToInt32 (Math.Abs (pow_y - pow_max));  	else  		dec_y = Convert.ToInt32 (Math.Abs (pow_y) + Math.Abs (pow_max));  }  else  	dec_y = 1;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (ny == 1 || ny == 2 || ny == 3) {  	ny = ny * 2;  	hy = hy / 2;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (ny == 1 || ny == 2 || ny == 3) {  	ny = ny * 2;  	hy = hy / 2;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (ny == 1 || ny == 2 || ny == 3) {  	ny = ny * 2;  	hy = hy / 2;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: if (ny == 1 || ny == 2 || ny == 3) {  	ny = ny * 2;  	hy = hy / 2;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: ny = ny * 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: hy = hy / 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y,The following statement contains a magic number: pry = div_y / (height - 2 * idy);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_YH,The following statement contains a magic number: if (n > 0) {  	height = in_height;  	pry = div_y / (height - 2 * idy);  	ddy = pry * idy;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_YH,The following statement contains a magic number: pry = div_y / (height - 2 * idy);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: idiv = Math.Pow (10' pow_y);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: if (pow_y < 0) {  	int round;  	double newdiv;  	if (Math.Abs (pow_y) <= 15) {  		imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  		imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  	}  	else {  		round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  		newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  		imax = Math.Round (max_y / newdiv' round) * newdiv;  		imin = Math.Round (min_y / newdiv' round) * newdiv;  	}  }  else {  	imax = Math.Floor (max_y / idiv) * idiv;  	imin = Math.Floor (min_y / idiv) * idiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: if (pow_y < 0) {  	int round;  	double newdiv;  	if (Math.Abs (pow_y) <= 15) {  		imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  		imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  	}  	else {  		round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  		newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  		imax = Math.Round (max_y / newdiv' round) * newdiv;  		imin = Math.Round (min_y / newdiv' round) * newdiv;  	}  }  else {  	imax = Math.Floor (max_y / idiv) * idiv;  	imin = Math.Floor (min_y / idiv) * idiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: if (pow_y < 0) {  	int round;  	double newdiv;  	if (Math.Abs (pow_y) <= 15) {  		imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  		imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  	}  	else {  		round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  		newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  		imax = Math.Round (max_y / newdiv' round) * newdiv;  		imin = Math.Round (min_y / newdiv' round) * newdiv;  	}  }  else {  	imax = Math.Floor (max_y / idiv) * idiv;  	imin = Math.Floor (min_y / idiv) * idiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: if (pow_y < 0) {  	int round;  	double newdiv;  	if (Math.Abs (pow_y) <= 15) {  		imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  		imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  	}  	else {  		round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  		newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  		imax = Math.Round (max_y / newdiv' round) * newdiv;  		imin = Math.Round (min_y / newdiv' round) * newdiv;  	}  }  else {  	imax = Math.Floor (max_y / idiv) * idiv;  	imin = Math.Floor (min_y / idiv) * idiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: if (Math.Abs (pow_y) <= 15) {  	imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  	imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  }  else {  	round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  	newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  	imax = Math.Round (max_y / newdiv' round) * newdiv;  	imin = Math.Round (min_y / newdiv' round) * newdiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: if (Math.Abs (pow_y) <= 15) {  	imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  	imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  }  else {  	round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  	newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  	imax = Math.Round (max_y / newdiv' round) * newdiv;  	imin = Math.Round (min_y / newdiv' round) * newdiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: if (Math.Abs (pow_y) <= 15) {  	imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  	imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  }  else {  	round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  	newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  	imax = Math.Round (max_y / newdiv' round) * newdiv;  	imin = Math.Round (min_y / newdiv' round) * newdiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: if (Math.Abs (pow_y) <= 15) {  	imax = Math.Round (max_y' Convert.ToInt32 (Math.Abs (pow_y)));  	imin = Math.Round (min_y' Convert.ToInt32 (Math.Abs (pow_y)));  }  else {  	round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  	newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  	imax = Math.Round (max_y / newdiv' round) * newdiv;  	imin = Math.Round (min_y / newdiv' round) * newdiv;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: round = Convert.ToInt32 (Math.Abs (pow_y)) % 15;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: newdiv = Math.Pow (10' Convert.ToInt32 (pow_y) - Convert.ToInt32 (pow_y) % 15);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: if (max_y > (ny + 2) * hy) {  	double pow_max;  	pow_max = Math.Floor (Math.Log10 (Math.Abs (max_y)));  	if ((pow_y > 0 && pow_max > 0) || (pow_x < 0 && pow_max < 0))  		dec_y = Convert.ToInt32 (Math.Abs (pow_y - pow_max));  	else  		dec_y = Convert.ToInt32 (Math.Abs (pow_y) + Math.Abs (pow_max));  }  else  	dec_y = 1;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: if (ny == 1 || ny == 2 || ny == 3) {  	ny = ny * 2;  	hy = hy / 2;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: if (ny == 1 || ny == 2 || ny == 3) {  	ny = ny * 2;  	hy = hy / 2;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: if (ny == 1 || ny == 2 || ny == 3) {  	ny = ny * 2;  	hy = hy / 2;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: if (ny == 1 || ny == 2 || ny == 3) {  	ny = ny * 2;  	hy = hy / 2;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: ny = ny * 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: hy = hy / 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,init_Y_update,The following statement contains a magic number: pry = div_y / (height - 2 * idy);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Init,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Init,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Init,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (n > 0) {  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	// устанавливаем текущий цвет - красный   	Gl.glColor3i (0' 0' 0);  	//отрисовка ограничивающего прямоугольника  	Gl.glBegin (Gl.GL_LINE);  	Gl.glVertex2d (min_x' min_y);  	Gl.glVertex2d (max_x' min_y);  	Gl.glVertex2d (max_x' max_y);  	Gl.glVertex2d (min_x' max_y);  	Gl.glEnd ();  	int i' j;  	double x1' x2' y1' y2;  	double hx5' hy5;  	//чёрточки жирные  	Gl.glLineWidth (1);  	Gl.glBegin (Gl.GL_LINES);  	//ось oy  	hx5 = hx / 5.0;  	hy5 = hy / 5.0;  	//левая часть прямоугольника  	x1 = x2 = min_x;  	double lsx;  	lsx = 11 * prx;  	x1 = x1 - lsx / 2;  	x2 = x2 + lsx / 2;  	Gl.glVertex2d ((x1 + x2) / 2' min_y);  	Gl.glVertex2d ((x1 + x2) / 2' max_y);  	for (j = 0; j < ny + 1; j++) {  		//крупная чёрточка  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (min_x + lsx / 4' y1);  				Gl.glVertex2d (min_x - lsx / 4' y2);  			}  	}  	//правая часть прямоугольника  	x1 = x2 = max_x;  	x2 = x2 - lsx / 2;  	Gl.glVertex2d (x1' min_y);  	Gl.glVertex2d (x1' max_y);  	for (j = 0; j < ny + 1; j++) {  		y2 = y1 = min_y + j * hy;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < ny)  			for (i = 1; i < 5; i++) {  				y2 = y1 = min_y + j * hy + i * hy5;  				Gl.glVertex2d (max_x - lsx / 4' y1);  				Gl.glVertex2d (max_x' y2);  			}  	}  	//ось ox  	//нижняя часть прямоугольника  	double lsy;  	lsy = pry * 11;  	y1 = y2 = min_y;  	y1 = y1 - lsy / 2;  	y2 = y2 + lsy / 2;  	Gl.glVertex2d (min_x' (y1 + y2) / 2);  	Gl.glVertex2d (max_x' (y1 + y2) / 2);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' min_y - lsy / 4);  				Gl.glVertex2d (x2' min_y + lsy / 4);  			}  	}  	//верхняя часть прямоугольника  	y1 = y2 = max_y;  	y2 = y2 - lsy / 2;  	Gl.glVertex2d (min_x' max_y);  	Gl.glVertex2d (max_x' max_y);  	for (j = 0; j < nx + 1; j++) {  		x2 = x1 = min_x + j * hx;  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y2);  		//мелкие чёрточки  		if (j < nx)  			for (i = 1; i < 5; i++) {  				x2 = x1 = min_x + j * hx + i * hx5;  				Gl.glVertex2d (x1' max_y - lsy / 2);  				Gl.glVertex2d (x2' max_y);  			}  	}  	Gl.glEnd ();  	//надписи  	//ось oy  	string value;  	int hmark' lmark;  	hmark = Glut.glutBitmapHeight (Glut.GLUT_BITMAP_HELVETICA_18);  	x1 = min_x;  	for (j = 0; j < ny + 1; j++) {  		//значение  		y1 = min_y + j * hy - 5 * pry;  		value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oy  	//y1 = min_y + j * hy - 5 * pry;  	//value = name_y;  	//lmark = Glut.glutBitmapLength(Glut.GLUT_BITMAP_HELVETICA_18' value);  	//Gl.glRasterPos2d(x1 - lmark * prx - 6 * prx' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelY ();  	LoadTexture (labelY);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MAG_FILTER' Gl.GL_LINEAR);  	Gl.glTexParameteri (Gl.GL_TEXTURE_2D' Gl.GL_TEXTURE_MIN_FILTER' Gl.GL_LINEAR);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y + j * hy - hy + 31 * pry;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - ddx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//ось ox  	Gl.glColor3f (0' 0' 0);  	y1 = min_y - hmark * pry;  	for (j = 0; j < nx + 1; j++) {  		//значение  		value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  		lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  		x1 = min_x + j * hx - 0.5 * lmark * prx;  		Gl.glRasterPos2d (x1' y1);  		// Set the position for the string (text)  		Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  	}  	//подпись оси oх  	//creatLabelX();  	//value = name_x;  	//y1 = min_y - (hmark + Glut.glutBitmapHeight(Glut.GLUT_BITMAP_TIMES_ROMAN_24)) * pry;  	//x1 = (min_x+max_x)/2 - 7.5 * value.Count() * prx;  	//Gl.glRasterPos2d(x1' y1);    // Set the position for the string (text)  	//Glut.glutBitmapString(Glut.GLUT_BITMAP_TIMES_ROMAN_24' value);  	creatLabelX ();  	LoadTexture (labelX);  	Gl.glEnable (Gl.GL_TEXTURE_2D);  	y1 = min_y - hmark * pry - 33 * pry;  	x1 = (min_x + max_x) / 2;  	Gl.glColor3f (255' 255' 255);  	Gl.glBegin (Gl.GL_QUADS);  	Gl.glTexCoord2d (1' 0);  	Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  	Gl.glTexCoord2d (1' 1);  	Gl.glVertex2d (x1 + 64 * prx' y1);  	Gl.glTexCoord2d (0' 1);  	Gl.glVertex2d (x1 - 55 * prx' y1);  	Gl.glTexCoord2d (0' 0);  	Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  	Gl.glEnd ();  	Gl.glDisable (Gl.GL_TEXTURE_2D);  	//labelX.Save("lx.bmp");  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: hx5 = hx / 5.0;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: hy5 = hy / 5.0;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: lsx = 11 * prx;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: x1 = x1 - lsx / 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: x2 = x2 + lsx / 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d ((x1 + x2) / 2' min_y);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d ((x1 + x2) / 2' max_y);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (j = 0; j < ny + 1; j++) {  	//крупная чёрточка  	y2 = y1 = min_y + j * hy;  	Gl.glVertex2d (x1' y1);  	Gl.glVertex2d (x2' y2);  	//мелкие чёрточки  	if (j < ny)  		for (i = 1; i < 5; i++) {  			y2 = y1 = min_y + j * hy + i * hy5;  			Gl.glVertex2d (min_x + lsx / 4' y1);  			Gl.glVertex2d (min_x - lsx / 4' y2);  		}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (j = 0; j < ny + 1; j++) {  	//крупная чёрточка  	y2 = y1 = min_y + j * hy;  	Gl.glVertex2d (x1' y1);  	Gl.glVertex2d (x2' y2);  	//мелкие чёрточки  	if (j < ny)  		for (i = 1; i < 5; i++) {  			y2 = y1 = min_y + j * hy + i * hy5;  			Gl.glVertex2d (min_x + lsx / 4' y1);  			Gl.glVertex2d (min_x - lsx / 4' y2);  		}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (j = 0; j < ny + 1; j++) {  	//крупная чёрточка  	y2 = y1 = min_y + j * hy;  	Gl.glVertex2d (x1' y1);  	Gl.glVertex2d (x2' y2);  	//мелкие чёрточки  	if (j < ny)  		for (i = 1; i < 5; i++) {  			y2 = y1 = min_y + j * hy + i * hy5;  			Gl.glVertex2d (min_x + lsx / 4' y1);  			Gl.glVertex2d (min_x - lsx / 4' y2);  		}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (j < ny)  	for (i = 1; i < 5; i++) {  		y2 = y1 = min_y + j * hy + i * hy5;  		Gl.glVertex2d (min_x + lsx / 4' y1);  		Gl.glVertex2d (min_x - lsx / 4' y2);  	}  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (j < ny)  	for (i = 1; i < 5; i++) {  		y2 = y1 = min_y + j * hy + i * hy5;  		Gl.glVertex2d (min_x + lsx / 4' y1);  		Gl.glVertex2d (min_x - lsx / 4' y2);  	}  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (j < ny)  	for (i = 1; i < 5; i++) {  		y2 = y1 = min_y + j * hy + i * hy5;  		Gl.glVertex2d (min_x + lsx / 4' y1);  		Gl.glVertex2d (min_x - lsx / 4' y2);  	}  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (i = 1; i < 5; i++) {  	y2 = y1 = min_y + j * hy + i * hy5;  	Gl.glVertex2d (min_x + lsx / 4' y1);  	Gl.glVertex2d (min_x - lsx / 4' y2);  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (i = 1; i < 5; i++) {  	y2 = y1 = min_y + j * hy + i * hy5;  	Gl.glVertex2d (min_x + lsx / 4' y1);  	Gl.glVertex2d (min_x - lsx / 4' y2);  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (i = 1; i < 5; i++) {  	y2 = y1 = min_y + j * hy + i * hy5;  	Gl.glVertex2d (min_x + lsx / 4' y1);  	Gl.glVertex2d (min_x - lsx / 4' y2);  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (min_x + lsx / 4' y1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (min_x - lsx / 4' y2);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: x2 = x2 - lsx / 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (j = 0; j < ny + 1; j++) {  	y2 = y1 = min_y + j * hy;  	Gl.glVertex2d (x1' y1);  	Gl.glVertex2d (x2' y2);  	//мелкие чёрточки  	if (j < ny)  		for (i = 1; i < 5; i++) {  			y2 = y1 = min_y + j * hy + i * hy5;  			Gl.glVertex2d (max_x - lsx / 4' y1);  			Gl.glVertex2d (max_x' y2);  		}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (j = 0; j < ny + 1; j++) {  	y2 = y1 = min_y + j * hy;  	Gl.glVertex2d (x1' y1);  	Gl.glVertex2d (x2' y2);  	//мелкие чёрточки  	if (j < ny)  		for (i = 1; i < 5; i++) {  			y2 = y1 = min_y + j * hy + i * hy5;  			Gl.glVertex2d (max_x - lsx / 4' y1);  			Gl.glVertex2d (max_x' y2);  		}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (j < ny)  	for (i = 1; i < 5; i++) {  		y2 = y1 = min_y + j * hy + i * hy5;  		Gl.glVertex2d (max_x - lsx / 4' y1);  		Gl.glVertex2d (max_x' y2);  	}  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (j < ny)  	for (i = 1; i < 5; i++) {  		y2 = y1 = min_y + j * hy + i * hy5;  		Gl.glVertex2d (max_x - lsx / 4' y1);  		Gl.glVertex2d (max_x' y2);  	}  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (i = 1; i < 5; i++) {  	y2 = y1 = min_y + j * hy + i * hy5;  	Gl.glVertex2d (max_x - lsx / 4' y1);  	Gl.glVertex2d (max_x' y2);  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (i = 1; i < 5; i++) {  	y2 = y1 = min_y + j * hy + i * hy5;  	Gl.glVertex2d (max_x - lsx / 4' y1);  	Gl.glVertex2d (max_x' y2);  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (max_x - lsx / 4' y1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: lsy = pry * 11;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: y1 = y1 - lsy / 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: y2 = y2 + lsy / 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (min_x' (y1 + y2) / 2);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (max_x' (y1 + y2) / 2);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (j = 0; j < nx + 1; j++) {  	x2 = x1 = min_x + j * hx;  	Gl.glVertex2d (x1' y1);  	Gl.glVertex2d (x2' y2);  	//мелкие чёрточки  	if (j < nx)  		for (i = 1; i < 5; i++) {  			x2 = x1 = min_x + j * hx + i * hx5;  			Gl.glVertex2d (x1' min_y - lsy / 4);  			Gl.glVertex2d (x2' min_y + lsy / 4);  		}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (j = 0; j < nx + 1; j++) {  	x2 = x1 = min_x + j * hx;  	Gl.glVertex2d (x1' y1);  	Gl.glVertex2d (x2' y2);  	//мелкие чёрточки  	if (j < nx)  		for (i = 1; i < 5; i++) {  			x2 = x1 = min_x + j * hx + i * hx5;  			Gl.glVertex2d (x1' min_y - lsy / 4);  			Gl.glVertex2d (x2' min_y + lsy / 4);  		}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (j = 0; j < nx + 1; j++) {  	x2 = x1 = min_x + j * hx;  	Gl.glVertex2d (x1' y1);  	Gl.glVertex2d (x2' y2);  	//мелкие чёрточки  	if (j < nx)  		for (i = 1; i < 5; i++) {  			x2 = x1 = min_x + j * hx + i * hx5;  			Gl.glVertex2d (x1' min_y - lsy / 4);  			Gl.glVertex2d (x2' min_y + lsy / 4);  		}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (j < nx)  	for (i = 1; i < 5; i++) {  		x2 = x1 = min_x + j * hx + i * hx5;  		Gl.glVertex2d (x1' min_y - lsy / 4);  		Gl.glVertex2d (x2' min_y + lsy / 4);  	}  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (j < nx)  	for (i = 1; i < 5; i++) {  		x2 = x1 = min_x + j * hx + i * hx5;  		Gl.glVertex2d (x1' min_y - lsy / 4);  		Gl.glVertex2d (x2' min_y + lsy / 4);  	}  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (j < nx)  	for (i = 1; i < 5; i++) {  		x2 = x1 = min_x + j * hx + i * hx5;  		Gl.glVertex2d (x1' min_y - lsy / 4);  		Gl.glVertex2d (x2' min_y + lsy / 4);  	}  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (i = 1; i < 5; i++) {  	x2 = x1 = min_x + j * hx + i * hx5;  	Gl.glVertex2d (x1' min_y - lsy / 4);  	Gl.glVertex2d (x2' min_y + lsy / 4);  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (i = 1; i < 5; i++) {  	x2 = x1 = min_x + j * hx + i * hx5;  	Gl.glVertex2d (x1' min_y - lsy / 4);  	Gl.glVertex2d (x2' min_y + lsy / 4);  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (i = 1; i < 5; i++) {  	x2 = x1 = min_x + j * hx + i * hx5;  	Gl.glVertex2d (x1' min_y - lsy / 4);  	Gl.glVertex2d (x2' min_y + lsy / 4);  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (x1' min_y - lsy / 4);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (x2' min_y + lsy / 4);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: y2 = y2 - lsy / 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (j = 0; j < nx + 1; j++) {  	x2 = x1 = min_x + j * hx;  	Gl.glVertex2d (x1' y1);  	Gl.glVertex2d (x2' y2);  	//мелкие чёрточки  	if (j < nx)  		for (i = 1; i < 5; i++) {  			x2 = x1 = min_x + j * hx + i * hx5;  			Gl.glVertex2d (x1' max_y - lsy / 2);  			Gl.glVertex2d (x2' max_y);  		}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (j = 0; j < nx + 1; j++) {  	x2 = x1 = min_x + j * hx;  	Gl.glVertex2d (x1' y1);  	Gl.glVertex2d (x2' y2);  	//мелкие чёрточки  	if (j < nx)  		for (i = 1; i < 5; i++) {  			x2 = x1 = min_x + j * hx + i * hx5;  			Gl.glVertex2d (x1' max_y - lsy / 2);  			Gl.glVertex2d (x2' max_y);  		}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (j < nx)  	for (i = 1; i < 5; i++) {  		x2 = x1 = min_x + j * hx + i * hx5;  		Gl.glVertex2d (x1' max_y - lsy / 2);  		Gl.glVertex2d (x2' max_y);  	}  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: if (j < nx)  	for (i = 1; i < 5; i++) {  		x2 = x1 = min_x + j * hx + i * hx5;  		Gl.glVertex2d (x1' max_y - lsy / 2);  		Gl.glVertex2d (x2' max_y);  	}  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (i = 1; i < 5; i++) {  	x2 = x1 = min_x + j * hx + i * hx5;  	Gl.glVertex2d (x1' max_y - lsy / 2);  	Gl.glVertex2d (x2' max_y);  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (i = 1; i < 5; i++) {  	x2 = x1 = min_x + j * hx + i * hx5;  	Gl.glVertex2d (x1' max_y - lsy / 2);  	Gl.glVertex2d (x2' max_y);  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (x1' max_y - lsy / 2);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (j = 0; j < ny + 1; j++) {  	//значение  	y1 = min_y + j * hy - 5 * pry;  	value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  	lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  	Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  	// Set the position for the string (text)  	Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (j = 0; j < ny + 1; j++) {  	//значение  	y1 = min_y + j * hy - 5 * pry;  	value = (Math.Round ((min_y + j * hy)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  	lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  	Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  	// Set the position for the string (text)  	Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: y1 = min_y + j * hy - 5 * pry;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glRasterPos2d (x1 - lmark * prx - 6 * prx' y1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: y1 = min_y + j * hy - hy + 31 * pry;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glColor3f (255' 255' 255);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glColor3f (255' 255' 255);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glColor3f (255' 255' 255);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (x1 - ddx + 128 * prx' y1 + 32 * pry);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (x1 - ddx + 128 * prx' y1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (x1 - ddx' y1 + 32 * pry);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: for (j = 0; j < nx + 1; j++) {  	//значение  	value = (Math.Round ((min_x + j * hx)' Convert.ToInt32 (Math.Abs (pow_x) + 1))).ToString ();  	lmark = Glut.glutBitmapLength (Glut.GLUT_BITMAP_HELVETICA_18' value);  	x1 = min_x + j * hx - 0.5 * lmark * prx;  	Gl.glRasterPos2d (x1' y1);  	// Set the position for the string (text)  	Glut.glutBitmapString (Glut.GLUT_BITMAP_HELVETICA_18' value);  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: x1 = min_x + j * hx - 0.5 * lmark * prx;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: y1 = min_y - hmark * pry - 33 * pry;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: x1 = (min_x + max_x) / 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glColor3f (255' 255' 255);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glColor3f (255' 255' 255);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glColor3f (255' 255' 255);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (x1 + 64 * prx' y1 + 31 * pry);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (x1 + 64 * prx' y1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (x1 - 55 * prx' y1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawSystem,The following statement contains a magic number: Gl.glVertex2d (x1 - 55 * prx' y1 + 31 * pry);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawFunc,The following statement contains a magic number: if (n > 0) {  	int i' j;  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	bool flag = false;  	for (j = 0; j < n; j++) {  		if (flags_ch [j]) {  			// устанавливаем текущий цвет   			Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  			//Gl.glColor3i(0' 100' 0);  			// активируем режим рисования линий' на основе   			// последовательного соединения всех вершин в отрезки   			Gl.glBegin (Gl.GL_LINE_STRIP);  			// первая вершина будет находиться в начале координат   			for (i = 0; i < m [j] - 1; i++) {  				if (x [i] >= max_x) {  					flag = true;  					break;  				}  				if (x [i] >= min_x) {  					Gl.glVertex2d (x [i]' y [j] [i]);  					Gl.glVertex2d (x [i + 1]' y [j] [i + 1]);  				}  			}  			// завершаем режим рисования   			Gl.glEnd ();  			if (j == n - 1 && flag)  				break;  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawFunc,The following statement contains a magic number: for (j = 0; j < n; j++) {  	if (flags_ch [j]) {  		// устанавливаем текущий цвет   		Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  		//Gl.glColor3i(0' 100' 0);  		// активируем режим рисования линий' на основе   		// последовательного соединения всех вершин в отрезки   		Gl.glBegin (Gl.GL_LINE_STRIP);  		// первая вершина будет находиться в начале координат   		for (i = 0; i < m [j] - 1; i++) {  			if (x [i] >= max_x) {  				flag = true;  				break;  			}  			if (x [i] >= min_x) {  				Gl.glVertex2d (x [i]' y [j] [i]);  				Gl.glVertex2d (x [i + 1]' y [j] [i + 1]);  			}  		}  		// завершаем режим рисования   		Gl.glEnd ();  		if (j == n - 1 && flag)  			break;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawFunc,The following statement contains a magic number: if (flags_ch [j]) {  	// устанавливаем текущий цвет   	Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  	//Gl.glColor3i(0' 100' 0);  	// активируем режим рисования линий' на основе   	// последовательного соединения всех вершин в отрезки   	Gl.glBegin (Gl.GL_LINE_STRIP);  	// первая вершина будет находиться в начале координат   	for (i = 0; i < m [j] - 1; i++) {  		if (x [i] >= max_x) {  			flag = true;  			break;  		}  		if (x [i] >= min_x) {  			Gl.glVertex2d (x [i]' y [j] [i]);  			Gl.glVertex2d (x [i + 1]' y [j] [i + 1]);  		}  	}  	// завершаем режим рисования   	Gl.glEnd ();  	if (j == n - 1 && flag)  		break;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawFunc,The following statement contains a magic number: Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: if (vinf != null && vinf.Length > 0) {  	int i' j;  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	bool flag = false;  	for (j = 0; j < n; j++) {  		if (flags_ch [j]) {  			// устанавливаем текущий цвет   			Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  			//Gl.glColor3i(0' 100' 0);  			// активируем режим рисования линий' на основе   			// последовательного соединения всех вершин в отрезки   			// первая вершина будет находиться в начале координат   			for (i = 0; i < vinf.Length; i++) {  				double x1' x2' y1' y2;  				x1 = tinf [i] - 3 * prx;  				x2 = tinf [i] + 3 * prx;  				y1 = vinf [i] - 3 * pry;  				y2 = vinf [i] + 3 * pry;  				if (x1 >= min_x && x2 <= max_x) {  					Gl.glBegin (Gl.GL_LINE_LOOP);  					Gl.glVertex2d (x1' y1);  					Gl.glVertex2d (x2' y1);  					Gl.glVertex2d (x2' y2);  					Gl.glVertex2d (x1' y2);  					// завершаем режим рисования   					Gl.glEnd ();  				}  			}  			if (j == n - 1 && flag)  				break;  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: if (vinf != null && vinf.Length > 0) {  	int i' j;  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	bool flag = false;  	for (j = 0; j < n; j++) {  		if (flags_ch [j]) {  			// устанавливаем текущий цвет   			Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  			//Gl.glColor3i(0' 100' 0);  			// активируем режим рисования линий' на основе   			// последовательного соединения всех вершин в отрезки   			// первая вершина будет находиться в начале координат   			for (i = 0; i < vinf.Length; i++) {  				double x1' x2' y1' y2;  				x1 = tinf [i] - 3 * prx;  				x2 = tinf [i] + 3 * prx;  				y1 = vinf [i] - 3 * pry;  				y2 = vinf [i] + 3 * pry;  				if (x1 >= min_x && x2 <= max_x) {  					Gl.glBegin (Gl.GL_LINE_LOOP);  					Gl.glVertex2d (x1' y1);  					Gl.glVertex2d (x2' y1);  					Gl.glVertex2d (x2' y2);  					Gl.glVertex2d (x1' y2);  					// завершаем режим рисования   					Gl.glEnd ();  				}  			}  			if (j == n - 1 && flag)  				break;  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: if (vinf != null && vinf.Length > 0) {  	int i' j;  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	bool flag = false;  	for (j = 0; j < n; j++) {  		if (flags_ch [j]) {  			// устанавливаем текущий цвет   			Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  			//Gl.glColor3i(0' 100' 0);  			// активируем режим рисования линий' на основе   			// последовательного соединения всех вершин в отрезки   			// первая вершина будет находиться в начале координат   			for (i = 0; i < vinf.Length; i++) {  				double x1' x2' y1' y2;  				x1 = tinf [i] - 3 * prx;  				x2 = tinf [i] + 3 * prx;  				y1 = vinf [i] - 3 * pry;  				y2 = vinf [i] + 3 * pry;  				if (x1 >= min_x && x2 <= max_x) {  					Gl.glBegin (Gl.GL_LINE_LOOP);  					Gl.glVertex2d (x1' y1);  					Gl.glVertex2d (x2' y1);  					Gl.glVertex2d (x2' y2);  					Gl.glVertex2d (x1' y2);  					// завершаем режим рисования   					Gl.glEnd ();  				}  			}  			if (j == n - 1 && flag)  				break;  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: if (vinf != null && vinf.Length > 0) {  	int i' j;  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	bool flag = false;  	for (j = 0; j < n; j++) {  		if (flags_ch [j]) {  			// устанавливаем текущий цвет   			Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  			//Gl.glColor3i(0' 100' 0);  			// активируем режим рисования линий' на основе   			// последовательного соединения всех вершин в отрезки   			// первая вершина будет находиться в начале координат   			for (i = 0; i < vinf.Length; i++) {  				double x1' x2' y1' y2;  				x1 = tinf [i] - 3 * prx;  				x2 = tinf [i] + 3 * prx;  				y1 = vinf [i] - 3 * pry;  				y2 = vinf [i] + 3 * pry;  				if (x1 >= min_x && x2 <= max_x) {  					Gl.glBegin (Gl.GL_LINE_LOOP);  					Gl.glVertex2d (x1' y1);  					Gl.glVertex2d (x2' y1);  					Gl.glVertex2d (x2' y2);  					Gl.glVertex2d (x1' y2);  					// завершаем режим рисования   					Gl.glEnd ();  				}  			}  			if (j == n - 1 && flag)  				break;  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: if (vinf != null && vinf.Length > 0) {  	int i' j;  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	bool flag = false;  	for (j = 0; j < n; j++) {  		if (flags_ch [j]) {  			// устанавливаем текущий цвет   			Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  			//Gl.glColor3i(0' 100' 0);  			// активируем режим рисования линий' на основе   			// последовательного соединения всех вершин в отрезки   			// первая вершина будет находиться в начале координат   			for (i = 0; i < vinf.Length; i++) {  				double x1' x2' y1' y2;  				x1 = tinf [i] - 3 * prx;  				x2 = tinf [i] + 3 * prx;  				y1 = vinf [i] - 3 * pry;  				y2 = vinf [i] + 3 * pry;  				if (x1 >= min_x && x2 <= max_x) {  					Gl.glBegin (Gl.GL_LINE_LOOP);  					Gl.glVertex2d (x1' y1);  					Gl.glVertex2d (x2' y1);  					Gl.glVertex2d (x2' y2);  					Gl.glVertex2d (x1' y2);  					// завершаем режим рисования   					Gl.glEnd ();  				}  			}  			if (j == n - 1 && flag)  				break;  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: for (j = 0; j < n; j++) {  	if (flags_ch [j]) {  		// устанавливаем текущий цвет   		Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  		//Gl.glColor3i(0' 100' 0);  		// активируем режим рисования линий' на основе   		// последовательного соединения всех вершин в отрезки   		// первая вершина будет находиться в начале координат   		for (i = 0; i < vinf.Length; i++) {  			double x1' x2' y1' y2;  			x1 = tinf [i] - 3 * prx;  			x2 = tinf [i] + 3 * prx;  			y1 = vinf [i] - 3 * pry;  			y2 = vinf [i] + 3 * pry;  			if (x1 >= min_x && x2 <= max_x) {  				Gl.glBegin (Gl.GL_LINE_LOOP);  				Gl.glVertex2d (x1' y1);  				Gl.glVertex2d (x2' y1);  				Gl.glVertex2d (x2' y2);  				Gl.glVertex2d (x1' y2);  				// завершаем режим рисования   				Gl.glEnd ();  			}  		}  		if (j == n - 1 && flag)  			break;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: for (j = 0; j < n; j++) {  	if (flags_ch [j]) {  		// устанавливаем текущий цвет   		Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  		//Gl.glColor3i(0' 100' 0);  		// активируем режим рисования линий' на основе   		// последовательного соединения всех вершин в отрезки   		// первая вершина будет находиться в начале координат   		for (i = 0; i < vinf.Length; i++) {  			double x1' x2' y1' y2;  			x1 = tinf [i] - 3 * prx;  			x2 = tinf [i] + 3 * prx;  			y1 = vinf [i] - 3 * pry;  			y2 = vinf [i] + 3 * pry;  			if (x1 >= min_x && x2 <= max_x) {  				Gl.glBegin (Gl.GL_LINE_LOOP);  				Gl.glVertex2d (x1' y1);  				Gl.glVertex2d (x2' y1);  				Gl.glVertex2d (x2' y2);  				Gl.glVertex2d (x1' y2);  				// завершаем режим рисования   				Gl.glEnd ();  			}  		}  		if (j == n - 1 && flag)  			break;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: for (j = 0; j < n; j++) {  	if (flags_ch [j]) {  		// устанавливаем текущий цвет   		Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  		//Gl.glColor3i(0' 100' 0);  		// активируем режим рисования линий' на основе   		// последовательного соединения всех вершин в отрезки   		// первая вершина будет находиться в начале координат   		for (i = 0; i < vinf.Length; i++) {  			double x1' x2' y1' y2;  			x1 = tinf [i] - 3 * prx;  			x2 = tinf [i] + 3 * prx;  			y1 = vinf [i] - 3 * pry;  			y2 = vinf [i] + 3 * pry;  			if (x1 >= min_x && x2 <= max_x) {  				Gl.glBegin (Gl.GL_LINE_LOOP);  				Gl.glVertex2d (x1' y1);  				Gl.glVertex2d (x2' y1);  				Gl.glVertex2d (x2' y2);  				Gl.glVertex2d (x1' y2);  				// завершаем режим рисования   				Gl.glEnd ();  			}  		}  		if (j == n - 1 && flag)  			break;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: for (j = 0; j < n; j++) {  	if (flags_ch [j]) {  		// устанавливаем текущий цвет   		Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  		//Gl.glColor3i(0' 100' 0);  		// активируем режим рисования линий' на основе   		// последовательного соединения всех вершин в отрезки   		// первая вершина будет находиться в начале координат   		for (i = 0; i < vinf.Length; i++) {  			double x1' x2' y1' y2;  			x1 = tinf [i] - 3 * prx;  			x2 = tinf [i] + 3 * prx;  			y1 = vinf [i] - 3 * pry;  			y2 = vinf [i] + 3 * pry;  			if (x1 >= min_x && x2 <= max_x) {  				Gl.glBegin (Gl.GL_LINE_LOOP);  				Gl.glVertex2d (x1' y1);  				Gl.glVertex2d (x2' y1);  				Gl.glVertex2d (x2' y2);  				Gl.glVertex2d (x1' y2);  				// завершаем режим рисования   				Gl.glEnd ();  			}  		}  		if (j == n - 1 && flag)  			break;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: for (j = 0; j < n; j++) {  	if (flags_ch [j]) {  		// устанавливаем текущий цвет   		Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  		//Gl.glColor3i(0' 100' 0);  		// активируем режим рисования линий' на основе   		// последовательного соединения всех вершин в отрезки   		// первая вершина будет находиться в начале координат   		for (i = 0; i < vinf.Length; i++) {  			double x1' x2' y1' y2;  			x1 = tinf [i] - 3 * prx;  			x2 = tinf [i] + 3 * prx;  			y1 = vinf [i] - 3 * pry;  			y2 = vinf [i] + 3 * pry;  			if (x1 >= min_x && x2 <= max_x) {  				Gl.glBegin (Gl.GL_LINE_LOOP);  				Gl.glVertex2d (x1' y1);  				Gl.glVertex2d (x2' y1);  				Gl.glVertex2d (x2' y2);  				Gl.glVertex2d (x1' y2);  				// завершаем режим рисования   				Gl.glEnd ();  			}  		}  		if (j == n - 1 && flag)  			break;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: if (flags_ch [j]) {  	// устанавливаем текущий цвет   	Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  	//Gl.glColor3i(0' 100' 0);  	// активируем режим рисования линий' на основе   	// последовательного соединения всех вершин в отрезки   	// первая вершина будет находиться в начале координат   	for (i = 0; i < vinf.Length; i++) {  		double x1' x2' y1' y2;  		x1 = tinf [i] - 3 * prx;  		x2 = tinf [i] + 3 * prx;  		y1 = vinf [i] - 3 * pry;  		y2 = vinf [i] + 3 * pry;  		if (x1 >= min_x && x2 <= max_x) {  			Gl.glBegin (Gl.GL_LINE_LOOP);  			Gl.glVertex2d (x1' y1);  			Gl.glVertex2d (x2' y1);  			Gl.glVertex2d (x2' y2);  			Gl.glVertex2d (x1' y2);  			// завершаем режим рисования   			Gl.glEnd ();  		}  	}  	if (j == n - 1 && flag)  		break;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: if (flags_ch [j]) {  	// устанавливаем текущий цвет   	Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  	//Gl.glColor3i(0' 100' 0);  	// активируем режим рисования линий' на основе   	// последовательного соединения всех вершин в отрезки   	// первая вершина будет находиться в начале координат   	for (i = 0; i < vinf.Length; i++) {  		double x1' x2' y1' y2;  		x1 = tinf [i] - 3 * prx;  		x2 = tinf [i] + 3 * prx;  		y1 = vinf [i] - 3 * pry;  		y2 = vinf [i] + 3 * pry;  		if (x1 >= min_x && x2 <= max_x) {  			Gl.glBegin (Gl.GL_LINE_LOOP);  			Gl.glVertex2d (x1' y1);  			Gl.glVertex2d (x2' y1);  			Gl.glVertex2d (x2' y2);  			Gl.glVertex2d (x1' y2);  			// завершаем режим рисования   			Gl.glEnd ();  		}  	}  	if (j == n - 1 && flag)  		break;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: if (flags_ch [j]) {  	// устанавливаем текущий цвет   	Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  	//Gl.glColor3i(0' 100' 0);  	// активируем режим рисования линий' на основе   	// последовательного соединения всех вершин в отрезки   	// первая вершина будет находиться в начале координат   	for (i = 0; i < vinf.Length; i++) {  		double x1' x2' y1' y2;  		x1 = tinf [i] - 3 * prx;  		x2 = tinf [i] + 3 * prx;  		y1 = vinf [i] - 3 * pry;  		y2 = vinf [i] + 3 * pry;  		if (x1 >= min_x && x2 <= max_x) {  			Gl.glBegin (Gl.GL_LINE_LOOP);  			Gl.glVertex2d (x1' y1);  			Gl.glVertex2d (x2' y1);  			Gl.glVertex2d (x2' y2);  			Gl.glVertex2d (x1' y2);  			// завершаем режим рисования   			Gl.glEnd ();  		}  	}  	if (j == n - 1 && flag)  		break;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: if (flags_ch [j]) {  	// устанавливаем текущий цвет   	Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  	//Gl.glColor3i(0' 100' 0);  	// активируем режим рисования линий' на основе   	// последовательного соединения всех вершин в отрезки   	// первая вершина будет находиться в начале координат   	for (i = 0; i < vinf.Length; i++) {  		double x1' x2' y1' y2;  		x1 = tinf [i] - 3 * prx;  		x2 = tinf [i] + 3 * prx;  		y1 = vinf [i] - 3 * pry;  		y2 = vinf [i] + 3 * pry;  		if (x1 >= min_x && x2 <= max_x) {  			Gl.glBegin (Gl.GL_LINE_LOOP);  			Gl.glVertex2d (x1' y1);  			Gl.glVertex2d (x2' y1);  			Gl.glVertex2d (x2' y2);  			Gl.glVertex2d (x1' y2);  			// завершаем режим рисования   			Gl.glEnd ();  		}  	}  	if (j == n - 1 && flag)  		break;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: if (flags_ch [j]) {  	// устанавливаем текущий цвет   	Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  	//Gl.glColor3i(0' 100' 0);  	// активируем режим рисования линий' на основе   	// последовательного соединения всех вершин в отрезки   	// первая вершина будет находиться в начале координат   	for (i = 0; i < vinf.Length; i++) {  		double x1' x2' y1' y2;  		x1 = tinf [i] - 3 * prx;  		x2 = tinf [i] + 3 * prx;  		y1 = vinf [i] - 3 * pry;  		y2 = vinf [i] + 3 * pry;  		if (x1 >= min_x && x2 <= max_x) {  			Gl.glBegin (Gl.GL_LINE_LOOP);  			Gl.glVertex2d (x1' y1);  			Gl.glVertex2d (x2' y1);  			Gl.glVertex2d (x2' y2);  			Gl.glVertex2d (x1' y2);  			// завершаем режим рисования   			Gl.glEnd ();  		}  	}  	if (j == n - 1 && flag)  		break;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: Gl.glColor3f (colors_func [j] [0]' colors_func [j] [1]' colors_func [j] [2]);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: for (i = 0; i < vinf.Length; i++) {  	double x1' x2' y1' y2;  	x1 = tinf [i] - 3 * prx;  	x2 = tinf [i] + 3 * prx;  	y1 = vinf [i] - 3 * pry;  	y2 = vinf [i] + 3 * pry;  	if (x1 >= min_x && x2 <= max_x) {  		Gl.glBegin (Gl.GL_LINE_LOOP);  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y1);  		Gl.glVertex2d (x2' y2);  		Gl.glVertex2d (x1' y2);  		// завершаем режим рисования   		Gl.glEnd ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: for (i = 0; i < vinf.Length; i++) {  	double x1' x2' y1' y2;  	x1 = tinf [i] - 3 * prx;  	x2 = tinf [i] + 3 * prx;  	y1 = vinf [i] - 3 * pry;  	y2 = vinf [i] + 3 * pry;  	if (x1 >= min_x && x2 <= max_x) {  		Gl.glBegin (Gl.GL_LINE_LOOP);  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y1);  		Gl.glVertex2d (x2' y2);  		Gl.glVertex2d (x1' y2);  		// завершаем режим рисования   		Gl.glEnd ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: for (i = 0; i < vinf.Length; i++) {  	double x1' x2' y1' y2;  	x1 = tinf [i] - 3 * prx;  	x2 = tinf [i] + 3 * prx;  	y1 = vinf [i] - 3 * pry;  	y2 = vinf [i] + 3 * pry;  	if (x1 >= min_x && x2 <= max_x) {  		Gl.glBegin (Gl.GL_LINE_LOOP);  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y1);  		Gl.glVertex2d (x2' y2);  		Gl.glVertex2d (x1' y2);  		// завершаем режим рисования   		Gl.glEnd ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: for (i = 0; i < vinf.Length; i++) {  	double x1' x2' y1' y2;  	x1 = tinf [i] - 3 * prx;  	x2 = tinf [i] + 3 * prx;  	y1 = vinf [i] - 3 * pry;  	y2 = vinf [i] + 3 * pry;  	if (x1 >= min_x && x2 <= max_x) {  		Gl.glBegin (Gl.GL_LINE_LOOP);  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y1);  		Gl.glVertex2d (x2' y2);  		Gl.glVertex2d (x1' y2);  		// завершаем режим рисования   		Gl.glEnd ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: x1 = tinf [i] - 3 * prx;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: x2 = tinf [i] + 3 * prx;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: y1 = vinf [i] - 3 * pry;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: y2 = vinf [i] + 3 * pry;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEvents,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (vinf != null && vinf.Length > 0) {  	int i' j;  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	bool flag = false;  	for (j = 0; j < n; j++) {  		if (n_chevent == j) {  			// устанавливаем текущий цвет   			Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  			Gl.glLineWidth (3);  			//Gl.glColor3i(0' 100' 0);  			// активируем режим рисования линий' на основе   			// последовательного соединения всех вершин в отрезки   			// первая вершина будет находиться в начале координат   			for (i = 0; i < vinf.Length; i++) {  				double x1' x2' y1' y2;  				x1 = tinf [i] - 6 * prx;  				x2 = tinf [i] + 6 * prx;  				y1 = vinf [i] - 6 * pry;  				y2 = vinf [i] + 6 * pry;  				if (x1 >= min_x && x2 <= max_x) {  					Gl.glBegin (Gl.GL_LINE_LOOP);  					Gl.glVertex2d (x1' y1);  					Gl.glVertex2d (x2' y1);  					Gl.glVertex2d (x2' y2);  					Gl.glVertex2d (x1' y2);  					// завершаем режим рисования   					Gl.glEnd ();  				}  			}  			if (j == n - 1 && flag)  				break;  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (vinf != null && vinf.Length > 0) {  	int i' j;  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	bool flag = false;  	for (j = 0; j < n; j++) {  		if (n_chevent == j) {  			// устанавливаем текущий цвет   			Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  			Gl.glLineWidth (3);  			//Gl.glColor3i(0' 100' 0);  			// активируем режим рисования линий' на основе   			// последовательного соединения всех вершин в отрезки   			// первая вершина будет находиться в начале координат   			for (i = 0; i < vinf.Length; i++) {  				double x1' x2' y1' y2;  				x1 = tinf [i] - 6 * prx;  				x2 = tinf [i] + 6 * prx;  				y1 = vinf [i] - 6 * pry;  				y2 = vinf [i] + 6 * pry;  				if (x1 >= min_x && x2 <= max_x) {  					Gl.glBegin (Gl.GL_LINE_LOOP);  					Gl.glVertex2d (x1' y1);  					Gl.glVertex2d (x2' y1);  					Gl.glVertex2d (x2' y2);  					Gl.glVertex2d (x1' y2);  					// завершаем режим рисования   					Gl.glEnd ();  				}  			}  			if (j == n - 1 && flag)  				break;  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (vinf != null && vinf.Length > 0) {  	int i' j;  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	bool flag = false;  	for (j = 0; j < n; j++) {  		if (n_chevent == j) {  			// устанавливаем текущий цвет   			Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  			Gl.glLineWidth (3);  			//Gl.glColor3i(0' 100' 0);  			// активируем режим рисования линий' на основе   			// последовательного соединения всех вершин в отрезки   			// первая вершина будет находиться в начале координат   			for (i = 0; i < vinf.Length; i++) {  				double x1' x2' y1' y2;  				x1 = tinf [i] - 6 * prx;  				x2 = tinf [i] + 6 * prx;  				y1 = vinf [i] - 6 * pry;  				y2 = vinf [i] + 6 * pry;  				if (x1 >= min_x && x2 <= max_x) {  					Gl.glBegin (Gl.GL_LINE_LOOP);  					Gl.glVertex2d (x1' y1);  					Gl.glVertex2d (x2' y1);  					Gl.glVertex2d (x2' y2);  					Gl.glVertex2d (x1' y2);  					// завершаем режим рисования   					Gl.glEnd ();  				}  			}  			if (j == n - 1 && flag)  				break;  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (vinf != null && vinf.Length > 0) {  	int i' j;  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	bool flag = false;  	for (j = 0; j < n; j++) {  		if (n_chevent == j) {  			// устанавливаем текущий цвет   			Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  			Gl.glLineWidth (3);  			//Gl.glColor3i(0' 100' 0);  			// активируем режим рисования линий' на основе   			// последовательного соединения всех вершин в отрезки   			// первая вершина будет находиться в начале координат   			for (i = 0; i < vinf.Length; i++) {  				double x1' x2' y1' y2;  				x1 = tinf [i] - 6 * prx;  				x2 = tinf [i] + 6 * prx;  				y1 = vinf [i] - 6 * pry;  				y2 = vinf [i] + 6 * pry;  				if (x1 >= min_x && x2 <= max_x) {  					Gl.glBegin (Gl.GL_LINE_LOOP);  					Gl.glVertex2d (x1' y1);  					Gl.glVertex2d (x2' y1);  					Gl.glVertex2d (x2' y2);  					Gl.glVertex2d (x1' y2);  					// завершаем режим рисования   					Gl.glEnd ();  				}  			}  			if (j == n - 1 && flag)  				break;  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (vinf != null && vinf.Length > 0) {  	int i' j;  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	bool flag = false;  	for (j = 0; j < n; j++) {  		if (n_chevent == j) {  			// устанавливаем текущий цвет   			Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  			Gl.glLineWidth (3);  			//Gl.glColor3i(0' 100' 0);  			// активируем режим рисования линий' на основе   			// последовательного соединения всех вершин в отрезки   			// первая вершина будет находиться в начале координат   			for (i = 0; i < vinf.Length; i++) {  				double x1' x2' y1' y2;  				x1 = tinf [i] - 6 * prx;  				x2 = tinf [i] + 6 * prx;  				y1 = vinf [i] - 6 * pry;  				y2 = vinf [i] + 6 * pry;  				if (x1 >= min_x && x2 <= max_x) {  					Gl.glBegin (Gl.GL_LINE_LOOP);  					Gl.glVertex2d (x1' y1);  					Gl.glVertex2d (x2' y1);  					Gl.glVertex2d (x2' y2);  					Gl.glVertex2d (x1' y2);  					// завершаем режим рисования   					Gl.glEnd ();  				}  			}  			if (j == n - 1 && flag)  				break;  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (vinf != null && vinf.Length > 0) {  	int i' j;  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	bool flag = false;  	for (j = 0; j < n; j++) {  		if (n_chevent == j) {  			// устанавливаем текущий цвет   			Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  			Gl.glLineWidth (3);  			//Gl.glColor3i(0' 100' 0);  			// активируем режим рисования линий' на основе   			// последовательного соединения всех вершин в отрезки   			// первая вершина будет находиться в начале координат   			for (i = 0; i < vinf.Length; i++) {  				double x1' x2' y1' y2;  				x1 = tinf [i] - 6 * prx;  				x2 = tinf [i] + 6 * prx;  				y1 = vinf [i] - 6 * pry;  				y2 = vinf [i] + 6 * pry;  				if (x1 >= min_x && x2 <= max_x) {  					Gl.glBegin (Gl.GL_LINE_LOOP);  					Gl.glVertex2d (x1' y1);  					Gl.glVertex2d (x2' y1);  					Gl.glVertex2d (x2' y2);  					Gl.glVertex2d (x1' y2);  					// завершаем режим рисования   					Gl.glEnd ();  				}  			}  			if (j == n - 1 && flag)  				break;  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (vinf != null && vinf.Length > 0) {  	int i' j;  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	bool flag = false;  	for (j = 0; j < n; j++) {  		if (n_chevent == j) {  			// устанавливаем текущий цвет   			Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  			Gl.glLineWidth (3);  			//Gl.glColor3i(0' 100' 0);  			// активируем режим рисования линий' на основе   			// последовательного соединения всех вершин в отрезки   			// первая вершина будет находиться в начале координат   			for (i = 0; i < vinf.Length; i++) {  				double x1' x2' y1' y2;  				x1 = tinf [i] - 6 * prx;  				x2 = tinf [i] + 6 * prx;  				y1 = vinf [i] - 6 * pry;  				y2 = vinf [i] + 6 * pry;  				if (x1 >= min_x && x2 <= max_x) {  					Gl.glBegin (Gl.GL_LINE_LOOP);  					Gl.glVertex2d (x1' y1);  					Gl.glVertex2d (x2' y1);  					Gl.glVertex2d (x2' y2);  					Gl.glVertex2d (x1' y2);  					// завершаем режим рисования   					Gl.glEnd ();  				}  			}  			if (j == n - 1 && flag)  				break;  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (vinf != null && vinf.Length > 0) {  	int i' j;  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	bool flag = false;  	for (j = 0; j < n; j++) {  		if (n_chevent == j) {  			// устанавливаем текущий цвет   			Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  			Gl.glLineWidth (3);  			//Gl.glColor3i(0' 100' 0);  			// активируем режим рисования линий' на основе   			// последовательного соединения всех вершин в отрезки   			// первая вершина будет находиться в начале координат   			for (i = 0; i < vinf.Length; i++) {  				double x1' x2' y1' y2;  				x1 = tinf [i] - 6 * prx;  				x2 = tinf [i] + 6 * prx;  				y1 = vinf [i] - 6 * pry;  				y2 = vinf [i] + 6 * pry;  				if (x1 >= min_x && x2 <= max_x) {  					Gl.glBegin (Gl.GL_LINE_LOOP);  					Gl.glVertex2d (x1' y1);  					Gl.glVertex2d (x2' y1);  					Gl.glVertex2d (x2' y2);  					Gl.glVertex2d (x1' y2);  					// завершаем режим рисования   					Gl.glEnd ();  				}  			}  			if (j == n - 1 && flag)  				break;  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (vinf != null && vinf.Length > 0) {  	int i' j;  	// очищаем текущую матрицу   	Gl.glLoadIdentity ();  	bool flag = false;  	for (j = 0; j < n; j++) {  		if (n_chevent == j) {  			// устанавливаем текущий цвет   			Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  			Gl.glLineWidth (3);  			//Gl.glColor3i(0' 100' 0);  			// активируем режим рисования линий' на основе   			// последовательного соединения всех вершин в отрезки   			// первая вершина будет находиться в начале координат   			for (i = 0; i < vinf.Length; i++) {  				double x1' x2' y1' y2;  				x1 = tinf [i] - 6 * prx;  				x2 = tinf [i] + 6 * prx;  				y1 = vinf [i] - 6 * pry;  				y2 = vinf [i] + 6 * pry;  				if (x1 >= min_x && x2 <= max_x) {  					Gl.glBegin (Gl.GL_LINE_LOOP);  					Gl.glVertex2d (x1' y1);  					Gl.glVertex2d (x2' y1);  					Gl.glVertex2d (x2' y2);  					Gl.glVertex2d (x1' y2);  					// завершаем режим рисования   					Gl.glEnd ();  				}  			}  			if (j == n - 1 && flag)  				break;  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: for (j = 0; j < n; j++) {  	if (n_chevent == j) {  		// устанавливаем текущий цвет   		Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  		Gl.glLineWidth (3);  		//Gl.glColor3i(0' 100' 0);  		// активируем режим рисования линий' на основе   		// последовательного соединения всех вершин в отрезки   		// первая вершина будет находиться в начале координат   		for (i = 0; i < vinf.Length; i++) {  			double x1' x2' y1' y2;  			x1 = tinf [i] - 6 * prx;  			x2 = tinf [i] + 6 * prx;  			y1 = vinf [i] - 6 * pry;  			y2 = vinf [i] + 6 * pry;  			if (x1 >= min_x && x2 <= max_x) {  				Gl.glBegin (Gl.GL_LINE_LOOP);  				Gl.glVertex2d (x1' y1);  				Gl.glVertex2d (x2' y1);  				Gl.glVertex2d (x2' y2);  				Gl.glVertex2d (x1' y2);  				// завершаем режим рисования   				Gl.glEnd ();  			}  		}  		if (j == n - 1 && flag)  			break;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: for (j = 0; j < n; j++) {  	if (n_chevent == j) {  		// устанавливаем текущий цвет   		Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  		Gl.glLineWidth (3);  		//Gl.glColor3i(0' 100' 0);  		// активируем режим рисования линий' на основе   		// последовательного соединения всех вершин в отрезки   		// первая вершина будет находиться в начале координат   		for (i = 0; i < vinf.Length; i++) {  			double x1' x2' y1' y2;  			x1 = tinf [i] - 6 * prx;  			x2 = tinf [i] + 6 * prx;  			y1 = vinf [i] - 6 * pry;  			y2 = vinf [i] + 6 * pry;  			if (x1 >= min_x && x2 <= max_x) {  				Gl.glBegin (Gl.GL_LINE_LOOP);  				Gl.glVertex2d (x1' y1);  				Gl.glVertex2d (x2' y1);  				Gl.glVertex2d (x2' y2);  				Gl.glVertex2d (x1' y2);  				// завершаем режим рисования   				Gl.glEnd ();  			}  		}  		if (j == n - 1 && flag)  			break;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: for (j = 0; j < n; j++) {  	if (n_chevent == j) {  		// устанавливаем текущий цвет   		Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  		Gl.glLineWidth (3);  		//Gl.glColor3i(0' 100' 0);  		// активируем режим рисования линий' на основе   		// последовательного соединения всех вершин в отрезки   		// первая вершина будет находиться в начале координат   		for (i = 0; i < vinf.Length; i++) {  			double x1' x2' y1' y2;  			x1 = tinf [i] - 6 * prx;  			x2 = tinf [i] + 6 * prx;  			y1 = vinf [i] - 6 * pry;  			y2 = vinf [i] + 6 * pry;  			if (x1 >= min_x && x2 <= max_x) {  				Gl.glBegin (Gl.GL_LINE_LOOP);  				Gl.glVertex2d (x1' y1);  				Gl.glVertex2d (x2' y1);  				Gl.glVertex2d (x2' y2);  				Gl.glVertex2d (x1' y2);  				// завершаем режим рисования   				Gl.glEnd ();  			}  		}  		if (j == n - 1 && flag)  			break;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: for (j = 0; j < n; j++) {  	if (n_chevent == j) {  		// устанавливаем текущий цвет   		Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  		Gl.glLineWidth (3);  		//Gl.glColor3i(0' 100' 0);  		// активируем режим рисования линий' на основе   		// последовательного соединения всех вершин в отрезки   		// первая вершина будет находиться в начале координат   		for (i = 0; i < vinf.Length; i++) {  			double x1' x2' y1' y2;  			x1 = tinf [i] - 6 * prx;  			x2 = tinf [i] + 6 * prx;  			y1 = vinf [i] - 6 * pry;  			y2 = vinf [i] + 6 * pry;  			if (x1 >= min_x && x2 <= max_x) {  				Gl.glBegin (Gl.GL_LINE_LOOP);  				Gl.glVertex2d (x1' y1);  				Gl.glVertex2d (x2' y1);  				Gl.glVertex2d (x2' y2);  				Gl.glVertex2d (x1' y2);  				// завершаем режим рисования   				Gl.glEnd ();  			}  		}  		if (j == n - 1 && flag)  			break;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: for (j = 0; j < n; j++) {  	if (n_chevent == j) {  		// устанавливаем текущий цвет   		Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  		Gl.glLineWidth (3);  		//Gl.glColor3i(0' 100' 0);  		// активируем режим рисования линий' на основе   		// последовательного соединения всех вершин в отрезки   		// первая вершина будет находиться в начале координат   		for (i = 0; i < vinf.Length; i++) {  			double x1' x2' y1' y2;  			x1 = tinf [i] - 6 * prx;  			x2 = tinf [i] + 6 * prx;  			y1 = vinf [i] - 6 * pry;  			y2 = vinf [i] + 6 * pry;  			if (x1 >= min_x && x2 <= max_x) {  				Gl.glBegin (Gl.GL_LINE_LOOP);  				Gl.glVertex2d (x1' y1);  				Gl.glVertex2d (x2' y1);  				Gl.glVertex2d (x2' y2);  				Gl.glVertex2d (x1' y2);  				// завершаем режим рисования   				Gl.glEnd ();  			}  		}  		if (j == n - 1 && flag)  			break;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: for (j = 0; j < n; j++) {  	if (n_chevent == j) {  		// устанавливаем текущий цвет   		Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  		Gl.glLineWidth (3);  		//Gl.glColor3i(0' 100' 0);  		// активируем режим рисования линий' на основе   		// последовательного соединения всех вершин в отрезки   		// первая вершина будет находиться в начале координат   		for (i = 0; i < vinf.Length; i++) {  			double x1' x2' y1' y2;  			x1 = tinf [i] - 6 * prx;  			x2 = tinf [i] + 6 * prx;  			y1 = vinf [i] - 6 * pry;  			y2 = vinf [i] + 6 * pry;  			if (x1 >= min_x && x2 <= max_x) {  				Gl.glBegin (Gl.GL_LINE_LOOP);  				Gl.glVertex2d (x1' y1);  				Gl.glVertex2d (x2' y1);  				Gl.glVertex2d (x2' y2);  				Gl.glVertex2d (x1' y2);  				// завершаем режим рисования   				Gl.glEnd ();  			}  		}  		if (j == n - 1 && flag)  			break;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: for (j = 0; j < n; j++) {  	if (n_chevent == j) {  		// устанавливаем текущий цвет   		Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  		Gl.glLineWidth (3);  		//Gl.glColor3i(0' 100' 0);  		// активируем режим рисования линий' на основе   		// последовательного соединения всех вершин в отрезки   		// первая вершина будет находиться в начале координат   		for (i = 0; i < vinf.Length; i++) {  			double x1' x2' y1' y2;  			x1 = tinf [i] - 6 * prx;  			x2 = tinf [i] + 6 * prx;  			y1 = vinf [i] - 6 * pry;  			y2 = vinf [i] + 6 * pry;  			if (x1 >= min_x && x2 <= max_x) {  				Gl.glBegin (Gl.GL_LINE_LOOP);  				Gl.glVertex2d (x1' y1);  				Gl.glVertex2d (x2' y1);  				Gl.glVertex2d (x2' y2);  				Gl.glVertex2d (x1' y2);  				// завершаем режим рисования   				Gl.glEnd ();  			}  		}  		if (j == n - 1 && flag)  			break;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: for (j = 0; j < n; j++) {  	if (n_chevent == j) {  		// устанавливаем текущий цвет   		Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  		Gl.glLineWidth (3);  		//Gl.glColor3i(0' 100' 0);  		// активируем режим рисования линий' на основе   		// последовательного соединения всех вершин в отрезки   		// первая вершина будет находиться в начале координат   		for (i = 0; i < vinf.Length; i++) {  			double x1' x2' y1' y2;  			x1 = tinf [i] - 6 * prx;  			x2 = tinf [i] + 6 * prx;  			y1 = vinf [i] - 6 * pry;  			y2 = vinf [i] + 6 * pry;  			if (x1 >= min_x && x2 <= max_x) {  				Gl.glBegin (Gl.GL_LINE_LOOP);  				Gl.glVertex2d (x1' y1);  				Gl.glVertex2d (x2' y1);  				Gl.glVertex2d (x2' y2);  				Gl.glVertex2d (x1' y2);  				// завершаем режим рисования   				Gl.glEnd ();  			}  		}  		if (j == n - 1 && flag)  			break;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: for (j = 0; j < n; j++) {  	if (n_chevent == j) {  		// устанавливаем текущий цвет   		Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  		Gl.glLineWidth (3);  		//Gl.glColor3i(0' 100' 0);  		// активируем режим рисования линий' на основе   		// последовательного соединения всех вершин в отрезки   		// первая вершина будет находиться в начале координат   		for (i = 0; i < vinf.Length; i++) {  			double x1' x2' y1' y2;  			x1 = tinf [i] - 6 * prx;  			x2 = tinf [i] + 6 * prx;  			y1 = vinf [i] - 6 * pry;  			y2 = vinf [i] + 6 * pry;  			if (x1 >= min_x && x2 <= max_x) {  				Gl.glBegin (Gl.GL_LINE_LOOP);  				Gl.glVertex2d (x1' y1);  				Gl.glVertex2d (x2' y1);  				Gl.glVertex2d (x2' y2);  				Gl.glVertex2d (x1' y2);  				// завершаем режим рисования   				Gl.glEnd ();  			}  		}  		if (j == n - 1 && flag)  			break;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (n_chevent == j) {  	// устанавливаем текущий цвет   	Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  	Gl.glLineWidth (3);  	//Gl.glColor3i(0' 100' 0);  	// активируем режим рисования линий' на основе   	// последовательного соединения всех вершин в отрезки   	// первая вершина будет находиться в начале координат   	for (i = 0; i < vinf.Length; i++) {  		double x1' x2' y1' y2;  		x1 = tinf [i] - 6 * prx;  		x2 = tinf [i] + 6 * prx;  		y1 = vinf [i] - 6 * pry;  		y2 = vinf [i] + 6 * pry;  		if (x1 >= min_x && x2 <= max_x) {  			Gl.glBegin (Gl.GL_LINE_LOOP);  			Gl.glVertex2d (x1' y1);  			Gl.glVertex2d (x2' y1);  			Gl.glVertex2d (x2' y2);  			Gl.glVertex2d (x1' y2);  			// завершаем режим рисования   			Gl.glEnd ();  		}  	}  	if (j == n - 1 && flag)  		break;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (n_chevent == j) {  	// устанавливаем текущий цвет   	Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  	Gl.glLineWidth (3);  	//Gl.glColor3i(0' 100' 0);  	// активируем режим рисования линий' на основе   	// последовательного соединения всех вершин в отрезки   	// первая вершина будет находиться в начале координат   	for (i = 0; i < vinf.Length; i++) {  		double x1' x2' y1' y2;  		x1 = tinf [i] - 6 * prx;  		x2 = tinf [i] + 6 * prx;  		y1 = vinf [i] - 6 * pry;  		y2 = vinf [i] + 6 * pry;  		if (x1 >= min_x && x2 <= max_x) {  			Gl.glBegin (Gl.GL_LINE_LOOP);  			Gl.glVertex2d (x1' y1);  			Gl.glVertex2d (x2' y1);  			Gl.glVertex2d (x2' y2);  			Gl.glVertex2d (x1' y2);  			// завершаем режим рисования   			Gl.glEnd ();  		}  	}  	if (j == n - 1 && flag)  		break;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (n_chevent == j) {  	// устанавливаем текущий цвет   	Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  	Gl.glLineWidth (3);  	//Gl.glColor3i(0' 100' 0);  	// активируем режим рисования линий' на основе   	// последовательного соединения всех вершин в отрезки   	// первая вершина будет находиться в начале координат   	for (i = 0; i < vinf.Length; i++) {  		double x1' x2' y1' y2;  		x1 = tinf [i] - 6 * prx;  		x2 = tinf [i] + 6 * prx;  		y1 = vinf [i] - 6 * pry;  		y2 = vinf [i] + 6 * pry;  		if (x1 >= min_x && x2 <= max_x) {  			Gl.glBegin (Gl.GL_LINE_LOOP);  			Gl.glVertex2d (x1' y1);  			Gl.glVertex2d (x2' y1);  			Gl.glVertex2d (x2' y2);  			Gl.glVertex2d (x1' y2);  			// завершаем режим рисования   			Gl.glEnd ();  		}  	}  	if (j == n - 1 && flag)  		break;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (n_chevent == j) {  	// устанавливаем текущий цвет   	Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  	Gl.glLineWidth (3);  	//Gl.glColor3i(0' 100' 0);  	// активируем режим рисования линий' на основе   	// последовательного соединения всех вершин в отрезки   	// первая вершина будет находиться в начале координат   	for (i = 0; i < vinf.Length; i++) {  		double x1' x2' y1' y2;  		x1 = tinf [i] - 6 * prx;  		x2 = tinf [i] + 6 * prx;  		y1 = vinf [i] - 6 * pry;  		y2 = vinf [i] + 6 * pry;  		if (x1 >= min_x && x2 <= max_x) {  			Gl.glBegin (Gl.GL_LINE_LOOP);  			Gl.glVertex2d (x1' y1);  			Gl.glVertex2d (x2' y1);  			Gl.glVertex2d (x2' y2);  			Gl.glVertex2d (x1' y2);  			// завершаем режим рисования   			Gl.glEnd ();  		}  	}  	if (j == n - 1 && flag)  		break;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (n_chevent == j) {  	// устанавливаем текущий цвет   	Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  	Gl.glLineWidth (3);  	//Gl.glColor3i(0' 100' 0);  	// активируем режим рисования линий' на основе   	// последовательного соединения всех вершин в отрезки   	// первая вершина будет находиться в начале координат   	for (i = 0; i < vinf.Length; i++) {  		double x1' x2' y1' y2;  		x1 = tinf [i] - 6 * prx;  		x2 = tinf [i] + 6 * prx;  		y1 = vinf [i] - 6 * pry;  		y2 = vinf [i] + 6 * pry;  		if (x1 >= min_x && x2 <= max_x) {  			Gl.glBegin (Gl.GL_LINE_LOOP);  			Gl.glVertex2d (x1' y1);  			Gl.glVertex2d (x2' y1);  			Gl.glVertex2d (x2' y2);  			Gl.glVertex2d (x1' y2);  			// завершаем режим рисования   			Gl.glEnd ();  		}  	}  	if (j == n - 1 && flag)  		break;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (n_chevent == j) {  	// устанавливаем текущий цвет   	Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  	Gl.glLineWidth (3);  	//Gl.glColor3i(0' 100' 0);  	// активируем режим рисования линий' на основе   	// последовательного соединения всех вершин в отрезки   	// первая вершина будет находиться в начале координат   	for (i = 0; i < vinf.Length; i++) {  		double x1' x2' y1' y2;  		x1 = tinf [i] - 6 * prx;  		x2 = tinf [i] + 6 * prx;  		y1 = vinf [i] - 6 * pry;  		y2 = vinf [i] + 6 * pry;  		if (x1 >= min_x && x2 <= max_x) {  			Gl.glBegin (Gl.GL_LINE_LOOP);  			Gl.glVertex2d (x1' y1);  			Gl.glVertex2d (x2' y1);  			Gl.glVertex2d (x2' y2);  			Gl.glVertex2d (x1' y2);  			// завершаем режим рисования   			Gl.glEnd ();  		}  	}  	if (j == n - 1 && flag)  		break;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (n_chevent == j) {  	// устанавливаем текущий цвет   	Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  	Gl.glLineWidth (3);  	//Gl.glColor3i(0' 100' 0);  	// активируем режим рисования линий' на основе   	// последовательного соединения всех вершин в отрезки   	// первая вершина будет находиться в начале координат   	for (i = 0; i < vinf.Length; i++) {  		double x1' x2' y1' y2;  		x1 = tinf [i] - 6 * prx;  		x2 = tinf [i] + 6 * prx;  		y1 = vinf [i] - 6 * pry;  		y2 = vinf [i] + 6 * pry;  		if (x1 >= min_x && x2 <= max_x) {  			Gl.glBegin (Gl.GL_LINE_LOOP);  			Gl.glVertex2d (x1' y1);  			Gl.glVertex2d (x2' y1);  			Gl.glVertex2d (x2' y2);  			Gl.glVertex2d (x1' y2);  			// завершаем режим рисования   			Gl.glEnd ();  		}  	}  	if (j == n - 1 && flag)  		break;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (n_chevent == j) {  	// устанавливаем текущий цвет   	Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  	Gl.glLineWidth (3);  	//Gl.glColor3i(0' 100' 0);  	// активируем режим рисования линий' на основе   	// последовательного соединения всех вершин в отрезки   	// первая вершина будет находиться в начале координат   	for (i = 0; i < vinf.Length; i++) {  		double x1' x2' y1' y2;  		x1 = tinf [i] - 6 * prx;  		x2 = tinf [i] + 6 * prx;  		y1 = vinf [i] - 6 * pry;  		y2 = vinf [i] + 6 * pry;  		if (x1 >= min_x && x2 <= max_x) {  			Gl.glBegin (Gl.GL_LINE_LOOP);  			Gl.glVertex2d (x1' y1);  			Gl.glVertex2d (x2' y1);  			Gl.glVertex2d (x2' y2);  			Gl.glVertex2d (x1' y2);  			// завершаем режим рисования   			Gl.glEnd ();  		}  	}  	if (j == n - 1 && flag)  		break;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: if (n_chevent == j) {  	// устанавливаем текущий цвет   	Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  	Gl.glLineWidth (3);  	//Gl.glColor3i(0' 100' 0);  	// активируем режим рисования линий' на основе   	// последовательного соединения всех вершин в отрезки   	// первая вершина будет находиться в начале координат   	for (i = 0; i < vinf.Length; i++) {  		double x1' x2' y1' y2;  		x1 = tinf [i] - 6 * prx;  		x2 = tinf [i] + 6 * prx;  		y1 = vinf [i] - 6 * pry;  		y2 = vinf [i] + 6 * pry;  		if (x1 >= min_x && x2 <= max_x) {  			Gl.glBegin (Gl.GL_LINE_LOOP);  			Gl.glVertex2d (x1' y1);  			Gl.glVertex2d (x2' y1);  			Gl.glVertex2d (x2' y2);  			Gl.glVertex2d (x1' y2);  			// завершаем режим рисования   			Gl.glEnd ();  		}  	}  	if (j == n - 1 && flag)  		break;  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: Gl.glColor3f (colors_func [(j + 1) % 4] [0]' colors_func [(j + 1) % 4] [1]' colors_func [(j + 1) % 4] [2]);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: Gl.glLineWidth (3);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: for (i = 0; i < vinf.Length; i++) {  	double x1' x2' y1' y2;  	x1 = tinf [i] - 6 * prx;  	x2 = tinf [i] + 6 * prx;  	y1 = vinf [i] - 6 * pry;  	y2 = vinf [i] + 6 * pry;  	if (x1 >= min_x && x2 <= max_x) {  		Gl.glBegin (Gl.GL_LINE_LOOP);  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y1);  		Gl.glVertex2d (x2' y2);  		Gl.glVertex2d (x1' y2);  		// завершаем режим рисования   		Gl.glEnd ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: for (i = 0; i < vinf.Length; i++) {  	double x1' x2' y1' y2;  	x1 = tinf [i] - 6 * prx;  	x2 = tinf [i] + 6 * prx;  	y1 = vinf [i] - 6 * pry;  	y2 = vinf [i] + 6 * pry;  	if (x1 >= min_x && x2 <= max_x) {  		Gl.glBegin (Gl.GL_LINE_LOOP);  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y1);  		Gl.glVertex2d (x2' y2);  		Gl.glVertex2d (x1' y2);  		// завершаем режим рисования   		Gl.glEnd ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: for (i = 0; i < vinf.Length; i++) {  	double x1' x2' y1' y2;  	x1 = tinf [i] - 6 * prx;  	x2 = tinf [i] + 6 * prx;  	y1 = vinf [i] - 6 * pry;  	y2 = vinf [i] + 6 * pry;  	if (x1 >= min_x && x2 <= max_x) {  		Gl.glBegin (Gl.GL_LINE_LOOP);  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y1);  		Gl.glVertex2d (x2' y2);  		Gl.glVertex2d (x1' y2);  		// завершаем режим рисования   		Gl.glEnd ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: for (i = 0; i < vinf.Length; i++) {  	double x1' x2' y1' y2;  	x1 = tinf [i] - 6 * prx;  	x2 = tinf [i] + 6 * prx;  	y1 = vinf [i] - 6 * pry;  	y2 = vinf [i] + 6 * pry;  	if (x1 >= min_x && x2 <= max_x) {  		Gl.glBegin (Gl.GL_LINE_LOOP);  		Gl.glVertex2d (x1' y1);  		Gl.glVertex2d (x2' y1);  		Gl.glVertex2d (x2' y2);  		Gl.glVertex2d (x1' y2);  		// завершаем режим рисования   		Gl.glEnd ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: x1 = tinf [i] - 6 * prx;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: x2 = tinf [i] + 6 * prx;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: y1 = vinf [i] - 6 * pry;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,DrawEventsForChannel,The following statement contains a magic number: y2 = vinf [i] + 6 * pry;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,creatLabelY,The following statement contains a magic number: G.FillRectangle (Brushes.White' 0' 0' 128' 32);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,creatLabelY,The following statement contains a magic number: G.FillRectangle (Brushes.White' 0' 0' 128' 32);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,creatLabelX,The following statement contains a magic number: G.FillRectangle (Brushes.White' 0' 0' 256' 64);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,creatLabelX,The following statement contains a magic number: G.FillRectangle (Brushes.White' 0' 0' 256' 64);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,UpdateGraphick,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,UpdateGraphick,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,UpdateGraphick,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_plus,The following statement contains a magic number: if (my_scale < 512) {  	my_scale = my_scale * 2;  	v_min.Push (min_x);  	v_max.Push (max_x);  	diff_right = 0;  	max_x = min_x + div_x / 2;  	init_X_zoom ();  	// очитка окна   	Gl.glClearColor (255' 255' 255' 1);  	// установка порта вывода в соотвествии с размерами элемента anT   	Gl.glViewport (0' 0' width' height);  	// настройка проекции   	Gl.glMatrixMode (Gl.GL_PROJECTION);  	Gl.glLoadIdentity ();  	Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  	//Glu.gluOrtho2D(0' 30' 0' 30);  	Gl.glMatrixMode (Gl.GL_MODELVIEW);  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	Gl.glLoadIdentity ();  	//Init();  	DrawSystem ();  	DrawFunc ();  	// дожидаемся конца визуализации кадра   	Gl.glFlush ();  	//Gl.glFlush();  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_plus,The following statement contains a magic number: if (my_scale < 512) {  	my_scale = my_scale * 2;  	v_min.Push (min_x);  	v_max.Push (max_x);  	diff_right = 0;  	max_x = min_x + div_x / 2;  	init_X_zoom ();  	// очитка окна   	Gl.glClearColor (255' 255' 255' 1);  	// установка порта вывода в соотвествии с размерами элемента anT   	Gl.glViewport (0' 0' width' height);  	// настройка проекции   	Gl.glMatrixMode (Gl.GL_PROJECTION);  	Gl.glLoadIdentity ();  	Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  	//Glu.gluOrtho2D(0' 30' 0' 30);  	Gl.glMatrixMode (Gl.GL_MODELVIEW);  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	Gl.glLoadIdentity ();  	//Init();  	DrawSystem ();  	DrawFunc ();  	// дожидаемся конца визуализации кадра   	Gl.glFlush ();  	//Gl.glFlush();  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_plus,The following statement contains a magic number: if (my_scale < 512) {  	my_scale = my_scale * 2;  	v_min.Push (min_x);  	v_max.Push (max_x);  	diff_right = 0;  	max_x = min_x + div_x / 2;  	init_X_zoom ();  	// очитка окна   	Gl.glClearColor (255' 255' 255' 1);  	// установка порта вывода в соотвествии с размерами элемента anT   	Gl.glViewport (0' 0' width' height);  	// настройка проекции   	Gl.glMatrixMode (Gl.GL_PROJECTION);  	Gl.glLoadIdentity ();  	Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  	//Glu.gluOrtho2D(0' 30' 0' 30);  	Gl.glMatrixMode (Gl.GL_MODELVIEW);  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	Gl.glLoadIdentity ();  	//Init();  	DrawSystem ();  	DrawFunc ();  	// дожидаемся конца визуализации кадра   	Gl.glFlush ();  	//Gl.glFlush();  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_plus,The following statement contains a magic number: if (my_scale < 512) {  	my_scale = my_scale * 2;  	v_min.Push (min_x);  	v_max.Push (max_x);  	diff_right = 0;  	max_x = min_x + div_x / 2;  	init_X_zoom ();  	// очитка окна   	Gl.glClearColor (255' 255' 255' 1);  	// установка порта вывода в соотвествии с размерами элемента anT   	Gl.glViewport (0' 0' width' height);  	// настройка проекции   	Gl.glMatrixMode (Gl.GL_PROJECTION);  	Gl.glLoadIdentity ();  	Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  	//Glu.gluOrtho2D(0' 30' 0' 30);  	Gl.glMatrixMode (Gl.GL_MODELVIEW);  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	Gl.glLoadIdentity ();  	//Init();  	DrawSystem ();  	DrawFunc ();  	// дожидаемся конца визуализации кадра   	Gl.glFlush ();  	//Gl.glFlush();  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_plus,The following statement contains a magic number: if (my_scale < 512) {  	my_scale = my_scale * 2;  	v_min.Push (min_x);  	v_max.Push (max_x);  	diff_right = 0;  	max_x = min_x + div_x / 2;  	init_X_zoom ();  	// очитка окна   	Gl.glClearColor (255' 255' 255' 1);  	// установка порта вывода в соотвествии с размерами элемента anT   	Gl.glViewport (0' 0' width' height);  	// настройка проекции   	Gl.glMatrixMode (Gl.GL_PROJECTION);  	Gl.glLoadIdentity ();  	Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  	//Glu.gluOrtho2D(0' 30' 0' 30);  	Gl.glMatrixMode (Gl.GL_MODELVIEW);  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	Gl.glLoadIdentity ();  	//Init();  	DrawSystem ();  	DrawFunc ();  	// дожидаемся конца визуализации кадра   	Gl.glFlush ();  	//Gl.glFlush();  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_plus,The following statement contains a magic number: if (my_scale < 512) {  	my_scale = my_scale * 2;  	v_min.Push (min_x);  	v_max.Push (max_x);  	diff_right = 0;  	max_x = min_x + div_x / 2;  	init_X_zoom ();  	// очитка окна   	Gl.glClearColor (255' 255' 255' 1);  	// установка порта вывода в соотвествии с размерами элемента anT   	Gl.glViewport (0' 0' width' height);  	// настройка проекции   	Gl.glMatrixMode (Gl.GL_PROJECTION);  	Gl.glLoadIdentity ();  	Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  	//Glu.gluOrtho2D(0' 30' 0' 30);  	Gl.glMatrixMode (Gl.GL_MODELVIEW);  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	Gl.glLoadIdentity ();  	//Init();  	DrawSystem ();  	DrawFunc ();  	// дожидаемся конца визуализации кадра   	Gl.glFlush ();  	//Gl.glFlush();  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_plus,The following statement contains a magic number: my_scale = my_scale * 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_plus,The following statement contains a magic number: max_x = min_x + div_x / 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_plus,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_plus,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_plus,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_minus,The following statement contains a magic number: if (my_scale > 1) {  	my_scale = my_scale / 2;  	double lmax' lmin;  	if (v_max.Count () > 0) {  		lmax = v_max.Pop ();  		lmin = v_min.Pop ();  		if (lmax + diff_right <= sup_max_x + x [m.Min () - 1] - x [m.Min () - 2]) {  			max_x = lmax + diff_right;  			min_x = lmin + diff_right;  		}  		else {  			max_x = sup_max_x;  			min_x = sup_max_x - (lmax - lmin);  			if (min_x < sup_min_x - hx) {  				min_x = sup_min_x;  				diff_right = 0;  			}  		}  		init_X_zoom ();  		// очитка окна   		Gl.glClearColor (255' 255' 255' 1);  		// установка порта вывода в соотвествии с размерами элемента anT   		Gl.glViewport (0' 0' width' height);  		// настройка проекции   		Gl.glMatrixMode (Gl.GL_PROJECTION);  		Gl.glLoadIdentity ();  		Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  		//Glu.gluOrtho2D(0' 30' 0' 30);  		Gl.glMatrixMode (Gl.GL_MODELVIEW);  		// очищаем буфер цвета   		Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  		Gl.glLoadIdentity ();  		//Init();  		DrawSystem ();  		DrawFunc ();  		// дожидаемся конца визуализации кадра   		Gl.glFlush ();  		//Gl.glFlush();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_minus,The following statement contains a magic number: if (my_scale > 1) {  	my_scale = my_scale / 2;  	double lmax' lmin;  	if (v_max.Count () > 0) {  		lmax = v_max.Pop ();  		lmin = v_min.Pop ();  		if (lmax + diff_right <= sup_max_x + x [m.Min () - 1] - x [m.Min () - 2]) {  			max_x = lmax + diff_right;  			min_x = lmin + diff_right;  		}  		else {  			max_x = sup_max_x;  			min_x = sup_max_x - (lmax - lmin);  			if (min_x < sup_min_x - hx) {  				min_x = sup_min_x;  				diff_right = 0;  			}  		}  		init_X_zoom ();  		// очитка окна   		Gl.glClearColor (255' 255' 255' 1);  		// установка порта вывода в соотвествии с размерами элемента anT   		Gl.glViewport (0' 0' width' height);  		// настройка проекции   		Gl.glMatrixMode (Gl.GL_PROJECTION);  		Gl.glLoadIdentity ();  		Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  		//Glu.gluOrtho2D(0' 30' 0' 30);  		Gl.glMatrixMode (Gl.GL_MODELVIEW);  		// очищаем буфер цвета   		Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  		Gl.glLoadIdentity ();  		//Init();  		DrawSystem ();  		DrawFunc ();  		// дожидаемся конца визуализации кадра   		Gl.glFlush ();  		//Gl.glFlush();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_minus,The following statement contains a magic number: if (my_scale > 1) {  	my_scale = my_scale / 2;  	double lmax' lmin;  	if (v_max.Count () > 0) {  		lmax = v_max.Pop ();  		lmin = v_min.Pop ();  		if (lmax + diff_right <= sup_max_x + x [m.Min () - 1] - x [m.Min () - 2]) {  			max_x = lmax + diff_right;  			min_x = lmin + diff_right;  		}  		else {  			max_x = sup_max_x;  			min_x = sup_max_x - (lmax - lmin);  			if (min_x < sup_min_x - hx) {  				min_x = sup_min_x;  				diff_right = 0;  			}  		}  		init_X_zoom ();  		// очитка окна   		Gl.glClearColor (255' 255' 255' 1);  		// установка порта вывода в соотвествии с размерами элемента anT   		Gl.glViewport (0' 0' width' height);  		// настройка проекции   		Gl.glMatrixMode (Gl.GL_PROJECTION);  		Gl.glLoadIdentity ();  		Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  		//Glu.gluOrtho2D(0' 30' 0' 30);  		Gl.glMatrixMode (Gl.GL_MODELVIEW);  		// очищаем буфер цвета   		Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  		Gl.glLoadIdentity ();  		//Init();  		DrawSystem ();  		DrawFunc ();  		// дожидаемся конца визуализации кадра   		Gl.glFlush ();  		//Gl.glFlush();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_minus,The following statement contains a magic number: if (my_scale > 1) {  	my_scale = my_scale / 2;  	double lmax' lmin;  	if (v_max.Count () > 0) {  		lmax = v_max.Pop ();  		lmin = v_min.Pop ();  		if (lmax + diff_right <= sup_max_x + x [m.Min () - 1] - x [m.Min () - 2]) {  			max_x = lmax + diff_right;  			min_x = lmin + diff_right;  		}  		else {  			max_x = sup_max_x;  			min_x = sup_max_x - (lmax - lmin);  			if (min_x < sup_min_x - hx) {  				min_x = sup_min_x;  				diff_right = 0;  			}  		}  		init_X_zoom ();  		// очитка окна   		Gl.glClearColor (255' 255' 255' 1);  		// установка порта вывода в соотвествии с размерами элемента anT   		Gl.glViewport (0' 0' width' height);  		// настройка проекции   		Gl.glMatrixMode (Gl.GL_PROJECTION);  		Gl.glLoadIdentity ();  		Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  		//Glu.gluOrtho2D(0' 30' 0' 30);  		Gl.glMatrixMode (Gl.GL_MODELVIEW);  		// очищаем буфер цвета   		Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  		Gl.glLoadIdentity ();  		//Init();  		DrawSystem ();  		DrawFunc ();  		// дожидаемся конца визуализации кадра   		Gl.glFlush ();  		//Gl.glFlush();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_minus,The following statement contains a magic number: if (my_scale > 1) {  	my_scale = my_scale / 2;  	double lmax' lmin;  	if (v_max.Count () > 0) {  		lmax = v_max.Pop ();  		lmin = v_min.Pop ();  		if (lmax + diff_right <= sup_max_x + x [m.Min () - 1] - x [m.Min () - 2]) {  			max_x = lmax + diff_right;  			min_x = lmin + diff_right;  		}  		else {  			max_x = sup_max_x;  			min_x = sup_max_x - (lmax - lmin);  			if (min_x < sup_min_x - hx) {  				min_x = sup_min_x;  				diff_right = 0;  			}  		}  		init_X_zoom ();  		// очитка окна   		Gl.glClearColor (255' 255' 255' 1);  		// установка порта вывода в соотвествии с размерами элемента anT   		Gl.glViewport (0' 0' width' height);  		// настройка проекции   		Gl.glMatrixMode (Gl.GL_PROJECTION);  		Gl.glLoadIdentity ();  		Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  		//Glu.gluOrtho2D(0' 30' 0' 30);  		Gl.glMatrixMode (Gl.GL_MODELVIEW);  		// очищаем буфер цвета   		Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  		Gl.glLoadIdentity ();  		//Init();  		DrawSystem ();  		DrawFunc ();  		// дожидаемся конца визуализации кадра   		Gl.glFlush ();  		//Gl.glFlush();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_minus,The following statement contains a magic number: my_scale = my_scale / 2;  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_minus,The following statement contains a magic number: if (v_max.Count () > 0) {  	lmax = v_max.Pop ();  	lmin = v_min.Pop ();  	if (lmax + diff_right <= sup_max_x + x [m.Min () - 1] - x [m.Min () - 2]) {  		max_x = lmax + diff_right;  		min_x = lmin + diff_right;  	}  	else {  		max_x = sup_max_x;  		min_x = sup_max_x - (lmax - lmin);  		if (min_x < sup_min_x - hx) {  			min_x = sup_min_x;  			diff_right = 0;  		}  	}  	init_X_zoom ();  	// очитка окна   	Gl.glClearColor (255' 255' 255' 1);  	// установка порта вывода в соотвествии с размерами элемента anT   	Gl.glViewport (0' 0' width' height);  	// настройка проекции   	Gl.glMatrixMode (Gl.GL_PROJECTION);  	Gl.glLoadIdentity ();  	Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  	//Glu.gluOrtho2D(0' 30' 0' 30);  	Gl.glMatrixMode (Gl.GL_MODELVIEW);  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	Gl.glLoadIdentity ();  	//Init();  	DrawSystem ();  	DrawFunc ();  	// дожидаемся конца визуализации кадра   	Gl.glFlush ();  	//Gl.glFlush();  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_minus,The following statement contains a magic number: if (v_max.Count () > 0) {  	lmax = v_max.Pop ();  	lmin = v_min.Pop ();  	if (lmax + diff_right <= sup_max_x + x [m.Min () - 1] - x [m.Min () - 2]) {  		max_x = lmax + diff_right;  		min_x = lmin + diff_right;  	}  	else {  		max_x = sup_max_x;  		min_x = sup_max_x - (lmax - lmin);  		if (min_x < sup_min_x - hx) {  			min_x = sup_min_x;  			diff_right = 0;  		}  	}  	init_X_zoom ();  	// очитка окна   	Gl.glClearColor (255' 255' 255' 1);  	// установка порта вывода в соотвествии с размерами элемента anT   	Gl.glViewport (0' 0' width' height);  	// настройка проекции   	Gl.glMatrixMode (Gl.GL_PROJECTION);  	Gl.glLoadIdentity ();  	Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  	//Glu.gluOrtho2D(0' 30' 0' 30);  	Gl.glMatrixMode (Gl.GL_MODELVIEW);  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	Gl.glLoadIdentity ();  	//Init();  	DrawSystem ();  	DrawFunc ();  	// дожидаемся конца визуализации кадра   	Gl.glFlush ();  	//Gl.glFlush();  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_minus,The following statement contains a magic number: if (v_max.Count () > 0) {  	lmax = v_max.Pop ();  	lmin = v_min.Pop ();  	if (lmax + diff_right <= sup_max_x + x [m.Min () - 1] - x [m.Min () - 2]) {  		max_x = lmax + diff_right;  		min_x = lmin + diff_right;  	}  	else {  		max_x = sup_max_x;  		min_x = sup_max_x - (lmax - lmin);  		if (min_x < sup_min_x - hx) {  			min_x = sup_min_x;  			diff_right = 0;  		}  	}  	init_X_zoom ();  	// очитка окна   	Gl.glClearColor (255' 255' 255' 1);  	// установка порта вывода в соотвествии с размерами элемента anT   	Gl.glViewport (0' 0' width' height);  	// настройка проекции   	Gl.glMatrixMode (Gl.GL_PROJECTION);  	Gl.glLoadIdentity ();  	Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  	//Glu.gluOrtho2D(0' 30' 0' 30);  	Gl.glMatrixMode (Gl.GL_MODELVIEW);  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	Gl.glLoadIdentity ();  	//Init();  	DrawSystem ();  	DrawFunc ();  	// дожидаемся конца визуализации кадра   	Gl.glFlush ();  	//Gl.glFlush();  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_minus,The following statement contains a magic number: if (v_max.Count () > 0) {  	lmax = v_max.Pop ();  	lmin = v_min.Pop ();  	if (lmax + diff_right <= sup_max_x + x [m.Min () - 1] - x [m.Min () - 2]) {  		max_x = lmax + diff_right;  		min_x = lmin + diff_right;  	}  	else {  		max_x = sup_max_x;  		min_x = sup_max_x - (lmax - lmin);  		if (min_x < sup_min_x - hx) {  			min_x = sup_min_x;  			diff_right = 0;  		}  	}  	init_X_zoom ();  	// очитка окна   	Gl.glClearColor (255' 255' 255' 1);  	// установка порта вывода в соотвествии с размерами элемента anT   	Gl.glViewport (0' 0' width' height);  	// настройка проекции   	Gl.glMatrixMode (Gl.GL_PROJECTION);  	Gl.glLoadIdentity ();  	Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  	//Glu.gluOrtho2D(0' 30' 0' 30);  	Gl.glMatrixMode (Gl.GL_MODELVIEW);  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	Gl.glLoadIdentity ();  	//Init();  	DrawSystem ();  	DrawFunc ();  	// дожидаемся конца визуализации кадра   	Gl.glFlush ();  	//Gl.glFlush();  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_minus,The following statement contains a magic number: if (lmax + diff_right <= sup_max_x + x [m.Min () - 1] - x [m.Min () - 2]) {  	max_x = lmax + diff_right;  	min_x = lmin + diff_right;  }  else {  	max_x = sup_max_x;  	min_x = sup_max_x - (lmax - lmin);  	if (min_x < sup_min_x - hx) {  		min_x = sup_min_x;  		diff_right = 0;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_minus,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_minus,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_minus,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_full,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_full,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Zoom_full,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Move_right,The following statement contains a magic number: if (max_x <= sup_max_x) {  	min_x = min_x + hx;  	max_x = max_x + hx;  	diff_right += hx;  	min_x = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x) + 1));  	max_x = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x) + 1));  	// очитка окна   	Gl.glClearColor (255' 255' 255' 1);  	// установка порта вывода в соотвествии с размерами элемента anT   	Gl.glViewport (0' 0' width' height);  	// настройка проекции   	Gl.glMatrixMode (Gl.GL_PROJECTION);  	Gl.glLoadIdentity ();  	Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  	//Glu.gluOrtho2D(0' 30' 0' 30);  	Gl.glMatrixMode (Gl.GL_MODELVIEW);  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	Gl.glLoadIdentity ();  	//Init();  	DrawSystem ();  	DrawFunc ();  	// дожидаемся конца визуализации кадра   	Gl.glFlush ();  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Move_right,The following statement contains a magic number: if (max_x <= sup_max_x) {  	min_x = min_x + hx;  	max_x = max_x + hx;  	diff_right += hx;  	min_x = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x) + 1));  	max_x = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x) + 1));  	// очитка окна   	Gl.glClearColor (255' 255' 255' 1);  	// установка порта вывода в соотвествии с размерами элемента anT   	Gl.glViewport (0' 0' width' height);  	// настройка проекции   	Gl.glMatrixMode (Gl.GL_PROJECTION);  	Gl.glLoadIdentity ();  	Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  	//Glu.gluOrtho2D(0' 30' 0' 30);  	Gl.glMatrixMode (Gl.GL_MODELVIEW);  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	Gl.glLoadIdentity ();  	//Init();  	DrawSystem ();  	DrawFunc ();  	// дожидаемся конца визуализации кадра   	Gl.glFlush ();  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Move_right,The following statement contains a magic number: if (max_x <= sup_max_x) {  	min_x = min_x + hx;  	max_x = max_x + hx;  	diff_right += hx;  	min_x = Math.Round (min_x' Convert.ToInt32 (Math.Abs (pow_x) + 1));  	max_x = Math.Round (max_x' Convert.ToInt32 (Math.Abs (pow_x) + 1));  	// очитка окна   	Gl.glClearColor (255' 255' 255' 1);  	// установка порта вывода в соотвествии с размерами элемента anT   	Gl.glViewport (0' 0' width' height);  	// настройка проекции   	Gl.glMatrixMode (Gl.GL_PROJECTION);  	Gl.glLoadIdentity ();  	Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  	//Glu.gluOrtho2D(0' 30' 0' 30);  	Gl.glMatrixMode (Gl.GL_MODELVIEW);  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	Gl.glLoadIdentity ();  	//Init();  	DrawSystem ();  	DrawFunc ();  	// дожидаемся конца визуализации кадра   	Gl.glFlush ();  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Move_right,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Move_right,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Move_right,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Move_left,The following statement contains a magic number: if (min_x >= sup_min_x) {  	min_x = min_x - hx;  	max_x = max_x - hx;  	diff_right -= hx;  	// очитка окна   	Gl.glClearColor (255' 255' 255' 1);  	// установка порта вывода в соотвествии с размерами элемента anT   	Gl.glViewport (0' 0' width' height);  	// настройка проекции   	Gl.glMatrixMode (Gl.GL_PROJECTION);  	Gl.glLoadIdentity ();  	Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  	//Glu.gluOrtho2D(0' 30' 0' 30);  	Gl.glMatrixMode (Gl.GL_MODELVIEW);  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	Gl.glLoadIdentity ();  	//Init();  	DrawSystem ();  	DrawFunc ();  	// дожидаемся конца визуализации кадра   	Gl.glFlush ();  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Move_left,The following statement contains a magic number: if (min_x >= sup_min_x) {  	min_x = min_x - hx;  	max_x = max_x - hx;  	diff_right -= hx;  	// очитка окна   	Gl.glClearColor (255' 255' 255' 1);  	// установка порта вывода в соотвествии с размерами элемента anT   	Gl.glViewport (0' 0' width' height);  	// настройка проекции   	Gl.glMatrixMode (Gl.GL_PROJECTION);  	Gl.glLoadIdentity ();  	Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  	//Glu.gluOrtho2D(0' 30' 0' 30);  	Gl.glMatrixMode (Gl.GL_MODELVIEW);  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	Gl.glLoadIdentity ();  	//Init();  	DrawSystem ();  	DrawFunc ();  	// дожидаемся конца визуализации кадра   	Gl.glFlush ();  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Move_left,The following statement contains a magic number: if (min_x >= sup_min_x) {  	min_x = min_x - hx;  	max_x = max_x - hx;  	diff_right -= hx;  	// очитка окна   	Gl.glClearColor (255' 255' 255' 1);  	// установка порта вывода в соотвествии с размерами элемента anT   	Gl.glViewport (0' 0' width' height);  	// настройка проекции   	Gl.glMatrixMode (Gl.GL_PROJECTION);  	Gl.glLoadIdentity ();  	Glu.gluOrtho2D (min_x - ddx' max_x + ddx' min_y - ddy' max_y + ddy);  	//Glu.gluOrtho2D(0' 30' 0' 30);  	Gl.glMatrixMode (Gl.GL_MODELVIEW);  	// очищаем буфер цвета   	Gl.glClear (Gl.GL_COLOR_BUFFER_BIT);  	Gl.glLoadIdentity ();  	//Init();  	DrawSystem ();  	DrawFunc ();  	// дожидаемся конца визуализации кадра   	Gl.glFlush ();  }  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Move_left,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Move_left,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,Move_left,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,GetBitmapDiff,The following statement contains a magic number: Gl.glReadPixels (0' 2' bitmap.Width' bitmap.Height - 2' Gl.GL_BGR_EXT' Gl.GL_UNSIGNED_BYTE' bitmapData.Scan0);  
Magic Number,WindowsFormsGraphickOpenGL,ClassOpenGLGraphick2D,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ClassOpenGLGraphick2D.cs,GetBitmapDiff,The following statement contains a magic number: Gl.glReadPixels (0' 2' bitmap.Width' bitmap.Height - 2' Gl.GL_BGR_EXT' Gl.GL_UNSIGNED_BYTE' bitmapData.Scan0);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,FormMain_Load,The following statement contains a magic number: dataGridViewFiles.ColumnHeadersHeight = dataGridViewFiles.ColumnHeadersHeight * 2;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: if (aFile.Exists == false) {  	goto M1;  }  else {  	try {  		System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  		//дериктория  		home_directory = fconfig.ReadLine ();  		DirectoryInfo di = new DirectoryInfo (home_directory);  		if (di.Exists)  			explorerTreeMain.SelectedPath = home_directory;  		else  			explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  		explorerTreeMain.Refresh ();  		string sfile;  		//позиция+разрешение  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  		posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  		width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  		height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  		bool resolut = false;  		if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  			this.Size = new System.Drawing.Size (width_w' height_w);  			this.Location = new System.Drawing.Point (posX_window' posY_window);  			resolut = true;  		}  		else {  			posX_window = posY_window = 0;  			width_w = Screen.PrimaryScreen.WorkingArea.Width;  			height_w = Screen.PrimaryScreen.WorkingArea.Height;  			this.Size = new System.Drawing.Size (width_w' height_w);  		}  		//настройки меню  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		bool[] bmn = new bool[8];  		string[] smn;  		smn = sfile.Split (' ');  		int i;  		for (i = 0; i < 8; i++)  			bmn [i] = Convert.ToBoolean (smn [i]);  		mnuSA.Checked = bmn [0];  		mnuST.Checked = bmn [1];  		mnuSD.Checked = bmn [2];  		mnuSN.Checked = bmn [3];  		mnuSF.Checked = bmn [4];  		mnuSFExperimentTime.Checked = bmn [5];  		mnuSFKadrsNumber.Checked = bmn [6];  		mnuSFInputTimeInSec.Checked = bmn [7];  		explorerTreeMain.ShowAddressbar = mnuSA.Checked;  		explorerTreeMain.ShowToolbar = mnuST.Checked;  		explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  		explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  		explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  		fKadrsNumber = mnuSFKadrsNumber.Checked;  		if (!fKadrsNumber)  			fNumCol--;  		fInputTimeInSec = mnuSFInputTimeInSec.Checked;  		if (!fInputTimeInSec)  			fNumCol--;  		fExperimentTime = mnuSFExperimentTime.Checked;  		if (!fExperimentTime)  			fNumCol--;  		//разделитель дерево-список файлов  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  		height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  		else {  			double value;  			value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  			splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  		}  		//разделитель главный  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  		width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerMain.SplitterDistance = split_main;  		else {  			double value;  			value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  			splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  		}  		//тип сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		TypeSmooth = Convert.ToInt32 (sfile);  		toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  		if (TypeSmooth == 0) {  			MakeVisibelGaussSmooth (false);  			MakeVisibel2ParamSmooth (true);  		}  		else {  			MakeVisibelGaussSmooth (true);  			MakeVisibel2ParamSmooth (false);  		}  		//параметр + внешний + внутренний шаг  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  		with_diff_parm = 1;  		toolStripTextBoxParam.Text = with_diff_parm.ToString ();  		OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  		toolStripTextBoxOutStep.Text = OutStep.ToString ();  		InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  		toolStripTextBoxInStep.Text = InStep.ToString ();  		//ширина окна сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		currentTextWidth = sfile;  		toolStripTextBoxWidthGauss.Text = currentTextWidth;  		gaussB = Convert.ToDouble (currentTextWidth);  		//число зубьев  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		number_zub = Convert.ToInt32 (sfile);  		//toolStripComboBoxSmooth.SelectedIndex = 0;  		toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  		fconfig.Close ();  		return;  	}  	catch {  		goto M1;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: if (aFile.Exists == false) {  	goto M1;  }  else {  	try {  		System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  		//дериктория  		home_directory = fconfig.ReadLine ();  		DirectoryInfo di = new DirectoryInfo (home_directory);  		if (di.Exists)  			explorerTreeMain.SelectedPath = home_directory;  		else  			explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  		explorerTreeMain.Refresh ();  		string sfile;  		//позиция+разрешение  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  		posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  		width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  		height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  		bool resolut = false;  		if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  			this.Size = new System.Drawing.Size (width_w' height_w);  			this.Location = new System.Drawing.Point (posX_window' posY_window);  			resolut = true;  		}  		else {  			posX_window = posY_window = 0;  			width_w = Screen.PrimaryScreen.WorkingArea.Width;  			height_w = Screen.PrimaryScreen.WorkingArea.Height;  			this.Size = new System.Drawing.Size (width_w' height_w);  		}  		//настройки меню  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		bool[] bmn = new bool[8];  		string[] smn;  		smn = sfile.Split (' ');  		int i;  		for (i = 0; i < 8; i++)  			bmn [i] = Convert.ToBoolean (smn [i]);  		mnuSA.Checked = bmn [0];  		mnuST.Checked = bmn [1];  		mnuSD.Checked = bmn [2];  		mnuSN.Checked = bmn [3];  		mnuSF.Checked = bmn [4];  		mnuSFExperimentTime.Checked = bmn [5];  		mnuSFKadrsNumber.Checked = bmn [6];  		mnuSFInputTimeInSec.Checked = bmn [7];  		explorerTreeMain.ShowAddressbar = mnuSA.Checked;  		explorerTreeMain.ShowToolbar = mnuST.Checked;  		explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  		explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  		explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  		fKadrsNumber = mnuSFKadrsNumber.Checked;  		if (!fKadrsNumber)  			fNumCol--;  		fInputTimeInSec = mnuSFInputTimeInSec.Checked;  		if (!fInputTimeInSec)  			fNumCol--;  		fExperimentTime = mnuSFExperimentTime.Checked;  		if (!fExperimentTime)  			fNumCol--;  		//разделитель дерево-список файлов  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  		height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  		else {  			double value;  			value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  			splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  		}  		//разделитель главный  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  		width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerMain.SplitterDistance = split_main;  		else {  			double value;  			value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  			splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  		}  		//тип сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		TypeSmooth = Convert.ToInt32 (sfile);  		toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  		if (TypeSmooth == 0) {  			MakeVisibelGaussSmooth (false);  			MakeVisibel2ParamSmooth (true);  		}  		else {  			MakeVisibelGaussSmooth (true);  			MakeVisibel2ParamSmooth (false);  		}  		//параметр + внешний + внутренний шаг  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  		with_diff_parm = 1;  		toolStripTextBoxParam.Text = with_diff_parm.ToString ();  		OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  		toolStripTextBoxOutStep.Text = OutStep.ToString ();  		InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  		toolStripTextBoxInStep.Text = InStep.ToString ();  		//ширина окна сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		currentTextWidth = sfile;  		toolStripTextBoxWidthGauss.Text = currentTextWidth;  		gaussB = Convert.ToDouble (currentTextWidth);  		//число зубьев  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		number_zub = Convert.ToInt32 (sfile);  		//toolStripComboBoxSmooth.SelectedIndex = 0;  		toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  		fconfig.Close ();  		return;  	}  	catch {  		goto M1;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: if (aFile.Exists == false) {  	goto M1;  }  else {  	try {  		System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  		//дериктория  		home_directory = fconfig.ReadLine ();  		DirectoryInfo di = new DirectoryInfo (home_directory);  		if (di.Exists)  			explorerTreeMain.SelectedPath = home_directory;  		else  			explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  		explorerTreeMain.Refresh ();  		string sfile;  		//позиция+разрешение  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  		posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  		width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  		height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  		bool resolut = false;  		if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  			this.Size = new System.Drawing.Size (width_w' height_w);  			this.Location = new System.Drawing.Point (posX_window' posY_window);  			resolut = true;  		}  		else {  			posX_window = posY_window = 0;  			width_w = Screen.PrimaryScreen.WorkingArea.Width;  			height_w = Screen.PrimaryScreen.WorkingArea.Height;  			this.Size = new System.Drawing.Size (width_w' height_w);  		}  		//настройки меню  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		bool[] bmn = new bool[8];  		string[] smn;  		smn = sfile.Split (' ');  		int i;  		for (i = 0; i < 8; i++)  			bmn [i] = Convert.ToBoolean (smn [i]);  		mnuSA.Checked = bmn [0];  		mnuST.Checked = bmn [1];  		mnuSD.Checked = bmn [2];  		mnuSN.Checked = bmn [3];  		mnuSF.Checked = bmn [4];  		mnuSFExperimentTime.Checked = bmn [5];  		mnuSFKadrsNumber.Checked = bmn [6];  		mnuSFInputTimeInSec.Checked = bmn [7];  		explorerTreeMain.ShowAddressbar = mnuSA.Checked;  		explorerTreeMain.ShowToolbar = mnuST.Checked;  		explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  		explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  		explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  		fKadrsNumber = mnuSFKadrsNumber.Checked;  		if (!fKadrsNumber)  			fNumCol--;  		fInputTimeInSec = mnuSFInputTimeInSec.Checked;  		if (!fInputTimeInSec)  			fNumCol--;  		fExperimentTime = mnuSFExperimentTime.Checked;  		if (!fExperimentTime)  			fNumCol--;  		//разделитель дерево-список файлов  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  		height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  		else {  			double value;  			value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  			splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  		}  		//разделитель главный  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  		width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerMain.SplitterDistance = split_main;  		else {  			double value;  			value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  			splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  		}  		//тип сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		TypeSmooth = Convert.ToInt32 (sfile);  		toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  		if (TypeSmooth == 0) {  			MakeVisibelGaussSmooth (false);  			MakeVisibel2ParamSmooth (true);  		}  		else {  			MakeVisibelGaussSmooth (true);  			MakeVisibel2ParamSmooth (false);  		}  		//параметр + внешний + внутренний шаг  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  		with_diff_parm = 1;  		toolStripTextBoxParam.Text = with_diff_parm.ToString ();  		OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  		toolStripTextBoxOutStep.Text = OutStep.ToString ();  		InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  		toolStripTextBoxInStep.Text = InStep.ToString ();  		//ширина окна сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		currentTextWidth = sfile;  		toolStripTextBoxWidthGauss.Text = currentTextWidth;  		gaussB = Convert.ToDouble (currentTextWidth);  		//число зубьев  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		number_zub = Convert.ToInt32 (sfile);  		//toolStripComboBoxSmooth.SelectedIndex = 0;  		toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  		fconfig.Close ();  		return;  	}  	catch {  		goto M1;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: if (aFile.Exists == false) {  	goto M1;  }  else {  	try {  		System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  		//дериктория  		home_directory = fconfig.ReadLine ();  		DirectoryInfo di = new DirectoryInfo (home_directory);  		if (di.Exists)  			explorerTreeMain.SelectedPath = home_directory;  		else  			explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  		explorerTreeMain.Refresh ();  		string sfile;  		//позиция+разрешение  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  		posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  		width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  		height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  		bool resolut = false;  		if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  			this.Size = new System.Drawing.Size (width_w' height_w);  			this.Location = new System.Drawing.Point (posX_window' posY_window);  			resolut = true;  		}  		else {  			posX_window = posY_window = 0;  			width_w = Screen.PrimaryScreen.WorkingArea.Width;  			height_w = Screen.PrimaryScreen.WorkingArea.Height;  			this.Size = new System.Drawing.Size (width_w' height_w);  		}  		//настройки меню  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		bool[] bmn = new bool[8];  		string[] smn;  		smn = sfile.Split (' ');  		int i;  		for (i = 0; i < 8; i++)  			bmn [i] = Convert.ToBoolean (smn [i]);  		mnuSA.Checked = bmn [0];  		mnuST.Checked = bmn [1];  		mnuSD.Checked = bmn [2];  		mnuSN.Checked = bmn [3];  		mnuSF.Checked = bmn [4];  		mnuSFExperimentTime.Checked = bmn [5];  		mnuSFKadrsNumber.Checked = bmn [6];  		mnuSFInputTimeInSec.Checked = bmn [7];  		explorerTreeMain.ShowAddressbar = mnuSA.Checked;  		explorerTreeMain.ShowToolbar = mnuST.Checked;  		explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  		explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  		explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  		fKadrsNumber = mnuSFKadrsNumber.Checked;  		if (!fKadrsNumber)  			fNumCol--;  		fInputTimeInSec = mnuSFInputTimeInSec.Checked;  		if (!fInputTimeInSec)  			fNumCol--;  		fExperimentTime = mnuSFExperimentTime.Checked;  		if (!fExperimentTime)  			fNumCol--;  		//разделитель дерево-список файлов  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  		height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  		else {  			double value;  			value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  			splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  		}  		//разделитель главный  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  		width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerMain.SplitterDistance = split_main;  		else {  			double value;  			value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  			splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  		}  		//тип сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		TypeSmooth = Convert.ToInt32 (sfile);  		toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  		if (TypeSmooth == 0) {  			MakeVisibelGaussSmooth (false);  			MakeVisibel2ParamSmooth (true);  		}  		else {  			MakeVisibelGaussSmooth (true);  			MakeVisibel2ParamSmooth (false);  		}  		//параметр + внешний + внутренний шаг  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  		with_diff_parm = 1;  		toolStripTextBoxParam.Text = with_diff_parm.ToString ();  		OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  		toolStripTextBoxOutStep.Text = OutStep.ToString ();  		InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  		toolStripTextBoxInStep.Text = InStep.ToString ();  		//ширина окна сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		currentTextWidth = sfile;  		toolStripTextBoxWidthGauss.Text = currentTextWidth;  		gaussB = Convert.ToDouble (currentTextWidth);  		//число зубьев  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		number_zub = Convert.ToInt32 (sfile);  		//toolStripComboBoxSmooth.SelectedIndex = 0;  		toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  		fconfig.Close ();  		return;  	}  	catch {  		goto M1;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: if (aFile.Exists == false) {  	goto M1;  }  else {  	try {  		System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  		//дериктория  		home_directory = fconfig.ReadLine ();  		DirectoryInfo di = new DirectoryInfo (home_directory);  		if (di.Exists)  			explorerTreeMain.SelectedPath = home_directory;  		else  			explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  		explorerTreeMain.Refresh ();  		string sfile;  		//позиция+разрешение  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  		posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  		width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  		height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  		bool resolut = false;  		if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  			this.Size = new System.Drawing.Size (width_w' height_w);  			this.Location = new System.Drawing.Point (posX_window' posY_window);  			resolut = true;  		}  		else {  			posX_window = posY_window = 0;  			width_w = Screen.PrimaryScreen.WorkingArea.Width;  			height_w = Screen.PrimaryScreen.WorkingArea.Height;  			this.Size = new System.Drawing.Size (width_w' height_w);  		}  		//настройки меню  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		bool[] bmn = new bool[8];  		string[] smn;  		smn = sfile.Split (' ');  		int i;  		for (i = 0; i < 8; i++)  			bmn [i] = Convert.ToBoolean (smn [i]);  		mnuSA.Checked = bmn [0];  		mnuST.Checked = bmn [1];  		mnuSD.Checked = bmn [2];  		mnuSN.Checked = bmn [3];  		mnuSF.Checked = bmn [4];  		mnuSFExperimentTime.Checked = bmn [5];  		mnuSFKadrsNumber.Checked = bmn [6];  		mnuSFInputTimeInSec.Checked = bmn [7];  		explorerTreeMain.ShowAddressbar = mnuSA.Checked;  		explorerTreeMain.ShowToolbar = mnuST.Checked;  		explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  		explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  		explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  		fKadrsNumber = mnuSFKadrsNumber.Checked;  		if (!fKadrsNumber)  			fNumCol--;  		fInputTimeInSec = mnuSFInputTimeInSec.Checked;  		if (!fInputTimeInSec)  			fNumCol--;  		fExperimentTime = mnuSFExperimentTime.Checked;  		if (!fExperimentTime)  			fNumCol--;  		//разделитель дерево-список файлов  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  		height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  		else {  			double value;  			value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  			splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  		}  		//разделитель главный  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  		width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerMain.SplitterDistance = split_main;  		else {  			double value;  			value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  			splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  		}  		//тип сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		TypeSmooth = Convert.ToInt32 (sfile);  		toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  		if (TypeSmooth == 0) {  			MakeVisibelGaussSmooth (false);  			MakeVisibel2ParamSmooth (true);  		}  		else {  			MakeVisibelGaussSmooth (true);  			MakeVisibel2ParamSmooth (false);  		}  		//параметр + внешний + внутренний шаг  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  		with_diff_parm = 1;  		toolStripTextBoxParam.Text = with_diff_parm.ToString ();  		OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  		toolStripTextBoxOutStep.Text = OutStep.ToString ();  		InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  		toolStripTextBoxInStep.Text = InStep.ToString ();  		//ширина окна сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		currentTextWidth = sfile;  		toolStripTextBoxWidthGauss.Text = currentTextWidth;  		gaussB = Convert.ToDouble (currentTextWidth);  		//число зубьев  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		number_zub = Convert.ToInt32 (sfile);  		//toolStripComboBoxSmooth.SelectedIndex = 0;  		toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  		fconfig.Close ();  		return;  	}  	catch {  		goto M1;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: if (aFile.Exists == false) {  	goto M1;  }  else {  	try {  		System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  		//дериктория  		home_directory = fconfig.ReadLine ();  		DirectoryInfo di = new DirectoryInfo (home_directory);  		if (di.Exists)  			explorerTreeMain.SelectedPath = home_directory;  		else  			explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  		explorerTreeMain.Refresh ();  		string sfile;  		//позиция+разрешение  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  		posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  		width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  		height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  		bool resolut = false;  		if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  			this.Size = new System.Drawing.Size (width_w' height_w);  			this.Location = new System.Drawing.Point (posX_window' posY_window);  			resolut = true;  		}  		else {  			posX_window = posY_window = 0;  			width_w = Screen.PrimaryScreen.WorkingArea.Width;  			height_w = Screen.PrimaryScreen.WorkingArea.Height;  			this.Size = new System.Drawing.Size (width_w' height_w);  		}  		//настройки меню  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		bool[] bmn = new bool[8];  		string[] smn;  		smn = sfile.Split (' ');  		int i;  		for (i = 0; i < 8; i++)  			bmn [i] = Convert.ToBoolean (smn [i]);  		mnuSA.Checked = bmn [0];  		mnuST.Checked = bmn [1];  		mnuSD.Checked = bmn [2];  		mnuSN.Checked = bmn [3];  		mnuSF.Checked = bmn [4];  		mnuSFExperimentTime.Checked = bmn [5];  		mnuSFKadrsNumber.Checked = bmn [6];  		mnuSFInputTimeInSec.Checked = bmn [7];  		explorerTreeMain.ShowAddressbar = mnuSA.Checked;  		explorerTreeMain.ShowToolbar = mnuST.Checked;  		explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  		explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  		explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  		fKadrsNumber = mnuSFKadrsNumber.Checked;  		if (!fKadrsNumber)  			fNumCol--;  		fInputTimeInSec = mnuSFInputTimeInSec.Checked;  		if (!fInputTimeInSec)  			fNumCol--;  		fExperimentTime = mnuSFExperimentTime.Checked;  		if (!fExperimentTime)  			fNumCol--;  		//разделитель дерево-список файлов  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  		height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  		else {  			double value;  			value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  			splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  		}  		//разделитель главный  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  		width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerMain.SplitterDistance = split_main;  		else {  			double value;  			value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  			splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  		}  		//тип сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		TypeSmooth = Convert.ToInt32 (sfile);  		toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  		if (TypeSmooth == 0) {  			MakeVisibelGaussSmooth (false);  			MakeVisibel2ParamSmooth (true);  		}  		else {  			MakeVisibelGaussSmooth (true);  			MakeVisibel2ParamSmooth (false);  		}  		//параметр + внешний + внутренний шаг  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  		with_diff_parm = 1;  		toolStripTextBoxParam.Text = with_diff_parm.ToString ();  		OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  		toolStripTextBoxOutStep.Text = OutStep.ToString ();  		InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  		toolStripTextBoxInStep.Text = InStep.ToString ();  		//ширина окна сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		currentTextWidth = sfile;  		toolStripTextBoxWidthGauss.Text = currentTextWidth;  		gaussB = Convert.ToDouble (currentTextWidth);  		//число зубьев  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		number_zub = Convert.ToInt32 (sfile);  		//toolStripComboBoxSmooth.SelectedIndex = 0;  		toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  		fconfig.Close ();  		return;  	}  	catch {  		goto M1;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: if (aFile.Exists == false) {  	goto M1;  }  else {  	try {  		System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  		//дериктория  		home_directory = fconfig.ReadLine ();  		DirectoryInfo di = new DirectoryInfo (home_directory);  		if (di.Exists)  			explorerTreeMain.SelectedPath = home_directory;  		else  			explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  		explorerTreeMain.Refresh ();  		string sfile;  		//позиция+разрешение  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  		posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  		width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  		height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  		bool resolut = false;  		if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  			this.Size = new System.Drawing.Size (width_w' height_w);  			this.Location = new System.Drawing.Point (posX_window' posY_window);  			resolut = true;  		}  		else {  			posX_window = posY_window = 0;  			width_w = Screen.PrimaryScreen.WorkingArea.Width;  			height_w = Screen.PrimaryScreen.WorkingArea.Height;  			this.Size = new System.Drawing.Size (width_w' height_w);  		}  		//настройки меню  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		bool[] bmn = new bool[8];  		string[] smn;  		smn = sfile.Split (' ');  		int i;  		for (i = 0; i < 8; i++)  			bmn [i] = Convert.ToBoolean (smn [i]);  		mnuSA.Checked = bmn [0];  		mnuST.Checked = bmn [1];  		mnuSD.Checked = bmn [2];  		mnuSN.Checked = bmn [3];  		mnuSF.Checked = bmn [4];  		mnuSFExperimentTime.Checked = bmn [5];  		mnuSFKadrsNumber.Checked = bmn [6];  		mnuSFInputTimeInSec.Checked = bmn [7];  		explorerTreeMain.ShowAddressbar = mnuSA.Checked;  		explorerTreeMain.ShowToolbar = mnuST.Checked;  		explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  		explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  		explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  		fKadrsNumber = mnuSFKadrsNumber.Checked;  		if (!fKadrsNumber)  			fNumCol--;  		fInputTimeInSec = mnuSFInputTimeInSec.Checked;  		if (!fInputTimeInSec)  			fNumCol--;  		fExperimentTime = mnuSFExperimentTime.Checked;  		if (!fExperimentTime)  			fNumCol--;  		//разделитель дерево-список файлов  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  		height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  		else {  			double value;  			value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  			splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  		}  		//разделитель главный  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  		width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerMain.SplitterDistance = split_main;  		else {  			double value;  			value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  			splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  		}  		//тип сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		TypeSmooth = Convert.ToInt32 (sfile);  		toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  		if (TypeSmooth == 0) {  			MakeVisibelGaussSmooth (false);  			MakeVisibel2ParamSmooth (true);  		}  		else {  			MakeVisibelGaussSmooth (true);  			MakeVisibel2ParamSmooth (false);  		}  		//параметр + внешний + внутренний шаг  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  		with_diff_parm = 1;  		toolStripTextBoxParam.Text = with_diff_parm.ToString ();  		OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  		toolStripTextBoxOutStep.Text = OutStep.ToString ();  		InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  		toolStripTextBoxInStep.Text = InStep.ToString ();  		//ширина окна сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		currentTextWidth = sfile;  		toolStripTextBoxWidthGauss.Text = currentTextWidth;  		gaussB = Convert.ToDouble (currentTextWidth);  		//число зубьев  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		number_zub = Convert.ToInt32 (sfile);  		//toolStripComboBoxSmooth.SelectedIndex = 0;  		toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  		fconfig.Close ();  		return;  	}  	catch {  		goto M1;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: if (aFile.Exists == false) {  	goto M1;  }  else {  	try {  		System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  		//дериктория  		home_directory = fconfig.ReadLine ();  		DirectoryInfo di = new DirectoryInfo (home_directory);  		if (di.Exists)  			explorerTreeMain.SelectedPath = home_directory;  		else  			explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  		explorerTreeMain.Refresh ();  		string sfile;  		//позиция+разрешение  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  		posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  		width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  		height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  		bool resolut = false;  		if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  			this.Size = new System.Drawing.Size (width_w' height_w);  			this.Location = new System.Drawing.Point (posX_window' posY_window);  			resolut = true;  		}  		else {  			posX_window = posY_window = 0;  			width_w = Screen.PrimaryScreen.WorkingArea.Width;  			height_w = Screen.PrimaryScreen.WorkingArea.Height;  			this.Size = new System.Drawing.Size (width_w' height_w);  		}  		//настройки меню  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		bool[] bmn = new bool[8];  		string[] smn;  		smn = sfile.Split (' ');  		int i;  		for (i = 0; i < 8; i++)  			bmn [i] = Convert.ToBoolean (smn [i]);  		mnuSA.Checked = bmn [0];  		mnuST.Checked = bmn [1];  		mnuSD.Checked = bmn [2];  		mnuSN.Checked = bmn [3];  		mnuSF.Checked = bmn [4];  		mnuSFExperimentTime.Checked = bmn [5];  		mnuSFKadrsNumber.Checked = bmn [6];  		mnuSFInputTimeInSec.Checked = bmn [7];  		explorerTreeMain.ShowAddressbar = mnuSA.Checked;  		explorerTreeMain.ShowToolbar = mnuST.Checked;  		explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  		explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  		explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  		fKadrsNumber = mnuSFKadrsNumber.Checked;  		if (!fKadrsNumber)  			fNumCol--;  		fInputTimeInSec = mnuSFInputTimeInSec.Checked;  		if (!fInputTimeInSec)  			fNumCol--;  		fExperimentTime = mnuSFExperimentTime.Checked;  		if (!fExperimentTime)  			fNumCol--;  		//разделитель дерево-список файлов  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  		height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  		else {  			double value;  			value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  			splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  		}  		//разделитель главный  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  		width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerMain.SplitterDistance = split_main;  		else {  			double value;  			value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  			splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  		}  		//тип сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		TypeSmooth = Convert.ToInt32 (sfile);  		toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  		if (TypeSmooth == 0) {  			MakeVisibelGaussSmooth (false);  			MakeVisibel2ParamSmooth (true);  		}  		else {  			MakeVisibelGaussSmooth (true);  			MakeVisibel2ParamSmooth (false);  		}  		//параметр + внешний + внутренний шаг  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  		with_diff_parm = 1;  		toolStripTextBoxParam.Text = with_diff_parm.ToString ();  		OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  		toolStripTextBoxOutStep.Text = OutStep.ToString ();  		InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  		toolStripTextBoxInStep.Text = InStep.ToString ();  		//ширина окна сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		currentTextWidth = sfile;  		toolStripTextBoxWidthGauss.Text = currentTextWidth;  		gaussB = Convert.ToDouble (currentTextWidth);  		//число зубьев  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		number_zub = Convert.ToInt32 (sfile);  		//toolStripComboBoxSmooth.SelectedIndex = 0;  		toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  		fconfig.Close ();  		return;  	}  	catch {  		goto M1;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: if (aFile.Exists == false) {  	goto M1;  }  else {  	try {  		System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  		//дериктория  		home_directory = fconfig.ReadLine ();  		DirectoryInfo di = new DirectoryInfo (home_directory);  		if (di.Exists)  			explorerTreeMain.SelectedPath = home_directory;  		else  			explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  		explorerTreeMain.Refresh ();  		string sfile;  		//позиция+разрешение  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  		posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  		width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  		height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  		bool resolut = false;  		if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  			this.Size = new System.Drawing.Size (width_w' height_w);  			this.Location = new System.Drawing.Point (posX_window' posY_window);  			resolut = true;  		}  		else {  			posX_window = posY_window = 0;  			width_w = Screen.PrimaryScreen.WorkingArea.Width;  			height_w = Screen.PrimaryScreen.WorkingArea.Height;  			this.Size = new System.Drawing.Size (width_w' height_w);  		}  		//настройки меню  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		bool[] bmn = new bool[8];  		string[] smn;  		smn = sfile.Split (' ');  		int i;  		for (i = 0; i < 8; i++)  			bmn [i] = Convert.ToBoolean (smn [i]);  		mnuSA.Checked = bmn [0];  		mnuST.Checked = bmn [1];  		mnuSD.Checked = bmn [2];  		mnuSN.Checked = bmn [3];  		mnuSF.Checked = bmn [4];  		mnuSFExperimentTime.Checked = bmn [5];  		mnuSFKadrsNumber.Checked = bmn [6];  		mnuSFInputTimeInSec.Checked = bmn [7];  		explorerTreeMain.ShowAddressbar = mnuSA.Checked;  		explorerTreeMain.ShowToolbar = mnuST.Checked;  		explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  		explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  		explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  		fKadrsNumber = mnuSFKadrsNumber.Checked;  		if (!fKadrsNumber)  			fNumCol--;  		fInputTimeInSec = mnuSFInputTimeInSec.Checked;  		if (!fInputTimeInSec)  			fNumCol--;  		fExperimentTime = mnuSFExperimentTime.Checked;  		if (!fExperimentTime)  			fNumCol--;  		//разделитель дерево-список файлов  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  		height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  		else {  			double value;  			value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  			splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  		}  		//разделитель главный  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  		width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerMain.SplitterDistance = split_main;  		else {  			double value;  			value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  			splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  		}  		//тип сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		TypeSmooth = Convert.ToInt32 (sfile);  		toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  		if (TypeSmooth == 0) {  			MakeVisibelGaussSmooth (false);  			MakeVisibel2ParamSmooth (true);  		}  		else {  			MakeVisibelGaussSmooth (true);  			MakeVisibel2ParamSmooth (false);  		}  		//параметр + внешний + внутренний шаг  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  		with_diff_parm = 1;  		toolStripTextBoxParam.Text = with_diff_parm.ToString ();  		OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  		toolStripTextBoxOutStep.Text = OutStep.ToString ();  		InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  		toolStripTextBoxInStep.Text = InStep.ToString ();  		//ширина окна сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		currentTextWidth = sfile;  		toolStripTextBoxWidthGauss.Text = currentTextWidth;  		gaussB = Convert.ToDouble (currentTextWidth);  		//число зубьев  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		number_zub = Convert.ToInt32 (sfile);  		//toolStripComboBoxSmooth.SelectedIndex = 0;  		toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  		fconfig.Close ();  		return;  	}  	catch {  		goto M1;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: if (aFile.Exists == false) {  	goto M1;  }  else {  	try {  		System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  		//дериктория  		home_directory = fconfig.ReadLine ();  		DirectoryInfo di = new DirectoryInfo (home_directory);  		if (di.Exists)  			explorerTreeMain.SelectedPath = home_directory;  		else  			explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  		explorerTreeMain.Refresh ();  		string sfile;  		//позиция+разрешение  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  		posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  		width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  		height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  		bool resolut = false;  		if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  			this.Size = new System.Drawing.Size (width_w' height_w);  			this.Location = new System.Drawing.Point (posX_window' posY_window);  			resolut = true;  		}  		else {  			posX_window = posY_window = 0;  			width_w = Screen.PrimaryScreen.WorkingArea.Width;  			height_w = Screen.PrimaryScreen.WorkingArea.Height;  			this.Size = new System.Drawing.Size (width_w' height_w);  		}  		//настройки меню  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		bool[] bmn = new bool[8];  		string[] smn;  		smn = sfile.Split (' ');  		int i;  		for (i = 0; i < 8; i++)  			bmn [i] = Convert.ToBoolean (smn [i]);  		mnuSA.Checked = bmn [0];  		mnuST.Checked = bmn [1];  		mnuSD.Checked = bmn [2];  		mnuSN.Checked = bmn [3];  		mnuSF.Checked = bmn [4];  		mnuSFExperimentTime.Checked = bmn [5];  		mnuSFKadrsNumber.Checked = bmn [6];  		mnuSFInputTimeInSec.Checked = bmn [7];  		explorerTreeMain.ShowAddressbar = mnuSA.Checked;  		explorerTreeMain.ShowToolbar = mnuST.Checked;  		explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  		explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  		explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  		fKadrsNumber = mnuSFKadrsNumber.Checked;  		if (!fKadrsNumber)  			fNumCol--;  		fInputTimeInSec = mnuSFInputTimeInSec.Checked;  		if (!fInputTimeInSec)  			fNumCol--;  		fExperimentTime = mnuSFExperimentTime.Checked;  		if (!fExperimentTime)  			fNumCol--;  		//разделитель дерево-список файлов  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  		height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  		else {  			double value;  			value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  			splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  		}  		//разделитель главный  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  		width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerMain.SplitterDistance = split_main;  		else {  			double value;  			value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  			splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  		}  		//тип сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		TypeSmooth = Convert.ToInt32 (sfile);  		toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  		if (TypeSmooth == 0) {  			MakeVisibelGaussSmooth (false);  			MakeVisibel2ParamSmooth (true);  		}  		else {  			MakeVisibelGaussSmooth (true);  			MakeVisibel2ParamSmooth (false);  		}  		//параметр + внешний + внутренний шаг  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  		with_diff_parm = 1;  		toolStripTextBoxParam.Text = with_diff_parm.ToString ();  		OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  		toolStripTextBoxOutStep.Text = OutStep.ToString ();  		InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  		toolStripTextBoxInStep.Text = InStep.ToString ();  		//ширина окна сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		currentTextWidth = sfile;  		toolStripTextBoxWidthGauss.Text = currentTextWidth;  		gaussB = Convert.ToDouble (currentTextWidth);  		//число зубьев  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		number_zub = Convert.ToInt32 (sfile);  		//toolStripComboBoxSmooth.SelectedIndex = 0;  		toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  		fconfig.Close ();  		return;  	}  	catch {  		goto M1;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: if (aFile.Exists == false) {  	goto M1;  }  else {  	try {  		System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  		//дериктория  		home_directory = fconfig.ReadLine ();  		DirectoryInfo di = new DirectoryInfo (home_directory);  		if (di.Exists)  			explorerTreeMain.SelectedPath = home_directory;  		else  			explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  		explorerTreeMain.Refresh ();  		string sfile;  		//позиция+разрешение  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  		posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  		width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  		height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  		bool resolut = false;  		if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  			this.Size = new System.Drawing.Size (width_w' height_w);  			this.Location = new System.Drawing.Point (posX_window' posY_window);  			resolut = true;  		}  		else {  			posX_window = posY_window = 0;  			width_w = Screen.PrimaryScreen.WorkingArea.Width;  			height_w = Screen.PrimaryScreen.WorkingArea.Height;  			this.Size = new System.Drawing.Size (width_w' height_w);  		}  		//настройки меню  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		bool[] bmn = new bool[8];  		string[] smn;  		smn = sfile.Split (' ');  		int i;  		for (i = 0; i < 8; i++)  			bmn [i] = Convert.ToBoolean (smn [i]);  		mnuSA.Checked = bmn [0];  		mnuST.Checked = bmn [1];  		mnuSD.Checked = bmn [2];  		mnuSN.Checked = bmn [3];  		mnuSF.Checked = bmn [4];  		mnuSFExperimentTime.Checked = bmn [5];  		mnuSFKadrsNumber.Checked = bmn [6];  		mnuSFInputTimeInSec.Checked = bmn [7];  		explorerTreeMain.ShowAddressbar = mnuSA.Checked;  		explorerTreeMain.ShowToolbar = mnuST.Checked;  		explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  		explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  		explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  		fKadrsNumber = mnuSFKadrsNumber.Checked;  		if (!fKadrsNumber)  			fNumCol--;  		fInputTimeInSec = mnuSFInputTimeInSec.Checked;  		if (!fInputTimeInSec)  			fNumCol--;  		fExperimentTime = mnuSFExperimentTime.Checked;  		if (!fExperimentTime)  			fNumCol--;  		//разделитель дерево-список файлов  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  		height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  		else {  			double value;  			value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  			splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  		}  		//разделитель главный  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  		width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  		if (resolut)  			splitContainerMain.SplitterDistance = split_main;  		else {  			double value;  			value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  			splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  		}  		//тип сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		TypeSmooth = Convert.ToInt32 (sfile);  		toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  		if (TypeSmooth == 0) {  			MakeVisibelGaussSmooth (false);  			MakeVisibel2ParamSmooth (true);  		}  		else {  			MakeVisibelGaussSmooth (true);  			MakeVisibel2ParamSmooth (false);  		}  		//параметр + внешний + внутренний шаг  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  		with_diff_parm = 1;  		toolStripTextBoxParam.Text = with_diff_parm.ToString ();  		OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  		toolStripTextBoxOutStep.Text = OutStep.ToString ();  		InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  		toolStripTextBoxInStep.Text = InStep.ToString ();  		//ширина окна сглаживания  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		currentTextWidth = sfile;  		toolStripTextBoxWidthGauss.Text = currentTextWidth;  		gaussB = Convert.ToDouble (currentTextWidth);  		//число зубьев  		sfile = fconfig.ReadLine ();  		if (sfile == null)  			goto M1;  		number_zub = Convert.ToInt32 (sfile);  		//toolStripComboBoxSmooth.SelectedIndex = 0;  		toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  		fconfig.Close ();  		return;  	}  	catch {  		goto M1;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: try {  	System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  	//дериктория  	home_directory = fconfig.ReadLine ();  	DirectoryInfo di = new DirectoryInfo (home_directory);  	if (di.Exists)  		explorerTreeMain.SelectedPath = home_directory;  	else  		explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  	explorerTreeMain.Refresh ();  	string sfile;  	//позиция+разрешение  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  	posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  	width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  	height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  	bool resolut = false;  	if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  		this.Size = new System.Drawing.Size (width_w' height_w);  		this.Location = new System.Drawing.Point (posX_window' posY_window);  		resolut = true;  	}  	else {  		posX_window = posY_window = 0;  		width_w = Screen.PrimaryScreen.WorkingArea.Width;  		height_w = Screen.PrimaryScreen.WorkingArea.Height;  		this.Size = new System.Drawing.Size (width_w' height_w);  	}  	//настройки меню  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	bool[] bmn = new bool[8];  	string[] smn;  	smn = sfile.Split (' ');  	int i;  	for (i = 0; i < 8; i++)  		bmn [i] = Convert.ToBoolean (smn [i]);  	mnuSA.Checked = bmn [0];  	mnuST.Checked = bmn [1];  	mnuSD.Checked = bmn [2];  	mnuSN.Checked = bmn [3];  	mnuSF.Checked = bmn [4];  	mnuSFExperimentTime.Checked = bmn [5];  	mnuSFKadrsNumber.Checked = bmn [6];  	mnuSFInputTimeInSec.Checked = bmn [7];  	explorerTreeMain.ShowAddressbar = mnuSA.Checked;  	explorerTreeMain.ShowToolbar = mnuST.Checked;  	explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  	explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  	explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  	fKadrsNumber = mnuSFKadrsNumber.Checked;  	if (!fKadrsNumber)  		fNumCol--;  	fInputTimeInSec = mnuSFInputTimeInSec.Checked;  	if (!fInputTimeInSec)  		fNumCol--;  	fExperimentTime = mnuSFExperimentTime.Checked;  	if (!fExperimentTime)  		fNumCol--;  	//разделитель дерево-список файлов  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  	height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  	else {  		double value;  		value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  		splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  	}  	//разделитель главный  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  	width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerMain.SplitterDistance = split_main;  	else {  		double value;  		value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  		splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  	}  	//тип сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	TypeSmooth = Convert.ToInt32 (sfile);  	toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  	if (TypeSmooth == 0) {  		MakeVisibelGaussSmooth (false);  		MakeVisibel2ParamSmooth (true);  	}  	else {  		MakeVisibelGaussSmooth (true);  		MakeVisibel2ParamSmooth (false);  	}  	//параметр + внешний + внутренний шаг  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  	with_diff_parm = 1;  	toolStripTextBoxParam.Text = with_diff_parm.ToString ();  	OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  	toolStripTextBoxOutStep.Text = OutStep.ToString ();  	InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  	toolStripTextBoxInStep.Text = InStep.ToString ();  	//ширина окна сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	currentTextWidth = sfile;  	toolStripTextBoxWidthGauss.Text = currentTextWidth;  	gaussB = Convert.ToDouble (currentTextWidth);  	//число зубьев  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	number_zub = Convert.ToInt32 (sfile);  	//toolStripComboBoxSmooth.SelectedIndex = 0;  	toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  	fconfig.Close ();  	return;  }  catch {  	goto M1;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: try {  	System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  	//дериктория  	home_directory = fconfig.ReadLine ();  	DirectoryInfo di = new DirectoryInfo (home_directory);  	if (di.Exists)  		explorerTreeMain.SelectedPath = home_directory;  	else  		explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  	explorerTreeMain.Refresh ();  	string sfile;  	//позиция+разрешение  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  	posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  	width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  	height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  	bool resolut = false;  	if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  		this.Size = new System.Drawing.Size (width_w' height_w);  		this.Location = new System.Drawing.Point (posX_window' posY_window);  		resolut = true;  	}  	else {  		posX_window = posY_window = 0;  		width_w = Screen.PrimaryScreen.WorkingArea.Width;  		height_w = Screen.PrimaryScreen.WorkingArea.Height;  		this.Size = new System.Drawing.Size (width_w' height_w);  	}  	//настройки меню  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	bool[] bmn = new bool[8];  	string[] smn;  	smn = sfile.Split (' ');  	int i;  	for (i = 0; i < 8; i++)  		bmn [i] = Convert.ToBoolean (smn [i]);  	mnuSA.Checked = bmn [0];  	mnuST.Checked = bmn [1];  	mnuSD.Checked = bmn [2];  	mnuSN.Checked = bmn [3];  	mnuSF.Checked = bmn [4];  	mnuSFExperimentTime.Checked = bmn [5];  	mnuSFKadrsNumber.Checked = bmn [6];  	mnuSFInputTimeInSec.Checked = bmn [7];  	explorerTreeMain.ShowAddressbar = mnuSA.Checked;  	explorerTreeMain.ShowToolbar = mnuST.Checked;  	explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  	explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  	explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  	fKadrsNumber = mnuSFKadrsNumber.Checked;  	if (!fKadrsNumber)  		fNumCol--;  	fInputTimeInSec = mnuSFInputTimeInSec.Checked;  	if (!fInputTimeInSec)  		fNumCol--;  	fExperimentTime = mnuSFExperimentTime.Checked;  	if (!fExperimentTime)  		fNumCol--;  	//разделитель дерево-список файлов  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  	height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  	else {  		double value;  		value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  		splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  	}  	//разделитель главный  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  	width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerMain.SplitterDistance = split_main;  	else {  		double value;  		value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  		splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  	}  	//тип сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	TypeSmooth = Convert.ToInt32 (sfile);  	toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  	if (TypeSmooth == 0) {  		MakeVisibelGaussSmooth (false);  		MakeVisibel2ParamSmooth (true);  	}  	else {  		MakeVisibelGaussSmooth (true);  		MakeVisibel2ParamSmooth (false);  	}  	//параметр + внешний + внутренний шаг  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  	with_diff_parm = 1;  	toolStripTextBoxParam.Text = with_diff_parm.ToString ();  	OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  	toolStripTextBoxOutStep.Text = OutStep.ToString ();  	InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  	toolStripTextBoxInStep.Text = InStep.ToString ();  	//ширина окна сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	currentTextWidth = sfile;  	toolStripTextBoxWidthGauss.Text = currentTextWidth;  	gaussB = Convert.ToDouble (currentTextWidth);  	//число зубьев  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	number_zub = Convert.ToInt32 (sfile);  	//toolStripComboBoxSmooth.SelectedIndex = 0;  	toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  	fconfig.Close ();  	return;  }  catch {  	goto M1;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: try {  	System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  	//дериктория  	home_directory = fconfig.ReadLine ();  	DirectoryInfo di = new DirectoryInfo (home_directory);  	if (di.Exists)  		explorerTreeMain.SelectedPath = home_directory;  	else  		explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  	explorerTreeMain.Refresh ();  	string sfile;  	//позиция+разрешение  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  	posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  	width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  	height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  	bool resolut = false;  	if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  		this.Size = new System.Drawing.Size (width_w' height_w);  		this.Location = new System.Drawing.Point (posX_window' posY_window);  		resolut = true;  	}  	else {  		posX_window = posY_window = 0;  		width_w = Screen.PrimaryScreen.WorkingArea.Width;  		height_w = Screen.PrimaryScreen.WorkingArea.Height;  		this.Size = new System.Drawing.Size (width_w' height_w);  	}  	//настройки меню  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	bool[] bmn = new bool[8];  	string[] smn;  	smn = sfile.Split (' ');  	int i;  	for (i = 0; i < 8; i++)  		bmn [i] = Convert.ToBoolean (smn [i]);  	mnuSA.Checked = bmn [0];  	mnuST.Checked = bmn [1];  	mnuSD.Checked = bmn [2];  	mnuSN.Checked = bmn [3];  	mnuSF.Checked = bmn [4];  	mnuSFExperimentTime.Checked = bmn [5];  	mnuSFKadrsNumber.Checked = bmn [6];  	mnuSFInputTimeInSec.Checked = bmn [7];  	explorerTreeMain.ShowAddressbar = mnuSA.Checked;  	explorerTreeMain.ShowToolbar = mnuST.Checked;  	explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  	explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  	explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  	fKadrsNumber = mnuSFKadrsNumber.Checked;  	if (!fKadrsNumber)  		fNumCol--;  	fInputTimeInSec = mnuSFInputTimeInSec.Checked;  	if (!fInputTimeInSec)  		fNumCol--;  	fExperimentTime = mnuSFExperimentTime.Checked;  	if (!fExperimentTime)  		fNumCol--;  	//разделитель дерево-список файлов  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  	height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  	else {  		double value;  		value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  		splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  	}  	//разделитель главный  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  	width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerMain.SplitterDistance = split_main;  	else {  		double value;  		value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  		splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  	}  	//тип сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	TypeSmooth = Convert.ToInt32 (sfile);  	toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  	if (TypeSmooth == 0) {  		MakeVisibelGaussSmooth (false);  		MakeVisibel2ParamSmooth (true);  	}  	else {  		MakeVisibelGaussSmooth (true);  		MakeVisibel2ParamSmooth (false);  	}  	//параметр + внешний + внутренний шаг  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  	with_diff_parm = 1;  	toolStripTextBoxParam.Text = with_diff_parm.ToString ();  	OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  	toolStripTextBoxOutStep.Text = OutStep.ToString ();  	InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  	toolStripTextBoxInStep.Text = InStep.ToString ();  	//ширина окна сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	currentTextWidth = sfile;  	toolStripTextBoxWidthGauss.Text = currentTextWidth;  	gaussB = Convert.ToDouble (currentTextWidth);  	//число зубьев  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	number_zub = Convert.ToInt32 (sfile);  	//toolStripComboBoxSmooth.SelectedIndex = 0;  	toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  	fconfig.Close ();  	return;  }  catch {  	goto M1;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: try {  	System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  	//дериктория  	home_directory = fconfig.ReadLine ();  	DirectoryInfo di = new DirectoryInfo (home_directory);  	if (di.Exists)  		explorerTreeMain.SelectedPath = home_directory;  	else  		explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  	explorerTreeMain.Refresh ();  	string sfile;  	//позиция+разрешение  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  	posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  	width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  	height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  	bool resolut = false;  	if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  		this.Size = new System.Drawing.Size (width_w' height_w);  		this.Location = new System.Drawing.Point (posX_window' posY_window);  		resolut = true;  	}  	else {  		posX_window = posY_window = 0;  		width_w = Screen.PrimaryScreen.WorkingArea.Width;  		height_w = Screen.PrimaryScreen.WorkingArea.Height;  		this.Size = new System.Drawing.Size (width_w' height_w);  	}  	//настройки меню  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	bool[] bmn = new bool[8];  	string[] smn;  	smn = sfile.Split (' ');  	int i;  	for (i = 0; i < 8; i++)  		bmn [i] = Convert.ToBoolean (smn [i]);  	mnuSA.Checked = bmn [0];  	mnuST.Checked = bmn [1];  	mnuSD.Checked = bmn [2];  	mnuSN.Checked = bmn [3];  	mnuSF.Checked = bmn [4];  	mnuSFExperimentTime.Checked = bmn [5];  	mnuSFKadrsNumber.Checked = bmn [6];  	mnuSFInputTimeInSec.Checked = bmn [7];  	explorerTreeMain.ShowAddressbar = mnuSA.Checked;  	explorerTreeMain.ShowToolbar = mnuST.Checked;  	explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  	explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  	explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  	fKadrsNumber = mnuSFKadrsNumber.Checked;  	if (!fKadrsNumber)  		fNumCol--;  	fInputTimeInSec = mnuSFInputTimeInSec.Checked;  	if (!fInputTimeInSec)  		fNumCol--;  	fExperimentTime = mnuSFExperimentTime.Checked;  	if (!fExperimentTime)  		fNumCol--;  	//разделитель дерево-список файлов  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  	height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  	else {  		double value;  		value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  		splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  	}  	//разделитель главный  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  	width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerMain.SplitterDistance = split_main;  	else {  		double value;  		value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  		splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  	}  	//тип сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	TypeSmooth = Convert.ToInt32 (sfile);  	toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  	if (TypeSmooth == 0) {  		MakeVisibelGaussSmooth (false);  		MakeVisibel2ParamSmooth (true);  	}  	else {  		MakeVisibelGaussSmooth (true);  		MakeVisibel2ParamSmooth (false);  	}  	//параметр + внешний + внутренний шаг  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  	with_diff_parm = 1;  	toolStripTextBoxParam.Text = with_diff_parm.ToString ();  	OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  	toolStripTextBoxOutStep.Text = OutStep.ToString ();  	InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  	toolStripTextBoxInStep.Text = InStep.ToString ();  	//ширина окна сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	currentTextWidth = sfile;  	toolStripTextBoxWidthGauss.Text = currentTextWidth;  	gaussB = Convert.ToDouble (currentTextWidth);  	//число зубьев  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	number_zub = Convert.ToInt32 (sfile);  	//toolStripComboBoxSmooth.SelectedIndex = 0;  	toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  	fconfig.Close ();  	return;  }  catch {  	goto M1;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: try {  	System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  	//дериктория  	home_directory = fconfig.ReadLine ();  	DirectoryInfo di = new DirectoryInfo (home_directory);  	if (di.Exists)  		explorerTreeMain.SelectedPath = home_directory;  	else  		explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  	explorerTreeMain.Refresh ();  	string sfile;  	//позиция+разрешение  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  	posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  	width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  	height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  	bool resolut = false;  	if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  		this.Size = new System.Drawing.Size (width_w' height_w);  		this.Location = new System.Drawing.Point (posX_window' posY_window);  		resolut = true;  	}  	else {  		posX_window = posY_window = 0;  		width_w = Screen.PrimaryScreen.WorkingArea.Width;  		height_w = Screen.PrimaryScreen.WorkingArea.Height;  		this.Size = new System.Drawing.Size (width_w' height_w);  	}  	//настройки меню  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	bool[] bmn = new bool[8];  	string[] smn;  	smn = sfile.Split (' ');  	int i;  	for (i = 0; i < 8; i++)  		bmn [i] = Convert.ToBoolean (smn [i]);  	mnuSA.Checked = bmn [0];  	mnuST.Checked = bmn [1];  	mnuSD.Checked = bmn [2];  	mnuSN.Checked = bmn [3];  	mnuSF.Checked = bmn [4];  	mnuSFExperimentTime.Checked = bmn [5];  	mnuSFKadrsNumber.Checked = bmn [6];  	mnuSFInputTimeInSec.Checked = bmn [7];  	explorerTreeMain.ShowAddressbar = mnuSA.Checked;  	explorerTreeMain.ShowToolbar = mnuST.Checked;  	explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  	explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  	explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  	fKadrsNumber = mnuSFKadrsNumber.Checked;  	if (!fKadrsNumber)  		fNumCol--;  	fInputTimeInSec = mnuSFInputTimeInSec.Checked;  	if (!fInputTimeInSec)  		fNumCol--;  	fExperimentTime = mnuSFExperimentTime.Checked;  	if (!fExperimentTime)  		fNumCol--;  	//разделитель дерево-список файлов  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  	height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  	else {  		double value;  		value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  		splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  	}  	//разделитель главный  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  	width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerMain.SplitterDistance = split_main;  	else {  		double value;  		value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  		splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  	}  	//тип сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	TypeSmooth = Convert.ToInt32 (sfile);  	toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  	if (TypeSmooth == 0) {  		MakeVisibelGaussSmooth (false);  		MakeVisibel2ParamSmooth (true);  	}  	else {  		MakeVisibelGaussSmooth (true);  		MakeVisibel2ParamSmooth (false);  	}  	//параметр + внешний + внутренний шаг  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  	with_diff_parm = 1;  	toolStripTextBoxParam.Text = with_diff_parm.ToString ();  	OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  	toolStripTextBoxOutStep.Text = OutStep.ToString ();  	InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  	toolStripTextBoxInStep.Text = InStep.ToString ();  	//ширина окна сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	currentTextWidth = sfile;  	toolStripTextBoxWidthGauss.Text = currentTextWidth;  	gaussB = Convert.ToDouble (currentTextWidth);  	//число зубьев  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	number_zub = Convert.ToInt32 (sfile);  	//toolStripComboBoxSmooth.SelectedIndex = 0;  	toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  	fconfig.Close ();  	return;  }  catch {  	goto M1;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: try {  	System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  	//дериктория  	home_directory = fconfig.ReadLine ();  	DirectoryInfo di = new DirectoryInfo (home_directory);  	if (di.Exists)  		explorerTreeMain.SelectedPath = home_directory;  	else  		explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  	explorerTreeMain.Refresh ();  	string sfile;  	//позиция+разрешение  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  	posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  	width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  	height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  	bool resolut = false;  	if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  		this.Size = new System.Drawing.Size (width_w' height_w);  		this.Location = new System.Drawing.Point (posX_window' posY_window);  		resolut = true;  	}  	else {  		posX_window = posY_window = 0;  		width_w = Screen.PrimaryScreen.WorkingArea.Width;  		height_w = Screen.PrimaryScreen.WorkingArea.Height;  		this.Size = new System.Drawing.Size (width_w' height_w);  	}  	//настройки меню  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	bool[] bmn = new bool[8];  	string[] smn;  	smn = sfile.Split (' ');  	int i;  	for (i = 0; i < 8; i++)  		bmn [i] = Convert.ToBoolean (smn [i]);  	mnuSA.Checked = bmn [0];  	mnuST.Checked = bmn [1];  	mnuSD.Checked = bmn [2];  	mnuSN.Checked = bmn [3];  	mnuSF.Checked = bmn [4];  	mnuSFExperimentTime.Checked = bmn [5];  	mnuSFKadrsNumber.Checked = bmn [6];  	mnuSFInputTimeInSec.Checked = bmn [7];  	explorerTreeMain.ShowAddressbar = mnuSA.Checked;  	explorerTreeMain.ShowToolbar = mnuST.Checked;  	explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  	explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  	explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  	fKadrsNumber = mnuSFKadrsNumber.Checked;  	if (!fKadrsNumber)  		fNumCol--;  	fInputTimeInSec = mnuSFInputTimeInSec.Checked;  	if (!fInputTimeInSec)  		fNumCol--;  	fExperimentTime = mnuSFExperimentTime.Checked;  	if (!fExperimentTime)  		fNumCol--;  	//разделитель дерево-список файлов  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  	height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  	else {  		double value;  		value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  		splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  	}  	//разделитель главный  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  	width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerMain.SplitterDistance = split_main;  	else {  		double value;  		value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  		splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  	}  	//тип сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	TypeSmooth = Convert.ToInt32 (sfile);  	toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  	if (TypeSmooth == 0) {  		MakeVisibelGaussSmooth (false);  		MakeVisibel2ParamSmooth (true);  	}  	else {  		MakeVisibelGaussSmooth (true);  		MakeVisibel2ParamSmooth (false);  	}  	//параметр + внешний + внутренний шаг  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  	with_diff_parm = 1;  	toolStripTextBoxParam.Text = with_diff_parm.ToString ();  	OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  	toolStripTextBoxOutStep.Text = OutStep.ToString ();  	InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  	toolStripTextBoxInStep.Text = InStep.ToString ();  	//ширина окна сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	currentTextWidth = sfile;  	toolStripTextBoxWidthGauss.Text = currentTextWidth;  	gaussB = Convert.ToDouble (currentTextWidth);  	//число зубьев  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	number_zub = Convert.ToInt32 (sfile);  	//toolStripComboBoxSmooth.SelectedIndex = 0;  	toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  	fconfig.Close ();  	return;  }  catch {  	goto M1;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: try {  	System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  	//дериктория  	home_directory = fconfig.ReadLine ();  	DirectoryInfo di = new DirectoryInfo (home_directory);  	if (di.Exists)  		explorerTreeMain.SelectedPath = home_directory;  	else  		explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  	explorerTreeMain.Refresh ();  	string sfile;  	//позиция+разрешение  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  	posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  	width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  	height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  	bool resolut = false;  	if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  		this.Size = new System.Drawing.Size (width_w' height_w);  		this.Location = new System.Drawing.Point (posX_window' posY_window);  		resolut = true;  	}  	else {  		posX_window = posY_window = 0;  		width_w = Screen.PrimaryScreen.WorkingArea.Width;  		height_w = Screen.PrimaryScreen.WorkingArea.Height;  		this.Size = new System.Drawing.Size (width_w' height_w);  	}  	//настройки меню  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	bool[] bmn = new bool[8];  	string[] smn;  	smn = sfile.Split (' ');  	int i;  	for (i = 0; i < 8; i++)  		bmn [i] = Convert.ToBoolean (smn [i]);  	mnuSA.Checked = bmn [0];  	mnuST.Checked = bmn [1];  	mnuSD.Checked = bmn [2];  	mnuSN.Checked = bmn [3];  	mnuSF.Checked = bmn [4];  	mnuSFExperimentTime.Checked = bmn [5];  	mnuSFKadrsNumber.Checked = bmn [6];  	mnuSFInputTimeInSec.Checked = bmn [7];  	explorerTreeMain.ShowAddressbar = mnuSA.Checked;  	explorerTreeMain.ShowToolbar = mnuST.Checked;  	explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  	explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  	explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  	fKadrsNumber = mnuSFKadrsNumber.Checked;  	if (!fKadrsNumber)  		fNumCol--;  	fInputTimeInSec = mnuSFInputTimeInSec.Checked;  	if (!fInputTimeInSec)  		fNumCol--;  	fExperimentTime = mnuSFExperimentTime.Checked;  	if (!fExperimentTime)  		fNumCol--;  	//разделитель дерево-список файлов  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  	height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  	else {  		double value;  		value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  		splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  	}  	//разделитель главный  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  	width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerMain.SplitterDistance = split_main;  	else {  		double value;  		value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  		splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  	}  	//тип сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	TypeSmooth = Convert.ToInt32 (sfile);  	toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  	if (TypeSmooth == 0) {  		MakeVisibelGaussSmooth (false);  		MakeVisibel2ParamSmooth (true);  	}  	else {  		MakeVisibelGaussSmooth (true);  		MakeVisibel2ParamSmooth (false);  	}  	//параметр + внешний + внутренний шаг  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  	with_diff_parm = 1;  	toolStripTextBoxParam.Text = with_diff_parm.ToString ();  	OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  	toolStripTextBoxOutStep.Text = OutStep.ToString ();  	InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  	toolStripTextBoxInStep.Text = InStep.ToString ();  	//ширина окна сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	currentTextWidth = sfile;  	toolStripTextBoxWidthGauss.Text = currentTextWidth;  	gaussB = Convert.ToDouble (currentTextWidth);  	//число зубьев  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	number_zub = Convert.ToInt32 (sfile);  	//toolStripComboBoxSmooth.SelectedIndex = 0;  	toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  	fconfig.Close ();  	return;  }  catch {  	goto M1;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: try {  	System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  	//дериктория  	home_directory = fconfig.ReadLine ();  	DirectoryInfo di = new DirectoryInfo (home_directory);  	if (di.Exists)  		explorerTreeMain.SelectedPath = home_directory;  	else  		explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  	explorerTreeMain.Refresh ();  	string sfile;  	//позиция+разрешение  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  	posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  	width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  	height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  	bool resolut = false;  	if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  		this.Size = new System.Drawing.Size (width_w' height_w);  		this.Location = new System.Drawing.Point (posX_window' posY_window);  		resolut = true;  	}  	else {  		posX_window = posY_window = 0;  		width_w = Screen.PrimaryScreen.WorkingArea.Width;  		height_w = Screen.PrimaryScreen.WorkingArea.Height;  		this.Size = new System.Drawing.Size (width_w' height_w);  	}  	//настройки меню  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	bool[] bmn = new bool[8];  	string[] smn;  	smn = sfile.Split (' ');  	int i;  	for (i = 0; i < 8; i++)  		bmn [i] = Convert.ToBoolean (smn [i]);  	mnuSA.Checked = bmn [0];  	mnuST.Checked = bmn [1];  	mnuSD.Checked = bmn [2];  	mnuSN.Checked = bmn [3];  	mnuSF.Checked = bmn [4];  	mnuSFExperimentTime.Checked = bmn [5];  	mnuSFKadrsNumber.Checked = bmn [6];  	mnuSFInputTimeInSec.Checked = bmn [7];  	explorerTreeMain.ShowAddressbar = mnuSA.Checked;  	explorerTreeMain.ShowToolbar = mnuST.Checked;  	explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  	explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  	explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  	fKadrsNumber = mnuSFKadrsNumber.Checked;  	if (!fKadrsNumber)  		fNumCol--;  	fInputTimeInSec = mnuSFInputTimeInSec.Checked;  	if (!fInputTimeInSec)  		fNumCol--;  	fExperimentTime = mnuSFExperimentTime.Checked;  	if (!fExperimentTime)  		fNumCol--;  	//разделитель дерево-список файлов  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  	height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  	else {  		double value;  		value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  		splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  	}  	//разделитель главный  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  	width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerMain.SplitterDistance = split_main;  	else {  		double value;  		value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  		splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  	}  	//тип сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	TypeSmooth = Convert.ToInt32 (sfile);  	toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  	if (TypeSmooth == 0) {  		MakeVisibelGaussSmooth (false);  		MakeVisibel2ParamSmooth (true);  	}  	else {  		MakeVisibelGaussSmooth (true);  		MakeVisibel2ParamSmooth (false);  	}  	//параметр + внешний + внутренний шаг  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  	with_diff_parm = 1;  	toolStripTextBoxParam.Text = with_diff_parm.ToString ();  	OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  	toolStripTextBoxOutStep.Text = OutStep.ToString ();  	InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  	toolStripTextBoxInStep.Text = InStep.ToString ();  	//ширина окна сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	currentTextWidth = sfile;  	toolStripTextBoxWidthGauss.Text = currentTextWidth;  	gaussB = Convert.ToDouble (currentTextWidth);  	//число зубьев  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	number_zub = Convert.ToInt32 (sfile);  	//toolStripComboBoxSmooth.SelectedIndex = 0;  	toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  	fconfig.Close ();  	return;  }  catch {  	goto M1;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: try {  	System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  	//дериктория  	home_directory = fconfig.ReadLine ();  	DirectoryInfo di = new DirectoryInfo (home_directory);  	if (di.Exists)  		explorerTreeMain.SelectedPath = home_directory;  	else  		explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  	explorerTreeMain.Refresh ();  	string sfile;  	//позиция+разрешение  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  	posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  	width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  	height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  	bool resolut = false;  	if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  		this.Size = new System.Drawing.Size (width_w' height_w);  		this.Location = new System.Drawing.Point (posX_window' posY_window);  		resolut = true;  	}  	else {  		posX_window = posY_window = 0;  		width_w = Screen.PrimaryScreen.WorkingArea.Width;  		height_w = Screen.PrimaryScreen.WorkingArea.Height;  		this.Size = new System.Drawing.Size (width_w' height_w);  	}  	//настройки меню  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	bool[] bmn = new bool[8];  	string[] smn;  	smn = sfile.Split (' ');  	int i;  	for (i = 0; i < 8; i++)  		bmn [i] = Convert.ToBoolean (smn [i]);  	mnuSA.Checked = bmn [0];  	mnuST.Checked = bmn [1];  	mnuSD.Checked = bmn [2];  	mnuSN.Checked = bmn [3];  	mnuSF.Checked = bmn [4];  	mnuSFExperimentTime.Checked = bmn [5];  	mnuSFKadrsNumber.Checked = bmn [6];  	mnuSFInputTimeInSec.Checked = bmn [7];  	explorerTreeMain.ShowAddressbar = mnuSA.Checked;  	explorerTreeMain.ShowToolbar = mnuST.Checked;  	explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  	explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  	explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  	fKadrsNumber = mnuSFKadrsNumber.Checked;  	if (!fKadrsNumber)  		fNumCol--;  	fInputTimeInSec = mnuSFInputTimeInSec.Checked;  	if (!fInputTimeInSec)  		fNumCol--;  	fExperimentTime = mnuSFExperimentTime.Checked;  	if (!fExperimentTime)  		fNumCol--;  	//разделитель дерево-список файлов  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  	height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  	else {  		double value;  		value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  		splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  	}  	//разделитель главный  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  	width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerMain.SplitterDistance = split_main;  	else {  		double value;  		value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  		splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  	}  	//тип сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	TypeSmooth = Convert.ToInt32 (sfile);  	toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  	if (TypeSmooth == 0) {  		MakeVisibelGaussSmooth (false);  		MakeVisibel2ParamSmooth (true);  	}  	else {  		MakeVisibelGaussSmooth (true);  		MakeVisibel2ParamSmooth (false);  	}  	//параметр + внешний + внутренний шаг  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  	with_diff_parm = 1;  	toolStripTextBoxParam.Text = with_diff_parm.ToString ();  	OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  	toolStripTextBoxOutStep.Text = OutStep.ToString ();  	InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  	toolStripTextBoxInStep.Text = InStep.ToString ();  	//ширина окна сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	currentTextWidth = sfile;  	toolStripTextBoxWidthGauss.Text = currentTextWidth;  	gaussB = Convert.ToDouble (currentTextWidth);  	//число зубьев  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	number_zub = Convert.ToInt32 (sfile);  	//toolStripComboBoxSmooth.SelectedIndex = 0;  	toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  	fconfig.Close ();  	return;  }  catch {  	goto M1;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: try {  	System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  	//дериктория  	home_directory = fconfig.ReadLine ();  	DirectoryInfo di = new DirectoryInfo (home_directory);  	if (di.Exists)  		explorerTreeMain.SelectedPath = home_directory;  	else  		explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  	explorerTreeMain.Refresh ();  	string sfile;  	//позиция+разрешение  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  	posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  	width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  	height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  	bool resolut = false;  	if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  		this.Size = new System.Drawing.Size (width_w' height_w);  		this.Location = new System.Drawing.Point (posX_window' posY_window);  		resolut = true;  	}  	else {  		posX_window = posY_window = 0;  		width_w = Screen.PrimaryScreen.WorkingArea.Width;  		height_w = Screen.PrimaryScreen.WorkingArea.Height;  		this.Size = new System.Drawing.Size (width_w' height_w);  	}  	//настройки меню  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	bool[] bmn = new bool[8];  	string[] smn;  	smn = sfile.Split (' ');  	int i;  	for (i = 0; i < 8; i++)  		bmn [i] = Convert.ToBoolean (smn [i]);  	mnuSA.Checked = bmn [0];  	mnuST.Checked = bmn [1];  	mnuSD.Checked = bmn [2];  	mnuSN.Checked = bmn [3];  	mnuSF.Checked = bmn [4];  	mnuSFExperimentTime.Checked = bmn [5];  	mnuSFKadrsNumber.Checked = bmn [6];  	mnuSFInputTimeInSec.Checked = bmn [7];  	explorerTreeMain.ShowAddressbar = mnuSA.Checked;  	explorerTreeMain.ShowToolbar = mnuST.Checked;  	explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  	explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  	explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  	fKadrsNumber = mnuSFKadrsNumber.Checked;  	if (!fKadrsNumber)  		fNumCol--;  	fInputTimeInSec = mnuSFInputTimeInSec.Checked;  	if (!fInputTimeInSec)  		fNumCol--;  	fExperimentTime = mnuSFExperimentTime.Checked;  	if (!fExperimentTime)  		fNumCol--;  	//разделитель дерево-список файлов  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  	height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  	else {  		double value;  		value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  		splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  	}  	//разделитель главный  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  	width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerMain.SplitterDistance = split_main;  	else {  		double value;  		value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  		splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  	}  	//тип сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	TypeSmooth = Convert.ToInt32 (sfile);  	toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  	if (TypeSmooth == 0) {  		MakeVisibelGaussSmooth (false);  		MakeVisibel2ParamSmooth (true);  	}  	else {  		MakeVisibelGaussSmooth (true);  		MakeVisibel2ParamSmooth (false);  	}  	//параметр + внешний + внутренний шаг  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  	with_diff_parm = 1;  	toolStripTextBoxParam.Text = with_diff_parm.ToString ();  	OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  	toolStripTextBoxOutStep.Text = OutStep.ToString ();  	InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  	toolStripTextBoxInStep.Text = InStep.ToString ();  	//ширина окна сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	currentTextWidth = sfile;  	toolStripTextBoxWidthGauss.Text = currentTextWidth;  	gaussB = Convert.ToDouble (currentTextWidth);  	//число зубьев  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	number_zub = Convert.ToInt32 (sfile);  	//toolStripComboBoxSmooth.SelectedIndex = 0;  	toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  	fconfig.Close ();  	return;  }  catch {  	goto M1;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: try {  	System.IO.StreamReader fconfig = new System.IO.StreamReader (@"config"' System.Text.Encoding.GetEncoding ("windows-1251"));  	//дериктория  	home_directory = fconfig.ReadLine ();  	DirectoryInfo di = new DirectoryInfo (home_directory);  	if (di.Exists)  		explorerTreeMain.SelectedPath = home_directory;  	else  		explorerTreeMain.SelectedPath = System.Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments);  	explorerTreeMain.Refresh ();  	string sfile;  	//позиция+разрешение  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	posX_window = Convert.ToInt32 (sfile.Split (' ') [0]);  	posY_window = Convert.ToInt32 (sfile.Split (' ') [1]);  	width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  	height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  	bool resolut = false;  	if (posX_window >= 0 && (posX_window + width_w) <= Screen.PrimaryScreen.WorkingArea.Width && posY_window >= 0 && (posY_window + height_w) <= Screen.PrimaryScreen.WorkingArea.Height) {  		this.Size = new System.Drawing.Size (width_w' height_w);  		this.Location = new System.Drawing.Point (posX_window' posY_window);  		resolut = true;  	}  	else {  		posX_window = posY_window = 0;  		width_w = Screen.PrimaryScreen.WorkingArea.Width;  		height_w = Screen.PrimaryScreen.WorkingArea.Height;  		this.Size = new System.Drawing.Size (width_w' height_w);  	}  	//настройки меню  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	bool[] bmn = new bool[8];  	string[] smn;  	smn = sfile.Split (' ');  	int i;  	for (i = 0; i < 8; i++)  		bmn [i] = Convert.ToBoolean (smn [i]);  	mnuSA.Checked = bmn [0];  	mnuST.Checked = bmn [1];  	mnuSD.Checked = bmn [2];  	mnuSN.Checked = bmn [3];  	mnuSF.Checked = bmn [4];  	mnuSFExperimentTime.Checked = bmn [5];  	mnuSFKadrsNumber.Checked = bmn [6];  	mnuSFInputTimeInSec.Checked = bmn [7];  	explorerTreeMain.ShowAddressbar = mnuSA.Checked;  	explorerTreeMain.ShowToolbar = mnuST.Checked;  	explorerTreeMain.ShowMyDocuments = mnuSD.Checked;  	explorerTreeMain.ShowMyNetwork = mnuSN.Checked;  	explorerTreeMain.ShowMyFavorites = mnuSF.Checked;  	fKadrsNumber = mnuSFKadrsNumber.Checked;  	if (!fKadrsNumber)  		fNumCol--;  	fInputTimeInSec = mnuSFInputTimeInSec.Checked;  	if (!fInputTimeInSec)  		fNumCol--;  	fExperimentTime = mnuSFExperimentTime.Checked;  	if (!fExperimentTime)  		fNumCol--;  	//разделитель дерево-список файлов  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [0]);  	height_split_tree_file_list = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerTreeFilePath.SplitterDistance = split_tree_file_list;  	else {  		double value;  		value = (double)split_tree_file_list / (double)height_split_tree_file_list * (double)splitContainerTreeFilePath.Height;  		splitContainerTreeFilePath.SplitterDistance = Convert.ToInt32 (value);  	}  	//разделитель главный  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	split_main = Convert.ToInt32 (sfile.Split (' ') [0]);  	width_split_main = Convert.ToInt32 (sfile.Split (' ') [1]);  	if (resolut)  		splitContainerMain.SplitterDistance = split_main;  	else {  		double value;  		value = (double)split_main / (double)width_split_main * (double)splitContainerMain.Width;  		splitContainerMain.SplitterDistance = Convert.ToInt32 (value);  	}  	//тип сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	TypeSmooth = Convert.ToInt32 (sfile);  	toolStripComboBoxSmooth.SelectedIndex = TypeSmooth;  	if (TypeSmooth == 0) {  		MakeVisibelGaussSmooth (false);  		MakeVisibel2ParamSmooth (true);  	}  	else {  		MakeVisibelGaussSmooth (true);  		MakeVisibel2ParamSmooth (false);  	}  	//параметр + внешний + внутренний шаг  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	with_diff_parm = Convert.ToInt32 (sfile.Split (' ') [0]);  	with_diff_parm = 1;  	toolStripTextBoxParam.Text = with_diff_parm.ToString ();  	OutStep = Convert.ToInt32 (sfile.Split (' ') [1]);  	toolStripTextBoxOutStep.Text = OutStep.ToString ();  	InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  	toolStripTextBoxInStep.Text = InStep.ToString ();  	//ширина окна сглаживания  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	currentTextWidth = sfile;  	toolStripTextBoxWidthGauss.Text = currentTextWidth;  	gaussB = Convert.ToDouble (currentTextWidth);  	//число зубьев  	sfile = fconfig.ReadLine ();  	if (sfile == null)  		goto M1;  	number_zub = Convert.ToInt32 (sfile);  	//toolStripComboBoxSmooth.SelectedIndex = 0;  	toolStripComboBoxSelectTypeSeach.SelectedIndex = 0;  	fconfig.Close ();  	return;  }  catch {  	goto M1;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: width_w = Convert.ToInt32 (sfile.Split (' ') [2]);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: height_w = Convert.ToInt32 (sfile.Split (' ') [3]);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: for (i = 0; i < 8; i++)  	bmn [i] = Convert.ToBoolean (smn [i]);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: mnuSD.Checked = bmn [2];  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: mnuSN.Checked = bmn [3];  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: mnuSF.Checked = bmn [4];  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: mnuSFExperimentTime.Checked = bmn [5];  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: mnuSFKadrsNumber.Checked = bmn [6];  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: mnuSFInputTimeInSec.Checked = bmn [7];  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,LoadParametrs,The following statement contains a magic number: InStep = Convert.ToInt32 (sfile.Split (' ') [2]);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,ClearDrawArea,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,ClearDrawArea,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,ClearDrawArea,The following statement contains a magic number: Gl.glClearColor (255' 255' 255' 1);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,plus_Click,The following statement contains a magic number: if (my_scale < 32) {  	my_scale = my_scale * 2;  	cl2d.Zoom_plus ();  	hScrollBarGraph.Maximum = cl2d.get_max_move ();  	if (cl2d.get_current_pos () >= 0)  		hScrollBarGraph.Value = cl2d.get_current_pos ();  	else  		hScrollBarGraph.Value = 0;  	OpenGlControlGraph.Invalidate ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,plus_Click,The following statement contains a magic number: if (my_scale < 32) {  	my_scale = my_scale * 2;  	cl2d.Zoom_plus ();  	hScrollBarGraph.Maximum = cl2d.get_max_move ();  	if (cl2d.get_current_pos () >= 0)  		hScrollBarGraph.Value = cl2d.get_current_pos ();  	else  		hScrollBarGraph.Value = 0;  	OpenGlControlGraph.Invalidate ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,plus_Click,The following statement contains a magic number: my_scale = my_scale * 2;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,minus_Click,The following statement contains a magic number: if (my_scale > 1) {  	my_scale = my_scale / 2;  	cl2d.Zoom_minus ();  	hScrollBarGraph.Maximum = cl2d.get_max_move ();  	if (cl2d.get_current_pos () >= 0)  		hScrollBarGraph.Value = cl2d.get_current_pos ();  	else  		hScrollBarGraph.Value = 0;  	OpenGlControlGraph.Invalidate ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,minus_Click,The following statement contains a magic number: my_scale = my_scale / 2;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,toolStripButtonGraphZoomIn_Click,The following statement contains a magic number: if (flag_graph)  	if (my_scale < 512) {  		my_scale = my_scale * 2;  		cl2d.Zoom_plus ();  		hScrollBarGraph.Maximum = cl2d.get_max_move ();  		if (cl2d.get_current_pos () >= 0)  			hScrollBarGraph.Value = cl2d.get_current_pos ();  		else  			hScrollBarGraph.Value = 0;  		OpenGlControlGraph.Invalidate ();  	}  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,toolStripButtonGraphZoomIn_Click,The following statement contains a magic number: if (flag_graph)  	if (my_scale < 512) {  		my_scale = my_scale * 2;  		cl2d.Zoom_plus ();  		hScrollBarGraph.Maximum = cl2d.get_max_move ();  		if (cl2d.get_current_pos () >= 0)  			hScrollBarGraph.Value = cl2d.get_current_pos ();  		else  			hScrollBarGraph.Value = 0;  		OpenGlControlGraph.Invalidate ();  	}  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,toolStripButtonGraphZoomIn_Click,The following statement contains a magic number: if (my_scale < 512) {  	my_scale = my_scale * 2;  	cl2d.Zoom_plus ();  	hScrollBarGraph.Maximum = cl2d.get_max_move ();  	if (cl2d.get_current_pos () >= 0)  		hScrollBarGraph.Value = cl2d.get_current_pos ();  	else  		hScrollBarGraph.Value = 0;  	OpenGlControlGraph.Invalidate ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,toolStripButtonGraphZoomIn_Click,The following statement contains a magic number: if (my_scale < 512) {  	my_scale = my_scale * 2;  	cl2d.Zoom_plus ();  	hScrollBarGraph.Maximum = cl2d.get_max_move ();  	if (cl2d.get_current_pos () >= 0)  		hScrollBarGraph.Value = cl2d.get_current_pos ();  	else  		hScrollBarGraph.Value = 0;  	OpenGlControlGraph.Invalidate ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,toolStripButtonGraphZoomIn_Click,The following statement contains a magic number: my_scale = my_scale * 2;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,toolStripButtonGraphZoomOut_Click,The following statement contains a magic number: if (flag_graph)  	if (my_scale > 1) {  		my_scale = my_scale / 2;  		cl2d.Zoom_minus ();  		hScrollBarGraph.Maximum = cl2d.get_max_move ();  		if (cl2d.get_current_pos () >= 0)  			hScrollBarGraph.Value = cl2d.get_current_pos ();  		else  			hScrollBarGraph.Value = 0;  		OpenGlControlGraph.Invalidate ();  	}  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,toolStripButtonGraphZoomOut_Click,The following statement contains a magic number: if (my_scale > 1) {  	my_scale = my_scale / 2;  	cl2d.Zoom_minus ();  	hScrollBarGraph.Maximum = cl2d.get_max_move ();  	if (cl2d.get_current_pos () >= 0)  		hScrollBarGraph.Value = cl2d.get_current_pos ();  	else  		hScrollBarGraph.Value = 0;  	OpenGlControlGraph.Invalidate ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,toolStripButtonGraphZoomOut_Click,The following statement contains a magic number: my_scale = my_scale / 2;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,SaveGraph,The following statement contains a magic number: if (flag_graph) {  	saveFileDialogGraph.FileName = name_file_graph;  	Bitmap bmpsv = cl2d.GetBitmap ();  	if (saveFileDialogGraph.ShowDialog () == DialogResult.OK) {  		//name_file_graph=saveFileDialogBmp.  		bmpsv.Save (saveFileDialogGraph.FileName);  		name_file_graph = Path.GetFileName (saveFileDialogGraph.FileName);  		name_file_graph = name_file_graph.Remove (name_file_graph.Length - 4);  	}  	bmpsv.Dispose ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,SaveGraph,The following statement contains a magic number: if (saveFileDialogGraph.ShowDialog () == DialogResult.OK) {  	//name_file_graph=saveFileDialogBmp.  	bmpsv.Save (saveFileDialogGraph.FileName);  	name_file_graph = Path.GetFileName (saveFileDialogGraph.FileName);  	name_file_graph = name_file_graph.Remove (name_file_graph.Length - 4);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,SaveGraph,The following statement contains a magic number: name_file_graph = name_file_graph.Remove (name_file_graph.Length - 4);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: par.DefaultCharFormat.FontSize = 20;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: par.DefaultCharFormat.FontSize = 15;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: img.Width = 640;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: img.Width = 480;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: par.DefaultCharFormat.FontSize = 15;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: img.Width = 640;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: img.Width = 480;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: par.DefaultCharFormat.FontSize = 15;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: img.Width = 640;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: img.Width = 480;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: par.DefaultCharFormat.FontSize = 15;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: img.Width = 640;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: img.Width = 480;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: par.DefaultCharFormat.FontSize = 15;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: img.Width = 640;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: img.Width = 480;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (calc_record.min_loc != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Циклы подачи";  	if (TypeAlgorithmFindingPeriods == 0)  		table = doc.addTable (calc_record.t_min_loc.Length' 18);  	else {  		table = doc.addTable (calc_record.t_min_loc.Length' 3);  		name_minum = @"Синхроимпульс";  	}  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	table.cell (0' 0).Width = 50;  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = name_minum;  	table.cell (0' 1).Width = 40;  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"";  	table.cell (0' 2).Width = 70;  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"";  	table.merge (0' 0' 1' 3);  	if (TypeAlgorithmFindingPeriods == 0) {  		table.cell (0' 3).Width = 50;  		table.cell (0' 3).Alignment = Align.Left;  		table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 3).addParagraph ().Text = @"Максимум";  		table.cell (0' 4).Width = 40;  		table.cell (0' 4).Alignment = Align.Left;  		table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 4).addParagraph ().Text = @"";  		table.cell (0' 5).Width = 70;  		table.cell (0' 5).Alignment = Align.Left;  		table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  		table.cell (0' 5).addParagraph ().Text = @"";  		table.merge (0' 3' 1' 3);  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (0' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (0' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (0' j).Width = 70;  		table.cell (0' j).Alignment = Align.Left;  		table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  	}  	for (int j = 6; j < table.ColCount; j++) {  		if (j % 3 == 0) {  			table.merge (0' j' 1' 3);  			table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  		}  		else  			table.cell (0' j).addParagraph ().Text = @"";  	}  	int i = 1;  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j % 3 == 0) {  			table.cell (i' j).Width = 50;  			table.cell (i' j).addParagraph ().Text = "№ импульса";  		}  		else if ((j - 1) % 3 == 0) {  			table.cell (i' j).Width = 40;  			table.cell (i' j).addParagraph ().Text = "Время' с";  		}  		else if ((j - 2) % 3 == 0) {  			table.cell (i' j).Width = 70;  			table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  		}  	}  	for (i = 2; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			if (j % 3 == 0)  				table.cell (i' j).Width = 50;  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).Width = 40;  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).Width = 70;  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			if (j < 3) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  			}  			if (j < 6 && j > 2) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  			}  			else if (j >= 6) {  				if (j % 3 == 0)  					table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  				else if ((j - 1) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  				else if ((j - 2) % 3 == 0)  					table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  			}  		}  		table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  		table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  	}  	par = doc.addParagraph ();  	if (TypeAlgorithmFindingPeriods == 0)  		par.Text = @"Поиск событий осуществлен по минимуму и максимуму.";  	if (TypeAlgorithmFindingPeriods == 1)  		par.Text = @"Поиск событий осуществлен с использованием второго канала.";  	if (TypeAlgorithmFindingPeriods == 2)  		par.Text = @"События установлены вручную.";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: par.DefaultCharFormat.FontSize = 15;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0)  	table = doc.addTable (calc_record.t_min_loc.Length' 18);  else {  	table = doc.addTable (calc_record.t_min_loc.Length' 3);  	name_minum = @"Синхроимпульс";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0)  	table = doc.addTable (calc_record.t_min_loc.Length' 18);  else {  	table = doc.addTable (calc_record.t_min_loc.Length' 3);  	name_minum = @"Синхроимпульс";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table = doc.addTable (calc_record.t_min_loc.Length' 18);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table = doc.addTable (calc_record.t_min_loc.Length' 3);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.Margins [Direction.Bottom] = 20;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.DefaultCharFormat.FontSize = 8;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 0).Width = 50;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 1).Width = 40;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 2).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 2).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 2).Alignment = Align.Left;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 2).addParagraph ().Text = @"";  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.merge (0' 0' 1' 3);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0) {  	table.cell (0' 3).Width = 50;  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Максимум";  	table.cell (0' 4).Width = 40;  	table.cell (0' 4).Alignment = Align.Left;  	table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 4).addParagraph ().Text = @"";  	table.cell (0' 5).Width = 70;  	table.cell (0' 5).Alignment = Align.Left;  	table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 5).addParagraph ().Text = @"";  	table.merge (0' 3' 1' 3);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0) {  	table.cell (0' 3).Width = 50;  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Максимум";  	table.cell (0' 4).Width = 40;  	table.cell (0' 4).Alignment = Align.Left;  	table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 4).addParagraph ().Text = @"";  	table.cell (0' 5).Width = 70;  	table.cell (0' 5).Alignment = Align.Left;  	table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 5).addParagraph ().Text = @"";  	table.merge (0' 3' 1' 3);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0) {  	table.cell (0' 3).Width = 50;  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Максимум";  	table.cell (0' 4).Width = 40;  	table.cell (0' 4).Alignment = Align.Left;  	table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 4).addParagraph ().Text = @"";  	table.cell (0' 5).Width = 70;  	table.cell (0' 5).Alignment = Align.Left;  	table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 5).addParagraph ().Text = @"";  	table.merge (0' 3' 1' 3);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0) {  	table.cell (0' 3).Width = 50;  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Максимум";  	table.cell (0' 4).Width = 40;  	table.cell (0' 4).Alignment = Align.Left;  	table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 4).addParagraph ().Text = @"";  	table.cell (0' 5).Width = 70;  	table.cell (0' 5).Alignment = Align.Left;  	table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 5).addParagraph ().Text = @"";  	table.merge (0' 3' 1' 3);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0) {  	table.cell (0' 3).Width = 50;  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Максимум";  	table.cell (0' 4).Width = 40;  	table.cell (0' 4).Alignment = Align.Left;  	table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 4).addParagraph ().Text = @"";  	table.cell (0' 5).Width = 70;  	table.cell (0' 5).Alignment = Align.Left;  	table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 5).addParagraph ().Text = @"";  	table.merge (0' 3' 1' 3);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0) {  	table.cell (0' 3).Width = 50;  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Максимум";  	table.cell (0' 4).Width = 40;  	table.cell (0' 4).Alignment = Align.Left;  	table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 4).addParagraph ().Text = @"";  	table.cell (0' 5).Width = 70;  	table.cell (0' 5).Alignment = Align.Left;  	table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 5).addParagraph ().Text = @"";  	table.merge (0' 3' 1' 3);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0) {  	table.cell (0' 3).Width = 50;  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Максимум";  	table.cell (0' 4).Width = 40;  	table.cell (0' 4).Alignment = Align.Left;  	table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 4).addParagraph ().Text = @"";  	table.cell (0' 5).Width = 70;  	table.cell (0' 5).Alignment = Align.Left;  	table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 5).addParagraph ().Text = @"";  	table.merge (0' 3' 1' 3);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0) {  	table.cell (0' 3).Width = 50;  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Максимум";  	table.cell (0' 4).Width = 40;  	table.cell (0' 4).Alignment = Align.Left;  	table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 4).addParagraph ().Text = @"";  	table.cell (0' 5).Width = 70;  	table.cell (0' 5).Alignment = Align.Left;  	table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 5).addParagraph ().Text = @"";  	table.merge (0' 3' 1' 3);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0) {  	table.cell (0' 3).Width = 50;  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Максимум";  	table.cell (0' 4).Width = 40;  	table.cell (0' 4).Alignment = Align.Left;  	table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 4).addParagraph ().Text = @"";  	table.cell (0' 5).Width = 70;  	table.cell (0' 5).Alignment = Align.Left;  	table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 5).addParagraph ().Text = @"";  	table.merge (0' 3' 1' 3);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0) {  	table.cell (0' 3).Width = 50;  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Максимум";  	table.cell (0' 4).Width = 40;  	table.cell (0' 4).Alignment = Align.Left;  	table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 4).addParagraph ().Text = @"";  	table.cell (0' 5).Width = 70;  	table.cell (0' 5).Alignment = Align.Left;  	table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 5).addParagraph ().Text = @"";  	table.merge (0' 3' 1' 3);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0) {  	table.cell (0' 3).Width = 50;  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Максимум";  	table.cell (0' 4).Width = 40;  	table.cell (0' 4).Alignment = Align.Left;  	table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 4).addParagraph ().Text = @"";  	table.cell (0' 5).Width = 70;  	table.cell (0' 5).Alignment = Align.Left;  	table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 5).addParagraph ().Text = @"";  	table.merge (0' 3' 1' 3);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0) {  	table.cell (0' 3).Width = 50;  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Максимум";  	table.cell (0' 4).Width = 40;  	table.cell (0' 4).Alignment = Align.Left;  	table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 4).addParagraph ().Text = @"";  	table.cell (0' 5).Width = 70;  	table.cell (0' 5).Alignment = Align.Left;  	table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 5).addParagraph ().Text = @"";  	table.merge (0' 3' 1' 3);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0) {  	table.cell (0' 3).Width = 50;  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Максимум";  	table.cell (0' 4).Width = 40;  	table.cell (0' 4).Alignment = Align.Left;  	table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 4).addParagraph ().Text = @"";  	table.cell (0' 5).Width = 70;  	table.cell (0' 5).Alignment = Align.Left;  	table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 5).addParagraph ().Text = @"";  	table.merge (0' 3' 1' 3);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0) {  	table.cell (0' 3).Width = 50;  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Максимум";  	table.cell (0' 4).Width = 40;  	table.cell (0' 4).Alignment = Align.Left;  	table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 4).addParagraph ().Text = @"";  	table.cell (0' 5).Width = 70;  	table.cell (0' 5).Alignment = Align.Left;  	table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 5).addParagraph ().Text = @"";  	table.merge (0' 3' 1' 3);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0) {  	table.cell (0' 3).Width = 50;  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Максимум";  	table.cell (0' 4).Width = 40;  	table.cell (0' 4).Alignment = Align.Left;  	table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 4).addParagraph ().Text = @"";  	table.cell (0' 5).Width = 70;  	table.cell (0' 5).Alignment = Align.Left;  	table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 5).addParagraph ().Text = @"";  	table.merge (0' 3' 1' 3);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0) {  	table.cell (0' 3).Width = 50;  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Максимум";  	table.cell (0' 4).Width = 40;  	table.cell (0' 4).Alignment = Align.Left;  	table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 4).addParagraph ().Text = @"";  	table.cell (0' 5).Width = 70;  	table.cell (0' 5).Alignment = Align.Left;  	table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 5).addParagraph ().Text = @"";  	table.merge (0' 3' 1' 3);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 0) {  	table.cell (0' 3).Width = 50;  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Максимум";  	table.cell (0' 4).Width = 40;  	table.cell (0' 4).Alignment = Align.Left;  	table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 4).addParagraph ().Text = @"";  	table.cell (0' 5).Width = 70;  	table.cell (0' 5).Alignment = Align.Left;  	table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 5).addParagraph ().Text = @"";  	table.merge (0' 3' 1' 3);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 3).Width = 50;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 3).Width = 50;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 3).Alignment = Align.Left;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 3).addParagraph ().Text = @"Максимум";  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 4).Width = 40;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 4).Width = 40;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 4).Alignment = Align.Left;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 4).AlignmentVertical = AlignVertical.Middle;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 4).addParagraph ().Text = @"";  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 5).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 5).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 5).Alignment = Align.Left;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 5).AlignmentVertical = AlignVertical.Middle;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 5).addParagraph ().Text = @"";  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.merge (0' 3' 1' 3);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.merge (0' 3' 1' 3);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 6; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (0' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (0' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (0' j).Width = 70;  	table.cell (0' j).Alignment = Align.Left;  	table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 6; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (0' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (0' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (0' j).Width = 70;  	table.cell (0' j).Alignment = Align.Left;  	table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 6; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (0' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (0' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (0' j).Width = 70;  	table.cell (0' j).Alignment = Align.Left;  	table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 6; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (0' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (0' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (0' j).Width = 70;  	table.cell (0' j).Alignment = Align.Left;  	table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 6; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (0' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (0' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (0' j).Width = 70;  	table.cell (0' j).Alignment = Align.Left;  	table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 6; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (0' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (0' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (0' j).Width = 70;  	table.cell (0' j).Alignment = Align.Left;  	table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 6; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (0' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (0' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (0' j).Width = 70;  	table.cell (0' j).Alignment = Align.Left;  	table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 6; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (0' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (0' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (0' j).Width = 70;  	table.cell (0' j).Alignment = Align.Left;  	table.cell (0' j).AlignmentVertical = AlignVertical.Middle;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (0' j).Width = 50;  else if ((j - 1) % 3 == 0)  	table.cell (0' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (0' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (0' j).Width = 50;  else if ((j - 1) % 3 == 0)  	table.cell (0' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (0' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (0' j).Width = 50;  else if ((j - 1) % 3 == 0)  	table.cell (0' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (0' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (0' j).Width = 50;  else if ((j - 1) % 3 == 0)  	table.cell (0' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (0' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (0' j).Width = 50;  else if ((j - 1) % 3 == 0)  	table.cell (0' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (0' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (0' j).Width = 50;  else if ((j - 1) % 3 == 0)  	table.cell (0' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (0' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (0' j).Width = 50;  else if ((j - 1) % 3 == 0)  	table.cell (0' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (0' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' j).Width = 50;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (0' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (0' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (0' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (0' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (0' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (0' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (0' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (0' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (0' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (0' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' j).Width = 40;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (0' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (0' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (0' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 6; j < table.ColCount; j++) {  	if (j % 3 == 0) {  		table.merge (0' j' 1' 3);  		table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  	}  	else  		table.cell (0' j).addParagraph ().Text = @"";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 6; j < table.ColCount; j++) {  	if (j % 3 == 0) {  		table.merge (0' j' 1' 3);  		table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  	}  	else  		table.cell (0' j).addParagraph ().Text = @"";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 6; j < table.ColCount; j++) {  	if (j % 3 == 0) {  		table.merge (0' j' 1' 3);  		table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  	}  	else  		table.cell (0' j).addParagraph ().Text = @"";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 6; j < table.ColCount; j++) {  	if (j % 3 == 0) {  		table.merge (0' j' 1' 3);  		table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  	}  	else  		table.cell (0' j).addParagraph ().Text = @"";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 6; j < table.ColCount; j++) {  	if (j % 3 == 0) {  		table.merge (0' j' 1' 3);  		table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  	}  	else  		table.cell (0' j).addParagraph ().Text = @"";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0) {  	table.merge (0' j' 1' 3);  	table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  }  else  	table.cell (0' j).addParagraph ().Text = @"";  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0) {  	table.merge (0' j' 1' 3);  	table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  }  else  	table.cell (0' j).addParagraph ().Text = @"";  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0) {  	table.merge (0' j' 1' 3);  	table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  }  else  	table.cell (0' j).addParagraph ().Text = @"";  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0) {  	table.merge (0' j' 1' 3);  	table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  }  else  	table.cell (0' j).addParagraph ().Text = @"";  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.merge (0' j' 1' 3);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' j).addParagraph ().Text = column_name [j / 3 - 2];  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j % 3 == 0) {  		table.cell (i' j).Width = 50;  		table.cell (i' j).addParagraph ().Text = "№ импульса";  	}  	else if ((j - 1) % 3 == 0) {  		table.cell (i' j).Width = 40;  		table.cell (i' j).addParagraph ().Text = "Время' с";  	}  	else if ((j - 2) % 3 == 0) {  		table.cell (i' j).Width = 70;  		table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j % 3 == 0) {  		table.cell (i' j).Width = 50;  		table.cell (i' j).addParagraph ().Text = "№ импульса";  	}  	else if ((j - 1) % 3 == 0) {  		table.cell (i' j).Width = 40;  		table.cell (i' j).addParagraph ().Text = "Время' с";  	}  	else if ((j - 2) % 3 == 0) {  		table.cell (i' j).Width = 70;  		table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j % 3 == 0) {  		table.cell (i' j).Width = 50;  		table.cell (i' j).addParagraph ().Text = "№ импульса";  	}  	else if ((j - 1) % 3 == 0) {  		table.cell (i' j).Width = 40;  		table.cell (i' j).addParagraph ().Text = "Время' с";  	}  	else if ((j - 2) % 3 == 0) {  		table.cell (i' j).Width = 70;  		table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j % 3 == 0) {  		table.cell (i' j).Width = 50;  		table.cell (i' j).addParagraph ().Text = "№ импульса";  	}  	else if ((j - 1) % 3 == 0) {  		table.cell (i' j).Width = 40;  		table.cell (i' j).addParagraph ().Text = "Время' с";  	}  	else if ((j - 2) % 3 == 0) {  		table.cell (i' j).Width = 70;  		table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j % 3 == 0) {  		table.cell (i' j).Width = 50;  		table.cell (i' j).addParagraph ().Text = "№ импульса";  	}  	else if ((j - 1) % 3 == 0) {  		table.cell (i' j).Width = 40;  		table.cell (i' j).addParagraph ().Text = "Время' с";  	}  	else if ((j - 2) % 3 == 0) {  		table.cell (i' j).Width = 70;  		table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j % 3 == 0) {  		table.cell (i' j).Width = 50;  		table.cell (i' j).addParagraph ().Text = "№ импульса";  	}  	else if ((j - 1) % 3 == 0) {  		table.cell (i' j).Width = 40;  		table.cell (i' j).addParagraph ().Text = "Время' с";  	}  	else if ((j - 2) % 3 == 0) {  		table.cell (i' j).Width = 70;  		table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j % 3 == 0) {  		table.cell (i' j).Width = 50;  		table.cell (i' j).addParagraph ().Text = "№ импульса";  	}  	else if ((j - 1) % 3 == 0) {  		table.cell (i' j).Width = 40;  		table.cell (i' j).addParagraph ().Text = "Время' с";  	}  	else if ((j - 2) % 3 == 0) {  		table.cell (i' j).Width = 70;  		table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0) {  	table.cell (i' j).Width = 50;  	table.cell (i' j).addParagraph ().Text = "№ импульса";  }  else if ((j - 1) % 3 == 0) {  	table.cell (i' j).Width = 40;  	table.cell (i' j).addParagraph ().Text = "Время' с";  }  else if ((j - 2) % 3 == 0) {  	table.cell (i' j).Width = 70;  	table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0) {  	table.cell (i' j).Width = 50;  	table.cell (i' j).addParagraph ().Text = "№ импульса";  }  else if ((j - 1) % 3 == 0) {  	table.cell (i' j).Width = 40;  	table.cell (i' j).addParagraph ().Text = "Время' с";  }  else if ((j - 2) % 3 == 0) {  	table.cell (i' j).Width = 70;  	table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0) {  	table.cell (i' j).Width = 50;  	table.cell (i' j).addParagraph ().Text = "№ импульса";  }  else if ((j - 1) % 3 == 0) {  	table.cell (i' j).Width = 40;  	table.cell (i' j).addParagraph ().Text = "Время' с";  }  else if ((j - 2) % 3 == 0) {  	table.cell (i' j).Width = 70;  	table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0) {  	table.cell (i' j).Width = 50;  	table.cell (i' j).addParagraph ().Text = "№ импульса";  }  else if ((j - 1) % 3 == 0) {  	table.cell (i' j).Width = 40;  	table.cell (i' j).addParagraph ().Text = "Время' с";  }  else if ((j - 2) % 3 == 0) {  	table.cell (i' j).Width = 70;  	table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0) {  	table.cell (i' j).Width = 50;  	table.cell (i' j).addParagraph ().Text = "№ импульса";  }  else if ((j - 1) % 3 == 0) {  	table.cell (i' j).Width = 40;  	table.cell (i' j).addParagraph ().Text = "Время' с";  }  else if ((j - 2) % 3 == 0) {  	table.cell (i' j).Width = 70;  	table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0) {  	table.cell (i' j).Width = 50;  	table.cell (i' j).addParagraph ().Text = "№ импульса";  }  else if ((j - 1) % 3 == 0) {  	table.cell (i' j).Width = 40;  	table.cell (i' j).addParagraph ().Text = "Время' с";  }  else if ((j - 2) % 3 == 0) {  	table.cell (i' j).Width = 70;  	table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0) {  	table.cell (i' j).Width = 50;  	table.cell (i' j).addParagraph ().Text = "№ импульса";  }  else if ((j - 1) % 3 == 0) {  	table.cell (i' j).Width = 40;  	table.cell (i' j).addParagraph ().Text = "Время' с";  }  else if ((j - 2) % 3 == 0) {  	table.cell (i' j).Width = 70;  	table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).Width = 50;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0) {  	table.cell (i' j).Width = 40;  	table.cell (i' j).addParagraph ().Text = "Время' с";  }  else if ((j - 2) % 3 == 0) {  	table.cell (i' j).Width = 70;  	table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0) {  	table.cell (i' j).Width = 40;  	table.cell (i' j).addParagraph ().Text = "Время' с";  }  else if ((j - 2) % 3 == 0) {  	table.cell (i' j).Width = 70;  	table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0) {  	table.cell (i' j).Width = 40;  	table.cell (i' j).addParagraph ().Text = "Время' с";  }  else if ((j - 2) % 3 == 0) {  	table.cell (i' j).Width = 70;  	table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0) {  	table.cell (i' j).Width = 40;  	table.cell (i' j).addParagraph ().Text = "Время' с";  }  else if ((j - 2) % 3 == 0) {  	table.cell (i' j).Width = 70;  	table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0) {  	table.cell (i' j).Width = 40;  	table.cell (i' j).addParagraph ().Text = "Время' с";  }  else if ((j - 2) % 3 == 0) {  	table.cell (i' j).Width = 70;  	table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).Width = 40;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0) {  	table.cell (i' j).Width = 70;  	table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0) {  	table.cell (i' j).Width = 70;  	table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0) {  	table.cell (i' j).Width = 70;  	table.cell (i' j).addParagraph ().Text = "Частота' об/мин";  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 2; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		if (j % 3 == 0)  			table.cell (i' j).Width = 50;  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).Width = 40;  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).Width = 70;  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		if (j < 3) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  		}  		if (j < 6 && j > 2) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  		}  		else if (j >= 6) {  			if (j % 3 == 0)  				table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  			else if ((j - 1) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  			else if ((j - 2) % 3 == 0)  				table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: i = 2
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	if (j % 3 == 0)  		table.cell (i' j).Width = 50;  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).Width = 40;  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).Width = 70;  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	if (j < 3) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  	}  	if (j < 6 && j > 2) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  	}  	else if (j >= 6) {  		if (j % 3 == 0)  			table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  		else if ((j - 1) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  		else if ((j - 2) % 3 == 0)  			table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).Width = 50;  else if ((j - 1) % 3 == 0)  	table.cell (i' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (i' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).Width = 50;  else if ((j - 1) % 3 == 0)  	table.cell (i' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (i' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).Width = 50;  else if ((j - 1) % 3 == 0)  	table.cell (i' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (i' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).Width = 50;  else if ((j - 1) % 3 == 0)  	table.cell (i' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (i' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).Width = 50;  else if ((j - 1) % 3 == 0)  	table.cell (i' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (i' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).Width = 50;  else if ((j - 1) % 3 == 0)  	table.cell (i' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (i' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).Width = 50;  else if ((j - 1) % 3 == 0)  	table.cell (i' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (i' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).Width = 50;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (i' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (i' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (i' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (i' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).Width = 40;  else if ((j - 2) % 3 == 0)  	table.cell (i' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).Width = 40;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).Width = 70;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 3) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 3) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 3) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 3) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 3) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 3) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 3) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 3) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 3) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 3) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = calc_record.pos_min_loc [i - 2].ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_min_loc [i - 2]' 4).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.min_loc [i - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j < 6 && j > 2) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  }  else if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = calc_record.pos_max_loc [i - 2 + 1].ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_max_loc [i - 2 + 1]' 4).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.max_loc [i - 2 + 1]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j >= 6) {  	if (j % 3 == 0)  		table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  	else if ((j - 1) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  	else if ((j - 2) % 3 == 0)  		table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (j % 3 == 0)  	table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  else if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = calc_record.pos_InEng [(i - 2) * 4 + j / 3 - 2].ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 1) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  else if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.t_InEng [(i - 2) * 4 + j / 3 - 2]' 4).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if ((j - 2) % 3 == 0)  	table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (i' j).addParagraph ().Text = Math.Round (calc_record.InEng [(i - 2) * 4 + j / 3 - 2]' 2).ToString ();  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (TypeAlgorithmFindingPeriods == 2)  	par.Text = @"События установлены вручную.";  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: if (pointsDiffDegreeX != null) {  	par = doc.addParagraph ();  	par.DefaultCharFormat.Font = times;  	par.Alignment = Align.Left;  	par.DefaultCharFormat.FontSize = 15;  	par.Text = "Точки смещения";  	table = doc.addTable (pointsDiffDegreeX.Length' 4);  	table.Margins [Direction.Bottom] = 20;  	table.DefaultCharFormat.FontSize = 8;  	/// Step 3. (Optional) Set text alignment for each cell' row height' column width'  	///			border style' etc.  	/// header 0  	///   	int[] widths =  {  		100'  		100'  		120'  		120  	};  	table.cell (0' 0).Width = widths [0];  	table.cell (0' 0).Alignment = Align.Left;  	table.cell (0' 0).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 0).addParagraph ().Text = @"Время' с";  	table.cell (0' 1).Width = widths [1];  	table.cell (0' 1).Alignment = Align.Left;  	table.cell (0' 1).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 1).addParagraph ().Text = @"Градусы";  	table.cell (0' 2).Width = widths [2];  	table.cell (0' 2).Alignment = Align.Left;  	table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  	table.cell (0' 3).Width = widths [3];  	table.cell (0' 3).Alignment = Align.Left;  	table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  	table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  	int i;  	for (i = 1; i < table.RowCount; i++) {  		for (int j = 0; j < table.ColCount; j++) {  			table.cell (i' j).Width = widths [j];  			table.cell (i' j).Alignment = Align.Left;  			table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  			switch (j) {  			case 0:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  				break;  			case 1:  				table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  				break;  			case 2:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  				break;  			case 3:  				table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  				break;  			}  		}  	}  	table.setInnerBorder (DW.RtfWriter.BorderStyle.Dotted' 1f);  	table.setOuterBorder (DW.RtfWriter.BorderStyle.Single' 1f);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: par.DefaultCharFormat.FontSize = 15;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table = doc.addTable (pointsDiffDegreeX.Length' 4);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.Margins [Direction.Bottom] = 20;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.DefaultCharFormat.FontSize = 8;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 2).Width = widths [2];  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 2).Width = widths [2];  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 2).Alignment = Align.Left;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 2).AlignmentVertical = AlignVertical.Middle;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 2).addParagraph ().Text = @"Частота' об/мин";  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 3).Width = widths [3];  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 3).Width = widths [3];  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 3).Alignment = Align.Left;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 3).AlignmentVertical = AlignVertical.Middle;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: table.cell (0' 3).addParagraph ().Text = @"Ускорение' рад/с^2";  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 1; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Width = widths [j];  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		switch (j) {  		case 0:  			table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  			break;  		case 1:  			table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  			break;  		case 2:  			table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  			break;  		case 3:  			table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  			break;  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (i = 1; i < table.RowCount; i++) {  	for (int j = 0; j < table.ColCount; j++) {  		table.cell (i' j).Width = widths [j];  		table.cell (i' j).Alignment = Align.Left;  		table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  		switch (j) {  		case 0:  			table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  			break;  		case 1:  			table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  			break;  		case 2:  			table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  			break;  		case 3:  			table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  			break;  		}  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	table.cell (i' j).Width = widths [j];  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	switch (j) {  	case 0:  		table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  		break;  	case 1:  		table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  		break;  	case 2:  		table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  		break;  	case 3:  		table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  		break;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: for (int j = 0; j < table.ColCount; j++) {  	table.cell (i' j).Width = widths [j];  	table.cell (i' j).Alignment = Align.Left;  	table.cell (i' j).AlignmentVertical = AlignVertical.Middle;  	switch (j) {  	case 0:  		table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  		break;  	case 1:  		table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  		break;  	case 2:  		table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  		break;  	case 3:  		table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  		break;  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: switch (j) {  case 0:  	table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  	break;  case 1:  	table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  	break;  case 2:  	table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  	break;  case 3:  	table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  	break;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following statement contains a magic number: switch (j) {  case 0:  	table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  	break;  case 1:  	table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  	break;  case 2:  	table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  	break;  case 3:  	table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  	break;  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,createDrawGraphCreateReport,The following statement contains a magic number: if (tabControlMain.TabPages.Count < 2) {  	tabControlMain.TabPages.Add (tabPageTimeSpeed);  	tabControlMain.TabPages.Add (tabPageTimeAcceleration);  	tabControlMain.TabPages.Add (tabPageSpeedAcceleration);  	tabControlMain.TabPages.Add (tabPageTimeSpeedAcc);  	tabControlMain.TabPages.Add (tabPageDegreeSpeed);  	tabControlMain.TabPages.Add (tabPageDegreeAcc);  	tabControlMain.TabPages.Add (tabPageReport);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,bw_ProgressChanged,The following statement contains a magic number: if (e.ProgressPercentage == statesWork.stop) {  	this.Enabled = true;  	//menuStrip1.Enabled = true;  	//toolStripMainMenu.Enabled = true;  	//explorerTreeMain.Enabled = true;  	progressForm.setProgress (100' "Готово");  	progressForm.Hide ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,bw_ProgressChanged,The following statement contains a magic number: progressForm.setProgress (100' "Готово");  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,bw_ProgressChanged,The following statement contains a magic number: if (e.ProgressPercentage == statesWork.startCalc) {  	string[] names = new string[4];  	names [0] = "канал 1";  	names [1] = "канал 2";  	names [2] = "канал 3";  	names [3] = "канал 4";  	int[] m = new int[4];  	m [0] = m [1] = m [2] = m [3] = record.KadrsNumber;  	int i' j;  	cl2d.DrawGraphick (record.time' "t' секунды"' record.ch' "U' В"' m' names' record.NumberOfChannels' OpenGlControlGraph.Width' OpenGlControlGraph.Height);  	if (old_pos > -1)  		dataGridViewFiles.Rows [old_pos].DefaultCellStyle.BackColor = System.Drawing.Color.White;  	old_pos = dataGridViewFiles.CurrentRow.Index;  	dataGridViewFiles.Rows [old_pos].DefaultCellStyle.BackColor = System.Drawing.Color.Green;  	OpenGlControlGraph.Invalidate ();  	progressForm.setProgress (e.ProgressPercentage' "Расчет и построение графиков");  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,bw_ProgressChanged,The following statement contains a magic number: if (e.ProgressPercentage == statesWork.startCalc) {  	string[] names = new string[4];  	names [0] = "канал 1";  	names [1] = "канал 2";  	names [2] = "канал 3";  	names [3] = "канал 4";  	int[] m = new int[4];  	m [0] = m [1] = m [2] = m [3] = record.KadrsNumber;  	int i' j;  	cl2d.DrawGraphick (record.time' "t' секунды"' record.ch' "U' В"' m' names' record.NumberOfChannels' OpenGlControlGraph.Width' OpenGlControlGraph.Height);  	if (old_pos > -1)  		dataGridViewFiles.Rows [old_pos].DefaultCellStyle.BackColor = System.Drawing.Color.White;  	old_pos = dataGridViewFiles.CurrentRow.Index;  	dataGridViewFiles.Rows [old_pos].DefaultCellStyle.BackColor = System.Drawing.Color.Green;  	OpenGlControlGraph.Invalidate ();  	progressForm.setProgress (e.ProgressPercentage' "Расчет и построение графиков");  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,bw_ProgressChanged,The following statement contains a magic number: if (e.ProgressPercentage == statesWork.startCalc) {  	string[] names = new string[4];  	names [0] = "канал 1";  	names [1] = "канал 2";  	names [2] = "канал 3";  	names [3] = "канал 4";  	int[] m = new int[4];  	m [0] = m [1] = m [2] = m [3] = record.KadrsNumber;  	int i' j;  	cl2d.DrawGraphick (record.time' "t' секунды"' record.ch' "U' В"' m' names' record.NumberOfChannels' OpenGlControlGraph.Width' OpenGlControlGraph.Height);  	if (old_pos > -1)  		dataGridViewFiles.Rows [old_pos].DefaultCellStyle.BackColor = System.Drawing.Color.White;  	old_pos = dataGridViewFiles.CurrentRow.Index;  	dataGridViewFiles.Rows [old_pos].DefaultCellStyle.BackColor = System.Drawing.Color.Green;  	OpenGlControlGraph.Invalidate ();  	progressForm.setProgress (e.ProgressPercentage' "Расчет и построение графиков");  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,bw_ProgressChanged,The following statement contains a magic number: if (e.ProgressPercentage == statesWork.startCalc) {  	string[] names = new string[4];  	names [0] = "канал 1";  	names [1] = "канал 2";  	names [2] = "канал 3";  	names [3] = "канал 4";  	int[] m = new int[4];  	m [0] = m [1] = m [2] = m [3] = record.KadrsNumber;  	int i' j;  	cl2d.DrawGraphick (record.time' "t' секунды"' record.ch' "U' В"' m' names' record.NumberOfChannels' OpenGlControlGraph.Width' OpenGlControlGraph.Height);  	if (old_pos > -1)  		dataGridViewFiles.Rows [old_pos].DefaultCellStyle.BackColor = System.Drawing.Color.White;  	old_pos = dataGridViewFiles.CurrentRow.Index;  	dataGridViewFiles.Rows [old_pos].DefaultCellStyle.BackColor = System.Drawing.Color.Green;  	OpenGlControlGraph.Invalidate ();  	progressForm.setProgress (e.ProgressPercentage' "Расчет и построение графиков");  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,bw_ProgressChanged,The following statement contains a magic number: if (e.ProgressPercentage == statesWork.startCalc) {  	string[] names = new string[4];  	names [0] = "канал 1";  	names [1] = "канал 2";  	names [2] = "канал 3";  	names [3] = "канал 4";  	int[] m = new int[4];  	m [0] = m [1] = m [2] = m [3] = record.KadrsNumber;  	int i' j;  	cl2d.DrawGraphick (record.time' "t' секунды"' record.ch' "U' В"' m' names' record.NumberOfChannels' OpenGlControlGraph.Width' OpenGlControlGraph.Height);  	if (old_pos > -1)  		dataGridViewFiles.Rows [old_pos].DefaultCellStyle.BackColor = System.Drawing.Color.White;  	old_pos = dataGridViewFiles.CurrentRow.Index;  	dataGridViewFiles.Rows [old_pos].DefaultCellStyle.BackColor = System.Drawing.Color.Green;  	OpenGlControlGraph.Invalidate ();  	progressForm.setProgress (e.ProgressPercentage' "Расчет и построение графиков");  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,bw_ProgressChanged,The following statement contains a magic number: if (e.ProgressPercentage == statesWork.startCalc) {  	string[] names = new string[4];  	names [0] = "канал 1";  	names [1] = "канал 2";  	names [2] = "канал 3";  	names [3] = "канал 4";  	int[] m = new int[4];  	m [0] = m [1] = m [2] = m [3] = record.KadrsNumber;  	int i' j;  	cl2d.DrawGraphick (record.time' "t' секунды"' record.ch' "U' В"' m' names' record.NumberOfChannels' OpenGlControlGraph.Width' OpenGlControlGraph.Height);  	if (old_pos > -1)  		dataGridViewFiles.Rows [old_pos].DefaultCellStyle.BackColor = System.Drawing.Color.White;  	old_pos = dataGridViewFiles.CurrentRow.Index;  	dataGridViewFiles.Rows [old_pos].DefaultCellStyle.BackColor = System.Drawing.Color.Green;  	OpenGlControlGraph.Invalidate ();  	progressForm.setProgress (e.ProgressPercentage' "Расчет и построение графиков");  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,bw_ProgressChanged,The following statement contains a magic number: names [2] = "канал 3";  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,bw_ProgressChanged,The following statement contains a magic number: names [3] = "канал 4";  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,bw_ProgressChanged,The following statement contains a magic number: m [0] = m [1] = m [2] = m [3] = record.KadrsNumber;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,bw_ProgressChanged,The following statement contains a magic number: m [0] = m [1] = m [2] = m [3] = record.KadrsNumber;  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,bw_ProgressChanged,The following statement contains a magic number: if (e.ProgressPercentage == statesWork.finishCalc) {  	progressForm.setProgress (e.ProgressPercentage' "Генерация отчета");  	this.Enabled = true;  	createDrawGraphCreateReport ();  	progressForm.setProgress (100' "Готово");  	progressForm.Hide ();  	//this.Show();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,bw_ProgressChanged,The following statement contains a magic number: progressForm.setProgress (100' "Готово");  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,ToolStripMenuItemSaveReportAs_Click,The following statement contains a magic number: if (flag_calc) {  	if (namemy_file.Length == 0) {  		namemy_file = name_file;  		namemy_file = name_file.Remove (namemy_file.Length - 4);  	}  	saveFileReportDialog.FileName = namemy_file;  	if (saveFileReportDialog.ShowDialog () == DialogResult.OK) {  		richTextBoxReport.SaveFile (saveFileReportDialog.FileName);  		namemy_file = saveFileReportDialog.FileName;  		namemy_file = Path.GetFileNameWithoutExtension (namemy_file);  		calc_record.OutputData (Path.GetDirectoryName (saveFileReportDialog.FileName) + "\\" + namemy_file);  		if (flag_events)  			calc_record.OutputDataMaxMin (Path.GetDirectoryName (saveFileReportDialog.FileName) + "\\" + namemy_file);  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,ToolStripMenuItemSaveReportAs_Click,The following statement contains a magic number: if (namemy_file.Length == 0) {  	namemy_file = name_file;  	namemy_file = name_file.Remove (namemy_file.Length - 4);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,ToolStripMenuItemSaveReportAs_Click,The following statement contains a magic number: namemy_file = name_file.Remove (namemy_file.Length - 4);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,toolStripButtonSaveReport_Click,The following statement contains a magic number: if (flag_calc) {  	if (namemy_file.Length == 0) {  		namemy_file = name_file;  		namemy_file = name_file.Remove (namemy_file.Length - 4);  	}  	saveFileReportDialog.FileName = namemy_file;  	if (saveFileReportDialog.ShowDialog () == DialogResult.OK) {  		richTextBoxReport.SaveFile (saveFileReportDialog.FileName);  		namemy_file = saveFileReportDialog.FileName;  		namemy_file = Path.GetFileNameWithoutExtension (namemy_file);  		calc_record.OutputData (Path.GetDirectoryName (saveFileReportDialog.FileName) + "\\" + namemy_file);  		if (flag_events)  			calc_record.OutputDataMaxMin (Path.GetDirectoryName (saveFileReportDialog.FileName) + "\\" + namemy_file);  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,toolStripButtonSaveReport_Click,The following statement contains a magic number: if (namemy_file.Length == 0) {  	namemy_file = name_file;  	namemy_file = name_file.Remove (namemy_file.Length - 4);  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,toolStripButtonSaveReport_Click,The following statement contains a magic number: namemy_file = name_file.Remove (namemy_file.Length - 4);  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,addEventsToolStripMenuItem_Click,The following statement contains a magic number: if (res == DialogResult.OK) {  	//setup events  	manualStartPoint = formEvevnts.StartPoint;  	manualStep = formEvevnts.Step;  	diffPoints = formEvevnts.DiffPoints;  	//show events  	if (record != null && flag_record && flag_graph) {  		//calculate points  		if (calc_record == null) {  			calc_record = new ClassCalc ();  		}  		calc_record.CalculateDegree (record);  		int numberPoints = Convert.ToInt32 ((calc_record.front_vu.LongLength - manualStartPoint) / manualStep);  		pointsX = new double[numberPoints];  		pointsDegreeX = new double[numberPoints];  		pointsY = new double[numberPoints];  		pointsDegreeY = new double[numberPoints];  		pointsTimeX = new double[numberPoints];  		pointsTimeYVu = new double[numberPoints];  		pointsTimeYAc = new double[numberPoints];  		int numberPointsDiff = Convert.ToInt32 ((calc_record.front_vu.LongLength - manualStartPoint - diffPoints) / manualStep);  		pointsDiffX = new double[numberPointsDiff];  		pointsDiffDegreeX = new double[numberPointsDiff];  		pointsDiffY = new double[numberPointsDiff];  		pointsDiffDegreeY = new double[numberPointsDiff];  		pointsDiffTimeX = new double[numberPointsDiff];  		pointsDiffTimeYVu = new double[numberPointsDiff];  		pointsDiffTimeYAc = new double[numberPointsDiff];  		for (int i = 0; i < numberPoints; i++) {  			pointsX [i] = calc_record.front_vu [manualStartPoint + i * manualStep];  			pointsDegreeX [i] = manualStartPoint + i * manualStep;  			if (calc_record.t_vu != null) {  				pointsTimeX [i] = calc_record.t_vu [manualStartPoint + i * manualStep];  				pointsTimeYVu [i] = calc_record.vu [manualStartPoint + i * manualStep];  			}  			if (calc_record.t_ac != null && calc_record.ac != null)  				pointsTimeYAc [i] = calc_record.GetValueFunc (pointsTimeX [i]' calc_record.t_ac' calc_record.ac).y;  			else  				pointsTimeYAc [i] = 0;  			pointsDegreeY [i] = pointsY [i] = 0;  			if (flag_calc) {  				var point = calc_record.GetValueFunc (pointsDegreeX [i]' calc_record.degree_vu' calc_record.vu);  				pointsDegreeY [i] = point.y;  			}  		}  		for (int i = 0; i < numberPointsDiff; i++) {  			pointsDiffX [i] = calc_record.front_vu [manualStartPoint + i * manualStep + diffPoints];  			pointsDiffDegreeX [i] = manualStartPoint + i * manualStep + diffPoints;  			if (calc_record.t_vu != null) {  				pointsDiffTimeX [i] = calc_record.t_vu [manualStartPoint + i * manualStep + diffPoints];  				pointsDiffTimeYVu [i] = calc_record.vu [manualStartPoint + i * manualStep + diffPoints];  			}  			if (calc_record.t_ac != null && calc_record.ac != null)  				pointsDiffTimeYAc [i] = calc_record.GetValueFunc (pointsDiffTimeX [i]' calc_record.t_ac' calc_record.ac).y;  			else  				pointsDiffTimeYAc [i] = 0;  			pointsDiffDegreeY [i] = pointsDiffY [i] = 0;  			if (flag_calc) {  				var point = calc_record.GetValueFunc (pointsDiffDegreeX [i]' calc_record.degree_vu' calc_record.vu);  				pointsDiffDegreeY [i] = point.y;  			}  		}  		cl2d.DrawEvents (pointsX' pointsY' 2);  		if (nChannel > 0 && tabControlMain.Contains (tabPageFilter)) {  			ZedGraphHelper.CreateGraph (ref zedGraphControlSource' ref record.time' "Время' сек"' ref record.ch [nChannel - 1]' ""' record.KadrsNumber' ref pointsX' ref pointsY' "Опорные точки"' StylePoint.getStyleStartPoint ()' "График исходных данных");  			ZedGraphHelper.CreateGraph (ref zedGraphControlFiltered' ref record.time' "Время' сек"' ref filterY' ""' record.KadrsNumber' ref pointsX' ref pointsY' "Опорные точки"' StylePoint.getStyleStartPoint ()' "График отфильтрованных данных");  		}  		ZedGraphHelper.CreateGraph (ref zedGraphControlDegreeSpeed' ref calc_record.degree_vu' "градусы"' ref calc_record.vu' "частота вращения' об/мин"' calc_record.kol_vu' ref pointsDegreeX' ref pointsDegreeY' "Опорные точки"' StylePoint.getStyleStartPoint ()' "");  		ZedGraphHelper.CreateGraph (ref zedGraphControlDegreeAcc' ref calc_record.degree_ac' "градусы"' ref calc_record.ac' "ускорение' рад/c^2"' calc_record.kol_ac' ref pointsDegreeX' ref pointsY' "Опорные точки"' StylePoint.getStyleStartPoint ()' "");  		ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlTimeSpeed' pointsTimeX' pointsTimeYVu' "Опорные точки"' StylePoint.getStyleStartPoint ());  		ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlTimeAcceleration' pointsTimeX' pointsTimeYAc' "Опорные точки"' StylePoint.getStyleStartPoint ());  		ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlTimeSpeed' pointsDiffTimeX' pointsDiffTimeYVu' "Точки смещения"' StylePoint.getStyleDiffPoint ());  		ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlTimeAcceleration' pointsDiffTimeX' pointsDiffTimeYAc' "Точки смещения"' StylePoint.getStyleDiffPoint ());  		ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlDegreeSpeed' pointsDiffDegreeX' pointsDiffTimeYVu' "Точки смещения"' StylePoint.getStyleDiffPoint ());  		ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlDegreeAcc' pointsDiffDegreeX' pointsDiffTimeYAc' "Точки смещения"' StylePoint.getStyleDiffPoint ());  		isAddedEvents = true;  		OpenGlControlGraph.Invalidate ();  		zedGraphControlFiltered.Invalidate ();  		zedGraphControlSource.Invalidate ();  		CreateReport ();  	}  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,addEventsToolStripMenuItem_Click,The following statement contains a magic number: if (record != null && flag_record && flag_graph) {  	//calculate points  	if (calc_record == null) {  		calc_record = new ClassCalc ();  	}  	calc_record.CalculateDegree (record);  	int numberPoints = Convert.ToInt32 ((calc_record.front_vu.LongLength - manualStartPoint) / manualStep);  	pointsX = new double[numberPoints];  	pointsDegreeX = new double[numberPoints];  	pointsY = new double[numberPoints];  	pointsDegreeY = new double[numberPoints];  	pointsTimeX = new double[numberPoints];  	pointsTimeYVu = new double[numberPoints];  	pointsTimeYAc = new double[numberPoints];  	int numberPointsDiff = Convert.ToInt32 ((calc_record.front_vu.LongLength - manualStartPoint - diffPoints) / manualStep);  	pointsDiffX = new double[numberPointsDiff];  	pointsDiffDegreeX = new double[numberPointsDiff];  	pointsDiffY = new double[numberPointsDiff];  	pointsDiffDegreeY = new double[numberPointsDiff];  	pointsDiffTimeX = new double[numberPointsDiff];  	pointsDiffTimeYVu = new double[numberPointsDiff];  	pointsDiffTimeYAc = new double[numberPointsDiff];  	for (int i = 0; i < numberPoints; i++) {  		pointsX [i] = calc_record.front_vu [manualStartPoint + i * manualStep];  		pointsDegreeX [i] = manualStartPoint + i * manualStep;  		if (calc_record.t_vu != null) {  			pointsTimeX [i] = calc_record.t_vu [manualStartPoint + i * manualStep];  			pointsTimeYVu [i] = calc_record.vu [manualStartPoint + i * manualStep];  		}  		if (calc_record.t_ac != null && calc_record.ac != null)  			pointsTimeYAc [i] = calc_record.GetValueFunc (pointsTimeX [i]' calc_record.t_ac' calc_record.ac).y;  		else  			pointsTimeYAc [i] = 0;  		pointsDegreeY [i] = pointsY [i] = 0;  		if (flag_calc) {  			var point = calc_record.GetValueFunc (pointsDegreeX [i]' calc_record.degree_vu' calc_record.vu);  			pointsDegreeY [i] = point.y;  		}  	}  	for (int i = 0; i < numberPointsDiff; i++) {  		pointsDiffX [i] = calc_record.front_vu [manualStartPoint + i * manualStep + diffPoints];  		pointsDiffDegreeX [i] = manualStartPoint + i * manualStep + diffPoints;  		if (calc_record.t_vu != null) {  			pointsDiffTimeX [i] = calc_record.t_vu [manualStartPoint + i * manualStep + diffPoints];  			pointsDiffTimeYVu [i] = calc_record.vu [manualStartPoint + i * manualStep + diffPoints];  		}  		if (calc_record.t_ac != null && calc_record.ac != null)  			pointsDiffTimeYAc [i] = calc_record.GetValueFunc (pointsDiffTimeX [i]' calc_record.t_ac' calc_record.ac).y;  		else  			pointsDiffTimeYAc [i] = 0;  		pointsDiffDegreeY [i] = pointsDiffY [i] = 0;  		if (flag_calc) {  			var point = calc_record.GetValueFunc (pointsDiffDegreeX [i]' calc_record.degree_vu' calc_record.vu);  			pointsDiffDegreeY [i] = point.y;  		}  	}  	cl2d.DrawEvents (pointsX' pointsY' 2);  	if (nChannel > 0 && tabControlMain.Contains (tabPageFilter)) {  		ZedGraphHelper.CreateGraph (ref zedGraphControlSource' ref record.time' "Время' сек"' ref record.ch [nChannel - 1]' ""' record.KadrsNumber' ref pointsX' ref pointsY' "Опорные точки"' StylePoint.getStyleStartPoint ()' "График исходных данных");  		ZedGraphHelper.CreateGraph (ref zedGraphControlFiltered' ref record.time' "Время' сек"' ref filterY' ""' record.KadrsNumber' ref pointsX' ref pointsY' "Опорные точки"' StylePoint.getStyleStartPoint ()' "График отфильтрованных данных");  	}  	ZedGraphHelper.CreateGraph (ref zedGraphControlDegreeSpeed' ref calc_record.degree_vu' "градусы"' ref calc_record.vu' "частота вращения' об/мин"' calc_record.kol_vu' ref pointsDegreeX' ref pointsDegreeY' "Опорные точки"' StylePoint.getStyleStartPoint ()' "");  	ZedGraphHelper.CreateGraph (ref zedGraphControlDegreeAcc' ref calc_record.degree_ac' "градусы"' ref calc_record.ac' "ускорение' рад/c^2"' calc_record.kol_ac' ref pointsDegreeX' ref pointsY' "Опорные точки"' StylePoint.getStyleStartPoint ()' "");  	ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlTimeSpeed' pointsTimeX' pointsTimeYVu' "Опорные точки"' StylePoint.getStyleStartPoint ());  	ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlTimeAcceleration' pointsTimeX' pointsTimeYAc' "Опорные точки"' StylePoint.getStyleStartPoint ());  	ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlTimeSpeed' pointsDiffTimeX' pointsDiffTimeYVu' "Точки смещения"' StylePoint.getStyleDiffPoint ());  	ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlTimeAcceleration' pointsDiffTimeX' pointsDiffTimeYAc' "Точки смещения"' StylePoint.getStyleDiffPoint ());  	ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlDegreeSpeed' pointsDiffDegreeX' pointsDiffTimeYVu' "Точки смещения"' StylePoint.getStyleDiffPoint ());  	ZedGraphHelper.AppendEventsToGraph (ref zedGraphControlDegreeAcc' pointsDiffDegreeX' pointsDiffTimeYAc' "Точки смещения"' StylePoint.getStyleDiffPoint ());  	isAddedEvents = true;  	OpenGlControlGraph.Invalidate ();  	zedGraphControlFiltered.Invalidate ();  	zedGraphControlSource.Invalidate ();  	CreateReport ();  }  
Magic Number,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,addEventsToolStripMenuItem_Click,The following statement contains a magic number: cl2d.DrawEvents (pointsX' pointsY' 2);  
Magic Number,WindowsFormsGraphickOpenGL,FormProgressBar,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\dialogs\FormProgressBar.cs,FormProgressBar_FormClosed,The following statement contains a magic number: worker.ReportProgress (100);  
Magic Number,LCardAnalizator,FormPickEvents,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\dialogs\FormPickEvents.cs,OnKeyPress,The following statement contains a magic number: if (groupSeparator == ((char)160).ToString ()) {  	groupSeparator = " ";  }  
Magic Number,LCardAnalizator.forms.reports.graphicks,StylePoint,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\StylePoint.cs,getStyleStartPoint,The following statement contains a magic number: res.size = 20;  
Magic Number,LCardAnalizator.forms.reports.graphicks,StylePoint,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\StylePoint.cs,getStyleDiffPoint,The following statement contains a magic number: res.size = 20;  
Magic Number,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,CreateGraph,The following statement contains a magic number: myCurveSup.Symbol.Size = 7;  
Magic Number,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,CreateGraphMaxMin,The following statement contains a magic number: myCurveInf.Symbol.Size = 7;  
Magic Number,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,CreateGraphMaxMin,The following statement contains a magic number: myCurveSup.Symbol.Size = 7;  
Magic Number,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,CreateGraphMaxMin,The following statement contains a magic number: myCurveMid.Symbol.Size = 7;  
Magic Number,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,AppendEventsToGraph,The following statement contains a magic number: if (in_tinf != null) {  	// !!! Минимум  	// Создадим кривую с названием "Scatter".  	// Обводка ромбиков будут рисоваться голубым цветом (Color.Blue)'  	// Опорные точки - ромбики (SymbolType.Diamond)  	myPane.CurveList.RemoveAll (curve => curve.Label.Text == name_minum);  	LineItem myCurveInf = myPane.AddCurve (name_minum' in_tinf' in_vinf' System.Drawing.Color.Blue' SymbolType.Diamond);  	// !!!  	// У кривой линия будет невидимой  	myCurveInf.Line.IsVisible = false;  	// !!!  	// Цвет заполнения отметок (ромбиков) - колубой  	myCurveInf.Symbol.Fill.Color = System.Drawing.Color.Blue;  	// !!!  	// Тип заполнения - сплошная заливка  	myCurveInf.Symbol.Fill.Type = FillType.None;  	// !!!  	// Размер ромбиков  	myCurveInf.Symbol.Size = 7;  	//..............................................  }  
Magic Number,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,AppendEventsToGraph,The following statement contains a magic number: myCurveInf.Symbol.Size = 7;  
Magic Number,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,AppendEventsToGraph,The following statement contains a magic number: if (in_tsup != null) {  	// !!! Максимум  	// Создадим кривую с названием "Scatter".  	// Обводка ромбиков будут рисоваться голубым цветом (Color.Blue)'  	// Опорные точки - ромбики (SymbolType.Diamond)  	myPane.CurveList.RemoveAll (curve => curve.Label.Text == "Максимум");  	LineItem myCurveSup = myPane.AddCurve ("Максимум"' in_tsup' in_vsup' System.Drawing.Color.Red' SymbolType.Circle);  	// !!!  	// У кривой линия будет невидимой  	myCurveSup.Line.IsVisible = false;  	// !!!  	// Цвет заполнения отметок (ромбиков) - колубой  	myCurveSup.Symbol.Fill.Color = System.Drawing.Color.Blue;  	// !!!  	// Тип заполнения - сплошная заливка  	myCurveSup.Symbol.Fill.Type = FillType.None;  	// !!!  	// Размер ромбиков  	myCurveSup.Symbol.Size = 7;  	//..............................................  }  
Magic Number,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,AppendEventsToGraph,The following statement contains a magic number: myCurveSup.Symbol.Size = 7;  
Magic Number,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,AppendEventsToGraph,The following statement contains a magic number: if (t_InEng != null) {  	// !!! Промежуточные точки  	// Создадим кривую с названием "Scatter".  	// Обводка ромбиков будут рисоваться голубым цветом (Color.Blue)'  	// Опорные точки - ромбики (SymbolType.Diamond)  	LineItem myCurveMid = myPane.AddCurve (""' t_InEng' InEng' System.Drawing.Color.Black' SymbolType.Square);  	// !!!  	// У кривой линия будет невидимой  	myCurveMid.Line.IsVisible = false;  	// !!!  	// Цвет заполнения отметок (ромбиков) - колубой  	myCurveMid.Symbol.Fill.Color = System.Drawing.Color.Blue;  	// !!!  	// Тип заполнения - сплошная заливка  	myCurveMid.Symbol.Fill.Type = FillType.None;  	// !!!  	// Размер ромбиков  	myCurveMid.Symbol.Size = 7;  	//..............................................  }  
Magic Number,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,AppendEventsToGraph,The following statement contains a magic number: myCurveMid.Symbol.Size = 7;  
Magic Number,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,AppendEventsToGraph,The following statement contains a magic number: if (y != null) {  	ShowEventsOnGraph (ref zgc);  	// Получим панель для рисования  	GraphPane pane = zgc.GraphPane;  	// Создадим список точек  	PointPairList list = new PointPairList ();  	// Заполняем список точек  	for (int i = 0; i < x.Length; i++) {  		list.Add (x [i]' y [i]);  	}  	// !!!  	// Создадим кривую с названием "Scatter".  	// Обводка ромбиков будут рисоваться голубым цветом (Color.Blue)'  	// Опорные точки - ромбики (SymbolType.Diamond)  	pane.CurveList.RemoveAll (curve => curve.Label.Text == "События");  	LineItem myCurve = pane.AddCurve ("События"' list' System.Drawing.Color.Red' SymbolType.Diamond);  	// !!!  	// У кривой линия будет невидимой  	myCurve.Line.IsVisible = false;  	// !!!  	// Цвет заполнения отметок (ромбиков) - колубой  	myCurve.Symbol.Fill.Color = System.Drawing.Color.Red;  	// !!!  	// Тип заполнения - сплошная заливка  	myCurve.Symbol.Fill.Type = FillType.Solid;  	// !!!  	// Размер ромбиков  	myCurve.Symbol.Size = 20;  	// Вызываем метод AxisChange ()' чтобы обновить данные об осях.   	// В противном случае на рисунке будет показана только часть графика'   	// которая умещается в интервалы по осям' установленные по умолчанию  	zgc.AxisChange ();  	// Обновляем график  	zgc.Invalidate ();  }  
Magic Number,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,AppendEventsToGraph,The following statement contains a magic number: myCurve.Symbol.Size = 20;  
Magic Number,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,AppendEventsToGraph,The following statement contains a magic number: if (y != null) {  	ShowEventsOnGraph (ref zgc);  	// Получим панель для рисования  	GraphPane pane = zgc.GraphPane;  	// Создадим список точек  	PointPairList list = new PointPairList ();  	// Заполняем список точек  	for (int i = 0; i < x.Length; i++) {  		list.Add (x [i]' y [i]);  	}  	// !!!  	// Создадим кривую с названием "Scatter".  	// Обводка ромбиков будут рисоваться голубым цветом (Color.Blue)'  	// Опорные точки - ромбики (SymbolType.Diamond)  	pane.CurveList.RemoveAll (curve => curve.Label.Text == name);  	LineItem myCurve = pane.AddCurve (name' list' style.color' style.type);  	// !!!  	// У кривой линия будет невидимой  	myCurve.Line.IsVisible = false;  	// !!!  	// Цвет заполнения отметок (ромбиков) - колубой  	myCurve.Symbol.Fill.Color = style.color;  	// !!!  	// Тип заполнения - сплошная заливка  	myCurve.Symbol.Fill.Type = FillType.None;  	// !!!  	// Размер ромбиков  	myCurve.Symbol.Size = 10;  	// Вызываем метод AxisChange ()' чтобы обновить данные об осях.   	// В противном случае на рисунке будет показана только часть графика'   	// которая умещается в интервалы по осям' установленные по умолчанию  	zgc.AxisChange ();  	// Обновляем график  	zgc.Invalidate ();  }  
Magic Number,LCardAnalizator.graphicks,ZedGraphHelper,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\reports\graphicks\ZedGraphHelper.cs,AppendEventsToGraph,The following statement contains a magic number: myCurve.Symbol.Size = 10;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ClassRecord,The following statement contains a magic number: for (j = 0; j < 4; j++)  	flags_ch [j] = true;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateRecord,The following statement contains a magic number: if (file != null) {  	//проверка первой строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return 0;  	}  	else {  		head [kol_n] = line;  		kol_n++;  	}  	//проверка второй строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return 0;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  	if (kol_d != 3) {  		file.Close ();  		return 0;  	}  	//проверка оставшихся семи строк  	for (j = 0; j < 7; j++) {  		line = file.ReadLine ();  		if (line == null) {  			file.Close ();  			return 0;  		}  		else {  			head [kol_n] = line;  			kol_d = kol_d + line.Split (d).Length - 1;  			kol_n++;  		}  		if (kol_d != 4 + j) {  			file.Close ();  			return 0;  		}  	}  }  else {  	file.Close ();  	return 0;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateRecord,The following statement contains a magic number: if (file != null) {  	//проверка первой строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return 0;  	}  	else {  		head [kol_n] = line;  		kol_n++;  	}  	//проверка второй строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return 0;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  	if (kol_d != 3) {  		file.Close ();  		return 0;  	}  	//проверка оставшихся семи строк  	for (j = 0; j < 7; j++) {  		line = file.ReadLine ();  		if (line == null) {  			file.Close ();  			return 0;  		}  		else {  			head [kol_n] = line;  			kol_d = kol_d + line.Split (d).Length - 1;  			kol_n++;  		}  		if (kol_d != 4 + j) {  			file.Close ();  			return 0;  		}  	}  }  else {  	file.Close ();  	return 0;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateRecord,The following statement contains a magic number: if (file != null) {  	//проверка первой строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return 0;  	}  	else {  		head [kol_n] = line;  		kol_n++;  	}  	//проверка второй строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return 0;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  	if (kol_d != 3) {  		file.Close ();  		return 0;  	}  	//проверка оставшихся семи строк  	for (j = 0; j < 7; j++) {  		line = file.ReadLine ();  		if (line == null) {  			file.Close ();  			return 0;  		}  		else {  			head [kol_n] = line;  			kol_d = kol_d + line.Split (d).Length - 1;  			kol_n++;  		}  		if (kol_d != 4 + j) {  			file.Close ();  			return 0;  		}  	}  }  else {  	file.Close ();  	return 0;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateRecord,The following statement contains a magic number: if (kol_d != 3) {  	file.Close ();  	return 0;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateRecord,The following statement contains a magic number: for (j = 0; j < 7; j++) {  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return 0;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  	if (kol_d != 4 + j) {  		file.Close ();  		return 0;  	}  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateRecord,The following statement contains a magic number: for (j = 0; j < 7; j++) {  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return 0;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  	if (kol_d != 4 + j) {  		file.Close ();  		return 0;  	}  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateRecord,The following statement contains a magic number: if (kol_d != 4 + j) {  	file.Close ();  	return 0;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateRecordWindows7,The following statement contains a magic number: if (file != null) {  	//проверка первой строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return 0;  	}  	else {  		head [kol_n] = line;  		kol_n++;  	}  	//проверка второй строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return 0;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  	if (kol_d != 3) {  		file.Close ();  		return 0;  	}  	//проверка оставшихся 12 строк  	for (j = 0; j < 12; j++) {  		line = file.ReadLine ();  		if (line == null) {  			file.Close ();  			return 0;  		}  		else {  			head [kol_n] = line;  			kol_d = kol_d + line.Split (d).Length - 1;  			kol_n++;  		}  	}  	if (kol_d != 13) {  		file.Close ();  		return 0;  	}  }  else {  	file.Close ();  	return 0;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateRecordWindows7,The following statement contains a magic number: if (file != null) {  	//проверка первой строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return 0;  	}  	else {  		head [kol_n] = line;  		kol_n++;  	}  	//проверка второй строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return 0;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  	if (kol_d != 3) {  		file.Close ();  		return 0;  	}  	//проверка оставшихся 12 строк  	for (j = 0; j < 12; j++) {  		line = file.ReadLine ();  		if (line == null) {  			file.Close ();  			return 0;  		}  		else {  			head [kol_n] = line;  			kol_d = kol_d + line.Split (d).Length - 1;  			kol_n++;  		}  	}  	if (kol_d != 13) {  		file.Close ();  		return 0;  	}  }  else {  	file.Close ();  	return 0;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateRecordWindows7,The following statement contains a magic number: if (file != null) {  	//проверка первой строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return 0;  	}  	else {  		head [kol_n] = line;  		kol_n++;  	}  	//проверка второй строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return 0;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  	if (kol_d != 3) {  		file.Close ();  		return 0;  	}  	//проверка оставшихся 12 строк  	for (j = 0; j < 12; j++) {  		line = file.ReadLine ();  		if (line == null) {  			file.Close ();  			return 0;  		}  		else {  			head [kol_n] = line;  			kol_d = kol_d + line.Split (d).Length - 1;  			kol_n++;  		}  	}  	if (kol_d != 13) {  		file.Close ();  		return 0;  	}  }  else {  	file.Close ();  	return 0;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateRecordWindows7,The following statement contains a magic number: if (kol_d != 3) {  	file.Close ();  	return 0;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateRecordWindows7,The following statement contains a magic number: for (j = 0; j < 12; j++) {  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return 0;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateRecordWindows7,The following statement contains a magic number: if (kol_d != 13) {  	file.Close ();  	return 0;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//3 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 пустая строка  	line = file.ReadLine ();  	//5 модуль  	line = file.ReadLine ();  	//6 пустая строка  	line = file.ReadLine ();  	//7 строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//9 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//10 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//11 формат данных  	line = file.ReadLine ();  	//12 еденизы измерения времени  	line = file.ReadLine ();  	head [7] = line;  	Time_markers_scale = line.Split (d) [1];  	//13   	head [8] = file.ReadLine ();  	//14  	head [9] = file.ReadLine ();  	//15  	head [10] = file.ReadLine ();  	//16  	head [11] = file.ReadLine ();  	//17  	head [12] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//3 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 пустая строка  	line = file.ReadLine ();  	//5 модуль  	line = file.ReadLine ();  	//6 пустая строка  	line = file.ReadLine ();  	//7 строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//9 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//10 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//11 формат данных  	line = file.ReadLine ();  	//12 еденизы измерения времени  	line = file.ReadLine ();  	head [7] = line;  	Time_markers_scale = line.Split (d) [1];  	//13   	head [8] = file.ReadLine ();  	//14  	head [9] = file.ReadLine ();  	//15  	head [10] = file.ReadLine ();  	//16  	head [11] = file.ReadLine ();  	//17  	head [12] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//3 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 пустая строка  	line = file.ReadLine ();  	//5 модуль  	line = file.ReadLine ();  	//6 пустая строка  	line = file.ReadLine ();  	//7 строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//9 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//10 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//11 формат данных  	line = file.ReadLine ();  	//12 еденизы измерения времени  	line = file.ReadLine ();  	head [7] = line;  	Time_markers_scale = line.Split (d) [1];  	//13   	head [8] = file.ReadLine ();  	//14  	head [9] = file.ReadLine ();  	//15  	head [10] = file.ReadLine ();  	//16  	head [11] = file.ReadLine ();  	//17  	head [12] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//3 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 пустая строка  	line = file.ReadLine ();  	//5 модуль  	line = file.ReadLine ();  	//6 пустая строка  	line = file.ReadLine ();  	//7 строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//9 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//10 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//11 формат данных  	line = file.ReadLine ();  	//12 еденизы измерения времени  	line = file.ReadLine ();  	head [7] = line;  	Time_markers_scale = line.Split (d) [1];  	//13   	head [8] = file.ReadLine ();  	//14  	head [9] = file.ReadLine ();  	//15  	head [10] = file.ReadLine ();  	//16  	head [11] = file.ReadLine ();  	//17  	head [12] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//3 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 пустая строка  	line = file.ReadLine ();  	//5 модуль  	line = file.ReadLine ();  	//6 пустая строка  	line = file.ReadLine ();  	//7 строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//9 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//10 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//11 формат данных  	line = file.ReadLine ();  	//12 еденизы измерения времени  	line = file.ReadLine ();  	head [7] = line;  	Time_markers_scale = line.Split (d) [1];  	//13   	head [8] = file.ReadLine ();  	//14  	head [9] = file.ReadLine ();  	//15  	head [10] = file.ReadLine ();  	//16  	head [11] = file.ReadLine ();  	//17  	head [12] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//3 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 пустая строка  	line = file.ReadLine ();  	//5 модуль  	line = file.ReadLine ();  	//6 пустая строка  	line = file.ReadLine ();  	//7 строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//9 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//10 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//11 формат данных  	line = file.ReadLine ();  	//12 еденизы измерения времени  	line = file.ReadLine ();  	head [7] = line;  	Time_markers_scale = line.Split (d) [1];  	//13   	head [8] = file.ReadLine ();  	//14  	head [9] = file.ReadLine ();  	//15  	head [10] = file.ReadLine ();  	//16  	head [11] = file.ReadLine ();  	//17  	head [12] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//3 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 пустая строка  	line = file.ReadLine ();  	//5 модуль  	line = file.ReadLine ();  	//6 пустая строка  	line = file.ReadLine ();  	//7 строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//9 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//10 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//11 формат данных  	line = file.ReadLine ();  	//12 еденизы измерения времени  	line = file.ReadLine ();  	head [7] = line;  	Time_markers_scale = line.Split (d) [1];  	//13   	head [8] = file.ReadLine ();  	//14  	head [9] = file.ReadLine ();  	//15  	head [10] = file.ReadLine ();  	//16  	head [11] = file.ReadLine ();  	//17  	head [12] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//3 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 пустая строка  	line = file.ReadLine ();  	//5 модуль  	line = file.ReadLine ();  	//6 пустая строка  	line = file.ReadLine ();  	//7 строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//9 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//10 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//11 формат данных  	line = file.ReadLine ();  	//12 еденизы измерения времени  	line = file.ReadLine ();  	head [7] = line;  	Time_markers_scale = line.Split (d) [1];  	//13   	head [8] = file.ReadLine ();  	//14  	head [9] = file.ReadLine ();  	//15  	head [10] = file.ReadLine ();  	//16  	head [11] = file.ReadLine ();  	//17  	head [12] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//3 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 пустая строка  	line = file.ReadLine ();  	//5 модуль  	line = file.ReadLine ();  	//6 пустая строка  	line = file.ReadLine ();  	//7 строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//9 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//10 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//11 формат данных  	line = file.ReadLine ();  	//12 еденизы измерения времени  	line = file.ReadLine ();  	head [7] = line;  	Time_markers_scale = line.Split (d) [1];  	//13   	head [8] = file.ReadLine ();  	//14  	head [9] = file.ReadLine ();  	//15  	head [10] = file.ReadLine ();  	//16  	head [11] = file.ReadLine ();  	//17  	head [12] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//3 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 пустая строка  	line = file.ReadLine ();  	//5 модуль  	line = file.ReadLine ();  	//6 пустая строка  	line = file.ReadLine ();  	//7 строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//9 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//10 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//11 формат данных  	line = file.ReadLine ();  	//12 еденизы измерения времени  	line = file.ReadLine ();  	head [7] = line;  	Time_markers_scale = line.Split (d) [1];  	//13   	head [8] = file.ReadLine ();  	//14  	head [9] = file.ReadLine ();  	//15  	head [10] = file.ReadLine ();  	//16  	head [11] = file.ReadLine ();  	//17  	head [12] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//3 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 пустая строка  	line = file.ReadLine ();  	//5 модуль  	line = file.ReadLine ();  	//6 пустая строка  	line = file.ReadLine ();  	//7 строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//9 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//10 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//11 формат данных  	line = file.ReadLine ();  	//12 еденизы измерения времени  	line = file.ReadLine ();  	head [7] = line;  	Time_markers_scale = line.Split (d) [1];  	//13   	head [8] = file.ReadLine ();  	//14  	head [9] = file.ReadLine ();  	//15  	head [10] = file.ReadLine ();  	//16  	head [11] = file.ReadLine ();  	//17  	head [12] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//3 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 пустая строка  	line = file.ReadLine ();  	//5 модуль  	line = file.ReadLine ();  	//6 пустая строка  	line = file.ReadLine ();  	//7 строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//9 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//10 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//11 формат данных  	line = file.ReadLine ();  	//12 еденизы измерения времени  	line = file.ReadLine ();  	head [7] = line;  	Time_markers_scale = line.Split (d) [1];  	//13   	head [8] = file.ReadLine ();  	//14  	head [9] = file.ReadLine ();  	//15  	head [10] = file.ReadLine ();  	//16  	head [11] = file.ReadLine ();  	//17  	head [12] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//3 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 пустая строка  	line = file.ReadLine ();  	//5 модуль  	line = file.ReadLine ();  	//6 пустая строка  	line = file.ReadLine ();  	//7 строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//9 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//10 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//11 формат данных  	line = file.ReadLine ();  	//12 еденизы измерения времени  	line = file.ReadLine ();  	head [7] = line;  	Time_markers_scale = line.Split (d) [1];  	//13   	head [8] = file.ReadLine ();  	//14  	head [9] = file.ReadLine ();  	//15  	head [10] = file.ReadLine ();  	//16  	head [11] = file.ReadLine ();  	//17  	head [12] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: head [3] = line;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: head [2] = line;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: head [4] = line;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: head [5] = line;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: head [6] = line;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: head [7] = line;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: head [8] = file.ReadLine ();  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: head [9] = file.ReadLine ();  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: head [10] = file.ReadLine ();  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: head [11] = file.ReadLine ();  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecordWindows7,The following statement contains a magic number: head [12] = file.ReadLine ();  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//третья строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//5 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//6 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//7 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 еденизы измерения времени  	line = file.ReadLine ();  	Time_markers_scale = line.Split (d) [1];  	head [7] = line;  	//9   	head [8] = file.ReadLine ();  	//10  	head [9] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//третья строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//5 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//6 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//7 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 еденизы измерения времени  	line = file.ReadLine ();  	Time_markers_scale = line.Split (d) [1];  	head [7] = line;  	//9   	head [8] = file.ReadLine ();  	//10  	head [9] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//третья строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//5 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//6 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//7 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 еденизы измерения времени  	line = file.ReadLine ();  	Time_markers_scale = line.Split (d) [1];  	head [7] = line;  	//9   	head [8] = file.ReadLine ();  	//10  	head [9] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//третья строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//5 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//6 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//7 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 еденизы измерения времени  	line = file.ReadLine ();  	Time_markers_scale = line.Split (d) [1];  	head [7] = line;  	//9   	head [8] = file.ReadLine ();  	//10  	head [9] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//третья строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//5 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//6 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//7 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 еденизы измерения времени  	line = file.ReadLine ();  	Time_markers_scale = line.Split (d) [1];  	head [7] = line;  	//9   	head [8] = file.ReadLine ();  	//10  	head [9] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//третья строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//5 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//6 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//7 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 еденизы измерения времени  	line = file.ReadLine ();  	Time_markers_scale = line.Split (d) [1];  	head [7] = line;  	//9   	head [8] = file.ReadLine ();  	//10  	head [9] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//третья строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//5 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//6 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//7 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 еденизы измерения времени  	line = file.ReadLine ();  	Time_markers_scale = line.Split (d) [1];  	head [7] = line;  	//9   	head [8] = file.ReadLine ();  	//10  	head [9] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//третья строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//5 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//6 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//7 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 еденизы измерения времени  	line = file.ReadLine ();  	Time_markers_scale = line.Split (d) [1];  	head [7] = line;  	//9   	head [8] = file.ReadLine ();  	//10  	head [9] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//третья строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//5 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//6 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//7 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 еденизы измерения времени  	line = file.ReadLine ();  	Time_markers_scale = line.Split (d) [1];  	head [7] = line;  	//9   	head [8] = file.ReadLine ();  	//10  	head [9] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: if (file != null) {  	//первая строка заголовок  	title = file.ReadLine ();  	head [0] = title;  	//вторая строка время эксперимента  	line = file.ReadLine ();  	head [1] = line;  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	//третья строка число каналов  	line = file.ReadLine ();  	head [2] = line;  	NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	//4 строка число кадров  	line = file.ReadLine ();  	head [3] = line;  	KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	//5 строка частота в КГц  	line = file.ReadLine ();  	head [4] = line;  	InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	//6 время записи  	line = file.ReadLine ();  	head [5] = line;  	InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	//7 Decimation  	line = file.ReadLine ();  	head [6] = line;  	Decimation = Convert.ToInt32 (line.Split (d) [1]' info);  	//8 еденизы измерения времени  	line = file.ReadLine ();  	Time_markers_scale = line.Split (d) [1];  	head [7] = line;  	//9   	head [8] = file.ReadLine ();  	//10  	head [9] = file.ReadLine ();  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: head [2] = line;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: head [3] = line;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: head [4] = line;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: head [5] = line;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: head [6] = line;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: head [7] = line;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: head [8] = file.ReadLine ();  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadRecord,The following statement contains a magic number: head [9] = file.ReadLine ();  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHead,The following statement contains a magic number: if (file != null) {  	//проверка первой строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return false;  	}  	else {  		head [kol_n] = line;  		kol_n++;  	}  	//проверка второй строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return false;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  	if (kol_d != 3) {  		file.Close ();  		return false;  	}  	//проверка оставшихся семи строк  	for (j = 0; j < 7; j++) {  		line = file.ReadLine ();  		if (line == null) {  			file.Close ();  			return false;  		}  		else {  			head [kol_n] = line;  			kol_d = kol_d + line.Split (d).Length - 1;  			kol_n++;  		}  		if (kol_d != 4 + j) {  			file.Close ();  			return false;  		}  	}  }  else {  	file.Close ();  	return false;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHead,The following statement contains a magic number: if (file != null) {  	//проверка первой строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return false;  	}  	else {  		head [kol_n] = line;  		kol_n++;  	}  	//проверка второй строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return false;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  	if (kol_d != 3) {  		file.Close ();  		return false;  	}  	//проверка оставшихся семи строк  	for (j = 0; j < 7; j++) {  		line = file.ReadLine ();  		if (line == null) {  			file.Close ();  			return false;  		}  		else {  			head [kol_n] = line;  			kol_d = kol_d + line.Split (d).Length - 1;  			kol_n++;  		}  		if (kol_d != 4 + j) {  			file.Close ();  			return false;  		}  	}  }  else {  	file.Close ();  	return false;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHead,The following statement contains a magic number: if (file != null) {  	//проверка первой строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return false;  	}  	else {  		head [kol_n] = line;  		kol_n++;  	}  	//проверка второй строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return false;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  	if (kol_d != 3) {  		file.Close ();  		return false;  	}  	//проверка оставшихся семи строк  	for (j = 0; j < 7; j++) {  		line = file.ReadLine ();  		if (line == null) {  			file.Close ();  			return false;  		}  		else {  			head [kol_n] = line;  			kol_d = kol_d + line.Split (d).Length - 1;  			kol_n++;  		}  		if (kol_d != 4 + j) {  			file.Close ();  			return false;  		}  	}  }  else {  	file.Close ();  	return false;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHead,The following statement contains a magic number: if (kol_d != 3) {  	file.Close ();  	return false;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHead,The following statement contains a magic number: for (j = 0; j < 7; j++) {  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return false;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  	if (kol_d != 4 + j) {  		file.Close ();  		return false;  	}  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHead,The following statement contains a magic number: for (j = 0; j < 7; j++) {  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return false;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  	if (kol_d != 4 + j) {  		file.Close ();  		return false;  	}  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHead,The following statement contains a magic number: if (kol_d != 4 + j) {  	file.Close ();  	return false;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHead,The following statement contains a magic number: ExperimentTime = line.Split (d) [1] + ":" + line.Split (d) [2];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHead,The following statement contains a magic number: line = head [2];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHead,The following statement contains a magic number: line = head [3];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHead,The following statement contains a magic number: line = head [4];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHead,The following statement contains a magic number: line = head [5];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHead,The following statement contains a magic number: line = head [6];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHead,The following statement contains a magic number: line = head [7];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadWindows7,The following statement contains a magic number: if (file != null) {  	//проверка первой строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return false;  	}  	else {  		head [kol_n] = line;  		kol_n++;  	}  	//проверка второй строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return false;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  	if (kol_d != 3) {  		file.Close ();  		return false;  	}  	//проверка оставшихся 12 строк  	for (j = 0; j < 12; j++) {  		line = file.ReadLine ();  		if (line == null) {  			file.Close ();  			return false;  		}  		else {  			head [kol_n] = line;  			kol_d = kol_d + line.Split (d).Length - 1;  			kol_n++;  		}  	}  	if (kol_d != 13) {  		file.Close ();  		return false;  	}  }  else {  	file.Close ();  	return false;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadWindows7,The following statement contains a magic number: if (file != null) {  	//проверка первой строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return false;  	}  	else {  		head [kol_n] = line;  		kol_n++;  	}  	//проверка второй строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return false;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  	if (kol_d != 3) {  		file.Close ();  		return false;  	}  	//проверка оставшихся 12 строк  	for (j = 0; j < 12; j++) {  		line = file.ReadLine ();  		if (line == null) {  			file.Close ();  			return false;  		}  		else {  			head [kol_n] = line;  			kol_d = kol_d + line.Split (d).Length - 1;  			kol_n++;  		}  	}  	if (kol_d != 13) {  		file.Close ();  		return false;  	}  }  else {  	file.Close ();  	return false;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadWindows7,The following statement contains a magic number: if (file != null) {  	//проверка первой строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return false;  	}  	else {  		head [kol_n] = line;  		kol_n++;  	}  	//проверка второй строки  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return false;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  	if (kol_d != 3) {  		file.Close ();  		return false;  	}  	//проверка оставшихся 12 строк  	for (j = 0; j < 12; j++) {  		line = file.ReadLine ();  		if (line == null) {  			file.Close ();  			return false;  		}  		else {  			head [kol_n] = line;  			kol_d = kol_d + line.Split (d).Length - 1;  			kol_n++;  		}  	}  	if (kol_d != 13) {  		file.Close ();  		return false;  	}  }  else {  	file.Close ();  	return false;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadWindows7,The following statement contains a magic number: if (kol_d != 3) {  	file.Close ();  	return false;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadWindows7,The following statement contains a magic number: for (j = 0; j < 12; j++) {  	line = file.ReadLine ();  	if (line == null) {  		file.Close ();  		return false;  	}  	else {  		head [kol_n] = line;  		kol_d = kol_d + line.Split (d).Length - 1;  		kol_n++;  	}  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadWindows7,The following statement contains a magic number: if (kol_d != 13) {  	file.Close ();  	return false;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadWindows7,The following statement contains a magic number: ExperimentTime = line.Split (d) [1] + ':' + line.Split (d) [2];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadWindows7,The following statement contains a magic number: line = head [2];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadWindows7,The following statement contains a magic number: line = head [6];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadWindows7,The following statement contains a magic number: line = head [7];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadWindows7,The following statement contains a magic number: line = head [8];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadWindows7,The following statement contains a magic number: line = head [9];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadWindows7,The following statement contains a magic number: line = head [11];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadCommonFormat,The following statement contains a magic number: try {  	file_path = path;  	//открытие файла  	StreamReader file = new StreamReader (path' System.Text.Encoding.GetEncoding (1251));  	string data50Lines = "";  	for (int i = 0; i < 50; i++)  		data50Lines += file.ReadLine ();  	file.Close ();  	if (data50Lines.Contains (tagExperimentTime) && (data50Lines.Contains (tagNumberOfFrames) || data50Lines.Contains (tagKadrsNumber)) && data50Lines.Contains (tagNumberOfChannels) && data50Lines.Contains (tagInputRateInkHz) && data50Lines.Contains (tagInputTimeInSec) && data50Lines.Contains (tagTimeMarkersScale) && data50Lines.Contains (tagDataAsTimeSequence))  		return true;  	return false;  }  catch {  	return false;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadCommonFormat,The following statement contains a magic number: try {  	file_path = path;  	//открытие файла  	StreamReader file = new StreamReader (path' System.Text.Encoding.GetEncoding (1251));  	string data50Lines = "";  	for (int i = 0; i < 50; i++)  		data50Lines += file.ReadLine ();  	file.Close ();  	if (data50Lines.Contains (tagExperimentTime) && (data50Lines.Contains (tagNumberOfFrames) || data50Lines.Contains (tagKadrsNumber)) && data50Lines.Contains (tagNumberOfChannels) && data50Lines.Contains (tagInputRateInkHz) && data50Lines.Contains (tagInputTimeInSec) && data50Lines.Contains (tagTimeMarkersScale) && data50Lines.Contains (tagDataAsTimeSequence))  		return true;  	return false;  }  catch {  	return false;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadCommonFormat,The following statement contains a magic number: for (int i = 0; i < 50; i++)  	data50Lines += file.ReadLine ();  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadInCommonFormat,The following statement contains a magic number: if (!string.IsNullOrEmpty (line)) {  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  }  else  	return false;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadInCommonFormat,The following statement contains a magic number: if (!string.IsNullOrEmpty (line)) {  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  }  else  	return false;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadInCommonFormat,The following statement contains a magic number: ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadInCommonFormat,The following statement contains a magic number: ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ReadInCommonFormat,The following statement contains a magic number: file = new StreamReader (path' System.Text.Encoding.GetEncoding (1251));  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadInCommonFormat,The following statement contains a magic number: try {  	file_path = path;  	file_name = Path.GetFileName (path);  	//открытие файла  	StreamReader file = new StreamReader (path' System.Text.Encoding.GetEncoding (1251));  	int numberLines = 50;  	string[] linesData = new string[numberLines];  	for (int i = 0; i < numberLines; i++)  		linesData [i] = file.ReadLine ();  	char d = ':'' l = ' ';  	;  	string line;  	//вторая строка время эксперимента  	line = findLineString (linesData' tagExperimentTime);  	if (!string.IsNullOrEmpty (line)) {  		ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	}  	else  		return false;  	//третья строка число каналов  	line = findLineString (linesData' tagNumberOfChannels);  	if (!string.IsNullOrEmpty (line)) {  		NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	}  	else  		return false;  	//4 строка число кадров  	line = findLineString (linesData' tagNumberOfFrames);  	if (string.IsNullOrEmpty (line))  		line = findLineString (linesData' tagKadrsNumber);  	if (!string.IsNullOrEmpty (line)) {  		KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	}  	else  		return false;  	//5 строка частота в КГц  	line = findLineString (linesData' tagInputRateInkHz);  	if (!string.IsNullOrEmpty (line)) {  		InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	}  	else  		return false;  	//6 время записи  	line = findLineString (linesData' tagInputTimeInSec);  	if (!string.IsNullOrEmpty (line)) {  		InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	}  	else  		return false;  	//8 еденизы измерения времени  	line = findLineString (linesData' tagTimeMarkersScale);  	if (!string.IsNullOrEmpty (line)) {  		Time_markers_scale = line.Split (d) [1];  	}  	else  		return false;  	//находим начало записи  	int startLine = 0;  	startLine = findLineNumber (linesData' tagDataAsTimeSequence);  	startLine = findLineNumber (linesData' "0.00"' startLine);  	//  	file.Close ();  	return true;  }  catch {  	return false;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadInCommonFormat,The following statement contains a magic number: try {  	file_path = path;  	file_name = Path.GetFileName (path);  	//открытие файла  	StreamReader file = new StreamReader (path' System.Text.Encoding.GetEncoding (1251));  	int numberLines = 50;  	string[] linesData = new string[numberLines];  	for (int i = 0; i < numberLines; i++)  		linesData [i] = file.ReadLine ();  	char d = ':'' l = ' ';  	;  	string line;  	//вторая строка время эксперимента  	line = findLineString (linesData' tagExperimentTime);  	if (!string.IsNullOrEmpty (line)) {  		ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	}  	else  		return false;  	//третья строка число каналов  	line = findLineString (linesData' tagNumberOfChannels);  	if (!string.IsNullOrEmpty (line)) {  		NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	}  	else  		return false;  	//4 строка число кадров  	line = findLineString (linesData' tagNumberOfFrames);  	if (string.IsNullOrEmpty (line))  		line = findLineString (linesData' tagKadrsNumber);  	if (!string.IsNullOrEmpty (line)) {  		KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	}  	else  		return false;  	//5 строка частота в КГц  	line = findLineString (linesData' tagInputRateInkHz);  	if (!string.IsNullOrEmpty (line)) {  		InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	}  	else  		return false;  	//6 время записи  	line = findLineString (linesData' tagInputTimeInSec);  	if (!string.IsNullOrEmpty (line)) {  		InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	}  	else  		return false;  	//8 еденизы измерения времени  	line = findLineString (linesData' tagTimeMarkersScale);  	if (!string.IsNullOrEmpty (line)) {  		Time_markers_scale = line.Split (d) [1];  	}  	else  		return false;  	//находим начало записи  	int startLine = 0;  	startLine = findLineNumber (linesData' tagDataAsTimeSequence);  	startLine = findLineNumber (linesData' "0.00"' startLine);  	//  	file.Close ();  	return true;  }  catch {  	return false;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadInCommonFormat,The following statement contains a magic number: try {  	file_path = path;  	file_name = Path.GetFileName (path);  	//открытие файла  	StreamReader file = new StreamReader (path' System.Text.Encoding.GetEncoding (1251));  	int numberLines = 50;  	string[] linesData = new string[numberLines];  	for (int i = 0; i < numberLines; i++)  		linesData [i] = file.ReadLine ();  	char d = ':'' l = ' ';  	;  	string line;  	//вторая строка время эксперимента  	line = findLineString (linesData' tagExperimentTime);  	if (!string.IsNullOrEmpty (line)) {  		ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	}  	else  		return false;  	//третья строка число каналов  	line = findLineString (linesData' tagNumberOfChannels);  	if (!string.IsNullOrEmpty (line)) {  		NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	}  	else  		return false;  	//4 строка число кадров  	line = findLineString (linesData' tagNumberOfFrames);  	if (string.IsNullOrEmpty (line))  		line = findLineString (linesData' tagKadrsNumber);  	if (!string.IsNullOrEmpty (line)) {  		KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	}  	else  		return false;  	//5 строка частота в КГц  	line = findLineString (linesData' tagInputRateInkHz);  	if (!string.IsNullOrEmpty (line)) {  		InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	}  	else  		return false;  	//6 время записи  	line = findLineString (linesData' tagInputTimeInSec);  	if (!string.IsNullOrEmpty (line)) {  		InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	}  	else  		return false;  	//8 еденизы измерения времени  	line = findLineString (linesData' tagTimeMarkersScale);  	if (!string.IsNullOrEmpty (line)) {  		Time_markers_scale = line.Split (d) [1];  	}  	else  		return false;  	//находим начало записи  	int startLine = 0;  	startLine = findLineNumber (linesData' tagDataAsTimeSequence);  	startLine = findLineNumber (linesData' "0.00"' startLine);  	//  	file.Close ();  	return true;  }  catch {  	return false;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadInCommonFormat,The following statement contains a magic number: try {  	file_path = path;  	file_name = Path.GetFileName (path);  	//открытие файла  	StreamReader file = new StreamReader (path' System.Text.Encoding.GetEncoding (1251));  	int numberLines = 50;  	string[] linesData = new string[numberLines];  	for (int i = 0; i < numberLines; i++)  		linesData [i] = file.ReadLine ();  	char d = ':'' l = ' ';  	;  	string line;  	//вторая строка время эксперимента  	line = findLineString (linesData' tagExperimentTime);  	if (!string.IsNullOrEmpty (line)) {  		ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  	}  	else  		return false;  	//третья строка число каналов  	line = findLineString (linesData' tagNumberOfChannels);  	if (!string.IsNullOrEmpty (line)) {  		NumberOfChannels = Convert.ToInt32 (line.Split (d) [1]' info);  	}  	else  		return false;  	//4 строка число кадров  	line = findLineString (linesData' tagNumberOfFrames);  	if (string.IsNullOrEmpty (line))  		line = findLineString (linesData' tagKadrsNumber);  	if (!string.IsNullOrEmpty (line)) {  		KadrsNumber = Convert.ToInt32 (line.Split (d) [1]' info);  	}  	else  		return false;  	//5 строка частота в КГц  	line = findLineString (linesData' tagInputRateInkHz);  	if (!string.IsNullOrEmpty (line)) {  		InputRateInkHz = Convert.ToDouble (line.Split (d) [1]' info);  	}  	else  		return false;  	//6 время записи  	line = findLineString (linesData' tagInputTimeInSec);  	if (!string.IsNullOrEmpty (line)) {  		InputTimeInSec = Convert.ToDouble (line.Split (d) [1]' info);  	}  	else  		return false;  	//8 еденизы измерения времени  	line = findLineString (linesData' tagTimeMarkersScale);  	if (!string.IsNullOrEmpty (line)) {  		Time_markers_scale = line.Split (d) [1];  	}  	else  		return false;  	//находим начало записи  	int startLine = 0;  	startLine = findLineNumber (linesData' tagDataAsTimeSequence);  	startLine = findLineNumber (linesData' "0.00"' startLine);  	//  	file.Close ();  	return true;  }  catch {  	return false;  }  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadInCommonFormat,The following statement contains a magic number: if (!string.IsNullOrEmpty (line)) {  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  }  else  	return false;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadInCommonFormat,The following statement contains a magic number: if (!string.IsNullOrEmpty (line)) {  	ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  }  else  	return false;  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadInCommonFormat,The following statement contains a magic number: ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  
Magic Number,Record,ClassRecord,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\calculation\ClassRecord.cs,ValidateReadHeadInCommonFormat,The following statement contains a magic number: ExperimentTime = line.Split (d) [1] + line.Split (d) [2] + line.Split (d) [3];  
Missing Default,WindowsFormsGraphickOpenGL,FormMain,C:\repos\ifelsedeveloper_LCardAnalizatorRMCA\RMCAClientApp\forms\FormMain.cs,CreateReport,The following switch statement is missing a default case: switch (j) {  case 0:  	table.cell (i' j).addParagraph ().Text = pointsDiffTimeX [i - 1].ToString ();  	break;  case 1:  	table.cell (i' j).addParagraph ().Text = pointsDiffDegreeX [i - 1].ToString ();  	break;  case 2:  	table.cell (i' j).addParagraph ().Text = pointsDiffTimeYVu [i - 1].ToString ();  	break;  case 3:  	table.cell (i' j).addParagraph ().Text = pointsDiffTimeYAc [i - 1].ToString ();  	break;  }  
