Implementation smell,Namespace,Class,File,Method,Description
Long Method,CumulusScheduler,Process,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Process.cs,StartProcess,The method has 114 lines of code.
Long Parameter List,CumulusScheduler,Process,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Process.cs,CreateProcessWithLogonW,The method has 11 parameters.
Long Parameter List,CumulusScheduler,Process,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Process.cs,StartProcess,The method has 6 parameters.
Long Parameter List,CumulusScheduler,FileReader,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Process.cs,ReadFile,The method has 5 parameters.
Long Parameter List,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,Initialise,The method has 5 parameters.
Long Parameter List,CumulusScheduler.ApplicationData,Address,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Service References\ApplicationData\Reference.cs,CreateAddress,The method has 7 parameters.
Long Parameter List,CumulusScheduler.ApplicationData,AppScreen,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Service References\ApplicationData\Reference.cs,CreateAppScreen,The method has 6 parameters.
Long Parameter List,CumulusScheduler.ApplicationData,Command,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Service References\ApplicationData\Reference.cs,CreateCommand,The method has 5 parameters.
Long Parameter List,CumulusScheduler.ApplicationData,KeyNameValue,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Service References\ApplicationData\Reference.cs,CreateKeyNameValue,The method has 5 parameters.
Long Parameter List,CumulusScheduler.ApplicationData,RequestItem,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Service References\ApplicationData\Reference.cs,CreateRequestItem,The method has 7 parameters.
Long Parameter List,CumulusScheduler.ApplicationData,Site,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Service References\ApplicationData\Reference.cs,CreateSite,The method has 5 parameters.
Long Parameter List,CumulusScheduler.ApplicationData,VirtualMachine,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Service References\ApplicationData\Reference.cs,CreateVirtualMachine,The method has 9 parameters.
Long Parameter List,CumulusScheduler.ApplicationData,Vlan,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Service References\ApplicationData\Reference.cs,CreateVlan,The method has 6 parameters.
Long Identifier,CumulusScheduler.ApplicationData,ManagementUri,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Service References\ApplicationData\Reference.cs,CreateManagementUri,The length of the parameter managementUri_ManagementCredential is 34.
Long Statement,CumulusScheduler,CumulusSchedulerService,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\CumulusSchedulerService.cs,OnStartInteractive,The length of the statement  "	Debug.WriteLine ("{0}:{1}.{2}"' this.GetType ().Namespace' this.GetType ().Name' System.Reflection.MethodBase.GetCurrentMethod ().Name); " is 136.
Long Statement,CumulusScheduler,CumulusSchedulerService,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\CumulusSchedulerService.cs,OnStart,The length of the statement  "	Debug.WriteLine ("{0}:{1}.{2}"' this.GetType ().Namespace' this.GetType ().Name' System.Reflection.MethodBase.GetCurrentMethod ().Name); " is 136.
Long Statement,CumulusScheduler,CumulusSchedulerService,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\CumulusSchedulerService.cs,OnStop,The length of the statement  "	Debug.WriteLine ("{0}:{1}.{2}"' this.GetType ().Namespace' this.GetType ().Name' System.Reflection.MethodBase.GetCurrentMethod ().Name); " is 136.
Long Statement,CumulusScheduler,CumulusSchedulerService,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\CumulusSchedulerService.cs,OnPause,The length of the statement  "	Debug.WriteLine ("{0}:{1}.{2}"' this.GetType ().Namespace' this.GetType ().Name' System.Reflection.MethodBase.GetCurrentMethod ().Name); " is 136.
Long Statement,CumulusScheduler,CumulusSchedulerService,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\CumulusSchedulerService.cs,OnContinue,The length of the statement  "	Debug.WriteLine ("{0}:{1}.{2}"' this.GetType ().Namespace' this.GetType ().Name' System.Reflection.MethodBase.GetCurrentMethod ().Name); " is 136.
Long Statement,CumulusScheduler,CumulusSchedulerService,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\CumulusSchedulerService.cs,OnCustomCommand,The length of the statement  "	Debug.WriteLine ("{0}:{1}.{2}"' this.GetType ().Namespace' this.GetType ().Name' System.Reflection.MethodBase.GetCurrentMethod ().Name); " is 136.
Long Statement,CumulusScheduler,CumulusSchedulerService,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\CumulusSchedulerService.cs,OnSessionChange,The length of the statement  "	Debug.WriteLine ("{0}:{1}.{2}"' this.GetType ().Namespace' this.GetType ().Name' System.Reflection.MethodBase.GetCurrentMethod ().Name); " is 136.
Long Statement,CumulusScheduler,CumulusSchedulerService,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\CumulusSchedulerService.cs,OnShutdown,The length of the statement  "	Debug.WriteLine ("{0}:{1}.{2}"' this.GetType ().Namespace' this.GetType ().Name' System.Reflection.MethodBase.GetCurrentMethod ().Name); " is 136.
Long Statement,CumulusScheduler,Process,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Process.cs,StartProcess,The length of the statement  "	return StartProcess (CommandLine' WorkingDirectory' Credential.Domain' Credential.UserName' Credential.Password' fAsync); " is 121.
Long Statement,CumulusScheduler,Process,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Process.cs,StartProcess,The length of the statement  "		Debug.WriteLine (string.Format ("SystemUtilities.Process.StartProcess: '{0}' in '{1}' [as '{2}\\{3}'] ..."' CommandLine' WorkingDirectory' Domain' Username' Password)); " is 168.
Long Statement,CumulusScheduler,Process,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Process.cs,StartProcess,The length of the statement  "		fReturn = CreateProcessWithLogonW (Username' Domain' Password' 0' null' CommandLine' 0' IntPtr.Zero' WorkingDirectory' ref startInfo' out processInfo); " is 151.
Long Statement,CumulusScheduler,ScheduledTask,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTask.cs,GetNextSchedule,The length of the statement  "			Debug.WriteLine (string.Format ("{0}: Getting next occurrence for time range '{1}-{2}' [{3}] FAILED. Check CrontabExpression or time range."' this.Parameters.CommandLine' startMinute.ToString ("yyyy-MM-dd HH:mm:ss.fffzzz")' endMinute.ToString ("yyyy-MM-dd HH:mm:ss.fffzzz")' this.Parameters.CrontabExpression)); " is 311.
Long Statement,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,UpdateScheduledTasks,The length of the statement  "	Debug.WriteLine ("{0}:{1}.{2}"' this.GetType ().Namespace' this.GetType ().Name' System.Reflection.MethodBase.GetCurrentMethod ().Name); " is 136.
Long Statement,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,UpdateScheduledTasks,The length of the statement  "		mgmtUri = _svcApplicationData.ManagementUris.Where (e => e.Name.Equals (_managementUri' StringComparison.OrdinalIgnoreCase) && e.Type.Equals ("CumulusScheduler"' StringComparison.OrdinalIgnoreCase)).SingleOrDefault (); " is 218.
Long Statement,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,UpdateScheduledTasks,The length of the statement  "			Debug.WriteLine ("{0}: ManagementUri not found at '{1}'. Will retry later."' _managementUri' _svcApplicationData.BaseUri); " is 122.
Long Statement,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,UpdateScheduledTasks,The length of the statement  "		Debug.WriteLine (string.Format ("{0}: ManagementUri not found at '{1}'. Aborting ..."' _managementUri' _svcApplicationData.BaseUri.AbsoluteUri)); " is 145.
Long Statement,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,UpdateScheduledTasks,The length of the statement  "		Debug.WriteLine (string.Format ("{0}: Timeout retrieving ManagementUri at '{1}'. Aborting ..."' _managementUri' _svcApplicationData.BaseUri.AbsoluteUri)); " is 154.
Long Statement,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,extractTask,The length of the statement  "		throw new ArgumentException ("taskParameters: Parameter validation FAILED. Parameter must not be null."' "taskParameters"); " is 123.
Long Statement,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,extractTask,The length of the statement  "	var mgmtCredential = _svcUtilities.ManagementCredentialHelpers.Where (e => e.Name.Equals (task.Parameters.ManagementCredential' StringComparison.OrdinalIgnoreCase)).Single (); " is 175.
Long Statement,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,Initialise,The length of the statement  "	Debug.WriteLine ("{0}:{1}.{2}"' this.GetType ().Namespace' this.GetType ().Name' System.Reflection.MethodBase.GetCurrentMethod ().Name); " is 136.
Long Statement,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,Initialise,The length of the statement  "		_serverNotReachableRetryMinutes = _updateIntervalMinutes * (0 != ServerNotReachableRetries ? ServerNotReachableRetries : _serverNotReachableRetriesDefault); " is 156.
Long Statement,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,Initialise,The length of the statement  "		_svcApplicationData = new ApplicationData.ApplicationData (new Uri (string.Format ("{0}ApplicationData.svc"' _uri.AbsoluteUri))); " is 129.
Long Statement,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,RunTasks,The length of the statement  "	Debug.WriteLine ("{0}:{1}.{2}"' this.GetType ().Namespace' this.GetType ().Name' System.Reflection.MethodBase.GetCurrentMethod ().Name); " is 136.
Long Statement,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,RunTasks,The length of the statement  "					Debug.WriteLine (string.Format ("Invoking '{0}' as '{1}' [{2}] ..."' task.Parameters.CommandLine' task.Username' task.NextSchedule.ToString ())); " is 145.
Long Statement,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,RunTasks,The length of the statement  "		var msg = string.Format ("{0}: Timeout retrieving ManagementUri at '{1}'. Aborting ..."' _managementUri' _svcApplicationData.BaseUri.AbsoluteUri); " is 146.
Long Statement,CumulusScheduler.ApplicationData,ApplicationData,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Service References\ApplicationData\Reference.cs,ResolveTypeFromName,The length of the statement  "	global::System.Type resolvedType = this.DefaultResolveType (typeName' "LightSwitchApplication"' "CumulusScheduler.ApplicationData"); " is 132.
Long Statement,CumulusScheduler.Utilities,Utilities,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Service References\Utilities\Reference.cs,ResolveTypeFromName,The length of the statement  "	global::System.Type resolvedType = this.DefaultResolveType (typeName' "LightSwitchApplication.Models"' "CumulusScheduler.Utilities"); " is 133.
Magic Number,CumulusScheduler,CumulusSchedulerService,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\CumulusSchedulerService.cs,OnStart,The following statement contains a magic number: try {  	var Uri = string.Empty;  	Uri = ConfigurationManager.AppSettings ["Uri"];  	if (2 <= args.Length)  		Uri = args [0];  	Trace.Assert (!string.IsNullOrWhiteSpace (Uri)' "Uri: Parameter validation FAILED.");  	var ManagementUri = string.Empty;  	ManagementUri = ConfigurationManager.AppSettings ["ManagementUri"];  	if (2 <= args.Length)  		ManagementUri = args [1];  	Trace.Assert (!string.IsNullOrWhiteSpace (ManagementUri)' "ManagementUri: Parameter validation FAILED.");  	var UpdateIntervalMinutes = Convert.ToInt32 (ConfigurationManager.AppSettings ["UpdateIntervalMinutes"]);  	var ServerNotReachableRetries = Convert.ToInt32 (ConfigurationManager.AppSettings ["ServerNotReachableRetries"]);  	_worker = new ScheduledTaskWorker (Uri' ManagementUri' UpdateIntervalMinutes' ServerNotReachableRetries);  }  catch (Exception ex) {  	var msg = string.Format ("{0}@{1}: {2}\r\n{3}"' ex.GetType ().Name' ex.Source' ex.Message' ex.StackTrace);  	Debug.WriteLine (msg);  	Environment.FailFast (msg' ex);  }  
Magic Number,CumulusScheduler,CumulusSchedulerService,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\CumulusSchedulerService.cs,OnStart,The following statement contains a magic number: try {  	var Uri = string.Empty;  	Uri = ConfigurationManager.AppSettings ["Uri"];  	if (2 <= args.Length)  		Uri = args [0];  	Trace.Assert (!string.IsNullOrWhiteSpace (Uri)' "Uri: Parameter validation FAILED.");  	var ManagementUri = string.Empty;  	ManagementUri = ConfigurationManager.AppSettings ["ManagementUri"];  	if (2 <= args.Length)  		ManagementUri = args [1];  	Trace.Assert (!string.IsNullOrWhiteSpace (ManagementUri)' "ManagementUri: Parameter validation FAILED.");  	var UpdateIntervalMinutes = Convert.ToInt32 (ConfigurationManager.AppSettings ["UpdateIntervalMinutes"]);  	var ServerNotReachableRetries = Convert.ToInt32 (ConfigurationManager.AppSettings ["ServerNotReachableRetries"]);  	_worker = new ScheduledTaskWorker (Uri' ManagementUri' UpdateIntervalMinutes' ServerNotReachableRetries);  }  catch (Exception ex) {  	var msg = string.Format ("{0}@{1}: {2}\r\n{3}"' ex.GetType ().Name' ex.Source' ex.Message' ex.StackTrace);  	Debug.WriteLine (msg);  	Environment.FailFast (msg' ex);  }  
Magic Number,CumulusScheduler,CumulusSchedulerService,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\CumulusSchedulerService.cs,OnStart,The following statement contains a magic number: if (2 <= args.Length)  	Uri = args [0];  
Magic Number,CumulusScheduler,CumulusSchedulerService,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\CumulusSchedulerService.cs,OnStart,The following statement contains a magic number: if (2 <= args.Length)  	ManagementUri = args [1];  
Magic Number,CumulusScheduler,Process,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Process.cs,StartProcess,The following statement contains a magic number: try {  	pSaAttr = Marshal.AllocHGlobal (Marshal.SizeOf (typeof(SECURITY_ATTRIBUTES)));  	saAttr.bInheritHandle = true;  	saAttr.lpSecurityDescriptor = IntPtr.Zero;  	saAttr.length = Marshal.SizeOf (typeof(SECURITY_ATTRIBUTES));  	saAttr.lpSecurityDescriptor = IntPtr.Zero;  	Marshal.StructureToPtr (saAttr' pSaAttr' true);  	// Create STDOUT pipe.  	fReturn = CreatePipe (out hConsoleOutputRead' out hConsoleOutputWrite' pSaAttr' 1024);  	//ensure the read handle to pipe for stdout is not inherited  	SetHandleInformation (hConsoleOutputRead' HANDLE_FLAG_INHERIT' 0);  	// Create STDIN pipe  	fReturn = CreatePipe (out hConsoleInputRead' out hConsoleInputWrite' pSaAttr' 1024);  	SetHandleInformation (hConsoleInputRead' HANDLE_FLAG_INHERIT' 0);  	// Create STDERR pipe  	fReturn = CreatePipe (out hConsoleErrorRead' out hConsoleErrorWrite' pSaAttr' 1024);  	SetHandleInformation (hConsoleErrorRead' HANDLE_FLAG_INHERIT' 0);  	startInfo.cb = Marshal.SizeOf (startInfo);  	startInfo.hStdError = hConsoleErrorWrite;  	//startInfo.hStdInput = hConsoleInputWrite;  	startInfo.hStdOutput = hConsoleOutputWrite;  	startInfo.dwFlags = 0x00000100;  	// STARTF_USESTDHANDLES  	Debug.WriteLine (string.Format ("SystemUtilities.Process.StartProcess: '{0}' in '{1}' [as '{2}\\{3}'] ..."' CommandLine' WorkingDirectory' Domain' Username' Password));  	// Create process  	if (string.IsNullOrWhiteSpace (Domain))  		Domain = null;  	fReturn = CreateProcessWithLogonW (Username' Domain' Password' 0' null' CommandLine' 0' IntPtr.Zero' WorkingDirectory' ref startInfo' out processInfo);  	if (!fReturn) {  		throw new Exception (string.Format ("StartProcess() FAILED with error #{0}"' Marshal.GetLastWin32Error ()));  	}  	CloseHandle (hConsoleErrorWrite);  	hConsoleErrorWrite = IntPtr.Zero;  	CloseHandle (hConsoleOutputWrite);  	hConsoleOutputWrite = IntPtr.Zero;  	CloseHandle (hConsoleInputWrite);  	hConsoleInputWrite = IntPtr.Zero;  	if (fAsync) {  		return OutputParameter;  	}  	byte[] buffer = new byte[1];  	int bytesRead;  	var sb = new StringBuilder ();  	dynamic ConsoleEncoding;  	ConsoleEncoding = new System.Text.ASCIIEncoding ();  	Thread threadOutput = new Thread (Process.ReadStandardOutputThread);  	threadOutput.Start (hConsoleOutputRead);  	var readerStderr = new FileReader (hConsoleErrorRead);  	sb.Clear ();  	bytesRead = 0;  	do {  		bytesRead = readerStderr.Read (buffer' 0' buffer.Length);  		string content = ConsoleEncoding.GetString (buffer' 0' bytesRead);  		sb.Append (content);  	}  	while (bytesRead > 0);  	readerStderr.Close ();  	lock (OutputParameter) {  		OutputParameter ["STDERR"] = sb.ToString ();  	}  	lock (ReadStandardOutputThreadCompleted) {  		Debug.WriteLine ("ReadStandardOutputThreadCompleted '{0}'"' ReadStandardOutputThreadCompleted);  	}  	// This read is no longer used here but implemented in a separate thread  	//var readerStdout = new FileReader(hConsoleOutputRead);  	//sb.Clear();  	//bytesRead = 0;  	//do  	//{  	//    bytesRead = readerStdout.Read(buffer' 0' buffer.Length);  	//    string content = ConsoleEncoding.GetString(buffer' 0' bytesRead);  	//    sb.Append(content);  	//}  	//while (bytesRead > 0);  	//readerStdout.Close();  	//OutputParameter[ResultDictionaryNameEnum.STDOUT.ToString()] = sb.ToString();  	UInt32 processExitCode = UInt32.MaxValue;  	fReturn = GetExitCodeProcess (processInfo.hProcess' out processExitCode);  	lock (OutputParameter) {  		OutputParameter [ResultDictionaryNameEnum.ERRORLEVEL.ToString ()] = processExitCode.ToString ();  	}  	return OutputParameter;  }  finally {  	if (null != pSaAttr) {  		Marshal.FreeHGlobal (pSaAttr);  	}  	// Close all handles  	CloseHandle (processInfo.hThread);  	CloseHandle (processInfo.hProcess);  	if (IntPtr.Zero != hConsoleErrorWrite)  		CloseHandle (hConsoleErrorWrite);  	if (IntPtr.Zero != hConsoleOutputWrite)  		CloseHandle (hConsoleOutputWrite);  	if (IntPtr.Zero != hConsoleInputWrite)  		CloseHandle (hConsoleInputWrite);  }  
Magic Number,CumulusScheduler,Process,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Process.cs,StartProcess,The following statement contains a magic number: try {  	pSaAttr = Marshal.AllocHGlobal (Marshal.SizeOf (typeof(SECURITY_ATTRIBUTES)));  	saAttr.bInheritHandle = true;  	saAttr.lpSecurityDescriptor = IntPtr.Zero;  	saAttr.length = Marshal.SizeOf (typeof(SECURITY_ATTRIBUTES));  	saAttr.lpSecurityDescriptor = IntPtr.Zero;  	Marshal.StructureToPtr (saAttr' pSaAttr' true);  	// Create STDOUT pipe.  	fReturn = CreatePipe (out hConsoleOutputRead' out hConsoleOutputWrite' pSaAttr' 1024);  	//ensure the read handle to pipe for stdout is not inherited  	SetHandleInformation (hConsoleOutputRead' HANDLE_FLAG_INHERIT' 0);  	// Create STDIN pipe  	fReturn = CreatePipe (out hConsoleInputRead' out hConsoleInputWrite' pSaAttr' 1024);  	SetHandleInformation (hConsoleInputRead' HANDLE_FLAG_INHERIT' 0);  	// Create STDERR pipe  	fReturn = CreatePipe (out hConsoleErrorRead' out hConsoleErrorWrite' pSaAttr' 1024);  	SetHandleInformation (hConsoleErrorRead' HANDLE_FLAG_INHERIT' 0);  	startInfo.cb = Marshal.SizeOf (startInfo);  	startInfo.hStdError = hConsoleErrorWrite;  	//startInfo.hStdInput = hConsoleInputWrite;  	startInfo.hStdOutput = hConsoleOutputWrite;  	startInfo.dwFlags = 0x00000100;  	// STARTF_USESTDHANDLES  	Debug.WriteLine (string.Format ("SystemUtilities.Process.StartProcess: '{0}' in '{1}' [as '{2}\\{3}'] ..."' CommandLine' WorkingDirectory' Domain' Username' Password));  	// Create process  	if (string.IsNullOrWhiteSpace (Domain))  		Domain = null;  	fReturn = CreateProcessWithLogonW (Username' Domain' Password' 0' null' CommandLine' 0' IntPtr.Zero' WorkingDirectory' ref startInfo' out processInfo);  	if (!fReturn) {  		throw new Exception (string.Format ("StartProcess() FAILED with error #{0}"' Marshal.GetLastWin32Error ()));  	}  	CloseHandle (hConsoleErrorWrite);  	hConsoleErrorWrite = IntPtr.Zero;  	CloseHandle (hConsoleOutputWrite);  	hConsoleOutputWrite = IntPtr.Zero;  	CloseHandle (hConsoleInputWrite);  	hConsoleInputWrite = IntPtr.Zero;  	if (fAsync) {  		return OutputParameter;  	}  	byte[] buffer = new byte[1];  	int bytesRead;  	var sb = new StringBuilder ();  	dynamic ConsoleEncoding;  	ConsoleEncoding = new System.Text.ASCIIEncoding ();  	Thread threadOutput = new Thread (Process.ReadStandardOutputThread);  	threadOutput.Start (hConsoleOutputRead);  	var readerStderr = new FileReader (hConsoleErrorRead);  	sb.Clear ();  	bytesRead = 0;  	do {  		bytesRead = readerStderr.Read (buffer' 0' buffer.Length);  		string content = ConsoleEncoding.GetString (buffer' 0' bytesRead);  		sb.Append (content);  	}  	while (bytesRead > 0);  	readerStderr.Close ();  	lock (OutputParameter) {  		OutputParameter ["STDERR"] = sb.ToString ();  	}  	lock (ReadStandardOutputThreadCompleted) {  		Debug.WriteLine ("ReadStandardOutputThreadCompleted '{0}'"' ReadStandardOutputThreadCompleted);  	}  	// This read is no longer used here but implemented in a separate thread  	//var readerStdout = new FileReader(hConsoleOutputRead);  	//sb.Clear();  	//bytesRead = 0;  	//do  	//{  	//    bytesRead = readerStdout.Read(buffer' 0' buffer.Length);  	//    string content = ConsoleEncoding.GetString(buffer' 0' bytesRead);  	//    sb.Append(content);  	//}  	//while (bytesRead > 0);  	//readerStdout.Close();  	//OutputParameter[ResultDictionaryNameEnum.STDOUT.ToString()] = sb.ToString();  	UInt32 processExitCode = UInt32.MaxValue;  	fReturn = GetExitCodeProcess (processInfo.hProcess' out processExitCode);  	lock (OutputParameter) {  		OutputParameter [ResultDictionaryNameEnum.ERRORLEVEL.ToString ()] = processExitCode.ToString ();  	}  	return OutputParameter;  }  finally {  	if (null != pSaAttr) {  		Marshal.FreeHGlobal (pSaAttr);  	}  	// Close all handles  	CloseHandle (processInfo.hThread);  	CloseHandle (processInfo.hProcess);  	if (IntPtr.Zero != hConsoleErrorWrite)  		CloseHandle (hConsoleErrorWrite);  	if (IntPtr.Zero != hConsoleOutputWrite)  		CloseHandle (hConsoleOutputWrite);  	if (IntPtr.Zero != hConsoleInputWrite)  		CloseHandle (hConsoleInputWrite);  }  
Magic Number,CumulusScheduler,Process,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Process.cs,StartProcess,The following statement contains a magic number: try {  	pSaAttr = Marshal.AllocHGlobal (Marshal.SizeOf (typeof(SECURITY_ATTRIBUTES)));  	saAttr.bInheritHandle = true;  	saAttr.lpSecurityDescriptor = IntPtr.Zero;  	saAttr.length = Marshal.SizeOf (typeof(SECURITY_ATTRIBUTES));  	saAttr.lpSecurityDescriptor = IntPtr.Zero;  	Marshal.StructureToPtr (saAttr' pSaAttr' true);  	// Create STDOUT pipe.  	fReturn = CreatePipe (out hConsoleOutputRead' out hConsoleOutputWrite' pSaAttr' 1024);  	//ensure the read handle to pipe for stdout is not inherited  	SetHandleInformation (hConsoleOutputRead' HANDLE_FLAG_INHERIT' 0);  	// Create STDIN pipe  	fReturn = CreatePipe (out hConsoleInputRead' out hConsoleInputWrite' pSaAttr' 1024);  	SetHandleInformation (hConsoleInputRead' HANDLE_FLAG_INHERIT' 0);  	// Create STDERR pipe  	fReturn = CreatePipe (out hConsoleErrorRead' out hConsoleErrorWrite' pSaAttr' 1024);  	SetHandleInformation (hConsoleErrorRead' HANDLE_FLAG_INHERIT' 0);  	startInfo.cb = Marshal.SizeOf (startInfo);  	startInfo.hStdError = hConsoleErrorWrite;  	//startInfo.hStdInput = hConsoleInputWrite;  	startInfo.hStdOutput = hConsoleOutputWrite;  	startInfo.dwFlags = 0x00000100;  	// STARTF_USESTDHANDLES  	Debug.WriteLine (string.Format ("SystemUtilities.Process.StartProcess: '{0}' in '{1}' [as '{2}\\{3}'] ..."' CommandLine' WorkingDirectory' Domain' Username' Password));  	// Create process  	if (string.IsNullOrWhiteSpace (Domain))  		Domain = null;  	fReturn = CreateProcessWithLogonW (Username' Domain' Password' 0' null' CommandLine' 0' IntPtr.Zero' WorkingDirectory' ref startInfo' out processInfo);  	if (!fReturn) {  		throw new Exception (string.Format ("StartProcess() FAILED with error #{0}"' Marshal.GetLastWin32Error ()));  	}  	CloseHandle (hConsoleErrorWrite);  	hConsoleErrorWrite = IntPtr.Zero;  	CloseHandle (hConsoleOutputWrite);  	hConsoleOutputWrite = IntPtr.Zero;  	CloseHandle (hConsoleInputWrite);  	hConsoleInputWrite = IntPtr.Zero;  	if (fAsync) {  		return OutputParameter;  	}  	byte[] buffer = new byte[1];  	int bytesRead;  	var sb = new StringBuilder ();  	dynamic ConsoleEncoding;  	ConsoleEncoding = new System.Text.ASCIIEncoding ();  	Thread threadOutput = new Thread (Process.ReadStandardOutputThread);  	threadOutput.Start (hConsoleOutputRead);  	var readerStderr = new FileReader (hConsoleErrorRead);  	sb.Clear ();  	bytesRead = 0;  	do {  		bytesRead = readerStderr.Read (buffer' 0' buffer.Length);  		string content = ConsoleEncoding.GetString (buffer' 0' bytesRead);  		sb.Append (content);  	}  	while (bytesRead > 0);  	readerStderr.Close ();  	lock (OutputParameter) {  		OutputParameter ["STDERR"] = sb.ToString ();  	}  	lock (ReadStandardOutputThreadCompleted) {  		Debug.WriteLine ("ReadStandardOutputThreadCompleted '{0}'"' ReadStandardOutputThreadCompleted);  	}  	// This read is no longer used here but implemented in a separate thread  	//var readerStdout = new FileReader(hConsoleOutputRead);  	//sb.Clear();  	//bytesRead = 0;  	//do  	//{  	//    bytesRead = readerStdout.Read(buffer' 0' buffer.Length);  	//    string content = ConsoleEncoding.GetString(buffer' 0' bytesRead);  	//    sb.Append(content);  	//}  	//while (bytesRead > 0);  	//readerStdout.Close();  	//OutputParameter[ResultDictionaryNameEnum.STDOUT.ToString()] = sb.ToString();  	UInt32 processExitCode = UInt32.MaxValue;  	fReturn = GetExitCodeProcess (processInfo.hProcess' out processExitCode);  	lock (OutputParameter) {  		OutputParameter [ResultDictionaryNameEnum.ERRORLEVEL.ToString ()] = processExitCode.ToString ();  	}  	return OutputParameter;  }  finally {  	if (null != pSaAttr) {  		Marshal.FreeHGlobal (pSaAttr);  	}  	// Close all handles  	CloseHandle (processInfo.hThread);  	CloseHandle (processInfo.hProcess);  	if (IntPtr.Zero != hConsoleErrorWrite)  		CloseHandle (hConsoleErrorWrite);  	if (IntPtr.Zero != hConsoleOutputWrite)  		CloseHandle (hConsoleOutputWrite);  	if (IntPtr.Zero != hConsoleInputWrite)  		CloseHandle (hConsoleInputWrite);  }  
Magic Number,CumulusScheduler,Process,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Process.cs,StartProcess,The following statement contains a magic number: fReturn = CreatePipe (out hConsoleOutputRead' out hConsoleOutputWrite' pSaAttr' 1024);  
Magic Number,CumulusScheduler,Process,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Process.cs,StartProcess,The following statement contains a magic number: fReturn = CreatePipe (out hConsoleInputRead' out hConsoleInputWrite' pSaAttr' 1024);  
Magic Number,CumulusScheduler,Process,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\Process.cs,StartProcess,The following statement contains a magic number: fReturn = CreatePipe (out hConsoleErrorRead' out hConsoleErrorWrite' pSaAttr' 1024);  
Magic Number,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,Initialise,The following statement contains a magic number: try {  	_updateIntervalMinutes = (0 != UpdateIntervalMinutes) ? UpdateIntervalMinutes : _updateIntervalMinutesDefault;  	_serverNotReachableRetryMinutes = _updateIntervalMinutes * (0 != ServerNotReachableRetries ? ServerNotReachableRetries : _serverNotReachableRetriesDefault);  	_uri = new Uri (Uri);  	Debug.WriteLine (string.Format ("Uri: '{0}'"' this._uri.AbsoluteUri));  	_managementUri = ManagementUri;  	_svcApplicationData = new ApplicationData.ApplicationData (new Uri (string.Format ("{0}ApplicationData.svc"' _uri.AbsoluteUri)));  	_svcApplicationData.Credentials = System.Net.CredentialCache.DefaultNetworkCredentials;  	_svcApplicationData.Format.UseJson ();  	_svcUtilities = new Utilities.Utilities (new Uri (string.Format ("{0}api/Utilities.svc"' _uri.AbsoluteUri)));  	_svcUtilities.Credentials = System.Net.CredentialCache.DefaultNetworkCredentials;  	_svcUtilities.Format.UseJson ();  	UpdateScheduledTasks ();  	_timerDelegate = new TimerCallback (this.RunTasks);  	//var MilliSecondsToWait = (60 - DateTime.now.Second) * 1000;  	//Debug.WriteLine(string.Format("Waiting {0}ms for begin of next minute ..."' MilliSecondsToWait));  	//System.Threading.Thread.Sleep(MilliSecondsToWait);  	_stateTimer = new Timer (_timerDelegate' null' 1000' (1000 * 60) - 20);  	fReturn = true;  }  catch (Exception ex) {  	Debug.WriteLine (string.Format ("{0}@{1}: {2}\r\n{3}"' ex.GetType ().Name' ex.Source' ex.Message' ex.StackTrace));  	if (fThrowException) {  		throw;  	}  	else {  		fReturn = false;  	}  }  finally {  	// N/A  }  
Magic Number,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,Initialise,The following statement contains a magic number: try {  	_updateIntervalMinutes = (0 != UpdateIntervalMinutes) ? UpdateIntervalMinutes : _updateIntervalMinutesDefault;  	_serverNotReachableRetryMinutes = _updateIntervalMinutes * (0 != ServerNotReachableRetries ? ServerNotReachableRetries : _serverNotReachableRetriesDefault);  	_uri = new Uri (Uri);  	Debug.WriteLine (string.Format ("Uri: '{0}'"' this._uri.AbsoluteUri));  	_managementUri = ManagementUri;  	_svcApplicationData = new ApplicationData.ApplicationData (new Uri (string.Format ("{0}ApplicationData.svc"' _uri.AbsoluteUri)));  	_svcApplicationData.Credentials = System.Net.CredentialCache.DefaultNetworkCredentials;  	_svcApplicationData.Format.UseJson ();  	_svcUtilities = new Utilities.Utilities (new Uri (string.Format ("{0}api/Utilities.svc"' _uri.AbsoluteUri)));  	_svcUtilities.Credentials = System.Net.CredentialCache.DefaultNetworkCredentials;  	_svcUtilities.Format.UseJson ();  	UpdateScheduledTasks ();  	_timerDelegate = new TimerCallback (this.RunTasks);  	//var MilliSecondsToWait = (60 - DateTime.now.Second) * 1000;  	//Debug.WriteLine(string.Format("Waiting {0}ms for begin of next minute ..."' MilliSecondsToWait));  	//System.Threading.Thread.Sleep(MilliSecondsToWait);  	_stateTimer = new Timer (_timerDelegate' null' 1000' (1000 * 60) - 20);  	fReturn = true;  }  catch (Exception ex) {  	Debug.WriteLine (string.Format ("{0}@{1}: {2}\r\n{3}"' ex.GetType ().Name' ex.Source' ex.Message' ex.StackTrace));  	if (fThrowException) {  		throw;  	}  	else {  		fReturn = false;  	}  }  finally {  	// N/A  }  
Magic Number,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,Initialise,The following statement contains a magic number: try {  	_updateIntervalMinutes = (0 != UpdateIntervalMinutes) ? UpdateIntervalMinutes : _updateIntervalMinutesDefault;  	_serverNotReachableRetryMinutes = _updateIntervalMinutes * (0 != ServerNotReachableRetries ? ServerNotReachableRetries : _serverNotReachableRetriesDefault);  	_uri = new Uri (Uri);  	Debug.WriteLine (string.Format ("Uri: '{0}'"' this._uri.AbsoluteUri));  	_managementUri = ManagementUri;  	_svcApplicationData = new ApplicationData.ApplicationData (new Uri (string.Format ("{0}ApplicationData.svc"' _uri.AbsoluteUri)));  	_svcApplicationData.Credentials = System.Net.CredentialCache.DefaultNetworkCredentials;  	_svcApplicationData.Format.UseJson ();  	_svcUtilities = new Utilities.Utilities (new Uri (string.Format ("{0}api/Utilities.svc"' _uri.AbsoluteUri)));  	_svcUtilities.Credentials = System.Net.CredentialCache.DefaultNetworkCredentials;  	_svcUtilities.Format.UseJson ();  	UpdateScheduledTasks ();  	_timerDelegate = new TimerCallback (this.RunTasks);  	//var MilliSecondsToWait = (60 - DateTime.now.Second) * 1000;  	//Debug.WriteLine(string.Format("Waiting {0}ms for begin of next minute ..."' MilliSecondsToWait));  	//System.Threading.Thread.Sleep(MilliSecondsToWait);  	_stateTimer = new Timer (_timerDelegate' null' 1000' (1000 * 60) - 20);  	fReturn = true;  }  catch (Exception ex) {  	Debug.WriteLine (string.Format ("{0}@{1}: {2}\r\n{3}"' ex.GetType ().Name' ex.Source' ex.Message' ex.StackTrace));  	if (fThrowException) {  		throw;  	}  	else {  		fReturn = false;  	}  }  finally {  	// N/A  }  
Magic Number,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,Initialise,The following statement contains a magic number: try {  	_updateIntervalMinutes = (0 != UpdateIntervalMinutes) ? UpdateIntervalMinutes : _updateIntervalMinutesDefault;  	_serverNotReachableRetryMinutes = _updateIntervalMinutes * (0 != ServerNotReachableRetries ? ServerNotReachableRetries : _serverNotReachableRetriesDefault);  	_uri = new Uri (Uri);  	Debug.WriteLine (string.Format ("Uri: '{0}'"' this._uri.AbsoluteUri));  	_managementUri = ManagementUri;  	_svcApplicationData = new ApplicationData.ApplicationData (new Uri (string.Format ("{0}ApplicationData.svc"' _uri.AbsoluteUri)));  	_svcApplicationData.Credentials = System.Net.CredentialCache.DefaultNetworkCredentials;  	_svcApplicationData.Format.UseJson ();  	_svcUtilities = new Utilities.Utilities (new Uri (string.Format ("{0}api/Utilities.svc"' _uri.AbsoluteUri)));  	_svcUtilities.Credentials = System.Net.CredentialCache.DefaultNetworkCredentials;  	_svcUtilities.Format.UseJson ();  	UpdateScheduledTasks ();  	_timerDelegate = new TimerCallback (this.RunTasks);  	//var MilliSecondsToWait = (60 - DateTime.now.Second) * 1000;  	//Debug.WriteLine(string.Format("Waiting {0}ms for begin of next minute ..."' MilliSecondsToWait));  	//System.Threading.Thread.Sleep(MilliSecondsToWait);  	_stateTimer = new Timer (_timerDelegate' null' 1000' (1000 * 60) - 20);  	fReturn = true;  }  catch (Exception ex) {  	Debug.WriteLine (string.Format ("{0}@{1}: {2}\r\n{3}"' ex.GetType ().Name' ex.Source' ex.Message' ex.StackTrace));  	if (fThrowException) {  		throw;  	}  	else {  		fReturn = false;  	}  }  finally {  	// N/A  }  
Magic Number,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,Initialise,The following statement contains a magic number: _stateTimer = new Timer (_timerDelegate' null' 1000' (1000 * 60) - 20);  
Magic Number,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,Initialise,The following statement contains a magic number: _stateTimer = new Timer (_timerDelegate' null' 1000' (1000 * 60) - 20);  
Magic Number,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,Initialise,The following statement contains a magic number: _stateTimer = new Timer (_timerDelegate' null' 1000' (1000 * 60) - 20);  
Magic Number,CumulusScheduler,ScheduledTaskWorker,C:\repos\dfch_biz.dfch.CS.Cumulus.Scheduler\CumulusScheduler\ScheduledTaskWorker.cs,Initialise,The following statement contains a magic number: _stateTimer = new Timer (_timerDelegate' null' 1000' (1000 * 60) - 20);  
