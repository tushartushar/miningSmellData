Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ANSKPipelineLibrary,AnimationPlayer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\AnimationPlayer.cs,UpdateBoneTransforms,Cyclomatic complexity of the method is 14
Complex Method,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,Draw,Cyclomatic complexity of the method is 12
Complex Method,ANSKPipelineLibrary,MeshContent,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\MeshContent.cs,ExportToXML,Cyclomatic complexity of the method is 13
Complex Method,ANSKPipelineLibrary,MeshPart,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\MeshPart.cs,Finalise,Cyclomatic complexity of the method is 9
Complex Method,ANSKPipelineLibrary,MeshRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\MeshRenderer.cs,Refresh,Cyclomatic complexity of the method is 10
Long Parameter List,ANSKPipelineLibrary,ANSKModelContent,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\ANSKModelContent.cs,ANSKModelContent,The method has 10 parameters.
Long Parameter List,ANSKPipelineLibrary,ANSKVertexDeclarationAnimatable,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\ANSKVertexDeclarationAnimatable.cs,ANSKVertexDeclarationAnimatable,The method has 7 parameters.
Long Parameter List,ANSKPipelineLibrary,BlendShape,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\BlendShape.cs,BlendShape,The method has 5 parameters.
Long Parameter List,ANSKPipelineLibrary,BlendShapeContent,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\BlendShapeContent.cs,BlendShapeContent,The method has 5 parameters.
Long Parameter List,ANSKPipelineLibrary,BlendShapeContent,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\BlendShapeContent.cs,GrabContent,The method has 5 parameters.
Long Parameter List,ANSKPipelineLibrary,BlinnMaterial,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\BlinnMaterial.cs,BlinnMaterial,The method has 15 parameters.
Long Parameter List,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddTriangle,The method has 5 parameters.
Long Parameter List,ANSKPipelineLibrary,Joint,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\Joint.cs,Joint,The method has 8 parameters.
Long Parameter List,ANSKPipelineLibrary,LambertMaterial,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\LambertMaterial.cs,LambertMaterial,The method has 9 parameters.
Long Parameter List,ANSKPipelineLibrary,Material,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\Material.cs,Material,The method has 9 parameters.
Long Parameter List,ANSKPipelineLibrary,MeshContent,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\MeshContent.cs,MeshContent,The method has 7 parameters.
Long Parameter List,ANSKPipelineLibrary,MeshPart,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\MeshPart.cs,AddVertex,The method has 7 parameters.
Long Parameter List,ANSKPipelineLibrary,MeshRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\MeshRenderer.cs,Draw,The method has 5 parameters.
Long Parameter List,ANSKPipelineLibrary,SkinningData,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\SkinningData.cs,SkinningData,The method has 5 parameters.
Long Statement,ANSKPipelineLibrary,MeshPart,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\MeshPart.cs,AddVertex,The length of the statement  "	_vertDecsAnim.Add (new ANSKVertexDeclarationAnimatable (vertex' _material.DiffuseColour.ToVector4 ()' uv' normal' indices' weights' boneCount)); " is 144.
Long Statement,ANSKPipelineLibrary,MeshPart,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\MeshPart.cs,Finalise,The length of the statement  "			_vertBuffer = new VertexBuffer (_graphics' typeof(ANSKVertexDeclarationAnimatable)' _vertDecsAnim.Count' BufferUsage.None); " is 123.
Long Statement,ANSKPipelineLibrary,MeshPart,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\MeshPart.cs,Draw,The length of the statement  "                DebugShapeRenderer.AddBoundingSphere(new BoundingSphere(Vector3.Transform(_vertDecsAnim[i].Position' bones[_vertDecsAnim[i].Indices[0]])' 0.1f)' Color.White);" is 158.
Long Statement,ANSKPipelineLibrary,MeshRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\MeshRenderer.cs,Refresh,The length of the statement  "					_meshParts [_meshData.Materials.MaterialIndicieList [q]].AddVertex (_meshData.Verticies [_meshData.VertexIndicies [q]]' _meshData.Uvs [_meshData.UvIndicies [_meshData.VertexIndicies [q]]]' _meshData.Normals [_meshData.VertexIndicies [q]]' ints' VertexToJointsWeights (_meshData.VertexIndicies [q]' ints)' ints.Count' _meshData.VertexIndicies [q]); " is 347.
Long Statement,ANSKPipelineLibrary,MeshRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\MeshRenderer.cs,Refresh,The length of the statement  "					_meshParts [_meshData.Materials.MaterialIndicieList [q]].AddVertex (_meshData.Verticies [_meshData.VertexIndicies [q]]' _meshData.Uvs [_meshData.UvIndicies [_meshData.VertexIndicies [q]]]' _meshData.Normals [_meshData.VertexIndicies [q]]' _meshData.VertexIndicies [q]); " is 269.
Long Statement,ANSKPipelineLibrary,MeshRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\MeshRenderer.cs,CenterModelToOrigin,The length of the statement  "	// If the midpoint is not (0'0) then you subtract that midpoint on every point' as that will will make the midpoint of the box (0'0). " is 133.
Long Statement,ANSKPipelineLibrary,MeshRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\MeshRenderer.cs,Draw,The length of the statement  "		_meshParts [i].MeshEffect.Parameters ["diffuseColour"].SetValue (_meshParts [i].MeshMaterial.DiffuseColour.ToVector4 ()); " is 121.
Long Statement,ANSKPipelineLibrary,XmlExporter,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\XmlExporter.cs,MatrixToEntity,The length of the statement  "	string temp = matrix.M11.ToString () + "'" + matrix.M12.ToString () + "'" + matrix.M13.ToString () + "'" + matrix.M14.ToString () + "'" + matrix.M21.ToString () + "'" + matrix.M22.ToString () + "'" + matrix.M23.ToString () + "'" + matrix.M24.ToString () + "'" + matrix.M31.ToString () + "'" + matrix.M32.ToString () + "'" + matrix.M33.ToString () + "'" + matrix.M34.ToString () + "'" + matrix.M41.ToString () + "'" + matrix.M42.ToString () + "'" + matrix.M43.ToString () + "'" + matrix.M44.ToString (); " is 502.
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddTriangle,The following statement contains a magic number: shape.Vertices [2] = new VertexPositionColor (b' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddTriangle,The following statement contains a magic number: shape.Vertices [3] = new VertexPositionColor (c' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddTriangle,The following statement contains a magic number: shape.Vertices [4] = new VertexPositionColor (c' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddTriangle,The following statement contains a magic number: shape.Vertices [5] = new VertexPositionColor (a' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [2] = new VertexPositionColor (corners [1]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [3] = new VertexPositionColor (corners [2]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [3] = new VertexPositionColor (corners [2]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [4] = new VertexPositionColor (corners [2]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [4] = new VertexPositionColor (corners [2]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [5] = new VertexPositionColor (corners [3]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [5] = new VertexPositionColor (corners [3]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [6] = new VertexPositionColor (corners [3]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [6] = new VertexPositionColor (corners [3]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [7] = new VertexPositionColor (corners [0]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [8] = new VertexPositionColor (corners [4]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [8] = new VertexPositionColor (corners [4]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [9] = new VertexPositionColor (corners [5]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [9] = new VertexPositionColor (corners [5]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [10] = new VertexPositionColor (corners [5]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [10] = new VertexPositionColor (corners [5]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [11] = new VertexPositionColor (corners [6]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [11] = new VertexPositionColor (corners [6]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [12] = new VertexPositionColor (corners [6]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [12] = new VertexPositionColor (corners [6]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [13] = new VertexPositionColor (corners [7]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [13] = new VertexPositionColor (corners [7]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [14] = new VertexPositionColor (corners [7]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [14] = new VertexPositionColor (corners [7]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [15] = new VertexPositionColor (corners [4]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [15] = new VertexPositionColor (corners [4]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [16] = new VertexPositionColor (corners [0]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [17] = new VertexPositionColor (corners [4]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [17] = new VertexPositionColor (corners [4]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [18] = new VertexPositionColor (corners [1]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [19] = new VertexPositionColor (corners [5]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [19] = new VertexPositionColor (corners [5]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [20] = new VertexPositionColor (corners [2]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [20] = new VertexPositionColor (corners [2]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [21] = new VertexPositionColor (corners [6]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [21] = new VertexPositionColor (corners [6]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [22] = new VertexPositionColor (corners [3]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [22] = new VertexPositionColor (corners [3]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [23] = new VertexPositionColor (corners [7]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingFrustum,The following statement contains a magic number: shape.Vertices [23] = new VertexPositionColor (corners [7]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [2] = new VertexPositionColor (corners [1]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [3] = new VertexPositionColor (corners [2]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [3] = new VertexPositionColor (corners [2]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [4] = new VertexPositionColor (corners [2]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [4] = new VertexPositionColor (corners [2]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [5] = new VertexPositionColor (corners [3]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [5] = new VertexPositionColor (corners [3]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [6] = new VertexPositionColor (corners [3]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [6] = new VertexPositionColor (corners [3]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [7] = new VertexPositionColor (corners [0]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [8] = new VertexPositionColor (corners [4]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [8] = new VertexPositionColor (corners [4]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [9] = new VertexPositionColor (corners [5]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [9] = new VertexPositionColor (corners [5]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [10] = new VertexPositionColor (corners [5]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [10] = new VertexPositionColor (corners [5]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [11] = new VertexPositionColor (corners [6]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [11] = new VertexPositionColor (corners [6]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [12] = new VertexPositionColor (corners [6]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [12] = new VertexPositionColor (corners [6]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [13] = new VertexPositionColor (corners [7]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [13] = new VertexPositionColor (corners [7]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [14] = new VertexPositionColor (corners [7]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [14] = new VertexPositionColor (corners [7]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [15] = new VertexPositionColor (corners [4]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [15] = new VertexPositionColor (corners [4]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [16] = new VertexPositionColor (corners [0]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [17] = new VertexPositionColor (corners [4]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [17] = new VertexPositionColor (corners [4]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [18] = new VertexPositionColor (corners [1]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [19] = new VertexPositionColor (corners [5]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [19] = new VertexPositionColor (corners [5]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [20] = new VertexPositionColor (corners [2]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [20] = new VertexPositionColor (corners [2]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [21] = new VertexPositionColor (corners [6]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [21] = new VertexPositionColor (corners [6]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [22] = new VertexPositionColor (corners [3]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [22] = new VertexPositionColor (corners [3]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [23] = new VertexPositionColor (corners [7]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,AddBoundingBox,The following statement contains a magic number: shape.Vertices [23] = new VertexPositionColor (corners [7]' color);  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,Draw,The following statement contains a magic number: foreach (var shape in activeShapes)  	vertexCount += shape.LineCount * 2;  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,Draw,The following statement contains a magic number: vertexCount += shape.LineCount * 2;  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,Draw,The following statement contains a magic number: if (vertexCount > 0) {  	// Make sure our array is large enough  	if (verts.Length < vertexCount) {  		// If we have to resize' we make our array twice as large as necessary so  		// we hopefully won't have to resize it for a while.  		verts = new VertexPositionColor[vertexCount * 2];  	}  	// Now go through the shapes again to move the vertices to our array and  	// add up the number of lines to draw.  	int lineCount = 0;  	int vertIndex = 0;  	foreach (DebugShape shape in activeShapes) {  		lineCount += shape.LineCount;  		int shapeVerts = shape.LineCount * 2;  		for (int i = 0; i < shapeVerts; i++)  			verts [vertIndex++] = shape.Vertices [i];  	}  	// Start our effect to begin rendering.  	effect.CurrentTechnique.Passes [0].Apply ();  	// We draw in a loop because the Reach profile only supports 65'535 primitives. While it's  	// not incredibly likely' if a game tries to render more than 65'535 lines we don't want to  	// crash. We handle this by doing a loop and drawing as many lines as we can at a time' capped  	// at our limit. We then move ahead in our vertex array and draw the next set of lines.  	int vertexOffset = 0;  	while (lineCount > 0) {  		// Figure out how many lines we're going to draw  		int linesToDraw = Math.Min (lineCount' 65535);  		// Draw the lines  		graphics.DrawUserPrimitives (PrimitiveType.LineList' verts' vertexOffset' linesToDraw);  		// Move our vertex offset ahead based on the lines we drew  		vertexOffset += linesToDraw * 2;  		// Remove these lines from our total line count  		lineCount -= linesToDraw;  	}  }  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,Draw,The following statement contains a magic number: if (vertexCount > 0) {  	// Make sure our array is large enough  	if (verts.Length < vertexCount) {  		// If we have to resize' we make our array twice as large as necessary so  		// we hopefully won't have to resize it for a while.  		verts = new VertexPositionColor[vertexCount * 2];  	}  	// Now go through the shapes again to move the vertices to our array and  	// add up the number of lines to draw.  	int lineCount = 0;  	int vertIndex = 0;  	foreach (DebugShape shape in activeShapes) {  		lineCount += shape.LineCount;  		int shapeVerts = shape.LineCount * 2;  		for (int i = 0; i < shapeVerts; i++)  			verts [vertIndex++] = shape.Vertices [i];  	}  	// Start our effect to begin rendering.  	effect.CurrentTechnique.Passes [0].Apply ();  	// We draw in a loop because the Reach profile only supports 65'535 primitives. While it's  	// not incredibly likely' if a game tries to render more than 65'535 lines we don't want to  	// crash. We handle this by doing a loop and drawing as many lines as we can at a time' capped  	// at our limit. We then move ahead in our vertex array and draw the next set of lines.  	int vertexOffset = 0;  	while (lineCount > 0) {  		// Figure out how many lines we're going to draw  		int linesToDraw = Math.Min (lineCount' 65535);  		// Draw the lines  		graphics.DrawUserPrimitives (PrimitiveType.LineList' verts' vertexOffset' linesToDraw);  		// Move our vertex offset ahead based on the lines we drew  		vertexOffset += linesToDraw * 2;  		// Remove these lines from our total line count  		lineCount -= linesToDraw;  	}  }  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,Draw,The following statement contains a magic number: if (vertexCount > 0) {  	// Make sure our array is large enough  	if (verts.Length < vertexCount) {  		// If we have to resize' we make our array twice as large as necessary so  		// we hopefully won't have to resize it for a while.  		verts = new VertexPositionColor[vertexCount * 2];  	}  	// Now go through the shapes again to move the vertices to our array and  	// add up the number of lines to draw.  	int lineCount = 0;  	int vertIndex = 0;  	foreach (DebugShape shape in activeShapes) {  		lineCount += shape.LineCount;  		int shapeVerts = shape.LineCount * 2;  		for (int i = 0; i < shapeVerts; i++)  			verts [vertIndex++] = shape.Vertices [i];  	}  	// Start our effect to begin rendering.  	effect.CurrentTechnique.Passes [0].Apply ();  	// We draw in a loop because the Reach profile only supports 65'535 primitives. While it's  	// not incredibly likely' if a game tries to render more than 65'535 lines we don't want to  	// crash. We handle this by doing a loop and drawing as many lines as we can at a time' capped  	// at our limit. We then move ahead in our vertex array and draw the next set of lines.  	int vertexOffset = 0;  	while (lineCount > 0) {  		// Figure out how many lines we're going to draw  		int linesToDraw = Math.Min (lineCount' 65535);  		// Draw the lines  		graphics.DrawUserPrimitives (PrimitiveType.LineList' verts' vertexOffset' linesToDraw);  		// Move our vertex offset ahead based on the lines we drew  		vertexOffset += linesToDraw * 2;  		// Remove these lines from our total line count  		lineCount -= linesToDraw;  	}  }  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,Draw,The following statement contains a magic number: if (vertexCount > 0) {  	// Make sure our array is large enough  	if (verts.Length < vertexCount) {  		// If we have to resize' we make our array twice as large as necessary so  		// we hopefully won't have to resize it for a while.  		verts = new VertexPositionColor[vertexCount * 2];  	}  	// Now go through the shapes again to move the vertices to our array and  	// add up the number of lines to draw.  	int lineCount = 0;  	int vertIndex = 0;  	foreach (DebugShape shape in activeShapes) {  		lineCount += shape.LineCount;  		int shapeVerts = shape.LineCount * 2;  		for (int i = 0; i < shapeVerts; i++)  			verts [vertIndex++] = shape.Vertices [i];  	}  	// Start our effect to begin rendering.  	effect.CurrentTechnique.Passes [0].Apply ();  	// We draw in a loop because the Reach profile only supports 65'535 primitives. While it's  	// not incredibly likely' if a game tries to render more than 65'535 lines we don't want to  	// crash. We handle this by doing a loop and drawing as many lines as we can at a time' capped  	// at our limit. We then move ahead in our vertex array and draw the next set of lines.  	int vertexOffset = 0;  	while (lineCount > 0) {  		// Figure out how many lines we're going to draw  		int linesToDraw = Math.Min (lineCount' 65535);  		// Draw the lines  		graphics.DrawUserPrimitives (PrimitiveType.LineList' verts' vertexOffset' linesToDraw);  		// Move our vertex offset ahead based on the lines we drew  		vertexOffset += linesToDraw * 2;  		// Remove these lines from our total line count  		lineCount -= linesToDraw;  	}  }  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,Draw,The following statement contains a magic number: if (verts.Length < vertexCount) {  	// If we have to resize' we make our array twice as large as necessary so  	// we hopefully won't have to resize it for a while.  	verts = new VertexPositionColor[vertexCount * 2];  }  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,Draw,The following statement contains a magic number: verts = new VertexPositionColor[vertexCount * 2];  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,Draw,The following statement contains a magic number: foreach (DebugShape shape in activeShapes) {  	lineCount += shape.LineCount;  	int shapeVerts = shape.LineCount * 2;  	for (int i = 0; i < shapeVerts; i++)  		verts [vertIndex++] = shape.Vertices [i];  }  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,Draw,The following statement contains a magic number: while (lineCount > 0) {  	// Figure out how many lines we're going to draw  	int linesToDraw = Math.Min (lineCount' 65535);  	// Draw the lines  	graphics.DrawUserPrimitives (PrimitiveType.LineList' verts' vertexOffset' linesToDraw);  	// Move our vertex offset ahead based on the lines we drew  	vertexOffset += linesToDraw * 2;  	// Remove these lines from our total line count  	lineCount -= linesToDraw;  }  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,Draw,The following statement contains a magic number: while (lineCount > 0) {  	// Figure out how many lines we're going to draw  	int linesToDraw = Math.Min (lineCount' 65535);  	// Draw the lines  	graphics.DrawUserPrimitives (PrimitiveType.LineList' verts' vertexOffset' linesToDraw);  	// Move our vertex offset ahead based on the lines we drew  	vertexOffset += linesToDraw * 2;  	// Remove these lines from our total line count  	lineCount -= linesToDraw;  }  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,Draw,The following statement contains a magic number: vertexOffset += linesToDraw * 2;  
Magic Number,ANSKPipelineLibrary,DebugShapeRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\DebugShapeRenderer.cs,InitializeSphere,The following statement contains a magic number: unitSphere = new Vector3[sphereLineCount * 2];  
Magic Number,ANSKPipelineLibrary,float4,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\ShaderVars\float4.cs,ToFloatArray,The following statement contains a magic number: return new float[4] {  	_num1'  	_num2'  	_num3'  	_num4  };  
Magic Number,ANSKPipelineLibrary,int4,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\ShaderVars\int4.cs,ToIntArray,The following statement contains a magic number: return new int[4] {  	_num1'  	_num2'  	_num3'  	_num4  };  
Missing Default,ANSKPipelineLibrary,MeshPart,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\MeshPart.cs,Finalise,The following switch statement is missing a default case: switch (_renderType) {  case MeshRenderer.ModelRenderType.Normal:  	_vertBuffer = new VertexBuffer (_graphics' typeof(ANSKVertexDeclarationModel)' _vertDecsModel.Count' BufferUsage.None);  	_vertBuffer.SetData<ANSKVertexDeclarationModel> (_vertDecsModel.ToArray ());  	break;  case MeshRenderer.ModelRenderType.Animatable:  	_vertBuffer = new VertexBuffer (_graphics' typeof(ANSKVertexDeclarationAnimatable)' _vertDecsAnim.Count' BufferUsage.None);  	_vertBuffer.SetData<ANSKVertexDeclarationAnimatable> (_vertDecsAnim.ToArray ());  	break;  }  
Missing Default,ANSKPipelineLibrary,MeshRenderer,C:\repos\UTSGamesstudio_ANSKLibrary\MonoGameNew\ANSKLibrary\ANSKPipeline\ANSKPipelineLibrary\MeshRenderer.cs,Refresh,The following switch statement is missing a default case: switch (_renderType) {  case ModelRenderType.Animatable:  	int4 ints = VertexToJointIndices (_meshData.VertexIndicies [q]);  	_meshParts [_meshData.Materials.MaterialIndicieList [q]].AddVertex (_meshData.Verticies [_meshData.VertexIndicies [q]]' _meshData.Uvs [_meshData.UvIndicies [_meshData.VertexIndicies [q]]]' _meshData.Normals [_meshData.VertexIndicies [q]]' ints' VertexToJointsWeights (_meshData.VertexIndicies [q]' ints)' ints.Count' _meshData.VertexIndicies [q]);  	break;  case ModelRenderType.Normal:  	_meshParts [_meshData.Materials.MaterialIndicieList [q]].AddVertex (_meshData.Verticies [_meshData.VertexIndicies [q]]' _meshData.Uvs [_meshData.UvIndicies [_meshData.VertexIndicies [q]]]' _meshData.Normals [_meshData.VertexIndicies [q]]' _meshData.VertexIndicies [q]);  	break;  }  
