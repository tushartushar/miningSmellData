Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DemoCrmWorkflowActivities,GetLocation,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\GetLocation.cs,Execute,The length of the statement  "	tracingService.Trace ("Entered " + _processName + ".Execute()' Activity Instance Id: {0}' Workflow Instance Id: {1}"' executionContext.ActivityInstanceId' executionContext.WorkflowInstanceId); " is 192.
Long Statement,DemoCrmWorkflowActivities,GetLocation,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\GetLocation.cs,Execute,The length of the statement  "	tracingService.Trace (_processName + ".Execute()' Correlation Id: {0}' Initiating User: {1}"' context.CorrelationId' context.InitiatingUserId); " is 143.
Long Statement,DemoCrmWorkflowActivities,GetLocation,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\GetLocation.cs,CallBing,The length of the statement  "		throw new InvalidPluginExecutionException (String.Format (CultureInfo.InvariantCulture' "A Web exception ocurred while attempting to issue the request. {0}: {1}"' exception.Message' str)' exception); " is 199.
Long Statement,DemoCrmWorkflowActivities,GetLocation,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\GetLocation.cs,CallBing,The length of the statement  "		throw new InvalidPluginExecutionException (String.Format (CultureInfo.InvariantCulture' "Exception: {0}"' e.ToString ())); " is 122.
Long Statement,DemoCrmWorkflowActivities,ValidateRegex,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\ValidateRegex.cs,Execute,The length of the statement  "	tracingService.Trace ("Entered " + _processName + ".Execute()' Activity Instance Id: {0}' Workflow Instance Id: {1}"' executionContext.ActivityInstanceId' executionContext.WorkflowInstanceId); " is 192.
Long Statement,DemoCrmWorkflowActivities,ValidateRegex,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\ValidateRegex.cs,Execute,The length of the statement  "	tracingService.Trace (_processName + ".Execute()' Correlation Id: {0}' Initiating User: {1}"' context.CorrelationId' context.InitiatingUserId); " is 143.
Magic Number,DemoCrmWorkflowActivities,ValidateRegex,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\ValidateRegex.cs,ValPhoneNumer,The following statement contains a magic number: if (phoneParts.Length != 3) {  	return false;  } else {  	//if the sets aren't the correct length' return false  	if ((phoneParts [0].Length != 3) || (phoneParts [1].Length != 3) || (phoneParts [2].Length != 4)) {  		return false;  	} else {  		//if any of the sets can't be parsed as an integer' return false  		for (int i = 0; i < 3; i++) {  			int parseResult;  			if (!Int32.TryParse (phoneParts [i]' out parseResult)) {  				return false;  			}  		}  	}  }  
Magic Number,DemoCrmWorkflowActivities,ValidateRegex,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\ValidateRegex.cs,ValPhoneNumer,The following statement contains a magic number: if (phoneParts.Length != 3) {  	return false;  } else {  	//if the sets aren't the correct length' return false  	if ((phoneParts [0].Length != 3) || (phoneParts [1].Length != 3) || (phoneParts [2].Length != 4)) {  		return false;  	} else {  		//if any of the sets can't be parsed as an integer' return false  		for (int i = 0; i < 3; i++) {  			int parseResult;  			if (!Int32.TryParse (phoneParts [i]' out parseResult)) {  				return false;  			}  		}  	}  }  
Magic Number,DemoCrmWorkflowActivities,ValidateRegex,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\ValidateRegex.cs,ValPhoneNumer,The following statement contains a magic number: if (phoneParts.Length != 3) {  	return false;  } else {  	//if the sets aren't the correct length' return false  	if ((phoneParts [0].Length != 3) || (phoneParts [1].Length != 3) || (phoneParts [2].Length != 4)) {  		return false;  	} else {  		//if any of the sets can't be parsed as an integer' return false  		for (int i = 0; i < 3; i++) {  			int parseResult;  			if (!Int32.TryParse (phoneParts [i]' out parseResult)) {  				return false;  			}  		}  	}  }  
Magic Number,DemoCrmWorkflowActivities,ValidateRegex,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\ValidateRegex.cs,ValPhoneNumer,The following statement contains a magic number: if (phoneParts.Length != 3) {  	return false;  } else {  	//if the sets aren't the correct length' return false  	if ((phoneParts [0].Length != 3) || (phoneParts [1].Length != 3) || (phoneParts [2].Length != 4)) {  		return false;  	} else {  		//if any of the sets can't be parsed as an integer' return false  		for (int i = 0; i < 3; i++) {  			int parseResult;  			if (!Int32.TryParse (phoneParts [i]' out parseResult)) {  				return false;  			}  		}  	}  }  
Magic Number,DemoCrmWorkflowActivities,ValidateRegex,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\ValidateRegex.cs,ValPhoneNumer,The following statement contains a magic number: if (phoneParts.Length != 3) {  	return false;  } else {  	//if the sets aren't the correct length' return false  	if ((phoneParts [0].Length != 3) || (phoneParts [1].Length != 3) || (phoneParts [2].Length != 4)) {  		return false;  	} else {  		//if any of the sets can't be parsed as an integer' return false  		for (int i = 0; i < 3; i++) {  			int parseResult;  			if (!Int32.TryParse (phoneParts [i]' out parseResult)) {  				return false;  			}  		}  	}  }  
Magic Number,DemoCrmWorkflowActivities,ValidateRegex,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\ValidateRegex.cs,ValPhoneNumer,The following statement contains a magic number: if (phoneParts.Length != 3) {  	return false;  } else {  	//if the sets aren't the correct length' return false  	if ((phoneParts [0].Length != 3) || (phoneParts [1].Length != 3) || (phoneParts [2].Length != 4)) {  		return false;  	} else {  		//if any of the sets can't be parsed as an integer' return false  		for (int i = 0; i < 3; i++) {  			int parseResult;  			if (!Int32.TryParse (phoneParts [i]' out parseResult)) {  				return false;  			}  		}  	}  }  
Magic Number,DemoCrmWorkflowActivities,ValidateRegex,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\ValidateRegex.cs,ValPhoneNumer,The following statement contains a magic number: if ((phoneParts [0].Length != 3) || (phoneParts [1].Length != 3) || (phoneParts [2].Length != 4)) {  	return false;  } else {  	//if any of the sets can't be parsed as an integer' return false  	for (int i = 0; i < 3; i++) {  		int parseResult;  		if (!Int32.TryParse (phoneParts [i]' out parseResult)) {  			return false;  		}  	}  }  
Magic Number,DemoCrmWorkflowActivities,ValidateRegex,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\ValidateRegex.cs,ValPhoneNumer,The following statement contains a magic number: if ((phoneParts [0].Length != 3) || (phoneParts [1].Length != 3) || (phoneParts [2].Length != 4)) {  	return false;  } else {  	//if any of the sets can't be parsed as an integer' return false  	for (int i = 0; i < 3; i++) {  		int parseResult;  		if (!Int32.TryParse (phoneParts [i]' out parseResult)) {  			return false;  		}  	}  }  
Magic Number,DemoCrmWorkflowActivities,ValidateRegex,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\ValidateRegex.cs,ValPhoneNumer,The following statement contains a magic number: if ((phoneParts [0].Length != 3) || (phoneParts [1].Length != 3) || (phoneParts [2].Length != 4)) {  	return false;  } else {  	//if any of the sets can't be parsed as an integer' return false  	for (int i = 0; i < 3; i++) {  		int parseResult;  		if (!Int32.TryParse (phoneParts [i]' out parseResult)) {  			return false;  		}  	}  }  
Magic Number,DemoCrmWorkflowActivities,ValidateRegex,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\ValidateRegex.cs,ValPhoneNumer,The following statement contains a magic number: if ((phoneParts [0].Length != 3) || (phoneParts [1].Length != 3) || (phoneParts [2].Length != 4)) {  	return false;  } else {  	//if any of the sets can't be parsed as an integer' return false  	for (int i = 0; i < 3; i++) {  		int parseResult;  		if (!Int32.TryParse (phoneParts [i]' out parseResult)) {  			return false;  		}  	}  }  
Magic Number,DemoCrmWorkflowActivities,ValidateRegex,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\ValidateRegex.cs,ValPhoneNumer,The following statement contains a magic number: if ((phoneParts [0].Length != 3) || (phoneParts [1].Length != 3) || (phoneParts [2].Length != 4)) {  	return false;  } else {  	//if any of the sets can't be parsed as an integer' return false  	for (int i = 0; i < 3; i++) {  		int parseResult;  		if (!Int32.TryParse (phoneParts [i]' out parseResult)) {  			return false;  		}  	}  }  
Magic Number,DemoCrmWorkflowActivities,ValidateRegex,F:\newReposMay17\lucasalexander_Crm-Sample-Code\CrmUnitTesting\DemoCrmWorkflowActivities\ValidateRegex.cs,ValPhoneNumer,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	int parseResult;  	if (!Int32.TryParse (phoneParts [i]' out parseResult)) {  		return false;  	}  }  
