Implementation smell,Namespace,Class,File,Method,Description
Long Method,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,ShareTests,The method has 101 lines of code.
Long Statement,CoiniumServ.Tests.Coin.Coinbase,SerializerTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Coin\Coinbase\SerializersTests.cs,SerializeCoinbaseTest,The length of the statement  "            coinbase.ToHexString().Should().Equal("01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff270310cf04062f503253482f0430a3aa530858000000070000000d2f6e6f64655374726174756d2f000000000280010b27010000001976a914329035234168b8da5af106ceb20560401236849888ac80f0fa02000000001976a9147d576fbfca48b899dc750167dd2a2a6572fff49588ac00000000"); " is 358.
Long Statement,CoiniumServ.Tests.Coin.Coinbase,SerializerTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Coin\Coinbase\SerializersTests.cs,SerializeHeaderTest,The length of the statement  "            header.ToHexString().Should().Equal("0100000062804ac7aa2748b16841fc12ac15721dc5be748c64c6b596b74c56478eb84e1c1732a2242d83c6b1a935eecec4c48e56a10b0977f723456331f6b2ff5efb757831a3aa53f7d4481d00507244"); " is 200.
Long Statement,CoiniumServ.Tests.Coin.Coinbase,SerializerTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Coin\Coinbase\SerializersTests.cs,SerializeBlockTest,The length of the statement  "            blockHex.ToHexString().Should().Equal("0100000062804ac7aa2748b16841fc12ac15721dc5be748c64c6b596b74c56478eb84e1c1732a2242d83c6b1a935eecec4c48e56a10b0977f723456331f6b2ff5efb757831a3aa53f7d4481d005072440201000000010000000000000000000000000000000000000000000000000000000000000000ffffffff270310cf04062f503253482f0430a3aa530858000000070000000d2f6e6f64655374726174756d2f000000000280010b27010000001976a914329035234168b8da5af106ceb20560401236849888ac80f0fa02000000001976a9147d576fbfca48b899dc750167dd2a2a6572fff49588ac00000000010000000332a82e92f522deee69b09e27858ba9b87585f2a4913ef71018df40909032fdc3000000006a473044022019ca05cb880a04f0d842268b7e75ac6d2695fc544df033e3daeb29239251a8970220031f6336767f2ea617347484e1290ec0bdcc71056ea2d3084e75384905250ec50121030dd394118fb66ca288bff71d8ea762678783b005770f7f9ba4128233191e0847ffffffff086747cbd339b21b950774186091653a7b8f5751b00a906ff6f5561b3a6fcee6010000006b4830450221009ae1ba9a216d313cc592fc2c1ef08f1e0e555a32b6c1b305f685ac882d38356b0220243106bbb5bb76dde142e574cba8f30c1e2f7059e8e9161770396fbd2b50420f0121030dd394118fb66ca288bff71d8ea762678783b005770f7f9ba4128233191e0847ffffffffe2f15804b1e41c36c925c6f64f219b2bdb3c9fbff4c97a4f0e8c7f31d7e6f2af000000006b48304502200be8894fdd7f5c19be248a979c08bbf2395f606e038c3e02c0266474c03699ab022100ff5de87086e487410f5d7b68012655ca6d814f0caeb9ca42d9c425a90f68b3030121030dd394118fb66ca288bff71d8ea762678783b005770f7f9ba4128233191e0847ffffffff02a0f01900000000001976a9141c50209a1dfdf53313d237b75e9aeb553ca1dfda88ac00e1f505000000001976a914cbb9a3e7a7c1651b1006f876f08b40be85b274f588ac00000000"); " is 1562.
Long Statement,CoiniumServ.Tests.Coin.Coinbase,SerializerTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Coin\Coinbase\SerializersTests.cs,SerializeStringTest,The length of the statement  "            serialized.ToHexString().Should().Equal("2a68747470733a2f2f6769746875622e636f6d2f436f696e69756d536572762f436f696e69756d53657276"); " is 130.
Long Statement,CoiniumServ.Tests.Coin.Coinbase,SerializerTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Coin\Coinbase\SerializersTests.cs,SerializeStringTest,The length of the statement  "            serialized = Serializers.SerializeString(@"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s' when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries' but also the leap into electronic typesetting' remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages' and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."); " is 620.
Long Statement,CoiniumServ.Tests.Coin.Coinbase,SerializerTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Coin\Coinbase\SerializersTests.cs,SerializeStringTest,The length of the statement  "            serialized.ToHexString().Should().Equal("fd3e024c6f72656d20497073756d2069732073696d706c792064756d6d792074657874206f6620746865207072696e74696e6720616e64207479706573657474696e6720696e6475737472792e204c6f72656d20497073756d20686173206265656e2074686520696e6475737472792773207374616e646172642064756d6d79207465787420657665722073696e6365207468652031353030732c207768656e20616e20756e6b6e6f776e207072696e74657220746f6f6b20612067616c6c6579206f66207479706520616e6420736372616d626c656420697420746f206d616b65206120747970652073706563696d656e20626f6f6b2e20497420686173207375727669766564206e6f74206f6e6c7920666976652063656e7475726965732c2062757420616c736f20746865206c65617020696e746f20656c656374726f6e6963207479706573657474696e672c2072656d61696e696e6720657373656e7469616c6c7920756e6368616e6765642e2049742077617320706f70756c61726973656420696e207468652031393630732077697468207468652072656c65617365206f66204c657472617365742073686565747320636f6e7461696e696e67204c6f72656d20497073756d2070617373616765732c20616e64206d6f726520726563656e746c792077697468206465736b746f70207075626c697368696e6720736f667477617265206c696b6520416c64757320506167654d616b657220696e636c7564696e672076657273696f6e73206f66204c6f72656d20497073756d2e"); " is 1198.
Long Statement,CoiniumServ.Tests.Cryptology.Merkle,MerkleTreeTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Cryptology\Merkle\MerkleTreeTests.cs,TestWithZeroTransaction,The length of the statement  "            const string json = "{\"result\":{\"version\":2'\"previousblockhash\":\"1a47638fd58c3b90cc3b2a7f1973dcdf545be4474d2157af28ad6ce7767acb09\"'\"transactions\":[]'\"coinbaseaux\":{\"flags\":\"062f503253482f\"}'\"coinbasevalue\":5000000000'\"target\":\"000000ffff000000000000000000000000000000000000000000000000000000\"'\"mintime\":1403563551'\"mutable\":[\"time\"'\"transactions\"'\"prevblock\"]'\"noncerange\":\"00000000ffffffff\"'\"sigoplimit\":20000'\"sizelimit\":1000000'\"curtime\":1403563962'\"bits\":\"1e00ffff\"'\"height\":313498}'\"error\":null'\"id\":1}"; " is 561.
Long Statement,CoiniumServ.Tests.Cryptology.Merkle,MerkleTreeTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Cryptology\Merkle\MerkleTreeTests.cs,TestWithSingleTransaction,The length of the statement  "                data: [null'[53'242'80'55'174'213'162'52'45'204'185'251'93'86'89'207'225'108'2'213'196'226'105'86'44'36'81'78'26'93'182'160]] " is 125.
Long Statement,CoiniumServ.Tests.Cryptology.Merkle,MerkleTreeTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Cryptology\Merkle\MerkleTreeTests.cs,TestWithSingleTransaction,The length of the statement  "                steps: [[53'242'80'55'174'213'162'52'45'204'185'251'93'86'89'207'225'108'2'213'196'226'105'86'44'36'81'78'26'93'182'160]] " is 121.
Long Statement,CoiniumServ.Tests.Cryptology.Merkle,MerkleTreeTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Cryptology\Merkle\MerkleTreeTests.cs,TestWithSingleTransaction,The length of the statement  "                => f: 357deb5f66416ac7bd10d21557f50d358d85581c4c2e725dc1113cd277869a1a step: 35f25037aed5a2342dccb9fb5d5659cfe16c02d5c4e269562c24514e1a5db6a0 buffer.contact([f's]): 357deb5f66416ac7bd10d21557f50d358d85581c4c2e725dc1113cd277869a1a35f25037aed5a2342dccb9fb5d5659cfe16c02d5c4e269562c24514e1a5db6a0 " is 293.
Long Statement,CoiniumServ.Tests.Cryptology.Merkle,MerkleTreeTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Cryptology\Merkle\MerkleTreeTests.cs,TestWithSingleTransaction,The length of the statement  "            const string json = "{\"result\":{\"version\":2'\"previousblockhash\":\"316b5be0c2cb6903170c1b470fac606c9ecedd149233eaabc1b453843ba408f6\"'\"transactions\":[{\"data\":\"\"'\"hash\":\"a0b65d1a4e51242c5669e2c4d5026ce1cf59565dfbb9cc2d34a2d5ae3750f235\"'\"depends\":[]'\"fee\":1500000'\"sigops\":2}]'\"coinbaseaux\":{\"flags\":\"062f503253482f\"}'\"coinbasevalue\":5001500000'\"target\":\"00000048d4f70000000000000000000000000000000000000000000000000000\"'\"mintime\":1403699336'\"mutable\":[\"time\"'\"transactions\"'\"prevblock\"]'\"noncerange\":\"00000000ffffffff\"'\"sigoplimit\":20000'\"sizelimit\":1000000'\"curtime\":1403699784'\"bits\":\"1d48d4f7\"'\"height\":315219}'\"error\":null'\"id\":1}"; " is 30158.
Long Statement,CoiniumServ.Tests.Cryptology.Merkle,MerkleTreeTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Cryptology\Merkle\MerkleTreeTests.cs,TestWithSingleTransaction,The length of the statement  "            var root = tree.WithFirst("357deb5f66416ac7bd10d21557f50d358d85581c4c2e725dc1113cd277869a1a".HexToByteArray()).ReverseBuffer(); " is 127.
Long Statement,CoiniumServ.Tests.Daemon,BlockTemplateTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Daemon\BlockTemplateTests.cs,TestBlockTemplate,The length of the statement  "            const string json = "{\"result\":{\"version\":2'\"previousblockhash\":\"628f9771c0f6f0c4f7de9067ea6000fe1445ac4dae3ea0b2cb7a291f4ba8cdde\"'\"transactions\":[{\"data\":\"010000000ba688978919ba8bc07fe4a534bb91e73f10df759893a853d84362bcec733c343b000000006a47304402207cd91c6b5a06be1213d4a554d590b8ca5e89bbbdbdc609484201353cc5c56a9d022011c4c4f9f10c31397332a5cb768ddd0d571f8f30312ffb8efa7396320e46e0bf01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffc0a870acbf4c8ae1b3c06e415b830dc174b7b83dfd65e193d16b772be20dc159000000006a473044022046128d16b96a917f632f0dcc51bc3cc5ac651f1dd80a65a23653c75a8732ccdc022052383cbc35cf21b89e1d8d963773ce052bab9e711e28d6c8955b075722ae610001210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffa8a1049d86076a990cdd55402c25d2ce0439db3650b11d9d808dfe6e5380cec1000000006a4730440220333ff2b803ab7c01100d65d57d38455d4f7d7f0c2bf83d638242b5b64ab14b0102202db5805b8e005aeca7f3de4540d0b00c513d8a475f22787b3317442ae720500901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff5d8c52cb42cbb51e43b6c8a40444a12e38d84739b66033d6db5bd97d12190c0c000000006c49304602210084a4678cfa9e7b338150932537e83efd5a461876b02788ba1652a08793ae53b4022100f10792aa0b235e51f7c23dca49205ace5c5a912a3f7685ce932d081e6f42a19901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff7aa2b162938bd59068061d8b6bc65c30da37d3edf66517bdcb8736e457aaf6bf000000006b483045022100ae57759407f72ef6fc771a064b27ddfe09b3df076be1ccb67db324ad8d623c5d02200cb4cdb8486746ffb8c8d4f8c426f936919564200fe2488db164061bc601402501210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460fffffffff6dee530fc0390bfa94c28c477506f1b844650a63db4a7cff84f37c1385cc519000000006b483045022100ace7b74472bbaf00c1389508f537a999b868f19e619bddef53cef27ab510866e02205dfce1090c9c02f34a5527e073f957cc3522cf4b0a1cb821573c6153acd3b49a01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeafbfe205e452a8ca544c5ca63863b55b8acd8ae33a168cb00dd08a953676706000000006b483045022100ee78095f2a28ef90a0fb648623172252a263c22d523703bc0028dbb9181b078702207a295130989598d2573b896e3e8b922410d286f6d86bf82bcc8cc636fda256ce01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff9c992ae24d265aa58c8ea89c33235247b9db317b3602d743e57dc3b4aa041282000000006b483045022100c4904faadf3cb3894831f0376c4962135c3573462ecbaa1641ba04c4097087a402201a34693d19f741d7463400386783afd1b9691b146bb59f81fb0f19ef82ba7c9701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffd347a768891f6b83ba58c4a32dcc881ebfafd0f16023e1381eba6552cf11ed99000000006b4830450221008ba065070659f3bc8992aef5604434aaba1bfc16b1224b39a4be14bc1deb33d4022048d6f97b7fdeda1c3c626b05df1ea70300c25537c36ec4b200825b0333cda6ad01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff89551fd7c7dd51b9a6e4aa9830caa769862c24c11ef453e873e5295f73cd5b59000000006b483045022056c4125114487c393c035be859dcf79fe840d091b1f095964acc9e791490cd1f022100af8effc6008d79428c3cafeeb3d43ab9fff5815f6584583e428c15ffc2d3bd3f01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeed66d4bfd40b0a423babde33b0550c39825bf5a7d6377caf1eddef1c14c9c02000000006b483045022100ead4bec71e9ee792ebb92f378d4592e1b65672b806ae9ed382401882902fd7520220497df514d5d08510fb1666f2a83a468999b204afcc4bd938a18eca1f1747e7f701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff016072afad0c0000001976a91447d35ca845a6a11484e367e6be43f0d23636e04288ac00000000\"'\"hash\":\"0d507fde9e1b16386f0798128067adbd37cdee98acd27903f59b0877f7f31737\"'\"depends\":[]'\"fee\":0'\"sigops\":1}'{\"data\":\"0100000001a666e23a6e64ddfe0eb28cf39ff4568c05b2f0617528910075946a4a4b6c0688000000006a473044022000f5e4d7490e379127d377786fa6003228d9b259f808eb932c2046248253f02602207b417e8042eaf9cbb9c759124072d4ddb2c478999ef8cefdfdb0f830bfb151210121023bb744351b1f6675ef023125090d5adcf1830a31da89a57a000c08367dadce70ffffffff02805b6d29010000001976a9148a7fd9881a93c13a63310462473a827d022b699a88ac80969800000000001976a914fc9963f591c418921a401373069f4158e295886388ac00000000\"'\"hash\":\"623de7ab570540ef659076e6be4f4b8227a47249ea727a8a5afba06a5251e332\"'\"depends\":[]'\"fee\":0'\"sigops\":2}]'\"coinbaseaux\":{\"flags\":\"062f503253482f\"}'\"coinbasevalue\":5000000000'\"target\":\"0000007b58890000000000000000000000000000000000000000000000000000\"'\"mintime\":1401274780'\"mutable\":[\"time\"'\"transactions\"'\"prevblock\"]'\"noncerange\":\"00000000ffffffff\"'\"sigoplimit\":20000'\"sizelimit\":1000000'\"curtime\":1401276010'\"bits\":\"1d7b5889\"'\"height\":283723}'\"error\":null'\"id\":1}";            " is 4614.
Long Statement,CoiniumServ.Tests.Jobs,JobTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Jobs\JobTests.cs,TestJob,The length of the statement  "            job.CoinbaseInitial.Should().Equal("02000000010000000000000000000000000000000000000000000000000000000000000000ffffffff2703c5a804062f503253482f0465e69e5308"); " is 157.
Long Statement,CoiniumServ.Tests.Jobs,JobTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Jobs\JobTests.cs,TestJob,The length of the statement  "            job.CoinbaseFinal.Should().Equal("0d2f6e6f64655374726174756d2f000000000280010b27010000001976a914329035234168b8da5af106ceb20560401236849888ac80f0fa02000000001976a9147d576fbfca48b899dc750167dd2a2a6572fff49588ac00000000"); " is 219.
Long Statement,CoiniumServ.Tests.Jobs,JobTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Jobs\JobTests.cs,TestJob,The length of the statement  "            jobJson.Should().Equal("[\"1\"'\"54561e9e91f7d344768b6752c301b7557716776419febc959db64f1922a9174d\"'\"02000000010000000000000000000000000000000000000000000000000000000000000000ffffffff2703c5a804062f503253482f0465e69e5308\"'\"0d2f6e6f64655374726174756d2f000000000280010b27010000001976a914329035234168b8da5af106ceb20560401236849888ac80f0fa02000000001976a9147d576fbfca48b899dc750167dd2a2a6572fff49588ac00000000\"'[]'\"00000002\"'\"1d2bd7c3\"'\"539ee666\"'true]"); " is 460.
Long Statement,CoiniumServ.Tests.Server.Mining.Stratum,StratumServiceTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Server\Mining\Stratum\StratumServiceTests.cs,MiningSubscribe_WithOutParameters_ShouldEqual,The length of the statement  "            const string expectedResult = "{\"jsonrpc\":\"2.0\"'\"result\":[[\"mining.set_difficulty\"'\"0\"'\"mining.notify\"'\"0\"]'\"00000000\"'4]'\"id\":1}"; " is 149.
Long Statement,CoiniumServ.Tests.Server.Mining.Stratum,StratumServiceTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Server\Mining\Stratum\StratumServiceTests.cs,MiningSubscribe_WithSignature_ShouldEqual,The length of the statement  "            const string expectedResult = "{\"jsonrpc\":\"2.0\"'\"result\":[[\"mining.set_difficulty\"'\"0\"'\"mining.notify\"'\"0\"]'\"00000000\"'4]'\"id\":1}"; " is 149.
Long Statement,CoiniumServ.Tests.Server.Mining.Stratum,StratumServiceTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Server\Mining\Stratum\StratumServiceTests.cs,MiningSubscribe_WithSessionId_ShouldEqual,The length of the statement  "            const string request = @"{ 'id' : 1' 'method' : 'mining.subscribe'' 'params' : [ 'cgminer/3.7.2'' '02000000b507a8fd1ea2b7d9cdec867086f6935228aba1540154f83930377ea5a2e37108' ] }"; " is 178.
Long Statement,CoiniumServ.Tests.Server.Mining.Stratum,StratumServiceTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Server\Mining\Stratum\StratumServiceTests.cs,MiningSubscribe_WithSessionId_ShouldEqual,The length of the statement  "            const string expectedResult = "{\"jsonrpc\":\"2.0\"'\"result\":[[\"mining.set_difficulty\"'\"0\"'\"mining.notify\"'\"0\"]'\"00000000\"'4]'\"id\":1}"; " is 149.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The length of the statement  "                handleSubmit: {"params":["mn4jUMneEBjZuDPEdFuj6BmFPmehmrT2Zc"'"2"'"07000000"'"53aaa331"'"44725000"]'"id":120'"method":"mining.submit"} " is 134.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The length of the statement  "                processShare: jobId: 2 previousDifficulty: undefined difficulty: 32 extraNonce1: 58000000 extraNonce2: 07000000 nTime: 53aaa331 nonce		: 44725000 ipAddress: 10.0.0.40 port: 3333 workerName: mn4jUMneEBjZuDPEdFuj6BmFPmehmrT2Zc " is 224.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The length of the statement  "                coinbaseBuffer: 01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff270310cf04062f503253482f0430a3aa530858000000070000000d2f6e6f64655374726174756d2f000000000280010b27010000001976a914329035234168b8da5af106ceb20560401236849888ac80f0fa02000000001976a9147d576fbfca48b899dc750167dd2a2a6572fff49588ac00000000 " is 332.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The length of the statement  "                headerBuffer: 0200000062804ac7aa2748b16841fc12ac15721dc5be748c64c6b596b74c56478eb84e1c1732a2242d83c6b1a935eecec4c48e56a10b0977f723456331f6b2ff5efb757831a3aa53f7d4481d00507244 " is 174.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The length of the statement  "                blockHex: 0200000062804ac7aa2748b16841fc12ac15721dc5be748c64c6b596b74c56478eb84e1c1732a2242d83c6b1a935eecec4c48e56a10b0977f723456331f6b2ff5efb757831a3aa53f7d4481d005072440201000000010000000000000000000000000000000000000000000000000000000000000000ffffffff270310cf04062f503253482f0430a3aa530858000000070000000d2f6e6f64655374726174756d2f000000000280010b27010000001976a914329035234168b8da5af106ceb20560401236849888ac80f0fa02000000001976a9147d576fbfca48b899dc750167dd2a2a6572fff49588ac00000000010000000332a82e92f522deee69b09e27858ba9b87585f2a4913ef71018df40909032fdc3000000006a473044022019ca05cb880a04f0d842268b7e75ac6d2695fc544df033e3daeb29239251a8970220031f6336767f2ea617347484e1290ec0bdcc71056ea2d3084e75384905250ec50121030dd394118fb66ca288bff71d8ea762678783b005770f7f9ba4128233191e0847ffffffff086747cbd339b21b950774186091653a7b8f5751b00a906ff6f5561b3a6fcee6010000006b4830450221009ae1ba9a216d313cc592fc2c1ef08f1e0e555a32b6c1b305f685ac882d38356b0220243106bbb5bb76dde142e574cba8f30c1e2f7059e8e9161770396fbd2b50420f0121030dd394118fb66ca288bff71d8ea762678783b005770f7f9ba4128233191e0847ffffffffe2f15804b1e41c36c925c6f64f219b2bdb3c9fbff4c97a4f0e8c7f31d7e6f2af000000006b48304502200be8894fdd7f5c19be248a979c08bbf2395f606e038c3e02c0266474c03699ab022100ff5de87086e487410f5d7b68012655ca6d814f0caeb9ca42d9c425a90f68b3030121030dd394118fb66ca288bff71d8ea762678783b005770f7f9ba4128233191e0847ffffffff02a0f01900000000001976a9141c50209a1dfdf53313d237b75e9aeb553ca1dfda88ac00e1f505000000001976a914cbb9a3e7a7c1651b1006f876f08b40be85b274f588ac00000000 " is 1530.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The length of the statement  "                emit: {"job":"2"'"ip":"10.0.0.40"'"port":3333'"worker":"mn4jUMneEBjZuDPEdFuj6BmFPmehmrT2Zc"'"height":315152'"blockReward":5000000000'"difficulty":32'"shareDiff":"3007.13649751"'"blockDiff":899.811835904'"blockDiffActual":0.013730039'"blockHash":"e242093d92f4c98bfd5dd1f9f6489652d1165f5ce4eed1f28747d2b8e3efd8b6"} blockHex: 0200000062804ac7aa2748b16841fc12ac15721dc5be748c64c6b596b74c56478eb84e1c1732a2242d83c6b1a935eecec4c48e56a10b0977f723456331f6b2ff5efb757831a3aa53f7d4481d005072440201000000010000000000000000000000000000000000000000000000000000000000000000ffffffff270310cf04062f503253482f0430a3aa530858000000070000000d2f6e6f64655374726174756d2f000000000280010b27010000001976a914329035234168b8da5af106ceb20560401236849888ac80f0fa02000000001976a9147d576fbfca48b899dc750167dd2a2a6572fff49588ac00000000010000000332a82e92f522deee69b09e27858ba9b87585f2a4913ef71018df40909032fdc3000000006a473044022019ca05cb880a04f0d842268b7e75ac6d2695fc544df033e3daeb29239251a8970220031f6336767f2ea617347484e1290ec0bdcc71056ea2d3084e75384905250ec50121030dd394118fb66ca288bff71d8ea762678783b005770f7f9ba4128233191e0847ffffffff086747cbd339b21b950774186091653a7b8f5751b00a906ff6f5561b3a6fcee6010000006b4830450221009ae1ba9a216d313cc592fc2c1ef08f1e0e555a32b6c1b305f685ac882d38356b0220243106bbb5bb76dde142e574cba8f30c1e2f7059e8e9161770396fbd2b50420f0121030dd394118fb66ca288bff71d8ea762678783b005770f7f9ba4128233191e0847ffffffffe2f15804b1e41c36c925c6f64f219b2bdb3c9fbff4c97a4f0e8c7f31d7e6f2af000000006b48304502200be8894fdd7f5c19be248a979c08bbf2395f606e038c3e02c0266474c03699ab022100ff5de87086e487410f5d7b68012655ca6d814f0caeb9ca42d9c425a90f68b3030121030dd394118fb66ca288bff71d8ea762678783b005770f7f9ba4128233191e0847ffffffff02a0f01900000000001976a9141c50209a1dfdf53313d237b75e9aeb553ca1dfda88ac00e1f505000000001976a914cbb9a3e7a7c1651b1006f876f08b40be85b274f588ac00000000 " is 1843.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The length of the statement  "                2014-06-25 13:24:04 [Pool]	[litecoin] (Thread 1) Block found: e242093d92f4c98bfd5dd1f9f6489652d1165f5ce4eed1f28747d2b8e3efd8b6 " is 126.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The length of the statement  "            const string shareJson = "{\"params\":[\"mn4jUMneEBjZuDPEdFuj6BmFPmehmrT2Zc\"'\"2\"'\"07000000\"'\"53aaa331\"'\"44725000\"]'\"id\":120'\"method\":\"mining.submit\"}"; " is 166.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The length of the statement  "            share.CoinbaseBuffer.ToHexString().Should().Equal("01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff270310cf04062f503253482f0430a3aa530858000000070000000d2f6e6f64655374726174756d2f000000000280010b27010000001976a914329035234168b8da5af106ceb20560401236849888ac80f0fa02000000001976a9147d576fbfca48b899dc750167dd2a2a6572fff49588ac00000000"); " is 370.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The length of the statement  "            share.CoinbaseHash.Bytes.ToHexString().Should().Equal("76a3f30f9dfdb980bf08a153f097c6456d5e0d290a41f760ce380c4b9c73f5d0"); " is 122.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The length of the statement  "            share.HeaderBuffer.ToHexString().Should().Equal("0100000062804ac7aa2748b16841fc12ac15721dc5be748c64c6b596b74c56478eb84e1c1732a2242d83c6b1a935eecec4c48e56a10b0977f723456331f6b2ff5efb757831a3aa53f7d4481d00507244"); " is 212.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The length of the statement  "            share.HeaderValue.Should().Equal(BigInteger.Parse("56595583015948388667310925439783538703284674723883721372476934843162971850569")); " is 132.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The length of the statement  "            share.Job.Target.Should().Equal(BigInteger.Parse("1963543975774994773269086777481374456547162842587540503781935641788416")); " is 124.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The length of the statement  "            //share.BlockHex.ToHexString().Should().Equal("0200000062804ac7aa2748b16841fc12ac15721dc5be748c64c6b596b74c56478eb84e1c1732a2242d83c6b1a935eecec4c48e56a10b0977f723456331f6b2ff5efb757831a3aa53f7d4481d005072440201000000010000000000000000000000000000000000000000000000000000000000000000ffffffff270310cf04062f503253482f0430a3aa530858000000070000000d2f6e6f64655374726174756d2f000000000280010b27010000001976a914329035234168b8da5af106ceb20560401236849888ac80f0fa02000000001976a9147d576fbfca48b899dc750167dd2a2a6572fff49588ac00000000010000000332a82e92f522deee69b09e27858ba9b87585f2a4913ef71018df40909032fdc3000000006a473044022019ca05cb880a04f0d842268b7e75ac6d2695fc544df033e3daeb29239251a8970220031f6336767f2ea617347484e1290ec0bdcc71056ea2d3084e75384905250ec50121030dd394118fb66ca288bff71d8ea762678783b005770f7f9ba4128233191e0847ffffffff086747cbd339b21b950774186091653a7b8f5751b00a906ff6f5561b3a6fcee6010000006b4830450221009ae1ba9a216d313cc592fc2c1ef08f1e0e555a32b6c1b305f685ac882d38356b0220243106bbb5bb76dde142e574cba8f30c1e2f7059e8e9161770396fbd2b50420f0121030dd394118fb66ca288bff71d8ea762678783b005770f7f9ba4128233191e0847ffffffffe2f15804b1e41c36c925c6f64f219b2bdb3c9fbff4c97a4f0e8c7f31d7e6f2af000000006b48304502200be8894fdd7f5c19be248a979c08bbf2395f606e038c3e02c0266474c03699ab022100ff5de87086e487410f5d7b68012655ca6d814f0caeb9ca42d9c425a90f68b3030121030dd394118fb66ca288bff71d8ea762678783b005770f7f9ba4128233191e0847ffffffff02a0f01900000000001976a9141c50209a1dfdf53313d237b75e9aeb553ca1dfda88ac00e1f505000000001976a914cbb9a3e7a7c1651b1006f876f08b40be85b274f588ac00000000"); " is 1570.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,NonCandicateShareTest,The length of the statement  "                handleSubmit: {"params":["mn4jUMneEBjZuDPEdFuj6BmFPmehmrT2Zc"'"2"'"07000000"'"53aaa331"'"87500200"]'"id":118'"method":"mining.submit"} " is 134.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,NonCandicateShareTest,The length of the statement  "                jobId: 2 previousDifficulty: undefined difficulty: 32 extraNonce1: 58000000 extraNonce2: 07000000 nTime: 53aaa331 nonce		: 87500200 ipAddress: 10.0.0.40 port: 3333 workerName: mn4jUMneEBjZuDPEdFuj6BmFPmehmrT2Zc " is 210.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,NonCandicateShareTest,The length of the statement  "                coinbaseBuffer: 01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff270310cf04062f503253482f0430a3aa530858000000070000000d2f6e6f64655374726174756d2f000000000280010b27010000001976a914329035234168b8da5af106ceb20560401236849888ac80f0fa02000000001976a9147d576fbfca48b899dc750167dd2a2a6572fff49588ac00000000 " is 332.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,NonCandicateShareTest,The length of the statement  "                headerBuffer: 0200000062804ac7aa2748b16841fc12ac15721dc5be748c64c6b596b74c56478eb84e1c1732a2242d83c6b1a935eecec4c48e56a10b0977f723456331f6b2ff5efb757831a3aa53f7d4481d00025087 " is 174.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,NonCandicateShareTest,The length of the statement  "                2014-06-25 13:23:45 [Pool]	[litecoin] (Thread 1) Share accepted at diff 32/38.72890445 by mn4jUMneEBjZuDPEdFuj6BmFPmehmrT2Zc [10.0.0.40] " is 136.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,NonCandicateShareTest,The length of the statement  "                emit: {"job":"2"'"ip":"10.0.0.40"'"port":3333'"worker":"mn4jUMneEBjZuDPEdFuj6BmFPmehmrT2Zc"'"height":315152'"blockReward":5000000000'"difficulty":32'"shareDiff":"38.72890445"'"blockDiff":899.811835904'"blockDiffActual":0.013730039'"blockHashInvalid":"87776a72cedf7467ef78c0dc8a7181340342888e33bd19e6ff48d579299d38c1"} blockHex: undefined " is 337.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,NonCandicateShareTest,The length of the statement  "            const string shareJson = "{\"params\":[\"mn4jUMneEBjZuDPEdFuj6BmFPmehmrT2Zc\"'\"2\"'\"07000000\"'\"53aaa331\"'\"87500200\"]'\"id\":118'\"method\":\"mining.submit\"}"; " is 166.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,NonCandicateShareTest,The length of the statement  "            share.CoinbaseBuffer.ToHexString().Should().Equal("01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff270310cf04062f503253482f0430a3aa530858000000070000000d2f6e6f64655374726174756d2f000000000280010b27010000001976a914329035234168b8da5af106ceb20560401236849888ac80f0fa02000000001976a9147d576fbfca48b899dc750167dd2a2a6572fff49588ac00000000"); " is 370.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,NonCandicateShareTest,The length of the statement  "            share.CoinbaseHash.Bytes.ToHexString().Should().Equal("76a3f30f9dfdb980bf08a153f097c6456d5e0d290a41f760ce380c4b9c73f5d0"); " is 122.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,NonCandicateShareTest,The length of the statement  "            share.HeaderBuffer.ToHexString().Should().Equal("0100000062804ac7aa2748b16841fc12ac15721dc5be748c64c6b596b74c56478eb84e1c1732a2242d83c6b1a935eecec4c48e56a10b0977f723456331f6b2ff5efb757831a3aa53f7d4481d00025087"); " is 212.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,NonCandicateShareTest,The length of the statement  "            share.HeaderValue.Should().Equal(BigInteger.Parse("39821931798823469742770006186359742132221210135666296384521732031216086419895")); " is 132.
Long Statement,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,NonCandicateShareTest,The length of the statement  "            share.Job.Target.Should().Equal(BigInteger.Parse("1963543975774994773269086777481374456547162842587540503781935641788416")); " is 124.
Long Statement,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The length of the statement  "            generationTransaction.Initial.Skip(5).Take(32).ToHexString().Should().Equal("0000000000000000000000000000000000000000000000000000000000000000"); " is 144.
Long Statement,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The length of the statement  "            generationTransaction.Final.Skip(18).Take(69).ToHexString().Should().Equal("0280010b27010000001976a914329035234168b8da5af106ceb20560401236849888ac80f0fa02000000001976a9147d576fbfca48b899dc750167dd2a2a6572fff49588ac"); " is 217.
Long Statement,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The length of the statement  "            generationTransaction.Initial.ToHexString().Should().Equal("02000000010000000000000000000000000000000000000000000000000000000000000000ffffffff2703be9d04062f503253482f04c3e89a5308"); " is 181.
Long Statement,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The length of the statement  "            generationTransaction.Final.ToHexString().Should().Equal("0d2f6e6f64655374726174756d2f000000000280010b27010000001976a914329035234168b8da5af106ceb20560401236849888ac80f0fa02000000001976a9147d576fbfca48b899dc750167dd2a2a6572fff49588ac00000000"); " is 243.
Long Statement,CoiniumServ.Tests.Transactions,OutputsTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\OutputsTests.cs,TestOutputs,The length of the statement  "            outputs.List.First().PublicKeyScript.ToHexString().Should().Equal("76a914329035234168b8da5af106ceb20560401236849888ac"); " is 120.
Long Statement,CoiniumServ.Tests.Transactions,OutputsTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\OutputsTests.cs,TestOutputs,The length of the statement  "            outputs.GetBuffer().ToHexString().Should().Equal("0280010b27010000001976a914329035234168b8da5af106ceb20560401236849888ac80f0fa02000000001976a9147d576fbfca48b899dc750167dd2a2a6572fff49588ac"); " is 191.
Magic Number,CoiniumServ.Tests.Blocks,BlockProcessorTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Blocks\BlockProcessorTests.cs,QueryBlockTest_WithInvalidBlockHash_ShouldBeOrphaned,The following statement contains a magic number: _daemonClient.GetBlock("INVALID_HASH").Returns(x =>              {                  throw new RpcErrorException(new RpcErrorResponse                  {                      Error = new RpcError                      {                          Code = -5 // 'block not found'.                      }                  });              });
Magic Number,CoiniumServ.Tests.Blocks,BlockProcessorTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Blocks\BlockProcessorTests.cs,QueryBlockTest_WithNonExistingGenerationTransaction_ShouldBeOrphaned,The following statement contains a magic number: _daemonClient.GetTransaction("TX_HASH").Returns(x =>              {                  throw new RpcErrorException(new RpcErrorResponse                  {                      Error = new RpcError                      {                          Code = -5 // 'Invalid or non-wallet transaction id'                      }                  });              });
Magic Number,CoiniumServ.Tests.Blocks,BlockProcessorTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Blocks\BlockProcessorTests.cs,QueryBlockTest_ShouldSetReward,The following statement contains a magic number: _daemonClient.GetTransaction("TX_HASH").Returns(info => new Transaction              {                  Details = new List<TransactionDetail> { new TransactionDetail { Address = "POOL_ADDRESS"' Amount = 999 } }              });
Magic Number,CoiniumServ.Tests.Blocks,BlockProcessorTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Blocks\BlockProcessorTests.cs,QueryBlockTest_ShouldSetReward,The following statement contains a magic number: block.Reward.Should().Equal((decimal)999);
Magic Number,CoiniumServ.Tests.Coin,AmountTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Coin\AmountTests.cs,ConversionTests,The following statement contains a magic number: const double coins = 7.05132704;
Magic Number,CoiniumServ.Tests.Coin,AmountTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Coin\AmountTests.cs,ConversionTests,The following statement contains a magic number: const double millibits = 7051.32704;
Magic Number,CoiniumServ.Tests.Coin,AmountTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Coin\AmountTests.cs,ConversionTests,The following statement contains a magic number: const double microbits = 7051327.04;
Magic Number,CoiniumServ.Tests.Coin,AmountTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Coin\AmountTests.cs,ConversionTests,The following statement contains a magic number: const int satoshis = 705132704;
Magic Number,CoiniumServ.Tests.Coin,Base58Test,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Coin\Base58Test.cs,TestEncode,The following statement contains a magic number: var bi = BigInteger.ValueOf(3471844090);
Magic Number,CoiniumServ.Tests.Coin.Coinbase,SerializerTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Coin\Coinbase\SerializersTests.cs,SerializerTests,The following statement contains a magic number: _signatureScript = Substitute.For<SignatureScript>(                  _blockTemplate.Height'                  _blockTemplate.CoinBaseAux.Flags'                  1403691824760'                  (byte)_extraNonce.ExtraNoncePlaceholder.Length'                  "/nodeStratum/");
Magic Number,CoiniumServ.Tests.Coin.Coinbase,SerializerTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Coin\Coinbase\SerializersTests.cs,SerializerTests,The following statement contains a magic number: double blockReward = 5000000000;
Magic Number,CoiniumServ.Tests.Coin.Coinbase,SerializerTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Coin\Coinbase\SerializersTests.cs,SerializerTests,The following statement contains a magic number: var amount = blockReward * 0.01;
Magic Number,CoiniumServ.Tests.Coin.Coinbase,SerializerTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Coin\Coinbase\SerializersTests.cs,SerializerTests,The following statement contains a magic number: _jobCounter.Next().Returns((UInt64)2);
Magic Number,CoiniumServ.Tests.Coin.Coinbase,SerializerTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Coin\Coinbase\SerializersTests.cs,SerializeNumberTest,The following statement contains a magic number: var buffer = Serializers.SerializeNumber(16);
Magic Number,CoiniumServ.Tests.Coin.Coinbase,SerializerTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Coin\Coinbase\SerializersTests.cs,SerializeNumberTest,The following statement contains a magic number: buffer = Serializers.SerializeNumber(10000);
Magic Number,CoiniumServ.Tests.Daemon,BlockTemplateTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Daemon\BlockTemplateTests.cs,BlockTemplateTests,The following statement contains a magic number: _expected = new BlockTemplate              {                  Version = 2'                  PreviousBlockHash = "628f9771c0f6f0c4f7de9067ea6000fe1445ac4dae3ea0b2cb7a291f4ba8cdde"'                  Transactions = new[]                  {                      new BlockTemplateTransaction()                      {                          Data = "010000000ba688978919ba8bc07fe4a534bb91e73f10df759893a853d84362bcec733c343b000000006a47304402207cd91c6b5a06be1213d4a554d590b8ca5e89bbbdbdc609484201353cc5c56a9d022011c4c4f9f10c31397332a5cb768ddd0d571f8f30312ffb8efa7396320e46e0bf01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffc0a870acbf4c8ae1b3c06e415b830dc174b7b83dfd65e193d16b772be20dc159000000006a473044022046128d16b96a917f632f0dcc51bc3cc5ac651f1dd80a65a23653c75a8732ccdc022052383cbc35cf21b89e1d8d963773ce052bab9e711e28d6c8955b075722ae610001210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffa8a1049d86076a990cdd55402c25d2ce0439db3650b11d9d808dfe6e5380cec1000000006a4730440220333ff2b803ab7c01100d65d57d38455d4f7d7f0c2bf83d638242b5b64ab14b0102202db5805b8e005aeca7f3de4540d0b00c513d8a475f22787b3317442ae720500901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff5d8c52cb42cbb51e43b6c8a40444a12e38d84739b66033d6db5bd97d12190c0c000000006c49304602210084a4678cfa9e7b338150932537e83efd5a461876b02788ba1652a08793ae53b4022100f10792aa0b235e51f7c23dca49205ace5c5a912a3f7685ce932d081e6f42a19901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff7aa2b162938bd59068061d8b6bc65c30da37d3edf66517bdcb8736e457aaf6bf000000006b483045022100ae57759407f72ef6fc771a064b27ddfe09b3df076be1ccb67db324ad8d623c5d02200cb4cdb8486746ffb8c8d4f8c426f936919564200fe2488db164061bc601402501210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460fffffffff6dee530fc0390bfa94c28c477506f1b844650a63db4a7cff84f37c1385cc519000000006b483045022100ace7b74472bbaf00c1389508f537a999b868f19e619bddef53cef27ab510866e02205dfce1090c9c02f34a5527e073f957cc3522cf4b0a1cb821573c6153acd3b49a01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeafbfe205e452a8ca544c5ca63863b55b8acd8ae33a168cb00dd08a953676706000000006b483045022100ee78095f2a28ef90a0fb648623172252a263c22d523703bc0028dbb9181b078702207a295130989598d2573b896e3e8b922410d286f6d86bf82bcc8cc636fda256ce01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff9c992ae24d265aa58c8ea89c33235247b9db317b3602d743e57dc3b4aa041282000000006b483045022100c4904faadf3cb3894831f0376c4962135c3573462ecbaa1641ba04c4097087a402201a34693d19f741d7463400386783afd1b9691b146bb59f81fb0f19ef82ba7c9701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffd347a768891f6b83ba58c4a32dcc881ebfafd0f16023e1381eba6552cf11ed99000000006b4830450221008ba065070659f3bc8992aef5604434aaba1bfc16b1224b39a4be14bc1deb33d4022048d6f97b7fdeda1c3c626b05df1ea70300c25537c36ec4b200825b0333cda6ad01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff89551fd7c7dd51b9a6e4aa9830caa769862c24c11ef453e873e5295f73cd5b59000000006b483045022056c4125114487c393c035be859dcf79fe840d091b1f095964acc9e791490cd1f022100af8effc6008d79428c3cafeeb3d43ab9fff5815f6584583e428c15ffc2d3bd3f01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeed66d4bfd40b0a423babde33b0550c39825bf5a7d6377caf1eddef1c14c9c02000000006b483045022100ead4bec71e9ee792ebb92f378d4592e1b65672b806ae9ed382401882902fd7520220497df514d5d08510fb1666f2a83a468999b204afcc4bd938a18eca1f1747e7f701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff016072afad0c0000001976a91447d35ca845a6a11484e367e6be43f0d23636e04288ac00000000"'                          Hash = "0d507fde9e1b16386f0798128067adbd37cdee98acd27903f59b0877f7f31737"'                          Depends = new int[0]'                          Fee = 0'                          Sigops = 1'                      }'                      new BlockTemplateTransaction()                      {                          Data = "0100000001a666e23a6e64ddfe0eb28cf39ff4568c05b2f0617528910075946a4a4b6c0688000000006a473044022000f5e4d7490e379127d377786fa6003228d9b259f808eb932c2046248253f02602207b417e8042eaf9cbb9c759124072d4ddb2c478999ef8cefdfdb0f830bfb151210121023bb744351b1f6675ef023125090d5adcf1830a31da89a57a000c08367dadce70ffffffff02805b6d29010000001976a9148a7fd9881a93c13a63310462473a827d022b699a88ac80969800000000001976a914fc9963f591c418921a401373069f4158e295886388ac00000000"'                          Hash = "623de7ab570540ef659076e6be4f4b8227a47249ea727a8a5afba06a5251e332"'                          Depends = new int[0]'                          Fee = 0'                          Sigops = 2'                      }'                  }'                  CoinBaseAux = new CoinBaseAux                  {                      Flags = "062f503253482f"                  }'                  Coinbasevalue = 5000000000'                  Target = "0000007b58890000000000000000000000000000000000000000000000000000"'                  MinTime = 1401274780'                  Mutable = new List<string>                  {                      "time"'                      "transactions"'                      "prevblock"                  }'                  NonceRange = "00000000ffffffff"'                  SigOpLimit = 20000'                  SizeLimit = 1000000'                  CurTime = 1401276010'                  Bits = "1d7b5889"'                  Height = 283723'              };
Magic Number,CoiniumServ.Tests.Daemon,BlockTemplateTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Daemon\BlockTemplateTests.cs,BlockTemplateTests,The following statement contains a magic number: _expected = new BlockTemplate              {                  Version = 2'                  PreviousBlockHash = "628f9771c0f6f0c4f7de9067ea6000fe1445ac4dae3ea0b2cb7a291f4ba8cdde"'                  Transactions = new[]                  {                      new BlockTemplateTransaction()                      {                          Data = "010000000ba688978919ba8bc07fe4a534bb91e73f10df759893a853d84362bcec733c343b000000006a47304402207cd91c6b5a06be1213d4a554d590b8ca5e89bbbdbdc609484201353cc5c56a9d022011c4c4f9f10c31397332a5cb768ddd0d571f8f30312ffb8efa7396320e46e0bf01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffc0a870acbf4c8ae1b3c06e415b830dc174b7b83dfd65e193d16b772be20dc159000000006a473044022046128d16b96a917f632f0dcc51bc3cc5ac651f1dd80a65a23653c75a8732ccdc022052383cbc35cf21b89e1d8d963773ce052bab9e711e28d6c8955b075722ae610001210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffa8a1049d86076a990cdd55402c25d2ce0439db3650b11d9d808dfe6e5380cec1000000006a4730440220333ff2b803ab7c01100d65d57d38455d4f7d7f0c2bf83d638242b5b64ab14b0102202db5805b8e005aeca7f3de4540d0b00c513d8a475f22787b3317442ae720500901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff5d8c52cb42cbb51e43b6c8a40444a12e38d84739b66033d6db5bd97d12190c0c000000006c49304602210084a4678cfa9e7b338150932537e83efd5a461876b02788ba1652a08793ae53b4022100f10792aa0b235e51f7c23dca49205ace5c5a912a3f7685ce932d081e6f42a19901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff7aa2b162938bd59068061d8b6bc65c30da37d3edf66517bdcb8736e457aaf6bf000000006b483045022100ae57759407f72ef6fc771a064b27ddfe09b3df076be1ccb67db324ad8d623c5d02200cb4cdb8486746ffb8c8d4f8c426f936919564200fe2488db164061bc601402501210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460fffffffff6dee530fc0390bfa94c28c477506f1b844650a63db4a7cff84f37c1385cc519000000006b483045022100ace7b74472bbaf00c1389508f537a999b868f19e619bddef53cef27ab510866e02205dfce1090c9c02f34a5527e073f957cc3522cf4b0a1cb821573c6153acd3b49a01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeafbfe205e452a8ca544c5ca63863b55b8acd8ae33a168cb00dd08a953676706000000006b483045022100ee78095f2a28ef90a0fb648623172252a263c22d523703bc0028dbb9181b078702207a295130989598d2573b896e3e8b922410d286f6d86bf82bcc8cc636fda256ce01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff9c992ae24d265aa58c8ea89c33235247b9db317b3602d743e57dc3b4aa041282000000006b483045022100c4904faadf3cb3894831f0376c4962135c3573462ecbaa1641ba04c4097087a402201a34693d19f741d7463400386783afd1b9691b146bb59f81fb0f19ef82ba7c9701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffd347a768891f6b83ba58c4a32dcc881ebfafd0f16023e1381eba6552cf11ed99000000006b4830450221008ba065070659f3bc8992aef5604434aaba1bfc16b1224b39a4be14bc1deb33d4022048d6f97b7fdeda1c3c626b05df1ea70300c25537c36ec4b200825b0333cda6ad01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff89551fd7c7dd51b9a6e4aa9830caa769862c24c11ef453e873e5295f73cd5b59000000006b483045022056c4125114487c393c035be859dcf79fe840d091b1f095964acc9e791490cd1f022100af8effc6008d79428c3cafeeb3d43ab9fff5815f6584583e428c15ffc2d3bd3f01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeed66d4bfd40b0a423babde33b0550c39825bf5a7d6377caf1eddef1c14c9c02000000006b483045022100ead4bec71e9ee792ebb92f378d4592e1b65672b806ae9ed382401882902fd7520220497df514d5d08510fb1666f2a83a468999b204afcc4bd938a18eca1f1747e7f701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff016072afad0c0000001976a91447d35ca845a6a11484e367e6be43f0d23636e04288ac00000000"'                          Hash = "0d507fde9e1b16386f0798128067adbd37cdee98acd27903f59b0877f7f31737"'                          Depends = new int[0]'                          Fee = 0'                          Sigops = 1'                      }'                      new BlockTemplateTransaction()                      {                          Data = "0100000001a666e23a6e64ddfe0eb28cf39ff4568c05b2f0617528910075946a4a4b6c0688000000006a473044022000f5e4d7490e379127d377786fa6003228d9b259f808eb932c2046248253f02602207b417e8042eaf9cbb9c759124072d4ddb2c478999ef8cefdfdb0f830bfb151210121023bb744351b1f6675ef023125090d5adcf1830a31da89a57a000c08367dadce70ffffffff02805b6d29010000001976a9148a7fd9881a93c13a63310462473a827d022b699a88ac80969800000000001976a914fc9963f591c418921a401373069f4158e295886388ac00000000"'                          Hash = "623de7ab570540ef659076e6be4f4b8227a47249ea727a8a5afba06a5251e332"'                          Depends = new int[0]'                          Fee = 0'                          Sigops = 2'                      }'                  }'                  CoinBaseAux = new CoinBaseAux                  {                      Flags = "062f503253482f"                  }'                  Coinbasevalue = 5000000000'                  Target = "0000007b58890000000000000000000000000000000000000000000000000000"'                  MinTime = 1401274780'                  Mutable = new List<string>                  {                      "time"'                      "transactions"'                      "prevblock"                  }'                  NonceRange = "00000000ffffffff"'                  SigOpLimit = 20000'                  SizeLimit = 1000000'                  CurTime = 1401276010'                  Bits = "1d7b5889"'                  Height = 283723'              };
Magic Number,CoiniumServ.Tests.Daemon,BlockTemplateTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Daemon\BlockTemplateTests.cs,BlockTemplateTests,The following statement contains a magic number: _expected = new BlockTemplate              {                  Version = 2'                  PreviousBlockHash = "628f9771c0f6f0c4f7de9067ea6000fe1445ac4dae3ea0b2cb7a291f4ba8cdde"'                  Transactions = new[]                  {                      new BlockTemplateTransaction()                      {                          Data = "010000000ba688978919ba8bc07fe4a534bb91e73f10df759893a853d84362bcec733c343b000000006a47304402207cd91c6b5a06be1213d4a554d590b8ca5e89bbbdbdc609484201353cc5c56a9d022011c4c4f9f10c31397332a5cb768ddd0d571f8f30312ffb8efa7396320e46e0bf01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffc0a870acbf4c8ae1b3c06e415b830dc174b7b83dfd65e193d16b772be20dc159000000006a473044022046128d16b96a917f632f0dcc51bc3cc5ac651f1dd80a65a23653c75a8732ccdc022052383cbc35cf21b89e1d8d963773ce052bab9e711e28d6c8955b075722ae610001210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffa8a1049d86076a990cdd55402c25d2ce0439db3650b11d9d808dfe6e5380cec1000000006a4730440220333ff2b803ab7c01100d65d57d38455d4f7d7f0c2bf83d638242b5b64ab14b0102202db5805b8e005aeca7f3de4540d0b00c513d8a475f22787b3317442ae720500901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff5d8c52cb42cbb51e43b6c8a40444a12e38d84739b66033d6db5bd97d12190c0c000000006c49304602210084a4678cfa9e7b338150932537e83efd5a461876b02788ba1652a08793ae53b4022100f10792aa0b235e51f7c23dca49205ace5c5a912a3f7685ce932d081e6f42a19901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff7aa2b162938bd59068061d8b6bc65c30da37d3edf66517bdcb8736e457aaf6bf000000006b483045022100ae57759407f72ef6fc771a064b27ddfe09b3df076be1ccb67db324ad8d623c5d02200cb4cdb8486746ffb8c8d4f8c426f936919564200fe2488db164061bc601402501210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460fffffffff6dee530fc0390bfa94c28c477506f1b844650a63db4a7cff84f37c1385cc519000000006b483045022100ace7b74472bbaf00c1389508f537a999b868f19e619bddef53cef27ab510866e02205dfce1090c9c02f34a5527e073f957cc3522cf4b0a1cb821573c6153acd3b49a01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeafbfe205e452a8ca544c5ca63863b55b8acd8ae33a168cb00dd08a953676706000000006b483045022100ee78095f2a28ef90a0fb648623172252a263c22d523703bc0028dbb9181b078702207a295130989598d2573b896e3e8b922410d286f6d86bf82bcc8cc636fda256ce01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff9c992ae24d265aa58c8ea89c33235247b9db317b3602d743e57dc3b4aa041282000000006b483045022100c4904faadf3cb3894831f0376c4962135c3573462ecbaa1641ba04c4097087a402201a34693d19f741d7463400386783afd1b9691b146bb59f81fb0f19ef82ba7c9701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffd347a768891f6b83ba58c4a32dcc881ebfafd0f16023e1381eba6552cf11ed99000000006b4830450221008ba065070659f3bc8992aef5604434aaba1bfc16b1224b39a4be14bc1deb33d4022048d6f97b7fdeda1c3c626b05df1ea70300c25537c36ec4b200825b0333cda6ad01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff89551fd7c7dd51b9a6e4aa9830caa769862c24c11ef453e873e5295f73cd5b59000000006b483045022056c4125114487c393c035be859dcf79fe840d091b1f095964acc9e791490cd1f022100af8effc6008d79428c3cafeeb3d43ab9fff5815f6584583e428c15ffc2d3bd3f01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeed66d4bfd40b0a423babde33b0550c39825bf5a7d6377caf1eddef1c14c9c02000000006b483045022100ead4bec71e9ee792ebb92f378d4592e1b65672b806ae9ed382401882902fd7520220497df514d5d08510fb1666f2a83a468999b204afcc4bd938a18eca1f1747e7f701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff016072afad0c0000001976a91447d35ca845a6a11484e367e6be43f0d23636e04288ac00000000"'                          Hash = "0d507fde9e1b16386f0798128067adbd37cdee98acd27903f59b0877f7f31737"'                          Depends = new int[0]'                          Fee = 0'                          Sigops = 1'                      }'                      new BlockTemplateTransaction()                      {                          Data = "0100000001a666e23a6e64ddfe0eb28cf39ff4568c05b2f0617528910075946a4a4b6c0688000000006a473044022000f5e4d7490e379127d377786fa6003228d9b259f808eb932c2046248253f02602207b417e8042eaf9cbb9c759124072d4ddb2c478999ef8cefdfdb0f830bfb151210121023bb744351b1f6675ef023125090d5adcf1830a31da89a57a000c08367dadce70ffffffff02805b6d29010000001976a9148a7fd9881a93c13a63310462473a827d022b699a88ac80969800000000001976a914fc9963f591c418921a401373069f4158e295886388ac00000000"'                          Hash = "623de7ab570540ef659076e6be4f4b8227a47249ea727a8a5afba06a5251e332"'                          Depends = new int[0]'                          Fee = 0'                          Sigops = 2'                      }'                  }'                  CoinBaseAux = new CoinBaseAux                  {                      Flags = "062f503253482f"                  }'                  Coinbasevalue = 5000000000'                  Target = "0000007b58890000000000000000000000000000000000000000000000000000"'                  MinTime = 1401274780'                  Mutable = new List<string>                  {                      "time"'                      "transactions"'                      "prevblock"                  }'                  NonceRange = "00000000ffffffff"'                  SigOpLimit = 20000'                  SizeLimit = 1000000'                  CurTime = 1401276010'                  Bits = "1d7b5889"'                  Height = 283723'              };
Magic Number,CoiniumServ.Tests.Daemon,BlockTemplateTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Daemon\BlockTemplateTests.cs,BlockTemplateTests,The following statement contains a magic number: _expected = new BlockTemplate              {                  Version = 2'                  PreviousBlockHash = "628f9771c0f6f0c4f7de9067ea6000fe1445ac4dae3ea0b2cb7a291f4ba8cdde"'                  Transactions = new[]                  {                      new BlockTemplateTransaction()                      {                          Data = "010000000ba688978919ba8bc07fe4a534bb91e73f10df759893a853d84362bcec733c343b000000006a47304402207cd91c6b5a06be1213d4a554d590b8ca5e89bbbdbdc609484201353cc5c56a9d022011c4c4f9f10c31397332a5cb768ddd0d571f8f30312ffb8efa7396320e46e0bf01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffc0a870acbf4c8ae1b3c06e415b830dc174b7b83dfd65e193d16b772be20dc159000000006a473044022046128d16b96a917f632f0dcc51bc3cc5ac651f1dd80a65a23653c75a8732ccdc022052383cbc35cf21b89e1d8d963773ce052bab9e711e28d6c8955b075722ae610001210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffa8a1049d86076a990cdd55402c25d2ce0439db3650b11d9d808dfe6e5380cec1000000006a4730440220333ff2b803ab7c01100d65d57d38455d4f7d7f0c2bf83d638242b5b64ab14b0102202db5805b8e005aeca7f3de4540d0b00c513d8a475f22787b3317442ae720500901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff5d8c52cb42cbb51e43b6c8a40444a12e38d84739b66033d6db5bd97d12190c0c000000006c49304602210084a4678cfa9e7b338150932537e83efd5a461876b02788ba1652a08793ae53b4022100f10792aa0b235e51f7c23dca49205ace5c5a912a3f7685ce932d081e6f42a19901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff7aa2b162938bd59068061d8b6bc65c30da37d3edf66517bdcb8736e457aaf6bf000000006b483045022100ae57759407f72ef6fc771a064b27ddfe09b3df076be1ccb67db324ad8d623c5d02200cb4cdb8486746ffb8c8d4f8c426f936919564200fe2488db164061bc601402501210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460fffffffff6dee530fc0390bfa94c28c477506f1b844650a63db4a7cff84f37c1385cc519000000006b483045022100ace7b74472bbaf00c1389508f537a999b868f19e619bddef53cef27ab510866e02205dfce1090c9c02f34a5527e073f957cc3522cf4b0a1cb821573c6153acd3b49a01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeafbfe205e452a8ca544c5ca63863b55b8acd8ae33a168cb00dd08a953676706000000006b483045022100ee78095f2a28ef90a0fb648623172252a263c22d523703bc0028dbb9181b078702207a295130989598d2573b896e3e8b922410d286f6d86bf82bcc8cc636fda256ce01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff9c992ae24d265aa58c8ea89c33235247b9db317b3602d743e57dc3b4aa041282000000006b483045022100c4904faadf3cb3894831f0376c4962135c3573462ecbaa1641ba04c4097087a402201a34693d19f741d7463400386783afd1b9691b146bb59f81fb0f19ef82ba7c9701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffd347a768891f6b83ba58c4a32dcc881ebfafd0f16023e1381eba6552cf11ed99000000006b4830450221008ba065070659f3bc8992aef5604434aaba1bfc16b1224b39a4be14bc1deb33d4022048d6f97b7fdeda1c3c626b05df1ea70300c25537c36ec4b200825b0333cda6ad01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff89551fd7c7dd51b9a6e4aa9830caa769862c24c11ef453e873e5295f73cd5b59000000006b483045022056c4125114487c393c035be859dcf79fe840d091b1f095964acc9e791490cd1f022100af8effc6008d79428c3cafeeb3d43ab9fff5815f6584583e428c15ffc2d3bd3f01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeed66d4bfd40b0a423babde33b0550c39825bf5a7d6377caf1eddef1c14c9c02000000006b483045022100ead4bec71e9ee792ebb92f378d4592e1b65672b806ae9ed382401882902fd7520220497df514d5d08510fb1666f2a83a468999b204afcc4bd938a18eca1f1747e7f701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff016072afad0c0000001976a91447d35ca845a6a11484e367e6be43f0d23636e04288ac00000000"'                          Hash = "0d507fde9e1b16386f0798128067adbd37cdee98acd27903f59b0877f7f31737"'                          Depends = new int[0]'                          Fee = 0'                          Sigops = 1'                      }'                      new BlockTemplateTransaction()                      {                          Data = "0100000001a666e23a6e64ddfe0eb28cf39ff4568c05b2f0617528910075946a4a4b6c0688000000006a473044022000f5e4d7490e379127d377786fa6003228d9b259f808eb932c2046248253f02602207b417e8042eaf9cbb9c759124072d4ddb2c478999ef8cefdfdb0f830bfb151210121023bb744351b1f6675ef023125090d5adcf1830a31da89a57a000c08367dadce70ffffffff02805b6d29010000001976a9148a7fd9881a93c13a63310462473a827d022b699a88ac80969800000000001976a914fc9963f591c418921a401373069f4158e295886388ac00000000"'                          Hash = "623de7ab570540ef659076e6be4f4b8227a47249ea727a8a5afba06a5251e332"'                          Depends = new int[0]'                          Fee = 0'                          Sigops = 2'                      }'                  }'                  CoinBaseAux = new CoinBaseAux                  {                      Flags = "062f503253482f"                  }'                  Coinbasevalue = 5000000000'                  Target = "0000007b58890000000000000000000000000000000000000000000000000000"'                  MinTime = 1401274780'                  Mutable = new List<string>                  {                      "time"'                      "transactions"'                      "prevblock"                  }'                  NonceRange = "00000000ffffffff"'                  SigOpLimit = 20000'                  SizeLimit = 1000000'                  CurTime = 1401276010'                  Bits = "1d7b5889"'                  Height = 283723'              };
Magic Number,CoiniumServ.Tests.Daemon,BlockTemplateTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Daemon\BlockTemplateTests.cs,BlockTemplateTests,The following statement contains a magic number: _expected = new BlockTemplate              {                  Version = 2'                  PreviousBlockHash = "628f9771c0f6f0c4f7de9067ea6000fe1445ac4dae3ea0b2cb7a291f4ba8cdde"'                  Transactions = new[]                  {                      new BlockTemplateTransaction()                      {                          Data = "010000000ba688978919ba8bc07fe4a534bb91e73f10df759893a853d84362bcec733c343b000000006a47304402207cd91c6b5a06be1213d4a554d590b8ca5e89bbbdbdc609484201353cc5c56a9d022011c4c4f9f10c31397332a5cb768ddd0d571f8f30312ffb8efa7396320e46e0bf01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffc0a870acbf4c8ae1b3c06e415b830dc174b7b83dfd65e193d16b772be20dc159000000006a473044022046128d16b96a917f632f0dcc51bc3cc5ac651f1dd80a65a23653c75a8732ccdc022052383cbc35cf21b89e1d8d963773ce052bab9e711e28d6c8955b075722ae610001210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffa8a1049d86076a990cdd55402c25d2ce0439db3650b11d9d808dfe6e5380cec1000000006a4730440220333ff2b803ab7c01100d65d57d38455d4f7d7f0c2bf83d638242b5b64ab14b0102202db5805b8e005aeca7f3de4540d0b00c513d8a475f22787b3317442ae720500901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff5d8c52cb42cbb51e43b6c8a40444a12e38d84739b66033d6db5bd97d12190c0c000000006c49304602210084a4678cfa9e7b338150932537e83efd5a461876b02788ba1652a08793ae53b4022100f10792aa0b235e51f7c23dca49205ace5c5a912a3f7685ce932d081e6f42a19901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff7aa2b162938bd59068061d8b6bc65c30da37d3edf66517bdcb8736e457aaf6bf000000006b483045022100ae57759407f72ef6fc771a064b27ddfe09b3df076be1ccb67db324ad8d623c5d02200cb4cdb8486746ffb8c8d4f8c426f936919564200fe2488db164061bc601402501210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460fffffffff6dee530fc0390bfa94c28c477506f1b844650a63db4a7cff84f37c1385cc519000000006b483045022100ace7b74472bbaf00c1389508f537a999b868f19e619bddef53cef27ab510866e02205dfce1090c9c02f34a5527e073f957cc3522cf4b0a1cb821573c6153acd3b49a01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeafbfe205e452a8ca544c5ca63863b55b8acd8ae33a168cb00dd08a953676706000000006b483045022100ee78095f2a28ef90a0fb648623172252a263c22d523703bc0028dbb9181b078702207a295130989598d2573b896e3e8b922410d286f6d86bf82bcc8cc636fda256ce01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff9c992ae24d265aa58c8ea89c33235247b9db317b3602d743e57dc3b4aa041282000000006b483045022100c4904faadf3cb3894831f0376c4962135c3573462ecbaa1641ba04c4097087a402201a34693d19f741d7463400386783afd1b9691b146bb59f81fb0f19ef82ba7c9701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffd347a768891f6b83ba58c4a32dcc881ebfafd0f16023e1381eba6552cf11ed99000000006b4830450221008ba065070659f3bc8992aef5604434aaba1bfc16b1224b39a4be14bc1deb33d4022048d6f97b7fdeda1c3c626b05df1ea70300c25537c36ec4b200825b0333cda6ad01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff89551fd7c7dd51b9a6e4aa9830caa769862c24c11ef453e873e5295f73cd5b59000000006b483045022056c4125114487c393c035be859dcf79fe840d091b1f095964acc9e791490cd1f022100af8effc6008d79428c3cafeeb3d43ab9fff5815f6584583e428c15ffc2d3bd3f01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeed66d4bfd40b0a423babde33b0550c39825bf5a7d6377caf1eddef1c14c9c02000000006b483045022100ead4bec71e9ee792ebb92f378d4592e1b65672b806ae9ed382401882902fd7520220497df514d5d08510fb1666f2a83a468999b204afcc4bd938a18eca1f1747e7f701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff016072afad0c0000001976a91447d35ca845a6a11484e367e6be43f0d23636e04288ac00000000"'                          Hash = "0d507fde9e1b16386f0798128067adbd37cdee98acd27903f59b0877f7f31737"'                          Depends = new int[0]'                          Fee = 0'                          Sigops = 1'                      }'                      new BlockTemplateTransaction()                      {                          Data = "0100000001a666e23a6e64ddfe0eb28cf39ff4568c05b2f0617528910075946a4a4b6c0688000000006a473044022000f5e4d7490e379127d377786fa6003228d9b259f808eb932c2046248253f02602207b417e8042eaf9cbb9c759124072d4ddb2c478999ef8cefdfdb0f830bfb151210121023bb744351b1f6675ef023125090d5adcf1830a31da89a57a000c08367dadce70ffffffff02805b6d29010000001976a9148a7fd9881a93c13a63310462473a827d022b699a88ac80969800000000001976a914fc9963f591c418921a401373069f4158e295886388ac00000000"'                          Hash = "623de7ab570540ef659076e6be4f4b8227a47249ea727a8a5afba06a5251e332"'                          Depends = new int[0]'                          Fee = 0'                          Sigops = 2'                      }'                  }'                  CoinBaseAux = new CoinBaseAux                  {                      Flags = "062f503253482f"                  }'                  Coinbasevalue = 5000000000'                  Target = "0000007b58890000000000000000000000000000000000000000000000000000"'                  MinTime = 1401274780'                  Mutable = new List<string>                  {                      "time"'                      "transactions"'                      "prevblock"                  }'                  NonceRange = "00000000ffffffff"'                  SigOpLimit = 20000'                  SizeLimit = 1000000'                  CurTime = 1401276010'                  Bits = "1d7b5889"'                  Height = 283723'              };
Magic Number,CoiniumServ.Tests.Daemon,BlockTemplateTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Daemon\BlockTemplateTests.cs,BlockTemplateTests,The following statement contains a magic number: _expected = new BlockTemplate              {                  Version = 2'                  PreviousBlockHash = "628f9771c0f6f0c4f7de9067ea6000fe1445ac4dae3ea0b2cb7a291f4ba8cdde"'                  Transactions = new[]                  {                      new BlockTemplateTransaction()                      {                          Data = "010000000ba688978919ba8bc07fe4a534bb91e73f10df759893a853d84362bcec733c343b000000006a47304402207cd91c6b5a06be1213d4a554d590b8ca5e89bbbdbdc609484201353cc5c56a9d022011c4c4f9f10c31397332a5cb768ddd0d571f8f30312ffb8efa7396320e46e0bf01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffc0a870acbf4c8ae1b3c06e415b830dc174b7b83dfd65e193d16b772be20dc159000000006a473044022046128d16b96a917f632f0dcc51bc3cc5ac651f1dd80a65a23653c75a8732ccdc022052383cbc35cf21b89e1d8d963773ce052bab9e711e28d6c8955b075722ae610001210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffa8a1049d86076a990cdd55402c25d2ce0439db3650b11d9d808dfe6e5380cec1000000006a4730440220333ff2b803ab7c01100d65d57d38455d4f7d7f0c2bf83d638242b5b64ab14b0102202db5805b8e005aeca7f3de4540d0b00c513d8a475f22787b3317442ae720500901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff5d8c52cb42cbb51e43b6c8a40444a12e38d84739b66033d6db5bd97d12190c0c000000006c49304602210084a4678cfa9e7b338150932537e83efd5a461876b02788ba1652a08793ae53b4022100f10792aa0b235e51f7c23dca49205ace5c5a912a3f7685ce932d081e6f42a19901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff7aa2b162938bd59068061d8b6bc65c30da37d3edf66517bdcb8736e457aaf6bf000000006b483045022100ae57759407f72ef6fc771a064b27ddfe09b3df076be1ccb67db324ad8d623c5d02200cb4cdb8486746ffb8c8d4f8c426f936919564200fe2488db164061bc601402501210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460fffffffff6dee530fc0390bfa94c28c477506f1b844650a63db4a7cff84f37c1385cc519000000006b483045022100ace7b74472bbaf00c1389508f537a999b868f19e619bddef53cef27ab510866e02205dfce1090c9c02f34a5527e073f957cc3522cf4b0a1cb821573c6153acd3b49a01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeafbfe205e452a8ca544c5ca63863b55b8acd8ae33a168cb00dd08a953676706000000006b483045022100ee78095f2a28ef90a0fb648623172252a263c22d523703bc0028dbb9181b078702207a295130989598d2573b896e3e8b922410d286f6d86bf82bcc8cc636fda256ce01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff9c992ae24d265aa58c8ea89c33235247b9db317b3602d743e57dc3b4aa041282000000006b483045022100c4904faadf3cb3894831f0376c4962135c3573462ecbaa1641ba04c4097087a402201a34693d19f741d7463400386783afd1b9691b146bb59f81fb0f19ef82ba7c9701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffd347a768891f6b83ba58c4a32dcc881ebfafd0f16023e1381eba6552cf11ed99000000006b4830450221008ba065070659f3bc8992aef5604434aaba1bfc16b1224b39a4be14bc1deb33d4022048d6f97b7fdeda1c3c626b05df1ea70300c25537c36ec4b200825b0333cda6ad01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff89551fd7c7dd51b9a6e4aa9830caa769862c24c11ef453e873e5295f73cd5b59000000006b483045022056c4125114487c393c035be859dcf79fe840d091b1f095964acc9e791490cd1f022100af8effc6008d79428c3cafeeb3d43ab9fff5815f6584583e428c15ffc2d3bd3f01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeed66d4bfd40b0a423babde33b0550c39825bf5a7d6377caf1eddef1c14c9c02000000006b483045022100ead4bec71e9ee792ebb92f378d4592e1b65672b806ae9ed382401882902fd7520220497df514d5d08510fb1666f2a83a468999b204afcc4bd938a18eca1f1747e7f701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff016072afad0c0000001976a91447d35ca845a6a11484e367e6be43f0d23636e04288ac00000000"'                          Hash = "0d507fde9e1b16386f0798128067adbd37cdee98acd27903f59b0877f7f31737"'                          Depends = new int[0]'                          Fee = 0'                          Sigops = 1'                      }'                      new BlockTemplateTransaction()                      {                          Data = "0100000001a666e23a6e64ddfe0eb28cf39ff4568c05b2f0617528910075946a4a4b6c0688000000006a473044022000f5e4d7490e379127d377786fa6003228d9b259f808eb932c2046248253f02602207b417e8042eaf9cbb9c759124072d4ddb2c478999ef8cefdfdb0f830bfb151210121023bb744351b1f6675ef023125090d5adcf1830a31da89a57a000c08367dadce70ffffffff02805b6d29010000001976a9148a7fd9881a93c13a63310462473a827d022b699a88ac80969800000000001976a914fc9963f591c418921a401373069f4158e295886388ac00000000"'                          Hash = "623de7ab570540ef659076e6be4f4b8227a47249ea727a8a5afba06a5251e332"'                          Depends = new int[0]'                          Fee = 0'                          Sigops = 2'                      }'                  }'                  CoinBaseAux = new CoinBaseAux                  {                      Flags = "062f503253482f"                  }'                  Coinbasevalue = 5000000000'                  Target = "0000007b58890000000000000000000000000000000000000000000000000000"'                  MinTime = 1401274780'                  Mutable = new List<string>                  {                      "time"'                      "transactions"'                      "prevblock"                  }'                  NonceRange = "00000000ffffffff"'                  SigOpLimit = 20000'                  SizeLimit = 1000000'                  CurTime = 1401276010'                  Bits = "1d7b5889"'                  Height = 283723'              };
Magic Number,CoiniumServ.Tests.Daemon,BlockTemplateTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Daemon\BlockTemplateTests.cs,BlockTemplateTests,The following statement contains a magic number: _expected = new BlockTemplate              {                  Version = 2'                  PreviousBlockHash = "628f9771c0f6f0c4f7de9067ea6000fe1445ac4dae3ea0b2cb7a291f4ba8cdde"'                  Transactions = new[]                  {                      new BlockTemplateTransaction()                      {                          Data = "010000000ba688978919ba8bc07fe4a534bb91e73f10df759893a853d84362bcec733c343b000000006a47304402207cd91c6b5a06be1213d4a554d590b8ca5e89bbbdbdc609484201353cc5c56a9d022011c4c4f9f10c31397332a5cb768ddd0d571f8f30312ffb8efa7396320e46e0bf01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffc0a870acbf4c8ae1b3c06e415b830dc174b7b83dfd65e193d16b772be20dc159000000006a473044022046128d16b96a917f632f0dcc51bc3cc5ac651f1dd80a65a23653c75a8732ccdc022052383cbc35cf21b89e1d8d963773ce052bab9e711e28d6c8955b075722ae610001210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffa8a1049d86076a990cdd55402c25d2ce0439db3650b11d9d808dfe6e5380cec1000000006a4730440220333ff2b803ab7c01100d65d57d38455d4f7d7f0c2bf83d638242b5b64ab14b0102202db5805b8e005aeca7f3de4540d0b00c513d8a475f22787b3317442ae720500901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff5d8c52cb42cbb51e43b6c8a40444a12e38d84739b66033d6db5bd97d12190c0c000000006c49304602210084a4678cfa9e7b338150932537e83efd5a461876b02788ba1652a08793ae53b4022100f10792aa0b235e51f7c23dca49205ace5c5a912a3f7685ce932d081e6f42a19901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff7aa2b162938bd59068061d8b6bc65c30da37d3edf66517bdcb8736e457aaf6bf000000006b483045022100ae57759407f72ef6fc771a064b27ddfe09b3df076be1ccb67db324ad8d623c5d02200cb4cdb8486746ffb8c8d4f8c426f936919564200fe2488db164061bc601402501210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460fffffffff6dee530fc0390bfa94c28c477506f1b844650a63db4a7cff84f37c1385cc519000000006b483045022100ace7b74472bbaf00c1389508f537a999b868f19e619bddef53cef27ab510866e02205dfce1090c9c02f34a5527e073f957cc3522cf4b0a1cb821573c6153acd3b49a01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeafbfe205e452a8ca544c5ca63863b55b8acd8ae33a168cb00dd08a953676706000000006b483045022100ee78095f2a28ef90a0fb648623172252a263c22d523703bc0028dbb9181b078702207a295130989598d2573b896e3e8b922410d286f6d86bf82bcc8cc636fda256ce01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff9c992ae24d265aa58c8ea89c33235247b9db317b3602d743e57dc3b4aa041282000000006b483045022100c4904faadf3cb3894831f0376c4962135c3573462ecbaa1641ba04c4097087a402201a34693d19f741d7463400386783afd1b9691b146bb59f81fb0f19ef82ba7c9701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffd347a768891f6b83ba58c4a32dcc881ebfafd0f16023e1381eba6552cf11ed99000000006b4830450221008ba065070659f3bc8992aef5604434aaba1bfc16b1224b39a4be14bc1deb33d4022048d6f97b7fdeda1c3c626b05df1ea70300c25537c36ec4b200825b0333cda6ad01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff89551fd7c7dd51b9a6e4aa9830caa769862c24c11ef453e873e5295f73cd5b59000000006b483045022056c4125114487c393c035be859dcf79fe840d091b1f095964acc9e791490cd1f022100af8effc6008d79428c3cafeeb3d43ab9fff5815f6584583e428c15ffc2d3bd3f01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeed66d4bfd40b0a423babde33b0550c39825bf5a7d6377caf1eddef1c14c9c02000000006b483045022100ead4bec71e9ee792ebb92f378d4592e1b65672b806ae9ed382401882902fd7520220497df514d5d08510fb1666f2a83a468999b204afcc4bd938a18eca1f1747e7f701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff016072afad0c0000001976a91447d35ca845a6a11484e367e6be43f0d23636e04288ac00000000"'                          Hash = "0d507fde9e1b16386f0798128067adbd37cdee98acd27903f59b0877f7f31737"'                          Depends = new int[0]'                          Fee = 0'                          Sigops = 1'                      }'                      new BlockTemplateTransaction()                      {                          Data = "0100000001a666e23a6e64ddfe0eb28cf39ff4568c05b2f0617528910075946a4a4b6c0688000000006a473044022000f5e4d7490e379127d377786fa6003228d9b259f808eb932c2046248253f02602207b417e8042eaf9cbb9c759124072d4ddb2c478999ef8cefdfdb0f830bfb151210121023bb744351b1f6675ef023125090d5adcf1830a31da89a57a000c08367dadce70ffffffff02805b6d29010000001976a9148a7fd9881a93c13a63310462473a827d022b699a88ac80969800000000001976a914fc9963f591c418921a401373069f4158e295886388ac00000000"'                          Hash = "623de7ab570540ef659076e6be4f4b8227a47249ea727a8a5afba06a5251e332"'                          Depends = new int[0]'                          Fee = 0'                          Sigops = 2'                      }'                  }'                  CoinBaseAux = new CoinBaseAux                  {                      Flags = "062f503253482f"                  }'                  Coinbasevalue = 5000000000'                  Target = "0000007b58890000000000000000000000000000000000000000000000000000"'                  MinTime = 1401274780'                  Mutable = new List<string>                  {                      "time"'                      "transactions"'                      "prevblock"                  }'                  NonceRange = "00000000ffffffff"'                  SigOpLimit = 20000'                  SizeLimit = 1000000'                  CurTime = 1401276010'                  Bits = "1d7b5889"'                  Height = 283723'              };
Magic Number,CoiniumServ.Tests.Daemon,BlockTemplateTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Daemon\BlockTemplateTests.cs,BlockTemplateTests,The following statement contains a magic number: _expected = new BlockTemplate              {                  Version = 2'                  PreviousBlockHash = "628f9771c0f6f0c4f7de9067ea6000fe1445ac4dae3ea0b2cb7a291f4ba8cdde"'                  Transactions = new[]                  {                      new BlockTemplateTransaction()                      {                          Data = "010000000ba688978919ba8bc07fe4a534bb91e73f10df759893a853d84362bcec733c343b000000006a47304402207cd91c6b5a06be1213d4a554d590b8ca5e89bbbdbdc609484201353cc5c56a9d022011c4c4f9f10c31397332a5cb768ddd0d571f8f30312ffb8efa7396320e46e0bf01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffc0a870acbf4c8ae1b3c06e415b830dc174b7b83dfd65e193d16b772be20dc159000000006a473044022046128d16b96a917f632f0dcc51bc3cc5ac651f1dd80a65a23653c75a8732ccdc022052383cbc35cf21b89e1d8d963773ce052bab9e711e28d6c8955b075722ae610001210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffa8a1049d86076a990cdd55402c25d2ce0439db3650b11d9d808dfe6e5380cec1000000006a4730440220333ff2b803ab7c01100d65d57d38455d4f7d7f0c2bf83d638242b5b64ab14b0102202db5805b8e005aeca7f3de4540d0b00c513d8a475f22787b3317442ae720500901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff5d8c52cb42cbb51e43b6c8a40444a12e38d84739b66033d6db5bd97d12190c0c000000006c49304602210084a4678cfa9e7b338150932537e83efd5a461876b02788ba1652a08793ae53b4022100f10792aa0b235e51f7c23dca49205ace5c5a912a3f7685ce932d081e6f42a19901210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff7aa2b162938bd59068061d8b6bc65c30da37d3edf66517bdcb8736e457aaf6bf000000006b483045022100ae57759407f72ef6fc771a064b27ddfe09b3df076be1ccb67db324ad8d623c5d02200cb4cdb8486746ffb8c8d4f8c426f936919564200fe2488db164061bc601402501210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460fffffffff6dee530fc0390bfa94c28c477506f1b844650a63db4a7cff84f37c1385cc519000000006b483045022100ace7b74472bbaf00c1389508f537a999b868f19e619bddef53cef27ab510866e02205dfce1090c9c02f34a5527e073f957cc3522cf4b0a1cb821573c6153acd3b49a01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeafbfe205e452a8ca544c5ca63863b55b8acd8ae33a168cb00dd08a953676706000000006b483045022100ee78095f2a28ef90a0fb648623172252a263c22d523703bc0028dbb9181b078702207a295130989598d2573b896e3e8b922410d286f6d86bf82bcc8cc636fda256ce01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff9c992ae24d265aa58c8ea89c33235247b9db317b3602d743e57dc3b4aa041282000000006b483045022100c4904faadf3cb3894831f0376c4962135c3573462ecbaa1641ba04c4097087a402201a34693d19f741d7463400386783afd1b9691b146bb59f81fb0f19ef82ba7c9701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffd347a768891f6b83ba58c4a32dcc881ebfafd0f16023e1381eba6552cf11ed99000000006b4830450221008ba065070659f3bc8992aef5604434aaba1bfc16b1224b39a4be14bc1deb33d4022048d6f97b7fdeda1c3c626b05df1ea70300c25537c36ec4b200825b0333cda6ad01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff89551fd7c7dd51b9a6e4aa9830caa769862c24c11ef453e873e5295f73cd5b59000000006b483045022056c4125114487c393c035be859dcf79fe840d091b1f095964acc9e791490cd1f022100af8effc6008d79428c3cafeeb3d43ab9fff5815f6584583e428c15ffc2d3bd3f01210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffffeed66d4bfd40b0a423babde33b0550c39825bf5a7d6377caf1eddef1c14c9c02000000006b483045022100ead4bec71e9ee792ebb92f378d4592e1b65672b806ae9ed382401882902fd7520220497df514d5d08510fb1666f2a83a468999b204afcc4bd938a18eca1f1747e7f701210233638afa905e549afb53febc4aeb23dee9e906a38de894f0352c1e322a94c460ffffffff016072afad0c0000001976a91447d35ca845a6a11484e367e6be43f0d23636e04288ac00000000"'                          Hash = "0d507fde9e1b16386f0798128067adbd37cdee98acd27903f59b0877f7f31737"'                          Depends = new int[0]'                          Fee = 0'                          Sigops = 1'                      }'                      new BlockTemplateTransaction()                      {                          Data = "0100000001a666e23a6e64ddfe0eb28cf39ff4568c05b2f0617528910075946a4a4b6c0688000000006a473044022000f5e4d7490e379127d377786fa6003228d9b259f808eb932c2046248253f02602207b417e8042eaf9cbb9c759124072d4ddb2c478999ef8cefdfdb0f830bfb151210121023bb744351b1f6675ef023125090d5adcf1830a31da89a57a000c08367dadce70ffffffff02805b6d29010000001976a9148a7fd9881a93c13a63310462473a827d022b699a88ac80969800000000001976a914fc9963f591c418921a401373069f4158e295886388ac00000000"'                          Hash = "623de7ab570540ef659076e6be4f4b8227a47249ea727a8a5afba06a5251e332"'                          Depends = new int[0]'                          Fee = 0'                          Sigops = 2'                      }'                  }'                  CoinBaseAux = new CoinBaseAux                  {                      Flags = "062f503253482f"                  }'                  Coinbasevalue = 5000000000'                  Target = "0000007b58890000000000000000000000000000000000000000000000000000"'                  MinTime = 1401274780'                  Mutable = new List<string>                  {                      "time"'                      "transactions"'                      "prevblock"                  }'                  NonceRange = "00000000ffffffff"'                  SigOpLimit = 20000'                  SizeLimit = 1000000'                  CurTime = 1401276010'                  Bits = "1d7b5889"'                  Height = 283723'              };
Magic Number,CoiniumServ.Tests.Jobs,JobTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Jobs\JobTests.cs,JobTests,The following statement contains a magic number: _signatureScript = new SignatureScript(                  _blockTemplate.Height'                  _blockTemplate.CoinBaseAux.Flags'                  1402922597281'                  (byte) _extraNonce.ExtraNoncePlaceholder.Length'                  "/nodeStratum/");
Magic Number,CoiniumServ.Tests.Jobs,JobTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Jobs\JobTests.cs,JobTests,The following statement contains a magic number: double blockReward = 5000000000;
Magic Number,CoiniumServ.Tests.Jobs,JobTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Jobs\JobTests.cs,JobTests,The following statement contains a magic number: var amount = blockReward * 0.01;
Magic Number,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,ShareTests,The following statement contains a magic number: _signatureScript = Substitute.For<SignatureScript>(                  _blockTemplate.Height'                  _blockTemplate.CoinBaseAux.Flags'                  1403691824760'                  (byte)_extraNonce.ExtraNoncePlaceholder.Length'                  "/nodeStratum/");
Magic Number,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,ShareTests,The following statement contains a magic number: double blockReward = 5000000000;
Magic Number,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,ShareTests,The following statement contains a magic number: var amount = blockReward * 0.01;
Magic Number,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,ShareTests,The following statement contains a magic number: _job = new Job(2'_hashAlgorithm' _blockTemplate' _generationTransaction)              {                  CleanJobs = true              };
Magic Number,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,ShareTests,The following statement contains a magic number: _jobTracker.Get(2).Returns(_job);
Magic Number,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The following statement contains a magic number: string extraNonce2 = shareData[2];
Magic Number,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The following statement contains a magic number: string nTime = shareData[3];
Magic Number,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The following statement contains a magic number: string nonce = shareData[4];
Magic Number,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,CandicateShareTest,The following statement contains a magic number: var id = Convert.ToUInt64(jobId' 16);
Magic Number,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,NonCandicateShareTest,The following statement contains a magic number: string extraNonce2 = shareData[2];
Magic Number,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,NonCandicateShareTest,The following statement contains a magic number: string nTime = shareData[3];
Magic Number,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,NonCandicateShareTest,The following statement contains a magic number: string nonce = shareData[4];
Magic Number,CoiniumServ.Tests.Shares,ShareTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Shares\ShareTests.cs,NonCandicateShareTest,The following statement contains a magic number: var id = Convert.ToUInt64(jobId' 16);
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,GenerationTransactionTests,The following statement contains a magic number: _signatureScript = new SignatureScript(                  _blockTemplate.Height'                  _blockTemplate.CoinBaseAux.Flags'                  1402661059432'                  (byte)_extraNonce.ExtraNoncePlaceholder.Length'                  "/nodeStratum/");
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,GenerationTransactionTests,The following statement contains a magic number: double blockReward = 5000000000;
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,GenerationTransactionTests,The following statement contains a magic number: var amount = blockReward * 0.01;
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Version.Should().Equal((UInt32)2);
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Initial.Take(4).ToHexString().Should().Equal("02000000");
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Initial.Skip(4).Take(1).Should().Equal(new byte[] { 0x01 });
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Initial.Skip(5).Take(32).ToHexString().Should().Equal("0000000000000000000000000000000000000000000000000000000000000000");
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Initial.Skip(5).Take(32).ToHexString().Should().Equal("0000000000000000000000000000000000000000000000000000000000000000");
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Initial.Skip(37).Take(4).ToHexString().Should().Equal("ffffffff");
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Initial.Skip(37).Take(4).ToHexString().Should().Equal("ffffffff");
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Inputs.First().SignatureScript.Initial.Length.Should().Equal(17);
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: _extraNonce.ExtraNoncePlaceholder.Length.Should().Equal(8);
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Inputs.First().SignatureScript.Final.Length.Should().Equal(14);
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Initial.Skip(41).Take(1).ToHexString().Should().Equal("27");
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Initial.Skip(42).Take(17).ToHexString().Should().Equal("03be9d04062f503253482f04c3e89a5308");
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Initial.Skip(42).Take(17).ToHexString().Should().Equal("03be9d04062f503253482f04c3e89a5308");
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Final.Take(14).ToHexString().Should().Equal("0d2f6e6f64655374726174756d2f");
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Final.Skip(14).Take(4).ToHexString().Should().Equal("00000000");
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Final.Skip(14).Take(4).ToHexString().Should().Equal("00000000");
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Final.Skip(18).Take(69).ToHexString().Should().Equal("0280010b27010000001976a914329035234168b8da5af106ceb20560401236849888ac80f0fa02000000001976a9147d576fbfca48b899dc750167dd2a2a6572fff49588ac");
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Final.Skip(18).Take(69).ToHexString().Should().Equal("0280010b27010000001976a914329035234168b8da5af106ceb20560401236849888ac80f0fa02000000001976a9147d576fbfca48b899dc750167dd2a2a6572fff49588ac");
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Final.Skip(87).Take(4).ToHexString().Should().Equal("00000000");
Magic Number,CoiniumServ.Tests.Transactions,GenerationTransactionTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\GenerationTransactionTests.cs,CreateGenerationTransactionTest,The following statement contains a magic number: generationTransaction.Final.Skip(87).Take(4).ToHexString().Should().Equal("00000000");
Magic Number,CoiniumServ.Tests.Transactions,OutputsTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\OutputsTests.cs,TestOutputs,The following statement contains a magic number: double blockReward = 5000000000;
Magic Number,CoiniumServ.Tests.Transactions,OutputsTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\OutputsTests.cs,TestOutputs,The following statement contains a magic number: var amount = blockReward * 0.01;
Magic Number,CoiniumServ.Tests.Transactions.Script,SignatureScriptTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\Script\SignatureScriptTests.cs,SignatureScriptTest,The following statement contains a magic number: var signatureScript = new SignatureScript(                  _blockTemplate.Height'                  _blockTemplate.CoinBaseAux.Flags'                  1402265775319'                  (byte)_extraNonce.ExtraNoncePlaceholder.Length'                  "/nodeStratum/");
Magic Number,CoiniumServ.Tests.Transactions.Utils,TransactionUtilsTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Transactions\Utils\TransactionUtilsTests.cs,SerializedUnixDateTimeTest,The following statement contains a magic number: FinalUnixDateTime.Should().Equal((Int64)1402265775);
Magic Number,CoiniumServ.Tests.Utils.Extensions,ArrayExtensionsTests,D:\research\architectureSmells\repos\int6_CoiniumServ\src\Tests\Utils\Extensions\ArrayExtensionsTests.cs,ToHexStringFromEnumareableTest,The following statement contains a magic number: var input = new byte[]              {                  0x71' 0xf6' 0x39' 0x1e' 0x10' 0x60' 0x0e' 0x54' 0xd8' 0x3b' 0xd8' 0xc0' 0x26' 0x53' 0x03' 0xcc'                  0xca' 0xaf' 0xe3' 0x75' 0xbc' 0xc3' 0xb0' 0x11' 0x72' 0x96' 0xeb' 0xd1' 0x44' 0xe3' 0xf9' 0x5a              }.Take(32);
