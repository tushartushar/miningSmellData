Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Signum.MSBuildTask,AutoExpressionField,C:\repos\signumsoftware_framework\Signum.MSBuildTask\AutoExpressionField.cs,LogError,The length of the statement  "            Log.LogError("Signum.MSBuildTask: {0}.{1} should be a simple evaluation of an expression field in order to use ExpressionFieldAttribute without parameters ({2})"' " is 162.
Long Statement,Signum.MSBuildTask,FieldAutoInitializer,C:\repos\signumsoftware_framework\Signum.MSBuildTask\FieldAutoInitiaizer.cs,AutoInitFields,The length of the statement  "                Log.LogError("Signum.MSBuildTask: {0} class should not have static constructor (or field initializers) to use AutoInitAttribute"' type.FullName); " is 145.
Long Statement,Signum.MSBuildTask,SignumTask,C:\repos\signumsoftware_framework\Signum.MSBuildTask\SignumTask.cs,MarkAsProcessed,The length of the statement  "            TypeDefinition generatedCodeAttribute = resolver.Resolve(AssemblyNameReference.Parse("System")).MainModule.GetType(typeof(GeneratedCodeAttribute).FullName); " is 156.
Magic Number,Signum.MSBuildTask,FieldAutoInitializer,C:\repos\signumsoftware_framework\Signum.MSBuildTask\FieldAutoInitiaizer.cs,GetMethod,The following statement contains a magic number: var constructor = fieldType.Resolve().Methods.SingleOrDefault(a => a.IsConstructor && a.Parameters.Count == 2 &&              a.Parameters[0].ParameterType.FullName == this.SystemType.FullName &&              a.Parameters[1].ParameterType.FullName == Assembly.MainModule.TypeSystem.String.FullName);
Magic Number,Signum.MSBuildTask,SignumTask,C:\repos\signumsoftware_framework\Signum.MSBuildTask\SignumTask.cs,MarkAsProcessed,The following statement contains a magic number: MethodDefinition constructor = generatedCodeAttribute.Methods.Single(a => a.IsConstructor && a.Parameters.Count == 2);
Missing Default,Signum.MSBuildTask,FieldAutoInitializer,C:\repos\signumsoftware_framework\Signum.MSBuildTask\FieldAutoInitiaizer.cs,GetMethod,The following switch statement is missing a default case: switch (generic.ElementType.FullName)                  {                      case "Signum.Entities.ConstructSymbol`1/Simple":                          return OperationSymbolConstruct.Methods.Single(a => a.Name == "Simple")                              .MakeHostInstanceGeneric(generic.GenericArguments.First());                      case "Signum.Entities.ConstructSymbol`1/From`1":                          return OperationSymbolConstruct.Methods.Single(a => a.Name == "From")                              .MakeHostInstanceGeneric(generic.GenericArguments.First())                              .MakeGenericMethod(generic.GenericArguments.Last());                      case "Signum.Entities.ConstructSymbol`1/FromMany`1":                          return OperationSymbolConstruct.Methods.Single(a => a.Name == "FromMany")                              .MakeHostInstanceGeneric(generic.GenericArguments.First())                              .MakeGenericMethod(generic.GenericArguments.Last());                      case "Signum.Entities.ExecuteSymbol`1":                          return OperationSymbol.Methods.Single(a => a.Name == "Execute")                             .MakeGenericMethod(generic.GenericArguments.Single());                      case "Signum.Entities.DeleteSymbol`1":                          return OperationSymbol.Methods.Single(a => a.Name == "Delete")                             .MakeGenericMethod(generic.GenericArguments.Single());                  }
