Implementation smell,Namespace,Class,File,Method,Description
Long Method,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,Process,The method has 121 lines of code.
Long Statement,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,Process,The length of the statement  "                throw new InvalidOperationException($"Assembly '{options.CurrentAssembly}' has not types in namespace '{options.CurrentNamespace}'"); " is 133.
Long Statement,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,Process,The length of the statement  "            var imported = assembly.GetCustomAttributes(Cache.ImportInTypeScriptAttribute).Select(a => (Type)((dynamic)a).Type).ToList(); " is 125.
Long Statement,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,WriteFillFile,The length of the statement  "            var path = options.AssemblyReferences.GetOrThrow("Signum.Entities").NamespacesReferences.GetOrThrow("Signum.Entities").Path.Replace("Signum.Entities.ts"' "Reflection.ts"); " is 171.
Long Statement,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,WriteFillFile,The length of the statement  "            sb.AppendLine($"import {{ MessageKey' QueryKey' Type' EnumType' registerSymbol }} from '{RelativePath(path' options.TemplateFileName)}'"); " is 138.
Long Statement,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,SymbolInTypeScript,The length of the statement  "                var cleanType = field.FieldType.IsInterface && field.FieldType.GetInterface("IOperationSymbolContainer") != null ? "Operation" : CleanTypeName(field.FieldType); " is 160.
Long Statement,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,SymbolInTypeScript,The length of the statement  "                sb.AppendLine($"    export const {field.Name} : {propertyType} = registerSymbol(\"{cleanType}\"' \"{type.Name}.{field.Name}\");"); " is 130.
Long Statement,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,EntityInTypeScript,The length of the statement  "            foreach (var i in type.GetInterfaces().Except(type.BaseType?.GetInterfaces() ?? Enumerable.Empty<Type>()).Where(i => Cache.IEntity.IsAssignableFrom(i))) " is 152.
Long Statement,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,EntityInTypeScript,The length of the statement  "            sb.AppendLine($"export interface {TypeScriptName(type' type' options' "declaring " + type.Name)} extends {string.Join("' "' baseTypes)} {{"); " is 141.
Long Statement,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,GetProperties,The length of the statement  "                            .Where(p => (p.InTypeScript() ?? !(p.ContainsAttribute("HiddenPropertyAttribute") || p.ContainsAttribute("ExpressionFieldAttribute")))); " is 136.
Long Statement,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,GetTypescriptNull,The length of the statement  "                p.CustomAttributes.Any(a => a.AttributeType.Name == "NotNullableAttribute" || a.AttributeType.Name == "NotNullValidatorAttribute")) " is 131.
Long Statement,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,TypeScriptName,The length of the statement  "                return relativeName + "<" + string.Join("' "' type.GetGenericArguments().Select(a => TypeScriptName(a' current' options' errorContext)).ToList()) + ">"; " is 152.
Long Statement,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,RelativeName,The length of the statement  "                    throw new InvalidOperationException($"{errorContext}:  Type {type.ToString()} is declared in the assembly '{type.Assembly.GetName().Name}.dll'' but no React directory for it is found."); " is 186.
Long Statement,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,ElementType,The length of the statement  "            var ie = ft.GetInterfaces().FirstOrDefault(ti => ti.IsGenericType && ti.GetGenericTypeDefinition() == typeof(IEnumerable<>)); " is 125.
Long Statement,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,GetVariableName,The length of the statement  "            var list = options.AssemblyReferences.Values.SelectMany(a => a.NamespacesReferences.Values.Select(ns => ns.VariableName)); " is 122.
Long Statement,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,FindDeclarationsFile,The length of the statement  "                throw new InvalidOperationException($"importing '{typeForError}' required but multiple '{fileTS}' were found inside '{assemblyReference.ReactDirectory}':\r\n{string.Join("\r\n"' result.Select(a => "    " + a).ToArray())}"); " is 223.
Long Statement,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,FindDeclarationsFile,The length of the statement  "                throw new InvalidOperationException($"importing '{typeForError}' required but multiple '{fileT4S}' were found inside '{assemblyReference.ReactDirectory}':\r\n{string.Join("\r\n"' result.Select(a => "    " + a).ToArray())}"); " is 224.
Long Statement,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,FindDeclarationsFile,The length of the statement  "            throw new InvalidOperationException($"importing '{typeForError}' required but no '{fileTS}' or '{fileT4S}' found inside '{assemblyReference.ReactDirectory}'"); " is 159.
Long Statement,Signum.TSGenerator,SignumTSGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\SignumTSGenerator.cs,Execute,The length of the statement  "                dynamic obj = domain.CreateInstanceFromAndUnwrap(this.GetType().Assembly.Location' "Signum.TSGenerator.ProxyGenerator"); " is 120.
Missing Default,Signum.TSGenerator,EntityDeclarationGenerator,C:\repos\signumsoftware_framework\Signum.TSGenerator\EntityDeclarationGenerator.cs,TypeScriptName,The following switch statement is missing a default case: switch (Type.GetTypeCode(type))                  {                      case TypeCode.Boolean: return "boolean";                      case TypeCode.Char: return "string";                      case TypeCode.SByte:                      case TypeCode.Byte:                      case TypeCode.Int16:                      case TypeCode.UInt16:                      case TypeCode.Int32:                      case TypeCode.UInt32:                      case TypeCode.Int64:                      case TypeCode.UInt64:                      case TypeCode.Decimal:                      case TypeCode.Single:                      case TypeCode.Double: return "number";                      case TypeCode.String: return "string";                      case TypeCode.DateTime: return "string";                  }
