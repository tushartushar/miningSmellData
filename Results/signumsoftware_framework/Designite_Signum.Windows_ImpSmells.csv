Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Signum.Windows,EntityStripContentControl,C:\repos\signumsoftware_framework\Signum.Windows\EntityControls\EntityStrip.xaml.cs,OnApplyTemplate,Cyclomatic complexity of the method is 9
Complex Method,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,Process,Cyclomatic complexity of the method is 9
Complex Method,Signum.Windows,SelectorWindow,C:\repos\signumsoftware_framework\Signum.Windows\SelectorWindow.xaml.cs,ShowDialog,Cyclomatic complexity of the method is 8
Complex Method,Signum.Windows,EntityRepeaterContentControl,C:\repos\signumsoftware_framework\Signum.Windows\EntityControls\EntityRepeater.xaml.cs,OnApplyTemplate,Cyclomatic complexity of the method is 9
Complex Method,Signum.Windows,SearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SearchControl.xaml.cs,OnLoaded,Cyclomatic complexity of the method is 16
Complex Method,Signum.Windows,SearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SearchControl.xaml.cs,FillContextMenuItems,Cyclomatic complexity of the method is 8
Complex Method,Signum.Windows,EntityBase,C:\repos\signumsoftware_framework\Signum.Windows\EntityControls\EntityBase.cs,OnLoad,Cyclomatic complexity of the method is 10
Complex Method,Signum.Windows,EntityCombo,C:\repos\signumsoftware_framework\Signum.Windows\EntityControls\EntityCombo.xaml.cs,LoadNow,Cyclomatic complexity of the method is 8
Complex Method,Signum.Windows,NavigationManager,C:\repos\signumsoftware_framework\Signum.Windows\Facades\Navigator.cs,View,Cyclomatic complexity of the method is 9
Complex Method,Signum.Windows.Operations,OperationManager,C:\repos\signumsoftware_framework\Signum.Windows\Operations\OperationClient.cs,ButtonBar_GetButtonBarElement,Cyclomatic complexity of the method is 11
Long Parameter List,Signum.Windows,MultiSelectorWindow,C:\repos\signumsoftware_framework\Signum.Windows\MultiSelectorWindow.xaml.cs,ShowDialog,The method has 7 parameters. Parameters: elements' selectedElements' elementIcon' elementText' title' message' owner
Long Parameter List,Signum.Windows,Fluent,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\Fluent.cs,Bind,The method has 5 parameters. Parameters: bindable' property' source' sourcePath' converter
Long Parameter List,Signum.Windows,Fluent,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\Fluent.cs,Bind,The method has 5 parameters. Parameters: bindable' property' source' sourcePath' converter
Long Parameter List,Signum.Windows,SelectorWindow,C:\repos\signumsoftware_framework\Signum.Windows\SelectorWindow.xaml.cs,ShowDialog,The method has 9 parameters. Parameters: elements' selectedElement' elementIcon' elementText' title' message' autoSelectOnlyElement' owner' elementTooltip
Long Parameter List,Signum.Windows,ThemeManager,C:\repos\signumsoftware_framework\Signum.Windows\Utilities\ThemeManager.cs,FilterThemeMessage,The method has 5 parameters. Parameters: hwnd' msg' wParam' lParam' handled
Long Parameter List,Signum.Windows,ValueLineBox,C:\repos\signumsoftware_framework\Signum.Windows\ValueLineBox.xaml.cs,Show,The method has 7 parameters. Parameters: value' title' text' labelText' format' unitText' owner
Long Parameter List,Signum.Windows,ValueLineBox,C:\repos\signumsoftware_framework\Signum.Windows\ValueLineBox.xaml.cs,ShowUntyped,The method has 8 parameters. Parameters: type' value' title' text' labelText' format' unitText' owner
Long Parameter List,Signum.Windows,SearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SearchControl.xaml.cs,Reinitialize,The method has 5 parameters. Parameters: filters' columns' columnOptionsMode' orders' pagination
Long Parameter List,Signum.Windows,NavigationManager,C:\repos\signumsoftware_framework\Signum.Windows\Facades\Navigator.cs,SetNormalWindowEntity,The method has 5 parameters. Parameters: win' entity' options' es' ctrl
Long Identifier,Signum.Windows,Common,C:\repos\signumsoftware_framework\Signum.Windows\Common.cs,,The length of the parameter AutomationItemStatusFromDataContextProperty is 43.
Long Identifier,Signum.Windows,EntityRepeater,C:\repos\signumsoftware_framework\Signum.Windows\EntityControls\EntityRepeater.xaml.cs,,The length of the parameter VerticalScrollBarVisibilityProperty is 35.
Long Identifier,Signum.Windows,EntityRepeater,C:\repos\signumsoftware_framework\Signum.Windows\EntityControls\EntityRepeater.xaml.cs,,The length of the parameter HorizontalScrollBarVisibilityProperty is 37.
Long Identifier,Signum.Windows,Monitors,C:\repos\signumsoftware_framework\Signum.Windows\Utilities\Monitors.cs,,The length of the parameter CenterOnSizedToContentProperty is 30.
Long Identifier,Signum.Windows,ThemeManager,C:\repos\signumsoftware_framework\Signum.Windows\Utilities\ThemeManager.cs,,The length of the parameter SystemResources_InvalidateResources is 35.
Long Identifier,Signum.Windows,ThemeManager,C:\repos\signumsoftware_framework\Signum.Windows\Utilities\ThemeManager.cs,,The length of the parameter SystemResources_OnThemeChanged is 30.
Long Identifier,Signum.Windows,ThemeManager,C:\repos\signumsoftware_framework\Signum.Windows\Utilities\ThemeManager.cs,,The length of the parameter SystemParameters_InvalidateCache is 32.
Long Identifier,Signum.Windows,NumericTextBox,C:\repos\signumsoftware_framework\Signum.Windows\Controls\NumericTextBox.cs,,The length of the parameter NullableNumericConverterProperty is 32.
Long Identifier,Signum.Windows,EntityBase,C:\repos\signumsoftware_framework\Signum.Windows\EntityControls\EntityBase.cs,,The length of the parameter EntityTemplateSelectorProperty is 30.
Long Identifier,Signum.Windows.Operations,OperationClient,C:\repos\signumsoftware_framework\Signum.Windows\Operations\OperationClient.cs,,The length of the parameter ConstructFromOperationKeyProperty is 33.
Long Identifier,Signum.Windows.Operations,OperationManager,C:\repos\signumsoftware_framework\Signum.Windows\Operations\OperationClient.cs,,The length of the parameter newConstructorOperationContext is 30.
Long Statement,Signum.Windows.Basics,ExceptionClient,C:\repos\signumsoftware_framework\Signum.Windows\Basics\Exception.xaml.cs,Start,The length of the statement  "                Navigator.AddSetting(new EntitySettings<ExceptionEntity>() { View = e => new ExceptionCtrl()' Icon = ImageLoader.GetImageSortName("exception.png") }); " is 150.
Long Statement,Signum.Windows,DynamicQueryServer,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\DynamicQueryServer.cs,GetExtensionToken,The length of the statement  "            var result = extensionCache.GetOrAdd(token' t => Server.Return((IDynamicQueryServer server) => server.ExternalQueryToken(t))); " is 126.
Long Statement,Signum.Windows,DynamicQueryServer,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\DynamicQueryServer.cs,GetQueryDescription,The length of the statement  "            return descriptionsCache.GetOrAdd(queryName' qn => Server.Return((IDynamicQueryServer s) => s.GetQueryDescription(qn))); " is 120.
Long Statement,Signum.Windows,DynamicQueryServer,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\DynamicQueryServer.cs,Hooks_DispatcherInactive,The length of the statement  "                var tup = tuples.Extract(Dispatcher.CurrentDispatcher' "Calling Hooks_DispatcherInactive with no tuples for {0}").ToList(); " is 123.
Long Statement,Signum.Windows,ElementsInPageLabel,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\ElementsInPageLabel.xaml.cs,SetResults,The length of the statement  "                    tb.Inlines.Add(SearchMessage.First0Results_N.NiceToString().ForGenderAndNumber(number: rt.Rows.Length).FormatSpan(run)); " is 120.
Long Statement,Signum.Windows,FilterLine,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\FilterLine.xaml.cs,RecreateControls,The length of the statement  "                            new Button { Style = (Style)FindResource("RoundButton")' Focusable = false' Content = FindResource("Create")}.Handle(Button.ClickEvent' CreateItem): " is 148.
Long Statement,Signum.Windows,FilterLine,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\FilterLine.xaml.cs,RecreateControls,The length of the statement  "                            new Button { Style = (Style)FindResource("RoundButton")' Focusable = false' Content = FindResource("Remove")}.Handle(Button.ClickEvent' RemoveItem) " is 147.
Long Statement,Signum.Windows,PaginationSelector,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\PaginationSelector.xaml.cs,cbMode_SelectionChanged,The length of the statement  "                mode == PaginationMode.Paginate ? new Pagination.Paginate(Pagination.Paginate.DefaultElementsPerPage' 1) : (Pagination)null; " is 124.
Long Statement,Signum.Windows,ErrorSummary,C:\repos\signumsoftware_framework\Signum.Windows\ErrorSummary.xaml.cs,ErrorSummary_Loaded,The length of the statement  "            this.SetBinding(HasErrorsProperty' new Binding("ItemsSource") {  Source = lb' Converter = Converters.ErrorListToBool }); " is 120.
Long Statement,Signum.Windows,Async,C:\repos\signumsoftware_framework\Signum.Windows\Async.cs,Do,The length of the statement  "                    disp.Invoke(DispatcherPriority.Normal' (Action)(() => AsyncUnhandledException(e' threadWindows.TryGetC(Thread.CurrentThread)))); " is 128.
Long Statement,Signum.Windows,Common,C:\repos\signumsoftware_framework\Signum.Windows\Common.cs,RefreshAutoHide,The length of the statement  "            var list = content.Children<FrameworkElement>(fe => GetAutoHide(fe) != AutoHide.Undefined' WhereFlags.StartOnParent).ToList(); " is 126.
Long Statement,Signum.Windows,Common,C:\repos\signumsoftware_framework\Signum.Windows\Common.cs,InititializeRoute,The length of the statement  "                throw new InvalidOperationException("Route attached property can not be set with null PropertyRoute: '{0}'".FormatWith(route)); " is 127.
Long Statement,Signum.Windows,Common,C:\repos\signumsoftware_framework\Signum.Windows\Common.cs,TaskSetValueProperty,The length of the statement  "            bool isReadOnly = context.PropertyRouteType == PropertyRouteType.FieldOrProperty && context.PropertyInfo.IsReadOnly() ||  " is 120.
Long Statement,Signum.Windows,Common,C:\repos\signumsoftware_framework\Signum.Windows\Common.cs,TaskSetUnitText,The length of the statement  "            if (fe is ValueLine vl && vl.NotSet(ValueLine.UnitTextProperty) && context.PropertyRouteType == PropertyRouteType.FieldOrProperty) " is 130.
Long Statement,Signum.Windows,Common,C:\repos\signumsoftware_framework\Signum.Windows\Common.cs,TaskSetFormatText,The length of the statement  "            if (fe is ValueLine vl && vl.NotSet(ValueLine.FormatProperty) && context.PropertyRouteType == PropertyRouteType.FieldOrProperty) " is 128.
Long Statement,Signum.Windows,Common,C:\repos\signumsoftware_framework\Signum.Windows\Common.cs,TaskSetIsReadonly,The length of the statement  "            if (isReadOnly && fe.NotSet(Common.IsReadOnlyProperty) && (fe is ValueLine || fe is EntityLine || fe is EntityCombo || fe is TextArea)) " is 135.
Long Statement,Signum.Windows,Common,C:\repos\signumsoftware_framework\Signum.Windows\Common.cs,TaskSetNotNullItemsSource,The length of the statement  "            if (fe is ValueLine vl && vl.NotSet(ValueLine.ItemSourceProperty) && context.PropertyRouteType == PropertyRouteType.FieldOrProperty) " is 132.
Long Statement,Signum.Windows,Common,C:\repos\signumsoftware_framework\Signum.Windows\Common.cs,TaskSetNotNullItemsSource,The length of the statement  "                   Validator.TryGetPropertyValidator(context).Let(pv => pv != null && pv.Validators.OfType<NotNullValidatorAttribute>().Any())) " is 124.
Long Statement,Signum.Windows,Common,C:\repos\signumsoftware_framework\Signum.Windows\Common.cs,TaskSetNullValueEntityCombo,The length of the statement  "            if (fe is EntityCombo ec && ec.NotSet(EntityCombo.NullValueProperty) && context.PropertyRouteType == PropertyRouteType.FieldOrProperty) " is 135.
Long Statement,Signum.Windows,Common,C:\repos\signumsoftware_framework\Signum.Windows\Common.cs,TaskSetNullValueEntityCombo,The length of the statement  "                if (Validator.TryGetPropertyValidator(context).Let(pv => pv != null && pv.Validators.OfType<NotNullValidatorAttribute>().Any())) " is 128.
Long Statement,Signum.Windows,Common,C:\repos\signumsoftware_framework\Signum.Windows\Common.cs,TaskSetMaxLenth,The length of the statement  "            if (fe is ValueLine vl && context.PropertyRouteType == PropertyRouteType.FieldOrProperty && context.Type == typeof(string)) " is 123.
Long Statement,Signum.Windows,Common,C:\repos\signumsoftware_framework\Signum.Windows\Common.cs,TaskSetMaxLenth,The length of the statement  "                var slv = Validator.TryGetPropertyValidator(context)?.Validators.OfType<StringLengthValidatorAttribute>().FirstOrDefault(); " is 123.
Long Statement,Signum.Windows,Common,C:\repos\signumsoftware_framework\Signum.Windows\Common.cs,GetEntityStringAndHashCode,The length of the statement  "            return GetEntityString(newValue) + " Hash: " + ReferenceEqualityComparer<object>.Default.GetHashCode(newValue).ToString("x"); " is 125.
Long Statement,Signum.Windows,AutoControl,C:\repos\signumsoftware_framework\Signum.Windows\AutoControl.cs,GenerateField,The length of the statement  "                            new XElement(m + "EntityList"' new XAttribute(m + "Common.Route"' pi.Name)' new XAttribute("ViewOnCreate"' "False")' new XAttribute("Grid.Column"' "0")' new XAttribute("MaxHeight"' "150"))' " is 189.
Long Statement,Signum.Windows,EntityExtensions,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\EntityExtensions.cs,AssertErrors,The length of the statement  "                MessageBox.Show(Window.GetWindow(element)' NormalWindowMessage.ImpossibleToSaveIntegrityCheckFailed.NiceToString() + error' NormalWindowMessage.ThereAreErrors.NiceToString()' MessageBoxButton.OK' MessageBoxImage.Error); " is 219.
Long Statement,Signum.Windows,EntityExtensions,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\EntityExtensions.cs,AssertErrors,The length of the statement  "                MessageBox.Show(window' NormalWindowMessage.ImpossibleToSaveIntegrityCheckFailed.NiceToString() + error.Values.SelectMany(a=>a.Errors.Values).ToString("\r\n")' NormalWindowMessage.ThereAreErrors.NiceToString()'  " is 210.
Long Statement,Signum.Windows,EntityExtensions,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\EntityExtensions.cs,GetErrors,The length of the statement  "            var entityErrors = GetErrors((Modifiable)element.DataContext)?.Values.ToString(d => d.Errors.Values.ToString("\r\n")' "\r\n"); " is 126.
Long Statement,Signum.Windows,EntityExtensions,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\EntityExtensions.cs,VisualErrors,The length of the statement  "            var visualErrors = (from c in element.Children<DependencyObject>(Validation.GetHasError' WhereFlags.NonRecursive | WhereFlags.BreathFirst | WhereFlags.VisualTree) " is 162.
Long Statement,Signum.Windows,Fluent,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\Fluent.cs,Bind,The length of the statement  "            BindingOperations.SetBinding(bindable' property' new Binding(RouteVisitor.GetRoute(sourcePath)) { Converter = converter }); " is 123.
Long Statement,Signum.Windows,Fluent,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\Fluent.cs,Bind,The length of the statement  "            BindingOperations.SetBinding(bindable' property' new Binding(RouteVisitor.GetRoute(sourcePath)) { Source = source' Converter = converter }); " is 140.
Long Statement,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,Generate,The length of the statement  "            var variables = list.Where(a => a.NodeType == ExpressionType.Assign).Select(e => (ParameterExpression)((BinaryExpression)e).Left); " is 130.
Long Statement,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,Process,The length of the statement  "                                    list.Add(Expression.Call(factory' miSetValue' Expression.Constant(desc.DependencyProperty)' Expression.Convert(ma.Expression' typeof(object)))); " is 144.
Long Statement,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,ProcessChild,The length of the statement  "            if (!typeof(w.FrameworkElement).IsAssignableFrom(single.Type) && !typeof(w.FrameworkContentElement).IsAssignableFrom(single.Type)) " is 130.
Long Statement,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,ProcessChild,The length of the statement  "                throw new InvalidOperationException("Can not make a {0} from a {1}".FormatWith(typeof(w.FrameworkElementFactory).Name' single.Type)); " is 133.
Long Statement,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,ProcessMethod,The length of the statement  "                case "Hide": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Hidden)); " is 152.
Long Statement,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,ProcessMethod,The length of the statement  "                case "Collapse": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Collapsed)); " is 159.
Long Statement,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,ProcessMethod,The length of the statement  "                case "Visible": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Visible)); " is 156.
Long Statement,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,ProcessMethod,The length of the statement  "                case "ReadOnly": return Expression.Call(factory' miSetValue' Expression.Constant(Common.IsReadOnlyProperty)' Expression.Constant(true)); " is 136.
Long Statement,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,ProcessMethod,The length of the statement  "                case "Editable": return Expression.Call(factory' miSetValue' Expression.Constant(Common.IsReadOnlyProperty)' Expression.Constant(false)); " is 137.
Long Statement,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,ProcessMethod,The length of the statement  "                case "Handle": return Expression.Call(factory' miAddHandler' call.Arguments[1]' Expression.Convert(call.Arguments[2]' typeof(Delegate))); " is 137.
Long Statement,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,ProcessMethod,The length of the statement  "                case "ResourceReference": return Expression.Call(factory' miSetResourceReference' call.Arguments[1]' call.Arguments[2]); " is 120.
Long Statement,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,ProcessMethod,The length of the statement  "                case "Bind": return Expression.Call(factory' miSetBinding' call.Arguments[1]' GetBinding(call.Method.GetGenericArguments().Length == 2' call.Arguments.Skip(2).ToArray()));  " is 171.
Long Statement,Signum.Windows,CountSearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\CountSearchControl.xaml.cs,SearchControl_Loaded,The length of the statement  "                }.Bind(FilterOption.ValueProperty' new Binding("DataContext" + (FilterRoute.HasText() ? "." + FilterRoute : null)) { Source = this })); " is 135.
Long Statement,Signum.Windows,CountSearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\CountSearchControl.xaml.cs,Search,The length of the statement  "                    FormattedText = (TextZeroItems ?? SearchMessage.ThereIsNo0.NiceToString()).FormatWith(QueryUtils.GetNiceName(QueryName)); " is 121.
Long Statement,Signum.Windows,MonitorInfo,C:\repos\signumsoftware_framework\Signum.Windows\Utilities\Monitors.cs,ToString,The length of the statement  "            return string.Format("Monitor = {0}{1} Display = {2} Working Area = {3}"' Handler' IsPrimary ? "(Primary)" : ""' DisplayArea' WorkingArea); " is 139.
Long Statement,Signum.Windows,ConstructorManager,C:\repos\signumsoftware_framework\Signum.Windows\Facades\Constructor.cs,PostConstructors_AddFilterProperties,The length of the statement  "                var filters = ((SearchControl)ctx.Element).FilterOptions.Where(fo => fo.Operation == FilterOperation.EqualTo && fo.Token is ColumnToken); " is 137.
Long Statement,Signum.Windows,FilterOption,C:\repos\signumsoftware_framework\Signum.Windows\Facades\FindOptions.cs,SetFilterTokens,The length of the statement  "            var options = SubTokensOptions.CanAnyAll | SubTokensOptions.CanElement | (canAggregate ? SubTokensOptions.CanAggregate : 0); " is 124.
Long Statement,Signum.Windows,ColumnOption,C:\repos\signumsoftware_framework\Signum.Windows\Facades\FindOptions.cs,MergeColumns,The length of the statement  "                    return qd.Columns.Where(cd => !cd.IsEntity && !columns.Any(co => co.ColumnName == cd.Name)).Select(cd => new Column(cd' qd.QueryName)).ToList(); " is 144.
Long Statement,Signum.Windows,DualConvertet<S1;S2;T>,C:\repos\signumsoftware_framework\Signum.Windows\Converters\Converter.cs,Convert,The length of the statement  "            if (values == null || values.Length != 2 || (values[0] == DependencyProperty.UnsetValue) || (values[1] == DependencyProperty.UnsetValue)) " is 137.
Long Statement,Signum.Windows,SearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SearchControl.xaml.cs,OnLoaded,The length of the statement  "                }.Bind(FilterOption.ValueProperty' new Binding("DataContext" + (FilterRoute.HasText() ? "." + FilterRoute : null)) { Source = this })); " is 135.
Long Statement,Signum.Windows,SearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SearchControl.xaml.cs,OnLoaded,The length of the statement  "                var orderType = entityColumn.Implementations.Value.Types.All(t => EntityKindCache.GetEntityData(t) == EntityData.Master) ? OrderType.Ascending : OrderType.Descending; " is 166.
Long Statement,Signum.Windows,SearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SearchControl.xaml.cs,OnLoaded,The length of the statement  "                    headerContextMenu.Items.Add(new MenuItem { Header = SearchMessage.AddFilter.NiceToString() }.Handle(MenuItem.ClickEvent' filterHeader_Click)); " is 142.
Long Statement,Signum.Windows,SearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SearchControl.xaml.cs,OnLoaded,The length of the statement  "                    headerContextMenu.Items.Add(new MenuItem { Header = SearchMessage.Rename.NiceToString() }.Handle(MenuItem.ClickEvent' renameMenu_Click)); " is 137.
Long Statement,Signum.Windows,SearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SearchControl.xaml.cs,OnLoaded,The length of the statement  "                    headerContextMenu.Items.Add(new MenuItem { Header = EntityControlMessage.Remove.NiceToString() }.Handle(MenuItem.ClickEvent' removeMenu_Click)); " is 144.
Long Statement,Signum.Windows,SearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SearchControl.xaml.cs,FillContextMenuItems,The length of the statement  "                contextMenu.Items.Add(new MenuItem { Header = SearchMessage.AddFilter.NiceToString() }.Handle(MenuItem.ClickEvent' filterCell_Click)); " is 134.
Long Statement,Signum.Windows,SearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SearchControl.xaml.cs,FillContextMenuItems,The length of the statement  "                    contextMenu.Items.Add(new MenuItem { Header = new TextBlock(new Italic(new Run(SearchMessage.NoActionsFound.NiceToString())))' IsEnabled = false }); " is 148.
Long Statement,Signum.Windows,SearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SearchControl.xaml.cs,SetResults,The length of the statement  "                        throw new InvalidOperationException("The token in the ResultColumn ({0}) does not match with the token in the GridView ({1})" " is 125.
Long Statement,Signum.Windows,SearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SearchControl.xaml.cs,AddColumn,The length of the statement  "            if (ValueLineBox.Show<string>(ref result' SearchMessage.NewColumnSName.NiceToString()' SearchMessage.ChooseTheDisplayNameOfTheNewColumn.NiceToString()' SearchMessage.Name.NiceToString()' null' null' Window.GetWindow(this))) " is 223.
Long Statement,Signum.Windows,SearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SearchControl.xaml.cs,renameMenu_Click,The length of the statement  "            if (ValueLineBox.Show<string>(ref result' SearchMessage.NewColumnSName.NiceToString()' SearchMessage.ChooseTheDisplayNameOfTheNewColumn.NiceToString()' SearchMessage.Name.NiceToString()' null' null' Window.GetWindow(this))) " is 223.
Long Statement,Signum.Windows,SearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SearchControl.xaml.cs,GetCellColumnHeader,The length of the statement  "            SortGridViewColumnHeader gvch = hitResult.VisualHit.VisualParents().OfType<SortGridViewColumnHeader>().FirstOrDefault(); " is 120.
Long Statement,Signum.Windows,FilterBuilder,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\FilterBuilder.xaml.cs,AddFilter,The length of the statement  "                Value = queryToken.Type.IsValueType && !queryToken.Type.IsNullable() ? Activator.CreateInstance(queryToken.Type) : null' " is 120.
Long Statement,Signum.Windows,EntityBase,C:\repos\signumsoftware_framework\Signum.Windows\EntityControls\EntityBase.cs,OnViewingOrNavigating,The length of the statement  "            bool navigatePreferred = _CanNavigate(entity) && (Keyboard.IsKeyDown(Key.LeftCtrl) || Keyboard.IsKeyDown(Key.RightCtrl) || Mouse.MiddleButton == MouseButtonState.Pressed); " is 171.
Long Statement,Signum.Windows,QuickLinkNavigate<T>,C:\repos\signumsoftware_framework\Signum.Windows\Widgets\LinksClient.cs,Execute,The length of the statement  "                MessageBox.Show(QuickLinkMessage.No0Found.NiceToString().ForGenderAndNumber(typeof(T).GetGender()).FormatWith(typeof(T).NiceName())); " is 133.
Long Statement,Signum.Windows,LinksWidget,C:\repos\signumsoftware_framework\Signum.Windows\Widgets\LinksWidget.xaml.cs,LinksWidget_DataContextChanged,The length of the statement  "            ObservableCollection<QuickLink> links = ident != null && !ident.IsNew ? LinksClient.GetForEntity(ident.ToLiteFat()' Control) : new ObservableCollection<QuickLink>(); " is 165.
Long Statement,Signum.Windows,ImageExtension,C:\repos\signumsoftware_framework\Signum.Windows\MarkupExtensions\ImageExtension.cs,ProvideValue,The length of the statement  "                Source =  BitmapFrame.Create(GetUriFromUriContext((IUriContext)serviceProvider.GetService(typeof(IUriContext))' source))' " is 121.
Long Statement,Signum.Windows,NavigationManager,C:\repos\signumsoftware_framework\Signum.Windows\Facades\Navigator.cs,View,The length of the statement  "                bool saveProtected = ((ViewOptions)options).RequiresSaveOperation ?? EntityKindCache.RequiresSaveOperation(ident.GetType()); " is 124.
Long Statement,Signum.Windows,NavigationManager,C:\repos\signumsoftware_framework\Signum.Windows\Facades\Navigator.cs,View,The length of the statement  "                        throw new InvalidOperationException("The lite '{0}' of type '{1}' is SaveProtected but has changes. Consider setting SaveProtected = false in ViewOptions".FormatWith(entityOrLite' liteType.TypeName())); " is 202.
Long Statement,Signum.Windows,NavigationManager,C:\repos\signumsoftware_framework\Signum.Windows\Facades\Navigator.cs,SetNormalWindowEntity,The length of the statement  "                    (typeof(Entity).IsAssignableFrom(entityType) && EntityKindCache.RequiresSaveOperation(entityType)); //Matters even on Ok " is 120.
Long Statement,Signum.Windows,NavigationManager,C:\repos\signumsoftware_framework\Signum.Windows\Facades\Navigator.cs,AssertViewableEntitySettings,The length of the statement  "                throw new InvalidOperationException("No view has been set in the EntitySettings for {0}".FormatWith(entity.GetType().Name)); " is 124.
Long Statement,Signum.Windows,NormalWindow,C:\repos\signumsoftware_framework\Signum.Windows\NormalWindow.xaml.cs,ChangeDataContext_Handler,The length of the statement  "                    throw new InvalidCastException("The DataContext is a {0} but TypeContext is {1}".FormatWith(entityType.Name' type.Name)); " is 121.
Long Statement,Signum.Windows,NormalWindow,C:\repos\signumsoftware_framework\Signum.Windows\NormalWindow.xaml.cs,Ok_Click,The length of the statement  "                                NormalWindowMessage.The0HasErrors1.NiceToString().ForGenderAndNumber(type.GetGender()).FormatWith(type.NiceName()' errors.Indent(3))' " is 133.
Long Statement,Signum.Windows,NormalWindow,C:\repos\signumsoftware_framework\Signum.Windows\NormalWindow.xaml.cs,Ok_Click,The length of the statement  "                                NormalWindowMessage.The0HasErrors1.NiceToString().ForGenderAndNumber(type.GetGender()).FormatWith(type.NiceName()' errors.Indent(3)) + "\r\n" + NormalWindowMessage.ContinueAnyway.NiceToString()' " is 194.
Long Statement,Signum.Windows,Server,C:\repos\signumsoftware_framework\Signum.Windows\Facades\Server.cs,AssertConnected,The length of the statement  "                throw new NotConnectedToServerException(ConnectionMessage.AConnectionWithTheServerIsNecessaryToContinue.NiceToString()); " is 120.
Long Statement,Signum.Windows,Server,C:\repos\signumsoftware_framework\Signum.Windows\Facades\Server.cs,Return,The length of the statement  "                using (HeavyProfiler.Log("WCFClient"' () => "Return(({0} server)=>{1})".FormatWith(typeof(S).TypeName()' typeof(R).TypeName()))) " is 128.
Long Statement,Signum.Windows,Server,C:\repos\signumsoftware_framework\Signum.Windows\Facades\Server.cs,HandleSessionException,The length of the statement  "            MessageBox.Show(ConnectionMessage.SessionExpired.NiceToString()' ConnectionMessage.SessionExpired.NiceToString()' MessageBoxButton.OK' MessageBoxImage.Hand); " is 157.
Long Statement,Signum.Windows,Server,C:\repos\signumsoftware_framework\Signum.Windows\Facades\Server.cs,Convert,The length of the statement  "            throw new InvalidCastException("Impossible to convert objet {0} from type {1} to type {2}".FormatWith(obj' objType' type)); " is 123.
Long Statement,Signum.Windows.DynamicQuery,SortGridViewColumnHeader,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SortGridViewColumnHeader.cs,ChangeOrders,The length of the statement  "            if ((Keyboard.Modifiers & ModifierKeys.Shift) == ModifierKeys.Shift || (orderOptions.Count == 1 && orderOptions[0].Header == this)) " is 131.
Long Statement,Signum.Windows.DynamicQuery,SortAdorner,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SortGridViewColumnHeader.cs,OnRender,The length of the statement  "            drawingContext.DrawGeometry(brushes[Priority % brushes.Length]' null' OrderType == OrderType.Ascending ? Ascending : Descending); " is 129.
Long Statement,Signum.Windows.Operations,ConstructFromManyMenuItemConsturctor,C:\repos\signumsoftware_framework\Signum.Windows\Operations\ConstructFromManyMenuItem.cs,Construct,The length of the statement  "                        Entity result = (Entity)new ConstructorContext(coc.SearchControl' coc.OperationInfo).SurroundConstructUntyped(coc.OperationInfo.ReturnType' ctx => " is 146.
Long Statement,Signum.Windows.Operations,ConstructFromManyMenuItemConsturctor,C:\repos\signumsoftware_framework\Signum.Windows\Operations\ConstructFromManyMenuItem.cs,Construct,The length of the statement  "                            Server.Return((IOperationServer s) => s.ConstructFromMany(coc.SearchControl.SelectedItems.ToList()' coc.Type' coc.OperationInfo.OperationSymbol' ctx.Args))); " is 157.
Long Statement,Signum.Windows.Operations,ConstructFromManyMenuItemConsturctor,C:\repos\signumsoftware_framework\Signum.Windows\Operations\ConstructFromManyMenuItem.cs,Construct,The length of the statement  "                            MessageBox.Show(Window.GetWindow(coc.SearchControl)' OperationMessage.TheOperation0DidNotReturnAnEntity.NiceToString().FormatWith(coc.OperationInfo.OperationSymbol.NiceToString())); " is 181.
Long Statement,Signum.Windows.Operations,EntityOperationMenuItemConsturctor,C:\repos\signumsoftware_framework\Signum.Windows\Operations\EntityOperationMenuItem.cs,Construct,The length of the statement  "                                    var result = (Entity)new ConstructorContext(coc.SearchControl' coc.OperationInfo).SurroundConstructUntyped(coc.OperationInfo.ReturnType' ctx => " is 143.
Long Statement,Signum.Windows.Operations,EntityOperationToolBarButton,C:\repos\signumsoftware_framework\Signum.Windows\Operations\EntityOperationToolBarButton.cs,MoveToSearchControls,The length of the statement  "                sc.NotSet(OperationClient.ConstructFromOperationKeyProperty) && sc.EntityType == eoc.OperationInfo.ReturnType).ToList(); " is 120.
Long Statement,Signum.Windows.Operations,EntityOperationToolBarButton,C:\repos\signumsoftware_framework\Signum.Windows\Operations\EntityOperationToolBarButton.cs,MoveToSearchControls,The length of the statement  "                var oldButton = panel.Children<ToolBarButton>(tb => tb.Tag is OperationInfo && ((OperationInfo)tb.Tag).OperationSymbol.Equals(eoc.OperationInfo.OperationSymbol)).FirstOrDefault(); " is 179.
Long Statement,Signum.Windows.Operations,EntityOperationToolBarButton,C:\repos\signumsoftware_framework\Signum.Windows\Operations\EntityOperationToolBarButton.cs,OperationExecute,The length of the statement  "                throw new ApplicationException("Operation {0} is disabled: {1}".FormatWith(eoc.OperationInfo.OperationSymbol' eoc.CanExecute)); " is 127.
Long Statement,Signum.Windows.Operations,EntityOperationToolBarButton,C:\repos\signumsoftware_framework\Signum.Windows\Operations\EntityOperationToolBarButton.cs,OperationExecute,The length of the statement  "                                IEntity newIdent = Server.Return((IOperationServer s) => s.ExecuteOperationLite(lite' eoc.OperationInfo.OperationSymbol' null)); " is 128.
Long Statement,Signum.Windows.Operations,EntityOperationToolBarButton,C:\repos\signumsoftware_framework\Signum.Windows\Operations\EntityOperationToolBarButton.cs,OperationExecute,The length of the statement  "                                IEntity newIdent = Server.Return((IOperationServer s) => s.ExecuteOperation(ident' eoc.OperationInfo.OperationSymbol' null)); " is 125.
Long Statement,Signum.Windows.Operations,EntityOperationToolBarButton,C:\repos\signumsoftware_framework\Signum.Windows\Operations\EntityOperationToolBarButton.cs,OperationExecute,The length of the statement  "                    IEntity result = (Entity)new ConstructorContext(eoc.EntityControl' eoc.OperationInfo).SurroundConstructUntyped(eoc.OperationInfo.ReturnType' ctx => " is 147.
Long Statement,Signum.Windows.Operations,EntityOperationToolBarButton,C:\repos\signumsoftware_framework\Signum.Windows\Operations\EntityOperationToolBarButton.cs,OperationExecute,The length of the statement  "                            r = Server.Return((IOperationServer s) => s.ConstructFromLite(ident.ToLite()' eoc.OperationInfo.OperationSymbol' null)); " is 120.
Long Statement,Signum.Windows.Operations,EntityOperationToolBarButton,C:\repos\signumsoftware_framework\Signum.Windows\Operations\EntityOperationToolBarButton.cs,OperationExecute,The length of the statement  "                            MessageBox.Show(Window.GetWindow(eoc.EntityControl)' OperationMessage.TheOperation0DidNotReturnAnEntity.NiceToString().FormatWith(eoc.OperationInfo.OperationSymbol.NiceToString())); " is 181.
Long Statement,Signum.Windows.Operations,OperationClient,C:\repos\signumsoftware_framework\Signum.Windows\Operations\OperationClient.cs,AddSetting,The length of the statement  "            Manager.Settings.GetOrAddDefinition(setting.OverridenType).AddOrThrow(setting.OperationSymbol' setting' "{0} repeated"); " is 120.
Long Statement,Signum.Windows.Operations,OperationManager,C:\repos\signumsoftware_framework\Signum.Windows\Operations\OperationClient.cs,GetSettings,The length of the statement  "                    throw new InvalidOperationException("{0}({1}) should be a {2}".FormatWith(settings.GetType().TypeName()' operation.Key' typeof(OS).TypeName())); " is 144.
Long Statement,Signum.Windows.Operations,OperationManager,C:\repos\signumsoftware_framework\Signum.Windows\Operations\OperationClient.cs,HasConstructOperations,The length of the statement  "            return hasConstructOperations.GetOrAdd(entityType' t => Server.Return((IOperationServer o) => o.HasConstructOperations(t))); " is 124.
Long Statement,Signum.Windows.Operations,OperationManager,C:\repos\signumsoftware_framework\Signum.Windows\Operations\OperationClient.cs,ButtonBar_GetButtonBarElement,The length of the statement  "            Dictionary<EntityOperationGroup' List<FrameworkElement>> groupButtons = new Dictionary<EntityOperationGroup'List<FrameworkElement>>(); " is 134.
Long Statement,Signum.Windows.Operations,OperationManager,C:\repos\signumsoftware_framework\Signum.Windows\Operations\OperationClient.cs,SearchControl_GetEntityOperationMenuItem,The length of the statement  "                              let coc = newContextualOperationContext.GetInvoker(os?.OverridenType ?? sc.SelectedItem.EntityType)(sc' oi' os?.ContextualUntyped) " is 130.
Long Statement,Signum.Windows.Operations,OperationManager,C:\repos\signumsoftware_framework\Signum.Windows\Operations\OperationClient.cs,SearchControl_GetEntityOperationMenuItem,The length of the statement  "                Dictionary<OperationSymbol' string> canExecutes = Server.Return((IOperationServer os) => os.GetCanExecuteLiteAll(sc.SelectedItem)); " is 131.
Long Statement,Signum.Windows.Operations,ContextualOperationContext<T>,C:\repos\signumsoftware_framework\Signum.Windows\Operations\OperationSettings.cs,ConfirmMessage,The length of the statement  "            string message = OperationSettings != null && OperationSettings.ConfirmMessage != null ? OperationSettings.ConfirmMessage(this) : " is 129.
Long Statement,Signum.Windows.Operations,ContextualOperationContext<T>,C:\repos\signumsoftware_framework\Signum.Windows\Operations\OperationSettings.cs,ConfirmMessage,The length of the statement  "                OperationInfo.OperationType == OperationType.Delete && Entities.Count > 1 ? OperationMessage.PleaseConfirmYouDLikeToDeleteTheSelectedEntitiesFromTheSystem.NiceToString() : " is 171.
Long Statement,Signum.Windows.Operations,ContextualOperationContext<T>,C:\repos\signumsoftware_framework\Signum.Windows\Operations\OperationSettings.cs,ConfirmMessage,The length of the statement  "                OperationInfo.OperationType == OperationType.Delete && Entities.Count == 1 ? OperationMessage.PleaseConfirmYouDLikeToDeleteTheEntityFromTheSystem.NiceToString() : null; " is 168.
Long Statement,Signum.Windows.Operations,ContextualOperationContext<T>,C:\repos\signumsoftware_framework\Signum.Windows\Operations\OperationSettings.cs,ConfirmMessage,The length of the statement  "            return MessageBox.Show(Window.GetWindow(SearchControl)' message' OperationInfo.OperationSymbol.NiceToString()' MessageBoxButton.OKCancel) == MessageBoxResult.OK; " is 161.
Long Statement,Signum.Windows.Operations,EntityOperationContext<T>,C:\repos\signumsoftware_framework\Signum.Windows\Operations\OperationSettings.cs,ConfirmMessage,The length of the statement  "            string message = OperationSettings != null && OperationSettings.ConfirmMessage != null ? OperationSettings.ConfirmMessage(this) : " is 129.
Long Statement,Signum.Windows.Operations,EntityOperationContext<T>,C:\repos\signumsoftware_framework\Signum.Windows\Operations\OperationSettings.cs,ConfirmMessage,The length of the statement  "                OperationInfo.OperationType == OperationType.Delete ? OperationMessage.PleaseConfirmYouDLikeToDeleteTheEntityFromTheSystem.NiceToString() : null; " is 145.
Long Statement,Signum.Windows.Operations,EntityOperationContext<T>,C:\repos\signumsoftware_framework\Signum.Windows\Operations\OperationSettings.cs,ConfirmMessage,The length of the statement  "            return MessageBox.Show(Window.GetWindow(EntityControl)' message' OperationInfo.OperationSymbol.NiceToString()' MessageBoxButton.OKCancel) == MessageBoxResult.OK; " is 161.
Complex Conditional,Signum.Windows,Common,C:\repos\signumsoftware_framework\Signum.Windows\Common.cs,TaskSetIsReadonly,The conditional expression  "isReadOnly && fe.NotSet(Common.IsReadOnlyProperty) && (fe is ValueLine || fe is EntityLine || fe is EntityCombo || fe is TextArea)"  is complex.
Complex Conditional,Signum.Windows,Common,C:\repos\signumsoftware_framework\Signum.Windows\Common.cs,TaskSetNotNullItemsSource,The conditional expression  "context.Type.IsNullable() && context.Type.UnNullify().IsEnum &&                     Validator.TryGetPropertyValidator(context).Let(pv => pv != null && pv.Validators.OfType<NotNullValidatorAttribute>().Any())"  is complex.
Complex Conditional,Signum.Windows,NumericTextBox,C:\repos\signumsoftware_framework\Signum.Windows\Controls\NumericTextBox.cs,OnPreviewKeyDown,The conditional expression  "!IsReadOnly && IsEnabled && Value.HasValue && (e.Key == Key.Up || e.Key == Key.Down)"  is complex.
Complex Conditional,Signum.Windows,DualConvertet<S1;S2;T>,C:\repos\signumsoftware_framework\Signum.Windows\Converters\Converter.cs,Convert,The conditional expression  "values == null || values.Length != 2 || (values[0] == DependencyProperty.UnsetValue) || (values[1] == DependencyProperty.UnsetValue)"  is complex.
Complex Conditional,Signum.Windows,SearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SearchControl.xaml.cs,Pagination_Changed,The conditional expression  "oldPaginate != null && newPaginate != null &&                  oldPaginate.ElementsPerPage == newPaginate.ElementsPerPage &&                  oldPaginate.CurrentPage != newPaginate.CurrentPage"  is complex.
Virtual Method Call from Constructor,Signum.Windows,EntityBase,C:\repos\signumsoftware_framework\Signum.Windows\EntityControls\EntityBase.cs,EntityBase,The constructor "EntityBase" calls a virtual method "UpdateVisibility".
Magic Number,Signum.Windows,PaginationSelector,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\PaginationSelector.xaml.cs,PaginationSelector,The following statement contains a magic number: cbElements.ItemsSource = new List<int> { 5' 10' 20' 50' 100' 200 };
Magic Number,Signum.Windows,PaginationSelector,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\PaginationSelector.xaml.cs,PaginationSelector,The following statement contains a magic number: cbElements.ItemsSource = new List<int> { 5' 10' 20' 50' 100' 200 };
Magic Number,Signum.Windows,PaginationSelector,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\PaginationSelector.xaml.cs,PaginationSelector,The following statement contains a magic number: cbElements.ItemsSource = new List<int> { 5' 10' 20' 50' 100' 200 };
Magic Number,Signum.Windows,PaginationSelector,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\PaginationSelector.xaml.cs,PaginationSelector,The following statement contains a magic number: cbElements.ItemsSource = new List<int> { 5' 10' 20' 50' 100' 200 };
Magic Number,Signum.Windows,PaginationSelector,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\PaginationSelector.xaml.cs,PaginationSelector,The following statement contains a magic number: cbElements.ItemsSource = new List<int> { 5' 10' 20' 50' 100' 200 };
Magic Number,Signum.Windows,PaginationSelector,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\PaginationSelector.xaml.cs,PaginationSelector,The following statement contains a magic number: cbElements.ItemsSource = new List<int> { 5' 10' 20' 50' 100' 200 };
Magic Number,Signum.Windows,PaginationSelector,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\PaginationSelector.xaml.cs,RefreshPageSelector,The following statement contains a magic number: MinMax<int> interval = new MinMax<int>(                  Math.Max(1' paginate.CurrentPage - 2)'                  Math.Min(paginate.CurrentPage + 2' totalPages));
Magic Number,Signum.Windows,PaginationSelector,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\PaginationSelector.xaml.cs,RefreshPageSelector,The following statement contains a magic number: MinMax<int> interval = new MinMax<int>(                  Math.Max(1' paginate.CurrentPage - 2)'                  Math.Min(paginate.CurrentPage + 2' totalPages));
Magic Number,Signum.Windows,ButtonBar,C:\repos\signumsoftware_framework\Signum.Windows\ButtonBar.xaml.cs,SetButtons,The following statement contains a magic number: wrapPanel.Children.RemoveRange(2' wrapPanel.Children.Count - 3);
Magic Number,Signum.Windows,ButtonBar,C:\repos\signumsoftware_framework\Signum.Windows\ButtonBar.xaml.cs,SetButtons,The following statement contains a magic number: wrapPanel.Children.RemoveRange(2' wrapPanel.Children.Count - 3);
Magic Number,Signum.Windows,ButtonBar,C:\repos\signumsoftware_framework\Signum.Windows\ButtonBar.xaml.cs,SetButtons,The following statement contains a magic number: for (int i = 0; i < elements.Count; i++)              {                  wrapPanel.Children.Insert(i + 2' elements[i]);              }
Magic Number,Signum.Windows,AutocompleteTextBox,C:\repos\signumsoftware_framework\Signum.Windows\Controls\AutocompleteTextBox.xaml.cs,AutocompleteTextBox,The following statement contains a magic number: delayTimer.Interval = TimeSpan.FromMilliseconds(300);
Magic Number,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,ProcessMethod,The following statement contains a magic number: switch (call.Method.Name)              {                  case "Set": return Expression.Call(factory' miSetValue' call.Arguments[1]' call.Arguments[2]);                  case "Hide": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Hidden));                  case "Collapse": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Collapsed));                  case "Visible": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Visible));                  case "ReadOnly": return Expression.Call(factory' miSetValue' Expression.Constant(Common.IsReadOnlyProperty)' Expression.Constant(true));                  case "Editable": return Expression.Call(factory' miSetValue' Expression.Constant(Common.IsReadOnlyProperty)' Expression.Constant(false));                    case "Handle": return Expression.Call(factory' miAddHandler' call.Arguments[1]' Expression.Convert(call.Arguments[2]' typeof(Delegate)));                  case "ResourceReference": return Expression.Call(factory' miSetResourceReference' call.Arguments[1]' call.Arguments[2]);                    case "Bind": return Expression.Call(factory' miSetBinding' call.Arguments[1]' GetBinding(call.Method.GetGenericArguments().Length == 2' call.Arguments.Skip(2).ToArray()));               }
Magic Number,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,ProcessMethod,The following statement contains a magic number: switch (call.Method.Name)              {                  case "Set": return Expression.Call(factory' miSetValue' call.Arguments[1]' call.Arguments[2]);                  case "Hide": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Hidden));                  case "Collapse": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Collapsed));                  case "Visible": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Visible));                  case "ReadOnly": return Expression.Call(factory' miSetValue' Expression.Constant(Common.IsReadOnlyProperty)' Expression.Constant(true));                  case "Editable": return Expression.Call(factory' miSetValue' Expression.Constant(Common.IsReadOnlyProperty)' Expression.Constant(false));                    case "Handle": return Expression.Call(factory' miAddHandler' call.Arguments[1]' Expression.Convert(call.Arguments[2]' typeof(Delegate)));                  case "ResourceReference": return Expression.Call(factory' miSetResourceReference' call.Arguments[1]' call.Arguments[2]);                    case "Bind": return Expression.Call(factory' miSetBinding' call.Arguments[1]' GetBinding(call.Method.GetGenericArguments().Length == 2' call.Arguments.Skip(2).ToArray()));               }
Magic Number,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,ProcessMethod,The following statement contains a magic number: switch (call.Method.Name)              {                  case "Set": return Expression.Call(factory' miSetValue' call.Arguments[1]' call.Arguments[2]);                  case "Hide": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Hidden));                  case "Collapse": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Collapsed));                  case "Visible": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Visible));                  case "ReadOnly": return Expression.Call(factory' miSetValue' Expression.Constant(Common.IsReadOnlyProperty)' Expression.Constant(true));                  case "Editable": return Expression.Call(factory' miSetValue' Expression.Constant(Common.IsReadOnlyProperty)' Expression.Constant(false));                    case "Handle": return Expression.Call(factory' miAddHandler' call.Arguments[1]' Expression.Convert(call.Arguments[2]' typeof(Delegate)));                  case "ResourceReference": return Expression.Call(factory' miSetResourceReference' call.Arguments[1]' call.Arguments[2]);                    case "Bind": return Expression.Call(factory' miSetBinding' call.Arguments[1]' GetBinding(call.Method.GetGenericArguments().Length == 2' call.Arguments.Skip(2).ToArray()));               }
Magic Number,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,ProcessMethod,The following statement contains a magic number: switch (call.Method.Name)              {                  case "Set": return Expression.Call(factory' miSetValue' call.Arguments[1]' call.Arguments[2]);                  case "Hide": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Hidden));                  case "Collapse": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Collapsed));                  case "Visible": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Visible));                  case "ReadOnly": return Expression.Call(factory' miSetValue' Expression.Constant(Common.IsReadOnlyProperty)' Expression.Constant(true));                  case "Editable": return Expression.Call(factory' miSetValue' Expression.Constant(Common.IsReadOnlyProperty)' Expression.Constant(false));                    case "Handle": return Expression.Call(factory' miAddHandler' call.Arguments[1]' Expression.Convert(call.Arguments[2]' typeof(Delegate)));                  case "ResourceReference": return Expression.Call(factory' miSetResourceReference' call.Arguments[1]' call.Arguments[2]);                    case "Bind": return Expression.Call(factory' miSetBinding' call.Arguments[1]' GetBinding(call.Method.GetGenericArguments().Length == 2' call.Arguments.Skip(2).ToArray()));               }
Magic Number,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,ProcessMethod,The following statement contains a magic number: switch (call.Method.Name)              {                  case "Set": return Expression.Call(factory' miSetValue' call.Arguments[1]' call.Arguments[2]);                  case "Hide": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Hidden));                  case "Collapse": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Collapsed));                  case "Visible": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Visible));                  case "ReadOnly": return Expression.Call(factory' miSetValue' Expression.Constant(Common.IsReadOnlyProperty)' Expression.Constant(true));                  case "Editable": return Expression.Call(factory' miSetValue' Expression.Constant(Common.IsReadOnlyProperty)' Expression.Constant(false));                    case "Handle": return Expression.Call(factory' miAddHandler' call.Arguments[1]' Expression.Convert(call.Arguments[2]' typeof(Delegate)));                  case "ResourceReference": return Expression.Call(factory' miSetResourceReference' call.Arguments[1]' call.Arguments[2]);                    case "Bind": return Expression.Call(factory' miSetBinding' call.Arguments[1]' GetBinding(call.Method.GetGenericArguments().Length == 2' call.Arguments.Skip(2).ToArray()));               }
Magic Number,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,GetBinding,The following statement contains a magic number: Expression converter = expression.Length == (noSource? 2:3) ? expression.Last(): null;
Magic Number,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,GetBinding,The following statement contains a magic number: Expression converter = expression.Length == (noSource? 2:3) ? expression.Last(): null;
Magic Number,Signum.Windows,Monitors,C:\repos\signumsoftware_framework\Signum.Windows\Utilities\Monitors.cs,Window_SizeChanged,The following statement contains a magic number: win.Left = info.WorkingArea.Left + (info.WorkingArea.Width / 2) - (e.NewSize.Width / 2);
Magic Number,Signum.Windows,Monitors,C:\repos\signumsoftware_framework\Signum.Windows\Utilities\Monitors.cs,Window_SizeChanged,The following statement contains a magic number: win.Left = info.WorkingArea.Left + (info.WorkingArea.Width / 2) - (e.NewSize.Width / 2);
Magic Number,Signum.Windows,Monitors,C:\repos\signumsoftware_framework\Signum.Windows\Utilities\Monitors.cs,Window_SizeChanged,The following statement contains a magic number: win.Top = info.WorkingArea.Top + (info.WorkingArea.Height / 2) - (e.NewSize.Height / 2);
Magic Number,Signum.Windows,Monitors,C:\repos\signumsoftware_framework\Signum.Windows\Utilities\Monitors.cs,Window_SizeChanged,The following statement contains a magic number: win.Top = info.WorkingArea.Top + (info.WorkingArea.Height / 2) - (e.NewSize.Height / 2);
Magic Number,Signum.Windows,DoubleListConverter,C:\repos\signumsoftware_framework\Signum.Windows\Converters\DoubleListConverter.cs,Convert,The following statement contains a magic number: if (values == null || values.Length != 2)                  return null;
Magic Number,Signum.Windows,DualConvertet<S1;S2;T>,C:\repos\signumsoftware_framework\Signum.Windows\Converters\Converter.cs,Convert,The following statement contains a magic number: if (values == null || values.Length != 2 || (values[0] == DependencyProperty.UnsetValue) || (values[1] == DependencyProperty.UnsetValue))                  return default(T);
Magic Number,Signum.Windows,SearchControl,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SearchControl.xaml.cs,GetCellColumnHeader,The following statement contains a magic number: Point headerPoint = new Point(newPoint.X' 4);
Magic Number,Signum.Windows,ImageLoader,C:\repos\signumsoftware_framework\Signum.Windows\ImageLoader.cs,ToSmallImage,The following statement contains a magic number: var result = new Image              {                  Width = 16'                  Height = 16'                  SnapsToDevicePixels = true'                  Source = source              };
Magic Number,Signum.Windows,ImageLoader,C:\repos\signumsoftware_framework\Signum.Windows\ImageLoader.cs,ToSmallImage,The following statement contains a magic number: var result = new Image              {                  Width = 16'                  Height = 16'                  SnapsToDevicePixels = true'                  Source = source              };
Magic Number,Signum.Windows,NormalWindow,C:\repos\signumsoftware_framework\Signum.Windows\NormalWindow.xaml.cs,Ok_Click,The following statement contains a magic number: if (this.DataContext is Entity && SaveProtected)              {                  if (!this.HasChanges())                      DialogResult = true;                  else                  {                      var result = MessageBox.Show(                          NormalWindowMessage.ThereAreChangesContinue.NiceToString()'                          NormalWindowMessage.ThereAreChanges.NiceToString()'                          MessageBoxButton.OKCancel' MessageBoxImage.Question' MessageBoxResult.OK);                        if (result == MessageBoxResult.Cancel)                          return;                        DialogResult = false;                    }              }              else              {                  string errors = this.GetErrors();                    if (errors.HasText())                  {                      Type type = DataContext.GetType();                        switch (AllowErrors)                      {                          case AllowErrors.Yes: break;                          case AllowErrors.No:                              MessageBox.Show(this'                                  NormalWindowMessage.The0HasErrors1.NiceToString().ForGenderAndNumber(type.GetGender()).FormatWith(type.NiceName()' errors.Indent(3))'                                  NormalWindowMessage.FixErrors.NiceToString()'                                  MessageBoxButton.OK'                                  MessageBoxImage.Exclamation);                              return;                          case AllowErrors.Ask:                              if (MessageBox.Show(this'                                  NormalWindowMessage.The0HasErrors1.NiceToString().ForGenderAndNumber(type.GetGender()).FormatWith(type.NiceName()' errors.Indent(3)) + "\r\n" + NormalWindowMessage.ContinueAnyway.NiceToString()'                                  NormalWindowMessage.ContinueWithErrors.NiceToString()'                                  MessageBoxButton.YesNo'                                  MessageBoxImage.Exclamation'                                  MessageBoxResult.None) == MessageBoxResult.No)                                  return;                              break;                      }                  }                    base.DialogResult = true;              }
Magic Number,Signum.Windows,NormalWindow,C:\repos\signumsoftware_framework\Signum.Windows\NormalWindow.xaml.cs,Ok_Click,The following statement contains a magic number: if (this.DataContext is Entity && SaveProtected)              {                  if (!this.HasChanges())                      DialogResult = true;                  else                  {                      var result = MessageBox.Show(                          NormalWindowMessage.ThereAreChangesContinue.NiceToString()'                          NormalWindowMessage.ThereAreChanges.NiceToString()'                          MessageBoxButton.OKCancel' MessageBoxImage.Question' MessageBoxResult.OK);                        if (result == MessageBoxResult.Cancel)                          return;                        DialogResult = false;                    }              }              else              {                  string errors = this.GetErrors();                    if (errors.HasText())                  {                      Type type = DataContext.GetType();                        switch (AllowErrors)                      {                          case AllowErrors.Yes: break;                          case AllowErrors.No:                              MessageBox.Show(this'                                  NormalWindowMessage.The0HasErrors1.NiceToString().ForGenderAndNumber(type.GetGender()).FormatWith(type.NiceName()' errors.Indent(3))'                                  NormalWindowMessage.FixErrors.NiceToString()'                                  MessageBoxButton.OK'                                  MessageBoxImage.Exclamation);                              return;                          case AllowErrors.Ask:                              if (MessageBox.Show(this'                                  NormalWindowMessage.The0HasErrors1.NiceToString().ForGenderAndNumber(type.GetGender()).FormatWith(type.NiceName()' errors.Indent(3)) + "\r\n" + NormalWindowMessage.ContinueAnyway.NiceToString()'                                  NormalWindowMessage.ContinueWithErrors.NiceToString()'                                  MessageBoxButton.YesNo'                                  MessageBoxImage.Exclamation'                                  MessageBoxResult.None) == MessageBoxResult.No)                                  return;                              break;                      }                  }                    base.DialogResult = true;              }
Magic Number,Signum.Windows.DynamicQuery,SortAdorner,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SortGridViewColumnHeader.cs,OnRender,The following statement contains a magic number: drawingContext.PushTransform(new TranslateTransform(AdornedElement.RenderSize.Width / 2 - 5' 1));
Magic Number,Signum.Windows.DynamicQuery,SortAdorner,C:\repos\signumsoftware_framework\Signum.Windows\DynamicQuery\SortGridViewColumnHeader.cs,OnRender,The following statement contains a magic number: drawingContext.PushTransform(new TranslateTransform(AdornedElement.RenderSize.Width / 2 - 5' 1));
Magic Number,Signum.Windows.ColorUtils,ColorSelector,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\ColorSelector.xaml.cs,determineColor,The following statement contains a magic number: SelectedColor = Color.FromArgb((byte)(255 * opacitySlider.Value)' color.R' color.G' color.B);
Magic Number,Signum.Windows.ColorUtils,HsvColor,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\HsvColor.cs,FromRGB,The following statement contains a magic number: if (s == 0.0)              {                  h = 0.0;              }              else              {                  if (r == v)                  {                      h = ((double)(g - b)) / delta;                  }                  else if (g == v)                  {                      h = 2.0 + (((double)(b - r)) / delta);                  }                  else                  {                      h = 4.0 + (((double)(r - g)) / delta);                  }                  h *= 60.0;                  if (h < 0.0)                  {                      h += 360.0;                  }              }
Magic Number,Signum.Windows.ColorUtils,HsvColor,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\HsvColor.cs,FromRGB,The following statement contains a magic number: if (s == 0.0)              {                  h = 0.0;              }              else              {                  if (r == v)                  {                      h = ((double)(g - b)) / delta;                  }                  else if (g == v)                  {                      h = 2.0 + (((double)(b - r)) / delta);                  }                  else                  {                      h = 4.0 + (((double)(r - g)) / delta);                  }                  h *= 60.0;                  if (h < 0.0)                  {                      h += 360.0;                  }              }
Magic Number,Signum.Windows.ColorUtils,HsvColor,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\HsvColor.cs,FromRGB,The following statement contains a magic number: if (s == 0.0)              {                  h = 0.0;              }              else              {                  if (r == v)                  {                      h = ((double)(g - b)) / delta;                  }                  else if (g == v)                  {                      h = 2.0 + (((double)(b - r)) / delta);                  }                  else                  {                      h = 4.0 + (((double)(r - g)) / delta);                  }                  h *= 60.0;                  if (h < 0.0)                  {                      h += 360.0;                  }              }
Magic Number,Signum.Windows.ColorUtils,HsvColor,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\HsvColor.cs,FromRGB,The following statement contains a magic number: if (s == 0.0)              {                  h = 0.0;              }              else              {                  if (r == v)                  {                      h = ((double)(g - b)) / delta;                  }                  else if (g == v)                  {                      h = 2.0 + (((double)(b - r)) / delta);                  }                  else                  {                      h = 4.0 + (((double)(r - g)) / delta);                  }                  h *= 60.0;                  if (h < 0.0)                  {                      h += 360.0;                  }              }
Magic Number,Signum.Windows.ColorUtils,HsvColor,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\HsvColor.cs,FromRGB,The following statement contains a magic number: return new HsvColor(h' s' v / 255.0);
Magic Number,Signum.Windows.ColorUtils,HsvColor,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\HsvColor.cs,ToColor,The following statement contains a magic number: return this.ToColor(255);
Magic Number,Signum.Windows.ColorUtils,HsvColor,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\HsvColor.cs,ToColor,The following statement contains a magic number: if (s == 0.0)              {                  r = v; g = v; b = v;              }              else              {                  if (h == 360.0)                  {                      h = 0.0;                  }                  else                  {                      h /= 60.0;                  }                  int i = (int)Math.Truncate(h);                  double f = h - i;                  double p = v * (1.0 - s);                  double q = v * (1.0 - (s * f));                  double t = v * (1.0 - (s * (1.0 - f)));                  switch (i)                  {                      case 0: r = v; g = t; b = p; break;                      case 1: r = q; g = v; b = p; break;                      case 2: r = p; g = v; b = t; break;                      case 3: r = p; g = q; b = v; break;                      case 4: r = t; g = p; b = v; break;                      default: r = v; g = p; b = q; break;                  }              }
Magic Number,Signum.Windows.ColorUtils,HsvColor,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\HsvColor.cs,ToColor,The following statement contains a magic number: if (s == 0.0)              {                  r = v; g = v; b = v;              }              else              {                  if (h == 360.0)                  {                      h = 0.0;                  }                  else                  {                      h /= 60.0;                  }                  int i = (int)Math.Truncate(h);                  double f = h - i;                  double p = v * (1.0 - s);                  double q = v * (1.0 - (s * f));                  double t = v * (1.0 - (s * (1.0 - f)));                  switch (i)                  {                      case 0: r = v; g = t; b = p; break;                      case 1: r = q; g = v; b = p; break;                      case 2: r = p; g = v; b = t; break;                      case 3: r = p; g = q; b = v; break;                      case 4: r = t; g = p; b = v; break;                      default: r = v; g = p; b = q; break;                  }              }
Magic Number,Signum.Windows.ColorUtils,HsvColor,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\HsvColor.cs,ToColor,The following statement contains a magic number: if (s == 0.0)              {                  r = v; g = v; b = v;              }              else              {                  if (h == 360.0)                  {                      h = 0.0;                  }                  else                  {                      h /= 60.0;                  }                  int i = (int)Math.Truncate(h);                  double f = h - i;                  double p = v * (1.0 - s);                  double q = v * (1.0 - (s * f));                  double t = v * (1.0 - (s * (1.0 - f)));                  switch (i)                  {                      case 0: r = v; g = t; b = p; break;                      case 1: r = q; g = v; b = p; break;                      case 2: r = p; g = v; b = t; break;                      case 3: r = p; g = q; b = v; break;                      case 4: r = t; g = p; b = v; break;                      default: r = v; g = p; b = q; break;                  }              }
Magic Number,Signum.Windows.ColorUtils,HsvColor,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\HsvColor.cs,ToColor,The following statement contains a magic number: if (s == 0.0)              {                  r = v; g = v; b = v;              }              else              {                  if (h == 360.0)                  {                      h = 0.0;                  }                  else                  {                      h /= 60.0;                  }                  int i = (int)Math.Truncate(h);                  double f = h - i;                  double p = v * (1.0 - s);                  double q = v * (1.0 - (s * f));                  double t = v * (1.0 - (s * (1.0 - f)));                  switch (i)                  {                      case 0: r = v; g = t; b = p; break;                      case 1: r = q; g = v; b = p; break;                      case 2: r = p; g = v; b = t; break;                      case 3: r = p; g = q; b = v; break;                      case 4: r = t; g = p; b = v; break;                      default: r = v; g = p; b = q; break;                  }              }
Magic Number,Signum.Windows.ColorUtils,HsvColor,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\HsvColor.cs,ToColor,The following statement contains a magic number: if (s == 0.0)              {                  r = v; g = v; b = v;              }              else              {                  if (h == 360.0)                  {                      h = 0.0;                  }                  else                  {                      h /= 60.0;                  }                  int i = (int)Math.Truncate(h);                  double f = h - i;                  double p = v * (1.0 - s);                  double q = v * (1.0 - (s * f));                  double t = v * (1.0 - (s * (1.0 - f)));                  switch (i)                  {                      case 0: r = v; g = t; b = p; break;                      case 1: r = q; g = v; b = p; break;                      case 2: r = p; g = v; b = t; break;                      case 3: r = p; g = q; b = v; break;                      case 4: r = t; g = p; b = v; break;                      default: r = v; g = p; b = q; break;                  }              }
Magic Number,Signum.Windows.ColorUtils,HsvColor,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\HsvColor.cs,ToColor,The following statement contains a magic number: return Color.FromArgb(alpha' (byte)(r * 255.0)' (byte)(g * 255.0)' (byte)(b * 255.0));
Magic Number,Signum.Windows.ColorUtils,HsvColor,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\HsvColor.cs,ToColor,The following statement contains a magic number: return Color.FromArgb(alpha' (byte)(r * 255.0)' (byte)(g * 255.0)' (byte)(b * 255.0));
Magic Number,Signum.Windows.ColorUtils,HsvColor,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\HsvColor.cs,ToColor,The following statement contains a magic number: return Color.FromArgb(alpha' (byte)(r * 255.0)' (byte)(g * 255.0)' (byte)(b * 255.0));
Magic Number,Signum.Windows.ColorUtils,SpectrumSlider,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\SpectrumSlider.cs,createSpectrum,The following statement contains a magic number: pickerBrush = new LinearGradientBrush()              {                  StartPoint = new Point(0.5' 1)'                  EndPoint = new Point(0.5' 0)'                  ColorInterpolationMode = ColorInterpolationMode.SRgbLinearInterpolation              };
Magic Number,Signum.Windows.ColorUtils,SpectrumSlider,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\SpectrumSlider.cs,createSpectrum,The following statement contains a magic number: pickerBrush = new LinearGradientBrush()              {                  StartPoint = new Point(0.5' 1)'                  EndPoint = new Point(0.5' 0)'                  ColorInterpolationMode = ColorInterpolationMode.SRgbLinearInterpolation              };
Magic Number,Signum.Windows.ColorUtils,SpectrumSlider,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\SpectrumSlider.cs,createSpectrum,The following statement contains a magic number: List<GradientStop> colorsList = 0.To(31).Select(i => new GradientStop(                  new HsvColor((double)((i % 30) * 12)' 1.0' 1.0).ToColor()' ((double)i) / 30.0)).ToList();
Magic Number,Signum.Windows.ColorUtils,SpectrumSlider,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\SpectrumSlider.cs,createSpectrum,The following statement contains a magic number: List<GradientStop> colorsList = 0.To(31).Select(i => new GradientStop(                  new HsvColor((double)((i % 30) * 12)' 1.0' 1.0).ToColor()' ((double)i) / 30.0)).ToList();
Magic Number,Signum.Windows.ColorUtils,SpectrumSlider,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\SpectrumSlider.cs,createSpectrum,The following statement contains a magic number: List<GradientStop> colorsList = 0.To(31).Select(i => new GradientStop(                  new HsvColor((double)((i % 30) * 12)' 1.0' 1.0).ToColor()' ((double)i) / 30.0)).ToList();
Magic Number,Signum.Windows.ColorUtils,SpectrumSlider,C:\repos\signumsoftware_framework\Signum.Windows\Controls\ColorUtils\SpectrumSlider.cs,createSpectrum,The following statement contains a magic number: List<GradientStop> colorsList = 0.To(31).Select(i => new GradientStop(                  new HsvColor((double)((i % 30) * 12)' 1.0' 1.0).ToColor()' ((double)i) / 30.0)).ToList();
Missing Default,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,Process,The following switch statement is missing a default case: switch (mb.BindingType)                      {                          case MemberBindingType.Assignment:                              {                                  MemberAssignment ma = (MemberAssignment)mb;                                    PropertyInfo pi = ma.Member as PropertyInfo;                                    if (IsDefaultMember(pi))                                      list.AddRange(ProcessChild(ma.Expression' factory));                                  else                                  {                                      DependencyPropertyDescriptor desc = DependencyPropertyDescriptor.FromName(pi.Name' pi.DeclaringType' pi.DeclaringType);                                      if (desc == null)                                          throw new InvalidOperationException("{0} is not a DependencyProperty".FormatWith(pi.PropertyName()));                                        list.Add(Expression.Call(factory' miSetValue' Expression.Constant(desc.DependencyProperty)' Expression.Convert(ma.Expression' typeof(object))));                                  }                              }break;                          case MemberBindingType.ListBinding:                              {                                  MemberListBinding bindings = (MemberListBinding)mb;                                    DefaultMemberAttribute dma = bindings.Member.DeclaringType.GetCustomAttribute<DefaultMemberAttribute>();                                    //if(!IsDefaultMember(bindings.Member))                                  //    throw new InvalidOperationException("Add items only work for the DefaultMember");                                    foreach (var item in bindings.Initializers)                                  {                                      if(item.Arguments.Count != 1)                                          throw new InvalidOperationException("Add Method {0} not supported".FormatWith(item.AddMethod.MethodName()));                                        list.AddRange(ProcessChild(item.Arguments.SingleEx()' factory));                                  }                                }break;                          case MemberBindingType.MemberBinding:                              throw new InvalidOperationException("MemberBinding not supported");                       }
Missing Default,Signum.Windows,FrameworkElementFactoryGenerator,C:\repos\signumsoftware_framework\Signum.Windows\Fluent\FrameworkFactoryGenerator.cs,ProcessMethod,The following switch statement is missing a default case: switch (call.Method.Name)              {                  case "Set": return Expression.Call(factory' miSetValue' call.Arguments[1]' call.Arguments[2]);                  case "Hide": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Hidden));                  case "Collapse": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Collapsed));                  case "Visible": return Expression.Call(factory' miSetValue' Expression.Constant(w.UIElement.VisibilityProperty)' Expression.Constant(w.Visibility.Visible));                  case "ReadOnly": return Expression.Call(factory' miSetValue' Expression.Constant(Common.IsReadOnlyProperty)' Expression.Constant(true));                  case "Editable": return Expression.Call(factory' miSetValue' Expression.Constant(Common.IsReadOnlyProperty)' Expression.Constant(false));                    case "Handle": return Expression.Call(factory' miAddHandler' call.Arguments[1]' Expression.Convert(call.Arguments[2]' typeof(Delegate)));                  case "ResourceReference": return Expression.Call(factory' miSetResourceReference' call.Arguments[1]' call.Arguments[2]);                    case "Bind": return Expression.Call(factory' miSetBinding' call.Arguments[1]' GetBinding(call.Method.GetGenericArguments().Length == 2' call.Arguments.Skip(2).ToArray()));               }
Missing Default,Signum.Windows,NormalWindow,C:\repos\signumsoftware_framework\Signum.Windows\NormalWindow.xaml.cs,Ok_Click,The following switch statement is missing a default case: switch (AllowErrors)                      {                          case AllowErrors.Yes: break;                          case AllowErrors.No:                              MessageBox.Show(this'                                  NormalWindowMessage.The0HasErrors1.NiceToString().ForGenderAndNumber(type.GetGender()).FormatWith(type.NiceName()' errors.Indent(3))'                                  NormalWindowMessage.FixErrors.NiceToString()'                                  MessageBoxButton.OK'                                  MessageBoxImage.Exclamation);                              return;                          case AllowErrors.Ask:                              if (MessageBox.Show(this'                                  NormalWindowMessage.The0HasErrors1.NiceToString().ForGenderAndNumber(type.GetGender()).FormatWith(type.NiceName()' errors.Indent(3)) + "\r\n" + NormalWindowMessage.ContinueAnyway.NiceToString()'                                  NormalWindowMessage.ContinueWithErrors.NiceToString()'                                  MessageBoxButton.YesNo'                                  MessageBoxImage.Exclamation'                                  MessageBoxResult.None) == MessageBoxResult.No)                                  return;                              break;                      }
Missing Default,Signum.Windows.Operations,EntityOperationMenuItemConsturctor,C:\repos\signumsoftware_framework\Signum.Windows\Operations\EntityOperationMenuItem.cs,Construct,The following switch statement is missing a default case: switch (coc.OperationInfo.OperationType)                          {                              case OperationType.Execute:                                  Server.Return((IOperationServer os) => os.ExecuteOperationLite(lite' coc.OperationInfo.OperationSymbol));                                  break;                              case OperationType.Delete:                                  Server.Execute((IOperationServer os) => os.DeleteLite(lite' coc.OperationInfo.OperationSymbol));                                  break;                              case OperationType.ConstructorFrom:                                  {                                      var result = (Entity)new ConstructorContext(coc.SearchControl' coc.OperationInfo).SurroundConstructUntyped(coc.OperationInfo.ReturnType' ctx =>                                          Server.Return((IOperationServer os) => os.ConstructFromLite(lite' coc.OperationInfo.OperationSymbol)));                                        if (result == null)                                      {                                          MessageBox.Show(Window.GetWindow(miResult)'                                               OperationMessage.TheOperation0DidNotReturnAnEntity.NiceToString(coc.OperationInfo.OperationSymbol.NiceToString()));                                      }                                      else                                      {                                          if (Navigator.IsNavigable(result' true))                                              Navigator.Navigate(result);                                      };                                      break;                                  }                              case OperationType.Constructor:                              case OperationType.ConstructorFromMany:                                  throw new InvalidOperationException("Unexpected operation type");                          }
