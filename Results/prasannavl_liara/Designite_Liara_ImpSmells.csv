Implementation smell,Namespace,Class,File,Method,Description
Long Method,Liara.Routing,RouteManager,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Routing\RouteManager.cs,Map,The method has 101 lines of code.
Complex Method,Liara.Formatting,LiaraViewProvider,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Formatting\LiaraViewProvider.cs,GetView,Cyclomatic complexity of the method is 8
Complex Method,Liara.Formatting,LiaraFormatSelector,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Formatting\LiaraFormatSelector.cs,GetResponseFormatter,Cyclomatic complexity of the method is 9
Complex Method,Liara,LiaraConfiguration,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\LiaraConfiguration.cs,Build,Cyclomatic complexity of the method is 15
Complex Method,Liara.Helpers,HeaderHelpers,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Helpers\HeaderHelpers.cs,GetQValuedMediaTypeHeaders,Cyclomatic complexity of the method is 8
Complex Method,Liara.Security,Authorize,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Security\Authorize.cs,ProcessAsync,Cyclomatic complexity of the method is 8
Complex Method,Liara.Routing,RouteManager,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Routing\RouteManager.cs,Map,Cyclomatic complexity of the method is 9
Complex Method,Liara.Routing,RouteManager,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Routing\RouteManager.cs,GetAggregatedRoutes,Cyclomatic complexity of the method is 12
Long Parameter List,Liara.Common,LiaraCookie,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Common\LiaraCookie.cs,LiaraCookie,The method has 7 parameters. Parameters: name' value' expires' domain' path' httpOnly' secureOnly
Long Parameter List,Liara.Common,LiaraStream,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Common\LiaraStream.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,Liara.Common,LiaraStream,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Common\LiaraStream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Identifier,Liara.Constants,InternalConstants,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Constants\CommonConstants.cs,,The length of the parameter RouteHandlerCompletionSignalKey is 31.
Long Identifier,Liara.Formatting,LiaraViewProvider,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Formatting\LiaraViewProvider.cs,,The length of the parameter InternalViewResourceLocationString is 34.
Long Identifier,Liara.RequestProcessing,LiaraRequestParameters,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\RequestProcessing\LiaraRequestParameters.cs,,The length of the parameter isRequestContentAvailabilitySet is 31.
Long Identifier,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Extensions\TaskHelpersExtensions.cs,,The length of the parameter RethrowWithNoStackLossDelegate is 30.
Long Statement,Liara.Services,DefaultServiceDiscovery,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Services\DefaultServiceDiscovery.cs,Discover,The length of the statement  "                    //TODO: Add auto-discovery logic' and de-couple discovery from container using ILiaraServiceContainer.Register() methods. " is 121.
Long Statement,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Extensions\TaskHelpersExtensions.cs,CatchImplContinuation,The length of the statement  "                                    "You cannot return null from the TaskHelpersExtensions.Catch continuation. You must return a valid task or throw an exception."); " is 129.
Long Statement,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Extensions\TaskHelpersExtensions.cs,CatchImplContinuation,The length of the statement  "                                "You cannot return null from the TaskHelpersExtensions.Catch continuation. You must return a valid task or throw an exception."); " is 129.
Long Statement,Liara.Routing,RouteManager,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Routing\RouteManager.cs,Map,The length of the statement  "                            "\r\nMethods with paramters as routes are not yet supported. Use Request.Content to access the request data. For automatic static type de-serialization use RequestDto attribute.\r\n" + " is 184.
Empty Catch Block,Liara,LiaraConfiguration,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\LiaraConfiguration.cs,LogConfiguration,The method has an empty catch block.
Empty Catch Block,Liara.Helpers,HeaderHelpers,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Helpers\HeaderHelpers.cs,GetCharsetAcceptedEncodings,The method has an empty catch block.
Empty Catch Block,Liara.Helpers,HeaderHelpers,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Helpers\HeaderHelpers.cs,GetAcceptedCultures,The method has an empty catch block.
Empty Catch Block,Liara.Helpers,HeaderHelpers,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Helpers\HeaderHelpers.cs,GetContentMediaTypeAndCharset,The method has an empty catch block.
Empty Catch Block,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Extensions\TaskHelpersExtensions.cs,GetRethrowWithNoStackLossDelegate,The method has an empty catch block.
Magic Number,Liara.Common,LiaraCookie,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Common\LiaraCookie.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (Value != null ? Value.GetHashCode() : 0);
Magic Number,Liara.Common,LiaraCookie,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Common\LiaraCookie.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (Domain != null ? Domain.GetHashCode() : 0);
Magic Number,Liara.Common,LiaraCookie,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Common\LiaraCookie.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (Path != null ? Path.GetHashCode() : 0);
Magic Number,Liara.Common,LiaraCookie,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Common\LiaraCookie.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ Expires.GetHashCode();
Magic Number,Liara.Common,LiaraCookie,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Common\LiaraCookie.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ SecureOnly.GetHashCode();
Magic Number,Liara.Common,LiaraCookie,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Common\LiaraCookie.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ HttpOnly.GetHashCode();
Magic Number,Liara.Common,LiaraCookie,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Common\LiaraCookie.cs,SetAsExpired,The following statement contains a magic number: Expires = new DateTime(1970' 01' 01' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Liara.Common,LiaraStatusHandler,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Common\LiaraStatusHandler.cs,HandleStatus,The following statement contains a magic number: switch (context.Response.Status.Code)              {                  case 200:                  {                      return true;                  }                  default:                  {                      SetContentAsErrorMessage(context);                      return true;                  }              }
Magic Number,Liara.Common,MediaType,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Common\MediaType.cs,MediaType,The following statement contains a magic number: split.Length != 2
Magic Number,Liara.Formatting,LiaraViewProvider,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Formatting\LiaraViewProvider.cs,GetInternalView,The following statement contains a magic number: switch (code)              {                  case 400:                  case 404:                  case 500:                      break;                  default:                      if (code > 400 && code < 500)                      {                          fileName = "40x";                      }                      else if (code > 500 && code < 600)                      {                          fileName = "50x";                      }                      else                      {                          fileName = "Error";                      }                      break;              }
Magic Number,Liara.Formatting,LiaraViewProvider,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Formatting\LiaraViewProvider.cs,GetInternalView,The following statement contains a magic number: switch (code)              {                  case 400:                  case 404:                  case 500:                      break;                  default:                      if (code > 400 && code < 500)                      {                          fileName = "40x";                      }                      else if (code > 500 && code < 600)                      {                          fileName = "50x";                      }                      else                      {                          fileName = "Error";                      }                      break;              }
Magic Number,Liara.Formatting,LiaraViewProvider,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Formatting\LiaraViewProvider.cs,GetInternalView,The following statement contains a magic number: switch (code)              {                  case 400:                  case 404:                  case 500:                      break;                  default:                      if (code > 400 && code < 500)                      {                          fileName = "40x";                      }                      else if (code > 500 && code < 600)                      {                          fileName = "50x";                      }                      else                      {                          fileName = "Error";                      }                      break;              }
Magic Number,Liara.Formatting,LiaraViewProvider,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Formatting\LiaraViewProvider.cs,GetInternalView,The following statement contains a magic number: switch (code)              {                  case 400:                  case 404:                  case 500:                      break;                  default:                      if (code > 400 && code < 500)                      {                          fileName = "40x";                      }                      else if (code > 500 && code < 600)                      {                          fileName = "50x";                      }                      else                      {                          fileName = "Error";                      }                      break;              }
Magic Number,Liara.Formatting,LiaraViewProvider,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Formatting\LiaraViewProvider.cs,GetInternalView,The following statement contains a magic number: switch (code)              {                  case 400:                  case 404:                  case 500:                      break;                  default:                      if (code > 400 && code < 500)                      {                          fileName = "40x";                      }                      else if (code > 500 && code < 600)                      {                          fileName = "50x";                      }                      else                      {                          fileName = "Error";                      }                      break;              }
Magic Number,Liara.Formatting,LiaraViewProvider,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Formatting\LiaraViewProvider.cs,GetInternalView,The following statement contains a magic number: switch (code)              {                  case 400:                  case 404:                  case 500:                      break;                  default:                      if (code > 400 && code < 500)                      {                          fileName = "40x";                      }                      else if (code > 500 && code < 600)                      {                          fileName = "50x";                      }                      else                      {                          fileName = "Error";                      }                      break;              }
Magic Number,Liara.Formatting,LiaraViewProvider,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Formatting\LiaraViewProvider.cs,GetInternalView,The following statement contains a magic number: switch (code)              {                  case 400:                  case 404:                  case 500:                      break;                  default:                      if (code > 400 && code < 500)                      {                          fileName = "40x";                      }                      else if (code > 500 && code < 600)                      {                          fileName = "50x";                      }                      else                      {                          fileName = "Error";                      }                      break;              }
Magic Number,Liara.Formatting,JsonFormatter,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Formatting\JsonFormatter.cs,ReadAsync,The following statement contains a magic number: var output = JObject.Parse(                  new StreamReader(inputStream'                      context.Request.Format.CharsetEncoding'                      false'                      4096'                      true).ReadToEnd());
Magic Number,Liara.Helpers,HeaderHelpers,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Helpers\HeaderHelpers.cs,ParseQValuedHeaders,The following statement contains a magic number: var parsed = float.TryParse(part.Substring(2)' out q);
Magic Number,Liara.Helpers,HeaderHelpers,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Helpers\HeaderHelpers.cs,ParseQValuedMultiItemHeaders,The following statement contains a magic number: var parsed = float.TryParse(part.Substring(2)' out q);
Magic Number,Liara.Helpers,HeaderHelpers,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Helpers\HeaderHelpers.cs,GetContentMediaTypeAndCharset,The following statement contains a magic number: split.Length == 2
Magic Number,Liara.MessageHandlers,TraceHandler,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\MessageHandlers\TraceHandler.cs,WriteEnvironment,The following statement contains a magic number: var separator = new string('-'' 20);
Magic Number,Liara.Security,Authorize,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Security\Authorize.cs,Verify,The following statement contains a magic number: Claims.Any(claim => claim.Length > 2 || claim.Length < 1)
Magic Number,Liara.Logging,ConsoleLogWriter,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Logging\ConsoleLogWriter.cs,WriteAsync,The following statement contains a magic number: var logName = GetCallerTypeName(3);
Magic Number,Liara.Logging,ConsoleLogWriter,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Logging\ConsoleLogWriter.cs,WriteExceptionAsync,The following statement contains a magic number: var logName = GetCallerTypeName(3);
Missing Default,Liara.MessageHandlers,ActionInvocationHandler,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\MessageHandlers\ActionInvocationHandler.cs,ProcessAsync,The following switch statement is missing a default case: switch (context.Route.ActionReturnType)                  {                      case LiaraActionReturnType.Void:                          ((Action<ILiaraContext>) context.Route.Action)(context);                          break;                      case LiaraActionReturnType.Generic:                          context.Response.Content =                              ((Func<ILiaraContext' object>) context.Route.Action)(context);                          break;                      case LiaraActionReturnType.Task:                          context.Response.Content =                              await ((Func<ILiaraContext' Task<object>>) context.Route.Action)(context);                          break;                  }
Missing Default,Liara.Services,DefaultServicesContainer,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Services\DefaultServicesContainer.cs,Register,The following switch statement is missing a default case: switch (lifeTime)              {                  case LiaraServiceLifeTime.Singleton:                      serviceContainer.Register(serviceType' implementingType' serviceName' new PerContainerLifetime());                      break;                  case LiaraServiceLifeTime.Transient:                      serviceContainer.Register(serviceType' implementingType' serviceName);                      break;                  case LiaraServiceLifeTime.Scope:                      serviceContainer.Register(serviceType' implementingType' serviceName' new PerScopeLifetime());                      break;              }
Missing Default,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Extensions\TaskHelpersExtensions.cs,CopyResultToCompletionSourceImpl,The following switch statement is missing a default case: switch (task.Status)                  {                      case TaskStatus.Canceled:                      case TaskStatus.Faulted:                          tcs.TrySetFromTask(task);                          break;                        case TaskStatus.RanToCompletion:                          tcs.TrySetResult(resultThunk(task));                          break;                  }
Missing Default,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Extensions\TaskHelpersExtensions.cs,CopyResultToCompletionSourceImplContinuation,The following switch statement is missing a default case: switch (innerTask.Status)                  {                      case TaskStatus.Canceled:                      case TaskStatus.Faulted:                          tcs.TrySetFromTask(innerTask);                          break;                        case TaskStatus.RanToCompletion:                          tcs.TrySetResult(resultThunk(task));                          break;                  }
Missing Default,System.Threading.Tasks,TaskHelpers,C:\research\architectureSmells\repos\prasannavl_liara\Sources\Liara\Helpers\TaskHelpers.cs,SetIfTaskFailed,The following switch statement is missing a default case: switch (source.Status)              {                  case TaskStatus.Canceled:                  case TaskStatus.Faulted:                      return tcs.TrySetFromTask(source);              }
