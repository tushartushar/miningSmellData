Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ProxySwitcher.Actions.ProxyBase,ProxySwitcherAction,C:\repos\mwiedemeyer_ProxySwitcher\ProxySwitcher.Actions.ProxyBase\ProxySwitcherAction.cs,GetProxyEntryFromSettings,The length of the statement  "		proxy.Port [ProxyScheme.All] = this.Settings.ContainsKey (nwId + "_Port") ? int.Parse (this.Settings [nwId + "_Port"]) : 0; " is 123.
Long Statement,ProxySwitcher.Actions.ProxyBase,ProxySwitcherAction,C:\repos\mwiedemeyer_ProxySwitcher\ProxySwitcher.Actions.ProxyBase\ProxySwitcherAction.cs,GetProxyEntryFromSettings,The length of the statement  "	proxy.IsAutoConf = this.Settings.ContainsKey (nwId + "_IsAutoConf") ? bool.Parse (this.Settings [nwId + "_IsAutoConf"]) : false; " is 128.
Long Statement,ProxySwitcher.Actions.ProxyBase,ProxySwitcherAction,C:\repos\mwiedemeyer_ProxySwitcher\ProxySwitcher.Actions.ProxyBase\ProxySwitcherAction.cs,GetProxyEntryFromSettings,The length of the statement  "	proxy.IsAutoDetect = this.Settings.ContainsKey (nwId + "_IsAutoDetect") ? bool.Parse (this.Settings [nwId + "_IsAutoDetect"]) : false; " is 134.
Long Statement,ProxySwitcher.Actions.ProxyBase,ProxySwitcherAction,C:\repos\mwiedemeyer_ProxySwitcher\ProxySwitcher.Actions.ProxyBase\ProxySwitcherAction.cs,GetProxyEntryFromSettings,The length of the statement  "	proxy.ByPassLocal = this.Settings.ContainsKey (nwId + "_ByPassLocal") ? bool.Parse (this.Settings [nwId + "_ByPassLocal"]) : false; " is 131.
Long Statement,ProxySwitcher.Actions.ProxyBase,ProxySwitcherAction,C:\repos\mwiedemeyer_ProxySwitcher\ProxySwitcher.Actions.ProxyBase\ProxySwitcherAction.cs,GetProxyEntryFromSettings,The length of the statement  "	proxy.RequiresAuthentication = this.Settings.ContainsKey (nwId + "_RequiresAuthentication") ? bool.Parse (this.Settings [nwId + "_RequiresAuthentication"]) : false; " is 164.
Long Statement,ProxySwitcher.Actions.ProxyBase,ProxySwitcherAction,C:\repos\mwiedemeyer_ProxySwitcher\ProxySwitcher.Actions.ProxyBase\ProxySwitcherAction.cs,Encrypt,The length of the statement  "	return Convert.ToBase64String (ProtectedData.Protect (Encoding.Default.GetBytes (data)' null' DataProtectionScope.CurrentUser)); " is 128.
Long Statement,ProxySwitcher.Actions.ProxyBase,ProxySwitcherAction,C:\repos\mwiedemeyer_ProxySwitcher\ProxySwitcher.Actions.ProxyBase\ProxySwitcherAction.cs,Decrypt,The length of the statement  "	return Encoding.Default.GetString (ProtectedData.Unprotect (Convert.FromBase64String (data)' null' DataProtectionScope.CurrentUser)); " is 133.
Magic Number,ProxySwitcher.Actions.ProxyBase,ProxySwitcherAction,C:\repos\mwiedemeyer_ProxySwitcher\ProxySwitcher.Actions.ProxyBase\ProxySwitcherAction.cs,GetProxyEntryFromSettings,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.Settings [nwId + "_Url"])) {  	proxy.Url [ProxyScheme.All] = this.Settings [nwId + "_Url"];  	proxy.Port [ProxyScheme.All] = this.Settings.ContainsKey (nwId + "_Port") ? int.Parse (this.Settings [nwId + "_Port"]) : 0;  }  else {  	foreach (var key in this.Settings.Keys) {  		if (key.Contains (nwId + "_Url_")) {  			proxy.Url [key.Split ('_') [2]] = this.Settings [key];  		}  		if (key.Contains (nwId + "_Port_")) {  			proxy.Port [key.Split ('_') [2]] = int.Parse (this.Settings [key]);  		}  	}  }  
Magic Number,ProxySwitcher.Actions.ProxyBase,ProxySwitcherAction,C:\repos\mwiedemeyer_ProxySwitcher\ProxySwitcher.Actions.ProxyBase\ProxySwitcherAction.cs,GetProxyEntryFromSettings,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.Settings [nwId + "_Url"])) {  	proxy.Url [ProxyScheme.All] = this.Settings [nwId + "_Url"];  	proxy.Port [ProxyScheme.All] = this.Settings.ContainsKey (nwId + "_Port") ? int.Parse (this.Settings [nwId + "_Port"]) : 0;  }  else {  	foreach (var key in this.Settings.Keys) {  		if (key.Contains (nwId + "_Url_")) {  			proxy.Url [key.Split ('_') [2]] = this.Settings [key];  		}  		if (key.Contains (nwId + "_Port_")) {  			proxy.Port [key.Split ('_') [2]] = int.Parse (this.Settings [key]);  		}  	}  }  
Magic Number,ProxySwitcher.Actions.ProxyBase,ProxySwitcherAction,C:\repos\mwiedemeyer_ProxySwitcher\ProxySwitcher.Actions.ProxyBase\ProxySwitcherAction.cs,GetProxyEntryFromSettings,The following statement contains a magic number: foreach (var key in this.Settings.Keys) {  	if (key.Contains (nwId + "_Url_")) {  		proxy.Url [key.Split ('_') [2]] = this.Settings [key];  	}  	if (key.Contains (nwId + "_Port_")) {  		proxy.Port [key.Split ('_') [2]] = int.Parse (this.Settings [key]);  	}  }  
Magic Number,ProxySwitcher.Actions.ProxyBase,ProxySwitcherAction,C:\repos\mwiedemeyer_ProxySwitcher\ProxySwitcher.Actions.ProxyBase\ProxySwitcherAction.cs,GetProxyEntryFromSettings,The following statement contains a magic number: foreach (var key in this.Settings.Keys) {  	if (key.Contains (nwId + "_Url_")) {  		proxy.Url [key.Split ('_') [2]] = this.Settings [key];  	}  	if (key.Contains (nwId + "_Port_")) {  		proxy.Port [key.Split ('_') [2]] = int.Parse (this.Settings [key]);  	}  }  
Magic Number,ProxySwitcher.Actions.ProxyBase,ProxySwitcherAction,C:\repos\mwiedemeyer_ProxySwitcher\ProxySwitcher.Actions.ProxyBase\ProxySwitcherAction.cs,GetProxyEntryFromSettings,The following statement contains a magic number: if (key.Contains (nwId + "_Url_")) {  	proxy.Url [key.Split ('_') [2]] = this.Settings [key];  }  
Magic Number,ProxySwitcher.Actions.ProxyBase,ProxySwitcherAction,C:\repos\mwiedemeyer_ProxySwitcher\ProxySwitcher.Actions.ProxyBase\ProxySwitcherAction.cs,GetProxyEntryFromSettings,The following statement contains a magic number: proxy.Url [key.Split ('_') [2]] = this.Settings [key];  
Magic Number,ProxySwitcher.Actions.ProxyBase,ProxySwitcherAction,C:\repos\mwiedemeyer_ProxySwitcher\ProxySwitcher.Actions.ProxyBase\ProxySwitcherAction.cs,GetProxyEntryFromSettings,The following statement contains a magic number: if (key.Contains (nwId + "_Port_")) {  	proxy.Port [key.Split ('_') [2]] = int.Parse (this.Settings [key]);  }  
Magic Number,ProxySwitcher.Actions.ProxyBase,ProxySwitcherAction,C:\repos\mwiedemeyer_ProxySwitcher\ProxySwitcher.Actions.ProxyBase\ProxySwitcherAction.cs,GetProxyEntryFromSettings,The following statement contains a magic number: proxy.Port [key.Split ('_') [2]] = int.Parse (this.Settings [key]);  
