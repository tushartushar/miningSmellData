Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CSharpAnalytics.Protocols.Measurement,MeasurementActivityParameterBuilder,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Protocols\Measurement\MeasurementActivityParameterBuilder.cs,GetActivityParameters,Cyclomatic complexity of the method is 9
Complex Method,CSharpAnalytics.Protocols.Measurement,MeasurementActivityParameterBuilder,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Protocols\Measurement\MeasurementActivityParameterBuilder.cs,GetParameters,Cyclomatic complexity of the method is 9
Long Parameter List,CSharpAnalytics.Activities,ContentViewActivity,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Activities\ContentViewActivity.cs,ContentViewActivity,The method has 5 parameters. Parameters: documentLocation' documentTitle' contentDescription' documentPath' documentHostName
Long Parameter List,CSharpAnalytics.Activities,EventActivity,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Activities\EventActivity.cs,EventActivity,The method has 5 parameters. Parameters: action' category' label' value' nonInteraction
Long Parameter List,CSharpAnalytics.Activities,TransactionItemActivity,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Activities\TransactionItemActivity.cs,TransactionItemActivity,The method has 5 parameters. Parameters: code' name' price' quantity' variation
Long Parameter List,CSharpAnalytics.Activities,TransactionItemExtensions,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Activities\TransactionItemActivity.cs,AddItem,The method has 6 parameters. Parameters: transaction' code' name' price' quantity' variation
Long Parameter List,CSharpAnalytics.Protocols.Measurement,MeasurementAnalyticsClient,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Protocols\Measurement\MeasurementAnalyticsClient.cs,TrackContentView,The method has 5 parameters. Parameters: documentLocation' documentTitle' contentDescription' documentPath' documentHostName
Long Parameter List,CSharpAnalytics.Protocols.Measurement,MeasurementAnalyticsClient,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Protocols\Measurement\MeasurementAnalyticsClient.cs,TrackEvent,The method has 5 parameters. Parameters: action' category' label' value' nonInteraction
Long Statement,CSharpAnalytics,BaseAutoMeasurement,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\AutoMeasurement\BaseAutoMeasurement.cs,SetOptOut,The length of the statement  "                System.Diagnostics.Debug.WriteLine("Switching VisitorStatus from {0} to {1}"' sessionManager.VisitorStatus' newVisitorStatus); " is 126.
Long Statement,CSharpAnalytics,BaseAutoMeasurement,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\AutoMeasurement\BaseAutoMeasurement.cs,GetScreenName,The length of the statement  "            var screenNameAttribute = page.GetTypeInfo().GetCustomAttribute(typeof(AnalyticsScreenNameAttribute)) as AnalyticsScreenNameAttribute; " is 134.
Long Statement,CSharpAnalytics.Network,BackgroundUriRequester,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Network\BackgroundUriRequester.cs,Start,The length of the statement  "            backgroundTask = Task.Factory.StartNew(RequestLoop' cancellationTokenSource.Token' TaskCreationOptions.LongRunning' TaskScheduler.Default); " is 139.
Long Statement,CSharpAnalytics.Network,HttpClientRequester,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Network\HttpClientRequester.cs,CreateRequest,The length of the statement  "            var uriWithoutQuery = new Uri(uri.GetComponents(UriComponents.SchemeAndServer | UriComponents.Path' UriFormat.Unescaped)); " is 122.
Long Statement,CSharpAnalytics.Network,HttpClientRequester,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Network\HttpClientRequester.cs,CreateRequest,The length of the statement  "            return new HttpRequestMessage(HttpMethod.Post' uriWithoutQuery) { Content = new StringContent(uri.GetComponents(UriComponents.Query' UriFormat.UriEscaped)) }; " is 158.
Long Statement,CSharpAnalytics.Protocols.Measurement,MeasurementUriBuilder,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Protocols\Measurement\MeasurementUriBuilder.cs,GetParameters,The length of the statement  "            yield return KeyValuePair.Create("de"' environment.CharacterSet == null ? "-" : environment.CharacterSet.ToUpperInvariant()); " is 125.
Long Statement,CSharpAnalytics.Protocols.Measurement,MeasurementUriBuilder,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Protocols\Measurement\MeasurementUriBuilder.cs,GetParameters,The length of the statement  "                yield return KeyValuePair.Create("sr"' string.Format(ResolutionFormat' environment.ScreenWidth' environment.ScreenHeight)); " is 123.
Long Statement,CSharpAnalytics.Protocols.Measurement,MeasurementUriBuilder,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Protocols\Measurement\MeasurementUriBuilder.cs,GetParameters,The length of the statement  "                yield return KeyValuePair.Create("vp"' string.Format(ResolutionFormat' environment.ViewportWidth' environment.ViewportHeight)); " is 127.
Long Statement,CSharpAnalytics.Serializers,LocalFolderContractSerializer<T>,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Serializers\LocalFolderContractSerializer.cs,RestoreAsync,The length of the statement  "                var file = await ApplicationData.Current.LocalFolder.CreateFileAsync(filename ?? typeof(T).Name' CreationCollisionOption.OpenIfExists); " is 135.
Long Statement,CSharpAnalytics.Serializers,LocalFolderContractSerializer<T>,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Serializers\LocalFolderContractSerializer.cs,SaveAsync,The length of the statement  "                var file = await ApplicationData.Current.LocalFolder.CreateFileAsync(filename ?? typeof(T).Name' CreationCollisionOption.ReplaceExisting); " is 138.
Long Statement,CSharpAnalytics.SystemInfo,WindowsStoreSystemInfo,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\SystemInfo\WindowsStoreSystemInfo.cs,GetDeviceManufacturerAsync,The length of the statement  "            var rootContainer = await PnpObject.CreateFromIdAsync(PnpObjectType.DeviceContainer' RootContainer' new[] { ManufacturerKey }); " is 127.
Long Statement,CSharpAnalytics.SystemInfo,WindowsStoreSystemInfo,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\SystemInfo\WindowsStoreSystemInfo.cs,GetDeviceModelAsync,The length of the statement  "            var rootContainer = await PnpObject.CreateFromIdAsync(PnpObjectType.DeviceContainer' RootContainer' new[] { ModelNameKey }); " is 124.
Long Statement,CSharpAnalytics.SystemInfo,WindowsStoreSystemInfo,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\SystemInfo\WindowsStoreSystemInfo.cs,GetDeviceCategoryAsync,The length of the statement  "            var rootContainer = await PnpObject.CreateFromIdAsync(PnpObjectType.DeviceContainer' RootContainer' new[] { DisplayPrimaryCategoryKey }); " is 137.
Long Statement,CSharpAnalytics.SystemInfo,WindowsStoreSystemInfo,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\SystemInfo\WindowsStoreSystemInfo.cs,GetWindowsVersionAsync,The length of the statement  "            var microsoftVersionedDevices = (await PnpObject.FindAllAsync(PnpObjectType.Device' requestedProperties' RootContainerQuery)) " is 125.
Empty Catch Block,CSharpAnalytics.Network,BackgroundUriRequester,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Network\BackgroundUriRequester.cs,RequestLoop,The method has an empty catch block.
Empty Catch Block,CSharpAnalytics.SystemInfo,WindowsStoreSystemInfo,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\SystemInfo\WindowsStoreSystemInfo.cs,GetProcessorArchitecture,The method has an empty catch block.
Magic Number,CSharpAnalytics,BaseAutoMeasurement,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\AutoMeasurement\BaseAutoMeasurement.cs,Start,The following statement contains a magic number: lastUploadInterval = uploadInterval ?? TimeSpan.FromSeconds(5);
Magic Number,CSharpAnalytics,BaseAutoMeasurement,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\AutoMeasurement\BaseAutoMeasurement.cs,GetScreenName,The following statement contains a magic number: screenName = screenName.Substring(0' screenName.Length - 4);
Magic Number,CSharpAnalytics.Debugging,ProtocolDebugger,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Debugging\ProtocolDebugger.cs,DumpParameter,The following statement contains a magic number: writer(label.PadRight(24) + ": " + formattedValue);
Magic Number,CSharpAnalytics.Sessions,SessionManager,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Sessions\SessionManager.cs,ShouldTrackThisNewVisitor,The following statement contains a magic number: sampleRate >= 100.0
Magic Number,CSharpAnalytics.SystemInfo,WindowsStoreSystemInfo,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\SystemInfo\WindowsStoreSystemInfo.cs,GetWindowsVersionAsync,The following statement contains a magic number: var confidence = (versionNumbers[0].Count() * 100 / microsoftVersionedDevices.Count);
Missing Default,CSharpAnalytics.Sessions,SessionManager,D:\research\architectureSmells\repos\AttackPattern_CSharpAnalytics\Source\CSharpAnalytics\Sessions\SessionManager.cs,MoveToNextSessionStatus,The following switch statement is missing a default case: switch (SessionStatus)              {                  case SessionStatus.Ending:                      SessionStatus = SessionStatus.Starting;                      break;                  case SessionStatus.Starting:                      SessionStatus = SessionStatus.Active;                      break;              }
