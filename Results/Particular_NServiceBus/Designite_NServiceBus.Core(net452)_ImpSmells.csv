Implementation smell,Namespace,Class,File,Method,Description
Long Method,NServiceBus,PipelineModelBuilder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\PipelineModelBuilder.cs,Build,The method has 101 lines of code.
Long Method,NServiceBus,SagaPersistenceBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaPersistenceBehavior.cs,Invoke,The method has 117 lines of code.
Long Method,NServiceBus,XmlDeserialization,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlDeserialization.cs,GetPropertyValue,The method has 219 lines of code.
Long Method,LightInject,Emitter,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Emit,The method has 123 lines of code.
Long Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitAssign,The method has 164 lines of code.
Long Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitNestedLambda,The method has 128 lines of code.
Long Method,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,The method has 122 lines of code.
Long Method,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,The method has 122 lines of code.
Complex Method,NServiceBus,DateTimeExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DateTimeExtensions.cs,ToUtcDateTime,Cyclomatic complexity of the method is 16
Complex Method,NServiceBus,LicenseManager,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Licensing\LicenseManager.cs,LogLicenseStatus,Cyclomatic complexity of the method is 8
Complex Method,NServiceBus,DeserializeMessageConnector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Incoming\DeserializeMessageConnector.cs,Extract,Cyclomatic complexity of the method is 10
Complex Method,NServiceBus,PipelineModelBuilder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\PipelineModelBuilder.cs,Build,Cyclomatic complexity of the method is 17
Complex Method,NServiceBus,SubscriptionReceiverBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\SubscriptionReceiverBehavior.cs,Invoke,Cyclomatic complexity of the method is 10
Complex Method,NServiceBus,UnicastPublishRouter,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\UnicastPublishRouter.cs,SelectDestinationsForEachEndpoint,Cyclomatic complexity of the method is 8
Complex Method,NServiceBus,SagaPersistenceBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaPersistenceBehavior.cs,Invoke,Cyclomatic complexity of the method is 19
Complex Method,NServiceBus,SagaPersistenceBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaPersistenceBehavior.cs,IsTimeoutMessage,Cyclomatic complexity of the method is 8
Complex Method,NServiceBus,XmlDeserialization,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlDeserialization.cs,InferNodeType,Cyclomatic complexity of the method is 12
Complex Method,NServiceBus,XmlDeserialization,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlDeserialization.cs,GetObjectOfTypeFromNode,Cyclomatic complexity of the method is 10
Complex Method,NServiceBus,XmlDeserialization,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlDeserialization.cs,GetPropertyValue,Cyclomatic complexity of the method is 52
Complex Method,NServiceBus,XmlSerialization,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSerialization.cs,WriteEntry,Cyclomatic complexity of the method is 16
Complex Method,NServiceBus,XmlSerializerCache,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSerializerCache.cs,InitTypeInternal,Cyclomatic complexity of the method is 22
Complex Method,NServiceBus,XmlSerializerCache,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSerializerCache.cs,GetAllPropertiesForType,Cyclomatic complexity of the method is 13
Complex Method,NServiceBus,LearningTransportDispatcher,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportDispatcher.cs,WriteMessage,Cyclomatic complexity of the method is 9
Complex Method,NServiceBus,Reflect<TTarget>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Utils\Reflection\Reflect.cs,GetMemberInfo,Cyclomatic complexity of the method is 8
Complex Method,NServiceBus.Features,FeatureActivator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Features\FeatureActivator.cs,Sort,Cyclomatic complexity of the method is 8
Complex Method,NServiceBus.Hosting.Helpers,AssemblyScanner,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\Helpers\AssemblyScanner.cs,GetScannableAssemblies,Cyclomatic complexity of the method is 13
Complex Method,NServiceBus.Hosting.Helpers,AssemblyScanner,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\Helpers\AssemblyScanner.cs,FormatReflectionTypeLoadException,Cyclomatic complexity of the method is 9
Complex Method,NServiceBus.MessageInterfaces.MessageMapper.Reflection,MessageMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\MessageInterfaces\MessageMapper\Reflection\MessageMapper.cs,InnerInitialize,Cyclomatic complexity of the method is 12
Complex Method,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Push,Cyclomatic complexity of the method is 10
Complex Method,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,CreateEmitMethodForUnknownService,Cyclomatic complexity of the method is 11
Complex Method,LightInject,Emitter,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Emit,Cyclomatic complexity of the method is 29
Complex Method,FastExpressionCompiler,ExpressionCompiler,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryCollectBoundConstants,Cyclomatic complexity of the method is 20
Complex Method,FastExpressionCompiler,ExpressionCompiler,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryCompileNestedLambda,Cyclomatic complexity of the method is 11
Complex Method,FastExpressionCompiler,ExpressionCompiler,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryCollectMemberInitExprConstants,Cyclomatic complexity of the method is 8
Complex Method,FastExpressionCompiler,ExpressionCompiler,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryCollectTryExprConstants,Cyclomatic complexity of the method is 8
Complex Method,FastExpressionCompiler,ExpressionCompiler,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryCollectTryExprInfoConstants,Cyclomatic complexity of the method is 8
Complex Method,FastExpressionCompiler,ClosureInfo,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,ConstructClosureTypeAndObject,Cyclomatic complexity of the method is 22
Complex Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmit,Cyclomatic complexity of the method is 23
Complex Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitTryCatchFinallyBlock,Cyclomatic complexity of the method is 13
Complex Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitTryCatchFinallyBlockInfo,Cyclomatic complexity of the method is 13
Complex Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,LoadParamArg,Cyclomatic complexity of the method is 8
Complex Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitConvert,Cyclomatic complexity of the method is 21
Complex Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitConstant,Cyclomatic complexity of the method is 21
Complex Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitNewArray,Cyclomatic complexity of the method is 11
Complex Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitMemberInit,Cyclomatic complexity of the method is 9
Complex Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitMemberInitInfo,Cyclomatic complexity of the method is 10
Complex Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitAssign,Cyclomatic complexity of the method is 35
Complex Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitMethodCall,Cyclomatic complexity of the method is 11
Complex Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitMemberAccess,Cyclomatic complexity of the method is 9
Complex Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitNestedLambda,Cyclomatic complexity of the method is 24
Complex Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitComparison,Cyclomatic complexity of the method is 14
Complex Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitArithmeticOperation,Cyclomatic complexity of the method is 9
Complex Method,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitLoadConstantInt,Cyclomatic complexity of the method is 11
Complex Method,FastExpressionCompiler,Tools,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,GetFuncOrActionType,Cyclomatic complexity of the method is 18
Complex Method,NServiceBus.Sagas,SagaMetadata,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,Create,Cyclomatic complexity of the method is 11
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,EscapeToJavascriptString,Cyclomatic complexity of the method is 11
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseObject,Cyclomatic complexity of the method is 8
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseValue,Cyclomatic complexity of the method is 8
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseString,Cyclomatic complexity of the method is 22
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,Cyclomatic complexity of the method is 15
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,SerializeValue,Cyclomatic complexity of the method is 9
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,IsNumeric,Cyclomatic complexity of the method is 12
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,EscapeToJavascriptString,Cyclomatic complexity of the method is 11
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseObject,Cyclomatic complexity of the method is 8
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseValue,Cyclomatic complexity of the method is 8
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseString,Cyclomatic complexity of the method is 22
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,Cyclomatic complexity of the method is 15
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,SerializeValue,Cyclomatic complexity of the method is 9
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,IsNumeric,Cyclomatic complexity of the method is 12
Complex Method,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,Cyclomatic complexity of the method is 30
Complex Method,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,Cyclomatic complexity of the method is 30
Long Parameter List,NServiceBus,ExpiredTimeoutsPoller,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\TimeoutManager\ExpiredTimeoutsPoller.cs,ExpiredTimeoutsPoller,The method has 5 parameters. Parameters: timeoutsFetcher' dispatcher' dispatcherAddress' circuitBreaker' currentTimeProvider
Long Parameter List,NServiceBus,Configuration,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\Helpers\AssemblyScanningComponent.cs,Configuration,The method has 10 parameters. Parameters: settings' availableTypes' criticalError' startupDiagnostics' diagnosticsPath' hostDiagnosticsWriter' endpointName' container' installationUserName' shouldRunInstallers
Long Parameter List,NServiceBus,Configuration,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\Helpers\AssemblyScanningComponent.cs,Configuration,The method has 13 parameters. Parameters: logicalAddress' queueNameBase' localAddress' instanceSpecificQueue' transactionMode' pushRuntimeSettings' purgeOnStartup' pipelineCompletedSubscribers' isSendOnlyEndpoint' executeTheseHandlersFirst' messageHandlerRegistry' createQueues' transportSeam
Long Parameter List,NServiceBus,Configuration,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\Helpers\AssemblyScanningComponent.cs,AddSatelliteReceiver,The method has 5 parameters. Parameters: name' transportAddress' runtimeSettings' recoverabilityPolicy' onMessage
Long Parameter List,NServiceBus,Configuration,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\Helpers\AssemblyScanningComponent.cs,Configuration,The method has 8 parameters. Parameters: unicastRoutingTable' publishers' distributionPolicy' configuredUnicastRoutes' customDistributionStrategies' settingsEndpointInstances' enforceBestPractices' returnAddressOverride
Long Parameter List,NServiceBus,LightInjectRegistryExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInjectRegistryExtensions.cs,Register,The method has 5 parameters. Parameters: registry' serviceType' factoryDelegate' lifetime' serviceName
Long Parameter List,NServiceBus,IncomingLogicalMessageContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Incoming\IncomingLogicalMessageContext.cs,IncomingLogicalMessageContext,The method has 5 parameters. Parameters: logicalMessage' messageId' replyToAddress' headers' parentContext
Long Parameter List,NServiceBus,InvokeHandlerContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Incoming\InvokeHandlerContext.cs,InvokeHandlerContext,The method has 8 parameters. Parameters: handler' messageId' replyToAddress' headers' messageMetadata' messageBeingHandled' storageSession' parentContext
Long Parameter List,NServiceBus,MainPipelineExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\MainPipelineExecutor.cs,MainPipelineExecutor,The method has 5 parameters. Parameters: rootBuilder' pipelineCache' messageOperations' receivePipelineNotification' receivePipeline
Long Parameter List,NServiceBus,OutgoingLogicalMessageContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Outgoing\OutgoingLogicalMessageContext.cs,OutgoingLogicalMessageContext,The method has 5 parameters. Parameters: messageId' headers' message' routingStrategies' parentContext
Long Parameter List,NServiceBus,OutgoingPublishContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Outgoing\OutgoingPublishContext.cs,OutgoingPublishContext,The method has 5 parameters. Parameters: message' messageId' headers' extensions' parentContext
Long Parameter List,NServiceBus,OutgoingReplyContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Outgoing\OutgoingReplyContext.cs,OutgoingReplyContext,The method has 5 parameters. Parameters: message' messageId' headers' extensions' parentContext
Long Parameter List,NServiceBus,OutgoingSendContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Outgoing\OutgoingSendContext.cs,OutgoingSendContext,The method has 5 parameters. Parameters: message' messageId' headers' extensions' parentContext
Long Parameter List,NServiceBus,SendComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Outgoing\SendComponent.cs,Initialize,The method has 5 parameters. Parameters: pipelineSettings' hostingConfiguration' routingComponent' messageMapper' transportSeam
Long Parameter List,NServiceBus,PipelineExecutionExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\PipelineExecutionExtensions.cs,CreateBehaviorCallDelegate,The method has 5 parameters. Parameters: currentBehavior' methodInfo' outerContextParam' previous' expressions
Long Parameter List,NServiceBus,SatelliteDefinition,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\SatelliteDefinition.cs,SatelliteDefinition,The method has 6 parameters. Parameters: name' receiveAddress' requiredTransportTransactionMode' runtimeSettings' recoverabilityPolicy' onMessage
Long Parameter List,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,PrepareToStart,The method has 5 parameters. Parameters: builder' recoverabilityComponent' messageOperations' pipelineComponent' pipelineCache
Long Parameter List,NServiceBus,RecoverabilityExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\RecoverabilityExecutor.cs,RecoverabilityExecutor,The method has 9 parameters. Parameters: raiseRecoverabilityNotifications' immediateRetriesAvailable' delayedRetriesAvailable' recoverabilityPolicy' configuration' delayedRetryExecutor' moveToErrorsExecutor' messageRetryNotification' messageFaultedNotification
Long Parameter List,NServiceBus,RecoverabilityExecutorFactory,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\RecoverabilityExecutorFactory.cs,RecoverabilityExecutorFactory,The method has 8 parameters. Parameters: defaultRecoverabilityPolicy' configuration' delayedRetryExecutorFactory' moveToErrorsExecutorFactory' immediateRetriesAvailable' delayedRetriesAvailable' messageRetryNotification' messageFaultedNotification
Long Parameter List,NServiceBus,MessageDrivenSubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscribeTerminator.cs,SendSubscribeMessageWithRetries,The method has 5 parameters. Parameters: destination' subscriptionMessage' messageType' context' retriesCount
Long Parameter List,NServiceBus,MessageDrivenUnsubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenUnsubscribeTerminator.cs,SendUnsubscribeMessageWithRetries,The method has 5 parameters. Parameters: destination' unsubscribeMessage' messageType' context' retriesCount
Long Parameter List,NServiceBus,RoutingComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\RoutingComponent.Configuration.cs,Initialize,The method has 5 parameters. Parameters: configuration' transportSeam' receiveConfiguration' conventions' pipelineSettings
Long Parameter List,NServiceBus,MigrationSubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\MigrationSubscribeTerminator.cs,MigrationSubscribeTerminator,The method has 5 parameters. Parameters: subscriptionManager' subscriptionRouter' dispatcher' subscriberAddress' subscriberEndpoint
Long Parameter List,NServiceBus,MigrationSubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\MigrationSubscribeTerminator.cs,SendSubscribeMessageWithRetries,The method has 5 parameters. Parameters: destination' subscriptionMessage' messageType' context' retriesCount
Long Parameter List,NServiceBus,MigrationUnsubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\MigrationUnsubscribeTerminator.cs,MigrationUnsubscribeTerminator,The method has 5 parameters. Parameters: subscriptionManager' subscriptionRouter' dispatcher' replyToAddress' endpoint
Long Parameter List,NServiceBus,MigrationUnsubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\MigrationUnsubscribeTerminator.cs,SendUnsubscribeMessageWithRetries,The method has 5 parameters. Parameters: destination' unsubscribeMessage' messageType' context' retriesCount
Long Parameter List,NServiceBus,UnicastSendRouter,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\UnicastSendRouter.cs,UnicastSendRouter,The method has 7 parameters. Parameters: isSendOnly' receiveQueueName' instanceSpecificQueue' defaultDistributionPolicy' unicastRoutingTable' endpointInstances' transportAddressTranslation
Long Parameter List,NServiceBus,CustomFinderAdapter<TSagaData;TMessage>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\CustomFinderAdapter.cs,Find,The method has 5 parameters. Parameters: builder' finderDefinition' storageSession' context' message
Long Parameter List,NServiceBus,PropertySagaFinder<TSagaData>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\PropertySagaFinder.cs,Find,The method has 5 parameters. Parameters: builder' finderDefinition' storageSession' context' message
Long Parameter List,NServiceBus,SagaFinder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaFinder.cs,Find,The method has 5 parameters. Parameters: builder' finderDefinition' storageSession' context' message
Long Parameter List,NServiceBus,XmlSerialization,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSerialization.cs,XmlSerialization,The method has 7 parameters. Parameters: messageType' stream' message' conventions' cache' skipWrappingRawXml' namespace
Long Parameter List,NServiceBus,XmlSerialization,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSerialization.cs,WriteObject,The method has 5 parameters. Parameters: elem' name' type' value' useNS
Long Parameter List,NServiceBus,StartableEndpoint,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\StartableEndpoint.cs,StartableEndpoint,The method has 9 parameters. Parameters: settings' featureComponent' receiveComponent' transportInfrastructure' pipelineComponent' recoverabilityComponent' hostingComponent' sendComponent' builder
Long Parameter List,NServiceBus,TransportReceiver,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\TransportReceiver.cs,TransportReceiver,The method has 7 parameters. Parameters: id' pushMessages' pushSettings' pushRuntimeSettings' pipelineExecutor' recoverabilityExecutor' criticalError
Long Parameter List,NServiceBus,MessageOperations,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Unicast\MessageOperations.cs,MessageOperations,The method has 6 parameters. Parameters: messageMapper' publishPipeline' sendPipeline' replyPipeline' subscribePipeline' unsubscribePipeline
Long Parameter List,NServiceBus,RunningEndpointInstance,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Unicast\RunningEndpointInstance.cs,RunningEndpointInstance,The method has 6 parameters. Parameters: settings' hostingComponent' receiveComponent' featureComponent' messageSession' transportInfrastructure
Long Parameter List,NServiceBus.Features,FeatureConfigurationContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Features\FeatureConfigurationContext.cs,FeatureConfigurationContext,The method has 5 parameters. Parameters: settings' container' pipelineSettings' routing' receiveConfiguration
Long Parameter List,NServiceBus.Features,FeatureConfigurationContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Features\FeatureConfigurationContext.cs,AddSatelliteReceiver,The method has 5 parameters. Parameters: name' transportAddress' runtimeSettings' recoverabilityPolicy' onMessage
Long Parameter List,NServiceBus.Features,FeatureConfigurationContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Features\FeatureConfigurationContext.cs,AddSatelliteReceiver,The method has 6 parameters. Parameters: name' transportAddress' requiredTransportTransactionMode' runtimeSettings' recoverabilityPolicy' onMessage
Long Parameter List,NServiceBus.Features,FeatureConfigurationContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Features\FeatureConfigurationContext.cs,AddSatelliteReceiver,The method has 6 parameters. Parameters: name' transportAddress' requiredTransportTransactionMode' runtimeSettings' recoverabilityPolicy' onMessage
Long Parameter List,NServiceBus.Features,FeatureConfigurationContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Features\FeatureConfigurationContext.cs,AddSatelliteReceiver,The method has 6 parameters. Parameters: name' transportAddress' requiredTransportTransactionMode' runtimeSettings' recoverabilityPolicy' onMessage
Long Parameter List,NServiceBus.Features,FeatureConfigurationContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Features\FeatureConfigurationContext.cs,AddSatelliteReceiver,The method has 6 parameters. Parameters: name' transportAddress' requiredTransportTransactionMode' runtimeSettings' recoverabilityPolicy' onMessage
Long Parameter List,NServiceBus.Features,FeatureConfigurationContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Features\FeatureConfigurationContext.cs,AddSatelliteReceiver,The method has 6 parameters. Parameters: name' transportAddress' requiredTransportTransactionMode' runtimeSettings' recoverabilityPolicy' onMessage
Long Parameter List,System,ObjectExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DeepCopy.cs,CopyFields,The method has 6 parameters. Parameters: originalObject' visited' cloneObject' typeToReflect' bindingFlags' filter
Long Parameter List,NServiceBus.MessageMutator,MutateOutgoingTransportMessageContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\MessageMutators\MutateTransportMessage\MutateOutgoingTransportMessageContext.cs,MutateOutgoingTransportMessageContext,The method has 5 parameters. Parameters: outgoingBody' outgoingMessage' outgoingHeaders' incomingMessage' incomingHeaders
Long Parameter List,LightInject,ServiceFactoryExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,GetInstance,The method has 5 parameters. Parameters: factory' arg1' arg2' arg3' serviceName
Long Parameter List,LightInject,ServiceFactoryExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,GetInstance,The method has 5 parameters. Parameters: factory' arg1' arg2' arg3' arg4
Long Parameter List,LightInject,ServiceFactoryExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,GetInstance,The method has 6 parameters. Parameters: factory' arg1' arg2' arg3' arg4' serviceName
Long Parameter List,LightInject,TypeConstructionInfoBuilder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,TypeConstructionInfoBuilder,The method has 5 parameters. Parameters: constructorSelector' constructorDependencySelector' propertyDependencySelector' getConstructorDependencyExpression' getPropertyDependencyExpression
Long Parameter List,NServiceBus.Transport,ErrorContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\ErrorContext.cs,ErrorContext,The method has 6 parameters. Parameters: exception' headers' transportMessageId' body' transportTransaction' immediateProcessingFailures
Long Parameter List,NServiceBus.Transport,ErrorContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\ErrorContext.cs,ErrorContext,The method has 7 parameters. Parameters: exception' headers' transportMessageId' body' transportTransaction' immediateProcessingFailures' context
Long Parameter List,NServiceBus.Transport,MessageContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\MessageContext.cs,MessageContext,The method has 6 parameters. Parameters: messageId' headers' body' transportTransaction' receiveCancellationTokenSource' context
Long Parameter List,FastExpressionCompiler,ExpressionCompiler,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryCompile,The method has 9 parameters. Parameters: closureInfo' delegateType' paramTypes' returnType' exprObj' exprNodeType' exprType' paramExprs' isNestedLambda
Long Parameter List,FastExpressionCompiler,Closure,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,Create,The method has 5 parameters. Parameters: v1' v2' v3' v4' v5
Long Parameter List,FastExpressionCompiler,Closure,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,Create,The method has 6 parameters. Parameters: v1' v2' v3' v4' v5' v6
Long Parameter List,FastExpressionCompiler,Closure,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,Create,The method has 7 parameters. Parameters: v1' v2' v3' v4' v5' v6' v7
Long Parameter List,FastExpressionCompiler,Closure,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,Create,The method has 8 parameters. Parameters: v1' v2' v3' v4' v5' v6' v7' v8
Long Parameter List,FastExpressionCompiler,Closure,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,Create,The method has 9 parameters. Parameters: v1' v2' v3' v4' v5' v6' v7' v8' v9
Long Parameter List,FastExpressionCompiler,Closure,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,Create,The method has 10 parameters. Parameters: v1' v2' v3' v4' v5' v6' v7' v8' v9' v10
Long Parameter List,FastExpressionCompiler,Closure<T1;T2;T3;T4;T5>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,Closure,The method has 5 parameters. Parameters: v1' v2' v3' v4' v5
Long Parameter List,FastExpressionCompiler,Closure<T1;T2;T3;T4;T5;T6>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,Closure,The method has 6 parameters. Parameters: v1' v2' v3' v4' v5' v6
Long Parameter List,FastExpressionCompiler,Closure<T1;T2;T3;T4;T5;T6;T7>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,Closure,The method has 7 parameters. Parameters: v1' v2' v3' v4' v5' v6' v7
Long Parameter List,FastExpressionCompiler,Closure<T1;T2;T3;T4;T5;T6;T7;T8>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,Closure,The method has 8 parameters. Parameters: v1' v2' v3' v4' v5' v6' v7' v8
Long Parameter List,FastExpressionCompiler,Closure<T1;T2;T3;T4;T5;T6;T7;T8;T9>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,Closure,The method has 9 parameters. Parameters: v1' v2' v3' v4' v5' v6' v7' v8' v9
Long Parameter List,FastExpressionCompiler,Closure<T1;T2;T3;T4;T5;T6;T7;T8;T9;T10>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,Closure,The method has 10 parameters. Parameters: v1' v2' v3' v4' v5' v6' v7' v8' v9' v10
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmit,The method has 7 parameters. Parameters: exprObj' exprNodeType' exprType' paramExprs' il' closure' parent
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitIndex,The method has 5 parameters. Parameters: exprObj' elemType' paramExprs' il' closure
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitTryCatchFinallyBlock,The method has 5 parameters. Parameters: tryExpr' exprType' paramExprs' il' closure
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitTryCatchFinallyBlockInfo,The method has 5 parameters. Parameters: tryExpr' exprType' paramExprs' il' closure
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitParameter,The method has 6 parameters. Parameters: paramExprObj' paramType' paramExprs' il' closure' parent
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitBinary,The method has 5 parameters. Parameters: exprObj' paramExprs' il' closure' parent
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitMany,The method has 5 parameters. Parameters: exprs' paramExprs' il' closure' parent
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitMany,The method has 5 parameters. Parameters: exprObjects' paramExprs' il' closure' parent
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitConvert,The method has 5 parameters. Parameters: exprObj' targetType' paramExprs' il' closure
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,LoadClosureFieldOrItem,The method has 5 parameters. Parameters: closure' il' itemIndex' itemType' itemExprObj
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitNew,The method has 6 parameters. Parameters: exprObj' exprType' paramExprs' il' closure' resultValueVar
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitNewArray,The method has 5 parameters. Parameters: exprObj' arrayType' paramExprs' il' closure
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitNewArrayInfo,The method has 5 parameters. Parameters: expr' arrayType' paramExprs' il' closure
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitArrayIndex,The method has 5 parameters. Parameters: exprObj' exprType' paramExprs' il' closure
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitMemberInit,The method has 6 parameters. Parameters: exprObj' exprType' paramExprs' il' closure' stack
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitMemberInitInfo,The method has 6 parameters. Parameters: exprInfo' exprType' paramExprs' il' closure' stack
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitAssign,The method has 5 parameters. Parameters: exprObj' exprType' paramExprs' il' closure
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitComparison,The method has 5 parameters. Parameters: exprObj' exprNodeType' paramExprs' il' closure
Long Parameter List,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitArithmeticOperation,The method has 6 parameters. Parameters: exprObj' exprType' exprNodeType' paramExprs' il' closure
Long Parameter List,NServiceBus.Faults,DelayedRetryMessage,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\DelayedRetries\DelayedRetryMessage.cs,DelayedRetryMessage,The method has 5 parameters. Parameters: messageId' headers' body' exception' retryAttempt
Long Parameter List,NServiceBus.Faults,FailedMessage,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\Faults\FailedMessage.cs,FailedMessage,The method has 5 parameters. Parameters: messageId' headers' body' exception' errorQueue
Long Parameter List,NServiceBus.Faults,ImmediateRetryMessage,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\ImmediateRetries\ImmediateRetryMessage.cs,ImmediateRetryMessage,The method has 5 parameters. Parameters: messageId' headers' body' exception' retryAttempt
Long Parameter List,NServiceBus.Routing,DistributionContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\DistributionContext.cs,DistributionContext,The method has 6 parameters. Parameters: receiverAddresses' message' messageId' headers' addressTranslation' extensions
Long Parameter List,NServiceBus.Sagas,SagaMetadata,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,SagaMetadata,The method has 7 parameters. Parameters: name' sagaType' entityName' sagaEntityType' correlationProperty' messages' finders
Long Parameter List,NServiceBus.Unicast,MessageHandlerRegistry,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Unicast\MessageHandlerRegistry.cs,CacheMethod,The method has 5 parameters. Parameters: handler' messageType' interfaceGenericType' methodList' isTimeoutHandler
Long Identifier,NServiceBus,TimeoutManagerConfigurationExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\TimeoutManager\TimeoutManagerConfigurationExtensions.cs,,The length of the parameter TimeoutManagerMaxConcurrencySettingsKey is 39.
Long Identifier,NServiceBus,HostCreator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\HostCreator.cs,CreateWithExternallyManagedContainer,The length of the parameter externallyManagedContainerHost is 30.
Long Identifier,NServiceBus,Settings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\HostingComponent.Settings.cs,,The length of the parameter HostDiagnosticsWriterSettingsKey is 32.
Long Identifier,NServiceBus,Settings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\HostingComponent.Settings.cs,,The length of the parameter CustomCriticalErrorActionSettingsKey is 36.
Long Identifier,NServiceBus,Settings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\HostingComponent.Settings.cs,,The length of the parameter EndpointInstanceDiscriminatorSettingsKey is 40.
Long Identifier,NServiceBus,Settings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\HostingComponent.Settings.cs,,The length of the parameter TransportPurgeOnStartupSettingsKey is 34.
Long Identifier,NServiceBus,MutateIncomingTransportMessageBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\MessageMutators\MutateTransportMessage\MutateIncomingTransportMessageBehavior.cs,,The length of the parameter hasIncomingTransportMessageMutators is 35.
Long Identifier,NServiceBus,MutateOutgoingTransportMessageBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\MessageMutators\MutateTransportMessage\MutateOutgoingTransportMessageBehavior.cs,,The length of the parameter hasOutgoingTransportMessageMutators is 35.
Long Identifier,NServiceBus,TimeToBeReceivedMappings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Performance\TimeToBeReceived\TimeToBeReceivedMappings.cs,TimeToBeReceivedMappings,The length of the parameter doesTransportSupportDiscardIfNotReceivedBefore is 46.
Long Identifier,NServiceBus,TimeToBeReceivedMappings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Performance\TimeToBeReceived\TimeToBeReceivedMappings.cs,GetTimeToBeReceived,The length of the parameter doesTransportSupportDiscardIfNotReceivedBefore is 46.
Long Identifier,NServiceBus,TimeToBeReceivedMappings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Performance\TimeToBeReceived\TimeToBeReceivedMappings.cs,,The length of the parameter doesTransportSupportDiscardIfNotReceivedBefore is 46.
Long Identifier,NServiceBus,InMemoryTimeoutPersister,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\InMemory\TimeoutPersister\InMemoryTimeoutPersister.cs,,The length of the parameter EmptyResultsNextTimeToRunQuerySpan is 34.
Long Identifier,NServiceBus,SatelliteDefinition,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\SatelliteDefinition.cs,SatelliteDefinition,The length of the parameter requiredTransportTransactionMode is 32.
Long Identifier,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,ReceiveComponent,The length of the parameter transportReceiveInfrastructure is 30.
Long Identifier,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,Initialize,The length of the parameter transportReceiveInfrastructure is 30.
Long Identifier,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,GetRequiredTransactionMode,The length of the parameter requestedTransportTransactionMode is 33.
Long Identifier,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,AddReceivers,The length of the parameter instanceSpecificRecoverabilityExecutor is 38.
Long Identifier,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,AddReceivers,The length of the parameter satelliteRecoverabilityExecutor is 31.
Long Identifier,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,,The length of the parameter transportReceiveInfrastructure is 30.
Long Identifier,NServiceBus,RecoverabilityExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\RecoverabilityExecutor.cs,RecoverabilityExecutor,The length of the parameter raiseRecoverabilityNotifications is 32.
Long Identifier,NServiceBus,Saga,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\Saga.cs,ConfigureHowToFindSaga,The length of the parameter sagaMessageFindingConfiguration is 31.
Long Identifier,NServiceBus,SagaPropertyMapper<TSagaData>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaPropertyMapper.cs,SagaPropertyMapper,The length of the parameter sagaMessageFindingConfiguration is 31.
Long Identifier,NServiceBus,SagaPropertyMapper<TSagaData>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaPropertyMapper.cs,,The length of the parameter sagaMessageFindingConfiguration is 31.
Long Identifier,NServiceBus,Saga<TSagaData>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaT.cs,ConfigureHowToFindSaga,The length of the parameter sagaMessageFindingConfiguration is 31.
Long Identifier,NServiceBus,ToSagaExpression<TSagaData;TMessage>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\ToSagaExpression.cs,ToSagaExpression,The length of the parameter sagaMessageFindingConfiguration is 31.
Long Identifier,NServiceBus,ToSagaExpression<TSagaData;TMessage>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\ToSagaExpression.cs,,The length of the parameter sagaMessageFindingConfiguration is 31.
Long Identifier,NServiceBus,SerializationFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serialization\SerializationFeature.cs,Setup,The length of the parameter defaultSerializerAndDefinition is 30.
Long Identifier,NServiceBus,SerializationFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serialization\SerializationFeature.cs,Setup,The length of the parameter additionalDeserializerDefinitions is 33.
Long Identifier,NServiceBus,SerializationFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serialization\SerializationFeature.cs,Setup,The length of the parameter additionalDeserializerDiagnostics is 33.
Long Identifier,NServiceBus,SerializationSettingsExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serialization\SerializationSettingsExtensions.cs,,The length of the parameter AdditionalSerializersSettingsKey is 32.
Long Identifier,NServiceBus,XmlSerializer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSerializer.cs,,The length of the parameter CustomNamespaceConfigurationKey is 31.
Long Identifier,NServiceBus,LearningTransportInfrastructure,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportInfrastructure.cs,,The length of the parameter DefaultLearningTransportDirectory is 33.
Long Identifier,NServiceBus,DelegateFactory,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Utils\Reflection\DelegateFactory.cs,,The length of the parameter PropertyInfoToLateBoundProperty is 31.
Long Identifier,NServiceBus,DelegateFactory,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Utils\Reflection\DelegateFactory.cs,,The length of the parameter PropertyInfoToLateBoundPropertySet is 34.
Long Identifier,NServiceBus.Features,DelayedDeliveryFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\DelayedDeliveryFeature.cs,Setup,The length of the parameter transportHasNativeDelayedDelivery is 33.
Long Identifier,NServiceBus.Features,TimeoutManager,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\TimeoutManager\TimeoutManager.cs,,The length of the parameter TimeToWaitBeforeTriggeringCriticalError is 39.
Long Identifier,NServiceBus.Features,FeatureConfigurationContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Features\FeatureConfigurationContext.cs,AddSatelliteReceiver,The length of the parameter requiredTransportTransactionMode is 32.
Long Identifier,NServiceBus.Features,FeatureConfigurationContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Features\FeatureConfigurationContext.cs,AddSatelliteReceiver,The length of the parameter requiredTransportTransactionMode is 32.
Long Identifier,NServiceBus.Features,FeatureConfigurationContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Features\FeatureConfigurationContext.cs,AddSatelliteReceiver,The length of the parameter requiredTransportTransactionMode is 32.
Long Identifier,NServiceBus.Features,FeatureConfigurationContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Features\FeatureConfigurationContext.cs,AddSatelliteReceiver,The length of the parameter requiredTransportTransactionMode is 32.
Long Identifier,NServiceBus.Features,FeatureConfigurationContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Features\FeatureConfigurationContext.cs,AddSatelliteReceiver,The length of the parameter requiredTransportTransactionMode is 32.
Long Identifier,NServiceBus.Features,MessageDurabilityFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Performance\MessageDurability\MessageDurabilityFeature.cs,,The length of the parameter DoesNotSupportNonDurableDeliveryExceptionMessage is 48.
Long Identifier,NServiceBus.Features,TimeToBeReceived,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Performance\TimeToBeReceived\TimeToBeReceived.cs,GetMappings,The length of the parameter doesTransportSupportDiscardIfNotReceivedBefore is 46.
Long Identifier,NServiceBus.Features,InMemoryOutboxPersistence,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\InMemory\Outbox\InMemoryOutboxPersistence.cs,,The length of the parameter TimeToKeepDeduplicationEntries is 30.
Long Identifier,NServiceBus.Features,NativePublishSubscribeFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\NativePublishSubscribeFeature.cs,Setup,The length of the parameter transportSubscriptionInfrastructure is 35.
Long Identifier,NServiceBus.Features,SubscriptionMigrationMode,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\SubscriptionMigrationMode.cs,Setup,The length of the parameter transportSubscriptionInfrastructure is 35.
Long Identifier,NServiceBus.DelayedDelivery,ExternalTimeoutManagerConfigurationExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\ExternalTimeoutManagerConfigurationExtensions.cs,,The length of the parameter ExternalTimeoutManagerConfigurationKey is 38.
Long Identifier,NServiceBus.MessageInterfaces.MessageMapper.Reflection,MessageMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\MessageInterfaces\MessageMapper\Reflection\MessageMapper.cs,,The length of the parameter concreteToInterfaceTypeMapping is 30.
Long Identifier,NServiceBus.MessageInterfaces.MessageMapper.Reflection,MessageMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\MessageInterfaces\MessageMapper\Reflection\MessageMapper.cs,,The length of the parameter interfaceToConcreteTypeMapping is 30.
Long Identifier,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,CreateEmitMethodForReadOnlyCollectionServiceRequest,The length of the parameter closedGenericReadOnlyCollectionType is 35.
Long Identifier,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,GetOpenGenericServiceRegistration,The length of the parameter openGenericServiceRegistration is 30.
Long Identifier,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,CreateEmitMethodBasedOnClosedGenericServiceRequest,The length of the parameter openGenericServiceRegistration is 30.
Long Identifier,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,,The length of the parameter constructorDependencyFactories is 30.
Long Identifier,LightInject,TypeConstructionInfoBuilder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,TypeConstructionInfoBuilder,The length of the parameter getConstructorDependencyExpression is 34.
Long Identifier,LightInject,TypeConstructionInfoBuilder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,TypeConstructionInfoBuilder,The length of the parameter getPropertyDependencyExpression is 31.
Long Identifier,LightInject,TypeConstructionInfoBuilder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,,The length of the parameter getConstructorDependencyExpression is 34.
Long Identifier,LightInject,TypeConstructionInfoBuilder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,,The length of the parameter getPropertyDependencyExpression is 31.
Long Identifier,LightInject,CompositionRootTypeExtractor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,CompositionRootTypeExtractor,The length of the parameter compositionRootAttributeExtractor is 33.
Long Identifier,LightInject,CompositionRootTypeExtractor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,,The length of the parameter compositionRootAttributeExtractor is 33.
Long Identifier,LightInject,GenericArgumentMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,CreateMap,The length of the parameter baseTypeImplementingOpenGenericServiceType is 42.
Long Identifier,LightInject,GenericArgumentMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,GetBaseTypeImplementingGenericTypeDefinition,The length of the parameter baseTypeImplementingGenericTypeDefinition is 41.
Long Identifier,LightInject,DelegateTypeExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,,The length of the parameter OpenGenericGetInstanceMethodInfo is 32.
Long Identifier,LightInject,NamedDelegateTypeExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,CreateNamedGetInstanceDelegate,The length of the parameter createInstanceDelegateMethodInfo is 32.
Long Identifier,LightInject,NamedDelegateTypeExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,,The length of the parameter CreateInstanceDelegateMethodInfo is 32.
Long Identifier,LightInject,ReflectionHelper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,,The length of the parameter GetInstanceWithParametersMethods is 32.
Long Identifier,NServiceBus.Transport,MessageContext,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\MessageContext.cs,MessageContext,The length of the parameter receiveCancellationTokenSource is 30.
Long Identifier,NServiceBus.Sagas,ActiveSagaInstance,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\ActiveSagaInstance.cs,ValidateChanges,The length of the parameter currentCorrelationPropertyValue is 31.
Long Identifier,NServiceBus.Sagas,ActiveSagaInstance,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\ActiveSagaInstance.cs,ValidateCorrelationPropertyHaveValue,The length of the parameter currentCorrelationPropertyValue is 31.
Long Identifier,NServiceBus.Sagas,ActiveSagaInstance,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\ActiveSagaInstance.cs,ValidateCorrelationPropertyNotModified,The length of the parameter currentCorrelationPropertyValue is 31.
Long Identifier,NServiceBus.Sagas,SagaMetadata,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,,The length of the parameter AllowedCorrelationPropertyTypes is 31.
Long Identifier,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,,The length of the parameter _currentJsonSerializerStrategy is 30.
Long Identifier,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,,The length of the parameter _currentJsonSerializerStrategy is 30.
Long Identifier,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,,The length of the parameter ArrayConstructorParameterTypes is 30.
Long Identifier,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,,The length of the parameter ArrayConstructorParameterTypes is 30.
Long Identifier,NServiceBus.Unicast,MessageHandlerRegistry,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Unicast\MessageHandlerRegistry.cs,,The length of the parameter handlerAndMessagesHandledByHandlerCache is 39.
Long Statement,NServiceBus,AuditToRoutingConnector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Audit\AuditToRoutingConnector.cs,Invoke,The length of the statement  "            var dispatchContext = this.CreateRoutingContext(context.Message' new UnicastRoutingStrategy(context.AuditAddress)' context); " is 124.
Long Statement,NServiceBus,InvokeAuditPipelineBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Audit\InvokeAuditPipelineBehavior.cs,Invoke,The length of the statement  "            var processedMessage = new OutgoingMessage(context.Message.MessageId' new Dictionary<string' string>(context.Message.Headers)' context.Message.Body); " is 149.
Long Statement,NServiceBus,AttachCausationHeadersBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Causation\AttachCausationHeadersBehavior.cs,SetConversationIdHeader,The length of the statement  "            var hasUserDefinedConversationId = context.Headers.TryGetValue(Headers.ConversationId' out var userDefinedConversationId); " is 122.
Long Statement,NServiceBus,AttachCausationHeadersBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Causation\AttachCausationHeadersBehavior.cs,SetConversationIdHeader,The length of the statement  "            if (incomingMessage != null && incomingMessage.Headers.TryGetValue(Headers.ConversationId' out var conversationIdFromCurrentMessageContext)) " is 140.
Long Statement,NServiceBus,AttachCausationHeadersBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Causation\AttachCausationHeadersBehavior.cs,SetConversationIdHeader,The length of the statement  "                    throw new Exception($"Cannot set the {Headers.ConversationId} header to '{userDefinedConversationId}' as it cannot override the incoming header value ('{conversationIdFromCurrentMessageContext}')."); " is 199.
Long Statement,NServiceBus,FileShareDataBusImplementation,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DataBus\FileShareDataBusImplementation.cs,Put,The length of the statement  "            using (var output = new FileStream(filePath' FileMode.CreateNew' FileAccess.Write' FileShare.Read' 4096' FileOptions.Asynchronous)) " is 131.
Long Statement,NServiceBus,DelayedDeliveryOptionExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\DelayedDeliveryOptionExtensions.cs,DelayDeliveryWith,The length of the statement  "                throw new InvalidOperationException($"The options are already configured for delayed delivery by the '{nameof(DoNotDeliverBefore)}' API."); " is 139.
Long Statement,NServiceBus,DelayedDeliveryOptionExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\DelayedDeliveryOptionExtensions.cs,DoNotDeliverBefore,The length of the statement  "                throw new InvalidOperationException($"The options are already configured for delayed delivery by the '{nameof(DelayDeliveryWith)}' API."); " is 138.
Long Statement,NServiceBus,RouteDeferredMessageToTimeoutManagerBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\RouteDeferredMessageToTimeoutManagerBehavior.cs,Invoke,The length of the statement  "                throw new Exception($"Postponed delivery of messages with TimeToBeReceived set is not supported. Remove the TimeToBeReceived attribute to postpone messages of type '{context.Message.Headers[Headers.EnclosedMessageTypes]}'."); " is 225.
Long Statement,NServiceBus,ThrowIfCannotDeferMessageBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\ThrowIfCannotDeferMessageBehavior.cs,Invoke,The length of the statement  "                throw new InvalidOperationException("Cannot delay delivery of messages when TimeoutManager is disabled or there is no infrastructure support for delayed messages."); " is 165.
Long Statement,NServiceBus,TimeoutManagerAddressConfiguration,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\TimeoutManagerAddressConfiguration.cs,Set,The length of the statement  "                throw new InvalidOperationException("Another feature or the UnicastBusConfig section has already set the timeout manager address."); " is 132.
Long Statement,NServiceBus,DispatchTimeoutBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\TimeoutManager\DispatchTimeoutBehavior.cs,Invoke,The length of the statement  "            var transportOperation = new TransportOperation(outgoingMessage' new UnicastAddressTag(timeoutData.Destination)' dispatchConsistency); " is 134.
Long Statement,NServiceBus,DispatchTimeoutBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\TimeoutManager\DispatchTimeoutBehavior.cs,Invoke,The length of the statement  "            await dispatcher.Dispatch(new TransportOperations(transportOperation)' context.TransportTransaction' context.Extensions).ConfigureAwait(false); " is 143.
Long Statement,NServiceBus,DispatchTimeoutBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\TimeoutManager\DispatchTimeoutBehavior.cs,Invoke,The length of the statement  "                // timeout was concurrently removed between Peek and TryRemove. Throw an exception to rollback the dispatched message if possible. " is 130.
Long Statement,NServiceBus,DispatchTimeoutBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\TimeoutManager\DispatchTimeoutBehavior.cs,GetDispatchConsistency,The length of the statement  "            // dispatch message isolated from existing transactions when not using DTC to avoid loosing timeout data when the transaction commit fails. " is 139.
Long Statement,NServiceBus,ExpiredTimeoutsPoller,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\TimeoutManager\ExpiredTimeoutsPoller.cs,SpinOnce,The length of the statement  "                await dispatcher.Dispatch(new TransportOperations(transportOperation)' new TransportTransaction()' new ContextBag()).ConfigureAwait(false); " is 139.
Long Statement,NServiceBus,StoreTimeoutBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\TimeoutManager\StoreTimeoutBehavior.cs,Invoke,The length of the statement  "                    await dispatcher.Dispatch(new TransportOperations(transportOperation)' context.TransportTransaction' context.Extensions).ConfigureAwait(false); " is 143.
Long Statement,NServiceBus,TimeoutManagerConfigurationExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\TimeoutManager\TimeoutManagerConfigurationExtensions.cs,LimitMessageProcessingConcurrencyTo,The length of the statement  "            timeoutManagerConfiguration.settings.Set(TimeoutManagerMaxConcurrencySettingsKey' new PushRuntimeSettings(maxConcurrency)); " is 123.
Long Statement,NServiceBus,TimeoutManagerConfigurationExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\TimeoutManager\TimeoutManagerConfigurationExtensions.cs,GetTimeoutManagerMaxConcurrency,The length of the statement  "            return settings.GetOrDefault<PushRuntimeSettings>(TimeoutManagerMaxConcurrencySettingsKey) ?? PushRuntimeSettings.Default; " is 122.
Long Statement,NServiceBus,EndpointConfiguration,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\EndpointConfiguration.cs,UseContainer,The length of the statement  "            Settings.Get<HostingComponent.Settings>().CustomObjectBuilder = definitionType.Construct<ContainerDefinition>().CreateContainer(Settings); " is 138.
Long Statement,NServiceBus,EndpointConfiguration,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\EndpointConfiguration.cs,ActivateAndInvoke,The length of the statement  "                    throw new Exception($"Unable to create the type '{t.Name}'. Types implementing '{typeof(T).Name}' must have a public parameterless (default) constructor."); " is 156.
Long Statement,NServiceBus,EndpointCreator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\EndpointCreator.cs,Initialize,The length of the statement  "            var featureConfigurationContext = new FeatureConfigurationContext(settings' hostingConfiguration.Container' pipelineSettings' routingConfiguration' receiveConfiguration); " is 170.
Long Statement,NServiceBus,EndpointCreator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\EndpointCreator.cs,Initialize,The length of the statement  "            sendComponent = SendComponent.Initialize(pipelineSettings' hostingConfiguration' routingComponent' messageMapper' transportSeam); " is 129.
Long Statement,NServiceBus,EndpointCreator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\EndpointCreator.cs,Initialize,The length of the statement  "            hostingConfiguration.Container.ConfigureComponent(b => settings.Get<Notifications>()' DependencyLifecycle.SingleInstance); " is 122.
Long Statement,NServiceBus,EndpointCreator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\EndpointCreator.cs,Initialize,The length of the statement  "            // The settings can only be locked after initializing the feature component since it uses the settings to store & share feature state. " is 134.
Long Statement,NServiceBus,InvokeForwardingPipelineBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Forwarding\InvokeForwardingPipelineBehavior.cs,Invoke,The length of the statement  "            var processedMessage = new OutgoingMessage(context.Message.MessageId' new Dictionary<string' string>(context.Message.Headers)' context.Message.Body); " is 149.
Long Statement,NServiceBus,Configuration,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\Helpers\AssemblyScanningComponent.cs,AddSatelliteReceiver,The length of the statement  "                var satelliteDefinition = new SatelliteDefinition(name' transportAddress' TransactionMode' runtimeSettings' recoverabilityPolicy' onMessage); " is 141.
Long Statement,NServiceBus,HostCreator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\HostCreator.cs,CreateWithExternallyManagedContainer,The length of the statement  "            var assemblyScanningComponent = AssemblyScanningComponent.Initialize(settings.Get<AssemblyScanningComponent.Configuration>()' settings); " is 136.
Long Statement,NServiceBus,HostCreator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\HostCreator.cs,CreateWithExternallyManagedContainer,The length of the statement  "            var hostingConfiguration = HostingComponent.PrepareConfiguration(hostingSettings' assemblyScanningComponent' externalContainer); " is 128.
Long Statement,NServiceBus,HostCreator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\HostCreator.cs,CreateWithExternallyManagedContainer,The length of the statement  "                throw new InvalidOperationException("An internally managed container has already been configured using 'EndpointConfiguration.UseContainer'. It is not possible to use both an internally managed container and an externally managed container."); " is 243.
Long Statement,NServiceBus,HostCreator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\HostCreator.cs,CreateWithExternallyManagedContainer,The length of the statement  "            externalContainer.ConfigureComponent(_ => externallyManagedContainerHost.Builder.Value' DependencyLifecycle.SingleInstance); " is 124.
Long Statement,NServiceBus,HostCreator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\HostCreator.cs,CreateWithInternallyManagedContainer,The length of the statement  "            var assemblyScanningComponent = AssemblyScanningComponent.Initialize(settings.Get<AssemblyScanningComponent.Configuration>()' settings); " is 136.
Long Statement,NServiceBus,HostCreator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\HostCreator.cs,CreateWithInternallyManagedContainer,The length of the statement  "            var hostingConfiguration = HostingComponent.PrepareConfiguration(settings.Get<HostingComponent.Settings>()' assemblyScanningComponent' internalContainer); " is 154.
Long Statement,NServiceBus,Settings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\HostingComponent.Settings.cs,ApplyHostIdDefaultIfNeededForV7BackwardsCompatibility,The length of the statement  "                settings.SetDefault(HostIdSettingsKey' DeterministicGuid.Create(fullPathToStartingExe' RuntimeEnvironment.MachineName)); " is 120.
Long Statement,NServiceBus,Host,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\StartupDiagnostics\Host.cs,DeriveAppDataPath,The length of the statement  "            throw new Exception(GetMapPathError($"Failed since path returned ({appDataPath}) does not exist. Ensure this directory is created and restart the endpoint.")); " is 159.
Long Statement,NServiceBus,Host,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\StartupDiagnostics\Host.cs,GetMapPathError,The length of the statement  "            return $"Detected running in a website and attempted to use HostingEnvironment.MapPath(\"~/App_Data/\") to derive the logging path. {reason}"; " is 142.
Long Statement,NServiceBus,HostStartupDiagnosticsWriter,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\StartupDiagnostics\HostStartupDiagnosticsWriter.cs,Write,The length of the statement  "                    logger.Error($"Failed to write startup diagnostics using the custom delegate defined by {nameof(DiagnosticSettingsExtensions.CustomDiagnosticsWriter)}"' exception); " is 164.
Long Statement,NServiceBus,HostStartupDiagnosticsWriterFactory,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\StartupDiagnostics\HostStartupDiagnosticsWriterFactory.cs,BuildDefaultDiagnosticsWriter,The length of the statement  "                    logger.Error("Unable to determine the diagnostics output directory. Check the attached exception for further information' or configure a custom diagnostics directory using 'EndpointConfiguration.SetDiagnosticsPath()'."' e); " is 223.
Long Statement,NServiceBus,HostStartupDiagnosticsWriterFactory,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\StartupDiagnostics\HostStartupDiagnosticsWriterFactory.cs,BuildDefaultDiagnosticsWriter,The length of the statement  "                    logger.Error("Unable to create the diagnostics output directory. Check the attached exception for further information' or change the diagnostics directory using 'EndpointConfiguration.SetDiagnosticsPath()'."' e); " is 212.
Long Statement,NServiceBus,LicenseManager,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Licensing\LicenseManager.cs,LogLicenseStatus,The length of the statement  "                    logger.Warn("Upgrade protection expired. In order for us to continue to provide you with support and new versions of the Particular Service Platform' please extend your upgrade protection by visiting http://go.particular.net/upgrade-protection-expired"); " is 254.
Long Statement,NServiceBus,LicenseManager,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Licensing\LicenseManager.cs,LogLicenseStatus,The length of the statement  "                    logger.WarnFormat("Trial license expiring {0}. To continue using the Particular Service Platform' please extend your trial or purchase a license by visiting http://go.particular.net/trial-expiring"' GetRemainingDaysString(license.GetDaysUntilLicenseExpires())); " is 261.
Long Statement,NServiceBus,LicenseManager,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Licensing\LicenseManager.cs,LogLicenseStatus,The length of the statement  "                    logger.WarnFormat("Platform license expiring {0}. To continue using the Particular Service Platform' please extend your license by visiting http://go.particular.net/license-expiring"' GetRemainingDaysString(license.GetDaysUntilLicenseExpires())); " is 246.
Long Statement,NServiceBus,LicenseManager,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Licensing\LicenseManager.cs,LogLicenseStatus,The length of the statement  "                    logger.WarnFormat("Upgrade protection expiring {0}. In order for us to continue to provide you with support and new versions of the Particular Service Platform' please extend your upgrade protection by visiting http://go.particular.net/upgrade-protection-expiring"' GetRemainingDaysString(license.GetDaysUntilUpgradeProtectionExpires())); " is 338.
Long Statement,NServiceBus,LicenseManager,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Licensing\LicenseManager.cs,LogLicenseStatus,The length of the statement  "                    logger.Error("Trial license expired. To continue using the Particular Service Platform' please extend your trial or purchase a license by visiting http://go.particular.net/trial-expired"); " is 188.
Long Statement,NServiceBus,LicenseManager,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Licensing\LicenseManager.cs,LogLicenseStatus,The length of the statement  "                    logger.Error("Platform license expired. To continue using the Particular Service Platform' please extend your license by visiting http://go.particular.net/license-expired"); " is 173.
Long Statement,NServiceBus,LicenseManager,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Licensing\LicenseManager.cs,LogLicenseStatus,The length of the statement  "                    logger.Error("Upgrade protection expired. In order for us to continue to provide you with support and new versions of the Particular Service Platform' please extend your upgrade protection by visiting http://go.particular.net/upgrade-protection-expired"); " is 255.
Long Statement,NServiceBus,LicenseManager,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Licensing\LicenseManager.cs,LogFindResults,The length of the statement  "                Logger.Warn("Reading license information from the registry has been deprecated and will be removed in version 8.0. See the documentation for more details."); " is 157.
Long Statement,NServiceBus,LicenseManager,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Licensing\LicenseManager.cs,LogFindResults,The length of the statement  "                Logger.Warn("Reading license information from the app config file has been deprecated and will be removed in version 8.0. See the documentation for more details."); " is 164.
Long Statement,NServiceBus,RollingLogger,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Logging\RollingLogger.cs,InnerWrite,The length of the statement  "                var errorMessage = $"NServiceBus.RollingLogger Could not write to log file '{currentfilePath}'. Exception: {exception}"; " is 120.
Long Statement,NServiceBus,LogicalAddress,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\LogicalAddress.cs,CreateIndividualizedAddress,The length of the statement  "            return new LogicalAddress(new EndpointInstance(EndpointInstance.Endpoint' discriminator' EndpointInstance.Properties)' null); " is 125.
Long Statement,NServiceBus,ConcreteProxyCreator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\MessageInterfaces\MessageMapper\Reflection\ConcreteProxyCreator.cs,CreateTypeFrom,The length of the statement  "                    MethodAttributes.Public | MethodAttributes.SpecialName | MethodAttributes.HideBySig | MethodAttributes.Final | MethodAttributes.Virtual | MethodAttributes.VtableLayoutMask' " is 172.
Long Statement,NServiceBus,SettingsExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\obsoletes.cs,LogicalAddress,The length of the statement  "                throw new InvalidOperationException("LogicalAddress isn't available since this endpoint is configured to run in send-only mode."); " is 130.
Long Statement,NServiceBus,SettingsExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\obsoletes.cs,LocalAddress,The length of the statement  "                throw new InvalidOperationException("LocalAddress isn't available since this endpoint is configured to run in send-only mode."); " is 128.
Long Statement,NServiceBus,SettingsExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\obsoletes.cs,InstanceSpecificQueue,The length of the statement  "                throw new InvalidOperationException("Instance-specific queue name isn't available since this endpoint is configured to run in send-only mode."); " is 144.
Long Statement,NServiceBus,ReceiveStatisticsFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Performance\Statistics\ReceiveStatisticsFeature.cs,Setup,The length of the statement  "            context.Pipeline.Register("ProcessingStatistics"' new ProcessingStatisticsBehavior()' "Collects timing for ProcessingStarted and adds the state to determine ProcessingEnded"); " is 175.
Long Statement,NServiceBus,ReceiveStatisticsFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Performance\Statistics\ReceiveStatisticsFeature.cs,Setup,The length of the statement  "            context.Pipeline.Register("AuditProcessingStatistics"' new AuditProcessingStatisticsBehavior()' "Add ProcessingStarted and ProcessingEnded headers"); " is 149.
Long Statement,NServiceBus,TimeToBeReceivedMappings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Performance\TimeToBeReceived\TimeToBeReceivedMappings.cs,TryGetTimeToBeReceived,The length of the statement  "            timeToBeReceived = mappings.GetOrAdd(messageType' type => GetTimeToBeReceived(convention' type' doesTransportSupportDiscardIfNotReceivedBefore)); " is 145.
Long Statement,NServiceBus,TimeToBeReceivedMappings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Performance\TimeToBeReceived\TimeToBeReceivedMappings.cs,GetTimeToBeReceived,The length of the statement  "                throw new Exception("Messages with TimeToBeReceived found but the selected transport does not support this type of restriction. Remove TTBR from messages or select a transport that does support TTBR"); " is 201.
Long Statement,NServiceBus,InMemoryTransactionalStorageFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\InMemory\InMemoryTransactionalStorageFeature.cs,Setup,The length of the statement  "            context.Container.ConfigureComponent<InMemoryTransactionalSynchronizedStorageAdapter>(DependencyLifecycle.SingleInstance); " is 122.
Long Statement,NServiceBus,InMemoryTransactionalSynchronizedStorageAdapter,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\InMemory\InMemoryTransactionalSynchronizedStorageAdapter.cs,TryAdapt,The length of the statement  "                CompletableSynchronizedStorageSession session = new InMemorySynchronizedStorageSession(inMemOutboxTransaction.Transaction); " is 123.
Long Statement,NServiceBus,InMemorySagaPersister,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\InMemory\SagaPersister\InMemorySagaPersister.cs,Save,The length of the statement  "                       throw new InvalidOperationException($"The saga with the correlation id 'Name: {correlationProperty.Name} Value: {correlationProperty.Value}' already exists"); " is 158.
Long Statement,NServiceBus,InMemorySagaPersister,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\InMemory\SagaPersister\InMemorySagaPersister.cs,Save,The length of the statement  "                   throw new Exception("A saga with this identifier already exists. This should never happened as saga identifier are meant to be unique."); " is 137.
Long Statement,NServiceBus,Entry,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\InMemory\SagaPersister\InMemorySagaPersister.cs,CanBeShallowCopied,The length of the statement  "                foreach (var fi in type.GetFields(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy)) " is 136.
Long Statement,NServiceBus,Entry,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\InMemory\SagaPersister\InMemorySagaPersister.cs,GenerateMemberwiseClone,The length of the statement  "                var methodInfo = typeof(object).GetMethod("MemberwiseClone"' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public); " is 131.
Long Statement,NServiceBus,CorrelationId,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\InMemory\SagaPersister\InMemorySagaPersister.cs,Equals,The length of the statement  "                return type == other.type && string.Equals(propertyName' other.propertyName) && propertyValue.Equals(other.propertyValue); " is 122.
Long Statement,NServiceBus,InMemorySubscriptionStorage,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\InMemory\SubscriptionStorage\InMemorySubscriptionStorage.cs,Subscribe,The length of the statement  "            var dict = storage.GetOrAdd(messageType' type => new ConcurrentDictionary<string' Subscriber>(StringComparer.OrdinalIgnoreCase)); " is 129.
Long Statement,NServiceBus,LearningSagaIdGenerator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\Learning\SagaPersister\LearningSagaIdGenerator.cs,Generate,The length of the statement  "            return Generate(context.SagaMetadata.SagaEntityType' context.CorrelationProperty.Name' context.CorrelationProperty.Value); " is 122.
Long Statement,NServiceBus,SagaStorageFile,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\Learning\SagaPersister\SagaStorageFile.cs,OpenWithDelayOnConcurrency,The length of the statement  "                return new SagaStorageFile(new FileStream(filePath' fileAccess' FileAccess.ReadWrite' FileShare.None' DefaultBufferSize' FileOptions.Asynchronous)); " is 148.
Long Statement,NServiceBus,PersistenceStartup,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\PersistenceStartup.cs,Run,The length of the statement  "                    Logger.DebugFormat("Activating persistence '{0}' to provide storage for '{1}' storage."' definition.DefinitionType.Name' storageType); " is 134.
Long Statement,NServiceBus,PersistenceStartup,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\PersistenceStartup.cs,ValidateSagaAndOutboxUseSamePersistence,The length of the statement  "            var sagaPersisterType = enabledPersistences.FirstOrDefault(p => p.SelectedStorages.Contains(typeof(StorageType.Sagas))); " is 120.
Long Statement,NServiceBus,PersistenceStartup,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\PersistenceStartup.cs,ValidateSagaAndOutboxUseSamePersistence,The length of the statement  "            var outboxPersisterType = enabledPersistences.FirstOrDefault(p => p.SelectedStorages.Contains(typeof(StorageType.Outbox))); " is 123.
Long Statement,NServiceBus,PersistenceStartup,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\PersistenceStartup.cs,ValidateSagaAndOutboxUseSamePersistence,The length of the statement  "            var bothFeaturesEnabled = settings.IsFeatureEnabled(typeof(Features.Sagas)) && settings.IsFeatureEnabled(typeof(Features.Outbox)); " is 130.
Long Statement,NServiceBus,PersistenceStartup,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\PersistenceStartup.cs,ValidateSagaAndOutboxUseSamePersistence,The length of the statement  "                throw new Exception($"Sagas and the Outbox need to use the same type of persistence. Saga persistence is configured to use {sagaPersisterType.DefinitionType.Name}. Outbox persistence is configured to use {outboxPersisterType.DefinitionType.Name}."); " is 249.
Long Statement,NServiceBus,BehaviorTypeChecker,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\BehaviorTypeChecker.cs,ThrowIfInvalid,The length of the statement  "                throw new ArgumentException($@"The behavior '{behavior.Name}' is invalid since it does not implement IBehavior<TFrom' TTo>."' paramName); " is 137.
Long Statement,NServiceBus,BehaviorTypeChecker,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\BehaviorTypeChecker.cs,ThrowIfInvalid,The length of the statement  "                throw new ArgumentException($@"The behavior '{behavior.Name}' is invalid since the TFrom {inputContextType} context of IBehavior<TFrom' TTo> is not intended to be used."' paramName); " is 182.
Long Statement,NServiceBus,BehaviorTypeChecker,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\BehaviorTypeChecker.cs,ThrowIfInvalid,The length of the statement  "                throw new ArgumentException($@"The behavior '{behavior.Name}' is invalid since the TTo {outputContextType} context of IBehavior<TFrom' TTo> is not intended to be used."' paramName); " is 181.
Long Statement,NServiceBus,ConnectorContextExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\ConnectorContextExtensions.cs,CreateAuditContext,The length of the statement  "            var connector = (IForkConnector<IIncomingPhysicalMessageContext' IIncomingPhysicalMessageContext' IAuditContext>) forkConnector; " is 128.
Long Statement,NServiceBus,ConnectorContextExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\ConnectorContextExtensions.cs,CreateForwardingContext,The length of the statement  "            var connector = (IForkConnector<IIncomingPhysicalMessageContext' IIncomingPhysicalMessageContext' IForwardingContext>) forwardingContext; " is 137.
Long Statement,NServiceBus,DeserializeMessageConnector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Incoming\DeserializeMessageConnector.cs,Extract,The length of the statement  "                    log.WarnFormat("Could not determine message type from message header '{0}'. MessageId: {1}"' messageTypeIdentifier' physicalMessage.MessageId); " is 143.
Long Statement,NServiceBus,InvokeHandlerTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Incoming\InvokeHandlerTerminator.cs,Terminate,The length of the statement  "            if (context.Extensions.TryGet(out ActiveSagaInstance saga) && saga.NotFound && saga.Metadata.SagaType == context.MessageHandler.Instance.GetType()) " is 147.
Long Statement,NServiceBus,LoadHandlersConnector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Incoming\LoadHandlersConnector.cs,Invoke,The length of the statement  "            using (var storageSession = await AdaptOrOpenNewSynchronizedStorageSession(transportTransaction' outboxTransaction' context.Extensions).ConfigureAwait(false)) " is 158.
Long Statement,NServiceBus,TransportReceiveToPhysicalMessageConnector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Incoming\TransportReceiveToPhysicalMessageConnector.cs,Invoke,The length of the statement  "                var batchDispatchContext = this.CreateBatchDispatchContext(pendingTransportOperations.Operations' physicalMessageContext); " is 122.
Long Statement,NServiceBus,TransportReceiveToPhysicalMessageConnector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Incoming\TransportReceiveToPhysicalMessageConnector.cs,ConvertToOutboxOperations,The length of the statement  "                transportOperations[index] = new TransportOperation(operation.Message.MessageId' options' operation.Message.Body' operation.Message.Headers); " is 141.
Long Statement,NServiceBus,MainPipelineExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\MainPipelineExecutor.cs,Invoke,The length of the statement  "                var transportReceiveContext = new TransportReceiveContext(message' messageContext.TransportTransaction' messageContext.ReceiveCancellationTokenSource' rootContext); " is 164.
Long Statement,NServiceBus,MainPipelineExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\MainPipelineExecutor.cs,Invoke,The length of the statement  "                await receivePipelineNotification.Raise(new ReceivePipelineCompleted(message' pipelineStartedAt' DateTime.UtcNow)).ConfigureAwait(false); " is 137.
Long Statement,NServiceBus,RoutingToDispatchConnector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Outgoing\RoutingToDispatchConnector.cs,Invoke,The length of the statement  "                operations[index] = new TransportOperation(message' addressLabel' dispatchConsistency' context.Extensions.GetDeliveryConstraints()); " is 132.
Long Statement,NServiceBus,SendComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Outgoing\SendComponent.cs,Initialize,The length of the statement  "            pipelineSettings.Register(new AttachSenderRelatedInfoOnMessageBehavior()' "Makes sure that outgoing messages contains relevant info on the sending endpoint."); " is 159.
Long Statement,NServiceBus,SendComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Outgoing\SendComponent.cs,Initialize,The length of the statement  "            pipelineSettings.Register("AuditHostInformation"' new AuditHostInformationBehavior(hostingConfiguration.HostInformation' hostingConfiguration.EndpointName)' "Adds audit host information"); " is 188.
Long Statement,NServiceBus,SendComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Outgoing\SendComponent.cs,Initialize,The length of the statement  "            pipelineSettings.Register("AddHostInfoHeaders"' new AddHostInfoHeadersBehavior(hostingConfiguration.HostInformation' hostingConfiguration.EndpointName)' "Adds host info headers to outgoing headers"); " is 199.
Long Statement,NServiceBus,SendComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Outgoing\SendComponent.cs,Initialize,The length of the statement  "            pipelineSettings.Register("UnicastSendRouterConnector"' new SendConnector(routingComponent.UnicastSendRouter)' "Determines how the message being sent should be routed"); " is 169.
Long Statement,NServiceBus,SendComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Outgoing\SendComponent.cs,Initialize,The length of the statement  "            pipelineSettings.Register("UnicastReplyRouterConnector"' new ReplyConnector()' "Determines how replies should be routed"); " is 122.
Long Statement,NServiceBus,SendComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Outgoing\SendComponent.cs,Initialize,The length of the statement  "            pipelineSettings.Register(new RoutingToDispatchConnector()' "Decides if the current message should be batched or immediately be dispatched to the transport"); " is 158.
Long Statement,NServiceBus,SendComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Outgoing\SendComponent.cs,Initialize,The length of the statement  "            pipelineSettings.Register(new BatchToDispatchConnector()' "Passes batched messages over to the immediate dispatch part of the pipeline"); " is 137.
Long Statement,NServiceBus,SendComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Outgoing\SendComponent.cs,Initialize,The length of the statement  "            pipelineSettings.Register(b => new ImmediateDispatchTerminator(b.Build<IDispatchMessages>())' "Hands the outgoing messages over to the transport for immediate delivery"); " is 170.
Long Statement,NServiceBus,SendComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Outgoing\SendComponent.cs,Initialize,The length of the statement  "            hostingConfiguration.Container.ConfigureComponent(() => sendComponent.GetDispatcher()' DependencyLifecycle.SingleInstance); " is 123.
Long Statement,NServiceBus,SerializeMessageConnector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Outgoing\SerializeMessageConnector.cs,Invoke,The length of the statement  "                await stage(this.CreateOutgoingPhysicalMessageContext(new byte[0]' context.RoutingStrategies' context)).ConfigureAwait(false); " is 126.
Long Statement,NServiceBus,SerializeMessageConnector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Outgoing\SerializeMessageConnector.cs,Invoke,The length of the statement  "            await stage(this.CreateOutgoingPhysicalMessageContext(array' context.RoutingStrategies' context)).ConfigureAwait(false); " is 120.
Long Statement,NServiceBus,PipelineCache,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\PipelineCache.cs,Pipeline,The length of the statement  "            throw new InvalidOperationException($"Pipeline for context `{typeof(TContext).FullName}` not found' custom pipelines are not supported."); " is 138.
Long Statement,NServiceBus,PipelineComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\PipelineComponent.cs,Initialize,The length of the statement  "                hostingConfiguration.Container.ConfigureComponent(registeredBehavior.BehaviorType' DependencyLifecycle.InstancePerCall); " is 120.
Long Statement,NServiceBus,PipelineExecutionExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\PipelineExecutionExtensions.cs,CreatePipelineExecutionExpression,The length of the statement  "                    throw new InvalidOperationException("Behaviors must implement IBehavior<TInContext' TOutContext> and provide an invocation method."); " is 133.
Long Statement,NServiceBus,PipelineExecutionExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\PipelineExecutionExtensions.cs,CreatePipelineExecutionExpression,The length of the statement  "                    lambdaExpression = CreateBehaviorCallDelegate(currentBehavior' methodInfo' inContextParameter' doneDelegate' expressions); " is 122.
Long Statement,NServiceBus,PipelineExecutionExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\PipelineExecutionExtensions.cs,CreatePipelineExecutionExpression,The length of the statement  "                lambdaExpression = CreateBehaviorCallDelegate(currentBehavior' methodInfo' inContextParameter' lambdaExpression' expressions); " is 126.
Long Statement,NServiceBus,PipelineExecutionExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\PipelineExecutionExtensions.cs,CreateBehaviorCallDelegate,The length of the statement  "            var body = ExpressionInfo.Call(ExpressionInfo.Constant(currentBehavior)' methodInfo' outerContextParam' ExpressionInfo.Constant(previous)); " is 139.
Long Statement,NServiceBus,PipelineModelBuilder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\PipelineModelBuilder.cs,Build,The length of the statement  "                var message = $"Step registration with id '{metadata.StepId}' is already registered for '{registrations[metadata.StepId].BehaviorType}'."; " is 138.
Long Statement,NServiceBus,PipelineModelBuilder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\PipelineModelBuilder.cs,Build,The length of the statement  "                    var message = $"You can only replace an existing step registration' '{metadata.ReplaceId}' registration does not exist."; " is 121.
Long Statement,NServiceBus,PipelineModelBuilder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\PipelineModelBuilder.cs,Build,The length of the statement  "                    var add = additions.First(mr => (mr.Befores != null && mr.Befores.Select(b => b.DependsOnId).Contains(metadata.RemoveId' StringComparer.CurrentCultureIgnoreCase)) || " is 165.
Long Statement,NServiceBus,PipelineModelBuilder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\PipelineModelBuilder.cs,Build,The length of the statement  "                                                    (mr.Afters != null && mr.Afters.Select(b => b.DependsOnId).Contains(metadata.RemoveId' StringComparer.CurrentCultureIgnoreCase))); " is 130.
Long Statement,NServiceBus,PipelineModelBuilder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\PipelineModelBuilder.cs,Build,The length of the statement  "                    var message = $"You cannot remove step registration with id '{metadata.RemoveId}'' registration with id '{add.StepId}' depends on it."; " is 135.
Long Statement,NServiceBus,PipelineModelBuilder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\PipelineModelBuilder.cs,Build,The length of the statement  "                    throw new Exception($"Multiple stage connectors found for stage '{currentStage.Key.FullName}'. Remove one of: {connectors}"); " is 125.
Long Statement,NServiceBus,PipelineModelBuilder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\PipelineModelBuilder.cs,ProcessBefores,The length of the statement  "                var message = $"Registration '{beforeReference.DependsOnId}' specified in the insertbefore of the '{node.StepId}' step does not exist. Current StepIds: {currentStepIds}"; " is 170.
Long Statement,NServiceBus,PipelineModelBuilder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\PipelineModelBuilder.cs,ProcessAfters,The length of the statement  "                var message = $"Registration '{afterReference.DependsOnId}' specified in the insertafter of the '{node.StepId}' step does not exist. Current StepIds: {currentStepIds}"; " is 168.
Long Statement,NServiceBus,StepRegistrationsCoordinator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\StepRegistrationsCoordinator.cs,BuildPipelineModelFor,The length of the statement  "            var pipelineModelBuilder = new PipelineModelBuilder(typeof(TRootContext)' additions' relevantRemovals' relevantReplacements); " is 125.
Long Statement,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,PrepareConfiguration,The length of the statement  "                throw new Exception($"Specifying a base name for the input queue using `{nameof(ReceiveSettingsExtensions.OverrideLocalAddress)}(baseInputQueueName)` is not supported for send-only endpoints."); " is 194.
Long Statement,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,PrepareConfiguration,The length of the statement  "            var mainInstanceProperties = transportInfrastructure.BindToLocalEndpoint(new EndpointInstance(endpointName)).Properties; " is 120.
Long Statement,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,PrepareConfiguration,The length of the statement  "                instanceSpecificQueue = transportInfrastructure.ToTransportAddress(logicalAddress.CreateIndividualizedAddress(discriminator)); " is 126.
Long Statement,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,Initialize,The length of the statement  "                var storage = hostingConfiguration.Container.HasComponent<IOutboxStorage>() ? b.Build<IOutboxStorage>() : new NoOpOutboxStorage(); " is 130.
Long Statement,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,Initialize,The length of the statement  "                var adapter = hostingConfiguration.Container.HasComponent<ISynchronizedStorageAdapter>() ? b.Build<ISynchronizedStorageAdapter>() : new NoOpSynchronizedStorageAdapter(); " is 169.
Long Statement,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,Initialize,The length of the statement  "                var syncStorage = hostingConfiguration.Container.HasComponent<ISynchronizedStorage>() ? b.Build<ISynchronizedStorage>() : new NoOpSynchronizedStorage(); " is 152.
Long Statement,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,Initialize,The length of the statement  "                LoadMessageHandlers(configuration' orderedHandlers' hostingConfiguration.Container' hostingConfiguration.AvailableTypes); " is 121.
Long Statement,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,GetRequiredTransactionMode,The length of the statement  "                throw new Exception($"Requested transaction mode `{requestedTransportTransactionMode}` can't be satisfied since the transport only supports `{transportTransactionSupport}`"); " is 174.
Long Statement,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,PrepareToStart,The length of the statement  "            mainPipelineExecutor = new MainPipelineExecutor(builder' pipelineCache' messageOperations' configuration.PipelineCompletedSubscribers' receivePipeline); " is 152.
Long Statement,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,PrepareToStart,The length of the statement  "            AddReceivers(builder' recoverabilityComponent.GetRecoverabilityExecutorFactory(builder)' transportReceiveInfrastructure.MessagePumpFactory); " is 140.
Long Statement,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,AddReceivers,The length of the statement  "            var pushSettings = new PushSettings(configuration.LocalAddress' errorQueue' configuration.PurgeOnStartup' requiredTransactionSupport); " is 134.
Long Statement,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,AddReceivers,The length of the statement  "            receivers.Add(new TransportReceiver(MainReceiverId' messagePumpFactory()' pushSettings' dequeueLimitations' mainPipelineExecutor' recoverabilityExecutor' criticalError)); " is 170.
Long Statement,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,AddReceivers,The length of the statement  "                var sharedReceiverPushSettings = new PushSettings(instanceSpecificQueue' errorQueue' configuration.PurgeOnStartup' requiredTransactionSupport); " is 143.
Long Statement,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,AddReceivers,The length of the statement  "                receivers.Add(new TransportReceiver(MainReceiverId' messagePumpFactory()' sharedReceiverPushSettings' dequeueLimitations' mainPipelineExecutor' instanceSpecificRecoverabilityExecutor' criticalError)); " is 200.
Long Statement,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,AddReceivers,The length of the statement  "                var satelliteRecoverabilityExecutor = recoverabilityExecutorFactory.Create(satellitePipeline.RecoverabilityPolicy' satellitePipeline.ReceiveAddress); " is 149.
Long Statement,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,AddReceivers,The length of the statement  "                var satellitePushSettings = new PushSettings(satellitePipeline.ReceiveAddress' errorQueue' configuration.PurgeOnStartup' satellitePipeline.RequiredTransportTransactionMode); " is 173.
Long Statement,NServiceBus,ReceiveComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Receiving\ReceiveComponent.Configuration.cs,AddReceivers,The length of the statement  "                receivers.Add(new TransportReceiver(satellitePipeline.Name' messagePumpFactory()' satellitePushSettings' satellitePipeline.RuntimeSettings' new SatellitePipelineExecutor(builder' satellitePipeline)' satelliteRecoverabilityExecutor' criticalError)); " is 248.
Long Statement,NServiceBus,DelayedRetryExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\DelayedRetryExecutor.cs,Retry,The length of the statement  "            var outgoingMessage = new OutgoingMessage(message.MessageId' new Dictionary<string' string>(message.Headers)' message.Body); " is 124.
Long Statement,NServiceBus,DelayedRetryExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\DelayedRetryExecutor.cs,Retry,The length of the statement  "                outgoingMessage.Headers[TimeoutManagerHeaders.Expire] = DateTimeExtensions.ToWireFormattedString(DateTime.UtcNow + delay); " is 122.
Long Statement,NServiceBus,DelayedRetryExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\DelayedRetryExecutor.cs,Retry,The length of the statement  "            var transportOperations = new TransportOperations(new TransportOperation(outgoingMessage' messageDestination' deliveryConstraints: deliveryConstraints)); " is 153.
Long Statement,NServiceBus,MoveToErrorsExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\MoveToErrorsExecutor.cs,MoveToErrorQueue,The length of the statement  "            var outgoingMessage = new OutgoingMessage(message.MessageId' new Dictionary<string' string>(message.Headers)' message.Body); " is 124.
Long Statement,NServiceBus,MoveToErrorsExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\MoveToErrorsExecutor.cs,MoveToErrorQueue,The length of the statement  "            var transportOperations = new TransportOperations(new TransportOperation(outgoingMessage' new UnicastAddressTag(errorQueueAddress))); " is 133.
Long Statement,NServiceBus,RecoverabilityComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\RecoverabilityComponent.cs,CreateRecoverabilityExecutorFactory,The length of the statement  "                                          && (settings.DoesTransportSupportConstraint<DelayedDeliveryConstraint>() || settings.Get<TimeoutManagerAddressConfiguration>().TransportAddress != null); " is 153.
Long Statement,NServiceBus,RecoverabilityComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\RecoverabilityComponent.cs,GetImmediateRetryConfig,The length of the statement  "                Logger.Warn("Immediate Retries will be disabled. Immediate Retries are not supported when running with TransportTransactionMode.None. Failed messages will be moved to the error queue instead."); " is 194.
Long Statement,NServiceBus,RecoverabilityComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\RecoverabilityComponent.cs,GetDelayedRetryConfig,The length of the statement  "                Logger.Warn("Delayed Retries will be disabled. Delayed retries are not supported when running with TransportTransactionMode.None. Failed messages will be moved to the error queue instead."); " is 190.
Long Statement,NServiceBus,RecoverabilityExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\RecoverabilityExecutor.cs,Invoke,The length of the statement  "                Logger.Info($"Discarding message with id '{errorContext.Message.MessageId}'. Reason: {discard.Reason}"' errorContext.Exception); " is 128.
Long Statement,NServiceBus,RecoverabilityExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\RecoverabilityExecutor.cs,Invoke,The length of the statement  "                Logger.Warn("Recoverability policy requested ImmediateRetry however immediate retries are not available with the current endpoint configuration. Moving message to error queue instead."); " is 186.
Long Statement,NServiceBus,RecoverabilityExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\RecoverabilityExecutor.cs,Invoke,The length of the statement  "                Logger.Warn("Recoverability policy requested DelayedRetry however delayed delivery capability is not available with the current endpoint configuration. Moving message to error queue instead."); " is 193.
Long Statement,NServiceBus,RecoverabilityExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\RecoverabilityExecutor.cs,Invoke,The length of the statement  "            Logger.Warn("Recoverability policy returned an unsupported recoverability action. Moving message to error queue instead."); " is 123.
Long Statement,NServiceBus,RecoverabilityExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\RecoverabilityExecutor.cs,RaiseImmediateRetryNotifications,The length of the statement  "            Logger.Info($"Immediate Retry is going to retry message '{errorContext.Message.MessageId}' because of an exception:"' errorContext.Exception); " is 142.
Long Statement,NServiceBus,RecoverabilityExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\RecoverabilityExecutor.cs,MoveToError,The length of the statement  "            Logger.Error($"Moving message '{message.MessageId}' to the error queue '{errorQueue}' because processing failed due to an exception:"' errorContext.Exception); " is 159.
Long Statement,NServiceBus,RecoverabilityExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\RecoverabilityExecutor.cs,MoveToError,The length of the statement  "            await moveToErrorsExecutor.MoveToErrorQueue(errorQueue' message' errorContext.Exception' errorContext.TransportTransaction).ConfigureAwait(false); " is 146.
Long Statement,NServiceBus,RecoverabilityExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\RecoverabilityExecutor.cs,DeferMessage,The length of the statement  "            Logger.Warn($"Delayed Retry will reschedule message '{message.MessageId}' after a delay of {action.Delay} because of an exception:"' errorContext.Exception); " is 157.
Long Statement,NServiceBus,RecoverabilityExecutor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\RecoverabilityExecutor.cs,DeferMessage,The length of the statement  "            var currentDelayedRetriesAttempts = await delayedRetryExecutor.Retry(message' action.Delay' errorContext.TransportTransaction).ConfigureAwait(false); " is 149.
Long Statement,NServiceBus,DelayedRetriesSettings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\Settings\DelayedRetriesSettings.cs,OnMessageBeingRetried,The length of the statement  "                return notificationCallback(new DelayedRetryMessage(retry.Message.MessageId' headerCopy' bodyCopy' retry.Exception' retry.Attempt)); " is 132.
Long Statement,NServiceBus,ImmediateRetriesSettings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\Settings\ImmediateRetriesSettings.cs,OnMessageBeingRetried,The length of the statement  "                return notificationCallback(new ImmediateRetryMessage(retry.Message.MessageId' headerCopy' bodyCopy' retry.Exception' retry.Attempt)); " is 134.
Long Statement,NServiceBus,RetryFailedSettings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\Settings\RetryFailedSettings.cs,OnMessageSentToErrorQueue,The length of the statement  "                return notificationCallback(new FailedMessage(faulted.Message.MessageId' headerCopy' bodyCopy' faulted.Exception' faulted.ErrorQueue)); " is 135.
Long Statement,NServiceBus,ApplyReplyToAddressBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\ApplyReplyToAddressBehavior.cs,Invoke,The length of the statement  "                throw new InvalidOperationException("Cannot route a reply to a specific instance because an endpoint instance discriminator was not configured for the destination endpoint. It can be specified via EndpointConfiguration.MakeInstanceUniquelyAddressable(string discriminator)."); " is 276.
Long Statement,NServiceBus,AssemblyRouteSource,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\AssemblyRouteSource.cs,GenerateRoutes,The length of the statement  "                throw new Exception($"Cannot configure routing for assembly {messageAssembly.GetName().Name} because it contains no types considered as messages. Message types have to either implement NServiceBus.IMessage interface or match a defined message convention."); " is 257.
Long Statement,NServiceBus,DistributionPolicy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\DistributionPolicy.cs,GetDistributionStrategy,The length of the statement  "            return configuredStrategies.GetOrAdd(Tuple.Create(endpointName' scope)' key => new SingleInstanceRoundRobinDistributionStrategy(key.Item1' key.Item2)); " is 151.
Long Statement,NServiceBus,AssemblyPublisherSource,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\AssemblyPublisherSource.cs,GenerateWithBestPracticeEnforcement,The length of the statement  "                throw new Exception($"Cannot configure publisher for assembly {messageAssembly.GetName().Name} because it contains no types considered as events. Event types have to either implement NServiceBus.IEvent interface or match a defined event convention."); " is 251.
Long Statement,NServiceBus,AssemblyPublisherSource,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\AssemblyPublisherSource.cs,GenerateWithoutBestPracticeEnforcement,The length of the statement  "                throw new Exception($"Cannot configure publisher for assembly {messageAssembly.GetName().Name} because it contains no types considered as messages. Message types have to either implement NServiceBus.IMessage interface or match a defined convention."); " is 251.
Long Statement,NServiceBus,DisabledPublishingTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\DisabledPublishingTerminator.cs,Terminate,The length of the statement  "            throw new InvalidOperationException("Publishing has been explicitly disabled on this endpoint. Remove 'transportSettings.DisablePublishing()' to enable publishing again."); " is 172.
Long Statement,NServiceBus,MessageDrivenSubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscribeTerminator.cs,Terminate,The length of the statement  "                throw new Exception($"No publisher address could be found for message type '{eventType}'. Ensure that a publisher has been configured for the event type and that the configured publisher endpoint has at least one known instance."); " is 231.
Long Statement,NServiceBus,MessageDrivenSubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscribeTerminator.cs,Terminate,The length of the statement  "                subscribeTasks.Add(SendSubscribeMessageWithRetries(publisherAddress' subscriptionMessage' eventType.AssemblyQualifiedName' context.Extensions)); " is 144.
Long Statement,NServiceBus,MessageDrivenSubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscribeTerminator.cs,SendSubscribeMessageWithRetries,The length of the statement  "                await dispatcher.Dispatch(new TransportOperations(transportOperation)' transportTransaction' context).ConfigureAwait(false); " is 124.
Long Statement,NServiceBus,MessageDrivenSubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscribeTerminator.cs,SendSubscribeMessageWithRetries,The length of the statement  "                    await SendSubscribeMessageWithRetries(destination' subscriptionMessage' messageType' context' ++retriesCount).ConfigureAwait(false); " is 132.
Long Statement,NServiceBus,MessageDrivenSubscriptionsConfigExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscriptionsConfigExtensions.cs,RegisterPublisher,The length of the statement  "            routingSettings.Settings.GetOrCreate<ConfiguredPublishers>().Add(new TypePublisherSource(eventType' PublisherAddress.CreateFromEndpointName(publisherEndpoint))); " is 161.
Long Statement,NServiceBus,MessageDrivenSubscriptionsConfigExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscriptionsConfigExtensions.cs,RegisterPublisher,The length of the statement  "            routingSettings.Settings.GetOrCreate<ConfiguredPublishers>().Add(new AssemblyPublisherSource(assembly' PublisherAddress.CreateFromEndpointName(publisherEndpoint))); " is 164.
Long Statement,NServiceBus,MessageDrivenSubscriptionsConfigExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscriptionsConfigExtensions.cs,RegisterPublisher,The length of the statement  "            routingSettings.Settings.GetOrCreate<ConfiguredPublishers>().Add(new NamespacePublisherSource(assembly' @namespace' PublisherAddress.CreateFromEndpointName(publisherEndpoint))); " is 177.
Long Statement,NServiceBus,MessageDrivenSubscriptionsConfigExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscriptionsConfigExtensions.cs,ThrowOnAddress,The length of the statement  "                throw new ArgumentException($"A logical endpoint name should not contain '@'' but received '{publisherEndpoint}'. To specify an endpoint's address' use the instance mapping file for the MSMQ transport' or refer to the routing documentation."); " is 243.
Long Statement,NServiceBus,MessageDrivenUnsubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenUnsubscribeTerminator.cs,Terminate,The length of the statement  "                throw new Exception( $"No publisher address could be found for message type {eventType}. Ensure the configured publisher endpoint has at least one known instance."); " is 165.
Long Statement,NServiceBus,MessageDrivenUnsubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenUnsubscribeTerminator.cs,Terminate,The length of the statement  "                unsubscribeTasks.Add(SendUnsubscribeMessageWithRetries(publisherAddress' unsubscribeMessage' eventType.AssemblyQualifiedName' context.Extensions)); " is 147.
Long Statement,NServiceBus,MessageDrivenUnsubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenUnsubscribeTerminator.cs,SendUnsubscribeMessageWithRetries,The length of the statement  "                await dispatcher.Dispatch(new TransportOperations(transportOperation)' transportTransaction' context).ConfigureAwait(false); " is 124.
Long Statement,NServiceBus,MessageDrivenUnsubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenUnsubscribeTerminator.cs,SendUnsubscribeMessageWithRetries,The length of the statement  "                    await SendUnsubscribeMessageWithRetries(destination' unsubscribeMessage' messageType' context' ++retriesCount).ConfigureAwait(false); " is 133.
Long Statement,NServiceBus,NamespacePublisherSource,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\NamespacePublisherSource.cs,GenerateWithBestPracticeEnforcement,The length of the statement  "                .Where(t => conventions.IsEventType(t) && string.Equals(t.Namespace' messageNamespace' StringComparison.OrdinalIgnoreCase)) " is 123.
Long Statement,NServiceBus,NamespacePublisherSource,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\NamespacePublisherSource.cs,GenerateWithBestPracticeEnforcement,The length of the statement  "                throw new Exception($"Cannot configure publisher for namespace {messageNamespace} because it contains no types considered as events. Event types have to either implement NServiceBus.IEvent interface or match a defined event convention."); " is 238.
Long Statement,NServiceBus,NamespacePublisherSource,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\NamespacePublisherSource.cs,GenerateWithoutBestPracticeEnforcement,The length of the statement  "                .Where(t => conventions.IsMessageType(t) && !conventions.IsCommandType(t) && string.Equals(t.Namespace' messageNamespace' StringComparison.OrdinalIgnoreCase)) " is 158.
Long Statement,NServiceBus,NamespacePublisherSource,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\NamespacePublisherSource.cs,GenerateWithoutBestPracticeEnforcement,The length of the statement  "                throw new Exception($"Cannot configure publisher for namespace {messageNamespace} because it contains no types considered as messages. Message types have to either implement NServiceBus.IMessage interface or match a defined convention."); " is 238.
Long Statement,NServiceBus,SubscriptionReceiverBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\SubscriptionReceiverBehavior.cs,Invoke,The length of the statement  "            if (string.IsNullOrEmpty(messageTypeString) && intent != MessageIntentEnum.Subscribe && intent != MessageIntentEnum.Unsubscribe) " is 128.
Long Statement,NServiceBus,SubscriptionReceiverBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\SubscriptionReceiverBehavior.cs,Invoke,The length of the statement  "                throw new InvalidOperationException("Message intent is Subscribe' but the subscription message type header is missing."); " is 121.
Long Statement,NServiceBus,SubscriptionReceiverBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\SubscriptionReceiverBehavior.cs,Invoke,The length of the statement  "                var warning = $"Subscription message from {subscriberAddress} arrived at this endpoint' yet this endpoint is not configured to be a publisher. To avoid this warning make this endpoint a publisher by configuring a subscription storage."; " is 236.
Long Statement,NServiceBus,SubscriptionReceiverBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\SubscriptionReceiverBehavior.cs,Invoke,The length of the statement  "            await subscriptionStorage.Unsubscribe(subscriber' new MessageType(messageTypeString)' context.Extensions).ConfigureAwait(false); " is 128.
Long Statement,NServiceBus,SubscriptionRouter,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\SubscriptionRouter.cs,GetAddressesForEventType,The length of the statement  "                publisherTransportAddresses.AddRange(publisherAddress.Resolve(e => endpointInstances.FindInstances(e)' i => transportAddressTranslation(i))); " is 141.
Long Statement,NServiceBus,TypePublisherSource,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\TypePublisherSource.cs,GenerateWithBestPracticeEnforcement,The length of the statement  "                throw new Exception($"Cannot configure publisher for type '{messageType.FullName}' because it is not considered a message. Message types have to either implement NServiceBus.IMessage interface or match a defined message convention."); " is 234.
Long Statement,NServiceBus,TypePublisherSource,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\TypePublisherSource.cs,GenerateWithBestPracticeEnforcement,The length of the statement  "                throw new Exception($"Cannot configure publisher for type '{messageType.FullName}' because it is not considered an event. Event types have to either implement NServiceBus.IEvent interface or match a defined event convention."); " is 227.
Long Statement,NServiceBus,TypePublisherSource,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\TypePublisherSource.cs,GenerateWithoutBestPracticeEnforcement,The length of the statement  "                throw new Exception($"Cannot configure publisher for type '{messageType.FullName}' because it is not considered a message. Message types have to either implement NServiceBus.IMessage interface or match a defined message convention."); " is 234.
Long Statement,NServiceBus,Validations,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessagingBestPractices\Validations.cs,AssertIsValidForSend,The length of the statement  "            throw new Exception($"Best practice violation for message type '{messageType.FullName}'. Events can have multiple recipients' so they should be published."); " is 157.
Long Statement,NServiceBus,Validations,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessagingBestPractices\Validations.cs,AssertIsValidForReply,The length of the statement  "            throw new Exception($"Best practice violation for message type '{messageType.FullName}'. Reply is not supported for commands or events. Commands should be sent to their logical owner. Events should be published."); " is 214.
Long Statement,NServiceBus,Validations,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessagingBestPractices\Validations.cs,AssertIsValidForPubSub,The length of the statement  "                throw new Exception($"Best practice violation for message type '{messageType.FullName}'. Pub/sub is not supported for commands' so they should be be sent to their logical owner instead."); " is 188.
Long Statement,NServiceBus,Validations,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessagingBestPractices\Validations.cs,AssertIsValidForPubSub,The length of the statement  "                Log.Warn($"You are using a basic message to do pub/sub. Consider implementing the more specific ICommand and IEvent interfaces on the type '{messageType.FullName}' to help NServiceBus to enforce messaging best practices for you."); " is 231.
Long Statement,NServiceBus,NamespaceRouteSource,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\NamespaceRouteSource.cs,GenerateRoutes,The length of the statement  "                .Where(t => conventions.IsMessageType(t) && string.Equals(t.Namespace' messageNamespace' StringComparison.OrdinalIgnoreCase)) " is 125.
Long Statement,NServiceBus,NamespaceRouteSource,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\NamespaceRouteSource.cs,GenerateRoutes,The length of the statement  "                throw new Exception($"Cannot configure routing for namespace {messageNamespace} because it contains no types considered as messages. Message types have to either implement NServiceBus.IMessage interface or match a defined message convention."); " is 244.
Long Statement,NServiceBus,ReplyConnector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\Routers\ReplyConnector.cs,Invoke,The length of the statement  "                throw new Exception($"The destination queue '{ex.Queue}' could not be found. It may be the case that the given queue hasn't been created yet' or has been deleted."' ex); " is 169.
Long Statement,NServiceBus,SendConnector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\Routers\SendConnector.cs,Invoke,The length of the statement  "            var logicalMessageContext = this.CreateOutgoingLogicalMessageContext(context.Message' new[] { routingStrategy }' context); " is 122.
Long Statement,NServiceBus,SendConnector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\Routers\SendConnector.cs,Invoke,The length of the statement  "                throw new Exception($"The destination queue '{ex.Queue}' could not be found. The destination may be misconfigured for this kind of message ({context.Message.MessageType}) in the routing section of the transport configuration. It may also be the case that the given queue hasn't been created yet' or has been deleted."' ex); " is 323.
Long Statement,NServiceBus,UnicastPublishConnector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\Routers\UnicastPublishConnector.cs,Invoke,The length of the statement  "                throw new Exception($"The destination queue '{ex.Queue}' could not be found. The destination may be misconfigured for this kind of message ({context.Message.MessageType}) in the routing section of the transport configuration. It may also be the case that the given queue hasn\'t been created yet' or has been deleted."' ex); " is 324.
Long Statement,NServiceBus,RoutingOptionExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\RoutingOptionExtensions.cs,GetRouteToSpecificInstance,The length of the statement  "            if (options.Context.TryGet(out UnicastSendRouter.State state) && state.Option == UnicastSendRouter.RouteOption.RouteToSpecificInstance) " is 135.
Long Statement,NServiceBus,RoutingOptionExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\RoutingOptionExtensions.cs,GetReplyToRoute,The length of the statement  "            if (options.Context.TryGet(out ApplyReplyToAddressBehavior.State state) && state.Option == ApplyReplyToAddressBehavior.RouteOption.ExplicitReplyDestination) " is 156.
Long Statement,NServiceBus,RoutingOptionExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\RoutingOptionExtensions.cs,GetReplyToRoute,The length of the statement  "            if (options.Context.TryGet(out ApplyReplyToAddressBehavior.State state) && state.Option == ApplyReplyToAddressBehavior.RouteOption.ExplicitReplyDestination) " is 156.
Long Statement,NServiceBus,RoutingSettings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\RoutingSettings.cs,RouteToEndpoint,The length of the statement  "            Settings.Get<RoutingComponent.Settings>().ConfiguredUnicastRoutes.Add(new TypeRouteSource(messageType' UnicastRoute.CreateFromEndpointName(destination))); " is 154.
Long Statement,NServiceBus,RoutingSettings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\RoutingSettings.cs,RouteToEndpoint,The length of the statement  "            Settings.Get<RoutingComponent.Settings>().ConfiguredUnicastRoutes.Add(new AssemblyRouteSource(assembly' UnicastRoute.CreateFromEndpointName(destination))); " is 155.
Long Statement,NServiceBus,RoutingSettings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\RoutingSettings.cs,RouteToEndpoint,The length of the statement  "            Settings.Get<RoutingComponent.Settings>().ConfiguredUnicastRoutes.Add(new NamespaceRouteSource(assembly' @namespace' UnicastRoute.CreateFromEndpointName(destination))); " is 168.
Long Statement,NServiceBus,RoutingSettings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\RoutingSettings.cs,ThrowOnAddress,The length of the statement  "                throw new ArgumentException($"A logical endpoint name should not contain '@'' but received '{destination}'. To specify an endpoint's address' use the instance mapping file for the MSMQ transport' or refer to the routing documentation."); " is 237.
Long Statement,NServiceBus,SendOnlySubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SendOnlySubscribeTerminator.cs,Terminate,The length of the statement  "            throw new InvalidOperationException("Send-only endpoints cannot subscribe to events. Remove the 'endpointConfiguration.SendOnly()' configuration to enable this endpoint to subscribe to events."); " is 195.
Long Statement,NServiceBus,SendOnlyUnsubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SendOnlyUnsubscribeTerminator.cs,Terminate,The length of the statement  "            throw new InvalidOperationException("Send-only endpoints cannot unsubscribe to events. Remove the 'endpointConfiguration.SendOnly()' configuration to enable this endpoint to unsubscribe to events."); " is 199.
Long Statement,NServiceBus,MigrationModePublishConnector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\MigrationModePublishConnector.cs,Invoke,The length of the statement  "                throw new Exception($"The destination queue '{ex.Queue}' could not be found. The destination may be misconfigured for this kind of message ({context.Message.MessageType}) in the routing section of the transport configuration. It may also be the case that the given queue hasn\'t been created yet' or has been deleted."' ex); " is 324.
Long Statement,NServiceBus,MigrationSubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\MigrationSubscribeTerminator.cs,Terminate,The length of the statement  "                subscribeTasks.Add(SendSubscribeMessageWithRetries(publisherAddress' subscriptionMessage' eventType.AssemblyQualifiedName' context.Extensions)); " is 144.
Long Statement,NServiceBus,MigrationSubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\MigrationSubscribeTerminator.cs,SendSubscribeMessageWithRetries,The length of the statement  "                await dispatcher.Dispatch(new TransportOperations(transportOperation)' transportTransaction' context).ConfigureAwait(false); " is 124.
Long Statement,NServiceBus,MigrationSubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\MigrationSubscribeTerminator.cs,SendSubscribeMessageWithRetries,The length of the statement  "                    await SendSubscribeMessageWithRetries(destination' subscriptionMessage' messageType' context' ++retriesCount).ConfigureAwait(false); " is 132.
Long Statement,NServiceBus,MigrationUnsubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\MigrationUnsubscribeTerminator.cs,Terminate,The length of the statement  "                unsubscribeTasks.Add(SendUnsubscribeMessageWithRetries(publisherAddress' unsubscribeMessage' eventType.AssemblyQualifiedName' context.Extensions)); " is 147.
Long Statement,NServiceBus,MigrationUnsubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\MigrationUnsubscribeTerminator.cs,SendUnsubscribeMessageWithRetries,The length of the statement  "                await dispatcher.Dispatch(new TransportOperations(transportOperation)' transportTransaction' context).ConfigureAwait(false); " is 124.
Long Statement,NServiceBus,MigrationUnsubscribeTerminator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\MigrationUnsubscribeTerminator.cs,SendUnsubscribeMessageWithRetries,The length of the statement  "                    await SendUnsubscribeMessageWithRetries(destination' unsubscribeMessage' messageType' context' ++retriesCount).ConfigureAwait(false); " is 133.
Long Statement,NServiceBus,SubscriptionMigrationModeSettings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\SubscriptionMigrationModeSettings.cs,RegisterPublisher,The length of the statement  "            Settings.GetOrCreate<ConfiguredPublishers>().Add(new TypePublisherSource(eventType' PublisherAddress.CreateFromEndpointName(publisherEndpoint))); " is 145.
Long Statement,NServiceBus,SubscriptionMigrationModeSettings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\SubscriptionMigrationModeSettings.cs,RegisterPublisher,The length of the statement  "            Settings.GetOrCreate<ConfiguredPublishers>().Add(new AssemblyPublisherSource(assembly' PublisherAddress.CreateFromEndpointName(publisherEndpoint))); " is 148.
Long Statement,NServiceBus,SubscriptionMigrationModeSettings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\SubscriptionMigrationModeSettings.cs,RegisterPublisher,The length of the statement  "            Settings.GetOrCreate<ConfiguredPublishers>().Add(new NamespacePublisherSource(assembly' @namespace' PublisherAddress.CreateFromEndpointName(publisherEndpoint))); " is 161.
Long Statement,NServiceBus,SubscriptionMigrationModeSettings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\SubscriptionMigrationModeSettings.cs,ThrowOnAddress,The length of the statement  "                throw new ArgumentException($"A logical endpoint name should not contain '@'' but received '{publisherEndpoint}'. To specify an endpoint's address' use the instance mapping file for the MSMQ transport' or refer to the routing documentation."); " is 243.
Long Statement,NServiceBus,TypeRouteSource,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\TypeRouteSource.cs,GenerateRoutes,The length of the statement  "                throw new Exception($"Cannot configure routing for type '{messageType.FullName}' because it is not considered a message. Message types have to either implement NServiceBus.IMessage interface or match a defined message convention."); " is 232.
Long Statement,NServiceBus,UnicastPublishRouter,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\UnicastPublishRouter.cs,SelectDestinationsForEachEndpoint,The length of the statement  "            //Make sure we are sending only one to each transport destination. Might happen when there are multiple routing information sources. " is 132.
Long Statement,NServiceBus,UnicastPublishRouter,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\UnicastPublishRouter.cs,SelectDestinationsForEachEndpoint,The length of the statement  "                    var distributionContext = new DistributionContext(instances' publishContext.Message' publishContext.MessageId' publishContext.Headers' transportAddressTranslation' publishContext.Extensions); " is 191.
Long Statement,NServiceBus,UnicastPublishRouter,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\UnicastPublishRouter.cs,SelectDestinationsForEachEndpoint,The length of the statement  "                    var subscriber = distributionPolicy.GetDistributionStrategy(group.Key' DistributionStrategyScope.Publish).SelectDestination(distributionContext); " is 145.
Long Statement,NServiceBus,UnicastSendRouter,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\UnicastSendRouter.cs,RouteToThisInstance,The length of the statement  "                throw new InvalidOperationException("Cannot route to this instance since the endpoint is configured to be in send-only mode."); " is 127.
Long Statement,NServiceBus,UnicastSendRouter,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\UnicastSendRouter.cs,RouteToThisInstance,The length of the statement  "                throw new InvalidOperationException("Cannot route to a specific instance because an endpoint instance discriminator was not configured for the destination endpoint. It can be specified via EndpointConfiguration.MakeInstanceUniquelyAddressable(string discriminator)."); " is 268.
Long Statement,NServiceBus,UnicastSendRouter,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\UnicastSendRouter.cs,RouteToAnyInstance,The length of the statement  "                throw new InvalidOperationException("Cannot route to instances of this endpoint since it's configured to be in send-only mode."); " is 129.
Long Statement,NServiceBus,UnicastSendRouter,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\UnicastSendRouter.cs,RouteToSpecificInstance,The length of the statement  "                throw new Exception("Routing to a specific instance is only allowed if route is defined for a logical endpoint' not for an address or instance."); " is 146.
Long Statement,NServiceBus,UnicastSendRouter,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\UnicastSendRouter.cs,ResolveRoute,The length of the statement  "            var distributionContext = new DistributionContext(instances' context.Message' context.MessageId' context.Headers' transportAddressTranslation' context.Extensions); " is 163.
Long Statement,NServiceBus,UnicastSendRouter,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\UnicastSendRouter.cs,ResolveRoute,The length of the statement  "            var selectedInstanceAddress = defaultDistributionPolicy.GetDistributionStrategy(route.Endpoint' DistributionStrategyScope.Send).SelectDestination(distributionContext); " is 167.
Long Statement,NServiceBus,InvokeSagaNotFoundBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\InvokeSagaNotFoundBehavior.cs,Invoke,The length of the statement  "            logger.InfoFormat("Could not find a started saga for '{0}' message type. Going to invoke SagaNotFoundHandlers."' context.Message.MessageType.FullName); " is 151.
Long Statement,NServiceBus,PropertySagaFinder<TSagaData>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\PropertySagaFinder.cs,Find,The length of the statement  "                throw new Exception($"Message {messageName} mapped to saga {sagaEntityName} has attempted to assign null to the correlation property {sagaPropertyName}. Correlation properties cannot be assigned null."); " is 203.
Long Statement,NServiceBus,PropertySagaFinder<TSagaData>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\PropertySagaFinder.cs,Find,The length of the statement  "            return await sagaPersister.Get<TSagaData>(sagaPropertyName' propertyValue' storageSession' context).ConfigureAwait(false); " is 122.
Long Statement,NServiceBus,Saga,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\Saga.cs,ReplyToOriginator,The length of the statement  "            //that would cause the saga that started us (if it was a saga) to not be found. When we have metadata available in the future we'll set the correct id and type " is 159.
Long Statement,NServiceBus,Saga,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\Saga.cs,VerifySagaCanHandleTimeout,The length of the statement  "                var message = $"The type '{GetType().Name}' cannot request timeouts for '{timeoutMessage}' because it does not implement 'IHandleTimeouts<{typeof(TTimeoutMessageType).FullName}>'"; " is 180.
Long Statement,NServiceBus,SagaPersistenceBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaPersistenceBehavior.cs,Invoke,The length of the statement  "            if (context.Headers.TryGetValue(Headers.SagaType' out var targetSagaTypeString) && context.Headers.TryGetValue(Headers.SagaId' out var targetSagaId)) " is 149.
Long Statement,NServiceBus,SagaPersistenceBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaPersistenceBehavior.cs,Invoke,The length of the statement  "                    logger.Warn($"Saga headers indicated that the message was intended for {targetSagaTypeString} but that type isn't available. Will fallback to query persister for a saga instance of type {currentSagaMetadata.SagaType.FullName} and saga id {targetSagaId} instead"); " is 263.
Long Statement,NServiceBus,SagaPersistenceBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaPersistenceBehavior.cs,Invoke,The length of the statement  "                        logger.Warn($"Saga headers indicated that the message was intended for {targetSagaType.FullName} but no metadata was found for that saga type. Will fallback to query persister for a saga instance of type {currentSagaMetadata.SagaType.FullName} and saga id {targetSagaId} instead"); " is 281.
Long Statement,NServiceBus,SagaPersistenceBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaPersistenceBehavior.cs,Invoke,The length of the statement  "                            throw new Exception($"Message type {context.MessageBeingHandled.GetType().Name} is handled by saga {currentSagaMetadata.SagaType.Name}' but the saga does not contain a property mapping or custom saga finder to map the message to saga data. Consider adding a mapping in the saga's {nameof(Saga.ConfigureHowToFindSaga)} method."); " is 328.
Long Statement,NServiceBus,SagaPersistenceBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaPersistenceBehavior.cs,Invoke,The length of the statement  "                        logger.InfoFormat("No saga found for timeout message {0}' ignoring since the saga has been marked as complete before the timeout fired"' context.MessageId); " is 156.
Long Statement,NServiceBus,SagaPersistenceBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaPersistenceBehavior.cs,Invoke,The length of the statement  "                    await sagaPersister.Complete(saga.Entity' context.SynchronizedStorageSession' context.Extensions).ConfigureAwait(false); " is 120.
Long Statement,NServiceBus,SagaPersistenceBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaPersistenceBehavior.cs,Invoke,The length of the statement  "                        sagaCorrelationProperty = new SagaCorrelationProperty(correlationProperty.PropertyInfo.Name' correlationProperty.PropertyInfo.GetValue(sagaInstanceState.Instance.Entity)); " is 171.
Long Statement,NServiceBus,SagaPersistenceBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaPersistenceBehavior.cs,Invoke,The length of the statement  "                    await sagaPersister.Save(saga.Entity' sagaCorrelationProperty' context.SynchronizedStorageSession' context.Extensions).ConfigureAwait(false); " is 141.
Long Statement,NServiceBus,SagaPersistenceBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaPersistenceBehavior.cs,RemoveSagaHeadersIfProcessingAEvent,The length of the statement  "            // We need this for backwards compatibility because in v4.0.0 we still have this header being sent as part of the message even if MessageIntent == MessageIntentEnum.Publish " is 172.
Long Statement,NServiceBus,SagaPersistenceBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaPersistenceBehavior.cs,RemoveSagaHeadersIfProcessingAEvent,The length of the statement  "                if (Enum.TryParse(messageIntentString' true' out MessageIntentEnum messageIntent) && messageIntent == MessageIntentEnum.Publish) " is 128.
Long Statement,NServiceBus,SagaPersistenceBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaPersistenceBehavior.cs,IsMessageAllowedToStartTheSaga,The length of the statement  "            return context.MessageMetadata.MessageHierarchy.Any(messageType => sagaMetadata.IsMessageAllowedToStartTheSaga(messageType.FullName)); " is 134.
Long Statement,NServiceBus,SagaPersistenceBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaPersistenceBehavior.cs,TryLoadSagaEntity,The length of the statement  "            return finder.Find(context.Builder' finderDefinition' context.SynchronizedStorageSession' context.Extensions' context.MessageBeingHandled); " is 139.
Long Statement,NServiceBus,DefaultScheduler,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Scheduling\DefaultScheduler.cs,Start,The length of the statement  "                logger.InfoFormat("Could not find any scheduled task with id {0}. The DefaultScheduler does not persist tasks between restarts."' taskId); " is 138.
Long Statement,NServiceBus,ScheduleExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Scheduling\ScheduleExtensions.cs,Schedule,The length of the statement  "            logger.DebugFormat("Task '{0}' (with id {1}) scheduled with timeSpan {2}"' taskDefinition.Name' taskDefinition.Id' taskDefinition.Every); " is 137.
Long Statement,NServiceBus,SerializationFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serialization\SerializationFeature.cs,Setup,The length of the statement  "            context.Pipeline.Register("DeserializeLogicalMessagesConnector"' new DeserializeMessageConnector(resolver' logicalMessageFactory' messageMetadataRegistry' mapper)' "Deserializes the physical message body into logical messages"); " is 228.
Long Statement,NServiceBus,SerializationFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serialization\SerializationFeature.cs,Setup,The length of the statement  "            context.Pipeline.Register("SerializeMessageConnector"' new SerializeMessageConnector(defaultSerializer' messageMetadataRegistry)' "Converts a logical message into a physical message"); " is 184.
Long Statement,NServiceBus,SerializationFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serialization\SerializationFeature.cs,LogFoundMessages,The length of the statement  "            Logger.Debug($"Message definitions: {Environment.NewLine}{string.Join(Environment.NewLine' messageDefinitions.Select(md => md.MessageType.FullName))}"); " is 152.
Long Statement,NServiceBus,SerializationSettingsExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serialization\SerializationSettingsExtensions.cs,GetAdditionalSerializers,The length of the statement  "            if (!settings.TryGet(AdditionalSerializersSettingsKey' out List<Tuple<SerializationDefinition' SettingsHolder>> deserializers)) " is 127.
Long Statement,NServiceBus,SerializationSettingsExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serialization\SerializationSettingsExtensions.cs,GetAdditionalSerializers,The length of the statement  "            if (settings.TryGet(AdditionalSerializersSettingsKey' out List<Tuple<SerializationDefinition' SettingsHolder>> deserializers)) " is 126.
Long Statement,NServiceBus,SerializationSettingsExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serialization\SerializationSettingsExtensions.cs,GetMainSerializer,The length of the statement  "            if (!settings.TryGet(MainSerializerSettingsKey' out Tuple<SerializationDefinition' SettingsHolder> defaultSerializerAndSettings)) " is 129.
Long Statement,NServiceBus,SerializationSettingsExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serialization\SerializationSettingsExtensions.cs,GetMainSerializer,The length of the statement  "                defaultSerializerAndSettings = Tuple.Create<SerializationDefinition' SettingsHolder>(new XmlSerializer()' new SettingsHolder()); " is 128.
Long Statement,NServiceBus,XmlDeserialization,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlDeserialization.cs,InferNodeType,The length of the statement  "                    var listImplementations = parent.GetType().GetInterfaces().Where(interfaceType => interfaceType.IsGenericType && interfaceType.GetGenericTypeDefinition() == typeof(IList<>)).ToList(); " is 183.
Long Statement,NServiceBus,XmlDeserialization,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlDeserialization.cs,GetPropertyValue,The length of the statement  "                if (cache.typesToCreateForEnumerables.TryGetValue(type' out var typeToCreateForEnumerables)) //handle IEnumerable<Something> " is 124.
Long Statement,NServiceBus,XmlMessageSerializer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlMessageSerializer.cs,Serialize,The length of the statement  "            using (var serializer = new XmlSerialization(messageType' stream' message' conventions' cache' SkipWrappingRawXml' Namespace)) " is 126.
Long Statement,NServiceBus,XmlSerialization,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSerialization.cs,Write,The length of the statement  "                    throw new NotSupportedException($"Type {t.FullName} contains an indexed property named {prop.Name}. Indexed properties are not supported on message types."); " is 157.
Long Statement,NServiceBus,XmlSerializerCache,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSerializerCache.cs,GetAllPropertiesForType,The length of the statement  "                    throw new NotSupportedException($"IList is not a supported property type for serialization' use List instead. Type: {t.FullName} Property: {prop.Name}"); " is 153.
Long Statement,NServiceBus,XmlSerializerCache,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSerializerCache.cs,GetAllPropertiesForType,The length of the statement  "                        throw new NotSupportedException($"IList<T> is not a supported property type for serialization' use List<T> instead. Type: {t.FullName} Property: {prop.Name}"); " is 159.
Long Statement,NServiceBus,XmlSerializerCache,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSerializerCache.cs,GetAllPropertiesForType,The length of the statement  "                        throw new NotSupportedException($"ISet<T> is not a supported property type for serialization' use HashSet<T> instead. Type: {t.FullName} Property: {prop.Name}"); " is 161.
Long Statement,NServiceBus,XmlSerializerCache,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSerializerCache.cs,GetAllPropertiesForType,The length of the statement  "                        throw new NotSupportedException($"IDictionary<T' K> is not a supported property type for serialization' use Dictionary<T'K> instead. Type: {t.FullName} Property: {prop.Name}. Consider using a concrete Dictionary<T' K> instead' where T and K cannot be of type 'System.Object'"); " is 277.
Long Statement,NServiceBus,XmlSerializerCache,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSerializerCache.cs,GetAllPropertiesForType,The length of the statement  "                        throw new NotSupportedException($"Dictionary<T' K> is not a supported when Key or Value is of Type System.Object. Type: {t.FullName} Property: {prop.Name}. Consider using a concrete Dictionary<T' K> where T and K are not of type 'System.Object'"); " is 247.
Long Statement,NServiceBus,StartableEndpoint,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\StartableEndpoint.cs,Start,The length of the statement  "            await receiveComponent.PrepareToStart(builder' recoverabilityComponent' messageOperations' pipelineComponent' pipelineCache).ConfigureAwait(false); " is 147.
Long Statement,NServiceBus,StartableEndpoint,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\StartableEndpoint.cs,Start,The length of the statement  "            var runningInstance = new RunningEndpointInstance(settings' hostingComponent' receiveComponent' featureComponent' messageSession' transportInfrastructure); " is 155.
Long Statement,NServiceBus,StaticHeaders,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\StaticHeaders\StaticHeaders.cs,Setup,The length of the statement  "            context.Pipeline.Register("ApplyStaticHeaders"' new ApplyStaticHeadersBehavior(headers)' "Applies static headers to outgoing messages"); " is 136.
Long Statement,NServiceBus,DirectoryBasedTransaction,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\DirectoryBasedTransaction.cs,RecoverPending,The length of the statement  "                        log.Debug($"Unable to move pending transaction from '{file.FullName}' to '{destFileName}'. Pending transaction is assumed to be recovered by a competing consumer."' e); " is 168.
Long Statement,NServiceBus,DirectoryBasedTransaction,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\DirectoryBasedTransaction.cs,RecoverCommitted,The length of the statement  "                        log.Debug($"Unable to move committed transaction from '{file.FullName}' to '{destFileName}'. Committed transaction is assumed to be recovered by a competing consumer."' e); " is 172.
Long Statement,NServiceBus,LearningTransportDispatcher,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportDispatcher.cs,WriteMessage,The length of the statement  "                destinationPath = Path.Combine(destinationPath' LearningTransportMessagePump.DelayedDirName' timeToDeliver.Value.ToString("yyyyMMddHHmmss")); " is 141.
Long Statement,NServiceBus,LearningTransportDispatcher,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportDispatcher.cs,WriteMessage,The length of the statement  "            if (transportOperation.DeliveryConstraints.TryGet(out DiscardIfNotReceivedBefore timeToBeReceived) && timeToBeReceived.MaxTime < TimeSpan.MaxValue) " is 147.
Long Statement,NServiceBus,LearningTransportDispatcher,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportDispatcher.cs,WriteMessage,The length of the statement  "                    throw new Exception($"Postponed delivery of messages with TimeToBeReceived set is not supported. Remove the TimeToBeReceived attribute to postpone messages of type '{message.Headers[Headers.EnclosedMessageTypes]}'."); " is 217.
Long Statement,NServiceBus,LearningTransportDispatcher,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportDispatcher.cs,WriteMessage,The length of the statement  "                throw new Exception($"The total size of the '{message.Headers[Headers.EnclosedMessageTypes]}' message body ({message.Body.Length} bytes) plus headers ({headerSize} bytes) is larger than {maxMessageSizeKB} KB and will not be supported on some production transports. Consider using the NServiceBus DataBus or the claim check pattern to avoid messages with a large payload. Use 'EndpointConfiguration.UseTransport<LearningTransport>().NoPayloadSizeRestriction()' to disable this check and proceed with the current message size."); " is 527.
Long Statement,NServiceBus,LearningTransportDispatcher,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportDispatcher.cs,WriteMessage,The length of the statement  "            if (transportOperation.RequiredDispatchConsistency != DispatchConsistency.Isolated && transaction.TryGet(out ILearningTransportTransaction directoryBasedTransaction)) " is 166.
Long Statement,NServiceBus,LearningTransportInfrastructure,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportInfrastructure.cs,FindStoragePath,The length of the statement  "                    throw new Exception($"Unable to determine the storage directory path for the learning transport due to the absence of a solution file. Either create a '{DefaultLearningTransportDirectory}' directory in one of this project’s parent directories' or specify the path explicitly using the 'EndpointConfiguration.UseTransport<LearningTransport>().StorageDirectory()' API."); " is 369.
Long Statement,NServiceBus,LearningTransportInfrastructure,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportInfrastructure.cs,ConfigureReceiveInfrastructure,The length of the statement  "            return new TransportReceiveInfrastructure(() => new LearningTransportMessagePump(storagePath)' () => new LearningTransportQueueCreator()' () => Task.FromResult(StartupCheckResult.Success)); " is 189.
Long Statement,NServiceBus,LearningTransportInfrastructure,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportInfrastructure.cs,ConfigureSendInfrastructure,The length of the statement  "            var maxPayloadSize = settings.GetOrDefault<bool>(NoPayloadSizeRestrictionKey) ? int.MaxValue / 1024 : 64; //64 kB is the max size of the ASQ transport " is 150.
Long Statement,NServiceBus,LearningTransportInfrastructure,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportInfrastructure.cs,ConfigureSendInfrastructure,The length of the statement  "            return new TransportSendInfrastructure(() => new LearningTransportDispatcher(storagePath' maxPayloadSize)' () => Task.FromResult(StartupCheckResult.Success)); " is 158.
Long Statement,NServiceBus,LearningTransportMessagePump,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportMessagePump.cs,ProcessFileAndComplete,The length of the statement  "                    log.Debug($"Failure while trying to complete receive transaction for  {filePath}({transaction.FileToProcess})" + filePath' ex); " is 127.
Long Statement,NServiceBus,LearningTransportMessagePump,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportMessagePump.cs,ProcessFile,The length of the statement  "                    log.InfoFormat("Dropping message '{0}' as the specified TimeToBeReceived of '{1}' expired since sending the message at '{2:O}'. Current UTC time is '{3:O}'"' messageId' ttbrString' sentTime' utcNow); " is 199.
Long Statement,NServiceBus,LearningTransportMessagePump,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportMessagePump.cs,ProcessFile,The length of the statement  "                    criticalError.Raise($"Failed to execute recoverability policy for message with native ID: `{messageContext.MessageId}`"' ex); " is 125.
Long Statement,NServiceBus,LearningTransportSubscriptionManager,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportSubscriptionManager.cs,Subscribe,The length of the statement  "            // the subscription directory and the subscription information will be created no matter if there's a publisher for the event assuming that the publisher haven’t started yet " is 173.
Long Statement,NServiceBus,PathChecker,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\PathChecker.cs,ThrowForBadPath,The length of the statement  "            throw new Exception($"The value for '{valueName}' has illegal path characters. Provided value: {value}. Must not contain any of {string.Join("' "' invalidPathChars)}."); " is 169.
Long Statement,NServiceBus,TransportReceiver,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\TransportReceiver.cs,Init,The length of the statement  "            return receiver.Init(c => pipelineExecutor.Invoke(c)' c => recoverabilityExecutor.Invoke(c)' criticalError' pushSettings); " is 122.
Long Statement,NServiceBus,TransportSeam,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\TransportSeam.cs,Create,The length of the statement  "            var connectionString = transportSettings.TransportConnectionString.GetConnectionStringOrRaiseError(transportDefinition); " is 120.
Long Statement,NServiceBus,LoadMessageHandlersExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Unicast\Config\LoadMessageHandlersExtensions.cs,ExecuteTheseHandlersFirst,The length of the statement  "                    throw new ArgumentException($"'{handlerType}' is not a handler type' ensure that all types derive from IHandleMessages"); " is 121.
Long Statement,NServiceBus,LoadMessageHandlersExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Unicast\Config\LoadMessageHandlersExtensions.cs,ExecuteTheseHandlersFirst,The length of the statement  "                    throw new ArgumentException($"The order in which the type '{handlerType}' should be invoked was already specified by a previous call. A handler type can only specified once."); " is 176.
Long Statement,NServiceBus,TransportExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Unicast\Transport\Config\TransportExtensions.cs,ConnectionString,The length of the statement  "            Settings.Get<TransportSeam.Settings>().TransportConnectionString = new TransportConnectionString(() => connectionString); " is 121.
Long Statement,NServiceBus,TransportConnectionString,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Unicast\Transport\TransportConnectionString.cs,ReadConnectionStringFromAppConfig,The length of the statement  "                logger.WarnFormat("A connection string named '{0}' was found. Using named connection strings is discouraged. Instead' load the connection string in your code and pass the value to EndpointConfiguration.UseTransport().ConnectionString(connectionString)."' connectionStringName); " is 277.
Long Statement,NServiceBus,TransportConnectionString,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Unicast\Transport\TransportConnectionString.cs,GetConnectionStringOrRaiseError,The length of the statement  "                throw new InvalidOperationException(string.Format(message' transportDefinition.GetType().Name' transportDefinition.ExampleConnectionStringForErrorMessage)); " is 156.
Long Statement,NServiceBus,TransactionScopeUnitOfWorkBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\UnitOfWork\TransactionScopes\TransactionScopeUnitOfWorkBehavior.cs,Invoke,The length of the statement  "                throw new Exception("Ambient transaction detected. The transaction scope unit of work is not supported when there already is a scope present."); " is 144.
Long Statement,NServiceBus,TransactionScopeUnitOfWorkBehavior,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\UnitOfWork\TransactionScopes\TransactionScopeUnitOfWorkBehavior.cs,Invoke,The length of the statement  "            using (var tx = new TransactionScope(TransactionScopeOption.Required' transactionOptions' TransactionScopeAsyncFlowOption.Enabled)) " is 131.
Long Statement,NServiceBus,Reflect<TTarget>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Utils\Reflection\Reflect.cs,GetMemberInfo,The length of the statement  "                throw new ArgumentException("Argument passed contains more than a single dot which is not allowed: " + member' nameof(member)); " is 127.
Long Statement,NServiceBus.Features,Audit,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Audit\Audit.cs,Setup,The length of the statement  "            context.Pipeline.Register("AuditToDispatchConnector"' new AuditToRoutingConnector(auditConfig.TimeToBeReceived)' "Dispatches the audit message to the transport"); " is 162.
Long Statement,NServiceBus.Features,Audit,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Audit\Audit.cs,Setup,The length of the statement  "            context.Pipeline.Register("AuditProcessedMessage"' new InvokeAuditPipelineBehavior(auditConfig.Address)' "Execute the audit pipeline"); " is 135.
Long Statement,NServiceBus.Features,MessageCausation,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Causation\MessageCausation.cs,Setup,The length of the statement  "            context.Pipeline.Register("AttachCausationHeaders"' new AttachCausationHeadersBehavior(newIdGenerator)' "Adds related to and conversation id headers to outgoing messages"); " is 172.
Long Statement,NServiceBus.Features,MessageCausation,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Causation\MessageCausation.cs,GetIdStrategy,The length of the statement  "            if (settings.TryGet("CustomConversationIdStrategy"' out Func<ConversationIdStrategyContext' ConversationId> idGenerator)) " is 121.
Long Statement,NServiceBus.Features,MessageCausation,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Causation\MessageCausation.cs,WrapUserDefinedInvocation,The length of the statement  "                    throw new Exception($"Failed to execute the custom conversation ID strategy defined using '{nameof(EndpointConfiguration)}.{nameof(MessageCausationConfigurationExtensions.CustomConversationIdStrategy)}'."' exception); " is 217.
Long Statement,NServiceBus.Features,MessageCausation,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Causation\MessageCausation.cs,WrapUserDefinedInvocation,The length of the statement  "                    throw new Exception($"The custom conversation ID strategy defined using '{nameof(EndpointConfiguration)}.{nameof(MessageCausationConfigurationExtensions.CustomConversationIdStrategy)}' returned null. The custom strategy must return either '{nameof(ConversationId)}.{nameof(ConversationId.Custom)}(customValue)' or '{nameof(ConversationId)}.{nameof(ConversationId.Default)}'"); " is 376.
Long Statement,NServiceBus.Features,MessageCorrelation,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Correlation\MessageCorrelation.cs,Setup,The length of the statement  "            context.Pipeline.Register("AttachCorrelationId"' new AttachCorrelationIdBehavior()' "Makes sure that outgoing messages have a correlation id header set"); " is 154.
Long Statement,NServiceBus.Features,CustomIDataBus,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DataBus\CustomIDataBus.cs,Setup,The length of the statement  "            context.Container.ConfigureComponent(context.Settings.Get<Type>("CustomDataBusType")' DependencyLifecycle.SingleInstance); " is 122.
Long Statement,NServiceBus.Features,DataBusFileBased,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DataBus\DataBusFileBased.cs,Setup,The length of the statement  "                throw new InvalidOperationException("Specify the basepath for FileShareDataBus' eg endpointConfiguration.UseDataBus<FileShareDataBus>().BasePath(\"c:\\databus\")"); " is 164.
Long Statement,NServiceBus.Features,DelayedDeliveryFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\DelayedDeliveryFeature.cs,Setup,The length of the statement  "                    context.Pipeline.Register("ThrowIfCannotDeferMessage"' new ThrowIfCannotDeferMessageBehavior()' "Throws an exception if an attempt is made to defer a message without infrastructure support."); " is 192.
Long Statement,NServiceBus.Features,DelayedDeliveryFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\DelayedDeliveryFeature.cs,Setup,The length of the statement  "                    context.Pipeline.Register("RouteDeferredMessageToTimeoutManager"' new RouteDeferredMessageToTimeoutManagerBehavior(timeoutManagerAddress)' "Reroutes deferred messages to the timeout manager"); " is 192.
Long Statement,NServiceBus.Features,DelayedDeliveryFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\DelayedDeliveryFeature.cs,Setup,The length of the statement  "                    context.Container.ConfigureComponent(b => new RequestCancelingOfDeferredMessagesFromTimeoutManager(timeoutManagerAddress)' DependencyLifecycle.SingleInstance); " is 159.
Long Statement,NServiceBus.Features,TimeoutManager,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\TimeoutManager\TimeoutManager.cs,Setup,The length of the statement  "                throw new Exception("The selected persistence doesn't have support for timeout storage. Select another persistence or disable the timeout manager feature using endpointConfiguration.DisableFeature<TimeoutManager>()"); " is 217.
Long Statement,NServiceBus.Features,TimeoutManager,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\TimeoutManager\TimeoutManager.cs,SetupTimeoutPoller,The length of the statement  "                return new ExpiredTimeoutsPoller(b.Build<IQueryTimeouts>()' b.Build<IDispatchMessages>()' dispatcherAddress' circuitBreaker' () => DateTime.UtcNow); " is 148.
Long Statement,NServiceBus.Features,TimeoutManager,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\TimeoutManager\TimeoutManager.cs,SetupDispatcherSatellite,The length of the statement  "            context.AddSatelliteReceiver("Timeout Dispatcher Processor"' satelliteAddress' pushRuntimeSettings' RecoverabilityPolicy' " is 121.
Long Statement,NServiceBus.Features,Feature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Features\Feature.cs,DependsOnAtLeastOne,The length of the statement  "                    throw new ArgumentException($"A Feature can only depend on another Feature. '{feature.FullName}' is not a Feature"' nameof(features)); " is 134.
Long Statement,NServiceBus.Features,FeatureActivator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Features\FeatureActivator.cs,Sort,The length of the statement  "                foreach (var dependencyName in node.FeatureState.Feature.Dependencies.SelectMany(listOfDependencyNames => listOfDependencyNames)) " is 129.
Long Statement,NServiceBus.Features,FeatureActivator,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Features\FeatureActivator.cs,ActivateFeature,The length of the statement  "                return dependentFeaturesToActivate.Aggregate(false' (current' f) => current | ActivateFeature(f' featuresToActivate' featureConfigurationContext)); " is 147.
Long Statement,NServiceBus.Features,ForwardReceivedMessages,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Forwarding\ForwardReceivedMessages.cs,Setup,The length of the statement  "            context.Pipeline.Register("InvokeForwardingPipeline"' new InvokeForwardingPipelineBehavior(forwardReceivedMessagesQueue)' "Execute the forwarding pipeline"); " is 157.
Long Statement,NServiceBus.Features,ForwardReceivedMessages,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Forwarding\ForwardReceivedMessages.cs,Setup,The length of the statement  "            context.Pipeline.Register(new ForwardingToRoutingConnector()' "Makes sure that forwarded messages gets dispatched to the transport"); " is 133.
Long Statement,NServiceBus.Features,LicenseReminder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Licensing\LicenseReminder.cs,Setup,The length of the statement  "                licenseManager.InitializeLicense(context.Settings.Get<string>(LicenseTextSettingsKey)' context.Settings.Get<string>(LicenseFilePathSettingsKey)); " is 145.
Long Statement,NServiceBus.Features,LicenseReminder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Licensing\LicenseReminder.cs,Setup,The length of the statement  "                context.Pipeline.Register("LicenseReminder"' new AuditInvalidLicenseBehavior()' "Audits that the message was processed by an endpoint with an expired license"); " is 160.
Long Statement,NServiceBus.Features,LicenseReminder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Licensing\LicenseReminder.cs,Setup,The length of the statement  "                    context.Pipeline.Register("LogErrorOnInvalidLicense"' new LogErrorOnInvalidLicenseBehavior()' "Logs an error when running in debug mode with an expired license"); " is 162.
Long Statement,NServiceBus.Features,Mutators,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\MessageMutators\Mutators.cs,Setup,The length of the statement  "            context.Pipeline.Register("MutateIncomingTransportMessage"' new MutateIncomingTransportMessageBehavior(registry.IncomingTransportMessage)' "Executes IMutateIncomingTransportMessages"); " is 184.
Long Statement,NServiceBus.Features,Mutators,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\MessageMutators\Mutators.cs,Setup,The length of the statement  "            context.Pipeline.Register("MutateIncomingMessages"' new MutateIncomingMessageBehavior(registry.IncomingMessage)' "Executes IMutateIncomingMessages"); " is 149.
Long Statement,NServiceBus.Features,Mutators,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\MessageMutators\Mutators.cs,Setup,The length of the statement  "            context.Pipeline.Register("MutateOutgoingMessages"' new MutateOutgoingMessageBehavior(registry.OutgoingMessage)' "Executes IMutateOutgoingMessages"); " is 149.
Long Statement,NServiceBus.Features,Mutators,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\MessageMutators\Mutators.cs,Setup,The length of the statement  "            context.Pipeline.Register("MutateOutgoingTransportMessage"' new MutateOutgoingTransportMessageBehavior(registry.OutgoingTransportMessage)' "Executes IMutateOutgoingTransportMessages"); " is 184.
Long Statement,NServiceBus.Features,MessageDurabilityFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Performance\MessageDurability\MessageDurabilityFeature.cs,Setup,The length of the statement  "            context.Pipeline.Register(new DetermineMessageDurabilityBehavior(t => Convention(t' doesSupportNonDurableDelivery' defaultToDurableMessages' durabilityConvention))' "Adds the NonDurableDelivery constraint for messages that have requested to be delivered in non-durable mode"); " is 276.
Long Statement,NServiceBus.Features,TimeToBeReceived,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Performance\TimeToBeReceived\TimeToBeReceived.cs,Setup,The length of the statement  "            context.Pipeline.Register("ApplyTimeToBeReceived"' new ApplyTimeToBeReceivedBehavior(mappings)' "Adds the `DiscardIfNotReceivedBefore` constraint to relevant messages"); " is 169.
Long Statement,NServiceBus.Features,TimeToBeReceived,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Performance\TimeToBeReceived\TimeToBeReceived.cs,GetMappings,The length of the statement  "            var doesTransportSupportDiscardIfNotReceivedBefore = context.Settings.DoesTransportSupportConstraint<DiscardIfNotReceivedBefore>(); " is 131.
Long Statement,NServiceBus.Features,InMemoryTimeoutPersistence,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\InMemory\TimeoutPersister\InMemoryTimeoutPersistence.cs,Setup,The length of the statement  "            context.Container.ConfigureComponent(_ => new InMemoryTimeoutPersister(() => DateTime.UtcNow)' DependencyLifecycle.SingleInstance); " is 131.
Long Statement,NServiceBus.Features,LearningSagaPersistence,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\Learning\SagaPersister\LearningSagaPersistence.cs,Setup,The length of the statement  "            context.Container.ConfigureComponent(b => new LearningSynchronizedStorage(sagaManifests)' DependencyLifecycle.SingleInstance); " is 126.
Long Statement,NServiceBus.Features,Outbox,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Reliability\Outbox\Outbox.cs,Setup,The length of the statement  "                throw new Exception("The selected persistence doesn't have support for outbox storage. Select another persistence or disable the outbox feature using endpointConfiguration.DisableFeature<Outbox>()"); " is 199.
Long Statement,NServiceBus.Features,Outbox,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Reliability\Outbox\Outbox.cs,Setup,The length of the statement  "            //note: in the future we should change the persister api to give us a "outbox factory" so that we can register it in DI here instead of relying on the persister to do it " is 169.
Long Statement,NServiceBus.Features,Outbox,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Reliability\Outbox\Outbox.cs,Setup,The length of the statement  "            context.Pipeline.Register("ForceBatchDispatchToBeIsolated"' new ForceBatchDispatchToBeIsolatedBehavior()' "Makes sure that we dispatch straight to the transport so that we can safely set the outbox record to dispatched one the dispatch pipeline returns."); " is 256.
Long Statement,NServiceBus.Features,AutoSubscribe,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\AutomaticSubscriptions\AutoSubscribe.cs,GetMessageTypesHandledByThisEndpoint,The length of the statement  "                .Where(t => settings.AutoSubscribeSagas || handlerRegistry.GetHandlersFor(t).Any(handler => !typeof(Saga).IsAssignableFrom(handler.HandlerType))) //get messages with other handlers than sagas if needed " is 201.
Long Statement,NServiceBus.Features,MessageDrivenSubscriptions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscriptions.cs,Setup,The length of the statement  "            // The MessageDrivenSubscriptions feature needs to be activated when using the subscription migration mode as some persister packages check this feature before enabling the subscription storage. " is 194.
Long Statement,NServiceBus.Features,MessageDrivenSubscriptions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscriptions.cs,Setup,The length of the statement  "                    throw new Exception("The selected persistence doesn't have support for subscription storage. Select another persistence or disable the publish functionality using transportConfiguration.DisablePublishing()"); " is 208.
Long Statement,NServiceBus.Features,MessageDrivenSubscriptions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscriptions.cs,Setup,The length of the statement  "                    var unicastPublishRouter = new UnicastPublishRouter(b.Build<MessageMetadataRegistry>()' i => transportInfrastructure.ToTransportAddress(LogicalAddress.CreateRemoteAddress(i))' b.Build<ISubscriptionStorage>()); " is 209.
Long Statement,NServiceBus.Features,MessageDrivenSubscriptions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscriptions.cs,Setup,The length of the statement  "                context.Pipeline.Register(typeof(DisabledPublishingTerminator)' "Throws an exception when trying to publish with publishing disabled"); " is 135.
Long Statement,NServiceBus.Features,MessageDrivenSubscriptions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscriptions.cs,Setup,The length of the statement  "                var subscriptionRouter = new SubscriptionRouter(publishers' endpointInstances' i => transportInfrastructure.ToTransportAddress(LogicalAddress.CreateRemoteAddress(i))); " is 167.
Long Statement,NServiceBus.Features,MessageDrivenSubscriptions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscriptions.cs,Setup,The length of the statement  "                context.Pipeline.Register(b => new MessageDrivenSubscribeTerminator(subscriptionRouter' subscriberAddress' context.Settings.EndpointName()' b.Build<IDispatchMessages>())' "Sends subscription requests when message driven subscriptions is in use"); " is 246.
Long Statement,NServiceBus.Features,MessageDrivenSubscriptions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscriptions.cs,Setup,The length of the statement  "                context.Pipeline.Register(b => new MessageDrivenUnsubscribeTerminator(subscriptionRouter' subscriberAddress' context.Settings.EndpointName()' b.Build<IDispatchMessages>())' "Sends requests to unsubscribe when message driven subscriptions is in use"); " is 250.
Long Statement,NServiceBus.Features,MessageDrivenSubscriptions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscriptions.cs,Setup,The length of the statement  "                context.Pipeline.Register(new SendOnlySubscribeTerminator()' "Throws an exception when trying to subscribe from a send-only endpoint"); " is 135.
Long Statement,NServiceBus.Features,MessageDrivenSubscriptions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\MessageDrivenSubscriptions.cs,Setup,The length of the statement  "                context.Pipeline.Register(new SendOnlyUnsubscribeTerminator()' "Throws an exception when trying to unsubscribe from a send-only endpoint"); " is 139.
Long Statement,NServiceBus.Features,NativePublishSubscribeFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\NativePublishSubscribeFeature.cs,Setup,The length of the statement  "            context.Pipeline.Register("MulticastPublishRouterBehavior"' new MulticastPublishConnector()' "Determines how the published messages should be routed"); " is 151.
Long Statement,NServiceBus.Features,NativePublishSubscribeFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\NativePublishSubscribeFeature.cs,Setup,The length of the statement  "                context.Pipeline.Register(new NativeSubscribeTerminator(subscriptionManager)' "Requests the transport to subscribe to a given message type"); " is 141.
Long Statement,NServiceBus.Features,NativePublishSubscribeFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\NativePublishSubscribeFeature.cs,Setup,The length of the statement  "                context.Pipeline.Register(new NativeUnsubscribeTerminator(subscriptionManager)' "Requests the transport to unsubscribe to a given message type"); " is 145.
Long Statement,NServiceBus.Features,NativePublishSubscribeFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\NativePublishSubscribeFeature.cs,Setup,The length of the statement  "                context.Pipeline.Register(new SendOnlySubscribeTerminator()' "Throws an exception when trying to subscribe from a send-only endpoint"); " is 135.
Long Statement,NServiceBus.Features,NativePublishSubscribeFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\NativePublishSubscribeFeature.cs,Setup,The length of the statement  "                context.Pipeline.Register(new SendOnlyUnsubscribeTerminator()' "Throws an exception when trying to unsubscribe from a send-only endpoint"); " is 139.
Long Statement,NServiceBus.Features,SubscriptionMigrationMode,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\SubscriptionMigrationMode.cs,Setup,The length of the statement  "                var unicastPublishRouter = new UnicastPublishRouter(b.Build<MessageMetadataRegistry>()' i => transportInfrastructure.ToTransportAddress(LogicalAddress.CreateRemoteAddress(i))' b.Build<ISubscriptionStorage>()); " is 209.
Long Statement,NServiceBus.Features,SubscriptionMigrationMode,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\SubscriptionMigrationMode.cs,Setup,The length of the statement  "                var subscriptionRouter = new SubscriptionRouter(publishers' endpointInstances' i => transportInfrastructure.ToTransportAddress(LogicalAddress.CreateRemoteAddress(i))); " is 167.
Long Statement,NServiceBus.Features,SubscriptionMigrationMode,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\SubscriptionMigrationMode.cs,Setup,The length of the statement  "                    new MigrationSubscribeTerminator(subscriptionManager' subscriptionRouter' b.Build<IDispatchMessages>()' subscriberAddress' context.Settings.EndpointName())' "Requests the transport to subscribe to a given message type"); " is 220.
Long Statement,NServiceBus.Features,SubscriptionMigrationMode,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\SubscriptionMigrationMode.cs,Setup,The length of the statement  "                    new MigrationUnsubscribeTerminator(subscriptionManager'subscriptionRouter' b.Build<IDispatchMessages>()' subscriberAddress' context.Settings.EndpointName())' "Sends requests to unsubscribe when message driven subscriptions is in use"); " is 235.
Long Statement,NServiceBus.Features,SubscriptionMigrationMode,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\SubscriptionMigrationMode.cs,Setup,The length of the statement  "                context.Pipeline.Register(new SendOnlySubscribeTerminator()' "Throws an exception when trying to subscribe from a send-only endpoint"); " is 135.
Long Statement,NServiceBus.Features,SubscriptionMigrationMode,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\SubscriptionMigrationMode.cs,Setup,The length of the statement  "                context.Pipeline.Register(new SendOnlyUnsubscribeTerminator()' "Throws an exception when trying to unsubscribe from a send-only endpoint"); " is 139.
Long Statement,NServiceBus.Features,SubscriptionMigrationMode,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\SubscriptionMigrationMode\SubscriptionMigrationMode.cs,Setup,The length of the statement  "            context.Container.ConfigureComponent<MessageDrivenSubscriptions.InitializableSubscriptionStorage>(DependencyLifecycle.SingleInstance); " is 134.
Long Statement,NServiceBus.Features,AutoCorrelationFeature,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\AutoCorrelationFeature.cs,Setup,The length of the statement  "            context.Pipeline.Register("PopulateAutoCorrelationHeadersForReplies"' new PopulateAutoCorrelationHeadersForRepliesBehavior()' "Copies existing saga headers from incoming message to outgoing message to facilitate the auto correlation in the saga' when replying to a message that was sent by a saga."); " is 300.
Long Statement,NServiceBus.Features,Sagas,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\Sagas.cs,Setup,The length of the statement  "                throw new Exception("The selected persistence doesn't have support for saga storage. Select another persistence or disable the sagas feature using endpointConfiguration.DisableFeature<Sagas>()"); " is 195.
Long Statement,NServiceBus.Features,Sagas,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\Sagas.cs,Setup,The length of the statement  "            context.Pipeline.Register("InvokeSaga"' b => new SagaPersistenceBehavior(b.Build<ISagaPersister>()' sagaIdGenerator' b.Build<ICancelDeferredMessages>()' sagaMetaModel)' "Invokes the saga logic"); " is 195.
Long Statement,NServiceBus.Features,Sagas,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\Sagas.cs,Setup,The length of the statement  "            context.Pipeline.Register("AttachSagaDetailsToOutGoingMessage"' new AttachSagaDetailsToOutGoingMessageBehavior()' "Makes sure that outgoing messages have saga info attached to them"); " is 183.
Long Statement,NServiceBus.Features,Scheduler,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Scheduling\Scheduler.cs,Setup,The length of the statement  "            context.Pipeline.Register("ScheduleBehavior"' new ScheduleBehavior(defaultScheduler)' "Registers a task definition for scheduling."); " is 133.
Long Statement,NServiceBus.Features,Scheduler,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Scheduling\Scheduler.cs,Setup,The length of the statement  "            context.Pipeline.Register("ScheduledTaskHandlingBehavior"' new ScheduledTaskHandlingBehavior(defaultScheduler)' "Handles scheduled task messages."); " is 148.
Long Statement,NServiceBus.Features,TransactionScopeUnitOfWork,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\UnitOfWork\TransactionScopes\TransactionScopeUnitOfWork.cs,Setup,The length of the statement  "                throw new Exception("A Transaction scope unit of work can't be used when the transport already uses a scope for the receive operation. Remove the call to config.UnitOfWork().WrapHandlersInATransactionScope() or configure the transport to use a lower transaction mode"); " is 269.
Long Statement,NServiceBus.Features,TransactionScopeUnitOfWork,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\UnitOfWork\TransactionScopes\TransactionScopeUnitOfWork.cs,Setup,The length of the statement  "            context.Pipeline.Register("HandlerTransactionScopeWrapper"' new TransactionScopeUnitOfWorkBehavior(transactionOptions)' "Makes sure that the handlers gets wrapped in a transaction scope"); " is 188.
Long Statement,NServiceBus.Features,Settings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\UnitOfWork\TransactionScopes\TransactionScopeUnitOfWork.cs,GetMaxTimeout,The length of the statement  "                if (systemTransactionsGroup?.Sections.Get("machineSettings") is System.Transactions.Configuration.MachineSettingsSection machineSettings) " is 137.
Long Statement,NServiceBus.Pipeline,RegisterStep,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\RegisterStep.cs,Replace,The length of the statement  "                throw new InvalidOperationException($"Cannot replace step '{StepId}' with '{replacement.ReplaceId}'. The ID of the replacement must match the replaced step."); " is 159.
Long Statement,System,ObjectExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DeepCopy.cs,RecursiveCopyBaseTypePrivateFields,The length of the statement  "                CopyFields(originalObject' visited' cloneObject' typeToReflect.BaseType' BindingFlags.Instance | BindingFlags.NonPublic' info => info.IsPrivate); " is 145.
Long Statement,NServiceBus.Hosting.Helpers,AssemblyScanner,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\Helpers\AssemblyScanner.cs,GetReferencedAssembly,The length of the statement  "                referencedAssembly = AppDomain.CurrentDomain.GetAssemblies().FirstOrDefault(a => a.GetName().Name == assemblyName.Name); " is 120.
Long Statement,NServiceBus.Hosting.Helpers,AssemblyScanner,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\Helpers\AssemblyScanner.cs,FormatReflectionTypeLoadException,The length of the statement  "            var nsbPublicKeyToken = BitConverter.ToString(nsbAssemblyName.GetPublicKeyToken()).Replace("-"' string.Empty).ToLowerInvariant(); " is 129.
Long Statement,NServiceBus.Hosting.Helpers,AssemblyScanner,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\Helpers\AssemblyScanner.cs,FormatReflectionTypeLoadException,The length of the statement  "                    var assemblyPublicKeyToken = BitConverter.ToString(assemblyName.GetPublicKeyToken()).Replace("-"' string.Empty).ToLowerInvariant(); " is 131.
Long Statement,NServiceBus.MessageInterfaces.MessageMapper.Reflection,MessageMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\MessageInterfaces\MessageMapper\Reflection\MessageMapper.cs,GenerateImplementationFor,The length of the statement  "                throw new Exception($"Cannot generate a concrete implementation for '{interfaceType}' because it is not public. Ensure that all interfaces used as messages are public."); " is 170.
Long Statement,NServiceBus.MessageInterfaces.MessageMapper.Reflection,MessageMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\MessageInterfaces\MessageMapper\Reflection\MessageMapper.cs,GenerateImplementationFor,The length of the statement  "            if (interfaceType.GetMethods().Any(mi => !(mi.IsSpecialName && (mi.Name.StartsWith("set_") || mi.Name.StartsWith("get_"))))) " is 124.
Long Statement,NServiceBus.MessageInterfaces.MessageMapper.Reflection,MessageMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\MessageInterfaces\MessageMapper\Reflection\MessageMapper.cs,GenerateImplementationFor,The length of the statement  "                throw new Exception($"Cannot generate a concrete implementation for '{interfaceType}' because it contains methods. Ensure that all interfaces used as messages do not contain methods."); " is 185.
Long Statement,NServiceBus.MessageMutator,MutatorRegistrationExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\MessageMutators\MutatorRegistrationExtensions.cs,RegisterMessageMutator,The length of the statement  "                throw new ArgumentException($"The given instance is not a valid message mutator. Implement one of the following mutator interfaces: {typeof(IMutateIncomingMessages).FullName}' {typeof(IMutateIncomingTransportMessages).FullName}' {typeof(IMutateOutgoingMessages).FullName} or {typeof(IMutateOutgoingTransportMessages).FullName}"); " is 329.
Long Statement,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,RegisterConstructorDependency,The length of the statement  "                    $"This might lead to incorrect behaviour if a service with a {typeof(TDependency)} dependency has already been resolved"; " is 121.
Long Statement,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,RegisterConstructorDependency,The length of the statement  "                    $"This might lead to incorrect behaviour if a service with a {typeof(TDependency)} dependency has already been resolved"; " is 121.
Long Statement,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,RegisterPropertyDependency,The length of the statement  "                   $"This might lead to incorrect behaviour if a service with a {typeof(TDependency)} dependency has already been resolved"; " is 121.
Long Statement,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Decorate,The length of the statement  "            var decoratorRegistration = new DecoratorRegistration { ServiceType = serviceType' ImplementingType = decoratorType' CanDecorate = predicate }; " is 143.
Long Statement,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Decorate,The length of the statement  "            var decoratorRegistration = new DecoratorRegistration { FactoryExpression = factory' ServiceType = typeof(TService)' CanDecorate = si => true }; " is 144.
Long Statement,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,UpdateServiceRegistration,The length of the statement  "                var message = $"Cannot overwrite existing serviceregistration {existingRegistration} after the first call to GetInstance."; " is 123.
Long Statement,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,CreateServiceEmitterBasedOnFactoryRule,The length of the statement  "                return emitter => EmitLifetime(serviceRegistration' e => EmitNewInstanceWithDecorators(serviceRegistration' e)' emitter); " is 121.
Long Statement,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,CreateEmitMethodForListServiceRequest,The length of the statement  "            MethodInfo closedGenericToListMethod = openGenericToArrayMethod.MakeGenericMethod(TypeHelper.GetElementType(serviceType)); " is 122.
Long Statement,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,CreateEmitMethodBasedOnClosedGenericServiceRequest,The length of the statement  "            var mappingResult = GenericArgumentMapper.Map(closedGenericServiceType' openGenericServiceRegistration.ImplementingType); " is 121.
Long Statement,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,CreateEmitMethodForEnumerableServiceServiceRequest,The length of the statement  "                emitMethods = emitters.Where(kv => actualServiceType.GetTypeInfo().IsAssignableFrom(kv.Key.GetTypeInfo())).SelectMany(kv => kv.Value.Values).ToList(); " is 150.
Long Statement,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,GetEmitMethods,The length of the statement  "            return emitters.GetOrAdd(serviceType' s => new ThreadSafeDictionary<string' Action<IEmitter>>(StringComparer.CurrentCultureIgnoreCase)); " is 136.
Long Statement,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,GetAvailableServices,The length of the statement  "            return availableServices.GetOrAdd(serviceType' s => new ThreadSafeDictionary<string' ServiceRegistration>(StringComparer.CurrentCultureIgnoreCase)); " is 148.
Long Statement,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,RegisterService,The length of the statement  "            var serviceRegistration = new ServiceRegistration { ServiceType = serviceType' ImplementingType = implementingType' ServiceName = serviceName' Lifetime = lifetime ?? DefaultLifetime }; " is 184.
Long Statement,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,EnsureConstructable,The length of the statement  "                throw new ArgumentOutOfRangeException(nameof(implementingType)' $"The implementing type {implementingType.FullName} is not assignable from {serviceType.FullName}."); " is 165.
Long Statement,LightInject,ServiceContainer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,ResolveEmitMethod,The length of the statement  "            return methodSkeleton => EmitLifetime(serviceRegistration' ms => EmitNewInstanceWithDecorators(serviceRegistration' ms)' methodSkeleton); " is 137.
Long Statement,LightInject,MostResolvableConstructorSelector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Execute,The length of the statement  "            ConstructorInfo[] constructorCandidates = implementingType.GetTypeInfo().DeclaredConstructors.Where(c => c.IsPublic && !c.IsStatic).ToArray(); " is 142.
Long Statement,LightInject,MostResolvableConstructorSelector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,CanCreateParameterDependency,The length of the statement  "            return canGetInstance(parameterInfo.ParameterType' string.Empty) || canGetInstance(parameterInfo.ParameterType' GetServiceName(parameterInfo)); " is 143.
Long Statement,LightInject,ServiceRegistration,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,ToString,The length of the statement  "            return $"ServiceType: '{ServiceType}'' ServiceName: '{ServiceName}'' ImplementingType: '{ImplementingType}'' Lifetime: '{lifeTime}'"; " is 133.
Long Statement,LightInject,GenericMappingResult,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,GetMappedArguments,The length of the statement  "                string message = $"The generic parameter(s) {missingParametersString} found in type {openGenericImplementingType.FullName} cannot be mapped from {genericServiceType.FullName}"; " is 176.
Long Statement,LightInject,Dependency,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,ToString,The length of the statement  "            return sb.AppendFormat("[Requested dependency: ServiceType:{0}' ServiceName:{1}]"' ServiceType' ServiceName).ToString(); " is 120.
Long Statement,LightInject,PropertyDependency,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,ToString,The length of the statement  "            return string.Format("[Target Type: {0}]' [Property: {1}({2})]"' Property.DeclaringType' Property.Name' Property.PropertyType) + "' " + base.ToString(); " is 152.
Long Statement,LightInject,ConstructorDependency,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,ToString,The length of the statement  "            return string.Format("[Target Type: {0}]' [Parameter: {1}({2})]"' Parameter.Member.DeclaringType' Parameter.Name' Parameter.ParameterType) + "' " + base.ToString(); " is 164.
Long Statement,LightInject,GenericArgumentMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Map,The length of the statement  "            return new GenericMappingResult(genericParameterNames' genericArgumentMap' genericServiceType' openGenericImplementingType); " is 124.
Long Statement,LightInject,GenericArgumentMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,MapGenericArguments,The length of the statement  "                        MapGenericArguments(closedGenericArgument.GetTypeInfo().GenericTypeArguments' baseTypeGenericArgument.GetTypeInfo().GenericTypeArguments' map); " is 143.
Long Statement,LightInject,GenericArgumentMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,GetBaseTypeImplementingGenericTypeDefinition,The length of the statement  "                    .FirstOrDefault(i => i.GetTypeInfo().IsGenericType && i.GetTypeInfo().GetGenericTypeDefinition() == genericTypeDefinition); " is 123.
Long Statement,LightInject,GenericArgumentMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,GetBaseTypeImplementingGenericTypeDefinition,The length of the statement  "                throw new InvalidOperationException($"The generic type definition {genericTypeDefinition.FullName} not implemented by implementing type {implementingType.FullName}"); " is 166.
Long Statement,LightInject,GenericArgumentMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,ImplementsOpenGenericTypeDefinition,The length of the statement  "            return baseType.GetTypeInfo().IsGenericType && baseType.GetTypeInfo().GetGenericTypeDefinition() == genericTypeDefinition; " is 122.
Long Statement,LightInject,PropertySelector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,IsReadOnly,The length of the statement  "            return propertyInfo.SetMethod == null || propertyInfo.SetMethod.IsStatic || propertyInfo.SetMethod.IsPrivate || propertyInfo.GetIndexParameters().Length > 0; " is 157.
Long Statement,LightInject,ReflectionHelper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,CreateGetInstanceWithParametersMethod,The length of the statement  "                    && m.GetGenericArguments().Length == genericTypeArguments.Length && m.GetParameters().All(p => p.Name != "serviceName")); " is 121.
Long Statement,LightInject,ReflectionHelper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,CreateGenericGetNamedParameterizedInstanceDelegate,The length of the statement  "            return (arg1' arg2' arg3' arg4) => factory.GetInstance<TArg1' TArg2' TArg3' TArg4' TService>(arg1' arg2' arg3' arg4' serviceName); " is 130.
Long Statement,LightInject,LazyTypeExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,GetConstructor,The length of the statement  "            return closedGenericLazyType.GetTypeInfo().DeclaredConstructors.Where(c => c.GetParameters().Length == 1 && c.GetParameters()[0].ParameterType == type.GetFuncType()).Single(); " is 175.
Long Statement,NServiceBus.Persistence,PersistenceDefinition,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\PersistenceDefinition.cs,ApplyActionForStorage,The length of the statement  "                throw new ArgumentException($"Storage type '{storageType.FullName}' is not a sub-class of StorageType"' nameof(storageType)); " is 125.
Long Statement,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitTryCatchFinallyBlock,The length of the statement  "                    if (!TryEmit(catchBodyExpr' catchBodyExpr.NodeType' catchBodyExpr.Type' paramExprs' il' ref closure' ExpressionType.Try)) " is 121.
Long Statement,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitTryCatchFinallyBlockInfo,The length of the statement  "                if (!TryEmit(bodyExpr' bodyExpr.GetNodeType()' bodyExpr.GetResultType()' paramExprs' il' ref closure' ExpressionType.Try)) " is 122.
Long Statement,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitTryCatchFinallyBlockInfo,The length of the statement  "                    if (!TryEmit(catchBodyExpr' catchBodyExpr.NodeType' catchBodyExpr.Type' paramExprs' il' ref closure' ExpressionType.Try)) " is 121.
Long Statement,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryInvokeLambda,The length of the statement  "                    if (!TryEmit(lambdaExprInfo' lambdaExprInfo.NodeType' lambdaType' paramExprs' il' ref closure' ExpressionType.Invoke) || " is 120.
Long Statement,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitConditional,The length of the statement  "                if (!TryEmit(ifTrueExpr' ifTrueExpr.NodeType' ifTrueExpr.Type' paramExprs' il' ref closure' ExpressionType.Conditional)) " is 120.
Long Statement,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitConditional,The length of the statement  "                if (!TryEmit(ifFalseExpr' ifFalseExpr.NodeType' ifFalseExpr.Type' paramExprs' il' ref closure' ExpressionType.Conditional)) " is 123.
Long Statement,NServiceBus.Sagas,ActiveSagaInstance,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\ActiveSagaInstance.cs,ValidateCorrelationPropertyHaveValue,The length of the statement  "                $@"The correlated property '{correlationProperty.PropertyInfo.Name}' on saga '{Metadata.SagaType.Name}' does not have a value. " is 126.
Long Statement,NServiceBus.Sagas,ActiveSagaInstance,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\ActiveSagaInstance.cs,ValidateCorrelationPropertyHaveValue,The length of the statement  "A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created."); " is 130.
Long Statement,NServiceBus.Sagas,ActiveSagaInstance,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\ActiveSagaInstance.cs,ValidateCorrelationPropertyNotModified,The length of the statement  "                $@"The value of the correlated property '{correlationProperty.PropertyInfo.Name}' on saga '{Metadata.SagaType.Name}' has changed from '{correlationProperty.InitialValue}' to '{currentCorrelationPropertyValue}'. " is 210.
Long Statement,NServiceBus.Sagas,ActiveSagaInstance,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\ActiveSagaInstance.cs,ValidateSagaIdIsNotModified,The length of the statement  "                throw new Exception("A modification of IContainSagaData.Id has been detected. This property is for infrastructure purposes only and should not be modified. SagaType: " + Metadata.SagaType.FullName); " is 198.
Long Statement,NServiceBus.Sagas,SagaMetadata,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,Create,The length of the statement  "                var messageTypes = string.Join("'"' propertyMappings.SelectMany(g => g.Select(m => m.MessageType.FullName)).Distinct()); " is 120.
Long Statement,NServiceBus.Sagas,SagaMetadata,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,Create,The length of the statement  "                throw new Exception($"Sagas can only have mappings that correlate on a single saga property. Use custom finders to correlate {messageTypes} to saga {sagaType.Name}"); " is 166.
Long Statement,NServiceBus.Sagas,SagaMetadata,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,Create,The length of the statement  "                        throw new Exception($"Custom saga finder {mapping.CustomFinderType.FullName} maps message type {msgType} for saga {sagaType.Name}' but the saga does not handle that message. If {sagaType.Name} is supposed to handle this message' it should implement IAmStartedByMessages<{msgType}> or IHandleMessages<{msgType}>."); " is 314.
Long Statement,NServiceBus.Sagas,SagaMetadata,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,Create,The length of the statement  "                    throw new Exception($"Saga {sagaType.Name} contains a mapping for {msgType} in the ConfigureHowToFindSaga method' but does not handle that message. If {sagaType.Name} is supposed to handle this message' it should implement IAmStartedByMessages<{msgType}> or IHandleMessages<{msgType}>."); " is 288.
Long Statement,NServiceBus.Sagas,SagaMetadata,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,Create,The length of the statement  "                        throw new Exception($"Message type {simpleName} can start the saga {sagaType.Name} (the saga implements IAmStartedByMessages<{simpleName}>) but does not map that message to saga data. In the ConfigureHowToFindSaga method' add a mapping using:{Environment.NewLine}    mapper.ConfigureMapping<{simpleName}>(message => message.SomeMessageProperty).ToSaga(saga => saga.MatchingSagaProperty);"); " is 390.
Long Statement,NServiceBus.Sagas,SagaMetadata,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,Create,The length of the statement  "            return new SagaMetadata(sagaType.FullName' sagaType' sagaEntityType.FullName' sagaEntityType' correlationProperty' associatedMessages' finders); " is 144.
Long Statement,NServiceBus.Sagas,SagaMetadata,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,ApplyScannedFinders,The length of the statement  "                        var error = $"A custom IFindSagas must target a valid message type as defined by the message conventions. Change '{messageType.FullName}' to a valid message type or add it to the message conventions. Finder name '{finderType.FullName}'."; " is 238.
Long Statement,NServiceBus.Sagas,SagaMetadata,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,ApplyScannedFinders,The length of the statement  "                        var bothMappingAndFinder = $"A custom IFindSagas and an existing mapping where found for message '{messageType.FullName}'. Either remove the message mapping or remove the finder. Finder name '{finderType.FullName}'."; " is 217.
Long Statement,NServiceBus.Sagas,SagaMetadata,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,SetFinderForMessage,The length of the statement  "                finders.Add(new SagaFinderDefinition(typeof(CustomFinderAdapter<'>).MakeGenericType(sagaEntityType' mapping.MessageType)' mapping.MessageType' new Dictionary<string' object> " is 173.
Long Statement,NServiceBus.Sagas,SagaMetadata,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,SetFinderForMessage,The length of the statement  "                finders.Add(new SagaFinderDefinition(typeof(PropertySagaFinder<>).MakeGenericType(sagaEntityType)' mapping.MessageType' new Dictionary<string' object> " is 150.
Long Statement,NServiceBus.Sagas,SagaMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,ConfigureMapping,The length of the statement  "                    throw new InvalidOperationException($"Mapping expressions for saga members must point to properties. Change member {sagaMember.Name} on {typeof(TSagaEntity).FullName} to a property."); " is 184.
Long Statement,NServiceBus.Sagas,SagaMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,ValidateMapping,The length of the statement  "                        throw new InvalidOperationException($"When mapping a message to a saga' the member type on the message and the saga property must match. {propertyInfo.DeclaringType.FullName}.{propertyInfo.Name} is of type {propertyInfo.PropertyType.Name} and {sagaProp.DeclaringType.FullName}.{sagaProp.Name} is of type {sagaProp.PropertyType.Name}."); " is 336.
Long Statement,NServiceBus.Sagas,SagaMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,ValidateMapping,The length of the statement  "                        throw new InvalidOperationException($"When mapping a message to a saga' the member type on the message and the saga property must match. {fieldInfo.DeclaringType.FullName}.{fieldInfo.Name} is of type {fieldInfo.FieldType.Name} and {sagaProp.DeclaringType.FullName}.{sagaProp.Name} is of type {sagaProp.PropertyType.Name}."); " is 324.
Long Statement,NServiceBus.Sagas,SagaMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,ThrowIfNotPropertyLambdaExpression,The length of the statement  "                        $@"Only public properties are supported for mapping Sagas. The lambda expression provided '{expression.Body}' is not mapping to a Property."); " is 142.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseString,The length of the statement  "                            if (!(success = UInt32.TryParse(new string(json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) " is 130.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseString,The length of the statement  "                                    if (new string(json' index' 2) == "\\u" && UInt32.TryParse(new string(json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) " is 163.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseNumber,The length of the statement  "            if (str.IndexOf("."' StringComparison.OrdinalIgnoreCase) != -1 || str.IndexOf("e"' StringComparison.OrdinalIgnoreCase) != -1) " is 125.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseNumber,The length of the statement  "                success = double.TryParse(new string(json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 123.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseNumber,The length of the statement  "                success = long.TryParse(new string(json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 121.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The length of the statement  "                if (json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e') " is 127.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseString,The length of the statement  "                            if (!(success = UInt32.TryParse(new string(json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) " is 130.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseString,The length of the statement  "                                    if (new string(json' index' 2) == "\\u" && UInt32.TryParse(new string(json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) " is 163.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseNumber,The length of the statement  "            if (str.IndexOf("."' StringComparison.OrdinalIgnoreCase) != -1 || str.IndexOf("e"' StringComparison.OrdinalIgnoreCase) != -1) " is 125.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseNumber,The length of the statement  "                success = double.TryParse(new string(json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 123.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseNumber,The length of the statement  "                success = long.TryParse(new string(json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 121.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The length of the statement  "                if (json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e') " is 127.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,SetterValueFactory,The length of the statement  "            IDictionary<string' KeyValuePair<Type' ReflectionUtils.SetDelegate>> result = new Dictionary<string' KeyValuePair<Type' ReflectionUtils.SetDelegate>>(); " is 152.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,SetterValueFactory,The length of the statement  "                    result[MapClrMemberNameToJsonFieldName(propertyInfo.Name)] = new KeyValuePair<Type' ReflectionUtils.SetDelegate>(propertyInfo.PropertyType' ReflectionUtils.GetSetMethod(propertyInfo)); " is 184.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,SetterValueFactory,The length of the statement  "                result[MapClrMemberNameToJsonFieldName(fieldInfo.Name)] = new KeyValuePair<Type' ReflectionUtils.SetDelegate>(fieldInfo.FieldType' ReflectionUtils.GetSetMethod(fieldInfo)); " is 172.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,The length of the statement  "                    if (type == typeof(DateTime) || (ReflectionUtils.IsNullableType(type) && Nullable.GetUnderlyingType(type) == typeof(DateTime))) " is 127.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,The length of the statement  "                    if (type == typeof(DateTimeOffset) || (ReflectionUtils.IsNullableType(type) && Nullable.GetUnderlyingType(type) == typeof(DateTimeOffset))) " is 139.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,The length of the statement  "                obj = type == typeof(int) || type == typeof(long) || type == typeof(double) || type == typeof(float) || type == typeof(bool) || type == typeof(decimal) || type == typeof(byte) || type == typeof(short) " is 200.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,The length of the statement  "                        else if (ReflectionUtils.IsTypeGenericeCollectionInterface(type) || ReflectionUtils.IsAssignableFrom(typeof(IList)' type)) " is 122.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,The length of the statement  "                            list = (IList)(ConstructorCache[type] ?? ConstructorCache[typeof(List<>).MakeGenericType(innerType)])(jsonObject.Count); " is 120.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,SetterValueFactory,The length of the statement  "            IDictionary<string' KeyValuePair<Type' ReflectionUtils.SetDelegate>> result = new Dictionary<string' KeyValuePair<Type' ReflectionUtils.SetDelegate>>(); " is 152.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,SetterValueFactory,The length of the statement  "                    result[MapClrMemberNameToJsonFieldName(propertyInfo.Name)] = new KeyValuePair<Type' ReflectionUtils.SetDelegate>(propertyInfo.PropertyType' ReflectionUtils.GetSetMethod(propertyInfo)); " is 184.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,SetterValueFactory,The length of the statement  "                result[MapClrMemberNameToJsonFieldName(fieldInfo.Name)] = new KeyValuePair<Type' ReflectionUtils.SetDelegate>(fieldInfo.FieldType' ReflectionUtils.GetSetMethod(fieldInfo)); " is 172.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,The length of the statement  "                    if (type == typeof(DateTime) || (ReflectionUtils.IsNullableType(type) && Nullable.GetUnderlyingType(type) == typeof(DateTime))) " is 127.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,The length of the statement  "                    if (type == typeof(DateTimeOffset) || (ReflectionUtils.IsNullableType(type) && Nullable.GetUnderlyingType(type) == typeof(DateTimeOffset))) " is 139.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,The length of the statement  "                obj = type == typeof(int) || type == typeof(long) || type == typeof(double) || type == typeof(float) || type == typeof(bool) || type == typeof(decimal) || type == typeof(byte) || type == typeof(short) " is 200.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,The length of the statement  "                        else if (ReflectionUtils.IsTypeGenericeCollectionInterface(type) || ReflectionUtils.IsAssignableFrom(typeof(IList)' type)) " is 122.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,The length of the statement  "                            list = (IList)(ConstructorCache[type] ?? ConstructorCache[typeof(List<>).MakeGenericType(innerType)])(jsonObject.Count); " is 120.
Long Statement,Reflection,ReflectionUtils,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ToNullableType,The length of the statement  "                return obj == null ? null : Convert.ChangeType(obj' Nullable.GetUnderlyingType(nullableType)' CultureInfo.InvariantCulture); " is 124.
Long Statement,Reflection,ReflectionUtils,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,GetGetMethodByExpression,The length of the statement  "                UnaryExpression instanceCast = (!IsValueType(propertyInfo.DeclaringType)) ? Expression.TypeAs(instance' propertyInfo.DeclaringType) : Expression.Convert(instance' propertyInfo.DeclaringType); " is 191.
Long Statement,Reflection,ReflectionUtils,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,GetGetMethodByExpression,The length of the statement  "                Func<object' object> compiled = Expression.Lambda<Func<object' object>>(Expression.TypeAs(Expression.Call(instanceCast' getMethodInfo)' typeof(object))' instance).Compile(); " is 173.
Long Statement,Reflection,ReflectionUtils,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,GetSetMethodByExpression,The length of the statement  "                UnaryExpression instanceCast = (!IsValueType(propertyInfo.DeclaringType)) ? Expression.TypeAs(instance' propertyInfo.DeclaringType) : Expression.Convert(instance' propertyInfo.DeclaringType); " is 191.
Long Statement,Reflection,ReflectionUtils,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,GetSetMethodByExpression,The length of the statement  "                UnaryExpression valueCast = (!IsValueType(propertyInfo.PropertyType)) ? Expression.TypeAs(value' propertyInfo.PropertyType) : Expression.Convert(value' propertyInfo.PropertyType); " is 179.
Long Statement,Reflection,ReflectionUtils,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,GetSetMethodByExpression,The length of the statement  "                Action<object' object> compiled = Expression.Lambda<Action<object' object>>(Expression.Call(instanceCast' setMethodInfo' valueCast)' new ParameterExpression[] { instance' value }).Compile(); " is 190.
Long Statement,Reflection,ReflectionUtils,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,GetSetMethodByExpression,The length of the statement  "                    Assign(Expression.Field(Expression.Convert(instance' fieldInfo.DeclaringType)' fieldInfo)' Expression.Convert(value' fieldInfo.FieldType))' instance' value).Compile(); " is 167.
Long Statement,NServiceBus.Settings,SettingsHolder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Settings\SettingsHolder.cs,EnsureMergingIsPossible,The length of the statement  "                throw new Exception("Unable to merge settings. The settings has been locked for modifications. Move any configuration code earlier in the configuration pipeline"); " is 163.
Long Statement,NServiceBus.Settings,SettingsHolder,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Settings\SettingsHolder.cs,EnsureWriteEnabled,The length of the statement  "                throw new Exception($"Unable to set the value for key: {key}. The settings has been locked for modifications. Move any configuration code earlier in the configuration pipeline"); " is 178.
Long Statement,NServiceBus.ConsistencyGuarantees,TransactionModeSettingsExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\TransactionModeSettingsExtensions.cs,GetRequiredTransactionModeForReceives,The length of the statement  "                throw new InvalidOperationException("Receive transaction mode isn't available since this endpoint is configured to run in send-only mode."); " is 140.
Long Statement,NServiceBus.Unicast,MessageHandlerRegistry,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Unicast\MessageHandlerRegistry.cs,GetMethod,The length of the statement  "            return Expression.Lambda<Func<object' object' IMessageHandlerContext' Task>>(body' target' messageParam' contextParam).Compile(); " is 129.
Long Statement,NServiceBus.Unicast,MessageHandlerRegistry,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Unicast\MessageHandlerRegistry.cs,ValidateHandlerType,The length of the statement  "                throw new Exception($"Interfaces IMessageSession or IEndpointInstance should not be resolved from the container to enable sending or publishing messages from within sagas or message handlers. Instead' use the context parameter on the {handlerType.Name}.Handle method to send or publish messages."); " is 298.
Long Statement,NServiceBus.Unicast.Messages,MessageMetadataRegistry,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Unicast\Messages\MessageMetadataRegistry.cs,GetMessageMetadata,The length of the statement  "            var message = $"Could not find metadata for '{messageType.FullName}'.{Environment.NewLine}Ensure the following:{Environment.NewLine}1. '{messageType.FullName}' is included in initial scanning. {Environment.NewLine}2. '{messageType.FullName}' implements either 'IMessage'' 'IEvent' or 'ICommand' or alternatively' if you don't want to implement an interface' you can use 'Unobtrusive Mode'."; " is 391.
Long Statement,NServiceBus.Unicast.Messages,MessageMetadataRegistry,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Unicast\Messages\MessageMetadataRegistry.cs,GetMessageMetadata,The length of the statement  "                Logger.DebugFormat("Message type: '{0}' could not be determined by a 'Type.GetType'' scanning known messages for a match"' messageTypeIdentifier); " is 146.
Long Statement,NServiceBus.Unicast.Messages,MessageMetadataRegistry,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Unicast\Messages\MessageMetadataRegistry.cs,GetMessageMetadata,The length of the statement  "            Logger.WarnFormat("Message header '{0}' was mapped to type '{1}' but that type was not found in the message registry' ensure the same message registration conventions are used in all endpoints' especially if using unobtrusive mode. "' messageType' messageType.FullName); " is 270.
Complex Conditional,NServiceBus,PersistenceStartup,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\PersistenceStartup.cs,ValidateSagaAndOutboxUseSamePersistence,The conditional expression  "sagaPersisterType != null                   && outboxPersisterType != null                  && sagaPersisterType.DefinitionType != outboxPersisterType.DefinitionType                  && bothFeaturesEnabled"  is complex.
Complex Conditional,NServiceBus,XmlSerialization,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSerialization.cs,WriteEntry,The conditional expression  "type.IsValueType || type == typeof(string) || type == typeof(Uri) || type == typeof(char)"  is complex.
Complex Conditional,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitDefault,The conditional expression  "type == typeof(bool) ||                      type == typeof(byte) ||                      type == typeof(char) ||                      type == typeof(sbyte) ||                      type == typeof(int) ||                      type == typeof(uint) ||                      type == typeof(short) ||                      type == typeof(ushort)"  is complex.
Complex Conditional,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitMemberAccess,The conditional expression  "objType != null && objNodeType != ExpressionType.Parameter && prop != null &&                       objType.GetTypeInfo().IsValueType"  is complex.
Complex Conditional,SimpleJson,JsonObject,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,TryConvert,The conditional expression  "(targetType == typeof(IEnumerable)) ||                  (targetType == typeof(IEnumerable<KeyValuePair<string' object>>)) ||                  (targetType == typeof(IDictionary<string' object>)) ||                  (targetType == typeof(IDictionary))"  is complex.
Complex Conditional,SimpleJson,JsonObject,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,TryConvert,The conditional expression  "(targetType == typeof(IEnumerable)) ||                  (targetType == typeof(IEnumerable<KeyValuePair<string' object>>)) ||                  (targetType == typeof(IDictionary<string' object>)) ||                  (targetType == typeof(IDictionary))"  is complex.
Complex Conditional,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The conditional expression  "json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'"  is complex.
Complex Conditional,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The conditional expression  "json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'"  is complex.
Complex Conditional,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The conditional expression  "json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'"  is complex.
Complex Conditional,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The conditional expression  "json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'"  is complex.
Complex Conditional,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The conditional expression  "json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'"  is complex.
Complex Conditional,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The conditional expression  "json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'"  is complex.
Complex Conditional,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,The conditional expression  "(valueIsLong && type == typeof(long)) || (valueIsDouble && type == typeof(double))"  is complex.
Complex Conditional,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,The conditional expression  "(valueIsDouble && type != typeof(double)) || (valueIsLong && type != typeof(long))"  is complex.
Complex Conditional,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,The conditional expression  "(valueIsLong && type == typeof(long)) || (valueIsDouble && type == typeof(double))"  is complex.
Complex Conditional,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,DeserializeObject,The conditional expression  "(valueIsDouble && type != typeof(double)) || (valueIsLong && type != typeof(long))"  is complex.
Empty Catch Block,NServiceBus,ExpiredTimeoutsPoller,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\TimeoutManager\ExpiredTimeoutsPoller.cs,Poll,The method has an empty catch block.
Empty Catch Block,NServiceBus,DefaultRecoverabilityPolicy,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\DefaultRecoverabilityPolicy.cs,HasReachedMaxTime,The method has an empty catch block.
Empty Catch Block,NServiceBus,XmlDeserialization,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlDeserialization.cs,InferNodeType,The method has an empty catch block.
Empty Catch Block,NServiceBus,LearningTransportMessagePump,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportMessagePump.cs,ProcessMessages,The method has an empty catch block.
Empty Catch Block,NServiceBus,AsyncTimer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Utils\AsyncTimer.cs,Start,The method has an empty catch block.
Empty Catch Block,NServiceBus.Hosting.Helpers,AssemblyScanner,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\Helpers\AssemblyScanner.cs,GetReferencedAssembly,The method has an empty catch block.
Magic Number,NServiceBus,FileShareDataBusImplementation,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DataBus\FileShareDataBusImplementation.cs,Get,The following statement contains a magic number: var fileStream = new FileStream(filePath' FileMode.Open' FileAccess.Read' FileShare.ReadWrite' 4096' true);
Magic Number,NServiceBus,FileShareDataBusImplementation,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DataBus\FileShareDataBusImplementation.cs,Put,The following statement contains a magic number: const int bufferSize = 32*1024;
Magic Number,NServiceBus,FileShareDataBusImplementation,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DataBus\FileShareDataBusImplementation.cs,Put,The following statement contains a magic number: const int bufferSize = 32*1024;
Magic Number,NServiceBus,DateTimeExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DateTimeExtensions.cs,ToUtcDateTime,The following statement contains a magic number: switch (format[i])                  {                      case 'y':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          year = year * 10 + (digit - '0');                          break;                        case 'M':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          month = month * 10 + (digit - '0');                          break;                        case 'd':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          day = day * 10 + (digit - '0');                          break;                        case 'H':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          hour = hour * 10 + (digit - '0');                          break;                        case 'm':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          minute = minute * 10 + (digit - '0');                          break;                        case 's':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          second = second * 10 + (digit - '0');                          break;                        case 'f':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          microSecond = microSecond * 10 + (digit - '0');                          break;                  }
Magic Number,NServiceBus,DateTimeExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DateTimeExtensions.cs,ToUtcDateTime,The following statement contains a magic number: switch (format[i])                  {                      case 'y':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          year = year * 10 + (digit - '0');                          break;                        case 'M':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          month = month * 10 + (digit - '0');                          break;                        case 'd':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          day = day * 10 + (digit - '0');                          break;                        case 'H':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          hour = hour * 10 + (digit - '0');                          break;                        case 'm':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          minute = minute * 10 + (digit - '0');                          break;                        case 's':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          second = second * 10 + (digit - '0');                          break;                        case 'f':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          microSecond = microSecond * 10 + (digit - '0');                          break;                  }
Magic Number,NServiceBus,DateTimeExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DateTimeExtensions.cs,ToUtcDateTime,The following statement contains a magic number: switch (format[i])                  {                      case 'y':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          year = year * 10 + (digit - '0');                          break;                        case 'M':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          month = month * 10 + (digit - '0');                          break;                        case 'd':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          day = day * 10 + (digit - '0');                          break;                        case 'H':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          hour = hour * 10 + (digit - '0');                          break;                        case 'm':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          minute = minute * 10 + (digit - '0');                          break;                        case 's':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          second = second * 10 + (digit - '0');                          break;                        case 'f':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          microSecond = microSecond * 10 + (digit - '0');                          break;                  }
Magic Number,NServiceBus,DateTimeExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DateTimeExtensions.cs,ToUtcDateTime,The following statement contains a magic number: switch (format[i])                  {                      case 'y':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          year = year * 10 + (digit - '0');                          break;                        case 'M':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          month = month * 10 + (digit - '0');                          break;                        case 'd':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          day = day * 10 + (digit - '0');                          break;                        case 'H':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          hour = hour * 10 + (digit - '0');                          break;                        case 'm':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          minute = minute * 10 + (digit - '0');                          break;                        case 's':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          second = second * 10 + (digit - '0');                          break;                        case 'f':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          microSecond = microSecond * 10 + (digit - '0');                          break;                  }
Magic Number,NServiceBus,DateTimeExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DateTimeExtensions.cs,ToUtcDateTime,The following statement contains a magic number: switch (format[i])                  {                      case 'y':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          year = year * 10 + (digit - '0');                          break;                        case 'M':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          month = month * 10 + (digit - '0');                          break;                        case 'd':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          day = day * 10 + (digit - '0');                          break;                        case 'H':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          hour = hour * 10 + (digit - '0');                          break;                        case 'm':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          minute = minute * 10 + (digit - '0');                          break;                        case 's':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          second = second * 10 + (digit - '0');                          break;                        case 'f':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          microSecond = microSecond * 10 + (digit - '0');                          break;                  }
Magic Number,NServiceBus,DateTimeExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DateTimeExtensions.cs,ToUtcDateTime,The following statement contains a magic number: switch (format[i])                  {                      case 'y':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          year = year * 10 + (digit - '0');                          break;                        case 'M':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          month = month * 10 + (digit - '0');                          break;                        case 'd':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          day = day * 10 + (digit - '0');                          break;                        case 'H':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          hour = hour * 10 + (digit - '0');                          break;                        case 'm':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          minute = minute * 10 + (digit - '0');                          break;                        case 's':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          second = second * 10 + (digit - '0');                          break;                        case 'f':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          microSecond = microSecond * 10 + (digit - '0');                          break;                  }
Magic Number,NServiceBus,DateTimeExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DateTimeExtensions.cs,ToUtcDateTime,The following statement contains a magic number: switch (format[i])                  {                      case 'y':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          year = year * 10 + (digit - '0');                          break;                        case 'M':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          month = month * 10 + (digit - '0');                          break;                        case 'd':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          day = day * 10 + (digit - '0');                          break;                        case 'H':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          hour = hour * 10 + (digit - '0');                          break;                        case 'm':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          minute = minute * 10 + (digit - '0');                          break;                        case 's':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          second = second * 10 + (digit - '0');                          break;                        case 'f':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          microSecond = microSecond * 10 + (digit - '0');                          break;                  }
Magic Number,NServiceBus,ExpiredTimeoutsPoller,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DelayedDelivery\TimeoutManager\ExpiredTimeoutsPoller.cs,ExpiredTimeoutsPoller,The following statement contains a magic number: startSlice = now.AddYears(-10);
Magic Number,NServiceBus,Settings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\HostingComponent.Settings.cs,Settings,The following statement contains a magic number: MaxRetries = 10;
Magic Number,NServiceBus,Settings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\HostingComponent.Settings.cs,Settings,The following statement contains a magic number: RetryDelay = TimeSpan.FromSeconds(2);
Magic Number,NServiceBus,Settings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\HostingComponent.Settings.cs,Settings,The following statement contains a magic number: MaxRetries = 10;
Magic Number,NServiceBus,Settings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\HostingComponent.Settings.cs,Settings,The following statement contains a magic number: RetryDelay = TimeSpan.FromSeconds(2);
Magic Number,NServiceBus,CombGuid,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\IdGeneration\CombGuid.cs,Generate,The following statement contains a magic number: var millisecondArray = BitConverter.GetBytes((long) (timeOfDay.TotalMilliseconds/3.333333));
Magic Number,NServiceBus,CombGuid,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\IdGeneration\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(daysArray' daysArray.Length - 2' guidArray' guidArray.Length - 6' 2);
Magic Number,NServiceBus,CombGuid,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\IdGeneration\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(daysArray' daysArray.Length - 2' guidArray' guidArray.Length - 6' 2);
Magic Number,NServiceBus,CombGuid,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\IdGeneration\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(daysArray' daysArray.Length - 2' guidArray' guidArray.Length - 6' 2);
Magic Number,NServiceBus,CombGuid,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\IdGeneration\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(millisecondArray' millisecondArray.Length - 4' guidArray' guidArray.Length - 4' 4);
Magic Number,NServiceBus,CombGuid,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\IdGeneration\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(millisecondArray' millisecondArray.Length - 4' guidArray' guidArray.Length - 4' 4);
Magic Number,NServiceBus,CombGuid,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\IdGeneration\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(millisecondArray' millisecondArray.Length - 4' guidArray' guidArray.Length - 4' 4);
Magic Number,NServiceBus,LicenseManager,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Licensing\LicenseManager.cs,OpenTrialExtensionPage,The following statement contains a magic number: Task.Delay(TimeSpan.FromSeconds(5)).GetAwaiter().GetResult();
Magic Number,NServiceBus,DefaultLoggerFactory,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Logging\DefaultLoggerFactory.cs,Write,The following statement contains a magic number: var paddedLevel = messageLevel.ToString().ToUpper().PadRight(5);
Magic Number,NServiceBus,RollingLogger,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Logging\RollingLogger.cs,TryDeriveLogInformationFromPath,The following statement contains a magic number: split.Length != 4
Magic Number,NServiceBus,RollingLogger,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Logging\RollingLogger.cs,TryDeriveLogInformationFromPath,The following statement contains a magic number: var datePart = split[2];
Magic Number,NServiceBus,RollingLogger,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Logging\RollingLogger.cs,TryDeriveLogInformationFromPath,The following statement contains a magic number: var sequencePart = split[3];
Magic Number,NServiceBus,LogicalAddress,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\LogicalAddress.cs,GetHashCode,The following statement contains a magic number: return ((Qualifier?.GetHashCode() ?? 0)*397) ^ (EndpointInstance?.GetHashCode() ?? 0);
Magic Number,NServiceBus,StoredMessage,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\InMemory\Outbox\InMemoryOutboxStorage.cs,GetHashCode,The following statement contains a magic number: return ((Id?.GetHashCode() ?? 0)*397) ^ Dispatched.GetHashCode();
Magic Number,NServiceBus,CorrelationId,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Persistence\InMemory\SagaPersister\InMemorySagaPersister.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ propertyValue.GetHashCode();
Magic Number,NServiceBus,TransportReceiveToPhysicalMessageConnector,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\Incoming\TransportReceiveToPhysicalMessageConnector.cs,DeserializeConstraints,The following statement contains a magic number: var constraints = new List<DeliveryConstraint>(4);
Magic Number,NServiceBus,RecoverabilityComponent,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Recoverability\RecoverabilityComponent.cs,RecoverabilityComponent,The following statement contains a magic number: settings.SetDefault(NumberOfImmediateRetries' 5);
Magic Number,NServiceBus,XmlDeserialization,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlDeserialization.cs,GetPropertyValue,The following statement contains a magic number: args.Length != 2
Magic Number,NServiceBus,XmlSanitizingStream,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSanitizingStream.cs,ReadLine,The following statement contains a magic number: switch (number)                  {                      case -1:                          if (builder.Length > 0)                          {                              return builder.ToString();                          }                          return null;                        case 13:                      case 10:                          if ((number == 13) && (Peek() == 10))                          {                              Read();                          }                          return builder.ToString();                  }
Magic Number,NServiceBus,XmlSanitizingStream,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSanitizingStream.cs,ReadLine,The following statement contains a magic number: switch (number)                  {                      case -1:                          if (builder.Length > 0)                          {                              return builder.ToString();                          }                          return null;                        case 13:                      case 10:                          if ((number == 13) && (Peek() == 10))                          {                              Read();                          }                          return builder.ToString();                  }
Magic Number,NServiceBus,XmlSanitizingStream,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSanitizingStream.cs,ReadLine,The following statement contains a magic number: switch (number)                  {                      case -1:                          if (builder.Length > 0)                          {                              return builder.ToString();                          }                          return null;                        case 13:                      case 10:                          if ((number == 13) && (Peek() == 10))                          {                              Read();                          }                          return builder.ToString();                  }
Magic Number,NServiceBus,XmlSanitizingStream,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSanitizingStream.cs,ReadLine,The following statement contains a magic number: switch (number)                  {                      case -1:                          if (builder.Length > 0)                          {                              return builder.ToString();                          }                          return null;                        case 13:                      case 10:                          if ((number == 13) && (Peek() == 10))                          {                              Read();                          }                          return builder.ToString();                  }
Magic Number,NServiceBus,XmlSerializerCache,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSerializerCache.cs,InitTypeInternal,The following statement contains a magic number: args.Length == 2
Magic Number,NServiceBus,XmlSerializerCache,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSerializerCache.cs,GetAllPropertiesForType,The following statement contains a magic number: args.Length == 2
Magic Number,NServiceBus,AsyncDirectory,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\AsyncDirectory.cs,Move,The following statement contains a magic number: await Task.Delay(100).ConfigureAwait(false);
Magic Number,NServiceBus,AsyncDirectory,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\AsyncDirectory.cs,Move,The following statement contains a magic number: count <= 10
Magic Number,NServiceBus,AsyncFile,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\AsyncFile.cs,CreateWriteStream,The following statement contains a magic number: return new FileStream(filePath' fileMode' FileAccess.Write' FileShare.None' bufferSize: 4096' useAsync: true);
Magic Number,NServiceBus,AsyncFile,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\AsyncFile.cs,CreateReadStream,The following statement contains a magic number: return new FileStream(filePath' FileMode.Open' FileAccess.Read' FileShare.Read' bufferSize: 4096' useAsync: true);
Magic Number,NServiceBus,AsyncFile,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\AsyncFile.cs,Move,The following statement contains a magic number: await Task.Delay(100).ConfigureAwait(false);
Magic Number,NServiceBus,AsyncFile,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\AsyncFile.cs,Move,The following statement contains a magic number: count > 10
Magic Number,NServiceBus,DelayedMessagePoller,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\DelayedMessagePoller.cs,MoveDelayedMessagesToMainDirectory,The following statement contains a magic number: DateTime.UtcNow >= timeToTrigger.AddSeconds(10)
Magic Number,NServiceBus,LearningTransportDispatcher,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportDispatcher.cs,LearningTransportDispatcher,The following statement contains a magic number: maxMessageSizeKB > int.MaxValue / 1024
Magic Number,NServiceBus,LearningTransportDispatcher,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportDispatcher.cs,WriteMessage,The following statement contains a magic number: headerSize + message.Body.Length > maxMessageSizeKB * 1024
Magic Number,NServiceBus,LearningTransportInfrastructure,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportInfrastructure.cs,ConfigureSendInfrastructure,The following statement contains a magic number: var maxPayloadSize = settings.GetOrDefault<bool>(NoPayloadSizeRestrictionKey) ? int.MaxValue / 1024 : 64;
Magic Number,NServiceBus,LearningTransportInfrastructure,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportInfrastructure.cs,ConfigureSendInfrastructure,The following statement contains a magic number: var maxPayloadSize = settings.GetOrDefault<bool>(NoPayloadSizeRestrictionKey) ? int.MaxValue / 1024 : 64;
Magic Number,NServiceBus,LearningTransportMessagePump,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportMessagePump.cs,Stop,The following statement contains a magic number: await Task.Delay(50' CancellationToken.None)                      .ConfigureAwait(false);
Magic Number,NServiceBus,LearningTransportMessagePump,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\Learning\LearningTransportMessagePump.cs,InnerProcessMessages,The following statement contains a magic number: await Task.Delay(10' cancellationToken).ConfigureAwait(false);
Magic Number,NServiceBus,ExceptionHeaderHelper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Utils\ExceptionHeaderHelper.cs,SetExceptionHeaders,The following statement contains a magic number: headers["NServiceBus.ExceptionInfo.Message"] = e.GetMessage().Truncate(16384);
Magic Number,NServiceBus,FileVersionRetriever,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Utils\FileVersionRetriever.cs,GetFileVersion,The following statement contains a magic number: return new Version(fileVersion.FileMajorPart' fileVersion.FileMinorPart' fileVersion.FileBuildPart).ToString(3);
Magic Number,NServiceBus,FileVersionRetriever,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Utils\FileVersionRetriever.cs,GetFileVersion,The following statement contains a magic number: return version.ToString(3);
Magic Number,NServiceBus,FileVersionRetriever,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Utils\FileVersionRetriever.cs,GetFileVersion,The following statement contains a magic number: return assembly.GetName().Version.ToString(3);
Magic Number,NServiceBus,TypeExtensionMethods,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Utils\Reflection\ExtensionMethods.cs,SerializationFriendlyName,The following statement contains a magic number: return TypeToNameLookup.GetOrAdd(t.TypeHandle' typeHandle =>              {                  var index = t.Name.IndexOf('`');                  if (index >= 0)                  {                      var result = t.Name.Substring(0' index) + "Of";                      var args = t.GetGenericArguments();                      for (var i = 0; i < args.Length; i++)                      {                          result += args[i].SerializationFriendlyName();                          if (i != args.Length - 1)                          {                              result += "And";                          }                      }                        if (args.Length == 2)                      {                          if (typeof(KeyValuePair<'>).MakeGenericType(args[0]' args[1]) == t)                          {                              result = "NServiceBus." + result;                          }                      }                        return result;                  }                  return Type.GetTypeFromHandle(typeHandle).Name;              });
Magic Number,NServiceBus.Features,Outbox,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Reliability\Outbox\Outbox.cs,Outbox,The following statement contains a magic number: Defaults(s => s.SetDefault(InMemoryOutboxPersistence.TimeToKeepDeduplicationEntries' TimeSpan.FromDays(5)));
Magic Number,NServiceBus.Features,Settings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\UnitOfWork\TransactionScopes\TransactionScopeUnitOfWork.cs,GetMaxTimeout,The following statement contains a magic number: var maxTimeout = TimeSpan.FromMinutes(10);
Magic Number,NServiceBus.Hosting.Helpers,AssemblyScanner,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\Helpers\AssemblyScanner.cs,FormatReflectionTypeLoadException,The following statement contains a magic number: sb.NewLine(string.Format(bindingRedirects' nsbAssemblyName.Version.ToString(4)));
Magic Number,NServiceBus.Hosting.Helpers,AssemblyScanner,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Hosting\Helpers\AssemblyScanner.cs,DistillLowerAssemblyName,The following statement contains a magic number: lowerAssemblyName = lowerAssemblyName.Substring(0' lowerAssemblyName.Length - 4);
Magic Number,NServiceBus.MessageInterfaces.MessageMapper.Reflection,MessageMapper,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\MessageInterfaces\MessageMapper\Reflection\MessageMapper.cs,GetTypeName,The following statement contains a magic number: args.Length == 2
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Push,The following statement contains a magic number: switch (index)              {                  case 0:                      emitter.Emit(OpCodes.Ldloc_0);                      return;                  case 1:                      emitter.Emit(OpCodes.Ldloc_1);                      return;                  case 2:                      emitter.Emit(OpCodes.Ldloc_2);                      return;                  case 3:                      emitter.Emit(OpCodes.Ldloc_3);                      return;              }
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Push,The following statement contains a magic number: switch (index)              {                  case 0:                      emitter.Emit(OpCodes.Ldloc_0);                      return;                  case 1:                      emitter.Emit(OpCodes.Ldloc_1);                      return;                  case 2:                      emitter.Emit(OpCodes.Ldloc_2);                      return;                  case 3:                      emitter.Emit(OpCodes.Ldloc_3);                      return;              }
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Push,The following statement contains a magic number: index <= 255
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,PushArgument,The following statement contains a magic number: switch (index)              {                  case 0:                      emitter.Emit(OpCodes.Ldarg_0);                      return;                  case 1:                      emitter.Emit(OpCodes.Ldarg_1);                      return;                  case 2:                      emitter.Emit(OpCodes.Ldarg_2);                      return;                  case 3:                      emitter.Emit(OpCodes.Ldarg_3);                      return;              }
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,PushArgument,The following statement contains a magic number: switch (index)              {                  case 0:                      emitter.Emit(OpCodes.Ldarg_0);                      return;                  case 1:                      emitter.Emit(OpCodes.Ldarg_1);                      return;                  case 2:                      emitter.Emit(OpCodes.Ldarg_2);                      return;                  case 3:                      emitter.Emit(OpCodes.Ldarg_3);                      return;              }
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,PushArgument,The following statement contains a magic number: index <= 255
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Store,The following statement contains a magic number: switch (index)              {                  case 0:                      emitter.Emit(OpCodes.Stloc_0);                      return;                  case 1:                      emitter.Emit(OpCodes.Stloc_1);                      return;                  case 2:                      emitter.Emit(OpCodes.Stloc_2);                      return;                  case 3:                      emitter.Emit(OpCodes.Stloc_3);                      return;              }
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Store,The following statement contains a magic number: switch (index)              {                  case 0:                      emitter.Emit(OpCodes.Stloc_0);                      return;                  case 1:                      emitter.Emit(OpCodes.Stloc_1);                      return;                  case 2:                      emitter.Emit(OpCodes.Stloc_2);                      return;                  case 3:                      emitter.Emit(OpCodes.Stloc_3);                      return;              }
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Store,The following statement contains a magic number: index <= 255
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Push,The following statement contains a magic number: switch (value)              {                  case 0:                      emitter.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      emitter.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      emitter.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      emitter.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      emitter.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      emitter.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      emitter.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      emitter.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      emitter.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Push,The following statement contains a magic number: switch (value)              {                  case 0:                      emitter.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      emitter.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      emitter.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      emitter.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      emitter.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      emitter.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      emitter.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      emitter.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      emitter.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Push,The following statement contains a magic number: switch (value)              {                  case 0:                      emitter.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      emitter.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      emitter.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      emitter.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      emitter.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      emitter.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      emitter.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      emitter.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      emitter.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Push,The following statement contains a magic number: switch (value)              {                  case 0:                      emitter.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      emitter.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      emitter.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      emitter.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      emitter.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      emitter.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      emitter.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      emitter.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      emitter.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Push,The following statement contains a magic number: switch (value)              {                  case 0:                      emitter.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      emitter.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      emitter.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      emitter.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      emitter.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      emitter.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      emitter.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      emitter.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      emitter.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Push,The following statement contains a magic number: switch (value)              {                  case 0:                      emitter.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      emitter.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      emitter.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      emitter.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      emitter.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      emitter.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      emitter.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      emitter.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      emitter.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Push,The following statement contains a magic number: switch (value)              {                  case 0:                      emitter.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      emitter.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      emitter.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      emitter.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      emitter.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      emitter.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      emitter.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      emitter.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      emitter.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Push,The following statement contains a magic number: value > -129 && value < 128
Magic Number,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Push,The following statement contains a magic number: value > -129 && value < 128
Magic Number,LightInject,ImmutableHashTable<TKey;TValue>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,ImmutableHashTable,The following statement contains a magic number: this.Divisor = previous.Divisor * 2;
Magic Number,LightInject,ImmutableHashTable<TKey;TValue>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,ImmutableHashTable,The following statement contains a magic number: this.Buckets = new ImmutableHashTree<TKey' TValue>[2];
Magic Number,LightInject,ImmutableHashTable<TKey;TValue>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,ImmutableHashTable,The following statement contains a magic number: this.Divisor = 2;
Magic Number,LightInject,ImmutableHashTable<TKey;TValue>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,ImmutableHashTable,The following statement contains a magic number: InitializeBuckets(0' 2);
Magic Number,LightInject,ImmutableHashTree<TKey;TValue>,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,ImmutableHashTree,The following statement contains a magic number: balance == -2
Magic Number,NServiceBus.Transport,PushRuntimeSettings,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Transports\PushRuntimeSettings.cs,PushRuntimeSettings,The following statement contains a magic number: MaxConcurrency = Math.Max(2' Environment.ProcessorCount);
Magic Number,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,LoadParamArg,The following statement contains a magic number: switch (paramIndex)                  {                      case 0:                          il.Emit(OpCodes.Ldarg_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldarg_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldarg_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldarg_3);                          break;                      default:                          if (paramIndex <= byte.MaxValue)                              il.Emit(OpCodes.Ldarg_S' (byte)paramIndex);                          else                              il.Emit(OpCodes.Ldarg' paramIndex);                          break;                  }
Magic Number,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,LoadParamArg,The following statement contains a magic number: switch (paramIndex)                  {                      case 0:                          il.Emit(OpCodes.Ldarg_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldarg_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldarg_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldarg_3);                          break;                      default:                          if (paramIndex <= byte.MaxValue)                              il.Emit(OpCodes.Ldarg_S' (byte)paramIndex);                          else                              il.Emit(OpCodes.Ldarg' paramIndex);                          break;                  }
Magic Number,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,GetCurryClosureMethod,The following statement contains a magic number: return isAction                      ? CurryClosureActions.Methods[lambdaTypeArgs.Length - 1].MakeGenericMethod(lambdaTypeArgs)                      : CurryClosureFuncs.Methods[lambdaTypeArgs.Length - 2].MakeGenericMethod(lambdaTypeArgs);
Magic Number,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitLoadConstantInt,The following statement contains a magic number: switch (i)                  {                      case -1:                          il.Emit(OpCodes.Ldc_I4_M1);                          break;                      case 0:                          il.Emit(OpCodes.Ldc_I4_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldc_I4_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldc_I4_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldc_I4_3);                          break;                      case 4:                          il.Emit(OpCodes.Ldc_I4_4);                          break;                      case 5:                          il.Emit(OpCodes.Ldc_I4_5);                          break;                      case 6:                          il.Emit(OpCodes.Ldc_I4_6);                          break;                      case 7:                          il.Emit(OpCodes.Ldc_I4_7);                          break;                      case 8:                          il.Emit(OpCodes.Ldc_I4_8);                          break;                      default:                          il.Emit(OpCodes.Ldc_I4' i);                          break;                  }
Magic Number,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitLoadConstantInt,The following statement contains a magic number: switch (i)                  {                      case -1:                          il.Emit(OpCodes.Ldc_I4_M1);                          break;                      case 0:                          il.Emit(OpCodes.Ldc_I4_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldc_I4_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldc_I4_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldc_I4_3);                          break;                      case 4:                          il.Emit(OpCodes.Ldc_I4_4);                          break;                      case 5:                          il.Emit(OpCodes.Ldc_I4_5);                          break;                      case 6:                          il.Emit(OpCodes.Ldc_I4_6);                          break;                      case 7:                          il.Emit(OpCodes.Ldc_I4_7);                          break;                      case 8:                          il.Emit(OpCodes.Ldc_I4_8);                          break;                      default:                          il.Emit(OpCodes.Ldc_I4' i);                          break;                  }
Magic Number,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitLoadConstantInt,The following statement contains a magic number: switch (i)                  {                      case -1:                          il.Emit(OpCodes.Ldc_I4_M1);                          break;                      case 0:                          il.Emit(OpCodes.Ldc_I4_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldc_I4_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldc_I4_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldc_I4_3);                          break;                      case 4:                          il.Emit(OpCodes.Ldc_I4_4);                          break;                      case 5:                          il.Emit(OpCodes.Ldc_I4_5);                          break;                      case 6:                          il.Emit(OpCodes.Ldc_I4_6);                          break;                      case 7:                          il.Emit(OpCodes.Ldc_I4_7);                          break;                      case 8:                          il.Emit(OpCodes.Ldc_I4_8);                          break;                      default:                          il.Emit(OpCodes.Ldc_I4' i);                          break;                  }
Magic Number,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitLoadConstantInt,The following statement contains a magic number: switch (i)                  {                      case -1:                          il.Emit(OpCodes.Ldc_I4_M1);                          break;                      case 0:                          il.Emit(OpCodes.Ldc_I4_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldc_I4_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldc_I4_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldc_I4_3);                          break;                      case 4:                          il.Emit(OpCodes.Ldc_I4_4);                          break;                      case 5:                          il.Emit(OpCodes.Ldc_I4_5);                          break;                      case 6:                          il.Emit(OpCodes.Ldc_I4_6);                          break;                      case 7:                          il.Emit(OpCodes.Ldc_I4_7);                          break;                      case 8:                          il.Emit(OpCodes.Ldc_I4_8);                          break;                      default:                          il.Emit(OpCodes.Ldc_I4' i);                          break;                  }
Magic Number,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitLoadConstantInt,The following statement contains a magic number: switch (i)                  {                      case -1:                          il.Emit(OpCodes.Ldc_I4_M1);                          break;                      case 0:                          il.Emit(OpCodes.Ldc_I4_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldc_I4_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldc_I4_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldc_I4_3);                          break;                      case 4:                          il.Emit(OpCodes.Ldc_I4_4);                          break;                      case 5:                          il.Emit(OpCodes.Ldc_I4_5);                          break;                      case 6:                          il.Emit(OpCodes.Ldc_I4_6);                          break;                      case 7:                          il.Emit(OpCodes.Ldc_I4_7);                          break;                      case 8:                          il.Emit(OpCodes.Ldc_I4_8);                          break;                      default:                          il.Emit(OpCodes.Ldc_I4' i);                          break;                  }
Magic Number,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitLoadConstantInt,The following statement contains a magic number: switch (i)                  {                      case -1:                          il.Emit(OpCodes.Ldc_I4_M1);                          break;                      case 0:                          il.Emit(OpCodes.Ldc_I4_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldc_I4_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldc_I4_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldc_I4_3);                          break;                      case 4:                          il.Emit(OpCodes.Ldc_I4_4);                          break;                      case 5:                          il.Emit(OpCodes.Ldc_I4_5);                          break;                      case 6:                          il.Emit(OpCodes.Ldc_I4_6);                          break;                      case 7:                          il.Emit(OpCodes.Ldc_I4_7);                          break;                      case 8:                          il.Emit(OpCodes.Ldc_I4_8);                          break;                      default:                          il.Emit(OpCodes.Ldc_I4' i);                          break;                  }
Magic Number,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,EmitLoadConstantInt,The following statement contains a magic number: switch (i)                  {                      case -1:                          il.Emit(OpCodes.Ldc_I4_M1);                          break;                      case 0:                          il.Emit(OpCodes.Ldc_I4_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldc_I4_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldc_I4_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldc_I4_3);                          break;                      case 4:                          il.Emit(OpCodes.Ldc_I4_4);                          break;                      case 5:                          il.Emit(OpCodes.Ldc_I4_5);                          break;                      case 6:                          il.Emit(OpCodes.Ldc_I4_6);                          break;                      case 7:                          il.Emit(OpCodes.Ldc_I4_7);                          break;                      case 8:                          il.Emit(OpCodes.Ldc_I4_8);                          break;                      default:                          il.Emit(OpCodes.Ldc_I4' i);                          break;                  }
Magic Number,FastExpressionCompiler,Tools,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,WithLast,The following statement contains a magic number: source.Length == 2
Magic Number,FastExpressionCompiler,Tools,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,GetFuncOrActionType,The following statement contains a magic number: switch (paramTypes.Length)                  {                      case 0: return typeof(Action);                      case 1: return typeof(Action<>).MakeGenericType(paramTypes);                      case 2: return typeof(Action<'>).MakeGenericType(paramTypes);                      case 3: return typeof(Action<''>).MakeGenericType(paramTypes);                      case 4: return typeof(Action<'''>).MakeGenericType(paramTypes);                      case 5: return typeof(Action<''''>).MakeGenericType(paramTypes);                      case 6: return typeof(Action<'''''>).MakeGenericType(paramTypes);                      case 7: return typeof(Action<''''''>).MakeGenericType(paramTypes);                      default:                          throw new NotSupportedException(                              string.Format("Action with so many ({0}) parameters is not supported!"' paramTypes.Length));                  }
Magic Number,FastExpressionCompiler,Tools,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,GetFuncOrActionType,The following statement contains a magic number: switch (paramTypes.Length)                  {                      case 0: return typeof(Action);                      case 1: return typeof(Action<>).MakeGenericType(paramTypes);                      case 2: return typeof(Action<'>).MakeGenericType(paramTypes);                      case 3: return typeof(Action<''>).MakeGenericType(paramTypes);                      case 4: return typeof(Action<'''>).MakeGenericType(paramTypes);                      case 5: return typeof(Action<''''>).MakeGenericType(paramTypes);                      case 6: return typeof(Action<'''''>).MakeGenericType(paramTypes);                      case 7: return typeof(Action<''''''>).MakeGenericType(paramTypes);                      default:                          throw new NotSupportedException(                              string.Format("Action with so many ({0}) parameters is not supported!"' paramTypes.Length));                  }
Magic Number,FastExpressionCompiler,Tools,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,GetFuncOrActionType,The following statement contains a magic number: switch (paramTypes.Length)                  {                      case 0: return typeof(Action);                      case 1: return typeof(Action<>).MakeGenericType(paramTypes);                      case 2: return typeof(Action<'>).MakeGenericType(paramTypes);                      case 3: return typeof(Action<''>).MakeGenericType(paramTypes);                      case 4: return typeof(Action<'''>).MakeGenericType(paramTypes);                      case 5: return typeof(Action<''''>).MakeGenericType(paramTypes);                      case 6: return typeof(Action<'''''>).MakeGenericType(paramTypes);                      case 7: return typeof(Action<''''''>).MakeGenericType(paramTypes);                      default:                          throw new NotSupportedException(                              string.Format("Action with so many ({0}) parameters is not supported!"' paramTypes.Length));                  }
Magic Number,FastExpressionCompiler,Tools,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,GetFuncOrActionType,The following statement contains a magic number: switch (paramTypes.Length)                  {                      case 0: return typeof(Action);                      case 1: return typeof(Action<>).MakeGenericType(paramTypes);                      case 2: return typeof(Action<'>).MakeGenericType(paramTypes);                      case 3: return typeof(Action<''>).MakeGenericType(paramTypes);                      case 4: return typeof(Action<'''>).MakeGenericType(paramTypes);                      case 5: return typeof(Action<''''>).MakeGenericType(paramTypes);                      case 6: return typeof(Action<'''''>).MakeGenericType(paramTypes);                      case 7: return typeof(Action<''''''>).MakeGenericType(paramTypes);                      default:                          throw new NotSupportedException(                              string.Format("Action with so many ({0}) parameters is not supported!"' paramTypes.Length));                  }
Magic Number,FastExpressionCompiler,Tools,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,GetFuncOrActionType,The following statement contains a magic number: switch (paramTypes.Length)                  {                      case 0: return typeof(Action);                      case 1: return typeof(Action<>).MakeGenericType(paramTypes);                      case 2: return typeof(Action<'>).MakeGenericType(paramTypes);                      case 3: return typeof(Action<''>).MakeGenericType(paramTypes);                      case 4: return typeof(Action<'''>).MakeGenericType(paramTypes);                      case 5: return typeof(Action<''''>).MakeGenericType(paramTypes);                      case 6: return typeof(Action<'''''>).MakeGenericType(paramTypes);                      case 7: return typeof(Action<''''''>).MakeGenericType(paramTypes);                      default:                          throw new NotSupportedException(                              string.Format("Action with so many ({0}) parameters is not supported!"' paramTypes.Length));                  }
Magic Number,FastExpressionCompiler,Tools,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,GetFuncOrActionType,The following statement contains a magic number: switch (paramTypes.Length)                  {                      case 0: return typeof(Action);                      case 1: return typeof(Action<>).MakeGenericType(paramTypes);                      case 2: return typeof(Action<'>).MakeGenericType(paramTypes);                      case 3: return typeof(Action<''>).MakeGenericType(paramTypes);                      case 4: return typeof(Action<'''>).MakeGenericType(paramTypes);                      case 5: return typeof(Action<''''>).MakeGenericType(paramTypes);                      case 6: return typeof(Action<'''''>).MakeGenericType(paramTypes);                      case 7: return typeof(Action<''''''>).MakeGenericType(paramTypes);                      default:                          throw new NotSupportedException(                              string.Format("Action with so many ({0}) parameters is not supported!"' paramTypes.Length));                  }
Magic Number,FastExpressionCompiler,Tools,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,GetFuncOrActionType,The following statement contains a magic number: switch (paramTypes.Length)              {                  case 1: return typeof(Func<>).MakeGenericType(paramTypes);                  case 2: return typeof(Func<'>).MakeGenericType(paramTypes);                  case 3: return typeof(Func<''>).MakeGenericType(paramTypes);                  case 4: return typeof(Func<'''>).MakeGenericType(paramTypes);                  case 5: return typeof(Func<''''>).MakeGenericType(paramTypes);                  case 6: return typeof(Func<'''''>).MakeGenericType(paramTypes);                  case 7: return typeof(Func<''''''>).MakeGenericType(paramTypes);                  case 8: return typeof(Func<'''''''>).MakeGenericType(paramTypes);                  default:                      throw new NotSupportedException(                          string.Format("Func with so many ({0}) parameters is not supported!"' paramTypes.Length));              }
Magic Number,FastExpressionCompiler,Tools,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,GetFuncOrActionType,The following statement contains a magic number: switch (paramTypes.Length)              {                  case 1: return typeof(Func<>).MakeGenericType(paramTypes);                  case 2: return typeof(Func<'>).MakeGenericType(paramTypes);                  case 3: return typeof(Func<''>).MakeGenericType(paramTypes);                  case 4: return typeof(Func<'''>).MakeGenericType(paramTypes);                  case 5: return typeof(Func<''''>).MakeGenericType(paramTypes);                  case 6: return typeof(Func<'''''>).MakeGenericType(paramTypes);                  case 7: return typeof(Func<''''''>).MakeGenericType(paramTypes);                  case 8: return typeof(Func<'''''''>).MakeGenericType(paramTypes);                  default:                      throw new NotSupportedException(                          string.Format("Func with so many ({0}) parameters is not supported!"' paramTypes.Length));              }
Magic Number,FastExpressionCompiler,Tools,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,GetFuncOrActionType,The following statement contains a magic number: switch (paramTypes.Length)              {                  case 1: return typeof(Func<>).MakeGenericType(paramTypes);                  case 2: return typeof(Func<'>).MakeGenericType(paramTypes);                  case 3: return typeof(Func<''>).MakeGenericType(paramTypes);                  case 4: return typeof(Func<'''>).MakeGenericType(paramTypes);                  case 5: return typeof(Func<''''>).MakeGenericType(paramTypes);                  case 6: return typeof(Func<'''''>).MakeGenericType(paramTypes);                  case 7: return typeof(Func<''''''>).MakeGenericType(paramTypes);                  case 8: return typeof(Func<'''''''>).MakeGenericType(paramTypes);                  default:                      throw new NotSupportedException(                          string.Format("Func with so many ({0}) parameters is not supported!"' paramTypes.Length));              }
Magic Number,FastExpressionCompiler,Tools,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,GetFuncOrActionType,The following statement contains a magic number: switch (paramTypes.Length)              {                  case 1: return typeof(Func<>).MakeGenericType(paramTypes);                  case 2: return typeof(Func<'>).MakeGenericType(paramTypes);                  case 3: return typeof(Func<''>).MakeGenericType(paramTypes);                  case 4: return typeof(Func<'''>).MakeGenericType(paramTypes);                  case 5: return typeof(Func<''''>).MakeGenericType(paramTypes);                  case 6: return typeof(Func<'''''>).MakeGenericType(paramTypes);                  case 7: return typeof(Func<''''''>).MakeGenericType(paramTypes);                  case 8: return typeof(Func<'''''''>).MakeGenericType(paramTypes);                  default:                      throw new NotSupportedException(                          string.Format("Func with so many ({0}) parameters is not supported!"' paramTypes.Length));              }
Magic Number,FastExpressionCompiler,Tools,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,GetFuncOrActionType,The following statement contains a magic number: switch (paramTypes.Length)              {                  case 1: return typeof(Func<>).MakeGenericType(paramTypes);                  case 2: return typeof(Func<'>).MakeGenericType(paramTypes);                  case 3: return typeof(Func<''>).MakeGenericType(paramTypes);                  case 4: return typeof(Func<'''>).MakeGenericType(paramTypes);                  case 5: return typeof(Func<''''>).MakeGenericType(paramTypes);                  case 6: return typeof(Func<'''''>).MakeGenericType(paramTypes);                  case 7: return typeof(Func<''''''>).MakeGenericType(paramTypes);                  case 8: return typeof(Func<'''''''>).MakeGenericType(paramTypes);                  default:                      throw new NotSupportedException(                          string.Format("Func with so many ({0}) parameters is not supported!"' paramTypes.Length));              }
Magic Number,FastExpressionCompiler,Tools,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,GetFuncOrActionType,The following statement contains a magic number: switch (paramTypes.Length)              {                  case 1: return typeof(Func<>).MakeGenericType(paramTypes);                  case 2: return typeof(Func<'>).MakeGenericType(paramTypes);                  case 3: return typeof(Func<''>).MakeGenericType(paramTypes);                  case 4: return typeof(Func<'''>).MakeGenericType(paramTypes);                  case 5: return typeof(Func<''''>).MakeGenericType(paramTypes);                  case 6: return typeof(Func<'''''>).MakeGenericType(paramTypes);                  case 7: return typeof(Func<''''''>).MakeGenericType(paramTypes);                  case 8: return typeof(Func<'''''''>).MakeGenericType(paramTypes);                  default:                      throw new NotSupportedException(                          string.Format("Func with so many ({0}) parameters is not supported!"' paramTypes.Length));              }
Magic Number,FastExpressionCompiler,Tools,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,GetFuncOrActionType,The following statement contains a magic number: switch (paramTypes.Length)              {                  case 1: return typeof(Func<>).MakeGenericType(paramTypes);                  case 2: return typeof(Func<'>).MakeGenericType(paramTypes);                  case 3: return typeof(Func<''>).MakeGenericType(paramTypes);                  case 4: return typeof(Func<'''>).MakeGenericType(paramTypes);                  case 5: return typeof(Func<''''>).MakeGenericType(paramTypes);                  case 6: return typeof(Func<'''''>).MakeGenericType(paramTypes);                  case 7: return typeof(Func<''''''>).MakeGenericType(paramTypes);                  case 8: return typeof(Func<'''''''>).MakeGenericType(paramTypes);                  default:                      throw new NotSupportedException(                          string.Format("Func with so many ({0}) parameters is not supported!"' paramTypes.Length));              }
Magic Number,NServiceBus.Routing,EndpointInstance,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\EndpointInstance.cs,GetHashCode,The following statement contains a magic number: var hashCode = Properties.Aggregate(Endpoint.GetHashCode()' (i' pair) => (i*397) ^ propertyComparer.GetHashCode(pair));
Magic Number,NServiceBus.Routing,EndpointInstance,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\EndpointInstance.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (Discriminator?.GetHashCode() ?? 0);
Magic Number,NServiceBus.Routing,PropertyComparer,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\EndpointInstance.cs,GetHashCode,The following statement contains a magic number: hashCode ^= 397*obj.Value.GetHashCode();
Magic Number,NServiceBus.Routing.MessageDrivenSubscriptions,PublisherAddress,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\PublisherAddress.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (endpoint != null ? endpoint.GetHashCode() : 0);
Magic Number,NServiceBus.Routing.MessageDrivenSubscriptions,PublisherAddress,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\PublisherAddress.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (instances != null ? CollectionHashCode(instances) : 0);
Magic Number,NServiceBus.Routing.MessageDrivenSubscriptions,PublisherAddress,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Routing\MessageDrivenSubscriptions\PublisherAddress.cs,CollectionHashCode,The following statement contains a magic number: return collection.Aggregate(0' (acc' v) => (acc*397) ^ v.GetHashCode());
Magic Number,NServiceBus.Sagas,SagaMetadata,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Sagas\SagaMetadata.cs,ApplyScannedFinders,The following statement contains a magic number: args.Length != 2
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,SimpleJson,The following statement contains a magic number: EscapeTable = new char[93];
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,EscapeToJavascriptString,The following statement contains a magic number: remainingLength >= 2
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ConvertFromUtf32,The following statement contains a magic number: return new string(new char[] { (char)((utf32 >> 10) + 0xD800)' (char)(utf32 % 0x0400 + 0xDC00) });
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: index += 5;
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: remainingLength >= 5
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: index += 4;
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: remainingLength >= 4
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: index += 4;
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: remainingLength >= 4
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,SimpleJson,The following statement contains a magic number: EscapeTable = new char[93];
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,EscapeToJavascriptString,The following statement contains a magic number: remainingLength >= 2
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ConvertFromUtf32,The following statement contains a magic number: return new string(new char[] { (char)((utf32 >> 10) + 0xD800)' (char)(utf32 % 0x0400 + 0xDC00) });
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: index += 5;
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: remainingLength >= 5
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: index += 4;
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: remainingLength >= 4
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: index += 4;
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following statement contains a magic number: remainingLength >= 4
Missing Default,NServiceBus,DateTimeExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\DateTimeExtensions.cs,ToUtcDateTime,The following switch statement is missing a default case: switch (format[i])                  {                      case 'y':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          year = year * 10 + (digit - '0');                          break;                        case 'M':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          month = month * 10 + (digit - '0');                          break;                        case 'd':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          day = day * 10 + (digit - '0');                          break;                        case 'H':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          hour = hour * 10 + (digit - '0');                          break;                        case 'm':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          minute = minute * 10 + (digit - '0');                          break;                        case 's':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          second = second * 10 + (digit - '0');                          break;                        case 'f':                          if (digit < '0' || digit > '9') throw new FormatException(errorMessage);                          microSecond = microSecond * 10 + (digit - '0');                          break;                  }
Missing Default,NServiceBus,LicenseManager,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Licensing\LicenseManager.cs,LogLicenseStatus,The following switch statement is missing a default case: switch (licenseStatus)              {                  case LicenseStatus.Valid:                      break;                  case LicenseStatus.ValidWithExpiredUpgradeProtection:                      logger.Warn("Upgrade protection expired. In order for us to continue to provide you with support and new versions of the Particular Service Platform' please extend your upgrade protection by visiting http://go.particular.net/upgrade-protection-expired");                      break;                  case LicenseStatus.ValidWithExpiringTrial:                      logger.WarnFormat("Trial license expiring {0}. To continue using the Particular Service Platform' please extend your trial or purchase a license by visiting http://go.particular.net/trial-expiring"' GetRemainingDaysString(license.GetDaysUntilLicenseExpires()));                      break;                  case LicenseStatus.ValidWithExpiringSubscription:                      logger.WarnFormat("Platform license expiring {0}. To continue using the Particular Service Platform' please extend your license by visiting http://go.particular.net/license-expiring"' GetRemainingDaysString(license.GetDaysUntilLicenseExpires()));                      break;                  case LicenseStatus.ValidWithExpiringUpgradeProtection:                      logger.WarnFormat("Upgrade protection expiring {0}. In order for us to continue to provide you with support and new versions of the Particular Service Platform' please extend your upgrade protection by visiting http://go.particular.net/upgrade-protection-expiring"' GetRemainingDaysString(license.GetDaysUntilUpgradeProtectionExpires()));                      break;                  case LicenseStatus.InvalidDueToExpiredTrial:                      logger.Error("Trial license expired. To continue using the Particular Service Platform' please extend your trial or purchase a license by visiting http://go.particular.net/trial-expired");                      break;                  case LicenseStatus.InvalidDueToExpiredSubscription:                      logger.Error("Platform license expired. To continue using the Particular Service Platform' please extend your license by visiting http://go.particular.net/license-expired");                      break;                  case LicenseStatus.InvalidDueToExpiredUpgradeProtection:                      logger.Error("Upgrade protection expired. In order for us to continue to provide you with support and new versions of the Particular Service Platform' please extend your upgrade protection by visiting http://go.particular.net/upgrade-protection-expired");                      break;              }
Missing Default,NServiceBus,XmlSanitizingStream,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\XML\XmlSanitizingStream.cs,ReadLine,The following switch statement is missing a default case: switch (number)                  {                      case -1:                          if (builder.Length > 0)                          {                              return builder.ToString();                          }                          return null;                        case 13:                      case 10:                          if ((number == 13) && (Peek() == 10))                          {                              Read();                          }                          return builder.ToString();                  }
Missing Default,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Push,The following switch statement is missing a default case: switch (index)              {                  case 0:                      emitter.Emit(OpCodes.Ldloc_0);                      return;                  case 1:                      emitter.Emit(OpCodes.Ldloc_1);                      return;                  case 2:                      emitter.Emit(OpCodes.Ldloc_2);                      return;                  case 3:                      emitter.Emit(OpCodes.Ldloc_3);                      return;              }
Missing Default,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,PushArgument,The following switch statement is missing a default case: switch (index)              {                  case 0:                      emitter.Emit(OpCodes.Ldarg_0);                      return;                  case 1:                      emitter.Emit(OpCodes.Ldarg_1);                      return;                  case 2:                      emitter.Emit(OpCodes.Ldarg_2);                      return;                  case 3:                      emitter.Emit(OpCodes.Ldarg_3);                      return;              }
Missing Default,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Store,The following switch statement is missing a default case: switch (index)              {                  case 0:                      emitter.Emit(OpCodes.Stloc_0);                      return;                  case 1:                      emitter.Emit(OpCodes.Stloc_1);                      return;                  case 2:                      emitter.Emit(OpCodes.Stloc_2);                      return;                  case 3:                      emitter.Emit(OpCodes.Stloc_3);                      return;              }
Missing Default,LightInject,EmitterExtensions,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\ObjectBuilder\LightInject\LightInject.g.cs,Push,The following switch statement is missing a default case: switch (value)              {                  case 0:                      emitter.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      emitter.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      emitter.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      emitter.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      emitter.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      emitter.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      emitter.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      emitter.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      emitter.Emit(OpCodes.Ldc_I4_8);                      return;              }
Missing Default,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitComparison,The following switch statement is missing a default case: switch (exprNodeType)                  {                      case ExpressionType.Equal:                          il.Emit(OpCodes.Ceq);                          return true;                        case ExpressionType.NotEqual:                          il.Emit(OpCodes.Ceq);                          il.Emit(OpCodes.Ldc_I4_0);                          il.Emit(OpCodes.Ceq);                          return true;                        case ExpressionType.LessThan:                          il.Emit(OpCodes.Clt);                          return true;                        case ExpressionType.GreaterThan:                          il.Emit(OpCodes.Cgt);                          return true;                        case ExpressionType.LessThanOrEqual:                          il.Emit(OpCodes.Cgt);                          il.Emit(OpCodes.Ldc_I4_0);                          il.Emit(OpCodes.Ceq);                          return true;                        case ExpressionType.GreaterThanOrEqual:                          il.Emit(OpCodes.Clt);                          il.Emit(OpCodes.Ldc_I4_0);                          il.Emit(OpCodes.Ceq);                          return true;                  }
Missing Default,FastExpressionCompiler,EmittingVisitor,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Pipeline\FastExpressionCompiler.g.cs,TryEmitArithmeticOperation,The following switch statement is missing a default case: switch (exprNodeType)                  {                      case ExpressionType.Add:                          il.Emit(OpCodes.Add);                          return true;                        case ExpressionType.AddChecked:                          il.Emit(IsUnsigned(exprType) ? OpCodes.Add_Ovf_Un : OpCodes.Add_Ovf);                          return true;                        case ExpressionType.Subtract:                          il.Emit(OpCodes.Sub);                          return true;                        case ExpressionType.SubtractChecked:                          il.Emit(IsUnsigned(exprType) ? OpCodes.Sub_Ovf_Un : OpCodes.Sub_Ovf);                          return true;                        case ExpressionType.Multiply:                          il.Emit(OpCodes.Mul);                          return true;                        case ExpressionType.MultiplyChecked:                          il.Emit(IsUnsigned(exprType) ? OpCodes.Mul_Ovf_Un : OpCodes.Mul_Ovf);                          return true;                        case ExpressionType.Divide:                          il.Emit(OpCodes.Div);                          return true;                  }
Missing Default,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseValue,The following switch statement is missing a default case: switch (LookAhead(json' index))              {                  case TOKEN_STRING:                      return ParseString(json' ref index' ref success);                  case TOKEN_NUMBER:                      return ParseNumber(json' ref index' ref success);                  case TOKEN_CURLY_OPEN:                      return ParseObject(json' ref index' ref success);                  case TOKEN_SQUARED_OPEN:                      return ParseArray(json' ref index' ref success);                  case TOKEN_TRUE:                      NextToken(json' ref index);                      return true;                  case TOKEN_FALSE:                      NextToken(json' ref index);                      return false;                  case TOKEN_NULL:                      NextToken(json' ref index);                      return null;                  case TOKEN_NONE:                      break;              }
Missing Default,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following switch statement is missing a default case: switch (c)              {                  case '{':                      return TOKEN_CURLY_OPEN;                  case '}':                      return TOKEN_CURLY_CLOSE;                  case '[':                      return TOKEN_SQUARED_OPEN;                  case ']':                      return TOKEN_SQUARED_CLOSE;                  case ''':                      return TOKEN_COMMA;                  case '"':                      return TOKEN_STRING;                  case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                      return TOKEN_NUMBER;                  case ':':                      return TOKEN_COLON;              }
Missing Default,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,ParseValue,The following switch statement is missing a default case: switch (LookAhead(json' index))              {                  case TOKEN_STRING:                      return ParseString(json' ref index' ref success);                  case TOKEN_NUMBER:                      return ParseNumber(json' ref index' ref success);                  case TOKEN_CURLY_OPEN:                      return ParseObject(json' ref index' ref success);                  case TOKEN_SQUARED_OPEN:                      return ParseArray(json' ref index' ref success);                  case TOKEN_TRUE:                      NextToken(json' ref index);                      return true;                  case TOKEN_FALSE:                      NextToken(json' ref index);                      return false;                  case TOKEN_NULL:                      NextToken(json' ref index);                      return null;                  case TOKEN_NONE:                      break;              }
Missing Default,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\Particular_NServiceBus\src\NServiceBus.Core\Serializers\SimpleJson\SimpleJson.g.cs,NextToken,The following switch statement is missing a default case: switch (c)              {                  case '{':                      return TOKEN_CURLY_OPEN;                  case '}':                      return TOKEN_CURLY_CLOSE;                  case '[':                      return TOKEN_SQUARED_OPEN;                  case ']':                      return TOKEN_SQUARED_CLOSE;                  case ''':                      return TOKEN_COMMA;                  case '"':                      return TOKEN_STRING;                  case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                      return TOKEN_NUMBER;                  case ':':                      return TOKEN_COLON;              }
