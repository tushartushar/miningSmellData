Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfigurationExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs,GenerateUriParameters,Cyclomatic complexity of the method is 9
Complex Method,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageSampleGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\HelpPageSampleGenerator.cs,GetSample,Cyclomatic complexity of the method is 8
Complex Method,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,ObjectGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\ObjectGenerator.cs,GenerateObject,Cyclomatic complexity of the method is 11
Complex Method,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,ObjectGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\ObjectGenerator.cs,GenerateGenericType,Cyclomatic complexity of the method is 12
Complex Method,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage.ModelDescriptions,ModelDescriptionGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\ModelDescriptions\ModelDescriptionGenerator.cs,GetOrCreateModelDescription,Cyclomatic complexity of the method is 17
Complex Method,TinyIoC,GenericMethodCacheKey,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,Equals,Cyclomatic complexity of the method is 10
Complex Method,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,CanResolveInternal,Cyclomatic complexity of the method is 13
Complex Method,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,ResolveInternal,Cyclomatic complexity of the method is 12
Long Parameter List,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfigurationExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs,SetSampleRequest,The method has 5 parameters. Parameters: config' sample' mediaType' controllerName' actionName
Long Parameter List,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfigurationExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs,SetSampleRequest,The method has 6 parameters. Parameters: config' sample' mediaType' controllerName' actionName' parameterNames
Long Parameter List,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfigurationExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs,SetSampleResponse,The method has 5 parameters. Parameters: config' sample' mediaType' controllerName' actionName
Long Parameter List,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfigurationExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs,SetSampleResponse,The method has 6 parameters. Parameters: config' sample' mediaType' controllerName' actionName' parameterNames
Long Parameter List,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfigurationExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs,SetActualRequestType,The method has 5 parameters. Parameters: config' type' controllerName' actionName' parameterNames
Long Parameter List,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfigurationExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs,SetActualResponseType,The method has 5 parameters. Parameters: config' type' controllerName' actionName' parameterNames
Long Parameter List,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageSampleGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\HelpPageSampleGenerator.cs,GetActionSample,The method has 7 parameters. Parameters: controllerName' actionName' parameterNames' type' formatter' mediaType' sampleDirection
Long Parameter List,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageSampleGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\HelpPageSampleGenerator.cs,ResolveType,The method has 6 parameters. Parameters: api' controllerName' actionName' parameterNames' sampleDirection' formatters
Long Parameter List,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageSampleKey,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\HelpPageSampleKey.cs,HelpPageSampleKey,The method has 5 parameters. Parameters: mediaType' sampleDirection' controllerName' actionName' parameterNames
Long Parameter List,TinyIoC,TypeExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,GetGenericMethod,The method has 5 parameters. Parameters: sourceType' bindingFlags' methodName' genericTypes' parameterTypes
Long Parameter List,TinyIoC,TypeExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,GetMethod,The method has 5 parameters. Parameters: sourceType' bindingFlags' methodName' genericTypes' parameterTypes
Long Parameter List,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,TryResolve,The method has 5 parameters. Parameters: resolveType' name' parameters' options' resolvedType
Long Parameter List,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,ConstructType,The method has 5 parameters. Parameters: requestedType' implementationType' constructor' parameters' options
Long Identifier,TinyIoC,ResolveOptions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,,The length of the parameter _FailUnregisteredAndNameNotFound is 32.
Long Identifier,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,AutoRegister,The length of the parameter ignoreDuplicateImplementations is 30.
Long Identifier,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,AutoRegister,The length of the parameter ignoreDuplicateImplementations is 30.
Long Identifier,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,AutoRegister,The length of the parameter ignoreDuplicateImplementations is 30.
Long Identifier,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,AutoRegister,The length of the parameter ignoreDuplicateImplementations is 30.
Long Identifier,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,AutoRegisterInternal,The length of the parameter ignoreDuplicateImplementations is 30.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfig,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\App_Start\HelpPageConfig.cs,Register,The length of the statement  "            //config.SetDocumentationProvider(new XmlDocumentationProvider(HttpContext.Current.Server.MapPath("~/App_Data/XmlDocument.xml"))); " is 130.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfig,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\App_Start\HelpPageConfig.cs,Register,The length of the statement  "            //// Uncomment the following to use "sample string" as the sample for all actions that have string as the body parameter or return type. " is 136.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfig,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\App_Start\HelpPageConfig.cs,Register,The length of the statement  "            //// Also' the string arrays will be used for IEnumerable<string>. The sample objects will be serialized into different media type  " is 130.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfig,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\App_Start\HelpPageConfig.cs,Register,The length of the statement  "            //// Uncomment the following to use "[0]=foo&[1]=bar" directly as the sample for all actions that support form URL encoded format " is 129.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfig,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\App_Start\HelpPageConfig.cs,Register,The length of the statement  "            //config.SetSampleForType("[0]=foo&[1]=bar"' new MediaTypeHeaderValue("application/x-www-form-urlencoded")' typeof(IEnumerable<string>)); " is 137.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfig,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\App_Start\HelpPageConfig.cs,Register,The length of the statement  "            //// Uncomment the following to use "1234" directly as the request sample for media type "text/plain" on the controller named "Values" " is 134.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfig,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\App_Start\HelpPageConfig.cs,Register,The length of the statement  "            //// Uncomment the following to use the image on "../images/aspNetHome.png" directly as the response sample for media type "image/png" " is 134.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfig,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\App_Start\HelpPageConfig.cs,Register,The length of the statement  "            //config.SetSampleResponse(new ImageSample("../images/aspNetHome.png")' new MediaTypeHeaderValue("image/png")' "Values"' "Get"' "id"); " is 134.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfig,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\App_Start\HelpPageConfig.cs,Register,The length of the statement  "            //// Uncomment the following to correct the sample request when the action expects an HttpRequestMessage with ObjectContent<string>. " is 132.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfig,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\App_Start\HelpPageConfig.cs,Register,The length of the statement  "            //// The sample will be generated as if the controller named "Values" and action named "Get" were having string as the body parameter. " is 134.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfig,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\App_Start\HelpPageConfig.cs,Register,The length of the statement  "            //// Uncomment the following to correct the sample response when the action returns an HttpResponseMessage with ObjectContent<string>. " is 134.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfigurationExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs,SetSampleRequest,The length of the statement  "            config.GetHelpPageSampleGenerator().ActionSamples.Add(new HelpPageSampleKey(mediaType' SampleDirection.Request' controllerName' actionName' new[] { "*" })' sample); " is 164.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfigurationExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs,SetSampleRequest,The length of the statement  "            config.GetHelpPageSampleGenerator().ActionSamples.Add(new HelpPageSampleKey(mediaType' SampleDirection.Request' controllerName' actionName' parameterNames)' sample); " is 165.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfigurationExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs,SetSampleResponse,The length of the statement  "            config.GetHelpPageSampleGenerator().ActionSamples.Add(new HelpPageSampleKey(mediaType' SampleDirection.Response' controllerName' actionName' new[] { "*" })' sample); " is 165.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfigurationExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs,SetSampleResponse,The length of the statement  "            config.GetHelpPageSampleGenerator().ActionSamples.Add(new HelpPageSampleKey(mediaType' SampleDirection.Response' controllerName' actionName' parameterNames)' sample); " is 166.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfigurationExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs,SetActualRequestType,The length of the statement  "            config.GetHelpPageSampleGenerator().ActualHttpMessageTypes.Add(new HelpPageSampleKey(SampleDirection.Request' controllerName' actionName' new[] { "*" })' type); " is 160.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfigurationExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs,SetActualRequestType,The length of the statement  "            config.GetHelpPageSampleGenerator().ActualHttpMessageTypes.Add(new HelpPageSampleKey(SampleDirection.Request' controllerName' actionName' parameterNames)' type); " is 161.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfigurationExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs,SetActualResponseType,The length of the statement  "            config.GetHelpPageSampleGenerator().ActualHttpMessageTypes.Add(new HelpPageSampleKey(SampleDirection.Response' controllerName' actionName' new[] { "*" })' type); " is 161.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfigurationExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs,SetActualResponseType,The length of the statement  "            config.GetHelpPageSampleGenerator().ActualHttpMessageTypes.Add(new HelpPageSampleKey(SampleDirection.Response' controllerName' actionName' parameterNames)' type); " is 162.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfigurationExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs,GetHelpPageApiModel,The length of the statement  "                ApiDescription apiDescription = apiDescriptions.FirstOrDefault(api => String.Equals(api.GetFriendlyId()' apiDescriptionId' StringComparison.OrdinalIgnoreCase)); " is 160.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageConfigurationExtensions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs,GenerateUriParameters,The length of the statement  "                            uriParameter.Annotations.Add(new ParameterAnnotation() { Documentation = "Default value is " + Convert.ToString(defaultValue' CultureInfo.InvariantCulture) }); " is 159.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageSampleGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\HelpPageSampleGenerator.cs,GetSample,The length of the statement  "            // Here we cannot rely on formatters because we don't know what's in the HttpResponseMessage' it might not even use formatters. " is 127.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageSampleGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\HelpPageSampleGenerator.cs,GetSample,The length of the statement  "                            object sample = this.GetActionSample(controllerName' actionName' parameterNames' type' formatter' mediaType' sampleDirection); " is 126.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageSampleGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\HelpPageSampleGenerator.cs,GetActionSample,The length of the statement  "            // First' try to get the sample provided for the specified mediaType' sampleDirection' controllerName' actionName and parameterNames. " is 133.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageSampleGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\HelpPageSampleGenerator.cs,GetActionSample,The length of the statement  "            // If not found' try to get the sample provided for the specified mediaType' sampleDirection' controllerName and actionName regardless of the parameterNames. " is 157.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageSampleGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\HelpPageSampleGenerator.cs,GetActionSample,The length of the statement  "            if (this.ActionSamples.TryGetValue(new HelpPageSampleKey(mediaType' sampleDirection' controllerName' actionName' parameterNames)' out sample) || this.ActionSamples.TryGetValue(new HelpPageSampleKey(mediaType' sampleDirection' controllerName' actionName' new[] { "*" })' out sample) || this.ActionSamples.TryGetValue(new HelpPageSampleKey(mediaType' type)' out sample) || this.ActionSamples.TryGetValue(new HelpPageSampleKey(mediaType)' out sample)) " is 448.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageSampleGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\HelpPageSampleGenerator.cs,ResolveType,The length of the statement  "            if (this.ActualHttpMessageTypes.TryGetValue(new HelpPageSampleKey(sampleDirection' controllerName' actionName' parameterNames)' out type) || this.ActualHttpMessageTypes.TryGetValue(new HelpPageSampleKey(sampleDirection' controllerName' actionName' new[] { "*" })' out type)) " is 274.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageSampleGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\HelpPageSampleGenerator.cs,ResolveType,The length of the statement  "                        ApiParameterDescription requestBodyParameter = api.ParameterDescriptions.FirstOrDefault(p => p.Source == ApiParameterSource.FromBody); " is 134.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageSampleGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\HelpPageSampleGenerator.cs,WriteSampleObjectUsingFormatter,The length of the statement  "                    "An exception has occurred while using the formatter '{0}' to generate sample for media type '{1}'. Exception message: {2}"' " is 124.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageSampleKey,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\HelpPageSampleKey.cs,Equals,The length of the statement  "                (this.MediaType == otherKey.MediaType || (this.MediaType != null && this.MediaType.Equals(otherKey.MediaType))) && this.ParameterType == otherKey.ParameterType && this.SampleDirection == otherKey.SampleDirection && this.ParameterNames.SetEquals(otherKey.ParameterNames); " is 270.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,XmlDocumentationProvider,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\XmlDocumentationProvider.cs,GetDocumentation,The length of the statement  "            ReflectedHttpParameterDescriptor reflectedParameterDescriptor = parameterDescriptor as ReflectedHttpParameterDescriptor; " is 120.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,XmlDocumentationProvider,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\XmlDocumentationProvider.cs,GetDocumentation,The length of the statement  "                    XPathNavigator parameterNode = methodNode.SelectSingleNode(String.Format(CultureInfo.InvariantCulture' ParameterExpression' parameterName)); " is 140.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,XmlDocumentationProvider,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\XmlDocumentationProvider.cs,GetDocumentation,The length of the statement  "            string memberName = String.Format(CultureInfo.InvariantCulture' "{0}.{1}"' GetTypeName(member.DeclaringType)' member.Name); " is 123.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,XmlDocumentationProvider,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\XmlDocumentationProvider.cs,GetMethodNode,The length of the statement  "                string selectExpression = String.Format(CultureInfo.InvariantCulture' MethodExpression' GetMemberName(reflectedActionDescriptor.MethodInfo)); " is 141.
Long Statement,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage.ModelDescriptions,ModelNameHelper,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\ModelDescriptions\ModelNameHelper.cs,GetModelName,The length of the statement  "                modelName = String.Format(CultureInfo.InvariantCulture' "{0}Of{1}"' genericTypeName' String.Join("And"' argumentTypeNames)); " is 124.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,AutoRegister,The length of the statement  "            AutoRegisterInternal(AppDomain.CurrentDomain.GetAssemblies().Where(a => !IsIgnoredAssembly(a))' true' registrationPredicate); " is 125.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,AutoRegister,The length of the statement  "            AutoRegisterInternal(AppDomain.CurrentDomain.GetAssemblies().Where(a => !IsIgnoredAssembly(a))' ignoreDuplicateImplementations' null); " is 134.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,AutoRegister,The length of the statement  "            AutoRegisterInternal(AppDomain.CurrentDomain.GetAssemblies().Where(a => !IsIgnoredAssembly(a))' ignoreDuplicateImplementations' registrationPredicate); " is 151.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,AutoRegister,The length of the statement  "            AutoRegisterInternal(new Assembly[] { this.GetType().Assembly() }' ignoreDuplicateImplementations' registrationPredicate); " is 122.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,Register,The length of the statement  "            return this.RegisterInternal(registerType' string.Empty' GetDefaultObjectFactory(registerType' registerImplementation)); " is 120.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,Register,The length of the statement  "            return RegisterInternal(registerType' string.Empty' new InstanceFactory(registerType' registerImplementation' instance)); " is 121.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,RegisterMultiple,The length of the statement  "					throw new ArgumentException(String.Format("types: The type {0} is not assignable from {1}"' registrationType.FullName' type.FullName)); " is 135.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,Resolve,The length of the statement  "            return ResolveInternal(new TypeRegistration(resolveType' name)' NamedParameterOverloads.Default' ResolveOptions.Default); " is 121.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,CanResolve,The length of the statement  "            return CanResolveInternal(new TypeRegistration(resolveType' name)' NamedParameterOverloads.Default' ResolveOptions.Default); " is 124.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,AutoRegisterInternal,The length of the statement  "                                    where (type.IsClass() == true) && (type.IsAbstract() == false) && (type != this.GetType() && (type.DeclaringType != this.GetType()) && (!type.IsGenericTypeDefinition())) " is 169.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,AutoRegisterInternal,The length of the statement  "                                             where ((type.IsInterface() == true || type.IsAbstract() == true) && (type.DeclaringType != this.GetType()) && (!type.IsGenericTypeDefinition())) " is 144.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,IsIgnoredType,The length of the statement  "                t => (t.GetConstructors(BindingFlags.Instance | BindingFlags.Public).Length == 0) && !(t.IsInterface() || t.IsAbstract())' " is 122.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,CanResolveInternal,The length of the statement  "            if (!String.IsNullOrEmpty(name) && options.NamedResolutionFailureAction == NamedResolutionFailureActions.AttemptUnnamedResolution) " is 130.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,CanResolveInternal,The length of the statement  "            if ((options.UnregisteredResolutionAction == UnregisteredResolutionActions.AttemptResolve) || (checkType.IsGenericType() && options.UnregisteredResolutionAction == UnregisteredResolutionActions.GenericsOnly)) " is 208.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,CanResolveInternal,The length of the statement  "                return (GetBestConstructor(checkType' parameters' options) != null) ? true : (_Parent != null) ? _Parent.CanResolveInternal(registration' parameters' options) : false; " is 167.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,IsAutomaticLazyFactoryRequest,The length of the statement  "//			if ((genericType == typeof(Func<''>) && type.GetTypeInfo().GenericTypeArguments[0] == typeof(string) && type.GetTypeInfo().GenericTypeArguments[1] == typeof(IDictionary<String' object>))) " is 192.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,IsAutomaticLazyFactoryRequest,The length of the statement  "            if ((genericType == typeof(Func<''>) && type.GetGenericArguments()[0] == typeof(string) && type.GetGenericArguments()[1] == typeof(IDictionary<String' object>))) " is 161.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,ResolveInternal,The length of the statement  "            if (!String.IsNullOrEmpty(registration.Name) && options.NamedResolutionFailureAction == NamedResolutionFailureActions.Fail) " is 123.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,ResolveInternal,The length of the statement  "            if (!String.IsNullOrEmpty(registration.Name) && options.NamedResolutionFailureAction == NamedResolutionFailureActions.AttemptUnnamedResolution) " is 143.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,ResolveInternal,The length of the statement  "            if ((options.UnregisteredResolutionAction == UnregisteredResolutionActions.AttemptResolve) || (registration.Type.IsGenericType() && options.UnregisteredResolutionAction == UnregisteredResolutionActions.GenericsOnly)) " is 216.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,GetLazyAutomaticFactoryRequest,The length of the statement  "//				MethodInfo resolveMethod = typeof(TinyIoCContainer).GetTypeInfo().GetDeclaredMethods("Resolve").First(mi => !mi.GetParameters().Any()); " is 141.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,GetLazyAutomaticFactoryRequest,The length of the statement  "//				MethodInfo resolveMethod = typeof(TinyIoCContainer).GetTypeInfo().GetDeclaredMethods("Resolve").First(mi => mi.GetParameters().Length == 1 && mi.GetParameters()[0].GetType() == typeof(String)); " is 199.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,GetLazyAutomaticFactoryRequest,The length of the statement  "//			if ((genericType == typeof(Func<''>) && type.GenericTypeArguments[0] == typeof(string) && type.GenericTypeArguments[1] == typeof(IDictionary<string' object>))) " is 164.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,GetLazyAutomaticFactoryRequest,The length of the statement  "            if ((genericType == typeof(Func<''>) && type.GetGenericArguments()[0] == typeof(string) && type.GetGenericArguments()[1] == typeof(IDictionary<string' object>))) " is 161.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,GetLazyAutomaticFactoryRequest,The length of the statement  "//				MethodInfo resolveMethod = typeof(TinyIoCContainer).GetTypeInfo().GetDeclaredMethods("Resolve").First(mi => mi.GetParameters().Length == 2 && mi.GetParameters()[0].GetType() == typeof(String) && mi.GetParameters()[1].GetType() == typeof(NamedParameterOverloads)); " is 269.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,GetLazyAutomaticFactoryRequest,The length of the statement  "                MethodInfo resolveMethod = typeof(TinyIoCContainer).GetMethod("Resolve"' new Type[] { typeof(String)' typeof(NamedParameterOverloads) }); " is 137.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,GetLazyAutomaticFactoryRequest,The length of the statement  "                var resolveCall = Expression.Call(Expression.Constant(this)' resolveMethod' name' Expression.Call(typeof(NamedParameterOverloads)' "FromIDictionary"' null' parameters)); " is 169.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,GetIEnumerableRequest,The length of the statement  "//			var genericResolveAllMethod = this.GetType().GetGenericMethod("ResolveAll"' type.GenericTypeArguments' new[] { typeof(bool) }); " is 132.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,GetIEnumerableRequest,The length of the statement  "            var genericResolveAllMethod = this.GetType().GetGenericMethod(BindingFlags.Public | BindingFlags.Instance' "ResolveAll"' type.GetGenericArguments()' new[] { typeof(bool) }); " is 173.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,CanConstruct,The length of the statement  "                if (!isParameterOverload && !CanResolveInternal(new TypeRegistration(parameter.ParameterType)' NamedParameterOverloads.Default' options)) " is 137.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,ConstructType,The length of the statement  "                constructor = GetBestConstructor(typeToConstruct' parameters' options) ?? GetTypeConstructors(typeToConstruct).LastOrDefault(); " is 127.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,BuildUpInternal,The length of the statement  "//							 where (property.GetMethod != null) && (property.SetMethod != null) && !property.PropertyType.GetTypeInfo().IsValueType " is 128.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,BuildUpInternal,The length of the statement  "                        property.SetValue(input' ResolveInternal(new TypeRegistration(property.PropertyType)' NamedParameterOverloads.Default' resolveOptions)' null); " is 142.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,ResolveAllInternal,The length of the statement  "            var registrations = _RegisteredTypes.Keys.Where(tr => tr.Type == resolveType).Concat(GetParentRegistrationsForType(resolveType)); " is 129.
Long Statement,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,ResolveAllInternal,The length of the statement  "            return registrations.Select(registration => this.ResolveInternal(registration' NamedParameterOverloads.Default' ResolveOptions.Default)); " is 137.
Long Statement,TinyIoC,RegisterOptions,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,ToCustomLifetimeManager,The length of the statement  "                return instance._Container.AddUpdateRegistration(instance._Registration' currentFactory.GetCustomObjectLifetimeVariant(lifetimeProvider' errorString)); " is 151.
Long Statement,TinyIoC,DelegateFactory,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,SetConstructor,The length of the statement  "                throw new TinyIoCConstructorResolutionException("Constructor selection is not possible for delegate factory registrations"); " is 124.
Long Statement,TinyIoC,WeakDelegateFactory,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,SetConstructor,The length of the statement  "                throw new TinyIoCConstructorResolutionException("Constructor selection is not possible for delegate factory registrations"); " is 124.
Long Statement,TinyIoC,InstanceFactory,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,SetConstructor,The length of the statement  "                throw new TinyIoCConstructorResolutionException("Constructor selection is not possible for instance factory registrations"); " is 124.
Long Statement,TinyIoC,WeakInstanceFactory,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,SetConstructor,The length of the statement  "                throw new TinyIoCConstructorResolutionException("Constructor selection is not possible for instance factory registrations"); " is 124.
Complex Conditional,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageSampleGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\HelpPageSampleGenerator.cs,GetActionSample,The conditional expression  "this.ActionSamples.TryGetValue(new HelpPageSampleKey(mediaType' sampleDirection' controllerName' actionName' parameterNames)' out sample) || this.ActionSamples.TryGetValue(new HelpPageSampleKey(mediaType' sampleDirection' controllerName' actionName' new[] { "*" })' out sample) || this.ActionSamples.TryGetValue(new HelpPageSampleKey(mediaType' type)' out sample) || this.ActionSamples.TryGetValue(new HelpPageSampleKey(mediaType)' out sample)"  is complex.
Complex Conditional,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageSampleGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\HelpPageSampleGenerator.cs,GetAllActionSamples,The conditional expression  "String.Equals(controllerName' sampleKey.ControllerName' StringComparison.OrdinalIgnoreCase) &&                      String.Equals(actionName' sampleKey.ActionName' StringComparison.OrdinalIgnoreCase) &&                      (sampleKey.ParameterNames.SetEquals(new[] { "*" }) || parameterNamesSet.SetEquals(sampleKey.ParameterNames)) &&                      sampleDirection == sampleKey.SampleDirection"  is complex.
Empty Catch Block,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageSampleGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\HelpPageSampleGenerator.cs,GetSampleObject,The method has an empty catch block.
Empty Catch Block,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,AutoRegisterInternal,The method has an empty catch block.
Empty Catch Block,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,AutoRegisterInternal,The method has an empty catch block.
Empty Catch Block,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,BuildUpInternal,The method has an empty catch block.
Magic Number,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,ObjectGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\ObjectGenerator.cs,GenerateGenericType,The following statement contains a magic number: genericArguments.Length == 2
Magic Number,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,SimpleTypeObjectGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\ObjectGenerator.cs,InitializeGenerators,The following statement contains a magic number: return new Dictionary<Type' Func<long' object>>                  {                      { typeof(Boolean)' index => true }'                      { typeof(Byte)' index => (Byte)64 }'                      { typeof(Char)' index => (Char)65 }'                      { typeof(DateTime)' index => DateTime.Now }'                      { typeof(DateTimeOffset)' index => new DateTimeOffset(DateTime.Now) }'                      { typeof(DBNull)' index => DBNull.Value }'                      { typeof(Decimal)' index => (Decimal)index }'                      { typeof(Double)' index => (Double)(index + 0.1) }'                      { typeof(Guid)' index => Guid.NewGuid() }'                      { typeof(Int16)' index => (Int16)(index % Int16.MaxValue) }'                      { typeof(Int32)' index => (Int32)(index % Int32.MaxValue) }'                      { typeof(Int64)' index => (Int64)index }'                      { typeof(Object)' index => new object() }'                      { typeof(SByte)' index => (SByte)64 }'                      { typeof(Single)' index => (Single)(index + 0.1) }'                      {                           typeof(String)' index =>                          {                              return String.Format(CultureInfo.CurrentCulture' "sample string {0}"' index);                          }                      }'                      {                           typeof(TimeSpan)' index =>                          {                              return TimeSpan.FromTicks(1234567);                          }                      }'                      { typeof(UInt16)' index => (UInt16)(index % UInt16.MaxValue) }'                      { typeof(UInt32)' index => (UInt32)(index % UInt32.MaxValue) }'                      { typeof(UInt64)' index => (UInt64)index }'                      {                           typeof(Uri)' index =>                          {                              return new Uri(String.Format(CultureInfo.CurrentCulture' "http://webapihelppage{0}.com"' index));                          }                      }'                  };
Magic Number,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,SimpleTypeObjectGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\ObjectGenerator.cs,InitializeGenerators,The following statement contains a magic number: return new Dictionary<Type' Func<long' object>>                  {                      { typeof(Boolean)' index => true }'                      { typeof(Byte)' index => (Byte)64 }'                      { typeof(Char)' index => (Char)65 }'                      { typeof(DateTime)' index => DateTime.Now }'                      { typeof(DateTimeOffset)' index => new DateTimeOffset(DateTime.Now) }'                      { typeof(DBNull)' index => DBNull.Value }'                      { typeof(Decimal)' index => (Decimal)index }'                      { typeof(Double)' index => (Double)(index + 0.1) }'                      { typeof(Guid)' index => Guid.NewGuid() }'                      { typeof(Int16)' index => (Int16)(index % Int16.MaxValue) }'                      { typeof(Int32)' index => (Int32)(index % Int32.MaxValue) }'                      { typeof(Int64)' index => (Int64)index }'                      { typeof(Object)' index => new object() }'                      { typeof(SByte)' index => (SByte)64 }'                      { typeof(Single)' index => (Single)(index + 0.1) }'                      {                           typeof(String)' index =>                          {                              return String.Format(CultureInfo.CurrentCulture' "sample string {0}"' index);                          }                      }'                      {                           typeof(TimeSpan)' index =>                          {                              return TimeSpan.FromTicks(1234567);                          }                      }'                      { typeof(UInt16)' index => (UInt16)(index % UInt16.MaxValue) }'                      { typeof(UInt32)' index => (UInt32)(index % UInt32.MaxValue) }'                      { typeof(UInt64)' index => (UInt64)index }'                      {                           typeof(Uri)' index =>                          {                              return new Uri(String.Format(CultureInfo.CurrentCulture' "http://webapihelppage{0}.com"' index));                          }                      }'                  };
Magic Number,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,SimpleTypeObjectGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\ObjectGenerator.cs,InitializeGenerators,The following statement contains a magic number: return new Dictionary<Type' Func<long' object>>                  {                      { typeof(Boolean)' index => true }'                      { typeof(Byte)' index => (Byte)64 }'                      { typeof(Char)' index => (Char)65 }'                      { typeof(DateTime)' index => DateTime.Now }'                      { typeof(DateTimeOffset)' index => new DateTimeOffset(DateTime.Now) }'                      { typeof(DBNull)' index => DBNull.Value }'                      { typeof(Decimal)' index => (Decimal)index }'                      { typeof(Double)' index => (Double)(index + 0.1) }'                      { typeof(Guid)' index => Guid.NewGuid() }'                      { typeof(Int16)' index => (Int16)(index % Int16.MaxValue) }'                      { typeof(Int32)' index => (Int32)(index % Int32.MaxValue) }'                      { typeof(Int64)' index => (Int64)index }'                      { typeof(Object)' index => new object() }'                      { typeof(SByte)' index => (SByte)64 }'                      { typeof(Single)' index => (Single)(index + 0.1) }'                      {                           typeof(String)' index =>                          {                              return String.Format(CultureInfo.CurrentCulture' "sample string {0}"' index);                          }                      }'                      {                           typeof(TimeSpan)' index =>                          {                              return TimeSpan.FromTicks(1234567);                          }                      }'                      { typeof(UInt16)' index => (UInt16)(index % UInt16.MaxValue) }'                      { typeof(UInt32)' index => (UInt32)(index % UInt32.MaxValue) }'                      { typeof(UInt64)' index => (UInt64)index }'                      {                           typeof(Uri)' index =>                          {                              return new Uri(String.Format(CultureInfo.CurrentCulture' "http://webapihelppage{0}.com"' index));                          }                      }'                  };
Magic Number,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,SimpleTypeObjectGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\ObjectGenerator.cs,InitializeGenerators,The following statement contains a magic number: return new Dictionary<Type' Func<long' object>>                  {                      { typeof(Boolean)' index => true }'                      { typeof(Byte)' index => (Byte)64 }'                      { typeof(Char)' index => (Char)65 }'                      { typeof(DateTime)' index => DateTime.Now }'                      { typeof(DateTimeOffset)' index => new DateTimeOffset(DateTime.Now) }'                      { typeof(DBNull)' index => DBNull.Value }'                      { typeof(Decimal)' index => (Decimal)index }'                      { typeof(Double)' index => (Double)(index + 0.1) }'                      { typeof(Guid)' index => Guid.NewGuid() }'                      { typeof(Int16)' index => (Int16)(index % Int16.MaxValue) }'                      { typeof(Int32)' index => (Int32)(index % Int32.MaxValue) }'                      { typeof(Int64)' index => (Int64)index }'                      { typeof(Object)' index => new object() }'                      { typeof(SByte)' index => (SByte)64 }'                      { typeof(Single)' index => (Single)(index + 0.1) }'                      {                           typeof(String)' index =>                          {                              return String.Format(CultureInfo.CurrentCulture' "sample string {0}"' index);                          }                      }'                      {                           typeof(TimeSpan)' index =>                          {                              return TimeSpan.FromTicks(1234567);                          }                      }'                      { typeof(UInt16)' index => (UInt16)(index % UInt16.MaxValue) }'                      { typeof(UInt32)' index => (UInt32)(index % UInt32.MaxValue) }'                      { typeof(UInt64)' index => (UInt64)index }'                      {                           typeof(Uri)' index =>                          {                              return new Uri(String.Format(CultureInfo.CurrentCulture' "http://webapihelppage{0}.com"' index));                          }                      }'                  };
Magic Number,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,SimpleTypeObjectGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\ObjectGenerator.cs,InitializeGenerators,The following statement contains a magic number: return new Dictionary<Type' Func<long' object>>                  {                      { typeof(Boolean)' index => true }'                      { typeof(Byte)' index => (Byte)64 }'                      { typeof(Char)' index => (Char)65 }'                      { typeof(DateTime)' index => DateTime.Now }'                      { typeof(DateTimeOffset)' index => new DateTimeOffset(DateTime.Now) }'                      { typeof(DBNull)' index => DBNull.Value }'                      { typeof(Decimal)' index => (Decimal)index }'                      { typeof(Double)' index => (Double)(index + 0.1) }'                      { typeof(Guid)' index => Guid.NewGuid() }'                      { typeof(Int16)' index => (Int16)(index % Int16.MaxValue) }'                      { typeof(Int32)' index => (Int32)(index % Int32.MaxValue) }'                      { typeof(Int64)' index => (Int64)index }'                      { typeof(Object)' index => new object() }'                      { typeof(SByte)' index => (SByte)64 }'                      { typeof(Single)' index => (Single)(index + 0.1) }'                      {                           typeof(String)' index =>                          {                              return String.Format(CultureInfo.CurrentCulture' "sample string {0}"' index);                          }                      }'                      {                           typeof(TimeSpan)' index =>                          {                              return TimeSpan.FromTicks(1234567);                          }                      }'                      { typeof(UInt16)' index => (UInt16)(index % UInt16.MaxValue) }'                      { typeof(UInt32)' index => (UInt32)(index % UInt32.MaxValue) }'                      { typeof(UInt64)' index => (UInt64)index }'                      {                           typeof(Uri)' index =>                          {                              return new Uri(String.Format(CultureInfo.CurrentCulture' "http://webapihelppage{0}.com"' index));                          }                      }'                  };
Magic Number,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,SimpleTypeObjectGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\ObjectGenerator.cs,InitializeGenerators,The following statement contains a magic number: return new Dictionary<Type' Func<long' object>>                  {                      { typeof(Boolean)' index => true }'                      { typeof(Byte)' index => (Byte)64 }'                      { typeof(Char)' index => (Char)65 }'                      { typeof(DateTime)' index => DateTime.Now }'                      { typeof(DateTimeOffset)' index => new DateTimeOffset(DateTime.Now) }'                      { typeof(DBNull)' index => DBNull.Value }'                      { typeof(Decimal)' index => (Decimal)index }'                      { typeof(Double)' index => (Double)(index + 0.1) }'                      { typeof(Guid)' index => Guid.NewGuid() }'                      { typeof(Int16)' index => (Int16)(index % Int16.MaxValue) }'                      { typeof(Int32)' index => (Int32)(index % Int32.MaxValue) }'                      { typeof(Int64)' index => (Int64)index }'                      { typeof(Object)' index => new object() }'                      { typeof(SByte)' index => (SByte)64 }'                      { typeof(Single)' index => (Single)(index + 0.1) }'                      {                           typeof(String)' index =>                          {                              return String.Format(CultureInfo.CurrentCulture' "sample string {0}"' index);                          }                      }'                      {                           typeof(TimeSpan)' index =>                          {                              return TimeSpan.FromTicks(1234567);                          }                      }'                      { typeof(UInt16)' index => (UInt16)(index % UInt16.MaxValue) }'                      { typeof(UInt32)' index => (UInt32)(index % UInt32.MaxValue) }'                      { typeof(UInt64)' index => (UInt64)index }'                      {                           typeof(Uri)' index =>                          {                              return new Uri(String.Format(CultureInfo.CurrentCulture' "http://webapihelppage{0}.com"' index));                          }                      }'                  };
Magic Number,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage.ModelDescriptions,ModelDescriptionGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\ModelDescriptions\ModelDescriptionGenerator.cs,GetOrCreateModelDescription,The following statement contains a magic number: genericArguments.Length == 2
Magic Number,TinyIoC,GenericMethodCacheKey,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,GenerateHashCode,The following statement contains a magic number: result = (result * 397) ^ _methodName.GetHashCode();
Magic Number,TinyIoC,GenericMethodCacheKey,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,GenerateHashCode,The following statement contains a magic number: result = (result * 397) ^ _genericTypes[i].GetHashCode();
Magic Number,TinyIoC,GenericMethodCacheKey,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,GenerateHashCode,The following statement contains a magic number: result = (result * 397) ^ _parameterTypes[i].GetHashCode();
Magic Number,TinyIoC,TinyIoCContainer,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\TinyIoC.cs,GetLazyAutomaticFactoryRequest,The following statement contains a magic number: Type returnType = genericArguments[2];
Missing Default,SDammann.WebApi.Versioning.TestApi.Areas.HelpPage,HelpPageSampleGenerator,D:\research\architectureSmells\repos1\Sebazzz_SDammann.WebApi.Versioning\src\SDammann.WebApi.Versioning.TestApi\Areas\HelpPage\SampleGeneration\HelpPageSampleGenerator.cs,IsFormatSupported,The following switch statement is missing a default case: switch (sampleDirection)              {                  case SampleDirection.Request:                      return formatter.CanReadType(type);                  case SampleDirection.Response:                      return formatter.CanWriteType(type);              }
