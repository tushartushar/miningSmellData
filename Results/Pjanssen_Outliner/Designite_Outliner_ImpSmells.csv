Implementation smell,Namespace,Class,File,Method,Description
Long Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawCustomNode,The method has 138 lines of code.
Long Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,EnsureSelectionVisible,The method has 109 lines of code.
Complex Method,Outliner,OutlinerFilter,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\OutlinerFilter.cs,ObjectIsVisible,Cyclomatic complexity of the method is 19
Complex Method,Outliner,TreeStyle,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeStyle.cs,GetObjectImageKey,Cyclomatic complexity of the method is 13
Complex Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,IsParentOfSelectedNode,Cyclomatic complexity of the method is 8
Complex Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawCustomNode,Cyclomatic complexity of the method is 27
Complex Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetHideButtonBounds,Cyclomatic complexity of the method is 9
Complex Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetFreezeButtonBounds,Cyclomatic complexity of the method is 9
Complex Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetBoxModeButtonBounds,Cyclomatic complexity of the method is 10
Complex Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetAddButtonBounds,Cyclomatic complexity of the method is 11
Complex Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnMouseDown,Cyclomatic complexity of the method is 15
Complex Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnDragOver,Cyclomatic complexity of the method is 21
Complex Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnHideButtonClick,Cyclomatic complexity of the method is 9
Complex Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnFreezeButtonClick,Cyclomatic complexity of the method is 9
Complex Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnBoxModeButtonClick,Cyclomatic complexity of the method is 8
Complex Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnAddButtonClick,Cyclomatic complexity of the method is 9
Complex Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,showContextMenu,Cyclomatic complexity of the method is 17
Complex Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnAfterLabelEdit,Cyclomatic complexity of the method is 8
Complex Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,AddObjectToTree,Cyclomatic complexity of the method is 13
Complex Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,ApplyFilter,Cyclomatic complexity of the method is 8
Complex Method,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,EnsureSelectionVisible,Cyclomatic complexity of the method is 27
Complex Method,Outliner.DragDropHandlers,LayerDragDropHandler,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\DragDropHandlers\LayerDragDropHandler.cs,ItemDropped,Cyclomatic complexity of the method is 8
Complex Method,Outliner.DragDropHandlers,TreeDragDropHandler,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\DragDropHandlers\TreeDragDropHandler.cs,ItemDropped,Cyclomatic complexity of the method is 11
Long Parameter List,Outliner,ContextMenus,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\ContextMenus.cs,ShowContextMenu,The method has 8 parameters. Parameters: pos' node' showObjectItems' showLayerItems' showMaterialItems' showIDisplayableItems' showDisplayItems' showRenderItems
Long Parameter List,Outliner.Scene,OutlinerMaterial,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\Scene\OutlinerMaterial.cs,OutlinerMaterial,The method has 5 parameters. Parameters: scene' handle' parentHandle' name' type
Long Parameter List,Outliner.Scene,OutlinerLayer,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\Scene\OutlinerLayer.cs,OutlinerLayer,The method has 8 parameters. Parameters: scene' handle' parentHandle' name' isActive' isHidden' isFrozen' boxMode
Long Parameter List,Outliner.Scene,OutlinerObject,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\Scene\OutlinerObject.cs,OutlinerObject,The method has 14 parameters. Parameters: scene' objectNr' handle' parentHandle' layerHandle' materialHandle' name' objClass' objSuperClass' isGroupHead' isGroupMember' isHidden' isFrozen' boxMode
Long Parameter List,Outliner.Scene,OutlinerScene,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\Scene\OutlinerScene.cs,AddObject,The method has 12 parameters. Parameters: handle' parentHandle' layerHandle' materialHandle' name' objClass' objSuperClass' isGroupHead' isGroupMember' isHidden' isFrozen' boxMode
Long Parameter List,Outliner.Scene,OutlinerScene,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\Scene\OutlinerScene.cs,AddLayer,The method has 7 parameters. Parameters: handle' parentHandle' name' isActive' isHidden' isFrozen' boxMode
Long Identifier,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,,The length of the parameter _ensureSelectionVisibleWaitingForSort is 37.
Long Identifier,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,,The length of the parameter ExpandSelectionPolicyHierarchy is 30.
Long Statement,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Invert,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format32bppArgb); " is 125.
Long Statement,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Desaturate,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format32bppArgb); " is 125.
Long Statement,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Opacity,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format32bppArgb); " is 125.
Long Statement,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Brightness,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format32bppArgb); " is 125.
Long Statement,Outliner,ContextMenus,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\ContextMenus.cs,createAddSelectionToMenu,The length of the statement  "         AddToNewContainerItem = AddSelectionToMenu.Items.Add(OutlinerResources.ContextMenuNewContainer' OutlinerResources.newcontainer); " is 128.
Long Statement,Outliner,TreeStyle,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeStyle.cs,GetObjectImageKey,The length of the statement  "                else if (obj.Class == OutlinerScene.NurbsCvSurfType || obj.Class == OutlinerScene.NurbsPtSurfType || obj.Class.StartsWith(OutlinerScene.PowerNurbsPrefixType)) " is 158.
Long Statement,Outliner,TreeStyle,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeStyle.cs,GetObjectImageKey,The length of the statement  "                else if (obj.Class == OutlinerScene.PatchQuadType || obj.Class == OutlinerScene.PatchTriType || obj.Class == OutlinerScene.PatchEditableType) " is 141.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,RestoreExpandedStates,The length of the statement  "         if ((ListMode == OutlinerListMode.Hierarchy && AutoExpandHierarchy) || (ListMode == OutlinerListMode.Layer && AutoExpandLayer)) " is 127.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetHighestParentToAdd,The length of the statement  "            // Keeping prevParentNode reference (previous parentNode inspected) to avoid having to do dictionary lookup twice for each iteration. " is 133.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetHighestParentToRemove,The length of the statement  "            // Keeping prevParentNode reference (previous parentNode inspected) to avoid having to do dictionary lookup twice for each iteration. " is 133.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,canAddSelectionToLayer,The length of the statement  "            else if (n is OutlinerLayer && n.Handle != layer.Handle && n.ParentHandle != layer.Handle && !((OutlinerLayer)n).IsDefaultLayer) " is 128.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawCustomNode,The length of the statement  "               VisualStyleElement element = (tn.IsExpanded) ? VisualStyleElement.TreeView.Glyph.Opened : VisualStyleElement.TreeView.Glyph.Closed; " is 131.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawCustomNode,The length of the statement  "                  Boolean isHidden = ((IDisplayable)tnTag).IsHidden || (tnTag is OutlinerObject && ((OutlinerObject)tnTag).Layer.IsHidden); " is 121.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawPlusMinus,The length of the statement  "         graphics.DrawLine(SystemPens.ControlText' bounds.X + 2' bounds.Y + bounds.Height / 2' bounds.X + bounds.Width - 2' bounds.Y + bounds.Height / 2); " is 145.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawPlusMinus,The length of the statement  "            graphics.DrawLine(SystemPens.ControlText' bounds.X + bounds.Width / 2' bounds.Y + 2' bounds.X + bounds.Width / 2' bounds.Y + bounds.Height - 2); " is 144.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetNodeBounds,The length of the statement  "            if (ShowNodeFreezeButton && NodeFreezeButtonLocation != NodeButtonsLocation.AlignRight) b.Width += _freezeButtonSize.Width; " is 123.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetNodeBounds,The length of the statement  "            if (ShowNodeBoxModeButton && NodeBoxModeButtonLocation != NodeButtonsLocation.AlignRight) b.Width += _boxModeButtonSize.Width; " is 126.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetNodeBounds,The length of the statement  "            if (ShowNodeAddButton && NodeAddButtonLocation != NodeButtonsLocation.AlignRight && tn.Tag is OutlinerLayer) b.Width += _addButtonSize.Width; " is 141.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetHideButtonBounds,The length of the statement  "            if (ShowNodeFreezeButton && NodeFreezeButtonLocation == NodeButtonsLocation.AlignRight) r.X -= _freezeButtonSize.Width + _nodeButtonSpacing; " is 140.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetHideButtonBounds,The length of the statement  "            if (ShowNodeBoxModeButton && NodeBoxModeButtonLocation == NodeButtonsLocation.AlignRight) r.X -= _boxModeButtonSize.Width + _nodeButtonSpacing; " is 143.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetFreezeButtonBounds,The length of the statement  "            if (ShowNodeHideButton && NodeHideButtonLocation == NodeButtonsLocation.BeforeNode) r.X += _hideButtonSize.Width + _nodeButtonSpacing; " is 134.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetFreezeButtonBounds,The length of the statement  "            if (ShowNodeHideButton && NodeHideButtonLocation == NodeButtonsLocation.AfterNode) r.X += _hideButtonSize.Width + _nodeButtonSpacing; " is 133.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetFreezeButtonBounds,The length of the statement  "            if (ShowNodeBoxModeButton && NodeBoxModeButtonLocation == NodeButtonsLocation.AlignRight) r.X -= _boxModeButtonSize.Width + _nodeButtonSpacing; " is 143.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetFreezeButtonBounds,The length of the statement  "            if (ShowNodeAddButton && NodeAddButtonLocation == NodeButtonsLocation.AlignRight) r.X -= _addButtonSize.Width + _nodeButtonSpacing; " is 131.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetBoxModeButtonBounds,The length of the statement  "            if (ShowNodeHideButton && NodeHideButtonLocation == NodeButtonsLocation.BeforeNode) r.X += _hideButtonSize.Width + _nodeButtonSpacing; " is 134.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetBoxModeButtonBounds,The length of the statement  "            if (ShowNodeFreezeButton && NodeFreezeButtonLocation == NodeButtonsLocation.BeforeNode) r.X += _freezeButtonSize.Width + _nodeButtonSpacing; " is 140.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetBoxModeButtonBounds,The length of the statement  "            if (ShowNodeHideButton && NodeHideButtonLocation == NodeButtonsLocation.AfterNode) r.X += _hideButtonSize.Width + _nodeButtonSpacing; " is 133.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetBoxModeButtonBounds,The length of the statement  "            if (ShowNodeFreezeButton && NodeFreezeButtonLocation == NodeButtonsLocation.AfterNode) r.X += _freezeButtonSize.Width + _nodeButtonSpacing; " is 139.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetBoxModeButtonBounds,The length of the statement  "            if (ShowNodeAddButton && NodeAddButtonLocation == NodeButtonsLocation.AlignRight) r.X -= _addButtonSize.Width + _nodeButtonSpacing; " is 131.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetAddButtonBounds,The length of the statement  "            if (ShowNodeHideButton && NodeHideButtonLocation == NodeButtonsLocation.BeforeNode) r.X += _hideButtonSize.Width + _nodeButtonSpacing; " is 134.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetAddButtonBounds,The length of the statement  "            if (ShowNodeFreezeButton && NodeFreezeButtonLocation == NodeButtonsLocation.BeforeNode) r.X += _freezeButtonSize.Width + _nodeButtonSpacing; " is 140.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetAddButtonBounds,The length of the statement  "            if (ShowNodeBoxModeButton && NodeBoxModeButtonLocation == NodeButtonsLocation.BeforeNode) r.X += _boxModeButtonSize.Width + _nodeButtonSpacing; " is 143.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetAddButtonBounds,The length of the statement  "            if (ShowNodeHideButton && NodeHideButtonLocation == NodeButtonsLocation.AfterNode) r.X += _hideButtonSize.Width + _nodeButtonSpacing; " is 133.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetAddButtonBounds,The length of the statement  "            if (ShowNodeFreezeButton && NodeFreezeButtonLocation == NodeButtonsLocation.AfterNode) r.X += _freezeButtonSize.Width + _nodeButtonSpacing; " is 139.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetAddButtonBounds,The length of the statement  "            if (ShowNodeBoxModeButton && NodeBoxModeButtonLocation == NodeButtonsLocation.AfterNode) r.X += _boxModeButtonSize.Width + _nodeButtonSpacing; " is 142.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnMouseDown,The length of the statement  "            else if ((e.Button & DragMouseButton) == DragMouseButton && (DragMouseButton & MouseButtons.Middle) == MouseButtons.Middle && _numMouseClicks == 1) " is 147.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnMouseUp,The length of the statement  "               else if ((e.Button & DragMouseButton) == DragMouseButton && (DragMouseButton & MouseButtons.Middle) == MouseButtons.Middle) " is 123.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,ProcessNodeClick,The length of the statement  "         if ((e.Button & MouseButtons.Left) == MouseButtons.Left || (e.Button & DragMouseButton) == DragMouseButton || ((e.Button & MouseButtons.Right) == MouseButtons.Right && !IsNodeSelected(node))) " is 191.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnSelectionChanged,The length of the statement  "            SelectionChanged(this' new SelectionChangedEventArgs(SelectedObjectHandles' SelectedLayerHandlesIndirect' SelectedMaterialHandles)); " is 132.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnDragOver,The length of the statement  "            // Note: if the node is selected' or is a child of the selection' it can never be a valid droptarget -> DragDropEffects.None. " is 125.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnDragOver,The length of the statement  "            if (IsNodeSelected(_dragDropTargetNode) || IsParentOfSelectedNode(_dragDropTargetNode' false) || IsChildOfSelectedNode(_dragDropTargetNode)) " is 140.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnBackgroundClick,The length of the statement  "         if ((e.Button & MouseButtons.Right) == MouseButtons.Right && (this._selectedNodes.Count > 0 || this.ListMode == OutlinerListMode.Layer)) " is 136.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,showContextMenu,The length of the statement  "         ContextMenus.AddToNewLayerItem.Enabled = selObjCount > 0 || selLayerCount > 1 || (selLayerCount == 1 && !((OutlinerLayer)_selectedNodes.First()).IsDefaultLayer); " is 161.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnAfterLabelEdit,The length of the statement  "               MessageBox.Show(OutlinerResources.InvalidLayerNameMessage' OutlinerResources.InvalidLayerNameTitle' MessageBoxButtons.OK' MessageBoxIcon.Warning); " is 146.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnAfterLabelEdit,The length of the statement  "               MessageBox.Show(OutlinerResources.InvalidMaterialNameMessage' OutlinerResources.InvalidMaterialNameTitle' MessageBoxButtons.OK' MessageBoxIcon.Warning); " is 152.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,AddObjectsToTreeNodeCollection,The length of the statement  "            if (!_treeNodes.ContainsKey(node) && Filter.ShowNode(node) && (!(ListMode == OutlinerListMode.Layer) || !HideGroupMembersLayerMode || !(node is OutlinerObject) || !((OutlinerObject)node).IsGroupMember)) " is 202.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,AddObjectToTree,The length of the statement  "            AddObjectsToTreeNodeCollection(parentCollection' new List<OutlinerNode>(1) { obj }' (ListMode == OutlinerListMode.Hierarchy)); " is 126.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,ApplyFilter,The length of the statement  "               if (n is OutlinerObject && (ListMode != OutlinerListMode.Layer || !HideGroupMembersLayerMode || !((OutlinerObject)n).IsGroupMember)) " is 132.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,ApplyFilter,The length of the statement  "         if ((recurseObjects && n is OutlinerObject) || (recurseLayers && n is OutlinerLayer) || (recurseMaterials && n is OutlinerMaterial)) " is 132.
Long Statement,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,EnsureSelectionVisible,The length of the statement  "                     if (((bounds.Y + bounds.Height) - highestNodeY) < ClientRectangle.Height && bounds.Y > lowestNodeY && !hasCollapsedParents(tn)) " is 127.
Long Statement,Outliner.DragDropHandlers,TreeDragDropHandler,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\DragDropHandlers\TreeDragDropHandler.cs,ItemDropped,The length of the statement  "                Tree.RaiseObjectMaterialChangedEvent(new NodePropertyChangedEventArgs(droppedNodeHandles' "material"' OutlinerScene.UnassignedHandle)); " is 135.
Long Statement,Outliner.Scene,OutlinerScene,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\Scene\OutlinerScene.cs,GetLayerChildNodesCount,The length of the statement  "            return getNodesFromDictCount(objects_by_layerHandle' layerHandle) + getNodesFromDictCount(layers_by_parentHandle' layerHandle); " is 127.
Long Statement,Outliner.Scene,OutlinerScene,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\Scene\OutlinerScene.cs,GetMaterialChildNodesCount,The length of the statement  "            return getNodesFromDictCount(objects_by_materialHandle' materialHandle) + getNodesFromDictCount(materials_by_parentHandle' materialHandle); " is 139.
Long Statement,Outliner.Scene,OutlinerScene,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\Scene\OutlinerScene.cs,AddObject,The length of the statement  "           OutlinerObject obj = new OutlinerObject(this' ++objectCounter' handle' parentHandle' layerHandle' materialHandle' name' objClass' objSuperClass' isGroupHead' isGroupMember' isHidden' isFrozen' boxMode); " is 202.
Complex Conditional,Outliner,OutlinerFilter,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\OutlinerFilter.cs,ObjectIsVisible,The conditional expression  "!ShowHidden && (obj.IsHidden || (objLayer != null && objLayer.IsHidden))"  is complex.
Complex Conditional,Outliner,OutlinerFilter,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\OutlinerFilter.cs,ObjectIsVisible,The conditional expression  "!ShowFrozen && (obj.IsFrozen || (objLayer != null && objLayer.IsFrozen))"  is complex.
Complex Conditional,Outliner,OutlinerFilter,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\OutlinerFilter.cs,ObjectIsVisible,The conditional expression  "(!ShowBones || !ShowParticles || !ShowGeometry || !ShowHelpers) && obj.SuperClass == OutlinerScene.GeometryType"  is complex.
Complex Conditional,Outliner,OutlinerFilter,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\OutlinerFilter.cs,ObjectIsVisible,The conditional expression  "obj.Class == OutlinerScene.PfSourceType || obj.Class == OutlinerScene.PCloudType ||                           obj.Class == OutlinerScene.PArrayType || obj.Class == OutlinerScene.PBlizzardType ||                           obj.Class == OutlinerScene.PSprayType || obj.Class == OutlinerScene.PSuperSprayType ||                           obj.Class == OutlinerScene.PSnowType"  is complex.
Complex Conditional,Outliner,TreeStyle,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeStyle.cs,GetObjectImageKey,The conditional expression  "obj.Class == OutlinerScene.PfSourceType || obj.Class == OutlinerScene.PCloudType ||                           obj.Class == OutlinerScene.PArrayType || obj.Class == OutlinerScene.PBlizzardType ||                           obj.Class == OutlinerScene.PSprayType || obj.Class == OutlinerScene.PSuperSprayType ||                           obj.Class == OutlinerScene.PSnowType"  is complex.
Complex Conditional,Outliner,TreeStyle,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeStyle.cs,GetObjectImageKey,The conditional expression  "obj.Class == OutlinerScene.PBirthTextureType || obj.Class == OutlinerScene.PSpeedByIconType ||                           obj.Class == OutlinerScene.PGroupSelectionType || obj.Class == OutlinerScene.PFindTargetType ||                           obj.Class == OutlinerScene.PInitialStateType || obj.Class == OutlinerScene.ParticlePaintType"  is complex.
Complex Conditional,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,RestoreExpandedStates,The conditional expression  "(ListMode == OutlinerListMode.Hierarchy && AutoExpandHierarchy) || (ListMode == OutlinerListMode.Layer && AutoExpandLayer)"  is complex.
Complex Conditional,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,canAddSelectionToLayer,The conditional expression  "n is OutlinerLayer && n.Handle != layer.Handle && n.ParentHandle != layer.Handle && !((OutlinerLayer)n).IsDefaultLayer"  is complex.
Complex Conditional,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawCustomNode,The conditional expression  "(isHidden && !InvertNodeHideButton) || (!isHidden && InvertNodeHideButton)"  is complex.
Complex Conditional,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,ProcessNodeClick,The conditional expression  "(e.Button & MouseButtons.Left) == MouseButtons.Left || (e.Button & DragMouseButton) == DragMouseButton || ((e.Button & MouseButtons.Right) == MouseButtons.Right && !IsNodeSelected(node))"  is complex.
Complex Conditional,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,AddObjectsToTreeNodeCollection,The conditional expression  "!_treeNodes.ContainsKey(node) && Filter.ShowNode(node) && (!(ListMode == OutlinerListMode.Layer) || !HideGroupMembersLayerMode || !(node is OutlinerObject) || !((OutlinerObject)node).IsGroupMember)"  is complex.
Complex Conditional,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,ApplyFilter,The conditional expression  "n is OutlinerObject && (ListMode != OutlinerListMode.Layer || !HideGroupMembersLayerMode || !((OutlinerObject)n).IsGroupMember)"  is complex.
Complex Conditional,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,ApplyFilter,The conditional expression  "(recurseObjects && n is OutlinerObject) || (recurseLayers && n is OutlinerLayer) || (recurseMaterials && n is OutlinerMaterial)"  is complex.
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Invert,The following statement contains a magic number: int nOffset = stride - b.Width * 4;
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Invert,The following statement contains a magic number: p[0] = (byte)(255 - p[0]);
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Invert,The following statement contains a magic number: p[1] = (byte)(255 - p[1]);
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Invert,The following statement contains a magic number: p[2] = (byte)(255 - p[2]);
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Invert,The following statement contains a magic number: p[2] = (byte)(255 - p[2]);
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Invert,The following statement contains a magic number: p[2] = (byte)(255 - p[2]);
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Invert,The following statement contains a magic number: p += 4;
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Desaturate,The following statement contains a magic number: int nOffset = stride - b.Width * 4;
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Desaturate,The following statement contains a magic number: px = .299 * p[2] + .587 * p[1] + .114 * p[0];
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Desaturate,The following statement contains a magic number: px = .299 * p[2] + .587 * p[1] + .114 * p[0];
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Desaturate,The following statement contains a magic number: px = .299 * p[2] + .587 * p[1] + .114 * p[0];
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Desaturate,The following statement contains a magic number: px = .299 * p[2] + .587 * p[1] + .114 * p[0];
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Desaturate,The following statement contains a magic number: p[0] = p[1] = p[2] = (byte)px;
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Desaturate,The following statement contains a magic number: p += 4;
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Opacity,The following statement contains a magic number: int nOffset = stride - b.Width * 4;
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Opacity,The following statement contains a magic number: float opacity_factor = opacity / 255f;
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Opacity,The following statement contains a magic number: p[3] = (byte)(opacity_factor * p[3]);
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Opacity,The following statement contains a magic number: p[3] = (byte)(opacity_factor * p[3]);
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Opacity,The following statement contains a magic number: p += 4;
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Brightness,The following statement contains a magic number: int nOffset = stride - b.Width * 4;
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Brightness,The following statement contains a magic number: p[0] = (px > 255) ? (byte)255 : (byte)px;
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Brightness,The following statement contains a magic number: p[0] = (px > 255) ? (byte)255 : (byte)px;
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Brightness,The following statement contains a magic number: p[1] = (px > 255) ? (byte)255 : (byte)px;
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Brightness,The following statement contains a magic number: p[1] = (px > 255) ? (byte)255 : (byte)px;
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Brightness,The following statement contains a magic number: px = brightness + p[2];
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Brightness,The following statement contains a magic number: p[2] = (px > 255) ? (byte)255 : (byte)px;
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Brightness,The following statement contains a magic number: p[2] = (px > 255) ? (byte)255 : (byte)px;
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Brightness,The following statement contains a magic number: p[2] = (px > 255) ? (byte)255 : (byte)px;
Magic Number,Outliner,BitmapProcessing,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\BitmapProcessing.cs,Brightness,The following statement contains a magic number: p += 4;
Magic Number,Outliner,ContextMenus,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\ContextMenus.cs,createEditMaterialMenu,The following statement contains a magic number: i < 24
Magic Number,Outliner,TreeStyle,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeStyle.cs,TreeStyle,The following statement contains a magic number: LinkBackColor = Color.FromArgb(255' 177' 177);
Magic Number,Outliner,TreeStyle,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeStyle.cs,TreeStyle,The following statement contains a magic number: LinkBackColor = Color.FromArgb(255' 177' 177);
Magic Number,Outliner,TreeStyle,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeStyle.cs,TreeStyle,The following statement contains a magic number: LinkBackColor = Color.FromArgb(255' 177' 177);
Magic Number,Outliner,TreeStyle,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeStyle.cs,TreeStyle,The following statement contains a magic number: ParentBackColor = Color.FromArgb(177' 255' 177);
Magic Number,Outliner,TreeStyle,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeStyle.cs,TreeStyle,The following statement contains a magic number: ParentBackColor = Color.FromArgb(177' 255' 177);
Magic Number,Outliner,TreeStyle,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeStyle.cs,TreeStyle,The following statement contains a magic number: ParentBackColor = Color.FromArgb(177' 255' 177);
Magic Number,Outliner,TreeStyle,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeStyle.cs,TreeStyle,The following statement contains a magic number: LayerBackColor = Color.FromArgb(177' 228' 255);
Magic Number,Outliner,TreeStyle,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeStyle.cs,TreeStyle,The following statement contains a magic number: LayerBackColor = Color.FromArgb(177' 228' 255);
Magic Number,Outliner,TreeStyle,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeStyle.cs,TreeStyle,The following statement contains a magic number: LayerBackColor = Color.FromArgb(177' 228' 255);
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,TreeView,The following statement contains a magic number: _updateTimer.Interval = 40;
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,TreeView,The following statement contains a magic number: _sortTimer.Interval = 60;
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,TreeView,The following statement contains a magic number: _ensureSelectionVisibleTimer.Interval = 50;
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawCustomNode,The following statement contains a magic number: Int32 nodeYMid = tnBounds.Y + (int)Math.Ceiling(ItemHeight / 2f) - 1;
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawCustomNode,The following statement contains a magic number: txtLocation.X -= 2;
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawCustomNode,The following statement contains a magic number: txtLocation.Y += (Int32)((float)ItemHeight - txtSize.Height) / 2 + 1;
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawCustomNode,The following statement contains a magic number: foreColor = Color.FromArgb(50' tn.ForeColor.R' tn.ForeColor.G' tn.ForeColor.B);
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawPlusMinus,The following statement contains a magic number: graphics.DrawLine(SystemPens.ControlText' bounds.X + 2' bounds.Y + bounds.Height / 2' bounds.X + bounds.Width - 2' bounds.Y + bounds.Height / 2);
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawPlusMinus,The following statement contains a magic number: graphics.DrawLine(SystemPens.ControlText' bounds.X + 2' bounds.Y + bounds.Height / 2' bounds.X + bounds.Width - 2' bounds.Y + bounds.Height / 2);
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawPlusMinus,The following statement contains a magic number: graphics.DrawLine(SystemPens.ControlText' bounds.X + 2' bounds.Y + bounds.Height / 2' bounds.X + bounds.Width - 2' bounds.Y + bounds.Height / 2);
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawPlusMinus,The following statement contains a magic number: graphics.DrawLine(SystemPens.ControlText' bounds.X + 2' bounds.Y + bounds.Height / 2' bounds.X + bounds.Width - 2' bounds.Y + bounds.Height / 2);
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawPlusMinus,The following statement contains a magic number: graphics.DrawLine(SystemPens.ControlText' bounds.X + bounds.Width / 2' bounds.Y + 2' bounds.X + bounds.Width / 2' bounds.Y + bounds.Height - 2);
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawPlusMinus,The following statement contains a magic number: graphics.DrawLine(SystemPens.ControlText' bounds.X + bounds.Width / 2' bounds.Y + 2' bounds.X + bounds.Width / 2' bounds.Y + bounds.Height - 2);
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawPlusMinus,The following statement contains a magic number: graphics.DrawLine(SystemPens.ControlText' bounds.X + bounds.Width / 2' bounds.Y + 2' bounds.X + bounds.Width / 2' bounds.Y + bounds.Height - 2);
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DrawPlusMinus,The following statement contains a magic number: graphics.DrawLine(SystemPens.ControlText' bounds.X + bounds.Width / 2' bounds.Y + 2' bounds.X + bounds.Width / 2' bounds.Y + bounds.Height - 2);
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,AutoIndent,The following statement contains a magic number: Indent = 12;
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetNodeBounds,The following statement contains a magic number: b.Width = _plusMinPadding * 2 + _plusMinSize + tnBounds.Width - 1;
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetNodeBounds,The following statement contains a magic number: b.Width += _iconSpacing * 2 + _iconSize.Width;
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetPlusMinusBounds,The following statement contains a magic number: r.Width = _plusMinSize + 2 * _plusMinPadding;
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetImageBounds,The following statement contains a magic number: r.Y = tn.Bounds.Y + (ItemHeight - _iconSize.Height) / 2;
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetHideButtonBounds,The following statement contains a magic number: r.Y = tn.Bounds.Y + (ItemHeight - _hideButtonSize.Height) / 2;
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetFreezeButtonBounds,The following statement contains a magic number: r.Y = tn.Bounds.Y + (ItemHeight - _freezeButtonSize.Height) / 2;
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetBoxModeButtonBounds,The following statement contains a magic number: r.Y = tn.Bounds.Y + (ItemHeight - _boxModeButtonSize.Height) / 2;
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,GetAddButtonBounds,The following statement contains a magic number: r.Y = tn.Bounds.Y + (ItemHeight - _addButtonSize.Height) / 2;
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,ProcessNodeClick,The following statement contains a magic number: _numMouseClicks == 2
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnDragOver,The following statement contains a magic number: DateTime.Now - _dragOverStartTime > TimeSpan.FromMilliseconds(750)
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnDragOver,The following statement contains a magic number: targetPoint.X < _scrollBounds * 2 && dScrollTime > slowScrollSpan
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,OnDragOver,The following statement contains a magic number: targetPoint.Y < _scrollBounds * 2 && dScrollTime > slowScrollSpan
Magic Number,Outliner,TreeView,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeView.cs,DefWndProc,The following statement contains a magic number: m.Msg == 515 && DoubleClickAction != DoubleClickAction.Expand
Missing Default,Outliner,TreeStyle,C:\research\architectureSmells\repos\Pjanssen_Outliner\dotnet\TreeStyle.cs,SetNodeColor,The following switch statement is missing a default case: switch (color)              {                  case NodeColor.Default:                      tn.ForeColor = GetNodeForeColor((OutlinerNode)tn.Tag);                      tn.BackColor = GetNodeBackColor((OutlinerNode)tn.Tag);                      break;                  case NodeColor.Selected:                      tn.ForeColor = this.SelectionForeColor;                      tn.BackColor = this.SelectionBackColor;                      break;                  case NodeColor.ParentOfSelected:                      if (tn.Tag is OutlinerObject)                      {                          tn.ForeColor = this.ParentForeColor;                          tn.BackColor = this.ParentBackColor;                      }                      else if (tn.Tag is OutlinerLayer)                      {                          tn.ForeColor = this.LayerForeColor;                          tn.BackColor = this.LayerBackColor;                      }                      else                      {                          tn.ForeColor = GetNodeForeColor((OutlinerNode)tn.Tag);                          tn.BackColor = GetNodeBackColor((OutlinerNode)tn.Tag);                      }                      break;                  case NodeColor.LinkTarget:                      tn.ForeColor = this.LinkForeColor;                      tn.BackColor = this.LinkBackColor;                      break;              }
