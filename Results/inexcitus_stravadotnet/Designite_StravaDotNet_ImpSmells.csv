Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,UpdateActivityAsync,Cyclomatic complexity of the method is 18
Complex Method,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgressAsync,Cyclomatic complexity of the method is 24
Complex Method,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,UpdateActivity,Cyclomatic complexity of the method is 18
Complex Method,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgress,Cyclomatic complexity of the method is 25
Complex Method,Strava.Clients,AthleteClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\AthleteClient.cs,UpdateAthleteAsync,Cyclomatic complexity of the method is 12
Complex Method,Strava.Clients,AthleteClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\AthleteClient.cs,UpdateAthlete,Cyclomatic complexity of the method is 12
Complex Method,Strava.Clients,UploadClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\UploadClient.cs,UploadActivityAsync,Cyclomatic complexity of the method is 18
Complex Method,Strava.Authentication,WebAuthentication,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Authentication\WebAuthentication.cs,GetTokenAsync,Cyclomatic complexity of the method is 12
Complex Method,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,Cyclomatic complexity of the method is 8
Complex Method,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendGetAsync,Cyclomatic complexity of the method is 11
Complex Method,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendPostAsync,Cyclomatic complexity of the method is 10
Complex Method,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendPutAsync,Cyclomatic complexity of the method is 10
Complex Method,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendDeleteAsync,Cyclomatic complexity of the method is 10
Complex Method,Strava.Upload,UploadStatusCheck,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Upload\UploadStatusCheck.cs,TimerTick,Cyclomatic complexity of the method is 26
Long Parameter List,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,CreateActivityAsync,The method has 6 parameters.
Long Parameter List,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,CreateActivityAsync,The method has 6 parameters.
Long Parameter List,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEffortsByTimeAsync,The method has 5 parameters.
Long Parameter List,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEffortsAsync,The method has 6 parameters.
Long Parameter List,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEffortsByTime,The method has 5 parameters.
Long Parameter List,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEfforts,The method has 6 parameters.
Long Parameter List,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboardAsync,The method has 5 parameters.
Long Parameter List,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboardAsync,The method has 7 parameters.
Long Parameter List,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboardAsync,The method has 6 parameters.
Long Parameter List,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboardAsync,The method has 8 parameters.
Long Parameter List,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboardAsync,The method has 6 parameters.
Long Parameter List,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboardAsync,The method has 8 parameters.
Long Parameter List,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboard,The method has 5 parameters.
Long Parameter List,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboard,The method has 7 parameters.
Long Parameter List,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboard,The method has 6 parameters.
Long Parameter List,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboard,The method has 8 parameters.
Long Parameter List,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboard,The method has 6 parameters.
Long Parameter List,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboard,The method has 8 parameters.
Long Statement,Strava.Activities,LeaderboardEntry,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Segments\LeaderboardEntry.cs,ToString,The length of the statement  "	return string.Format ("{0}:\t{1}:{2}:{3}\t{4}"' Rank' Time.Hours.ToString ("D2")' Time.Minutes.ToString ("D2")' Time.Seconds.ToString ("D2")' AthleteName); " is 155.
Long Statement,Strava.Clients,RouteClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\RouteClient.cs,GetRoutes,The length of the statement  "	string getUrl = string.Format ("{0}?access_token={1}"' string.Format (Endpoints.Routes' athleteId)' Authentication.AccessToken); " is 128.
Long Statement,Strava.Clients,StatsClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\StatsClient.cs,GetStatsAsync,The length of the statement  "	string getUrl = string.Format ("https://www.strava.com/api/v3/athletes/{0}/stats?access_token={1}"' id' Authentication.AccessToken); " is 132.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivityAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}?include_all_efforts={2}&access_token={3}"' Endpoints.Activity' id' includeEfforts' Authentication.AccessToken); " is 151.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,CreateActivityAsync,The length of the statement  "	string postUrl = string.Format ("https://www.strava.com/api/v3/activities?name={0}&type={1}&start_date_local={2}&elapsed_time={3}&description={4}&distance={5}&access_token={6}"' name' t' timeString' elapsedSeconds' description' distance.ToString (CultureInfo.InvariantCulture)' Authentication.AccessToken); " is 306.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,CreateActivityAsync,The length of the statement  "	string postUrl = string.Format ("https://www.strava.com/api/v3/activities?name={0}&type={1}&start_date_local={2}&elapsed_time={3}&description={4}&distance={5}&access_token={6}"' name' t' timeString' elapsedSeconds' description' distance.ToString (CultureInfo.InvariantCulture)' Authentication.AccessToken); " is 306.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivitiesBeforeAsync,The length of the statement  "	string getUrl = string.Format ("{0}?before={1}&page={2}&per_page={3}&access_token={4}"' Endpoints.Activities' secondsBefore' page' perPage' Authentication.AccessToken); " is 168.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivitiesAfterAsync,The length of the statement  "	string getUrl = string.Format ("{0}?after={1}&page={2}&per_page={3}&access_token={4}"' Endpoints.Activities' secondsAfter' page' perPage' Authentication.AccessToken); " is 166.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetCommentsAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/comments?access_token={2}"' Endpoints.Activity' activityId' Authentication.AccessToken); " is 128.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,DeleteActivity,The length of the statement  "	string deleteUrl = string.Format ("https://www.strava.com/api/v3/activities/{0}?access_token={1}"' activityId' Authentication.AccessToken); " is 139.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetKudosAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/kudos?access_token={2}"' Endpoints.Activity' activityId' Authentication.AccessToken); " is 125.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivityZonesAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/zones?access_token={2}"' Endpoints.Activity' activityId' Authentication.AccessToken); " is 125.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivitiesAsync,The length of the statement  "	string getUrl = string.Format ("{0}?page={1}&per_page={2}&access_token={3}"' Endpoints.Activities' page' perPage' Authentication.AccessToken); " is 142.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetFollowersActivitiesAsync,The length of the statement  "	string getUrl = string.Format ("{0}?page={1}&per_page={2}&access_token={3}"' Endpoints.ActivitiesFollowers' page' perPage' Authentication.AccessToken); " is 151.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,UpdateActivityAsync,The length of the statement  "	string putUrl = string.Format ("{0}/{1}?{2}={3}&access_token={4}"' Endpoints.Activity' activityId' param' value' Authentication.AccessToken); " is 141.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,UpdateActivityTypeAsync,The length of the statement  "	string putUrl = string.Format ("{0}/{1}?type={2}&access_token={3}"' Endpoints.Activity' activityId' type' Authentication.AccessToken); " is 134.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivitiesAsync,The length of the statement  "	string getUrl = string.Format ("{0}?after={1}&before={2}&page={3}&per_page={4}&access_token={5}"' Endpoints.Activities' DateConverter.GetSecondsSinceUnixEpoch (after)' DateConverter.GetSecondsSinceUnixEpoch (before)' page' perPage' Authentication.AccessToken); " is 260.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetSummaryLastYearAsync,The length of the statement  "	return await GetSummaryAsync (new DateTime (DateTime.Now.Year - 1' 1' 1)' new DateTime (DateTime.Now.Year - 1' 12' 31' 23' 59' 59' DateTimeKind.Local)); " is 152.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetPhotosAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/photos?access_token={2}"' Endpoints.Activity' activityId' Authentication.AccessToken); " is 126.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivityLapsAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/laps?access_token={2}"' Endpoints.Activity' activityId' Authentication.AccessToken); " is 124.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GiveKudos,The length of the statement  "	string postUrl = string.Format ("{0}/{1}/kudos?access_token={2}"' Endpoints.Activity' activityId' Authentication.AccessToken); " is 126.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,PostComment,The length of the statement  "	string postUrl = string.Format ("{0}/{1}/comments?text={2}&access_token={3}"' Endpoints.Activity' activityId' text' Authentication.AccessToken); " is 144.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivity,The length of the statement  "	string getUrl = string.Format ("{0}/{1}?include_all_efforts={2}&access_token={3}"' Endpoints.Activity' id' includeEfforts' Authentication.AccessToken); " is 151.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivitiesBefore,The length of the statement  "	string getUrl = string.Format ("{0}?before={1}&page={2}&per_page={3}&access_token={4}"' Endpoints.Activities' secondsBefore' page' perPage' Authentication.AccessToken); " is 168.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivitiesAfter,The length of the statement  "	string getUrl = string.Format ("{0}?after={1}&page={2}&per_page={3}&access_token={4}"' Endpoints.Activities' secondsAfter' page' perPage' Authentication.AccessToken); " is 166.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetComments,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/comments?access_token={2}"' Endpoints.Activity' activityId' Authentication.AccessToken); " is 128.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetKudos,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/kudos?access_token={2}"' Endpoints.Activity' activityId' Authentication.AccessToken); " is 125.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivityZones,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/zones?access_token={2}"' Endpoints.Activity' activityId' Authentication.AccessToken); " is 125.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivities,The length of the statement  "	string getUrl = string.Format ("{0}?page={1}&per_page={2}&access_token={3}"' Endpoints.Activities' page' perPage' Authentication.AccessToken); " is 142.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivities,The length of the statement  "	string getUrl = string.Format ("{0}?after={1}&before={2}&page={3}&per_page={4}&access_token={5}"' Endpoints.Activities' DateConverter.GetSecondsSinceUnixEpoch (after)' DateConverter.GetSecondsSinceUnixEpoch (before)' page' perPage' Authentication.AccessToken); " is 260.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetFollowersActivities,The length of the statement  "	string getUrl = string.Format ("{0}?page={1}&per_page={2}&access_token={3}"' Endpoints.ActivitiesFollowers' page' perPage' Authentication.AccessToken); " is 151.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,UpdateActivityType,The length of the statement  "	string putUrl = string.Format ("{0}/{1}?type={2}&access_token={3}"' Endpoints.Activity' activityId' type' Authentication.AccessToken); " is 134.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,UpdateActivity,The length of the statement  "	string putUrl = string.Format ("{0}/{1}?{2}={3}&access_token={4}"' Endpoints.Activity' activityId' param' value' Authentication.AccessToken); " is 141.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetSummaryLastYear,The length of the statement  "	return GetSummary (new DateTime (DateTime.Now.Year - 1' 1' 1)' new DateTime (DateTime.Now.Year - 1' 12' 31' 23' 59' 59' DateTimeKind.Local)); " is 141.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetPhotos,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/photos?access_token={2}"' Endpoints.Activity' activityId' Authentication.AccessToken); " is 126.
Long Statement,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivityLaps,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/laps?access_token={2}"' Endpoints.Activity' activityId' Authentication.AccessToken); " is 124.
Long Statement,Strava.Clients,AthleteClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\AthleteClient.cs,GetFollowersAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/followers?access_token={2}"' Endpoints.Followers' athleteId' Authentication.AccessToken); " is 129.
Long Statement,Strava.Clients,AthleteClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\AthleteClient.cs,GetBothFollowingAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/both-following?access_token={2}"' Endpoints.Followers' athleteId' Authentication.AccessToken); " is 134.
Long Statement,Strava.Clients,AthleteClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\AthleteClient.cs,UpdateAthleteSex,The length of the statement  "	string putUrl = string.Format ("{0}?sex={1}&access_token={2}"' Endpoints.Athlete' gender.ToString ().Substring (0' 1)' Authentication.AccessToken); " is 147.
Long Statement,Strava.Clients,AthleteClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\AthleteClient.cs,GetFollowers,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/followers?access_token={2}"' Endpoints.Followers' athleteId' Authentication.AccessToken); " is 129.
Long Statement,Strava.Clients,AthleteClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\AthleteClient.cs,GetBothFollowing,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/both-following?access_token={2}"' Endpoints.Followers' athleteId' Authentication.AccessToken); " is 134.
Long Statement,Strava.Clients,ClubClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ClubClient.cs,GetLatestClubActivitiesAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/activities?access_token={2}"' Endpoints.Club' clubId' Authentication.AccessToken); " is 122.
Long Statement,Strava.Clients,ClubClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ClubClient.cs,GetLatestClubActivitiesAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/activities?page={2}&per_page={3}&access_token={4}"' Endpoints.Club' clubId' page' perPage' Authentication.AccessToken); " is 159.
Long Statement,Strava.Clients,ClubClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ClubClient.cs,JoinClub,The length of the statement  "	string postUrl = string.Format ("https://www.strava.com/api/v3/clubs/{0}/join?access_token={1}"' clubId' Authentication.AccessToken); " is 133.
Long Statement,Strava.Clients,ClubClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ClubClient.cs,LeaveClub,The length of the statement  "	string postUrl = string.Format ("https://www.strava.com/api/v3/clubs/{0}/leave?access_token={1}"' clubId' Authentication.AccessToken); " is 134.
Long Statement,Strava.Clients,ClubClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ClubClient.cs,GetLatestClubActivities,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/activities?access_token={2}"' Endpoints.Club' clubId' Authentication.AccessToken); " is 122.
Long Statement,Strava.Clients,ClubClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ClubClient.cs,GetLatestClubActivities,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/activities?page={2}&per_page={3}&access_token={4}"' Endpoints.Club' clubId' page' perPage' Authentication.AccessToken); " is 159.
Long Statement,Strava.Clients,ClubClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ClubClient.cs,GetClubEvents,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/group_events?access_token={2}"' Endpoints.Club' clubId' Authentication.AccessToken); " is 124.
Long Statement,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEffortsByTimeAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/all_efforts?start_date_local={2}&end_date_local={3}&page={4}&per_page={5}&access_token={6}"' Endpoints.Leaderboard' segmentId' after.ToString ("O")' before.ToString ("O")' page' perPage' Authentication.AccessToken); " is 255.
Long Statement,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEffortsByAthleteAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/all_efforts?athlete_id={2}&page={3}&per_page={4}&access_token={5}"' Endpoints.Leaderboard' segmentId' athleteId' page' perPage' Authentication.AccessToken); " is 196.
Long Statement,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEffortsAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/all_efforts?athlete_id={2}&start_date_local={3}&end_date_local={4}&page={5}per_page={6}&access_token={7}"' Endpoints.Leaderboard' segmentId' athleteId' after.ToString ("O")' before.ToString ("O")' page' perPage' Authentication.AccessToken); " is 280.
Long Statement,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEffortsAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/all_efforts?page={2}per_page={3}&access_token={4}"' Endpoints.Leaderboard' segmentId' page' perPage' Authentication.AccessToken); " is 169.
Long Statement,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEffortsByTime,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/all_efforts?start_date_local={2}&end_date_local={3}&page={4}&per_page={5}&access_token={6}"' Endpoints.Leaderboard' segmentId' after.ToString ("O")' before.ToString ("O")' page' perPage' Authentication.AccessToken); " is 255.
Long Statement,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEffortsByAthlete,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/all_efforts?athlete_id={2}&page={3}&per_page={4}&access_token={5}"' Endpoints.Leaderboard' segmentId' athleteId' page' perPage' Authentication.AccessToken); " is 196.
Long Statement,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEfforts,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/all_efforts?athlete_id={2}&start_date_local={3}&end_date_local={4}&page={5}per_page={6}&access_token={7}"' Endpoints.Leaderboard' segmentId' athleteId' after.ToString ("O")' before.ToString ("O")' page' perPage' Authentication.AccessToken); " is 280.
Long Statement,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEfforts,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/all_efforts?page={2}per_page={3}&access_token={4}"' Endpoints.Leaderboard' segmentId' page' perPage' Authentication.AccessToken); " is 169.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboardAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/leaderboard?{2}&{3}&{4}&{5}&page={6}&per_page={7}&access_token={8}"' Endpoints.Leaderboard' segmentId' useGender ? genderFilter : string.Empty' useTime ? timeFilter : string.Empty' useAge ? ageFilter : string.Empty' useWeight ? weightFilter : string.Empty' page' perPage' Authentication.AccessToken); " is 340.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboardAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/leaderboard?{2}&{3}&{4}&{5}&club_id={6}&page={7}&per_page={8}&access_token={9}"' Endpoints.Leaderboard' segmentId' useGender ? genderFilter : string.Empty' useTime ? timeFilter : string.Empty' useAge ? ageFilter : string.Empty' useWeight ? weightFilter : string.Empty' clubId' page' perPage' Authentication.AccessToken); " is 360.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboardAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/leaderboard?{2}&{3}&{4}&{5}&following={6}&page={7}&per_page={8}&access_token={9}"' Endpoints.Leaderboard' segmentId' useGender ? genderFilter : string.Empty' useTime ? timeFilter : string.Empty' useAge ? ageFilter : string.Empty' useWeight ? weightFilter : string.Empty' following' page' perPage' Authentication.AccessToken); " is 365.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetRecordsAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/koms?access_token={2}"' Endpoints.Athletes' athleteId' Authentication.AccessToken); " is 123.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetStarredSegmentsAsync,The length of the statement  "	string getUrl = string.Format ("https://www.strava.com/api/v3/athletes/{0}/segments/starred/?access_token={1}"' athleteId' Authentication.AccessToken); " is 151.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboardAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/leaderboard?filter=overall&page={2}&per_page={3}&access_token={4}"' Endpoints.Leaderboard' segmentId' page' perPage' Authentication.AccessToken); " is 185.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentEntryCountAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/leaderboard?filter=overall&access_token={2}"' Endpoints.Leaderboard' segmentId' Authentication.AccessToken); " is 148.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentEffortCountAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/leaderboard?filter=overall&access_token={2}"' Endpoints.Leaderboard' segmentId' Authentication.AccessToken); " is 148.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,ExploreSegmentsAsync,The length of the statement  "	string bnds = string.Format ("{0}'{1}'{2}'{3}"' southWest.Latitude.ToString (CultureInfo.InvariantCulture)' southWest.Longitude.ToString (CultureInfo.InvariantCulture)' northEast.Latitude.ToString (CultureInfo.InvariantCulture)' northEast.Longitude.ToString (CultureInfo.InvariantCulture)); " is 290.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,ExploreSegmentsAsync,The length of the statement  "	string getUrl = string.Format ("{0}/explore?bounds={1}&access_token={2}"' Endpoints.Leaderboard' bnds' Authentication.AccessToken); " is 131.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,ExploreSegmentsAsync,The length of the statement  "	string bnds = string.Format ("{0}'{1}'{2}'{3}"' southWest.Latitude.ToString (CultureInfo.InvariantCulture)' southWest.Longitude.ToString (CultureInfo.InvariantCulture)' northEast.Latitude.ToString (CultureInfo.InvariantCulture)' northEast.Longitude.ToString (CultureInfo.InvariantCulture)); " is 290.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,ExploreSegmentsAsync,The length of the statement  "	string getUrl = string.Format ("{0}/explore?bounds={1}&min_cat={2}&max_cat={3}&access_token={4}"' Endpoints.Leaderboard' bnds' minCat' maxCat' Authentication.AccessToken); " is 171.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}?access_token={2}"' Endpoints.Leaderboard' segmentId' Authentication.AccessToken); " is 121.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboard,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/leaderboard?{2}&{3}&{4}&{5}&page={6}&per_page={7}&access_token={8}"' Endpoints.Leaderboard' segmentId' useGender ? genderFilter : string.Empty' useTime ? timeFilter : string.Empty' useAge ? ageFilter : string.Empty' useWeight ? weightFilter : string.Empty' page' perPage' Authentication.AccessToken); " is 340.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboard,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/leaderboard?{2}&{3}&{4}&{5}&club_id={6}&page={7}&per_page={8}&access_token={9}"' Endpoints.Leaderboard' segmentId' useGender ? genderFilter : string.Empty' useTime ? timeFilter : string.Empty' useAge ? ageFilter : string.Empty' useWeight ? weightFilter : string.Empty' clubId' page' perPage' Authentication.AccessToken); " is 360.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboard,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/leaderboard?{2}&{3}&{4}&{5}&following={6}&page={7}&per_page={8}&access_token={9}"' Endpoints.Leaderboard' segmentId' useGender ? genderFilter : string.Empty' useTime ? timeFilter : string.Empty' useAge ? ageFilter : string.Empty' useWeight ? weightFilter : string.Empty' following' page' perPage' Authentication.AccessToken); " is 365.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetRecords,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/koms?access_token={2}"' Endpoints.Athletes' athleteId' Authentication.AccessToken); " is 123.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetStarredSegments,The length of the statement  "	string getUrl = string.Format ("https://www.strava.com/api/v3/athletes/{0}/segments/starred?access_token={1}"' athleteId' Authentication.AccessToken); " is 150.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboard,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/leaderboard?filter=overall&page={2}&per_page={3}&access_token={4}"' Endpoints.Leaderboard' segmentId' page' perPage' Authentication.AccessToken); " is 185.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentEntryCount,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/leaderboard?filter=overall&access_token={2}"' Endpoints.Leaderboard' segmentId' Authentication.AccessToken); " is 148.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentEffortCount,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/leaderboard?filter=overall&access_token={2}"' Endpoints.Leaderboard' segmentId' Authentication.AccessToken); " is 148.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,ExploreSegments,The length of the statement  "	string bnds = string.Format ("{0}'{1}'{2}'{3}"' southWest.Latitude.ToString (CultureInfo.InvariantCulture)' southWest.Longitude.ToString (CultureInfo.InvariantCulture)' northEast.Latitude.ToString (CultureInfo.InvariantCulture)' northEast.Longitude.ToString (CultureInfo.InvariantCulture)); " is 290.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,ExploreSegments,The length of the statement  "	string getUrl = string.Format ("{0}/explore?bounds={1}&access_token={2}"' Endpoints.Leaderboard' bnds' Authentication.AccessToken); " is 131.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,ExploreSegments,The length of the statement  "	string bnds = string.Format ("{0}'{1}'{2}'{3}"' southWest.Latitude.ToString (CultureInfo.InvariantCulture)' southWest.Longitude.ToString (CultureInfo.InvariantCulture)' northEast.Latitude.ToString (CultureInfo.InvariantCulture)' northEast.Longitude.ToString (CultureInfo.InvariantCulture)); " is 290.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,ExploreSegments,The length of the statement  "	string getUrl = string.Format ("{0}/explore?bounds={1}&min_cat={2}&max_cat={3}&access_token={4}"' Endpoints.Leaderboard' bnds' minCat' maxCat' Authentication.AccessToken); " is 171.
Long Statement,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegment,The length of the statement  "	string getUrl = string.Format ("{0}/{1}?access_token={2}"' Endpoints.Leaderboard' segmentId' Authentication.AccessToken); " is 121.
Long Statement,Strava.Clients,StreamClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\StreamClient.cs,GetActivityStreamAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/streams/{2}?{3}&access_token={4}"' Endpoints.Activity' activityId' types' resolution != StreamResolution.All ? "resolution=" + resolution.ToString ().ToLower () : ""' Authentication.AccessToken); " is 235.
Long Statement,Strava.Clients,StreamClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\StreamClient.cs,GetSegmentStreamAsync,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/streams/{2}?{3}&access_token={4}"' Endpoints.Leaderboard' segmentId' types' resolution != StreamResolution.All ? "resolution=" + resolution.ToString ().ToLower () : ""' Authentication.AccessToken); " is 237.
Long Statement,Strava.Clients,StreamClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\StreamClient.cs,GetSegmentEffortStreamAsync,The length of the statement  "	string getUrl = string.Format ("https://www.strava.com/api/v3/segment_efforts/{0}/streams/{1}?{2}&access_token={3}"' effortId' types' resolution != StreamResolution.All ? "resolution=" + resolution.ToString ().ToLower () : ""' Authentication.AccessToken); " is 255.
Long Statement,Strava.Clients,StreamClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\StreamClient.cs,GetActivityStream,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/streams/{2}?{3}&access_token={4}"' Endpoints.Activity' activityId' types' resolution != StreamResolution.All ? "resolution=" + resolution.ToString ().ToLower () : ""' Authentication.AccessToken); " is 235.
Long Statement,Strava.Clients,StreamClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\StreamClient.cs,GetSegmentEffortStream,The length of the statement  "	string getUrl = string.Format ("https://www.strava.com/api/v3/segment_efforts/{0}/streams/{1}?{2}&access_token={3}"' effortId' types' resolution != StreamResolution.All ? "resolution=" + resolution.ToString ().ToLower () : ""' Authentication.AccessToken); " is 255.
Long Statement,Strava.Clients,StreamClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\StreamClient.cs,GetSegmentStream,The length of the statement  "	string getUrl = string.Format ("{0}/{1}/streams/{2}?{3}&access_token={4}"' Endpoints.Leaderboard' segmentId' types' resolution != StreamResolution.All ? "resolution=" + resolution.ToString ().ToLower () : ""' Authentication.AccessToken); " is 237.
Long Statement,Strava.Clients,UploadClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\UploadClient.cs,UploadActivityAsync,The length of the statement  "	HttpResponseMessage result = await client.PostAsync (string.Format ("https://www.strava.com/api/v3/uploads?data_type={0}&activity_type={1}&commute={2}"' format' activityType.ToString ().ToLower ()' commuteRide)' content); " is 221.
Long Statement,Strava.Authentication,LocalWebServer,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Authentication\LocalWebServer.cs,ProcessRequest,The length of the statement  "	string url = string.Format ("https://www.strava.com/oauth/token?client_id={0}&client_secret={1}&code={2}"' ClientId' ClientSecret' code); " is 137.
Long Statement,Strava.Authentication,WebAuthentication,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Authentication\WebAuthentication.cs,GetTokenAsync,The length of the statement  "	process.StartInfo = new ProcessStartInfo (string.Format ("{0}?client_id={1}&response_type=code&redirect_uri=http://localhost:{2}&scope={3}&approval_prompt=auto"' url' clientId' callbackPort' scopeLevel)); " is 204.
Long Statement,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendGetAsync,The length of the statement  "					KeyValuePair<String' IEnumerable<String>> usage = response.Headers.ToList ().Find (x => x.Key.Equals ("X-RateLimit-Usage")); " is 124.
Long Statement,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendGetAsync,The length of the statement  "						Limits.Usage = new Usage (Int32.Parse (usage.Value.ElementAt (0).Split (''') [0])' Int32.Parse (usage.Value.ElementAt (0).Split (''') [1])); " is 140.
Long Statement,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendGetAsync,The length of the statement  "					KeyValuePair<String' IEnumerable<String>> limit = response.Headers.ToList ().Find (x => x.Key.Equals ("X-RateLimit-Limit")); " is 124.
Long Statement,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendGetAsync,The length of the statement  "						Limits.Limit = new Limit (Int32.Parse (limit.Value.ElementAt (0).Split (''') [0])' Int32.Parse (limit.Value.ElementAt (0).Split (''') [1])); " is 140.
Long Statement,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendPostAsync,The length of the statement  "				KeyValuePair<String' IEnumerable<String>> usage = response.Headers.ToList ().Find (x => x.Key.Equals ("X-RateLimit-Usage")); " is 124.
Long Statement,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendPostAsync,The length of the statement  "					Limits.Usage = new Usage (Int32.Parse (usage.Value.ElementAt (0).Split (''') [0])' Int32.Parse (usage.Value.ElementAt (0).Split (''') [1])); " is 140.
Long Statement,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendPostAsync,The length of the statement  "				KeyValuePair<String' IEnumerable<String>> limit = response.Headers.ToList ().Find (x => x.Key.Equals ("X-RateLimit-Limit")); " is 124.
Long Statement,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendPostAsync,The length of the statement  "					Limits.Limit = new Limit (Int32.Parse (limit.Value.ElementAt (0).Split (''') [0])' Int32.Parse (limit.Value.ElementAt (0).Split (''') [1])); " is 140.
Long Statement,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendPutAsync,The length of the statement  "				KeyValuePair<String' IEnumerable<String>> usage = response.Headers.ToList ().Find (x => x.Key.Equals ("X-RateLimit-Usage")); " is 124.
Long Statement,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendPutAsync,The length of the statement  "					Limits.Usage = new Usage (Int32.Parse (usage.Value.ElementAt (0).Split (''') [0])' Int32.Parse (usage.Value.ElementAt (0).Split (''') [1])); " is 140.
Long Statement,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendPutAsync,The length of the statement  "				KeyValuePair<String' IEnumerable<String>> limit = response.Headers.ToList ().Find (x => x.Key.Equals ("X-RateLimit-Limit")); " is 124.
Long Statement,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendPutAsync,The length of the statement  "					Limits.Limit = new Limit (Int32.Parse (limit.Value.ElementAt (0).Split (''') [0])' Int32.Parse (limit.Value.ElementAt (0).Split (''') [1])); " is 140.
Long Statement,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendDeleteAsync,The length of the statement  "				KeyValuePair<String' IEnumerable<String>> usage = response.Headers.ToList ().Find (x => x.Key.Equals ("X-RateLimit-Usage")); " is 124.
Long Statement,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendDeleteAsync,The length of the statement  "					Limits.Usage = new Usage (Int32.Parse (usage.Value.ElementAt (0).Split (''') [0])' Int32.Parse (usage.Value.ElementAt (0).Split (''') [1])); " is 140.
Long Statement,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendDeleteAsync,The length of the statement  "				KeyValuePair<String' IEnumerable<String>> limit = response.Headers.ToList ().Find (x => x.Key.Equals ("X-RateLimit-Limit")); " is 124.
Long Statement,Strava.Http,WebRequest,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Http\WebRequest.cs,SendDeleteAsync,The length of the statement  "					Limits.Limit = new Limit (Int32.Parse (limit.Value.ElementAt (0).Split (''') [0])' Int32.Parse (limit.Value.ElementAt (0).Split (''') [1])); " is 140.
Long Statement,Strava.Utilities,GoogleImageLoader,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Utilities\GoogleImageLoader.cs,LoadActivityPreviewAsync,The length of the statement  "	string markerStart = string.Format ("&markers=icon:http://tinyurl.com/np8ozqm%7C{0}'{1}"' c.First ().Latitude' c.First ().Longitude); " is 133.
Long Statement,Strava.Utilities,GoogleImageLoader,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Utilities\GoogleImageLoader.cs,LoadActivityPreviewAsync,The length of the statement  "	string markerEnd = string.Format ("&markers=icon:http://tinyurl.com/mzj8mvq%7C{0}'{1}"' c.Last ().Latitude' c.Last ().Longitude); " is 129.
Long Statement,Strava.Utilities,GoogleImageLoader,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Utilities\GoogleImageLoader.cs,LoadActivityPreviewAsync,The length of the statement  "	string url = string.Format ("http://maps.googleapis.com/maps/api/staticmap?sensor=false&maptype={0}&size={1}x{2}&{3}&{4}&path=weight:3|color:red|enc:{5}"' mapType.ToString ().ToLower ()' dimension.Width' dimension.Height' markerStart' markerEnd' polyline); " is 256.
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivitiesBeforeAsync,The following statement contains a magic number: while (hasEntries) {  	List<ActivitySummary> request = await GetActivitiesBeforeAsync (before' page++' 200);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (ActivitySummary activity in request) {  		activities.Add (activity);  		if (ActivityReceived != null) {  			ActivityReceived (null' new ActivityReceivedEventArgs (activity));  		}  	}  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivitiesAfterAsync,The following statement contains a magic number: while (hasEntries) {  	List<ActivitySummary> request = await GetActivitiesAfterAsync (after' page++' 200);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (ActivitySummary activity in request) {  		activities.Add (activity);  		if (ActivityReceived != null) {  			ActivityReceived (null' new ActivityReceivedEventArgs (activity));  		}  	}  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetFriendsActivitiesAsync,The following statement contains a magic number: while (hasEntries) {  	List<ActivitySummary> request = await GetFollowersActivitiesAsync (page++' 20);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (ActivitySummary activity in request) {  		if (activities.Count < count) {  			activities.Add (activity);  		} else {  			return activities;  		}  	}  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetAllActivitiesAsync,The following statement contains a magic number: while (hasEntries) {  	List<ActivitySummary> request = await GetActivitiesAsync (page++' 200);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (ActivitySummary activity in request) {  		activities.Add (activity);  		if (ActivityReceived != null) {  			ActivityReceived (null' new ActivityReceivedEventArgs (activity));  		}  	}  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgressAsync,The following statement contains a magic number: switch (now.DayOfWeek) {  case DayOfWeek.Monday:  	days = 1;  	break;  case DayOfWeek.Tuesday:  	days = 2;  	break;  case DayOfWeek.Wednesday:  	days = 3;  	break;  case DayOfWeek.Thursday:  	days = 4;  	break;  case DayOfWeek.Friday:  	days = 5;  	break;  case DayOfWeek.Saturday:  	days = 6;  	break;  case DayOfWeek.Sunday:  	days = 7;  	break;  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgressAsync,The following statement contains a magic number: switch (now.DayOfWeek) {  case DayOfWeek.Monday:  	days = 1;  	break;  case DayOfWeek.Tuesday:  	days = 2;  	break;  case DayOfWeek.Wednesday:  	days = 3;  	break;  case DayOfWeek.Thursday:  	days = 4;  	break;  case DayOfWeek.Friday:  	days = 5;  	break;  case DayOfWeek.Saturday:  	days = 6;  	break;  case DayOfWeek.Sunday:  	days = 7;  	break;  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgressAsync,The following statement contains a magic number: switch (now.DayOfWeek) {  case DayOfWeek.Monday:  	days = 1;  	break;  case DayOfWeek.Tuesday:  	days = 2;  	break;  case DayOfWeek.Wednesday:  	days = 3;  	break;  case DayOfWeek.Thursday:  	days = 4;  	break;  case DayOfWeek.Friday:  	days = 5;  	break;  case DayOfWeek.Saturday:  	days = 6;  	break;  case DayOfWeek.Sunday:  	days = 7;  	break;  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgressAsync,The following statement contains a magic number: switch (now.DayOfWeek) {  case DayOfWeek.Monday:  	days = 1;  	break;  case DayOfWeek.Tuesday:  	days = 2;  	break;  case DayOfWeek.Wednesday:  	days = 3;  	break;  case DayOfWeek.Thursday:  	days = 4;  	break;  case DayOfWeek.Friday:  	days = 5;  	break;  case DayOfWeek.Saturday:  	days = 6;  	break;  case DayOfWeek.Sunday:  	days = 7;  	break;  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgressAsync,The following statement contains a magic number: switch (now.DayOfWeek) {  case DayOfWeek.Monday:  	days = 1;  	break;  case DayOfWeek.Tuesday:  	days = 2;  	break;  case DayOfWeek.Wednesday:  	days = 3;  	break;  case DayOfWeek.Thursday:  	days = 4;  	break;  case DayOfWeek.Friday:  	days = 5;  	break;  case DayOfWeek.Saturday:  	days = 6;  	break;  case DayOfWeek.Sunday:  	days = 7;  	break;  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgressAsync,The following statement contains a magic number: switch (now.DayOfWeek) {  case DayOfWeek.Monday:  	days = 1;  	break;  case DayOfWeek.Tuesday:  	days = 2;  	break;  case DayOfWeek.Wednesday:  	days = 3;  	break;  case DayOfWeek.Thursday:  	days = 4;  	break;  case DayOfWeek.Friday:  	days = 5;  	break;  case DayOfWeek.Saturday:  	days = 6;  	break;  case DayOfWeek.Sunday:  	days = 7;  	break;  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgressAsync,The following statement contains a magic number: days = 2;  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgressAsync,The following statement contains a magic number: days = 3;  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgressAsync,The following statement contains a magic number: days = 4;  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgressAsync,The following statement contains a magic number: days = 5;  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgressAsync,The following statement contains a magic number: days = 6;  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgressAsync,The following statement contains a magic number: days = 7;  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivitiesAsync,The following statement contains a magic number: while (hasEntries) {  	List<ActivitySummary> request = await GetActivitiesAsync (after' before' page++' 200);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (ActivitySummary activity in request) {  		activities.Add (activity);  		if (ActivityReceived != null) {  			ActivityReceived (null' new ActivityReceivedEventArgs (activity));  		}  	}  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetSummaryAsync,The following statement contains a magic number: while (hasEntries) {  	List<ActivitySummary> request = await GetActivitiesAsync (start' end' page++' 200);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (Activity activity in request) {  		if (activity.Type == ActivityType.Ride) {  			summary.AddRide (activity);  			rideDistance += activity.Distance;  		} else if (activity.Type == ActivityType.Run) {  			summary.AddRun (activity);  			runDistance += activity.Distance;  		} else {  			summary.AddActivity (activity);  		}  		summary.AddTime (TimeSpan.FromSeconds (activity.MovingTime));  		if (ActivityReceived != null) {  			ActivityReceived (null' new ActivityReceivedEventArgs (activity));  		}  	}  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetSummaryLastYearAsync,The following statement contains a magic number: return await GetSummaryAsync (new DateTime (DateTime.Now.Year - 1' 1' 1)' new DateTime (DateTime.Now.Year - 1' 12' 31' 23' 59' 59' DateTimeKind.Local));  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetSummaryLastYearAsync,The following statement contains a magic number: return await GetSummaryAsync (new DateTime (DateTime.Now.Year - 1' 1' 1)' new DateTime (DateTime.Now.Year - 1' 12' 31' 23' 59' 59' DateTimeKind.Local));  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetSummaryLastYearAsync,The following statement contains a magic number: return await GetSummaryAsync (new DateTime (DateTime.Now.Year - 1' 1' 1)' new DateTime (DateTime.Now.Year - 1' 12' 31' 23' 59' 59' DateTimeKind.Local));  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetSummaryLastYearAsync,The following statement contains a magic number: return await GetSummaryAsync (new DateTime (DateTime.Now.Year - 1' 1' 1)' new DateTime (DateTime.Now.Year - 1' 12' 31' 23' 59' 59' DateTimeKind.Local));  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetSummaryLastYearAsync,The following statement contains a magic number: return await GetSummaryAsync (new DateTime (DateTime.Now.Year - 1' 1' 1)' new DateTime (DateTime.Now.Year - 1' 12' 31' 23' 59' 59' DateTimeKind.Local));  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetLatestPhotosAsync,The following statement contains a magic number: foreach (ActivitySummary a in activities) {  	if (a.PhotoCount > 0) {  		List<Photo> p = await GetPhotosAsync (a.Id.ToString ());  		photos.AddRange (p);  	}  	if (photos.Count >= 4)  		return photos;  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetLatestPhotosAsync,The following statement contains a magic number: if (photos.Count >= 4)  	return photos;  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivitiesBefore,The following statement contains a magic number: while (hasEntries) {  	List<ActivitySummary> request = GetActivitiesBefore (before' page++' 200);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (ActivitySummary activity in request) {  		activities.Add (activity);  		if (ActivityReceived != null) {  			ActivityReceived (null' new ActivityReceivedEventArgs (activity));  		}  	}  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivitiesAfter,The following statement contains a magic number: while (hasEntries) {  	List<ActivitySummary> request = GetActivitiesAfter (after' page++' 200);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (ActivitySummary activity in request) {  		activities.Add (activity);  		if (ActivityReceived != null) {  			ActivityReceived (null' new ActivityReceivedEventArgs (activity));  		}  	}  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetActivities,The following statement contains a magic number: while (hasEntries) {  	List<ActivitySummary> request = GetActivities (after' before' page++' 10);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (ActivitySummary activity in request) {  		activities.Add (activity);  		if (ActivityReceived != null) {  			ActivityReceived (null' new ActivityReceivedEventArgs (activity));  		}  	}  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetAllActivities,The following statement contains a magic number: while (hasEntries) {  	List<ActivitySummary> request = GetActivities (page++' 200);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (ActivitySummary activity in request) {  		activities.Add (activity);  		if (ActivityReceived != null) {  			ActivityReceived (null' new ActivityReceivedEventArgs (activity));  		}  	}  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetFriendsActivities,The following statement contains a magic number: while (hasEntries) {  	List<ActivitySummary> request = GetFollowersActivities (page++' 20);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (ActivitySummary activity in request) {  		if (activities.Count < count) {  			activities.Add (activity);  		} else {  			return activities;  		}  	}  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgress,The following statement contains a magic number: switch (now.DayOfWeek) {  case DayOfWeek.Monday:  	days = 1;  	break;  case DayOfWeek.Tuesday:  	days = 2;  	break;  case DayOfWeek.Wednesday:  	days = 3;  	break;  case DayOfWeek.Thursday:  	days = 4;  	break;  case DayOfWeek.Friday:  	days = 5;  	break;  case DayOfWeek.Saturday:  	days = 6;  	break;  case DayOfWeek.Sunday:  	days = 7;  	break;  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgress,The following statement contains a magic number: switch (now.DayOfWeek) {  case DayOfWeek.Monday:  	days = 1;  	break;  case DayOfWeek.Tuesday:  	days = 2;  	break;  case DayOfWeek.Wednesday:  	days = 3;  	break;  case DayOfWeek.Thursday:  	days = 4;  	break;  case DayOfWeek.Friday:  	days = 5;  	break;  case DayOfWeek.Saturday:  	days = 6;  	break;  case DayOfWeek.Sunday:  	days = 7;  	break;  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgress,The following statement contains a magic number: switch (now.DayOfWeek) {  case DayOfWeek.Monday:  	days = 1;  	break;  case DayOfWeek.Tuesday:  	days = 2;  	break;  case DayOfWeek.Wednesday:  	days = 3;  	break;  case DayOfWeek.Thursday:  	days = 4;  	break;  case DayOfWeek.Friday:  	days = 5;  	break;  case DayOfWeek.Saturday:  	days = 6;  	break;  case DayOfWeek.Sunday:  	days = 7;  	break;  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgress,The following statement contains a magic number: switch (now.DayOfWeek) {  case DayOfWeek.Monday:  	days = 1;  	break;  case DayOfWeek.Tuesday:  	days = 2;  	break;  case DayOfWeek.Wednesday:  	days = 3;  	break;  case DayOfWeek.Thursday:  	days = 4;  	break;  case DayOfWeek.Friday:  	days = 5;  	break;  case DayOfWeek.Saturday:  	days = 6;  	break;  case DayOfWeek.Sunday:  	days = 7;  	break;  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgress,The following statement contains a magic number: switch (now.DayOfWeek) {  case DayOfWeek.Monday:  	days = 1;  	break;  case DayOfWeek.Tuesday:  	days = 2;  	break;  case DayOfWeek.Wednesday:  	days = 3;  	break;  case DayOfWeek.Thursday:  	days = 4;  	break;  case DayOfWeek.Friday:  	days = 5;  	break;  case DayOfWeek.Saturday:  	days = 6;  	break;  case DayOfWeek.Sunday:  	days = 7;  	break;  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgress,The following statement contains a magic number: switch (now.DayOfWeek) {  case DayOfWeek.Monday:  	days = 1;  	break;  case DayOfWeek.Tuesday:  	days = 2;  	break;  case DayOfWeek.Wednesday:  	days = 3;  	break;  case DayOfWeek.Thursday:  	days = 4;  	break;  case DayOfWeek.Friday:  	days = 5;  	break;  case DayOfWeek.Saturday:  	days = 6;  	break;  case DayOfWeek.Sunday:  	days = 7;  	break;  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgress,The following statement contains a magic number: days = 2;  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgress,The following statement contains a magic number: days = 3;  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgress,The following statement contains a magic number: days = 4;  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgress,The following statement contains a magic number: days = 5;  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgress,The following statement contains a magic number: days = 6;  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgress,The following statement contains a magic number: days = 7;  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetSummary,The following statement contains a magic number: while (hasEntries) {  	List<ActivitySummary> request = GetActivities (start' end' page++' 200);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (ActivitySummary activity in request) {  		if (activity.Type == ActivityType.Ride) {  			summary.AddRide (activity);  			rideDistance += activity.Distance;  		} else if (activity.Type == ActivityType.Run) {  			summary.AddRun (activity);  			runDistance += activity.Distance;  		} else {  			summary.AddActivity (activity);  		}  		summary.AddTime (TimeSpan.FromSeconds (activity.MovingTime));  		if (ActivityReceived != null) {  			ActivityReceived (null' new ActivityReceivedEventArgs (activity));  		}  	}  }  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetSummaryLastYear,The following statement contains a magic number: return GetSummary (new DateTime (DateTime.Now.Year - 1' 1' 1)' new DateTime (DateTime.Now.Year - 1' 12' 31' 23' 59' 59' DateTimeKind.Local));  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetSummaryLastYear,The following statement contains a magic number: return GetSummary (new DateTime (DateTime.Now.Year - 1' 1' 1)' new DateTime (DateTime.Now.Year - 1' 12' 31' 23' 59' 59' DateTimeKind.Local));  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetSummaryLastYear,The following statement contains a magic number: return GetSummary (new DateTime (DateTime.Now.Year - 1' 1' 1)' new DateTime (DateTime.Now.Year - 1' 12' 31' 23' 59' 59' DateTimeKind.Local));  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetSummaryLastYear,The following statement contains a magic number: return GetSummary (new DateTime (DateTime.Now.Year - 1' 1' 1)' new DateTime (DateTime.Now.Year - 1' 12' 31' 23' 59' 59' DateTimeKind.Local));  
Magic Number,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetSummaryLastYear,The following statement contains a magic number: return GetSummary (new DateTime (DateTime.Now.Year - 1' 1' 1)' new DateTime (DateTime.Now.Year - 1' 12' 31' 23' 59' 59' DateTimeKind.Local));  
Magic Number,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEffortsByTimeAsync,The following statement contains a magic number: while (hasEntries) {  	List<SegmentEffort> request = await GetSegmentEffortsByTimeAsync (segmentId' after' before' page++' 200);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (SegmentEffort effort in request) {  		activities.Add (effort);  	}  }  
Magic Number,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEffortsByAthleteAsync,The following statement contains a magic number: while (hasEntries) {  	List<SegmentEffort> request = await GetSegmentEffortsByAthleteAsync (segmentId' athleteId' page++' 200);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (SegmentEffort effort in request) {  		activities.Add (effort);  	}  }  
Magic Number,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEffortsAsync,The following statement contains a magic number: while (hasEntries) {  	List<SegmentEffort> request = await GetSegmentEffortsAsync (segmentId' athleteId' after' before' page++' 200);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (SegmentEffort effort in request) {  		activities.Add (effort);  	}  }  
Magic Number,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEffortsAsync,The following statement contains a magic number: while (hasEntries) {  	List<SegmentEffort> request = await GetSegmentEffortsAsync (segmentId' page++' 200);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (SegmentEffort effort in request) {  		activities.Add (effort);  	}  }  
Magic Number,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEffortsByTime,The following statement contains a magic number: while (hasEntries) {  	List<SegmentEffort> request = GetSegmentEffortsByTime (segmentId' after' before' page++' 200);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (SegmentEffort effort in request) {  		activities.Add (effort);  	}  }  
Magic Number,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEffortsByAthlete,The following statement contains a magic number: while (hasEntries) {  	List<SegmentEffort> request = GetSegmentEffortsByAthlete (segmentId' athleteId' page++' 200);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (SegmentEffort effort in request) {  		activities.Add (effort);  	}  }  
Magic Number,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEfforts,The following statement contains a magic number: while (hasEntries) {  	List<SegmentEffort> request = GetSegmentEfforts (segmentId' athleteId' after' before' page++' 200);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (SegmentEffort effort in request) {  		activities.Add (effort);  	}  }  
Magic Number,Strava.Clients,EffortClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\EffortClient.cs,GetSegmentEfforts,The following statement contains a magic number: while (hasEntries) {  	List<SegmentEffort> request = GetSegmentEfforts (segmentId' page++' 200);  	if (request.Count == 0) {  		hasEntries = false;  	}  	foreach (SegmentEffort effort in request) {  		activities.Add (effort);  	}  }  
Magic Number,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboardAsync,The following statement contains a magic number: while ((page - 1) * 200 < totalAthletes) {  	Leaderboard l = await GetSegmentLeaderboardAsync (segmentId' weight' age' time' gender' page++' 200);  	foreach (LeaderboardEntry entry in l.Entries) {  		leaderboard.Entries.Add (entry);  	}  }  
Magic Number,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboardAsync,The following statement contains a magic number: while ((page - 1) * 200 < totalAthletes) {  	Leaderboard l = await GetSegmentLeaderboardAsync (segmentId' weight' age' time' gender' page++' 200);  	foreach (LeaderboardEntry entry in l.Entries) {  		leaderboard.Entries.Add (entry);  	}  }  
Magic Number,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboardAsync,The following statement contains a magic number: while ((page - 1) * 200 < totalAthletes) {  	Leaderboard l = await GetSegmentLeaderboardAsync (segmentId' clubId' weight' age' time' gender' page++' 200);  	foreach (LeaderboardEntry entry in l.Entries) {  		leaderboard.Entries.Add (entry);  	}  }  
Magic Number,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboardAsync,The following statement contains a magic number: while ((page - 1) * 200 < totalAthletes) {  	Leaderboard l = await GetSegmentLeaderboardAsync (segmentId' clubId' weight' age' time' gender' page++' 200);  	foreach (LeaderboardEntry entry in l.Entries) {  		leaderboard.Entries.Add (entry);  	}  }  
Magic Number,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboardAsync,The following statement contains a magic number: while ((page - 1) * 200 < totalAthletes) {  	Leaderboard l = await GetSegmentLeaderboardAsync (segmentId' following' weight' age' time' gender' page++' 200);  	foreach (LeaderboardEntry entry in l.Entries) {  		leaderboard.Entries.Add (entry);  	}  }  
Magic Number,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboardAsync,The following statement contains a magic number: while ((page - 1) * 200 < totalAthletes) {  	Leaderboard l = await GetSegmentLeaderboardAsync (segmentId' following' weight' age' time' gender' page++' 200);  	foreach (LeaderboardEntry entry in l.Entries) {  		leaderboard.Entries.Add (entry);  	}  }  
Magic Number,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetFullSegmentLeaderboardAsync,The following statement contains a magic number: while ((page - 1) * 200 < totalAthletes) {  	Leaderboard l = await GetSegmentLeaderboardAsync (segmentId' page++' 200);  	foreach (LeaderboardEntry entry in l.Entries) {  		leaderboard.Entries.Add (entry);  	}  }  
Magic Number,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetFullSegmentLeaderboardAsync,The following statement contains a magic number: while ((page - 1) * 200 < totalAthletes) {  	Leaderboard l = await GetSegmentLeaderboardAsync (segmentId' page++' 200);  	foreach (LeaderboardEntry entry in l.Entries) {  		leaderboard.Entries.Add (entry);  	}  }  
Magic Number,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboard,The following statement contains a magic number: while ((page - 1) * 200 < totalAthletes) {  	Leaderboard l = GetSegmentLeaderboard (segmentId' weight' age' time' gender' page++' 200);  	foreach (LeaderboardEntry entry in l.Entries) {  		leaderboard.Entries.Add (entry);  	}  }  
Magic Number,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboard,The following statement contains a magic number: while ((page - 1) * 200 < totalAthletes) {  	Leaderboard l = GetSegmentLeaderboard (segmentId' weight' age' time' gender' page++' 200);  	foreach (LeaderboardEntry entry in l.Entries) {  		leaderboard.Entries.Add (entry);  	}  }  
Magic Number,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboard,The following statement contains a magic number: while ((page - 1) * 200 < totalAthletes) {  	Leaderboard l = GetSegmentLeaderboard (segmentId' clubId' weight' age' time' gender' page++' 200);  	foreach (LeaderboardEntry entry in l.Entries) {  		leaderboard.Entries.Add (entry);  	}  }  
Magic Number,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboard,The following statement contains a magic number: while ((page - 1) * 200 < totalAthletes) {  	Leaderboard l = GetSegmentLeaderboard (segmentId' clubId' weight' age' time' gender' page++' 200);  	foreach (LeaderboardEntry entry in l.Entries) {  		leaderboard.Entries.Add (entry);  	}  }  
Magic Number,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboard,The following statement contains a magic number: while ((page - 1) * 200 < totalAthletes) {  	Leaderboard l = GetSegmentLeaderboard (segmentId' following' weight' age' time' gender' page++' 200);  	foreach (LeaderboardEntry entry in l.Entries) {  		leaderboard.Entries.Add (entry);  	}  }  
Magic Number,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetSegmentLeaderboard,The following statement contains a magic number: while ((page - 1) * 200 < totalAthletes) {  	Leaderboard l = GetSegmentLeaderboard (segmentId' following' weight' age' time' gender' page++' 200);  	foreach (LeaderboardEntry entry in l.Entries) {  		leaderboard.Entries.Add (entry);  	}  }  
Magic Number,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetFullSegmentLeaderboard,The following statement contains a magic number: while ((page - 1) * 200 < totalAthletes) {  	Leaderboard l = GetSegmentLeaderboard (segmentId' page++' 200);  	foreach (LeaderboardEntry entry in l.Entries) {  		leaderboard.Entries.Add (entry);  	}  }  
Magic Number,Strava.Clients,SegmentClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\SegmentClient.cs,GetFullSegmentLeaderboard,The following statement contains a magic number: while ((page - 1) * 200 < totalAthletes) {  	Leaderboard l = GetSegmentLeaderboard (segmentId' page++' 200);  	foreach (LeaderboardEntry entry in l.Entries) {  		leaderboard.Entries.Add (entry);  	}  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: try {  	while (index < polylinechars.Length) {  		// calculate next latitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length)  			break;  		currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		//calculate next longitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length && next5bits >= 32)  			break;  		currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  	}  } catch (Exception ex) {  	Debug.WriteLine (string.Format ("Error: Decoding polyline: {0}"' ex.Message));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: try {  	while (index < polylinechars.Length) {  		// calculate next latitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length)  			break;  		currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		//calculate next longitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length && next5bits >= 32)  			break;  		currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  	}  } catch (Exception ex) {  	Debug.WriteLine (string.Format ("Error: Decoding polyline: {0}"' ex.Message));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: try {  	while (index < polylinechars.Length) {  		// calculate next latitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length)  			break;  		currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		//calculate next longitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length && next5bits >= 32)  			break;  		currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  	}  } catch (Exception ex) {  	Debug.WriteLine (string.Format ("Error: Decoding polyline: {0}"' ex.Message));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: try {  	while (index < polylinechars.Length) {  		// calculate next latitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length)  			break;  		currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		//calculate next longitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length && next5bits >= 32)  			break;  		currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  	}  } catch (Exception ex) {  	Debug.WriteLine (string.Format ("Error: Decoding polyline: {0}"' ex.Message));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: try {  	while (index < polylinechars.Length) {  		// calculate next latitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length)  			break;  		currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		//calculate next longitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length && next5bits >= 32)  			break;  		currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  	}  } catch (Exception ex) {  	Debug.WriteLine (string.Format ("Error: Decoding polyline: {0}"' ex.Message));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: try {  	while (index < polylinechars.Length) {  		// calculate next latitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length)  			break;  		currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		//calculate next longitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length && next5bits >= 32)  			break;  		currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  	}  } catch (Exception ex) {  	Debug.WriteLine (string.Format ("Error: Decoding polyline: {0}"' ex.Message));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: try {  	while (index < polylinechars.Length) {  		// calculate next latitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length)  			break;  		currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		//calculate next longitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length && next5bits >= 32)  			break;  		currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  	}  } catch (Exception ex) {  	Debug.WriteLine (string.Format ("Error: Decoding polyline: {0}"' ex.Message));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: try {  	while (index < polylinechars.Length) {  		// calculate next latitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length)  			break;  		currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		//calculate next longitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length && next5bits >= 32)  			break;  		currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  	}  } catch (Exception ex) {  	Debug.WriteLine (string.Format ("Error: Decoding polyline: {0}"' ex.Message));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: try {  	while (index < polylinechars.Length) {  		// calculate next latitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length)  			break;  		currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		//calculate next longitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length && next5bits >= 32)  			break;  		currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  	}  } catch (Exception ex) {  	Debug.WriteLine (string.Format ("Error: Decoding polyline: {0}"' ex.Message));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: try {  	while (index < polylinechars.Length) {  		// calculate next latitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length)  			break;  		currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		//calculate next longitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length && next5bits >= 32)  			break;  		currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  	}  } catch (Exception ex) {  	Debug.WriteLine (string.Format ("Error: Decoding polyline: {0}"' ex.Message));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: try {  	while (index < polylinechars.Length) {  		// calculate next latitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length)  			break;  		currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		//calculate next longitude  		sum = 0;  		shifter = 0;  		do {  			next5bits = (int)polylinechars [index++] - 63;  			sum |= (next5bits & 31) << shifter;  			shifter += 5;  		} while (next5bits >= 32 && index < polylinechars.Length);  		if (index >= polylinechars.Length && next5bits >= 32)  			break;  		currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  		poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  	}  } catch (Exception ex) {  	Debug.WriteLine (string.Format ("Error: Decoding polyline: {0}"' ex.Message));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: while (index < polylinechars.Length) {  	// calculate next latitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length)  		break;  	currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	//calculate next longitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length && next5bits >= 32)  		break;  	currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: while (index < polylinechars.Length) {  	// calculate next latitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length)  		break;  	currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	//calculate next longitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length && next5bits >= 32)  		break;  	currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: while (index < polylinechars.Length) {  	// calculate next latitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length)  		break;  	currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	//calculate next longitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length && next5bits >= 32)  		break;  	currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: while (index < polylinechars.Length) {  	// calculate next latitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length)  		break;  	currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	//calculate next longitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length && next5bits >= 32)  		break;  	currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: while (index < polylinechars.Length) {  	// calculate next latitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length)  		break;  	currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	//calculate next longitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length && next5bits >= 32)  		break;  	currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: while (index < polylinechars.Length) {  	// calculate next latitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length)  		break;  	currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	//calculate next longitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length && next5bits >= 32)  		break;  	currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: while (index < polylinechars.Length) {  	// calculate next latitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length)  		break;  	currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	//calculate next longitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length && next5bits >= 32)  		break;  	currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: while (index < polylinechars.Length) {  	// calculate next latitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length)  		break;  	currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	//calculate next longitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length && next5bits >= 32)  		break;  	currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: while (index < polylinechars.Length) {  	// calculate next latitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length)  		break;  	currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	//calculate next longitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length && next5bits >= 32)  		break;  	currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: while (index < polylinechars.Length) {  	// calculate next latitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length)  		break;  	currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	//calculate next longitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length && next5bits >= 32)  		break;  	currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: while (index < polylinechars.Length) {  	// calculate next latitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length)  		break;  	currentLat += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	//calculate next longitude  	sum = 0;  	shifter = 0;  	do {  		next5bits = (int)polylinechars [index++] - 63;  		sum |= (next5bits & 31) << shifter;  		shifter += 5;  	} while (next5bits >= 32 && index < polylinechars.Length);  	if (index >= polylinechars.Length && next5bits >= 32)  		break;  	currentLng += (sum & 1) == 1 ? ~(sum >> 1) : (sum >> 1);  	poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  }  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: do {  	next5bits = (int)polylinechars [index++] - 63;  	sum |= (next5bits & 31) << shifter;  	shifter += 5;  } while (next5bits >= 32 && index < polylinechars.Length);  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: do {  	next5bits = (int)polylinechars [index++] - 63;  	sum |= (next5bits & 31) << shifter;  	shifter += 5;  } while (next5bits >= 32 && index < polylinechars.Length);  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: do {  	next5bits = (int)polylinechars [index++] - 63;  	sum |= (next5bits & 31) << shifter;  	shifter += 5;  } while (next5bits >= 32 && index < polylinechars.Length);  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: do {  	next5bits = (int)polylinechars [index++] - 63;  	sum |= (next5bits & 31) << shifter;  	shifter += 5;  } while (next5bits >= 32 && index < polylinechars.Length);  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: next5bits = (int)polylinechars [index++] - 63;  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: sum |= (next5bits & 31) << shifter;  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: shifter += 5;  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: do {  	next5bits = (int)polylinechars [index++] - 63;  	sum |= (next5bits & 31) << shifter;  	shifter += 5;  } while (next5bits >= 32 && index < polylinechars.Length);  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: do {  	next5bits = (int)polylinechars [index++] - 63;  	sum |= (next5bits & 31) << shifter;  	shifter += 5;  } while (next5bits >= 32 && index < polylinechars.Length);  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: do {  	next5bits = (int)polylinechars [index++] - 63;  	sum |= (next5bits & 31) << shifter;  	shifter += 5;  } while (next5bits >= 32 && index < polylinechars.Length);  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: do {  	next5bits = (int)polylinechars [index++] - 63;  	sum |= (next5bits & 31) << shifter;  	shifter += 5;  } while (next5bits >= 32 && index < polylinechars.Length);  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: next5bits = (int)polylinechars [index++] - 63;  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: sum |= (next5bits & 31) << shifter;  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: shifter += 5;  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: if (index >= polylinechars.Length && next5bits >= 32)  	break;  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  
Magic Number,Strava.Common,PolylineDecoder,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Common\PolylineDecoder.cs,Decode,The following statement contains a magic number: poly.Add (new Coordinate (Convert.ToDouble (currentLat) / 100000.0' Convert.ToDouble (currentLng) / 100000.0));  
Missing Default,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,UpdateActivityAsync,The following switch statement is missing a default case: switch (parameter) {  case ActivityParameter.Commute:  	param = "name";  	break;  case ActivityParameter.Description:  	param = "description";  	break;  case ActivityParameter.GearId:  	param = "gear_id";  	break;  case ActivityParameter.Name:  	param = "name";  	break;  case ActivityParameter.Private:  	param = "private";  	break;  case ActivityParameter.Trainer:  	param = "trainer";  	break;  }  
Missing Default,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgressAsync,The following switch statement is missing a default case: switch (now.DayOfWeek) {  case DayOfWeek.Monday:  	days = 1;  	break;  case DayOfWeek.Tuesday:  	days = 2;  	break;  case DayOfWeek.Wednesday:  	days = 3;  	break;  case DayOfWeek.Thursday:  	days = 4;  	break;  case DayOfWeek.Friday:  	days = 5;  	break;  case DayOfWeek.Saturday:  	days = 6;  	break;  case DayOfWeek.Sunday:  	days = 7;  	break;  }  
Missing Default,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,UpdateActivity,The following switch statement is missing a default case: switch (parameter) {  case ActivityParameter.Commute:  	param = "name";  	break;  case ActivityParameter.Description:  	param = "description";  	break;  case ActivityParameter.GearId:  	param = "gear_id";  	break;  case ActivityParameter.Name:  	param = "name";  	break;  case ActivityParameter.Private:  	param = "private";  	break;  case ActivityParameter.Trainer:  	param = "trainer";  	break;  }  
Missing Default,Strava.Clients,ActivityClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\ActivityClient.cs,GetWeeklyProgress,The following switch statement is missing a default case: switch (now.DayOfWeek) {  case DayOfWeek.Monday:  	days = 1;  	break;  case DayOfWeek.Tuesday:  	days = 2;  	break;  case DayOfWeek.Wednesday:  	days = 3;  	break;  case DayOfWeek.Thursday:  	days = 4;  	break;  case DayOfWeek.Friday:  	days = 5;  	break;  case DayOfWeek.Saturday:  	days = 6;  	break;  case DayOfWeek.Sunday:  	days = 7;  	break;  }  
Missing Default,Strava.Clients,AthleteClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\AthleteClient.cs,UpdateAthleteAsync,The following switch statement is missing a default case: switch (parameter) {  case AthleteParameter.City:  	putUrl = string.Format ("{0}?city={1}&access_token={2}"' Endpoints.Athlete' value' Authentication.AccessToken);  	break;  case AthleteParameter.Country:  	putUrl = string.Format ("{0}?country={1}&access_token={2}"' Endpoints.Athlete' value' Authentication.AccessToken);  	break;  case AthleteParameter.State:  	putUrl = string.Format ("{0}?state={1}&access_token={2}"' Endpoints.Athlete' value' Authentication.AccessToken);  	break;  case AthleteParameter.Weight:  	putUrl = string.Format ("{0}?weight={1}&access_token={2}"' Endpoints.Athlete' value' Authentication.AccessToken);  	break;  }  
Missing Default,Strava.Clients,AthleteClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\AthleteClient.cs,UpdateAthlete,The following switch statement is missing a default case: switch (parameter) {  case AthleteParameter.City:  	putUrl = string.Format ("{0}?city={1}&access_token={2}"' Endpoints.Athlete' value' Authentication.AccessToken);  	break;  case AthleteParameter.Country:  	putUrl = string.Format ("{0}?country={1}&access_token={2}"' Endpoints.Athlete' value' Authentication.AccessToken);  	break;  case AthleteParameter.State:  	putUrl = string.Format ("{0}?state={1}&access_token={2}"' Endpoints.Athlete' value' Authentication.AccessToken);  	break;  case AthleteParameter.Weight:  	putUrl = string.Format ("{0}?weight={1}&access_token={2}"' Endpoints.Athlete' value' Authentication.AccessToken);  	break;  }  
Missing Default,Strava.Clients,UploadClient,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Clients\UploadClient.cs,UploadActivityAsync,The following switch statement is missing a default case: switch (dataFormat) {  case DataFormat.Fit:  	format = "fit";  	break;  case DataFormat.FitGZipped:  	format = "fit.gz";  	break;  case DataFormat.Gpx:  	format = "gpx";  	break;  case DataFormat.GpxGZipped:  	format = "gpx.gz";  	break;  case DataFormat.Tcx:  	format = "tcx";  	break;  case DataFormat.TcxGZipped:  	format = "tcx.gz";  	break;  }  
Missing Default,Strava.Authentication,WebAuthentication,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Authentication\WebAuthentication.cs,GetTokenAsync,The following switch statement is missing a default case: switch (scope) {  case Scope.Full:  	scopeLevel = "view_private'write";  	break;  case Scope.Public:  	scopeLevel = "public";  	break;  case Scope.ViewPrivate:  	scopeLevel = "view_private";  	break;  case Scope.Write:  	scopeLevel = "write";  	break;  }  
Missing Default,Strava.Upload,UploadStatusCheck,F:\newReposMay17\inexcitus_stravadotnet\StravaDotNet\Upload\UploadStatusCheck.cs,TimerTick,The following switch statement is missing a default case: switch (status.Status) {  case "Your activity is still being processed.":  	if (UploadChecked != null) {  		UploadChecked (this' new UploadStatusCheckedEventArgs (CurrentUploadStatus.Processing));  	}  	if (ActivityProcessing != null) {  		ActivityProcessing (this' EventArgs.Empty);  	}  	break;  case "The created activity has been deleted.":  	if (UploadChecked != null) {  		UploadChecked (this' new UploadStatusCheckedEventArgs (CurrentUploadStatus.Deleted));  	}  	Finish ();  	break;  case "There was an error processing your activity.":  	if (UploadChecked != null) {  		UploadChecked (this' new UploadStatusCheckedEventArgs (CurrentUploadStatus.Error));  	}  	ErrorMessage = status.Error;  	if (Error != null) {  		Error (this' EventArgs.Empty);  	}  	Finish ();  	break;  case "Your activity is ready.":  	if (UploadChecked != null) {  		UploadChecked (this' new UploadStatusCheckedEventArgs (CurrentUploadStatus.Ready));  	}  	if (ActivityReady != null) {  		ActivityReady (this' EventArgs.Empty);  	}  	Finish ();  	break;  }  
