Implementation smell,Namespace,Class,File,Method,Description
Complex Method,mastrosoft.Umbraco.LanguageSelector,LanguageHttpHandler,C:\repos\mastrosoft_mastrosoft.Umbraco.LanguageSelector\mastrosoft.Umbraco.LanguageSelector\LanguageHttpHandler.cs,ProcessRequest,Cyclomatic complexity of the method is 12
Complex Method,mastrosoft.Umbraco.LanguageSelector,LanguageHttpModule,C:\repos\mastrosoft_mastrosoft.Umbraco.LanguageSelector\mastrosoft.Umbraco.LanguageSelector\LanguageHttpModule.cs,context_BeginRequest,Cyclomatic complexity of the method is 10
Long Statement,mastrosoft.Umbraco.LanguageSelector,LanguageHttpHandler,C:\repos\mastrosoft_mastrosoft.Umbraco.LanguageSelector\mastrosoft.Umbraco.LanguageSelector\LanguageHttpHandler.cs,ProcessRequest,The length of the statement  "					if (domainsForRootNode.Any (n => n.Language.CultureAlias.StartsWith (culture' StringComparison.InvariantCultureIgnoreCase))) { " is 126.
Long Statement,mastrosoft.Umbraco.LanguageSelector,LanguageHttpHandler,C:\repos\mastrosoft_mastrosoft.Umbraco.LanguageSelector\mastrosoft.Umbraco.LanguageSelector\LanguageHttpHandler.cs,ProcessRequest,The length of the statement  "                            context.Response.Write(umbraco.library.NiceUrl(originalRootDocument.Id) + "<br/>");*//*if (nodeID != originalRootDocument.Id)" is 125.
Long Statement,mastrosoft.Umbraco.LanguageSelector,LanguageHttpHandler,C:\repos\mastrosoft_mastrosoft.Umbraco.LanguageSelector\mastrosoft.Umbraco.LanguageSelector\LanguageHttpHandler.cs,ProcessRequest,The length of the statement  "						if (!domains.Any (n => n.Language.CultureAlias.Equals (rd.Language.CultureAlias' StringComparison.InvariantCultureIgnoreCase))) { " is 129.
Long Statement,mastrosoft.Umbraco.LanguageSelector,LanguageHttpHandler,C:\repos\mastrosoft_mastrosoft.Umbraco.LanguageSelector\mastrosoft.Umbraco.LanguageSelector\LanguageHttpHandler.cs,ProcessRequest,The length of the statement  "                                if (!domains.Any(n => n.Language.CultureAlias.Equals(rd.Language.CultureAlias' StringComparison.InvariantCultureIgnoreCase)))" is 125.
Long Statement,mastrosoft.Umbraco.LanguageSelector,LanguageHttpModule,C:\repos\mastrosoft_mastrosoft.Umbraco.LanguageSelector\mastrosoft.Umbraco.LanguageSelector\LanguageHttpModule.cs,context_BeginRequest,The length of the statement  "	if (request.Url.AbsolutePath == "/" || request.Url.AbsolutePath.Equals ("/default.aspx"' StringComparison.InvariantCultureIgnoreCase)) { " is 136.
Magic Number,mastrosoft.Umbraco.LanguageSelector,LanguageHttpHandler,C:\repos\mastrosoft_mastrosoft.Umbraco.LanguageSelector\mastrosoft.Umbraco.LanguageSelector\LanguageHttpHandler.cs,ProcessRequest,The following statement contains a magic number: if (int.TryParse (context.Request.QueryString [QS_ID]' out nodeID)) {  	// Get domains connected to current node  	Domain[] domains = Domain.GetDomainsById (nodeID);  	// Load current node  	Document d = new Document (nodeID);  	Language = culture;  	// Get its relations  	Relation[] relations = d.Relations;  	if (relations.Length == 0) {  		foreach (Document doc in Document.GetRootDocuments ()) {  			if (doc.Published) {  				/*if (doc.Id != nodeID)                             {*/Domain[] domainsForRootNode = Domain.GetDomainsById (doc.Id);  				if (domainsForRootNode.Any (n => n.Language.CultureAlias.StartsWith (culture' StringComparison.InvariantCultureIgnoreCase))) {  					// Language = culture;  					context.Response.Redirect (umbraco.library.NiceUrl (doc.Id));  					return;  				}  				//}  			}  		}  	}  	else {  		foreach (Relation r in relations) {  			if (r.RelType.Alias.Equals ("relateDocumentOnCopy"' StringComparison.InvariantCultureIgnoreCase)) {  				Document relatedDocument = new Document (nodeID == r.Parent.Id ? r.Child.Id : r.Parent.Id);  				Document rootDocument = GetRoot (relatedDocument);  				Document originalRootDocument = GetRoot (d);  				/*context.Response.Write(umbraco.library.NiceUrl(relatedDocument.Id) + "<br/>");                             context.Response.Write(umbraco.library.NiceUrl(rootDocument.Id) + "<br/>");                             context.Response.Write(umbraco.library.NiceUrl(originalRootDocument.Id) + "<br/>");*//*if (nodeID != originalRootDocument.Id)                             {*/Domain[] relatedDomains = Domain.GetDomainsById (rootDocument.Id);  				foreach (Domain rd in relatedDomains) {  					// if language is not added to the current node aswell continue...  					if (!domains.Any (n => n.Language.CultureAlias.Equals (rd.Language.CultureAlias' StringComparison.InvariantCultureIgnoreCase))) {  						string tempCulture = culture;  						if (tempCulture.Length < 5) {  							tempCulture = CultureInfo.CreateSpecificCulture (culture).ToString ();  						}  						if (rd.Language.CultureAlias.StartsWith (culture' StringComparison.InvariantCultureIgnoreCase)) {  							context.Response.Redirect (umbraco.library.NiceUrl (relatedDocument.Id));  							return;  						}  						/*else                                      // if language is the selected language' continue                                     if (rd.Language.CultureAlias.Equals(culture' StringComparison.InvariantCultureIgnoreCase))                                     {                                         context.Response.Redirect(umbraco.library.NiceUrl(relatedDocument.Id));                                         return;                                     }*/}  				}  				// }  				/*Domain[] relatedDomains = Domain.GetDomainsById(rootDocument.Id);                             foreach (Domain rd in relatedDomains)                             {                                 // if language is not added to the current node                                 if (!domains.Any(n => n.Language.CultureAlias.Equals(rd.Language.CultureAlias' StringComparison.InvariantCultureIgnoreCase)))                                 {                                     context.Response.Redirect(umbraco.library.NiceUrl(relatedDocument.Id));                                     return;                                 }                             }*/}  		}  		context.Response.Redirect (umbraco.library.NiceUrl (nodeID));  	}  }  
Magic Number,mastrosoft.Umbraco.LanguageSelector,LanguageHttpHandler,C:\repos\mastrosoft_mastrosoft.Umbraco.LanguageSelector\mastrosoft.Umbraco.LanguageSelector\LanguageHttpHandler.cs,ProcessRequest,The following statement contains a magic number: if (relations.Length == 0) {  	foreach (Document doc in Document.GetRootDocuments ()) {  		if (doc.Published) {  			/*if (doc.Id != nodeID)                             {*/Domain[] domainsForRootNode = Domain.GetDomainsById (doc.Id);  			if (domainsForRootNode.Any (n => n.Language.CultureAlias.StartsWith (culture' StringComparison.InvariantCultureIgnoreCase))) {  				// Language = culture;  				context.Response.Redirect (umbraco.library.NiceUrl (doc.Id));  				return;  			}  			//}  		}  	}  }  else {  	foreach (Relation r in relations) {  		if (r.RelType.Alias.Equals ("relateDocumentOnCopy"' StringComparison.InvariantCultureIgnoreCase)) {  			Document relatedDocument = new Document (nodeID == r.Parent.Id ? r.Child.Id : r.Parent.Id);  			Document rootDocument = GetRoot (relatedDocument);  			Document originalRootDocument = GetRoot (d);  			/*context.Response.Write(umbraco.library.NiceUrl(relatedDocument.Id) + "<br/>");                             context.Response.Write(umbraco.library.NiceUrl(rootDocument.Id) + "<br/>");                             context.Response.Write(umbraco.library.NiceUrl(originalRootDocument.Id) + "<br/>");*//*if (nodeID != originalRootDocument.Id)                             {*/Domain[] relatedDomains = Domain.GetDomainsById (rootDocument.Id);  			foreach (Domain rd in relatedDomains) {  				// if language is not added to the current node aswell continue...  				if (!domains.Any (n => n.Language.CultureAlias.Equals (rd.Language.CultureAlias' StringComparison.InvariantCultureIgnoreCase))) {  					string tempCulture = culture;  					if (tempCulture.Length < 5) {  						tempCulture = CultureInfo.CreateSpecificCulture (culture).ToString ();  					}  					if (rd.Language.CultureAlias.StartsWith (culture' StringComparison.InvariantCultureIgnoreCase)) {  						context.Response.Redirect (umbraco.library.NiceUrl (relatedDocument.Id));  						return;  					}  					/*else                                      // if language is the selected language' continue                                     if (rd.Language.CultureAlias.Equals(culture' StringComparison.InvariantCultureIgnoreCase))                                     {                                         context.Response.Redirect(umbraco.library.NiceUrl(relatedDocument.Id));                                         return;                                     }*/}  			}  			// }  			/*Domain[] relatedDomains = Domain.GetDomainsById(rootDocument.Id);                             foreach (Domain rd in relatedDomains)                             {                                 // if language is not added to the current node                                 if (!domains.Any(n => n.Language.CultureAlias.Equals(rd.Language.CultureAlias' StringComparison.InvariantCultureIgnoreCase)))                                 {                                     context.Response.Redirect(umbraco.library.NiceUrl(relatedDocument.Id));                                     return;                                 }                             }*/}  	}  	context.Response.Redirect (umbraco.library.NiceUrl (nodeID));  }  
Magic Number,mastrosoft.Umbraco.LanguageSelector,LanguageHttpHandler,C:\repos\mastrosoft_mastrosoft.Umbraco.LanguageSelector\mastrosoft.Umbraco.LanguageSelector\LanguageHttpHandler.cs,ProcessRequest,The following statement contains a magic number: foreach (Relation r in relations) {  	if (r.RelType.Alias.Equals ("relateDocumentOnCopy"' StringComparison.InvariantCultureIgnoreCase)) {  		Document relatedDocument = new Document (nodeID == r.Parent.Id ? r.Child.Id : r.Parent.Id);  		Document rootDocument = GetRoot (relatedDocument);  		Document originalRootDocument = GetRoot (d);  		/*context.Response.Write(umbraco.library.NiceUrl(relatedDocument.Id) + "<br/>");                             context.Response.Write(umbraco.library.NiceUrl(rootDocument.Id) + "<br/>");                             context.Response.Write(umbraco.library.NiceUrl(originalRootDocument.Id) + "<br/>");*//*if (nodeID != originalRootDocument.Id)                             {*/Domain[] relatedDomains = Domain.GetDomainsById (rootDocument.Id);  		foreach (Domain rd in relatedDomains) {  			// if language is not added to the current node aswell continue...  			if (!domains.Any (n => n.Language.CultureAlias.Equals (rd.Language.CultureAlias' StringComparison.InvariantCultureIgnoreCase))) {  				string tempCulture = culture;  				if (tempCulture.Length < 5) {  					tempCulture = CultureInfo.CreateSpecificCulture (culture).ToString ();  				}  				if (rd.Language.CultureAlias.StartsWith (culture' StringComparison.InvariantCultureIgnoreCase)) {  					context.Response.Redirect (umbraco.library.NiceUrl (relatedDocument.Id));  					return;  				}  				/*else                                      // if language is the selected language' continue                                     if (rd.Language.CultureAlias.Equals(culture' StringComparison.InvariantCultureIgnoreCase))                                     {                                         context.Response.Redirect(umbraco.library.NiceUrl(relatedDocument.Id));                                         return;                                     }*/}  		}  		// }  		/*Domain[] relatedDomains = Domain.GetDomainsById(rootDocument.Id);                             foreach (Domain rd in relatedDomains)                             {                                 // if language is not added to the current node                                 if (!domains.Any(n => n.Language.CultureAlias.Equals(rd.Language.CultureAlias' StringComparison.InvariantCultureIgnoreCase)))                                 {                                     context.Response.Redirect(umbraco.library.NiceUrl(relatedDocument.Id));                                     return;                                 }                             }*/}  }  
Magic Number,mastrosoft.Umbraco.LanguageSelector,LanguageHttpHandler,C:\repos\mastrosoft_mastrosoft.Umbraco.LanguageSelector\mastrosoft.Umbraco.LanguageSelector\LanguageHttpHandler.cs,ProcessRequest,The following statement contains a magic number: if (r.RelType.Alias.Equals ("relateDocumentOnCopy"' StringComparison.InvariantCultureIgnoreCase)) {  	Document relatedDocument = new Document (nodeID == r.Parent.Id ? r.Child.Id : r.Parent.Id);  	Document rootDocument = GetRoot (relatedDocument);  	Document originalRootDocument = GetRoot (d);  	/*context.Response.Write(umbraco.library.NiceUrl(relatedDocument.Id) + "<br/>");                             context.Response.Write(umbraco.library.NiceUrl(rootDocument.Id) + "<br/>");                             context.Response.Write(umbraco.library.NiceUrl(originalRootDocument.Id) + "<br/>");*//*if (nodeID != originalRootDocument.Id)                             {*/Domain[] relatedDomains = Domain.GetDomainsById (rootDocument.Id);  	foreach (Domain rd in relatedDomains) {  		// if language is not added to the current node aswell continue...  		if (!domains.Any (n => n.Language.CultureAlias.Equals (rd.Language.CultureAlias' StringComparison.InvariantCultureIgnoreCase))) {  			string tempCulture = culture;  			if (tempCulture.Length < 5) {  				tempCulture = CultureInfo.CreateSpecificCulture (culture).ToString ();  			}  			if (rd.Language.CultureAlias.StartsWith (culture' StringComparison.InvariantCultureIgnoreCase)) {  				context.Response.Redirect (umbraco.library.NiceUrl (relatedDocument.Id));  				return;  			}  			/*else                                      // if language is the selected language' continue                                     if (rd.Language.CultureAlias.Equals(culture' StringComparison.InvariantCultureIgnoreCase))                                     {                                         context.Response.Redirect(umbraco.library.NiceUrl(relatedDocument.Id));                                         return;                                     }*/}  	}  	// }  	/*Domain[] relatedDomains = Domain.GetDomainsById(rootDocument.Id);                             foreach (Domain rd in relatedDomains)                             {                                 // if language is not added to the current node                                 if (!domains.Any(n => n.Language.CultureAlias.Equals(rd.Language.CultureAlias' StringComparison.InvariantCultureIgnoreCase)))                                 {                                     context.Response.Redirect(umbraco.library.NiceUrl(relatedDocument.Id));                                     return;                                 }                             }*/}  
Magic Number,mastrosoft.Umbraco.LanguageSelector,LanguageHttpHandler,C:\repos\mastrosoft_mastrosoft.Umbraco.LanguageSelector\mastrosoft.Umbraco.LanguageSelector\LanguageHttpHandler.cs,ProcessRequest,The following statement contains a magic number: foreach (Domain rd in relatedDomains) {  	// if language is not added to the current node aswell continue...  	if (!domains.Any (n => n.Language.CultureAlias.Equals (rd.Language.CultureAlias' StringComparison.InvariantCultureIgnoreCase))) {  		string tempCulture = culture;  		if (tempCulture.Length < 5) {  			tempCulture = CultureInfo.CreateSpecificCulture (culture).ToString ();  		}  		if (rd.Language.CultureAlias.StartsWith (culture' StringComparison.InvariantCultureIgnoreCase)) {  			context.Response.Redirect (umbraco.library.NiceUrl (relatedDocument.Id));  			return;  		}  		/*else                                      // if language is the selected language' continue                                     if (rd.Language.CultureAlias.Equals(culture' StringComparison.InvariantCultureIgnoreCase))                                     {                                         context.Response.Redirect(umbraco.library.NiceUrl(relatedDocument.Id));                                         return;                                     }*/}  }  
Magic Number,mastrosoft.Umbraco.LanguageSelector,LanguageHttpHandler,C:\repos\mastrosoft_mastrosoft.Umbraco.LanguageSelector\mastrosoft.Umbraco.LanguageSelector\LanguageHttpHandler.cs,ProcessRequest,The following statement contains a magic number: if (!domains.Any (n => n.Language.CultureAlias.Equals (rd.Language.CultureAlias' StringComparison.InvariantCultureIgnoreCase))) {  	string tempCulture = culture;  	if (tempCulture.Length < 5) {  		tempCulture = CultureInfo.CreateSpecificCulture (culture).ToString ();  	}  	if (rd.Language.CultureAlias.StartsWith (culture' StringComparison.InvariantCultureIgnoreCase)) {  		context.Response.Redirect (umbraco.library.NiceUrl (relatedDocument.Id));  		return;  	}  	/*else                                      // if language is the selected language' continue                                     if (rd.Language.CultureAlias.Equals(culture' StringComparison.InvariantCultureIgnoreCase))                                     {                                         context.Response.Redirect(umbraco.library.NiceUrl(relatedDocument.Id));                                         return;                                     }*/}  
Magic Number,mastrosoft.Umbraco.LanguageSelector,LanguageHttpHandler,C:\repos\mastrosoft_mastrosoft.Umbraco.LanguageSelector\mastrosoft.Umbraco.LanguageSelector\LanguageHttpHandler.cs,ProcessRequest,The following statement contains a magic number: if (tempCulture.Length < 5) {  	tempCulture = CultureInfo.CreateSpecificCulture (culture).ToString ();  }  
