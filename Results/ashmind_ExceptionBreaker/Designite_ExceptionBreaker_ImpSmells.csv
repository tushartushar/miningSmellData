Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ExceptionBreaker.Options.Support,CollectionSyncExtensions,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Options\Support\CollectionSyncExtensions.cs,SyncToWhere,Cyclomatic complexity of the method is 8
Long Parameter List,Microsoft.VisualStudio.Debugger.Interop.Internal,IDataTipEvents,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\ComImports\IDataTipEvents.cs,TearOff,The method has 6 parameters. Parameters: Id' info' screenX' screenY' width' height
Long Parameter List,Microsoft.VisualStudio.Debugger.Interop.Internal,IDataTipManager,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\ComImports\IDataTipManager.cs,ShowChildDataTip,The method has 5 parameters. Parameters: parentExpression' owningHwnd' x' y' identity
Long Parameter List,Microsoft.VisualStudio.Debugger.Interop.Internal,IDataTipManager,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\ComImports\IDataTipManager.cs,ShowFrameEnumToolTip,The method has 5 parameters. Parameters: pFrame' hwndOwner' pptTopLeft' pHotRect' bHoverInvoked
Long Parameter List,Microsoft.VisualStudio.Debugger.Interop.Internal,IDataTipManager,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\ComImports\IDataTipManager.cs,ShowThreadToolTip,The method has 5 parameters. Parameters: pThread' hwndOwner' pptTopLeft' pHotRect' bHoverInvoked
Long Parameter List,Microsoft.VisualStudio.Debugger.Interop.Internal,IDebuggerInternal10,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\ComImports\IDebuggerInternal10.cs,GetSourceFileFromDocumentContext,The method has 5 parameters. Parameters: pDocumentContext' pCodeContext' bstrFoundFilePath' checksumAlgorithm' Checksum
Long Parameter List,Microsoft.VisualStudio.Debugger.Interop.Internal,IDebuggerInternal11,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\ComImports\IDebuggerInternal11.cs,GetSourceFileFromDocumentContext,The method has 5 parameters. Parameters: pDocumentContext' pCodeContext' bstrFoundFilePath' checksumAlgorithm' Checksum
Long Parameter List,ExceptionBreaker.Implementation,CommandController,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Implementation\CommandController.cs,CommandController,The method has 5 parameters. Parameters: dte' initBreakOnAllCommand' monitorSelection' breakManager' logger
Long Parameter List,ExceptionBreaker.Implementation,CommandController,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Implementation\CommandController.cs,OnSelectionChanged,The method has 8 parameters. Parameters: pHierOld' itemidOld' pMISOld' pSCOld' pHierNew' itemidNew' pMISNew' pSCNew
Long Parameter List,Microsoft.Forums.WpfDialogPageIntegration,UIElementDialogPage,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Options\Support\WpfDialogPageIntegration.cs,SourceHook,The method has 5 parameters. Parameters: hwnd' msg' wParam' lParam' handled
Long Identifier,ExceptionBreaker.Implementation,ExceptionBreakManager,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Implementation\ExceptionBreakManager.cs,GetStateFromSession,The length of the parameter exceptionThatCausedChangeFromUnknown is 36.
Long Identifier,ExceptionBreaker.Implementation,CommandController,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Implementation\CommandController.cs,,The length of the parameter _currentlyActiveUiContextCookies is 32.
Long Statement,ExceptionBreaker.Implementation,ExceptionBreakManager,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Implementation\ExceptionBreakManager.cs,GetStateFromSession,The length of the statement  "                var @break = (((enum_EXCEPTION_STATE)exception.dwState & VSExceptionStateStopAllInfer) == VSExceptionStateStopAllInfer); " is 120.
Long Statement,ExceptionBreaker.Implementation,ExceptionBreakManager,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Implementation\ExceptionBreakManager.cs,GetStateFromSession,The length of the statement  "                    _logger.WriteLine("  Previous exception:    {0}; {1}."' exceptionThatCausedChangeFromUnknown.bstrExceptionName' (enum_EXCEPTION_STATE)exceptionThatCausedChangeFromUnknown.dwState); " is 180.
Long Statement,ExceptionBreaker.Implementation,ExceptionBreakManager,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Implementation\ExceptionBreakManager.cs,GetStateFromSession,The length of the statement  "                    _logger.WriteLine("  Conflicting exception: {0}; {1}."' exception.bstrExceptionName' (enum_EXCEPTION_STATE)exception.dwState); " is 126.
Long Statement,ExceptionBreaker.Implementation,ExceptionBreakManager,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Implementation\ExceptionBreakManager.cs,ApplyStateToSession,The length of the statement  "                _logger.WriteLine("  Skipped {0} more exceptions (match ignore rule)."' skippedExceptionCount - SkippedExceptionLogLimit); " is 122.
Long Statement,ExceptionBreaker.Options,OptionsPageView,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Options\OptionsPageView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/ExceptionBreaker;component/options/optionspageview.xaml"' System.UriKind.Relative); " is 129.
Long Statement,ExceptionBreaker.Options,OptionsPageView,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Options\OptionsPageView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.textPattern_OnGotFocus); " is 123.
Long Statement,ExceptionBreaker.Options.ImprovedComponentModel,ImprovedTypeDescriptor,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Options\ImprovedComponentModel\ImprovedTypeDescriptor.cs,ProcessProperties,The length of the statement  "                    var newProperty = (PropertyDescriptor)Activator.CreateInstance(descriptorAttribute.PropertyDescriptorType' new[] { property }); " is 127.
Long Statement,Microsoft.Forums.WpfDialogPageIntegration,UIElementDialogPage,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Options\Support\WpfDialogPageIntegration.cs,SourceHook,The length of the statement  "                        DialogKeyEventArgs args = new DialogKeyEventArgs(DialogKeyPendingEvent' KeyInterop.KeyFromVirtualKey(wParam.ToInt32())); " is 120.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Magic Number,ExceptionBreaker.Implementation,ExceptionBreakManager,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Implementation\ExceptionBreakManager.cs,ApplyStateToSession,The following statement contains a magic number: const int SkippedExceptionLogLimit = 25;
Magic Number,ExceptionBreaker.Implementation.VersionSpecific,VersionSpecificAdapterFactory,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Implementation\VersionSpecific\VersionSpecificAdapterFactory.cs,AdaptDebuggerInternal,The following statement contains a magic number: _version.Major >= 11
Magic Number,ExceptionBreaker.Implementation.VersionSpecific,VersionSpecificAdapterFactory,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Implementation\VersionSpecific\VersionSpecificAdapterFactory.cs,AdaptDebuggerInternal,The following statement contains a magic number: _version.Major == 10
Magic Number,ExceptionBreaker.Options,OptionsPageView,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Options\OptionsPageView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 48 "..\..\..\Options\OptionsPageView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.buttonDelete_Click);                            #line default              #line hidden              return;              case 2:                            #line 53 "..\..\..\Options\OptionsPageView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.buttonAdd_Click);                            #line default              #line hidden              return;              }
Magic Number,ExceptionBreaker.Options,OptionsPageView,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Options\OptionsPageView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 3:                            #line 96 "..\..\..\Options\OptionsPageView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.textPattern_OnGotFocus);                            #line default              #line hidden              break;              }
Missing Default,ExceptionBreaker.Options,OptionsPageView,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Options\OptionsPageView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 48 "..\..\..\Options\OptionsPageView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.buttonDelete_Click);                            #line default              #line hidden              return;              case 2:                            #line 53 "..\..\..\Options\OptionsPageView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.buttonAdd_Click);                            #line default              #line hidden              return;              }
Missing Default,ExceptionBreaker.Options,OptionsPageView,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Options\OptionsPageView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 3:                            #line 96 "..\..\..\Options\OptionsPageView.xaml"              ((System.Windows.Controls.TextBox)(target)).GotFocus += new System.Windows.RoutedEventHandler(this.textPattern_OnGotFocus);                            #line default              #line hidden              break;              }
Missing Default,Microsoft.Forums.WpfDialogPageIntegration,UIElementDialogPage,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Options\Support\WpfDialogPageIntegration.cs,SourceHook,The following switch statement is missing a default case: switch (msg)              {                  case NativeMethods.WM_GETDLGCODE:                      int dlgCode = NativeMethods.DLGC_WANTARROWS | NativeMethods.DLGC_WANTTAB | NativeMethods.DLGC_WANTCHARS;                        // Ask the currently-focused element if it wants to handle all keys or not.  The DialogKeyPendingEvent                      // is a routed event starting with the focused control.  If any control in the route handles                      // this message' then we'll add DLGC_WANTALLKEYS to request that this pending message                      // be delivered to our content instead of the default dialog procedure.                      IInputElement currentElement = Keyboard.FocusedElement;                      if (currentElement != null)                      {                          DialogKeyEventArgs args = new DialogKeyEventArgs(DialogKeyPendingEvent' KeyInterop.KeyFromVirtualKey(wParam.ToInt32()));                          currentElement.RaiseEvent(args);                            if (args.Handled)                          {                              dlgCode |= NativeMethods.DLGC_WANTALLKEYS;                          }                      }                        handled = true;                      return new IntPtr(dlgCode);              }
Missing Default,Microsoft.Forums.WpfDialogPageIntegration,DialogKeyboardInputSite,D:\research\architectureSmells\repos\ashmind_ExceptionBreaker\ExceptionBreaker\Options\Support\WpfDialogPageIntegration.cs,OnNoMoreTabStops,The following switch statement is missing a default case: switch (request.FocusNavigationDirection)                      {                          case FocusNavigationDirection.Next:                          case FocusNavigationDirection.Right:                          case FocusNavigationDirection.Down:                              forward = true;                              break;                            case FocusNavigationDirection.Previous:                          case FocusNavigationDirection.Left:                          case FocusNavigationDirection.Up:                              forward = false;                              break;                      }
