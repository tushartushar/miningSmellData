Implementation smell,Namespace,Class,File,Method,Description
Complex Method,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateBlockForNode,Cyclomatic complexity of the method is 19
Complex Method,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateBlockForNode_old,Cyclomatic complexity of the method is 16
Long Identifier,iFixit.UI.Shared,VariableGridView,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W8.UI\Shared\VariableGridView.cs,,The length of the parameter ItemRowSpanPropertyPathProperty is 31.
Long Identifier,iFixit.UI.Shared,VariableGridView,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W8.UI\Shared\VariableGridView.cs,,The length of the parameter ItemColSpanPropertyPathProperty is 31.
Long Statement,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateHyperLink,The length of the statement  "            //else if ((node.NextSibling == null || string.IsNullOrWhiteSpace(node.NextSibling.InnerText)) && (node.PreviousSibling == null || string.IsNullOrWhiteSpace(node.PreviousSibling.InnerText))) " is 190.
Long Statement,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,ConvertHtmlToXamlRichTextBlock,The length of the statement  "                catch { } // For some reason code in catch is not executed when an exception occurs in design mode' so we can't display a friendly error here. " is 142.
Long Statement,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,ConvertHtmlToXamlRichTextBlock2,The length of the statement  "            string xaml = "<?xml version=\"1.0\"?><RichTextBlock xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">"; " is 180.
Long Statement,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateBlockForNode_old,The length of the statement  "                        //    result = "<Span><InlineUIContainer><Image Style=\"{StaticResource RTImage}\" Width=\"500\" Source=\"" + node.Attributes["src"].Value + "\"></Image></InlineUIContainer></Span>"; " is 182.
Long Statement,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateBlockForNode_old,The length of the statement  "                        result = "<Span><InlineUIContainer><Image Style=\"{StaticResource RTImage}\" Source=\"" + node.Attributes["src"].Value + "\"></Image></InlineUIContainer></Span>"; " is 162.
Long Statement,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateBlockForNode_old,The length of the statement  "                            result = "<Span><InlineUIContainer><HyperlinkButton Style=\"{StaticResource RTLinkLI}\" NavigateUri=\"" + node.Attributes["href"].Value + "\">" + CleanText(node.InnerText) + "</HyperlinkButton></InlineUIContainer></Span>"; " is 222.
Long Statement,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateBlockForNode_old,The length of the statement  "                        else if ((node.NextSibling == null || string.IsNullOrWhiteSpace(node.NextSibling.InnerText)) && (node.PreviousSibling == null || string.IsNullOrWhiteSpace(node.PreviousSibling.InnerText))) " is 188.
Long Statement,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateBlockForNode_old,The length of the statement  "                            result = "<Span><InlineUIContainer><HyperlinkButton Style=\"{StaticResource RTLinkOnly}\" NavigateUri=\"" + node.Attributes["href"].Value + "\">" + CleanText(node.InnerText) + "</HyperlinkButton></InlineUIContainer></Span>"; " is 224.
Long Statement,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateBlockForNode_old,The length of the statement  "                            result = "<Span><InlineUIContainer><HyperlinkButton Style=\"{StaticResource RTLink}\" NavigateUri=\"" + node.Attributes["href"].Value + "\">" + CleanText(node.InnerText) + "</HyperlinkButton></InlineUIContainer></Span>"; " is 220.
Long Statement,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateBlockForNode_old,The length of the statement  "                    result = "<Span><InlineUIContainer><Ellipse Style=\"{StaticResource RTBullet}\"/></InlineUIContainer>" + GenerateBlockForChildren(node) + "<LineBreak /></Span>"; " is 161.
Long Statement,iFixit.Shared,TileCanvas,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W8.UI\Shared\TileCanvas.cs,ImageOnImageFailed,The length of the statement  "            Children.Add(new TextBlock { Text = exceptionRoutedEventArgs.ErrorMessage' Foreground = new SolidColorBrush(Colors.Red) }); " is 123.
Long Statement,iFixit.W81.UI,App,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\App.xaml.cs,App_CommandsRequested,The length of the statement  "            var privacyPolicyCommand = new SettingsCommand("privacyPolicy"' "Privacy Policy"' uiCommand => { LaunchPrivacyPolicyUrl("http://www.ifixit.com/Info/Privacy"); }); " is 162.
Long Statement,iFixit.W81.UI.Common,SuspensionManager,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "                StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync(sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 140.
Long Statement,iFixit.W81.UI.Common,SuspensionManager,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "                throw new InvalidOperationException("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 138.
Long Statement,iFixit.W81.UI.Views,Guide,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Views\Guide.xaml.cs,OnNavigatedTo,The length of the statement  "            dataTransferManager.DataRequested += new TypedEventHandler<DataTransferManager' DataRequestedEventArgs>(this.OnDataRequested); " is 126.
Long Statement,iFixit.W81.UI.Views,Guide,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Views\Guide.xaml.cs,OnNavigatedFrom,The length of the statement  "            dataTransferManager.DataRequested -= new TypedEventHandler<DataTransferManager' DataRequestedEventArgs>(this.OnDataRequested); " is 126.
Long Statement,iFixit.W81.UI.Views,Guide,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Views\Guide.xaml.cs,SuperImage_Tapped,The length of the statement  "            iFixit.Domain.Models.UI.GuideStepItem item = (iFixit.Domain.Models.UI.GuideStepItem)((Coding4Fun.Toolkit.Controls.SuperImage)sender).DataContext; " is 145.
Complex Conditional,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateBlockForNode_old,The conditional expression  "(node.NextSibling == null || string.IsNullOrWhiteSpace(node.NextSibling.InnerText)) && (node.PreviousSibling == null || string.IsNullOrWhiteSpace(node.PreviousSibling.InnerText))"  is complex.
Complex Conditional,iFixit.W81.UI.Common,NavigationHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "(e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  e.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167)"  is complex.
Complex Conditional,iFixit.W81.UI.Common,NavigationHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt)"  is complex.
Complex Conditional,iFixit.W81.UI.Common,NavigationHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt)"  is complex.
Empty Catch Block,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateBlocksForHtml,The method has an empty catch block.
Empty Catch Block,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateImage,The method has an empty catch block.
Empty Catch Block,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,ConvertHtmlToXamlRichTextBlock,The method has an empty catch block.
Empty Catch Block,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,ConvertHtmlToXamlRichTextBlock2,The method has an empty catch block.
Magic Number,iFixit.W8.UI.Services,UiUx,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Services\UiUx.cs,GoToLogin,The following statement contains a magic number: var settings = new Windows.UI.Xaml.Controls.SettingsFlyout              {                  Width = 500'                  HeaderBackground = new SolidColorBrush(Color.FromArgb(255' 0' 113' 206))'                  HeaderForeground = new SolidColorBrush(Colors.White)'                  Title = International.Translation.Login'                  Content = new iFixit.W81.UI.Views.UC.Login()              };
Magic Number,iFixit.W8.UI.Services,UiUx,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Services\UiUx.cs,GoToLogin,The following statement contains a magic number: var settings = new Windows.UI.Xaml.Controls.SettingsFlyout              {                  Width = 500'                  HeaderBackground = new SolidColorBrush(Color.FromArgb(255' 0' 113' 206))'                  HeaderForeground = new SolidColorBrush(Colors.White)'                  Title = International.Translation.Login'                  Content = new iFixit.W81.UI.Views.UC.Login()              };
Magic Number,iFixit.W8.UI.Services,UiUx,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Services\UiUx.cs,GoToLogin,The following statement contains a magic number: var settings = new Windows.UI.Xaml.Controls.SettingsFlyout              {                  Width = 500'                  HeaderBackground = new SolidColorBrush(Color.FromArgb(255' 0' 113' 206))'                  HeaderForeground = new SolidColorBrush(Colors.White)'                  Title = International.Translation.Login'                  Content = new iFixit.W81.UI.Views.UC.Login()              };
Magic Number,iFixit.W8.UI.Services,UiUx,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Services\UiUx.cs,GoToLogin,The following statement contains a magic number: var settings = new Windows.UI.Xaml.Controls.SettingsFlyout              {                  Width = 500'                  HeaderBackground = new SolidColorBrush(Color.FromArgb(255' 0' 113' 206))'                  HeaderForeground = new SolidColorBrush(Colors.White)'                  Title = International.Translation.Login'                  Content = new iFixit.W81.UI.Views.UC.Login()              };
Magic Number,iFixit.W8.UI.Services,UiUx,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Services\UiUx.cs,GoToProfile,The following statement contains a magic number: var settings = new Windows.UI.Xaml.Controls.SettingsFlyout              {                  Width = 500'                  HeaderBackground = new SolidColorBrush(Color.FromArgb(255' 0' 113' 206))'                  HeaderForeground = new SolidColorBrush(Colors.White)'                  Title = International.Translation.Profile'                  Content = new iFixit.W81.UI.Views.UC.Profile()              };
Magic Number,iFixit.W8.UI.Services,UiUx,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Services\UiUx.cs,GoToProfile,The following statement contains a magic number: var settings = new Windows.UI.Xaml.Controls.SettingsFlyout              {                  Width = 500'                  HeaderBackground = new SolidColorBrush(Color.FromArgb(255' 0' 113' 206))'                  HeaderForeground = new SolidColorBrush(Colors.White)'                  Title = International.Translation.Profile'                  Content = new iFixit.W81.UI.Views.UC.Profile()              };
Magic Number,iFixit.W8.UI.Services,UiUx,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Services\UiUx.cs,GoToProfile,The following statement contains a magic number: var settings = new Windows.UI.Xaml.Controls.SettingsFlyout              {                  Width = 500'                  HeaderBackground = new SolidColorBrush(Color.FromArgb(255' 0' 113' 206))'                  HeaderForeground = new SolidColorBrush(Colors.White)'                  Title = International.Translation.Profile'                  Content = new iFixit.W81.UI.Views.UC.Profile()              };
Magic Number,iFixit.W8.UI.Services,UiUx,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Services\UiUx.cs,GoToProfile,The following statement contains a magic number: var settings = new Windows.UI.Xaml.Controls.SettingsFlyout              {                  Width = 500'                  HeaderBackground = new SolidColorBrush(Color.FromArgb(255' 0' 113' 206))'                  HeaderForeground = new SolidColorBrush(Colors.White)'                  Title = International.Translation.Profile'                  Content = new iFixit.W81.UI.Views.UC.Profile()              };
Magic Number,iFixit.UI.Shared,TextIdentConverter,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W8.UI\Shared\Converters.cs,Convert,The following statement contains a magic number: return new Thickness((int.Parse(value.ToString())) * 12' 0' 0' 6);
Magic Number,iFixit.UI.Shared,TextIdentConverter,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W8.UI\Shared\Converters.cs,Convert,The following statement contains a magic number: return new Thickness((int.Parse(value.ToString())) * 12' 0' 0' 6);
Magic Number,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateLI,The following statement contains a magic number: ellipse.Width = 6;
Magic Number,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateLI,The following statement contains a magic number: ellipse.Height = 6;
Magic Number,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateLI,The following statement contains a magic number: ellipse.Margin = new Thickness(-30' 0' 0' 1);
Magic Number,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,img_ImageFailed,The following statement contains a magic number: var i = 5;
Magic Number,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,img_ImageOpened,The following statement contains a magic number: img.Width = 800;
Magic Number,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,img_ImageOpened,The following statement contains a magic number: img.Height = 600;
Magic Number,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,img_ImageOpened,The following statement contains a magic number: img.Width = 800;
Magic Number,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,img_ImageOpened,The following statement contains a magic number: img.Height = (800.0 / (double)bimg.PixelWidth) * bimg.PixelHeight;
Magic Number,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,img_ImageOpened,The following statement contains a magic number: bimg.PixelWidth > 800
Magic Number,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,img_ImageOpened,The following statement contains a magic number: img.Height = 600;
Magic Number,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,img_ImageOpened,The following statement contains a magic number: img.Width = (600.0 / (double)img.Height) * img.Width;
Magic Number,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,img_ImageOpened,The following statement contains a magic number: img.Height > 600
Magic Number,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,img_ImageOpened,The following statement contains a magic number: bimg.PixelWidth > 800 || bimg.PixelHeight > 600
Magic Number,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,img_ImageOpened,The following statement contains a magic number: bimg.PixelWidth > 800 || bimg.PixelHeight > 600
Magic Number,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateIFrame,The following statement contains a magic number: int height = 160;
Magic Number,iFixit.UI.Shared,Properties,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Shared\RichTextBlockProperties.cs,GenerateIFrame,The following statement contains a magic number: int width = 300;
Magic Number,iFixit.W81.UI,App,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\App.xaml.cs,App_CommandsRequested,The following statement contains a magic number: var aboutsc = new SettingsCommand("LoginW"' International.Translation.Login' x =>                  {                            var settings = new SettingsFlyout                      {                          Width = 500'                          HeaderBackground = new SolidColorBrush(Color.FromArgb(255' 0' 113' 206))'                          HeaderForeground = new SolidColorBrush(Colors.White)'                          Title = International.Translation.Login'                          Content = new Views.UC.Login()                      };                      settings.Show();                                          });
Magic Number,iFixit.W81.UI,App,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\App.xaml.cs,App_CommandsRequested,The following statement contains a magic number: var aboutsc = new SettingsCommand("LoginW"' International.Translation.Login' x =>                  {                            var settings = new SettingsFlyout                      {                          Width = 500'                          HeaderBackground = new SolidColorBrush(Color.FromArgb(255' 0' 113' 206))'                          HeaderForeground = new SolidColorBrush(Colors.White)'                          Title = International.Translation.Login'                          Content = new Views.UC.Login()                      };                      settings.Show();                                          });
Magic Number,iFixit.W81.UI,App,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\App.xaml.cs,App_CommandsRequested,The following statement contains a magic number: var aboutsc = new SettingsCommand("LoginW"' International.Translation.Login' x =>                  {                            var settings = new SettingsFlyout                      {                          Width = 500'                          HeaderBackground = new SolidColorBrush(Color.FromArgb(255' 0' 113' 206))'                          HeaderForeground = new SolidColorBrush(Colors.White)'                          Title = International.Translation.Login'                          Content = new Views.UC.Login()                      };                      settings.Show();                                          });
Magic Number,iFixit.W81.UI,App,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\App.xaml.cs,App_CommandsRequested,The following statement contains a magic number: var aboutsc = new SettingsCommand("LoginW"' International.Translation.Login' x =>                  {                            var settings = new SettingsFlyout                      {                          Width = 500'                          HeaderBackground = new SolidColorBrush(Color.FromArgb(255' 0' 113' 206))'                          HeaderForeground = new SolidColorBrush(Colors.White)'                          Title = International.Translation.Login'                          Content = new Views.UC.Login()                      };                      settings.Show();                                          });
Magic Number,iFixit.W81.UI.Common,NavigationHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: ((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt)
Magic Number,iFixit.W81.UI.Common,NavigationHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: (e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  e.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167)
Magic Number,iFixit.W81.UI.Common,NavigationHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: (e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  e.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167)
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetMarginForCurrentView,The following statement contains a magic number: return 20;
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetMarginForCurrentView,The following statement contains a magic number: return 100;
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetMarginForCurrentView,The following statement contains a magic number: return 120;
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: const double strokeWidth = 2.0;
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var horizontalLine = new Line                                       {                                           IsHitTestVisible = false'                                           Stroke = brush'                                           X1 = 0'                                           X2 = max'                                           Y1 = 100 + (strokeWidth/2)'                                           Y2 = 100 + (strokeWidth/2)'                                           StrokeThickness = strokeWidth'                                       };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var horizontalLine = new Line                                       {                                           IsHitTestVisible = false'                                           Stroke = brush'                                           X1 = 0'                                           X2 = max'                                           Y1 = 100 + (strokeWidth/2)'                                           Y2 = 100 + (strokeWidth/2)'                                           StrokeThickness = strokeWidth'                                       };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var horizontalLine = new Line                                       {                                           IsHitTestVisible = false'                                           Stroke = brush'                                           X1 = 0'                                           X2 = max'                                           Y1 = 100 + (strokeWidth/2)'                                           Y2 = 100 + (strokeWidth/2)'                                           StrokeThickness = strokeWidth'                                       };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var horizontalLine = new Line                                       {                                           IsHitTestVisible = false'                                           Stroke = brush'                                           X1 = 0'                                           X2 = max'                                           Y1 = 100 + (strokeWidth/2)'                                           Y2 = 100 + (strokeWidth/2)'                                           StrokeThickness = strokeWidth'                                       };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var horizontalLine2 = new Line                                        {                                            IsHitTestVisible = false'                                            Stroke = brush'                                            X1 = 0'                                            X2 = max'                                            Y1 = 140 + (strokeWidth/2)'                                            Y2 = 140 + (strokeWidth/2)'                                            StrokeThickness = strokeWidth'                                        };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var horizontalLine2 = new Line                                        {                                            IsHitTestVisible = false'                                            Stroke = brush'                                            X1 = 0'                                            X2 = max'                                            Y1 = 140 + (strokeWidth/2)'                                            Y2 = 140 + (strokeWidth/2)'                                            StrokeThickness = strokeWidth'                                        };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var horizontalLine2 = new Line                                        {                                            IsHitTestVisible = false'                                            Stroke = brush'                                            X1 = 0'                                            X2 = max'                                            Y1 = 140 + (strokeWidth/2)'                                            Y2 = 140 + (strokeWidth/2)'                                            StrokeThickness = strokeWidth'                                        };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var horizontalLine2 = new Line                                        {                                            IsHitTestVisible = false'                                            Stroke = brush'                                            X1 = 0'                                            X2 = max'                                            Y1 = 140 + (strokeWidth/2)'                                            Y2 = 140 + (strokeWidth/2)'                                            StrokeThickness = strokeWidth'                                        };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var verticalLine = new Line                                     {                                         IsHitTestVisible = false'                                         Stroke = brush'                                         X1 = margin - (strokeWidth / 2)'                                         X2 = margin - (strokeWidth / 2)'                                         Y1 = 0'                                         Y2 = max'                                         StrokeThickness = strokeWidth'                                     };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var verticalLine = new Line                                     {                                         IsHitTestVisible = false'                                         Stroke = brush'                                         X1 = margin - (strokeWidth / 2)'                                         X2 = margin - (strokeWidth / 2)'                                         Y1 = 0'                                         Y2 = max'                                         StrokeThickness = strokeWidth'                                     };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var horizontalBottomLine = new Line                                             {                                                 IsHitTestVisible = false'                                                 Stroke = brush'                                                 X1 = 0'                                                 X2 = max'                                                 Y1 = height - 130 + (strokeWidth/2)'                                                 Y2 = height - 130 + (strokeWidth/2)'                                                 StrokeThickness = strokeWidth'                                             };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var horizontalBottomLine = new Line                                             {                                                 IsHitTestVisible = false'                                                 Stroke = brush'                                                 X1 = 0'                                                 X2 = max'                                                 Y1 = height - 130 + (strokeWidth/2)'                                                 Y2 = height - 130 + (strokeWidth/2)'                                                 StrokeThickness = strokeWidth'                                             };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var horizontalBottomLine = new Line                                             {                                                 IsHitTestVisible = false'                                                 Stroke = brush'                                                 X1 = 0'                                                 X2 = max'                                                 Y1 = height - 130 + (strokeWidth/2)'                                                 Y2 = height - 130 + (strokeWidth/2)'                                                 StrokeThickness = strokeWidth'                                             };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var horizontalBottomLine = new Line                                             {                                                 IsHitTestVisible = false'                                                 Stroke = brush'                                                 X1 = 0'                                                 X2 = max'                                                 Y1 = height - 130 + (strokeWidth/2)'                                                 Y2 = height - 130 + (strokeWidth/2)'                                                 StrokeThickness = strokeWidth'                                             };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var horizontalBottomLine2 = new Line                                              {                                                  IsHitTestVisible = false'                                                  Stroke = brush'                                                  X1 = 0'                                                  X2 = max'                                                  Y1 = height - 50 + (strokeWidth/2)'                                                  Y2 = height - 50 + (strokeWidth/2)'                                                  StrokeThickness = strokeWidth'                                              };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var horizontalBottomLine2 = new Line                                              {                                                  IsHitTestVisible = false'                                                  Stroke = brush'                                                  X1 = 0'                                                  X2 = max'                                                  Y1 = height - 50 + (strokeWidth/2)'                                                  Y2 = height - 50 + (strokeWidth/2)'                                                  StrokeThickness = strokeWidth'                                              };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var horizontalBottomLine2 = new Line                                              {                                                  IsHitTestVisible = false'                                                  Stroke = brush'                                                  X1 = 0'                                                  X2 = max'                                                  Y1 = height - 50 + (strokeWidth/2)'                                                  Y2 = height - 50 + (strokeWidth/2)'                                                  StrokeThickness = strokeWidth'                                              };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: var horizontalBottomLine2 = new Line                                              {                                                  IsHitTestVisible = false'                                                  Stroke = brush'                                                  X1 = 0'                                                  X2 = max'                                                  Y1 = height - 50 + (strokeWidth/2)'                                                  Y2 = height - 50 + (strokeWidth/2)'                                                  StrokeThickness = strokeWidth'                                              };
Magic Number,MC.MetroGridHelper,MetroGridHelper,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: const int tileHeight = 20;
Magic Number,iFixit.W81.UI.Views,Guide,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Views\Guide.xaml.cs,GuideDetails_Loaded,The following statement contains a magic number: SuperImage.Width = this.ActualWidth - 240;
Magic Number,iFixit.W81.UI.Views,SearchResult,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Views\SearchResult.xaml.cs,OnScrollViewerViewChanged,The following statement contains a magic number: vm.Guides.Count > 18
Magic Number,iFixit.W81.UI.Views,SearchResult,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Views\SearchResult.xaml.cs,Products_OnScrollViewerViewChanged,The following statement contains a magic number: vm.Products.Count > 18
Magic Number,iFixit.W81.UI.Views,SearchResult,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.W81.UI\Views\SearchResult.xaml.cs,Devices_OnScrollViewerViewChanged,The following statement contains a magic number: vm.Devices.Count > 18
Missing Default,iFixit.UI.Services,SimplePeerConnector,D:\research\architectureSmells\repos\iFixit_ifixit-microsoft\iFixit.WP8.UI\Services\SimplePeerConnector.cs,TriggeredConnectionStateChanged,The following switch statement is missing a default case: switch (e.State)              {                  case TriggeredConnectState.PeerFound:                      UpdateConnectionStatus(ConnectionStatus.PeerFound);                      break;                  case TriggeredConnectState.Canceled:                      UpdateConnectionStatus(ConnectionStatus.Canceled);                      break;                  case TriggeredConnectState.Failed:                      UpdateConnectionStatus(ConnectionStatus.Failed);                      break;                  case TriggeredConnectState.Completed:                      StartSendReceive(e.Socket);                      UpdateConnectionStatus(ConnectionStatus.Completed);                        // Stop advertising since we have connected                      PeerFinder.Stop();                      _peerFinderStarted = false;                      break;              }
