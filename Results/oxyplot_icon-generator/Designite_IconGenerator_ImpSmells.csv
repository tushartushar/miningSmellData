Implementation smell,Namespace,Class,File,Method,Description
Long Method,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The method has 149 lines of code.
Complex Method,IcoMaker,Bitmap,C:\repos\oxyplot_icon-generator\IconGenerator\Bitmap.cs,Load,Cyclomatic complexity of the method is 16
Complex Method,IcoMaker,Icon,C:\repos\oxyplot_icon-generator\IconGenerator\Icon.cs,Load,Cyclomatic complexity of the method is 15
Complex Method,IcoMaker,Icon,C:\repos\oxyplot_icon-generator\IconGenerator\Icon.cs,Save,Cyclomatic complexity of the method is 12
Complex Method,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,CreateBitmap,Cyclomatic complexity of the method is 8
Complex Method,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,CreateSvg,Cyclomatic complexity of the method is 9
Long Statement,IconGenerator,Candidate1,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Render,The length of the statement  "	rc.DrawText (new ScreenPoint (size * 0.52' size * 0.32)' "XY"' OxyColors.White' "Arial"' size * 0.25' FontWeights.Bold' 0' HorizontalAlignment.Center' VerticalAlignment.Middle); " is 177.
Long Statement,IconGenerator,Candidate1,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Render,The length of the statement  "	rc.DrawText (new ScreenPoint (size * 0.52' size * 0.64)' "PLOT"' OxyColors.White' "Arial"' size * 0.25' FontWeights.Bold' 0' HorizontalAlignment.Center' VerticalAlignment.Middle); " is 179.
Long Statement,IconGenerator,Candidate3,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Render,The length of the statement  "	var data = ArrayHelper.Evaluate (Functions.Peaks' ArrayHelper.CreateVector (-3.1' 3.1' n)' ArrayHelper.CreateVector (3' -3' n)); " is 128.
Long Statement,IconGenerator,Candidate4,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Render,The length of the statement  "	var data = ArrayHelper.Evaluate (Functions.Peaks' ArrayHelper.CreateVector (-3.1' 2.6' n)' ArrayHelper.CreateVector (3.0' -3.4' n)); " is 132.
Long Statement,IconGenerator,Candidate5,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Render,The length of the statement  "	var data = ArrayHelper.Evaluate (Functions.Peaks' ArrayHelper.CreateVector (-3.1' 2.6' n)' ArrayHelper.CreateVector (3.0' -3.4' n)); " is 132.
Magic Number,IcoMaker,Bitmap,C:\repos\oxyplot_icon-generator\IconGenerator\Bitmap.cs,Load,The following statement contains a magic number: switch (infoHeaderSize) {  case 40:  	// BITMAPINFOHEADER (40bytes)  	b.Width = r.ReadInt32 ();  	b.Height = r.ReadInt32 ();  	b.Planes = r.ReadUInt16 ();  	b.BitCount = r.ReadUInt16 ();  	b.Compression = r.ReadUInt32 ();  	b.SizeImage = r.ReadUInt32 ();  	b.XPelsPerMeter = r.ReadInt32 ();  	b.YPelsPerMeter = r.ReadInt32 ();  	b.ColorsUsed = r.ReadUInt32 ();  	b.ColorsImportant = r.ReadUInt32 ();  	break;  default:  	throw new FormatException ("Bitmap format not supported (Size of DIB header=" + infoHeaderSize + ")");  }  
Magic Number,IcoMaker,Icon,C:\repos\oxyplot_icon-generator\IconGenerator\Icon.cs,Save,The following statement contains a magic number: using (var s = File.OpenWrite (path)) {  	using (var w = new BinaryWriter (s)) {  		w.Write ((short)0);  		w.Write ((short)1);  		w.Write ((short)this.Entries.Count);  		int offset = 6 + this.Entries.Count * 16;  		var buffers = new List<byte[]> ();  		foreach (var e in this.Entries) {  			w.Write (e.Width);  			// Specifies image width in pixels. Can be any number between 0 and 255. Value 0 means image width is 256 pixels.  			w.Write (e.Height);  			// Specifies image height in pixels. Can be any number between 0 and 255. Value 0 means image height is 256 pixels.  			w.Write (e.Colors);  			// Specifies number of colors in the color palette. Should be 0 if the image does not use a color palette.  			w.Write ((byte)0);  			// Reserved  			w.Write (e.ColorPlanes);  			// Specifies color planes. Should be 0 or 1  			w.Write (e.BitsPerPixel);  			// Specifies bits per pixel.  			byte[] bytes = null;  			switch (e.Format) {  			case ImageFormat.PNG:  				bytes = this.ImageToByteArray (e.Image);  				break;  			case ImageFormat.BMP:  				bytes = this.BitmapToByteArray (e.Bitmap' true);  				break;  			}  			buffers.Add (bytes);  			var size = bytes != null ? bytes.Length : 0;  			w.Write ((uint)size);  			// Specifies the size of the image's data in bytes  			w.Write ((uint)offset);  			// Specifies the offset of BMP or PNG data from the beginning of the ICO/CUR file  			offset += size;  		}  		// All image data referenced by entries in the image directory proceed directly after the image directory.  		// It is customary practice to store them in the same order as defined in the image directory.  		foreach (var b in buffers) {  			// Recall that if an image is stored in BMP format' it must exclude the opening BITMAPFILEHEADER structure'  			// whereas if it is stored in PNG format' it must be stored in its entirety.  			w.Write (b);  		}  	}  }  
Magic Number,IcoMaker,Icon,C:\repos\oxyplot_icon-generator\IconGenerator\Icon.cs,Save,The following statement contains a magic number: using (var s = File.OpenWrite (path)) {  	using (var w = new BinaryWriter (s)) {  		w.Write ((short)0);  		w.Write ((short)1);  		w.Write ((short)this.Entries.Count);  		int offset = 6 + this.Entries.Count * 16;  		var buffers = new List<byte[]> ();  		foreach (var e in this.Entries) {  			w.Write (e.Width);  			// Specifies image width in pixels. Can be any number between 0 and 255. Value 0 means image width is 256 pixels.  			w.Write (e.Height);  			// Specifies image height in pixels. Can be any number between 0 and 255. Value 0 means image height is 256 pixels.  			w.Write (e.Colors);  			// Specifies number of colors in the color palette. Should be 0 if the image does not use a color palette.  			w.Write ((byte)0);  			// Reserved  			w.Write (e.ColorPlanes);  			// Specifies color planes. Should be 0 or 1  			w.Write (e.BitsPerPixel);  			// Specifies bits per pixel.  			byte[] bytes = null;  			switch (e.Format) {  			case ImageFormat.PNG:  				bytes = this.ImageToByteArray (e.Image);  				break;  			case ImageFormat.BMP:  				bytes = this.BitmapToByteArray (e.Bitmap' true);  				break;  			}  			buffers.Add (bytes);  			var size = bytes != null ? bytes.Length : 0;  			w.Write ((uint)size);  			// Specifies the size of the image's data in bytes  			w.Write ((uint)offset);  			// Specifies the offset of BMP or PNG data from the beginning of the ICO/CUR file  			offset += size;  		}  		// All image data referenced by entries in the image directory proceed directly after the image directory.  		// It is customary practice to store them in the same order as defined in the image directory.  		foreach (var b in buffers) {  			// Recall that if an image is stored in BMP format' it must exclude the opening BITMAPFILEHEADER structure'  			// whereas if it is stored in PNG format' it must be stored in its entirety.  			w.Write (b);  		}  	}  }  
Magic Number,IcoMaker,Icon,C:\repos\oxyplot_icon-generator\IconGenerator\Icon.cs,Save,The following statement contains a magic number: using (var w = new BinaryWriter (s)) {  	w.Write ((short)0);  	w.Write ((short)1);  	w.Write ((short)this.Entries.Count);  	int offset = 6 + this.Entries.Count * 16;  	var buffers = new List<byte[]> ();  	foreach (var e in this.Entries) {  		w.Write (e.Width);  		// Specifies image width in pixels. Can be any number between 0 and 255. Value 0 means image width is 256 pixels.  		w.Write (e.Height);  		// Specifies image height in pixels. Can be any number between 0 and 255. Value 0 means image height is 256 pixels.  		w.Write (e.Colors);  		// Specifies number of colors in the color palette. Should be 0 if the image does not use a color palette.  		w.Write ((byte)0);  		// Reserved  		w.Write (e.ColorPlanes);  		// Specifies color planes. Should be 0 or 1  		w.Write (e.BitsPerPixel);  		// Specifies bits per pixel.  		byte[] bytes = null;  		switch (e.Format) {  		case ImageFormat.PNG:  			bytes = this.ImageToByteArray (e.Image);  			break;  		case ImageFormat.BMP:  			bytes = this.BitmapToByteArray (e.Bitmap' true);  			break;  		}  		buffers.Add (bytes);  		var size = bytes != null ? bytes.Length : 0;  		w.Write ((uint)size);  		// Specifies the size of the image's data in bytes  		w.Write ((uint)offset);  		// Specifies the offset of BMP or PNG data from the beginning of the ICO/CUR file  		offset += size;  	}  	// All image data referenced by entries in the image directory proceed directly after the image directory.  	// It is customary practice to store them in the same order as defined in the image directory.  	foreach (var b in buffers) {  		// Recall that if an image is stored in BMP format' it must exclude the opening BITMAPFILEHEADER structure'  		// whereas if it is stored in PNG format' it must be stored in its entirety.  		w.Write (b);  	}  }  
Magic Number,IcoMaker,Icon,C:\repos\oxyplot_icon-generator\IconGenerator\Icon.cs,Save,The following statement contains a magic number: using (var w = new BinaryWriter (s)) {  	w.Write ((short)0);  	w.Write ((short)1);  	w.Write ((short)this.Entries.Count);  	int offset = 6 + this.Entries.Count * 16;  	var buffers = new List<byte[]> ();  	foreach (var e in this.Entries) {  		w.Write (e.Width);  		// Specifies image width in pixels. Can be any number between 0 and 255. Value 0 means image width is 256 pixels.  		w.Write (e.Height);  		// Specifies image height in pixels. Can be any number between 0 and 255. Value 0 means image height is 256 pixels.  		w.Write (e.Colors);  		// Specifies number of colors in the color palette. Should be 0 if the image does not use a color palette.  		w.Write ((byte)0);  		// Reserved  		w.Write (e.ColorPlanes);  		// Specifies color planes. Should be 0 or 1  		w.Write (e.BitsPerPixel);  		// Specifies bits per pixel.  		byte[] bytes = null;  		switch (e.Format) {  		case ImageFormat.PNG:  			bytes = this.ImageToByteArray (e.Image);  			break;  		case ImageFormat.BMP:  			bytes = this.BitmapToByteArray (e.Bitmap' true);  			break;  		}  		buffers.Add (bytes);  		var size = bytes != null ? bytes.Length : 0;  		w.Write ((uint)size);  		// Specifies the size of the image's data in bytes  		w.Write ((uint)offset);  		// Specifies the offset of BMP or PNG data from the beginning of the ICO/CUR file  		offset += size;  	}  	// All image data referenced by entries in the image directory proceed directly after the image directory.  	// It is customary practice to store them in the same order as defined in the image directory.  	foreach (var b in buffers) {  		// Recall that if an image is stored in BMP format' it must exclude the opening BITMAPFILEHEADER structure'  		// whereas if it is stored in PNG format' it must be stored in its entirety.  		w.Write (b);  	}  }  
Magic Number,IconGenerator,Functions,C:\repos\oxyplot_icon-generator\IconGenerator\Functions.cs,Functions,The following statement contains a magic number: Peaks = (x' y) => 3 * (1 - x) * (1 - x) * Math.Exp (-(x * x) - (y + 1) * (y + 1)) - 10 * (x / 5 - x * x * x - y * y * y * y * y) * Math.Exp (-x * x - y * y) - 1.0 / 3 * Math.Exp (-(x + 1) * (x + 1) - y * y);  
Magic Number,IconGenerator,Functions,C:\repos\oxyplot_icon-generator\IconGenerator\Functions.cs,Functions,The following statement contains a magic number: Peaks = (x' y) => 3 * (1 - x) * (1 - x) * Math.Exp (-(x * x) - (y + 1) * (y + 1)) - 10 * (x / 5 - x * x * x - y * y * y * y * y) * Math.Exp (-x * x - y * y) - 1.0 / 3 * Math.Exp (-(x + 1) * (x + 1) - y * y);  
Magic Number,IconGenerator,Functions,C:\repos\oxyplot_icon-generator\IconGenerator\Functions.cs,Functions,The following statement contains a magic number: Peaks = (x' y) => 3 * (1 - x) * (1 - x) * Math.Exp (-(x * x) - (y + 1) * (y + 1)) - 10 * (x / 5 - x * x * x - y * y * y * y * y) * Math.Exp (-x * x - y * y) - 1.0 / 3 * Math.Exp (-(x + 1) * (x + 1) - y * y);  
Magic Number,IconGenerator,Functions,C:\repos\oxyplot_icon-generator\IconGenerator\Functions.cs,Functions,The following statement contains a magic number: Peaks = (x' y) => 3 * (1 - x) * (1 - x) * Math.Exp (-(x * x) - (y + 1) * (y + 1)) - 10 * (x / 5 - x * x * x - y * y * y * y * y) * Math.Exp (-x * x - y * y) - 1.0 / 3 * Math.Exp (-(x + 1) * (x + 1) - y * y);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	256'  	64'  	48'  	32'  	24'  	16  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	256'  	64'  	48'  	32'  	24'  	16  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	256'  	64'  	48'  	32'  	24'  	16  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	256'  	64'  	48'  	32'  	24'  	16  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	256'  	64'  	48'  	32'  	24'  	16  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	256'  	64'  	48'  	32'  	24'  	16  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	150'  	310'  	126'  	98'  	70'  	56'  	270'  	210'  	120'  	558'  	434'  	310'  	248'  	54'  	42'  	30'  	24'  	256'  	48'  	32'  	16'  	90'  	70'  	50'  	43'  	33'  	24'  	1116'  	540'  	868'  	420'  	620'  	300  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	1024'  	44'  	22'  	25  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	1024'  	44'  	22'  	25  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	1024'  	44'  	22'  	25  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	1024'  	44'  	22'  	25  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.Add (57);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.Add (114);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.Add (120);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.Add (72);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.Add (144);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.Add (76);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.Add (152);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.Add (29);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.Add (58);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.Add (50);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.Add (100);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.Add (40);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.Add (80);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	512'  	256'  	248'  	228'  	195'  	144'  	128'  	114'  	100'  	96'  	72'  	57'  	42'  	40'  	33'  	20  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	512'  	256'  	248'  	228'  	195'  	144'  	128'  	114'  	100'  	96'  	72'  	57'  	42'  	40'  	33'  	20  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	512'  	256'  	248'  	228'  	195'  	144'  	128'  	114'  	100'  	96'  	72'  	57'  	42'  	40'  	33'  	20  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	512'  	256'  	248'  	228'  	195'  	144'  	128'  	114'  	100'  	96'  	72'  	57'  	42'  	40'  	33'  	20  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	512'  	256'  	248'  	228'  	195'  	144'  	128'  	114'  	100'  	96'  	72'  	57'  	42'  	40'  	33'  	20  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	512'  	256'  	248'  	228'  	195'  	144'  	128'  	114'  	100'  	96'  	72'  	57'  	42'  	40'  	33'  	20  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	512'  	256'  	248'  	228'  	195'  	144'  	128'  	114'  	100'  	96'  	72'  	57'  	42'  	40'  	33'  	20  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	512'  	256'  	248'  	228'  	195'  	144'  	128'  	114'  	100'  	96'  	72'  	57'  	42'  	40'  	33'  	20  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	512'  	256'  	248'  	228'  	195'  	144'  	128'  	114'  	100'  	96'  	72'  	57'  	42'  	40'  	33'  	20  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	512'  	256'  	248'  	228'  	195'  	144'  	128'  	114'  	100'  	96'  	72'  	57'  	42'  	40'  	33'  	20  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	512'  	256'  	248'  	228'  	195'  	144'  	128'  	114'  	100'  	96'  	72'  	57'  	42'  	40'  	33'  	20  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	512'  	256'  	248'  	228'  	195'  	144'  	128'  	114'  	100'  	96'  	72'  	57'  	42'  	40'  	33'  	20  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	512'  	256'  	248'  	228'  	195'  	144'  	128'  	114'  	100'  	96'  	72'  	57'  	42'  	40'  	33'  	20  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	512'  	256'  	248'  	228'  	195'  	144'  	128'  	114'  	100'  	96'  	72'  	57'  	42'  	40'  	33'  	20  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	512'  	256'  	248'  	228'  	195'  	144'  	128'  	114'  	100'  	96'  	72'  	57'  	42'  	40'  	33'  	20  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	512'  	256'  	248'  	228'  	195'  	144'  	128'  	114'  	100'  	96'  	72'  	57'  	42'  	40'  	33'  	20  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Main,The following statement contains a magic number: sizes.AddRange (new[] {  	2048  });  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,GetRoundedRect,The following statement contains a magic number: path.AddArc (arc' 180' 90);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,GetRoundedRect,The following statement contains a magic number: path.AddArc (arc' 180' 90);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,GetRoundedRect,The following statement contains a magic number: path.AddArc (arc' 270' 90);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,GetRoundedRect,The following statement contains a magic number: path.AddArc (arc' 270' 90);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,GetRoundedRect,The following statement contains a magic number: path.AddArc (arc' 0' 90);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,GetRoundedRect,The following statement contains a magic number: path.AddArc (arc' 90' 90);  
Magic Number,IconGenerator,Program,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,GetRoundedRect,The following statement contains a magic number: path.AddArc (arc' 90' 90);  
Magic Number,IconGenerator,Candidate1,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Render,The following statement contains a magic number: rc.DrawText (new ScreenPoint (size * 0.52' size * 0.32)' "XY"' OxyColors.White' "Arial"' size * 0.25' FontWeights.Bold' 0' HorizontalAlignment.Center' VerticalAlignment.Middle);  
Magic Number,IconGenerator,Candidate1,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Render,The following statement contains a magic number: rc.DrawText (new ScreenPoint (size * 0.52' size * 0.32)' "XY"' OxyColors.White' "Arial"' size * 0.25' FontWeights.Bold' 0' HorizontalAlignment.Center' VerticalAlignment.Middle);  
Magic Number,IconGenerator,Candidate1,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Render,The following statement contains a magic number: rc.DrawText (new ScreenPoint (size * 0.52' size * 0.32)' "XY"' OxyColors.White' "Arial"' size * 0.25' FontWeights.Bold' 0' HorizontalAlignment.Center' VerticalAlignment.Middle);  
Magic Number,IconGenerator,Candidate1,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Render,The following statement contains a magic number: rc.DrawText (new ScreenPoint (size * 0.52' size * 0.64)' "PLOT"' OxyColors.White' "Arial"' size * 0.25' FontWeights.Bold' 0' HorizontalAlignment.Center' VerticalAlignment.Middle);  
Magic Number,IconGenerator,Candidate1,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Render,The following statement contains a magic number: rc.DrawText (new ScreenPoint (size * 0.52' size * 0.64)' "PLOT"' OxyColors.White' "Arial"' size * 0.25' FontWeights.Bold' 0' HorizontalAlignment.Center' VerticalAlignment.Middle);  
Magic Number,IconGenerator,Candidate1,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Render,The following statement contains a magic number: rc.DrawText (new ScreenPoint (size * 0.52' size * 0.64)' "PLOT"' OxyColors.White' "Arial"' size * 0.25' FontWeights.Bold' 0' HorizontalAlignment.Center' VerticalAlignment.Middle);  
Magic Number,IconGenerator,Candidate2,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,AddPeaks,The following statement contains a magic number: pm.Axes.Add (new LinearColorAxis {  	Position = AxisPosition.Right'  	Palette = OxyPalettes.Jet (500)'  	HighColor = OxyColors.Gray'  	LowColor = OxyColors.Black'  	IsAxisVisible = false  });  
Magic Number,IconGenerator,Candidate5,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Render,The following statement contains a magic number: rc.DrawRectangle (new OxyRect (0' 0' size' 2)' c' OxyColors.Undefined' 0);  
Magic Number,IconGenerator,Candidate5,C:\repos\oxyplot_icon-generator\IconGenerator\Program.cs,Render,The following statement contains a magic number: rc.DrawRectangle (new OxyRect (0' 0' 2' size)' c' OxyColors.Undefined' 0);  
Missing Default,IcoMaker,Icon,C:\repos\oxyplot_icon-generator\IconGenerator\Icon.cs,Load,The following switch statement is missing a default case: switch (entry.Format) {  case ImageFormat.PNG:  	entry.Image = Image.FromStream (ms);  	break;  case ImageFormat.BMP:  	// Recall that if an image is stored in BMP format' it must exclude the opening BITMAPFILEHEADER.  	entry.Bitmap = IcoMaker.Bitmap.Load (ms' true);  	break;  }  
Missing Default,IcoMaker,Icon,C:\repos\oxyplot_icon-generator\IconGenerator\Icon.cs,Save,The following switch statement is missing a default case: switch (e.Format) {  case ImageFormat.PNG:  	bytes = this.ImageToByteArray (e.Image);  	break;  case ImageFormat.BMP:  	bytes = this.BitmapToByteArray (e.Bitmap' true);  	break;  }  
