Implementation smell,Namespace,Class,File,Method,Description
Long Method,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,Load,The method has 393 lines of code.
Complex Method,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,ReadMemory,Cyclomatic complexity of the method is 9
Complex Method,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,ReadMemory,Cyclomatic complexity of the method is 9
Complex Method,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,Call,Cyclomatic complexity of the method is 10
Complex Method,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,Call,Cyclomatic complexity of the method is 10
Complex Method,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,Call,Cyclomatic complexity of the method is 10
Complex Method,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,Call,Cyclomatic complexity of the method is 10
Complex Method,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerIdByName,Cyclomatic complexity of the method is 12
Complex Method,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerNameById,Cyclomatic complexity of the method is 8
Complex Method,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,IsPlayerConnected,Cyclomatic complexity of the method is 12
Complex Method,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,Cyclomatic complexity of the method is 11
Long Parameter List,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,ShowDialog,The method has 5 parameters.
Long Parameter List,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,ReadProcessMemory,The method has 5 parameters.
Long Parameter List,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,WriteProcessMemory,The method has 5 parameters.
Long Parameter List,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,VirtualAllocEx,The method has 5 parameters.
Long Parameter List,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,CreateRemoteThread,The method has 7 parameters.
Long Parameter List,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,AddCity,The method has 7 parameters.
Long Parameter List,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,AddZone,The method has 7 parameters.
Long Statement,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,SetupLogging,The length of the statement  "		reader = new StreamReader (new FileStream (Path.Combine (chatlogPath' CHATLOG_FILE)' FileMode.Open' FileAccess.Read' FileShare.ReadWrite)' Encoding.Default' true); " is 163.
Long Statement,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,SetupLogging,The length of the statement  "		chatlogPath = Path.Combine (Environment.GetFolderPath (Environment.SpecialFolder.CommonDocuments)' "GTA San Andreas User Files\\SAMP\\"); " is 137.
Long Statement,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,SetupLogging,The length of the statement  "		reader = new StreamReader (new FileStream (Path.Combine (chatlogPath' CHATLOG_FILE)' FileMode.Open' FileAccess.Read' FileShare.ReadWrite)' Encoding.Default' true); " is 163.
Long Statement,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,AddMessage,The length of the statement  "	Memory.Call (functionAddChatMessage' true' (int)chatMessage' "{" + prefixColor + "}" + prefix + " {" + color + "}" + text); " is 123.
Long Statement,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,AddMessage,The length of the statement  "	Memory.Call (functionAddChatMessage' true' (int)chatMessage' "{" + Util.ColorToHexRGB (prefixColor) + "}" + prefix + " {" + Util.ColorToHexRGB (color) + "}" + text); " is 165.
Long Statement,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,Call,The length of the statement  "	IntPtr thread = CreateRemoteThread (handle' IntPtr.Zero' 0' (uint)memory [memory.Length - 1]' IntPtr.Zero' 0' IntPtr.Zero); " is 123.
Long Statement,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,Call,The length of the statement  "	IntPtr thread = CreateRemoteThread (handle' IntPtr.Zero' 0' (uint)memory [memory.Length - 1]' IntPtr.Zero' 0' IntPtr.Zero); " is 123.
Long Statement,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,Call,The length of the statement  "	IntPtr thread = CreateRemoteThread (handle' IntPtr.Zero' 0' (uint)memory [memory.Length - 1]' IntPtr.Zero' 0' IntPtr.Zero); " is 123.
Long Statement,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,Call,The length of the statement  "	IntPtr thread = CreateRemoteThread (handle' IntPtr.Zero' 0' (uint)memory [memory.Length - 1]' IntPtr.Zero' 0' IntPtr.Zero); " is 123.
Long Statement,shadowAPI2,Player,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Player.cs,GetPosition,The length of the statement  "				if (Memory.ReadMemory<float> (matrix + 0x30' out x) && Memory.ReadMemory<float> (matrix + 0x34' out y) && Memory.ReadMemory<float> (matrix + 0x38' out z)) " is 154.
Complex Conditional,shadowAPI2,Player,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Player.cs,InRange2D,The conditional expression  "(x < radius) && (x > -radius) && (y < radius) && (y > -radius) && (z < radius) && (z > -radius)"  is complex.
Complex Conditional,shadowAPI2,Player,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Player.cs,InRange3D,The conditional expression  "(x < radius) && (x > -radius) && (y < radius) && (y > -radius) && (z < radius) && (z > -radius)"  is complex.
Complex Conditional,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsEngineEnabled,The conditional expression  "state == 24 || state == 56 || state == 88 || state == 120"  is complex.
Complex Conditional,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,City,The conditional expression  "x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]"  is complex.
Complex Conditional,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,Zone,The conditional expression  "x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]"  is complex.
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GenerateAddresses,The following statement contains a magic number: while (isChatOpen == IntPtr.Zero || isDialogOpen == IntPtr.Zero || chatMessage == IntPtr.Zero) {  	System.Threading.Thread.Sleep (250);  	if (Memory.ReadMemory<IntPtr> (sampBase + 0x21A10C' out temp))  		if (temp != IntPtr.Zero)  			isChatOpen = temp + 0x55;  	if (Memory.ReadMemory<IntPtr> (sampBase + 0x21A0B8' out dialog))  		if (dialog != IntPtr.Zero)  			isDialogOpen = dialog + 0x28;  	Memory.ReadMemory<IntPtr> (sampBase + 0x21A0E4' out chatMessage);  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GenerateAddresses,The following statement contains a magic number: System.Threading.Thread.Sleep (250);  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,ChangeReceived,The following statement contains a magic number: while (!reader.EndOfStream) {  	line = reader.ReadLine ();  	if (line == "")  		continue;  	else {  		List<String> splitted = line.Split (' ').ToList ();  		DateTime date = DateTime.Parse (splitted [0].Remove (0' 1).Remove (splitted [0].Length - 2));  		splitted.RemoveAt (0);  		if (OnChatMessage != null)  			OnChatMessage (date' string.Join (" "' splitted));  	}  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,ChangeReceived,The following statement contains a magic number: if (line == "")  	continue;  else {  	List<String> splitted = line.Split (' ').ToList ();  	DateTime date = DateTime.Parse (splitted [0].Remove (0' 1).Remove (splitted [0].Length - 2));  	splitted.RemoveAt (0);  	if (OnChatMessage != null)  		OnChatMessage (date' string.Join (" "' splitted));  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,SelectDialogListIndex,The following statement contains a magic number: if (Memory.ReadMemory<int> (dialog + 0x2C' out id) && id == 2) {  	// Set the entry id to entryId  	int something = 0;  	if (Memory.ReadMemory<int> (dialog + 0x20' out something)) {  		List<byte> ptr = new List<byte> ();  		ptr.Add (0xB9);  		ptr.AddRange (BitConverter.GetBytes (something));  		Memory.Call (functionSelectDialogListIndex' ptr.ToArray ()' false' index);  	}  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListString,The following statement contains a magic number: if (Memory.ReadMemory<int> (dialog + 0x2C' out id) && id == 2) {  	IntPtr temp = IntPtr.Zero;  	if (Memory.ReadMemory<IntPtr> (IntPtr.Add (dialog' 0x20)' out temp)) {  		var index = 0;  		Memory.ReadMemory<int> (IntPtr.Add (temp' 0x143)' out index);  		if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' 0x14C)' out temp)) {  			if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  				listString = Memory.ReadString (temp' 64);  			}  		}  	}  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListString,The following statement contains a magic number: if (Memory.ReadMemory<int> (dialog + 0x2C' out id) && id == 2) {  	IntPtr temp = IntPtr.Zero;  	if (Memory.ReadMemory<IntPtr> (IntPtr.Add (dialog' 0x20)' out temp)) {  		var index = 0;  		Memory.ReadMemory<int> (IntPtr.Add (temp' 0x143)' out index);  		if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' 0x14C)' out temp)) {  			if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  				listString = Memory.ReadString (temp' 64);  			}  		}  	}  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListString,The following statement contains a magic number: if (Memory.ReadMemory<int> (dialog + 0x2C' out id) && id == 2) {  	IntPtr temp = IntPtr.Zero;  	if (Memory.ReadMemory<IntPtr> (IntPtr.Add (dialog' 0x20)' out temp)) {  		var index = 0;  		Memory.ReadMemory<int> (IntPtr.Add (temp' 0x143)' out index);  		if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' 0x14C)' out temp)) {  			if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  				listString = Memory.ReadString (temp' 64);  			}  		}  	}  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListString,The following statement contains a magic number: if (Memory.ReadMemory<IntPtr> (IntPtr.Add (dialog' 0x20)' out temp)) {  	var index = 0;  	Memory.ReadMemory<int> (IntPtr.Add (temp' 0x143)' out index);  	if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' 0x14C)' out temp)) {  		if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  			listString = Memory.ReadString (temp' 64);  		}  	}  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListString,The following statement contains a magic number: if (Memory.ReadMemory<IntPtr> (IntPtr.Add (dialog' 0x20)' out temp)) {  	var index = 0;  	Memory.ReadMemory<int> (IntPtr.Add (temp' 0x143)' out index);  	if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' 0x14C)' out temp)) {  		if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  			listString = Memory.ReadString (temp' 64);  		}  	}  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListString,The following statement contains a magic number: if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' 0x14C)' out temp)) {  	if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  		listString = Memory.ReadString (temp' 64);  	}  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListString,The following statement contains a magic number: if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' 0x14C)' out temp)) {  	if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  		listString = Memory.ReadString (temp' 64);  	}  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListString,The following statement contains a magic number: if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  	listString = Memory.ReadString (temp' 64);  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListString,The following statement contains a magic number: if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  	listString = Memory.ReadString (temp' 64);  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListString,The following statement contains a magic number: listString = Memory.ReadString (temp' 64);  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListStringByIndex,The following statement contains a magic number: if (Memory.ReadMemory<int> (dialog + 0x2C' out id) && id == 2) {  	IntPtr temp = IntPtr.Zero;  	if (Memory.ReadMemory<IntPtr> (IntPtr.Add (dialog' 0x20)' out temp)) {  		if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' 0x14C)' out temp)) {  			if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  				listString = Memory.ReadString (temp' 64);  			}  		}  	}  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListStringByIndex,The following statement contains a magic number: if (Memory.ReadMemory<int> (dialog + 0x2C' out id) && id == 2) {  	IntPtr temp = IntPtr.Zero;  	if (Memory.ReadMemory<IntPtr> (IntPtr.Add (dialog' 0x20)' out temp)) {  		if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' 0x14C)' out temp)) {  			if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  				listString = Memory.ReadString (temp' 64);  			}  		}  	}  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListStringByIndex,The following statement contains a magic number: if (Memory.ReadMemory<int> (dialog + 0x2C' out id) && id == 2) {  	IntPtr temp = IntPtr.Zero;  	if (Memory.ReadMemory<IntPtr> (IntPtr.Add (dialog' 0x20)' out temp)) {  		if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' 0x14C)' out temp)) {  			if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  				listString = Memory.ReadString (temp' 64);  			}  		}  	}  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListStringByIndex,The following statement contains a magic number: if (Memory.ReadMemory<IntPtr> (IntPtr.Add (dialog' 0x20)' out temp)) {  	if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' 0x14C)' out temp)) {  		if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  			listString = Memory.ReadString (temp' 64);  		}  	}  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListStringByIndex,The following statement contains a magic number: if (Memory.ReadMemory<IntPtr> (IntPtr.Add (dialog' 0x20)' out temp)) {  	if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' 0x14C)' out temp)) {  		if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  			listString = Memory.ReadString (temp' 64);  		}  	}  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListStringByIndex,The following statement contains a magic number: if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' 0x14C)' out temp)) {  	if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  		listString = Memory.ReadString (temp' 64);  	}  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListStringByIndex,The following statement contains a magic number: if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' 0x14C)' out temp)) {  	if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  		listString = Memory.ReadString (temp' 64);  	}  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListStringByIndex,The following statement contains a magic number: if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  	listString = Memory.ReadString (temp' 64);  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListStringByIndex,The following statement contains a magic number: if (Memory.ReadMemory<IntPtr> (IntPtr.Add (temp' (int)(4 * index))' out temp)) {  	listString = Memory.ReadString (temp' 64);  }  
Magic Number,shadowAPI2,Chat,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Chat.cs,GetSelectedDialogListStringByIndex,The following statement contains a magic number: listString = Memory.ReadString (temp' 64);  
Magic Number,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,WriteString,The following statement contains a magic number: return WriteMemory (address' bytes' (uint)512);  
Magic Number,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,WriteString,The following statement contains a magic number: return WriteMemory ((uint)address' bytes' (uint)512);  
Magic Number,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,Call,The following statement contains a magic number: if (stackClear) {  	data.AddRange (new byte[] {  		0x83'  		0xC4  	});  	data.Add (Convert.ToByte (parameter.Length * 4));  }  
Magic Number,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,Call,The following statement contains a magic number: data.Add (Convert.ToByte (parameter.Length * 4));  
Magic Number,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,Call,The following statement contains a magic number: if (stackClear) {  	data.AddRange (new byte[] {  		0x83'  		0xC4  	});  	data.Add (Convert.ToByte (parameter.Length * 4));  }  
Magic Number,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,Call,The following statement contains a magic number: data.Add (Convert.ToByte (parameter.Length * 4));  
Magic Number,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,Call,The following statement contains a magic number: if (stackClear) {  	data.AddRange (new byte[] {  		0x83'  		0xC4  	});  	data.Add (Convert.ToByte (parameter.Length * 4));  }  
Magic Number,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,Call,The following statement contains a magic number: data.Add (Convert.ToByte (parameter.Length * 4));  
Magic Number,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,Call,The following statement contains a magic number: if (stackClear) {  	data.AddRange (new byte[] {  		0x83'  		0xC4  	});  	data.Add (Convert.ToByte (parameter.Length * 4));  }  
Magic Number,shadowAPI2,Memory,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Memory.cs,Call,The following statement contains a magic number: data.Add (Convert.ToByte (parameter.Length * 4));  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerIdByName,The following statement contains a magic number: if (!reloadData) {  	for (int i = 0; i < 1003; i++) {  		for (int j = 0; j < player.Length; j++) {  			if (remotePlayers [i].name.ToLower () == player [j].ToLower ()) {  				id [j] = i;  				break;  			}  		}  	}  }  else {  	for (int i = 0; i < 1003; i++) {  		IntPtr remotePlayer = IntPtr.Zero;  		Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' i * 4)' out remotePlayer);  		if (remotePlayer != IntPtr.Zero) {  			int nameLength = 0;  			Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  			if (nameLength < 16) {  				string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  				remotePlayers [i].name = name;  				for (int j = 0; j < player.Length; j++) {  					if (player [j].ToLower () == name.ToLower ()) {  						//uint remotePlayerData = Memory.ReadMemory(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  						id [j] = i;  						//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  						remotePlayers [i].id = i;  						break;  					}  				}  			}  			else {  				IntPtr nameExtension = IntPtr.Zero;  				Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  				string name = Memory.ReadString (nameExtension' nameLength);  				remotePlayers [i].name = name;  				for (int j = 0; j < player.Length; j++) {  					if (player [j].ToLower () == name.ToLower ()) {  						//uint remotePlayerData = Memory.ReadUInteger(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  						id [j] = i;  						//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  						remotePlayers [i].id = i;  						break;  					}  				}  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerIdByName,The following statement contains a magic number: if (!reloadData) {  	for (int i = 0; i < 1003; i++) {  		for (int j = 0; j < player.Length; j++) {  			if (remotePlayers [i].name.ToLower () == player [j].ToLower ()) {  				id [j] = i;  				break;  			}  		}  	}  }  else {  	for (int i = 0; i < 1003; i++) {  		IntPtr remotePlayer = IntPtr.Zero;  		Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' i * 4)' out remotePlayer);  		if (remotePlayer != IntPtr.Zero) {  			int nameLength = 0;  			Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  			if (nameLength < 16) {  				string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  				remotePlayers [i].name = name;  				for (int j = 0; j < player.Length; j++) {  					if (player [j].ToLower () == name.ToLower ()) {  						//uint remotePlayerData = Memory.ReadMemory(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  						id [j] = i;  						//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  						remotePlayers [i].id = i;  						break;  					}  				}  			}  			else {  				IntPtr nameExtension = IntPtr.Zero;  				Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  				string name = Memory.ReadString (nameExtension' nameLength);  				remotePlayers [i].name = name;  				for (int j = 0; j < player.Length; j++) {  					if (player [j].ToLower () == name.ToLower ()) {  						//uint remotePlayerData = Memory.ReadUInteger(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  						id [j] = i;  						//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  						remotePlayers [i].id = i;  						break;  					}  				}  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerIdByName,The following statement contains a magic number: if (!reloadData) {  	for (int i = 0; i < 1003; i++) {  		for (int j = 0; j < player.Length; j++) {  			if (remotePlayers [i].name.ToLower () == player [j].ToLower ()) {  				id [j] = i;  				break;  			}  		}  	}  }  else {  	for (int i = 0; i < 1003; i++) {  		IntPtr remotePlayer = IntPtr.Zero;  		Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' i * 4)' out remotePlayer);  		if (remotePlayer != IntPtr.Zero) {  			int nameLength = 0;  			Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  			if (nameLength < 16) {  				string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  				remotePlayers [i].name = name;  				for (int j = 0; j < player.Length; j++) {  					if (player [j].ToLower () == name.ToLower ()) {  						//uint remotePlayerData = Memory.ReadMemory(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  						id [j] = i;  						//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  						remotePlayers [i].id = i;  						break;  					}  				}  			}  			else {  				IntPtr nameExtension = IntPtr.Zero;  				Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  				string name = Memory.ReadString (nameExtension' nameLength);  				remotePlayers [i].name = name;  				for (int j = 0; j < player.Length; j++) {  					if (player [j].ToLower () == name.ToLower ()) {  						//uint remotePlayerData = Memory.ReadUInteger(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  						id [j] = i;  						//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  						remotePlayers [i].id = i;  						break;  					}  				}  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerIdByName,The following statement contains a magic number: if (!reloadData) {  	for (int i = 0; i < 1003; i++) {  		for (int j = 0; j < player.Length; j++) {  			if (remotePlayers [i].name.ToLower () == player [j].ToLower ()) {  				id [j] = i;  				break;  			}  		}  	}  }  else {  	for (int i = 0; i < 1003; i++) {  		IntPtr remotePlayer = IntPtr.Zero;  		Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' i * 4)' out remotePlayer);  		if (remotePlayer != IntPtr.Zero) {  			int nameLength = 0;  			Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  			if (nameLength < 16) {  				string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  				remotePlayers [i].name = name;  				for (int j = 0; j < player.Length; j++) {  					if (player [j].ToLower () == name.ToLower ()) {  						//uint remotePlayerData = Memory.ReadMemory(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  						id [j] = i;  						//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  						remotePlayers [i].id = i;  						break;  					}  				}  			}  			else {  				IntPtr nameExtension = IntPtr.Zero;  				Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  				string name = Memory.ReadString (nameExtension' nameLength);  				remotePlayers [i].name = name;  				for (int j = 0; j < player.Length; j++) {  					if (player [j].ToLower () == name.ToLower ()) {  						//uint remotePlayerData = Memory.ReadUInteger(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  						id [j] = i;  						//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  						remotePlayers [i].id = i;  						break;  					}  				}  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerIdByName,The following statement contains a magic number: for (int i = 0; i < 1003; i++) {  	for (int j = 0; j < player.Length; j++) {  		if (remotePlayers [i].name.ToLower () == player [j].ToLower ()) {  			id [j] = i;  			break;  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerIdByName,The following statement contains a magic number: for (int i = 0; i < 1003; i++) {  	IntPtr remotePlayer = IntPtr.Zero;  	Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' i * 4)' out remotePlayer);  	if (remotePlayer != IntPtr.Zero) {  		int nameLength = 0;  		Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  		if (nameLength < 16) {  			string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  			remotePlayers [i].name = name;  			for (int j = 0; j < player.Length; j++) {  				if (player [j].ToLower () == name.ToLower ()) {  					//uint remotePlayerData = Memory.ReadMemory(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  					id [j] = i;  					//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  					remotePlayers [i].id = i;  					break;  				}  			}  		}  		else {  			IntPtr nameExtension = IntPtr.Zero;  			Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  			string name = Memory.ReadString (nameExtension' nameLength);  			remotePlayers [i].name = name;  			for (int j = 0; j < player.Length; j++) {  				if (player [j].ToLower () == name.ToLower ()) {  					//uint remotePlayerData = Memory.ReadUInteger(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  					id [j] = i;  					//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  					remotePlayers [i].id = i;  					break;  				}  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerIdByName,The following statement contains a magic number: for (int i = 0; i < 1003; i++) {  	IntPtr remotePlayer = IntPtr.Zero;  	Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' i * 4)' out remotePlayer);  	if (remotePlayer != IntPtr.Zero) {  		int nameLength = 0;  		Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  		if (nameLength < 16) {  			string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  			remotePlayers [i].name = name;  			for (int j = 0; j < player.Length; j++) {  				if (player [j].ToLower () == name.ToLower ()) {  					//uint remotePlayerData = Memory.ReadMemory(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  					id [j] = i;  					//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  					remotePlayers [i].id = i;  					break;  				}  			}  		}  		else {  			IntPtr nameExtension = IntPtr.Zero;  			Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  			string name = Memory.ReadString (nameExtension' nameLength);  			remotePlayers [i].name = name;  			for (int j = 0; j < player.Length; j++) {  				if (player [j].ToLower () == name.ToLower ()) {  					//uint remotePlayerData = Memory.ReadUInteger(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  					id [j] = i;  					//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  					remotePlayers [i].id = i;  					break;  				}  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerIdByName,The following statement contains a magic number: for (int i = 0; i < 1003; i++) {  	IntPtr remotePlayer = IntPtr.Zero;  	Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' i * 4)' out remotePlayer);  	if (remotePlayer != IntPtr.Zero) {  		int nameLength = 0;  		Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  		if (nameLength < 16) {  			string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  			remotePlayers [i].name = name;  			for (int j = 0; j < player.Length; j++) {  				if (player [j].ToLower () == name.ToLower ()) {  					//uint remotePlayerData = Memory.ReadMemory(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  					id [j] = i;  					//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  					remotePlayers [i].id = i;  					break;  				}  			}  		}  		else {  			IntPtr nameExtension = IntPtr.Zero;  			Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  			string name = Memory.ReadString (nameExtension' nameLength);  			remotePlayers [i].name = name;  			for (int j = 0; j < player.Length; j++) {  				if (player [j].ToLower () == name.ToLower ()) {  					//uint remotePlayerData = Memory.ReadUInteger(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  					id [j] = i;  					//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  					remotePlayers [i].id = i;  					break;  				}  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerIdByName,The following statement contains a magic number: Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' i * 4)' out remotePlayer);  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerIdByName,The following statement contains a magic number: if (remotePlayer != IntPtr.Zero) {  	int nameLength = 0;  	Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  	if (nameLength < 16) {  		string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  		remotePlayers [i].name = name;  		for (int j = 0; j < player.Length; j++) {  			if (player [j].ToLower () == name.ToLower ()) {  				//uint remotePlayerData = Memory.ReadMemory(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  				id [j] = i;  				//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  				remotePlayers [i].id = i;  				break;  			}  		}  	}  	else {  		IntPtr nameExtension = IntPtr.Zero;  		Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  		string name = Memory.ReadString (nameExtension' nameLength);  		remotePlayers [i].name = name;  		for (int j = 0; j < player.Length; j++) {  			if (player [j].ToLower () == name.ToLower ()) {  				//uint remotePlayerData = Memory.ReadUInteger(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  				id [j] = i;  				//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  				remotePlayers [i].id = i;  				break;  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerIdByName,The following statement contains a magic number: if (nameLength < 16) {  	string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  	remotePlayers [i].name = name;  	for (int j = 0; j < player.Length; j++) {  		if (player [j].ToLower () == name.ToLower ()) {  			//uint remotePlayerData = Memory.ReadMemory(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  			id [j] = i;  			//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  			remotePlayers [i].id = i;  			break;  		}  	}  }  else {  	IntPtr nameExtension = IntPtr.Zero;  	Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  	string name = Memory.ReadString (nameExtension' nameLength);  	remotePlayers [i].name = name;  	for (int j = 0; j < player.Length; j++) {  		if (player [j].ToLower () == name.ToLower ()) {  			//uint remotePlayerData = Memory.ReadUInteger(remotePlayer + Memory.OFFSET_REMOTE_PLAYER_DATA);  			id [j] = i;  			//(int)Memory.ReadUInteger(remotePlayerData); // Uint16  			remotePlayers [i].id = i;  			break;  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerNameById,The following statement contains a magic number: if (!reloadId) {  	for (int i = 0; i < remotePlayers.Length; i++) {  		for (int j = 0; j < id.Length; j++) {  			if (i == id [j]) {  				name [j] = remotePlayers [i].name;  				break;  			}  		}  	}  }  else {  	for (int i = 0; i < id.Length; i++) {  		IntPtr remotePlayer = IntPtr.Zero;  		Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' (int)id [i] * 4)' out remotePlayer);  		if (remotePlayer != IntPtr.Zero) {  			int nameLength = 0;  			Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  			if (nameLength < 16) {  				name [i] = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  				remotePlayers [id [i]].name = name [i];  			}  			else {  				IntPtr nameExtension = IntPtr.Zero;  				Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  				name [i] = Memory.ReadString (nameExtension' nameLength);  				remotePlayers [id [i]].name = name [i];  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerNameById,The following statement contains a magic number: if (!reloadId) {  	for (int i = 0; i < remotePlayers.Length; i++) {  		for (int j = 0; j < id.Length; j++) {  			if (i == id [j]) {  				name [j] = remotePlayers [i].name;  				break;  			}  		}  	}  }  else {  	for (int i = 0; i < id.Length; i++) {  		IntPtr remotePlayer = IntPtr.Zero;  		Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' (int)id [i] * 4)' out remotePlayer);  		if (remotePlayer != IntPtr.Zero) {  			int nameLength = 0;  			Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  			if (nameLength < 16) {  				name [i] = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  				remotePlayers [id [i]].name = name [i];  			}  			else {  				IntPtr nameExtension = IntPtr.Zero;  				Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  				name [i] = Memory.ReadString (nameExtension' nameLength);  				remotePlayers [id [i]].name = name [i];  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerNameById,The following statement contains a magic number: for (int i = 0; i < id.Length; i++) {  	IntPtr remotePlayer = IntPtr.Zero;  	Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' (int)id [i] * 4)' out remotePlayer);  	if (remotePlayer != IntPtr.Zero) {  		int nameLength = 0;  		Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  		if (nameLength < 16) {  			name [i] = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  			remotePlayers [id [i]].name = name [i];  		}  		else {  			IntPtr nameExtension = IntPtr.Zero;  			Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  			name [i] = Memory.ReadString (nameExtension' nameLength);  			remotePlayers [id [i]].name = name [i];  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerNameById,The following statement contains a magic number: for (int i = 0; i < id.Length; i++) {  	IntPtr remotePlayer = IntPtr.Zero;  	Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' (int)id [i] * 4)' out remotePlayer);  	if (remotePlayer != IntPtr.Zero) {  		int nameLength = 0;  		Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  		if (nameLength < 16) {  			name [i] = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  			remotePlayers [id [i]].name = name [i];  		}  		else {  			IntPtr nameExtension = IntPtr.Zero;  			Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  			name [i] = Memory.ReadString (nameExtension' nameLength);  			remotePlayers [id [i]].name = name [i];  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerNameById,The following statement contains a magic number: Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' (int)id [i] * 4)' out remotePlayer);  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerNameById,The following statement contains a magic number: if (remotePlayer != IntPtr.Zero) {  	int nameLength = 0;  	Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  	if (nameLength < 16) {  		name [i] = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  		remotePlayers [id [i]].name = name [i];  	}  	else {  		IntPtr nameExtension = IntPtr.Zero;  		Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  		name [i] = Memory.ReadString (nameExtension' nameLength);  		remotePlayers [id [i]].name = name [i];  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerNameById,The following statement contains a magic number: if (nameLength < 16) {  	name [i] = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  	remotePlayers [id [i]].name = name [i];  }  else {  	IntPtr nameExtension = IntPtr.Zero;  	Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  	name [i] = Memory.ReadString (nameExtension' nameLength);  	remotePlayers [id [i]].name = name [i];  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerScoreById,The following statement contains a magic number: if (!reloadId) {  	for (int i = 0; i < remotePlayers.Length; i++) {  		if (i == id) {  			score = remotePlayers [i].score;  			break;  		}  	}  }  else {  	IntPtr remotePlayer = IntPtr.Zero;  	Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' (int)id * 4)' out remotePlayer);  	/* UNDONE                 List<byte> data = new List<byte>();                  data.Add(0xB9);                 data.AddRange(BitConverter.GetBytes((uint)Memory.structSamp));                  data.Add(0xE8);                 int offset = (int)address - ((int)Memory.ParameterMemory[Memory.ParameterMemory.Length - 1] + 10);                  data.Add(0xC3);                 */if (remotePlayer != IntPtr.Zero) {  		Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x24)' out score);  		remotePlayers [id].score = score;  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerScoreById,The following statement contains a magic number: Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' (int)id * 4)' out remotePlayer);  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerPingById,The following statement contains a magic number: if (!reloadId && id >= 0) {  	for (int i = 0; i < remotePlayers.Length; i++) {  		if (i == id) {  			score = remotePlayers [i].score;  			break;  		}  	}  }  else {  	IntPtr remotePlayer = IntPtr.Zero;  	Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' (int)id * 4)' out remotePlayer);  	/* UNDONE                 List<byte> data = new List<byte>();                  data.Add(0xB9);                 data.AddRange(BitConverter.GetBytes((uint)Memory.structSamp));                  data.Add(0xE8);                 int offset = (int)address - ((int)Memory.ParameterMemory[Memory.ParameterMemory.Length - 1] + 10);                  data.Add(0xC3);                 */if (remotePlayer != IntPtr.Zero) {  		Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x28)' out score);  		remotePlayers [id].score = score;  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,GetPlayerPingById,The following statement contains a magic number: Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' (int)id * 4)' out remotePlayer);  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,IsPlayerConnected,The following statement contains a magic number: if (!reloadData) {  	for (int i = 0; i < 1003; i++) {  		for (int j = 0; j < player.Length; j++) {  			if (remotePlayers [i].name.ToLower () == player [j].ToLower ()) {  				connected [j] = true;  				break;  			}  		}  	}  }  else {  	for (int i = 0; i < 1003; i++) {  		IntPtr remotePlayer = IntPtr.Zero;  		Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' (int)i * 4)' out remotePlayer);  		if (remotePlayer != IntPtr.Zero) {  			int nameLength = 0;  			Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  			if (nameLength < 16) {  				string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  				remotePlayers [i].name = name;  				for (int j = 0; j < player.Length; j++) {  					if (player [j].ToLower () == name.ToLower ()) {  						connected [j] = true;  						break;  					}  				}  			}  			else {  				IntPtr nameExtension = IntPtr.Zero;  				Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  				string name = Memory.ReadString (nameExtension' nameLength);  				remotePlayers [i].name = name;  				for (int j = 0; j < player.Length; j++) {  					if (player [j].ToLower () == name.ToLower ()) {  						connected [j] = true;  						break;  					}  				}  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,IsPlayerConnected,The following statement contains a magic number: if (!reloadData) {  	for (int i = 0; i < 1003; i++) {  		for (int j = 0; j < player.Length; j++) {  			if (remotePlayers [i].name.ToLower () == player [j].ToLower ()) {  				connected [j] = true;  				break;  			}  		}  	}  }  else {  	for (int i = 0; i < 1003; i++) {  		IntPtr remotePlayer = IntPtr.Zero;  		Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' (int)i * 4)' out remotePlayer);  		if (remotePlayer != IntPtr.Zero) {  			int nameLength = 0;  			Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  			if (nameLength < 16) {  				string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  				remotePlayers [i].name = name;  				for (int j = 0; j < player.Length; j++) {  					if (player [j].ToLower () == name.ToLower ()) {  						connected [j] = true;  						break;  					}  				}  			}  			else {  				IntPtr nameExtension = IntPtr.Zero;  				Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  				string name = Memory.ReadString (nameExtension' nameLength);  				remotePlayers [i].name = name;  				for (int j = 0; j < player.Length; j++) {  					if (player [j].ToLower () == name.ToLower ()) {  						connected [j] = true;  						break;  					}  				}  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,IsPlayerConnected,The following statement contains a magic number: if (!reloadData) {  	for (int i = 0; i < 1003; i++) {  		for (int j = 0; j < player.Length; j++) {  			if (remotePlayers [i].name.ToLower () == player [j].ToLower ()) {  				connected [j] = true;  				break;  			}  		}  	}  }  else {  	for (int i = 0; i < 1003; i++) {  		IntPtr remotePlayer = IntPtr.Zero;  		Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' (int)i * 4)' out remotePlayer);  		if (remotePlayer != IntPtr.Zero) {  			int nameLength = 0;  			Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  			if (nameLength < 16) {  				string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  				remotePlayers [i].name = name;  				for (int j = 0; j < player.Length; j++) {  					if (player [j].ToLower () == name.ToLower ()) {  						connected [j] = true;  						break;  					}  				}  			}  			else {  				IntPtr nameExtension = IntPtr.Zero;  				Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  				string name = Memory.ReadString (nameExtension' nameLength);  				remotePlayers [i].name = name;  				for (int j = 0; j < player.Length; j++) {  					if (player [j].ToLower () == name.ToLower ()) {  						connected [j] = true;  						break;  					}  				}  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,IsPlayerConnected,The following statement contains a magic number: if (!reloadData) {  	for (int i = 0; i < 1003; i++) {  		for (int j = 0; j < player.Length; j++) {  			if (remotePlayers [i].name.ToLower () == player [j].ToLower ()) {  				connected [j] = true;  				break;  			}  		}  	}  }  else {  	for (int i = 0; i < 1003; i++) {  		IntPtr remotePlayer = IntPtr.Zero;  		Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' (int)i * 4)' out remotePlayer);  		if (remotePlayer != IntPtr.Zero) {  			int nameLength = 0;  			Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  			if (nameLength < 16) {  				string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  				remotePlayers [i].name = name;  				for (int j = 0; j < player.Length; j++) {  					if (player [j].ToLower () == name.ToLower ()) {  						connected [j] = true;  						break;  					}  				}  			}  			else {  				IntPtr nameExtension = IntPtr.Zero;  				Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  				string name = Memory.ReadString (nameExtension' nameLength);  				remotePlayers [i].name = name;  				for (int j = 0; j < player.Length; j++) {  					if (player [j].ToLower () == name.ToLower ()) {  						connected [j] = true;  						break;  					}  				}  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,IsPlayerConnected,The following statement contains a magic number: for (int i = 0; i < 1003; i++) {  	for (int j = 0; j < player.Length; j++) {  		if (remotePlayers [i].name.ToLower () == player [j].ToLower ()) {  			connected [j] = true;  			break;  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,IsPlayerConnected,The following statement contains a magic number: for (int i = 0; i < 1003; i++) {  	IntPtr remotePlayer = IntPtr.Zero;  	Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' (int)i * 4)' out remotePlayer);  	if (remotePlayer != IntPtr.Zero) {  		int nameLength = 0;  		Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  		if (nameLength < 16) {  			string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  			remotePlayers [i].name = name;  			for (int j = 0; j < player.Length; j++) {  				if (player [j].ToLower () == name.ToLower ()) {  					connected [j] = true;  					break;  				}  			}  		}  		else {  			IntPtr nameExtension = IntPtr.Zero;  			Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  			string name = Memory.ReadString (nameExtension' nameLength);  			remotePlayers [i].name = name;  			for (int j = 0; j < player.Length; j++) {  				if (player [j].ToLower () == name.ToLower ()) {  					connected [j] = true;  					break;  				}  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,IsPlayerConnected,The following statement contains a magic number: for (int i = 0; i < 1003; i++) {  	IntPtr remotePlayer = IntPtr.Zero;  	Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' (int)i * 4)' out remotePlayer);  	if (remotePlayer != IntPtr.Zero) {  		int nameLength = 0;  		Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  		if (nameLength < 16) {  			string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  			remotePlayers [i].name = name;  			for (int j = 0; j < player.Length; j++) {  				if (player [j].ToLower () == name.ToLower ()) {  					connected [j] = true;  					break;  				}  			}  		}  		else {  			IntPtr nameExtension = IntPtr.Zero;  			Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  			string name = Memory.ReadString (nameExtension' nameLength);  			remotePlayers [i].name = name;  			for (int j = 0; j < player.Length; j++) {  				if (player [j].ToLower () == name.ToLower ()) {  					connected [j] = true;  					break;  				}  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,IsPlayerConnected,The following statement contains a magic number: for (int i = 0; i < 1003; i++) {  	IntPtr remotePlayer = IntPtr.Zero;  	Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' (int)i * 4)' out remotePlayer);  	if (remotePlayer != IntPtr.Zero) {  		int nameLength = 0;  		Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  		if (nameLength < 16) {  			string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  			remotePlayers [i].name = name;  			for (int j = 0; j < player.Length; j++) {  				if (player [j].ToLower () == name.ToLower ()) {  					connected [j] = true;  					break;  				}  			}  		}  		else {  			IntPtr nameExtension = IntPtr.Zero;  			Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  			string name = Memory.ReadString (nameExtension' nameLength);  			remotePlayers [i].name = name;  			for (int j = 0; j < player.Length; j++) {  				if (player [j].ToLower () == name.ToLower ()) {  					connected [j] = true;  					break;  				}  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,IsPlayerConnected,The following statement contains a magic number: Memory.ReadMemory<IntPtr> (IntPtr.Add (IntPtr.Add (poolPlayers' 0x2E)' (int)i * 4)' out remotePlayer);  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,IsPlayerConnected,The following statement contains a magic number: if (remotePlayer != IntPtr.Zero) {  	int nameLength = 0;  	Memory.ReadMemory<int> (IntPtr.Add (remotePlayer' 0x20)' out nameLength);  	if (nameLength < 16) {  		string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  		remotePlayers [i].name = name;  		for (int j = 0; j < player.Length; j++) {  			if (player [j].ToLower () == name.ToLower ()) {  				connected [j] = true;  				break;  			}  		}  	}  	else {  		IntPtr nameExtension = IntPtr.Zero;  		Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  		string name = Memory.ReadString (nameExtension' nameLength);  		remotePlayers [i].name = name;  		for (int j = 0; j < player.Length; j++) {  			if (player [j].ToLower () == name.ToLower ()) {  				connected [j] = true;  				break;  			}  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,IsPlayerConnected,The following statement contains a magic number: if (nameLength < 16) {  	string name = Memory.ReadString (IntPtr.Add (remotePlayer' 0xC)' nameLength);  	remotePlayers [i].name = name;  	for (int j = 0; j < player.Length; j++) {  		if (player [j].ToLower () == name.ToLower ()) {  			connected [j] = true;  			break;  		}  	}  }  else {  	IntPtr nameExtension = IntPtr.Zero;  	Memory.ReadMemory<IntPtr> (IntPtr.Add (remotePlayer' 0xC)' out nameExtension);  	string name = Memory.ReadString (nameExtension' nameLength);  	remotePlayers [i].name = name;  	for (int j = 0; j < player.Length; j++) {  		if (player [j].ToLower () == name.ToLower ()) {  			connected [j] = true;  			break;  		}  	}  }  
Magic Number,shadowAPI2,RemotePlayer,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\RemotePlayer.cs,UpdatePlayerData,The following statement contains a magic number: Memory.WriteMemory ((uint)tick' new byte[] {  	0x0'  	0x0'  	0x0'  	0x0  }' (uint)4);  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsLocked,The following statement contains a magic number: if (Memory.ReadMemory<int> (GetVehiclePointer () + 0x4F8' out state))  	if (state == 2)  		return true;  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsLocked,The following statement contains a magic number: if (state == 2)  	return true;  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetSpeed,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	float x = 0;  	float y = 0;  	float z = 0;  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x44)' out x);  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x48)' out y);  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x4C)' out z);  	x = Math.Abs (x);  	y = Math.Abs (y);  	z = Math.Abs (z);  	speed = (float)(Math.Pow ((Math.Pow (x' 2) + Math.Pow (y' 2) + Math.Pow (z' 2))' 0.5) * 1.42 * 100);  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetSpeed,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	float x = 0;  	float y = 0;  	float z = 0;  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x44)' out x);  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x48)' out y);  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x4C)' out z);  	x = Math.Abs (x);  	y = Math.Abs (y);  	z = Math.Abs (z);  	speed = (float)(Math.Pow ((Math.Pow (x' 2) + Math.Pow (y' 2) + Math.Pow (z' 2))' 0.5) * 1.42 * 100);  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetSpeed,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	float x = 0;  	float y = 0;  	float z = 0;  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x44)' out x);  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x48)' out y);  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x4C)' out z);  	x = Math.Abs (x);  	y = Math.Abs (y);  	z = Math.Abs (z);  	speed = (float)(Math.Pow ((Math.Pow (x' 2) + Math.Pow (y' 2) + Math.Pow (z' 2))' 0.5) * 1.42 * 100);  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetSpeed,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	float x = 0;  	float y = 0;  	float z = 0;  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x44)' out x);  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x48)' out y);  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x4C)' out z);  	x = Math.Abs (x);  	y = Math.Abs (y);  	z = Math.Abs (z);  	speed = (float)(Math.Pow ((Math.Pow (x' 2) + Math.Pow (y' 2) + Math.Pow (z' 2))' 0.5) * 1.42 * 100);  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetSpeed,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	float x = 0;  	float y = 0;  	float z = 0;  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x44)' out x);  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x48)' out y);  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x4C)' out z);  	x = Math.Abs (x);  	y = Math.Abs (y);  	z = Math.Abs (z);  	speed = (float)(Math.Pow ((Math.Pow (x' 2) + Math.Pow (y' 2) + Math.Pow (z' 2))' 0.5) * 1.42 * 100);  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetSpeed,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	float x = 0;  	float y = 0;  	float z = 0;  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x44)' out x);  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x48)' out y);  	Memory.ReadMemory<float> (IntPtr.Add (vehicle' 0x4C)' out z);  	x = Math.Abs (x);  	y = Math.Abs (y);  	z = Math.Abs (z);  	speed = (float)(Math.Pow ((Math.Pow (x' 2) + Math.Pow (y' 2) + Math.Pow (z' 2))' 0.5) * 1.42 * 100);  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetSpeed,The following statement contains a magic number: speed = (float)(Math.Pow ((Math.Pow (x' 2) + Math.Pow (y' 2) + Math.Pow (z' 2))' 0.5) * 1.42 * 100);  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetSpeed,The following statement contains a magic number: speed = (float)(Math.Pow ((Math.Pow (x' 2) + Math.Pow (y' 2) + Math.Pow (z' 2))' 0.5) * 1.42 * 100);  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetSpeed,The following statement contains a magic number: speed = (float)(Math.Pow ((Math.Pow (x' 2) + Math.Pow (y' 2) + Math.Pow (z' 2))' 0.5) * 1.42 * 100);  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetSpeed,The following statement contains a magic number: speed = (float)(Math.Pow ((Math.Pow (x' 2) + Math.Pow (y' 2) + Math.Pow (z' 2))' 0.5) * 1.42 * 100);  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetSpeed,The following statement contains a magic number: speed = (float)(Math.Pow ((Math.Pow (x' 2) + Math.Pow (y' 2) + Math.Pow (z' 2))' 0.5) * 1.42 * 100);  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetSpeed,The following statement contains a magic number: speed = (float)(Math.Pow ((Math.Pow (x' 2) + Math.Pow (y' 2) + Math.Pow (z' 2))' 0.5) * 1.42 * 100);  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	switch (GetModelId ()) {  	case 448:  	case 581:  	case 522:  	case 461:  	case 523:  	case 463:  	case 586:  	case 471:  		isBike = true;  		break;  	}  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	switch (GetModelId ()) {  	case 448:  	case 581:  	case 522:  	case 461:  	case 523:  	case 463:  	case 586:  	case 471:  		isBike = true;  		break;  	}  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	switch (GetModelId ()) {  	case 448:  	case 581:  	case 522:  	case 461:  	case 523:  	case 463:  	case 586:  	case 471:  		isBike = true;  		break;  	}  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	switch (GetModelId ()) {  	case 448:  	case 581:  	case 522:  	case 461:  	case 523:  	case 463:  	case 586:  	case 471:  		isBike = true;  		break;  	}  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	switch (GetModelId ()) {  	case 448:  	case 581:  	case 522:  	case 461:  	case 523:  	case 463:  	case 586:  	case 471:  		isBike = true;  		break;  	}  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	switch (GetModelId ()) {  	case 448:  	case 581:  	case 522:  	case 461:  	case 523:  	case 463:  	case 586:  	case 471:  		isBike = true;  		break;  	}  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	switch (GetModelId ()) {  	case 448:  	case 581:  	case 522:  	case 461:  	case 523:  	case 463:  	case 586:  	case 471:  		isBike = true;  		break;  	}  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	switch (GetModelId ()) {  	case 448:  	case 581:  	case 522:  	case 461:  	case 523:  	case 463:  	case 586:  	case 471:  		isBike = true;  		break;  	}  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,The following statement contains a magic number: switch (GetModelId ()) {  case 448:  case 581:  case 522:  case 461:  case 523:  case 463:  case 586:  case 471:  	isBike = true;  	break;  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,The following statement contains a magic number: switch (GetModelId ()) {  case 448:  case 581:  case 522:  case 461:  case 523:  case 463:  case 586:  case 471:  	isBike = true;  	break;  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,The following statement contains a magic number: switch (GetModelId ()) {  case 448:  case 581:  case 522:  case 461:  case 523:  case 463:  case 586:  case 471:  	isBike = true;  	break;  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,The following statement contains a magic number: switch (GetModelId ()) {  case 448:  case 581:  case 522:  case 461:  case 523:  case 463:  case 586:  case 471:  	isBike = true;  	break;  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,The following statement contains a magic number: switch (GetModelId ()) {  case 448:  case 581:  case 522:  case 461:  case 523:  case 463:  case 586:  case 471:  	isBike = true;  	break;  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,The following statement contains a magic number: switch (GetModelId ()) {  case 448:  case 581:  case 522:  case 461:  case 523:  case 463:  case 586:  case 471:  	isBike = true;  	break;  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,The following statement contains a magic number: switch (GetModelId ()) {  case 448:  case 581:  case 522:  case 461:  case 523:  case 463:  case 586:  case 471:  	isBike = true;  	break;  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,The following statement contains a magic number: switch (GetModelId ()) {  case 448:  case 581:  case 522:  case 461:  case 523:  case 463:  case 586:  case 471:  	isBike = true;  	break;  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsEngineEnabled,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	byte state = 0;  	Memory.ReadMemory<byte> (IntPtr.Add (vehicle' 0x428)' out state);  	if (state == 24 || state == 56 || state == 88 || state == 120)  		enabled = true;  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsEngineEnabled,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	byte state = 0;  	Memory.ReadMemory<byte> (IntPtr.Add (vehicle' 0x428)' out state);  	if (state == 24 || state == 56 || state == 88 || state == 120)  		enabled = true;  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsEngineEnabled,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	byte state = 0;  	Memory.ReadMemory<byte> (IntPtr.Add (vehicle' 0x428)' out state);  	if (state == 24 || state == 56 || state == 88 || state == 120)  		enabled = true;  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsEngineEnabled,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	byte state = 0;  	Memory.ReadMemory<byte> (IntPtr.Add (vehicle' 0x428)' out state);  	if (state == 24 || state == 56 || state == 88 || state == 120)  		enabled = true;  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsEngineEnabled,The following statement contains a magic number: if (state == 24 || state == 56 || state == 88 || state == 120)  	enabled = true;  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsEngineEnabled,The following statement contains a magic number: if (state == 24 || state == 56 || state == 88 || state == 120)  	enabled = true;  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsEngineEnabled,The following statement contains a magic number: if (state == 24 || state == 56 || state == 88 || state == 120)  	enabled = true;  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsEngineEnabled,The following statement contains a magic number: if (state == 24 || state == 56 || state == 88 || state == 120)  	enabled = true;  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetModelName,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	int modelid = GetModelId ();  	if (modelid > 400 && modelid < 611) {  		vehicleMame = vehicleNames [modelid - 400];  	}  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetModelName,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	int modelid = GetModelId ();  	if (modelid > 400 && modelid < 611) {  		vehicleMame = vehicleNames [modelid - 400];  	}  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetModelName,The following statement contains a magic number: if ((vehicle = GetVehiclePointer ()) != IntPtr.Zero) {  	int modelid = GetModelId ();  	if (modelid > 400 && modelid < 611) {  		vehicleMame = vehicleNames [modelid - 400];  	}  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetModelName,The following statement contains a magic number: if (modelid > 400 && modelid < 611) {  	vehicleMame = vehicleNames [modelid - 400];  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetModelName,The following statement contains a magic number: if (modelid > 400 && modelid < 611) {  	vehicleMame = vehicleNames [modelid - 400];  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetModelName,The following statement contains a magic number: if (modelid > 400 && modelid < 611) {  	vehicleMame = vehicleNames [modelid - 400];  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetModelName,The following statement contains a magic number: vehicleMame = vehicleNames [modelid - 400];  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetModelNameByModelId,The following statement contains a magic number: if (modelId > 400 && modelId < 611) {  	vehicleName = vehicleNames [modelId - 400];  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetModelNameByModelId,The following statement contains a magic number: if (modelId > 400 && modelId < 611) {  	vehicleName = vehicleNames [modelId - 400];  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetModelNameByModelId,The following statement contains a magic number: if (modelId > 400 && modelId < 611) {  	vehicleName = vehicleNames [modelId - 400];  }  
Magic Number,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,GetModelNameByModelId,The following statement contains a magic number: vehicleName = vehicleNames [modelId - 400];  
Magic Number,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,City,The following statement contains a magic number: for (int i = 0; i < cityName.Count; i++) {  	string name = cityName [i];  	float[] pos = cityPosition [i];  	if (x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]) {  		city = name;  	}  }  
Magic Number,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,City,The following statement contains a magic number: for (int i = 0; i < cityName.Count; i++) {  	string name = cityName [i];  	float[] pos = cityPosition [i];  	if (x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]) {  		city = name;  	}  }  
Magic Number,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,City,The following statement contains a magic number: for (int i = 0; i < cityName.Count; i++) {  	string name = cityName [i];  	float[] pos = cityPosition [i];  	if (x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]) {  		city = name;  	}  }  
Magic Number,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,City,The following statement contains a magic number: for (int i = 0; i < cityName.Count; i++) {  	string name = cityName [i];  	float[] pos = cityPosition [i];  	if (x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]) {  		city = name;  	}  }  
Magic Number,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,City,The following statement contains a magic number: if (x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]) {  	city = name;  }  
Magic Number,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,City,The following statement contains a magic number: if (x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]) {  	city = name;  }  
Magic Number,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,City,The following statement contains a magic number: if (x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]) {  	city = name;  }  
Magic Number,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,City,The following statement contains a magic number: if (x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]) {  	city = name;  }  
Magic Number,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,Zone,The following statement contains a magic number: for (int i = 0; i < zoneName.Count; i++) {  	string name = zoneName [i];  	float[] pos = zonePosition [i];  	if (x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]) {  		zone = name;  		break;  	}  }  
Magic Number,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,Zone,The following statement contains a magic number: for (int i = 0; i < zoneName.Count; i++) {  	string name = zoneName [i];  	float[] pos = zonePosition [i];  	if (x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]) {  		zone = name;  		break;  	}  }  
Magic Number,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,Zone,The following statement contains a magic number: for (int i = 0; i < zoneName.Count; i++) {  	string name = zoneName [i];  	float[] pos = zonePosition [i];  	if (x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]) {  		zone = name;  		break;  	}  }  
Magic Number,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,Zone,The following statement contains a magic number: for (int i = 0; i < zoneName.Count; i++) {  	string name = zoneName [i];  	float[] pos = zonePosition [i];  	if (x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]) {  		zone = name;  		break;  	}  }  
Magic Number,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,Zone,The following statement contains a magic number: if (x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]) {  	zone = name;  	break;  }  
Magic Number,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,Zone,The following statement contains a magic number: if (x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]) {  	zone = name;  	break;  }  
Magic Number,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,Zone,The following statement contains a magic number: if (x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]) {  	zone = name;  	break;  }  
Magic Number,shadowAPI2,ZoneManager,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\ZoneManager.cs,Zone,The following statement contains a magic number: if (x >= pos [0] && y >= pos [1] && z >= pos [2] && x <= pos [3] && y <= pos [4] && z <= pos [5]) {  	zone = name;  	break;  }  
Missing Default,shadowAPI2,Vehicle,C:\repos\shadowIdeas_shadowAPI2\shadowAPI2\Vehicle.cs,IsBike,The following switch statement is missing a default case: switch (GetModelId ()) {  case 448:  case 581:  case 522:  case 461:  case 523:  case 463:  case 586:  case 471:  	isBike = true;  	break;  }  
