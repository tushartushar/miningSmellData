Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,DbUp.Support.SqlServer,SqlScriptExecutor,C:\repos\DbUp_DbUp\src\DbUp\Support\SqlServer\SqlScriptExecutor.cs,SqlScriptExecutor,The method has 5 parameters. Parameters: connectionManagerFactory' log' schema' variablesEnabled' scriptPreprocessors
Long Identifier,DbUp.Engine.Transactions,SingleTrasactionStrategy,C:\repos\DbUp_DbUp\src\DbUp\Engine\Transactions\SingleTrasactionStrategy.cs,,The length of the parameter executedScriptsListBeforeExecution is 34.
Long Statement,DbUp.Builder,UpgradeConfiguration,C:\repos\DbUp_DbUp\src\DbUp\Builder\UpgradeConfiguration.cs,Validate,The length of the statement  "            if (Log == null) throw new ArgumentException("A log is required to build a database upgrader. Please use one of the logging extension methods"); " is 144.
Long Statement,DbUp.Builder,UpgradeConfiguration,C:\repos\DbUp_DbUp\src\DbUp\Builder\UpgradeConfiguration.cs,Validate,The length of the statement  "            if (Journal == null) throw new ArgumentException("A journal is required. Please use one of the Journal extension methods before calling Build()"); " is 146.
Long Statement,DbUp.Builder,UpgradeConfiguration,C:\repos\DbUp_DbUp\src\DbUp\Builder\UpgradeConfiguration.cs,Validate,The length of the statement  "            if (ScriptProviders.Count == 0) throw new ArgumentException("No script providers were added. Please use one of the WithScripts extension methods before calling Build()"); " is 170.
Long Statement,DbUp.Builder,UpgradeConfiguration,C:\repos\DbUp_DbUp\src\DbUp\Builder\UpgradeConfiguration.cs,Validate,The length of the statement  "            if (ConnectionManager == null) throw new ArgumentException("The ConnectionManager is null. What do you expect to upgrade?"); " is 124.
Long Statement,DbUp.Engine.Preprocessors,VariableSubstitutionSqlParser,C:\repos\DbUp_DbUp\src\DbUp\Engine\Preprocessors\VariableSubstitutionSqlParser.cs,ReplaceVariables,The length of the statement  "                    throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' "Variable {0} has no value defined"' name)); " is 122.
Long Statement,DbUp.Engine,UpgradeEngine,C:\repos\DbUp_DbUp\src\DbUp\Engine\UpgradeEngine.cs,GetScriptsToExecuteInsideOperation,The length of the statement  "            var allScripts = configuration.ScriptProviders.SelectMany(scriptProvider => scriptProvider.GetScripts(configuration.ConnectionManager)); " is 136.
Long Statement,DbUp.Helpers,AdHocSqlRunner,C:\repos\DbUp_DbUp\src\DbUp\Helpers\AdHocSqlRunner.cs,Preprocess,The length of the statement  "            query = additionalScriptPreprocessors.Aggregate(query' (current' additionalScriptPreprocessor) => additionalScriptPreprocessor.Process(current)); " is 145.
Long Statement,DbUp.ScriptProviders,EmbeddedScriptsProvider,C:\repos\DbUp_DbUp\src\DbUp\ScriptProviders\EmbeddedScriptsProvider.cs,GetScripts,The length of the statement  "                .SelectMany(x => x.ResourceNames.Select(resourceName => SqlScript.FromStream(resourceName' x.Assembly.GetManifestResourceStream(resourceName)' this.encoding))) " is 159.
Long Statement,DbUp.ScriptProviders,EmbeddedScriptAndCodeProvider,C:\repos\DbUp_DbUp\src\DbUp\ScriptProviders\EmbeddedScriptAndCodeProvider.cs,ScriptsFromScriptClasses,The length of the statement  "                .Select(s => (SqlScript)new LazySqlScript(s.FullName + ".cs"' () => ((IScript)Activator.CreateInstance(s)).ProvideScript(dbCommandFactory))) " is 140.
Long Statement,DbUp.Support.Firebird,FirebirdTableJournal,C:\repos\DbUp_DbUp\src\DbUp\Support\Firebird\FirebirdTableJournal.cs,GetExecutedScripts,The length of the statement  "                log().WriteInformation(string.Format("The {0} table could not be found. The database is assumed to be at version 0."' tableName)); " is 130.
Long Statement,DbUp.Support.Firebird,FirebirdTableJournal,C:\repos\DbUp_DbUp\src\DbUp\Support\Firebird\FirebirdTableJournal.cs,VerifyTableExistsCommand,The length of the statement  "            command.CommandText = string.Format("select 1 from RDB$RELATIONS where RDB$SYSTEM_FLAG = 0 and RDB$RELATION_NAME = '{0}'"' tableName); " is 134.
Long Statement,DbUp.Support.MySql,MySqlITableJournal,C:\repos\DbUp_DbUp\src\DbUp\Support\MySql\MySqlITableJournal.cs,GetExecutedScripts,The length of the statement  "                log().WriteInformation(string.Format("The {0} table could not be found. The database is assumed to be at version 0."' schemaTableName)); " is 136.
Long Statement,DbUp.Support.MySql,MySqlITableJournal,C:\repos\DbUp_DbUp\src\DbUp\Support\MySql\MySqlITableJournal.cs,StoreExecutedScript,The length of the statement  "                    command.CommandText = string.Format("insert into {0} (ScriptName' Applied) values (@scriptName' @applied)"' schemaTableName); " is 125.
Long Statement,DbUp.Support.MySql,MySqlITableJournal,C:\repos\DbUp_DbUp\src\DbUp\Support\MySql\MySqlITableJournal.cs,VerifyTableExistsCommand,The length of the statement  "                            : string.Format("select 1 from INFORMATION_SCHEMA.TABLES where TABLE_NAME = '{0}' and TABLE_SCHEMA = '{1}'"' tableName' schemaName); " is 132.
Long Statement,DbUp.Support.Postgresql,PostgresqlTableJournal,C:\repos\DbUp_DbUp\src\DbUp\Support\Postgresql\PostgresqlTableJournal.cs,GetExecutedScripts,The length of the statement  "                log().WriteInformation(string.Format("The {0} table could not be found. The database is assumed to be at version 0."' CreateTableName(schema' table))); " is 151.
Long Statement,DbUp.Support.Postgresql,PostgresqlTableJournal,C:\repos\DbUp_DbUp\src\DbUp\Support\Postgresql\PostgresqlTableJournal.cs,StoreExecutedScript,The length of the statement  "                    command.CommandText = string.Format("insert into {0} (ScriptName' Applied) values (@scriptName' @applied)"' CreateTableName(schema' table)); " is 140.
Long Statement,DbUp.Support.Postgresql,PostgresqlTableJournal,C:\repos\DbUp_DbUp\src\DbUp\Support\Postgresql\PostgresqlTableJournal.cs,VerifyTableExistsCommand,The length of the statement  "                            : string.Format("select 1 from INFORMATION_SCHEMA.TABLES where TABLE_NAME = '{0}' and TABLE_SCHEMA = '{1}'"' tableName' schemaName); " is 132.
Long Statement,DbUp.Support.SqlServer,SqlScriptExecutor,C:\repos\DbUp_DbUp\src\DbUp\Support\SqlServer\SqlScriptExecutor.cs,Execute,The length of the statement  "                log().WriteError("Script block number: {0}; Block line {1}; Procedure: {2}; Message Number: {3}; Message: {4}"' index' sqlException.LineNumber' sqlException.Procedure' sqlException.Number' sqlException.Message); " is 211.
Long Statement,DbUp.Support.SqlServer,SqlScriptExecutor,C:\repos\DbUp_DbUp\src\DbUp\Support\SqlServer\SqlScriptExecutor.cs,Execute,The length of the statement  "                log().WriteError("Script block number: {0}; Error code {1}; Message: {2}"' index' sqlException.ErrorCode' sqlException.Message); " is 128.
Long Statement,DbUp.Support.SqlServer,SqlTableJournal,C:\repos\DbUp_DbUp\src\DbUp\Support\SqlServer\SqlTableJournal.cs,GetExecutedScripts,The length of the statement  "                log().WriteInformation(string.Format("The {0} table could not be found. The database is assumed to be at version 0."' CreateTableName(schema' table))); " is 151.
Long Statement,DbUp.Support.SqlServer,SqlTableJournal,C:\repos\DbUp_DbUp\src\DbUp\Support\SqlServer\SqlTableJournal.cs,StoreExecutedScript,The length of the statement  "                    command.CommandText = string.Format("insert into {0} (ScriptName' Applied) values (@scriptName' @applied)"' CreateTableName(schema' table)); " is 140.
Long Statement,DbUp.Support.SqlServer,SqlTableJournal,C:\repos\DbUp_DbUp\src\DbUp\Support\SqlServer\SqlTableJournal.cs,VerifyTableExistsCommand,The length of the statement  "                            : string.Format("select 1 from INFORMATION_SCHEMA.TABLES where TABLE_NAME = '{0}' and TABLE_SCHEMA = '{1}'"' tableName' schemaName); " is 132.
Long Statement,DbUp.Support.SQLite,SQLiteTableJournal,C:\repos\DbUp_DbUp\src\DbUp\Support\SQLite\SQLiteTableJournal.cs,VerifyTableExistsCommand,The length of the statement  "            command.CommandText = string.Format("SELECT count(*) FROM sqlite_master WHERE type = 'table' AND name = '{0}' COLLATE NOCASE"' tableName); " is 138.
Empty Catch Block,DbUp.Helpers,TemporarySqlDatabase,C:\repos\DbUp_DbUp\src\DbUp\Helpers\TemporarySqlDatabase.cs,Create,The method has an empty catch block.
Magic Number,DbUp.Support.SqlServer,SqlObjectParser,C:\repos\DbUp_DbUp\src\DbUp\Support\SqlServer\SqlObjectParser.cs,QuoteSqlObjectName,The following statement contains a magic number: const int SqlSysnameLength = 128;
Magic Number,DbUp.Support.SqlServer,SqlObjectParser,C:\repos\DbUp_DbUp\src\DbUp\Support\SqlServer\SqlObjectParser.cs,QuoteSqlObjectName,The following statement contains a magic number: if (objectName.StartsWith("[") && objectName.EndsWith("]") && objectName.Count(x => x == ']') % 2 == 1)                  return objectName;
Magic Number,DbUp.Support.SqlServer,SqlScriptExecutor,C:\repos\DbUp_DbUp\src\DbUp\Support\SqlServer\SqlScriptExecutor.cs,Log,The following statement contains a magic number: do              {                  var names = new List<string>();                  for (int i = 0; i < reader.FieldCount; i++)                  {                      names.Add(reader.GetName(i));                  }                    if (names.Count == 0)                      return;                    var lines = new List<List<string>>();                  while (reader.Read())                  {                      var line = new List<string>();                      for (int i = 0; i < reader.FieldCount; i++)                      {                          var value = reader.GetValue(i);                          value = value == DBNull.Value ? null : value.ToString();                          line.Add((string) value);                      }                      lines.Add(line);                  }                    string format = "";                  int totalLength = 0;                  for (int i = 0; i < reader.FieldCount; i++)                  {                      int maxLength = (lines.Count == 0 ? 0 : lines.Max(l => (l[i] ?? "").Length)) + 2;                      format += " {" + i + "' " + maxLength + "} |";                      totalLength += (maxLength + 3);                  }                  format = "|" + format;                  totalLength += 1;                    log().WriteInformation(new string('-'' totalLength));                  log().WriteInformation(format' names.ToArray());                  log().WriteInformation(new string('-'' totalLength));                  foreach (var line in lines)                  {                      log().WriteInformation(format' line.ToArray());                  }                  log().WriteInformation(new string('-'' totalLength));                  log().WriteInformation("\r\n");              } while (reader.NextResult());
Magic Number,DbUp.Support.SqlServer,SqlScriptExecutor,C:\repos\DbUp_DbUp\src\DbUp\Support\SqlServer\SqlScriptExecutor.cs,Log,The following statement contains a magic number: do              {                  var names = new List<string>();                  for (int i = 0; i < reader.FieldCount; i++)                  {                      names.Add(reader.GetName(i));                  }                    if (names.Count == 0)                      return;                    var lines = new List<List<string>>();                  while (reader.Read())                  {                      var line = new List<string>();                      for (int i = 0; i < reader.FieldCount; i++)                      {                          var value = reader.GetValue(i);                          value = value == DBNull.Value ? null : value.ToString();                          line.Add((string) value);                      }                      lines.Add(line);                  }                    string format = "";                  int totalLength = 0;                  for (int i = 0; i < reader.FieldCount; i++)                  {                      int maxLength = (lines.Count == 0 ? 0 : lines.Max(l => (l[i] ?? "").Length)) + 2;                      format += " {" + i + "' " + maxLength + "} |";                      totalLength += (maxLength + 3);                  }                  format = "|" + format;                  totalLength += 1;                    log().WriteInformation(new string('-'' totalLength));                  log().WriteInformation(format' names.ToArray());                  log().WriteInformation(new string('-'' totalLength));                  foreach (var line in lines)                  {                      log().WriteInformation(format' line.ToArray());                  }                  log().WriteInformation(new string('-'' totalLength));                  log().WriteInformation("\r\n");              } while (reader.NextResult());
Magic Number,DbUp.Support.SQLite,SQLiteObjectParser,C:\repos\DbUp_DbUp\src\DbUp\Support\SQLite\SQLiteObjectParser.cs,QuoteSqlObjectName,The following statement contains a magic number: if (objectName.StartsWith("[") && objectName.EndsWith("]") && objectName.Count(x => x == ']') % 2 == 1)                  return objectName;
