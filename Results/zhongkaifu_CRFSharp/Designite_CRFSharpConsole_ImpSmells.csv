Implementation smell,Namespace,Class,File,Method,Description
Long Method,CRFSharpConsole,DecoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\DecoderConsole.cs,Run,The method has 60 lines of code.
Long Method,CRFSharpConsole,DecoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\DecoderConsole.cs,Decode,The method has 86 lines of code.
Long Method,CRFSharpConsole,EncoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\EncoderConsole.cs,Run,The method has 99 lines of code.
Complex Method,CRFSharpConsole,DecoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\DecoderConsole.cs,Run,Cyclomatic complexity of the method is 35
Complex Method,CRFSharpConsole,DecoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\DecoderConsole.cs,Decode,Cyclomatic complexity of the method is 7
Complex Method,CRFSharpConsole,DecoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\DecoderConsole.cs,OutputRawResultToFile,Cyclomatic complexity of the method is 9
Complex Method,CRFSharpConsole,EncoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\EncoderConsole.cs,Run,Cyclomatic complexity of the method is 56
Complex Method,CRFSharpConsole,Program,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\Program.cs,Main,Cyclomatic complexity of the method is 10
Long Parameter List,CRFSharpConsole,DecoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\DecoderConsole.cs,OutputRawResultToFile,The method has 4 parameters.
Long Statement,CRFSharpConsole,DecoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\DecoderConsole.cs,Usage,The length of the statement  "	Console.WriteLine ("         CRFSharp_Console -decode -modelfile ner.model -inputfile ner_test.txt -outputfile ner_test_result.txt -outputsegfile ner_test_result_seg.txt -thread 4 -nbest 3 -prob 2 -maxword 500"); " is 212.
Long Statement,CRFSharpConsole,EncoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\EncoderConsole.cs,Run,The length of the statement  "	if (options.strTemplateFileName == null || options.strEncodedModelFileName == null || options.strTrainingCorpus == null) { " is 122.
Long Statement,CRFSharpConsole,EncoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\EncoderConsole.cs,Usage,The length of the statement  "	Console.WriteLine ("\t-minfeafreq <int> : Any feature's frequency is less than the value will be dropped. Default value is 2"); " is 127.
Long Statement,CRFSharpConsole,EncoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\EncoderConsole.cs,Usage,The length of the statement  "	Console.WriteLine ("\t-mindiff <float> : If diff is less than the value consecutive 3 times' the encoding will be ended. Default value is 0.0001"); " is 147.
Long Statement,CRFSharpConsole,EncoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\EncoderConsole.cs,Usage,The length of the statement  "	Console.WriteLine ("\t-slotrate <float> : the maximum slot usage rate threshold when building feature set. it is ranged in (0.0' 1.0). the higher value takes longer time to build feature set' but smaller feature set size.  Default value is 0.95"); " is 247.
Long Statement,CRFSharpConsole,EncoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\EncoderConsole.cs,Usage,The length of the statement  "	Console.WriteLine ("\t-regtype <string> : regularization type (L1 and L2). L1 will generate a sparse model. Default is L2"); " is 124.
Long Statement,CRFSharpConsole,EncoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\EncoderConsole.cs,Usage,The length of the statement  "	Console.WriteLine ("\t-hugelexmem <int> : build lexical dictionary in huge mode and shrinking start when used memory reaches this value. This mode can build more lexical items' but slowly. Value ranges [1'100] and default is disabled."); " is 237.
Long Statement,CRFSharpConsole,EncoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\EncoderConsole.cs,Usage,The length of the statement  "	Console.WriteLine ("\t-vq <int> : model vector quantization value (0/1). The model size will be reduced to 1/4 original model size. Default value is 0"); " is 153.
Long Statement,CRFSharpConsole,EncoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\EncoderConsole.cs,Usage,The length of the statement  "	Console.WriteLine ("\t               2 - full debug information output' both raw lexical dictionary and detailed encoded information for each iteration"); " is 154.
Long Statement,CRFSharpConsole,EncoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\EncoderConsole.cs,Usage,The length of the statement  "	Console.WriteLine ("Note: either -maxiter reaches setting value or -mindiff reaches setting value in consecutive three times' the training process will be finished and saved encoded model."); " is 191.
Long Statement,CRFSharpConsole,EncoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\EncoderConsole.cs,Usage,The length of the statement  "	Console.WriteLine ("Note: -hugelexmem is only used for special task' and it is not recommended for common task' since it costs lots of time for memory shrink in order to load more lexical features into memory"); " is 211.
Long Statement,CRFSharpConsole,EncoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\EncoderConsole.cs,Usage,The length of the statement  "	Console.WriteLine ("\tCRFSharpConsole.exe -encode -template template.1 -trainfile ner.train -modelfile ner.model -maxiter 100 -minfeafreq 1 -mindiff 0.0001 -thread 4 -debug 2 -vq 1 -slotrate 0.95"); " is 198.
Empty Catch Block,CRFSharpConsole,EncoderConsole,D:\newReposJune17\zhongkaifu_CRFSharp\CRFSharpConsole\EncoderConsole.cs,Run,The method has an empty catch block.
