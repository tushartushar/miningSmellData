Implementation smell,Namespace,Class,File,Method,Description
Long Method,CRFSharp,LBFGS,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\LBFGS.cs,lbfgs_optimize,The method has 124 lines of code.
Long Method,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcstep,The method has 211 lines of code.
Long Method,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcsrch,The method has 137 lines of code.
Complex Method,CRFSharp,BaseModel,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\base\BaseModel.cs,get_index,Cyclomatic complexity of the method is 12
Complex Method,CRFSharp,Tagger,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\base\Tagger.cs,viterbi,Cyclomatic complexity of the method is 8
Complex Method,CRFSharp,DecoderTagger,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\decoder\DecoderTagger.cs,parse,Cyclomatic complexity of the method is 8
Complex Method,CRFSharp,DecoderTagger,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\decoder\DecoderTagger.cs,buildFeatures,Cyclomatic complexity of the method is 10
Complex Method,CRFSharp,CRFEncoderThread,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\CRFEncoderThread.cs,Init,Cyclomatic complexity of the method is 9
Complex Method,CRFSharp,EncoderTagger,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\EncoderTagger.cs,gradient,Cyclomatic complexity of the method is 8
Complex Method,CRFSharp,HugeFeatureLexicalDict,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\HugeFeatureLexicalDict.cs,GetOrAddId,Cyclomatic complexity of the method is 11
Complex Method,CRFSharp,LBFGS,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\LBFGS.cs,lbfgs_optimize,Cyclomatic complexity of the method is 12
Complex Method,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcstep,Cyclomatic complexity of the method is 22
Complex Method,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcsrch,Cyclomatic complexity of the method is 17
Complex Method,CRFSharp,ModelWriter,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\ModelWriter.cs,BuildFeatureSetIntoIndex,Cyclomatic complexity of the method is 9
Long Parameter List,CRFSharp,LBFGS,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\LBFGS.cs,ddot_,The method has 5 parameters. Parameters: size' dx' dx_idx' dy' dy_idx
Long Parameter List,CRFSharp,LBFGS,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\LBFGS.cs,ddot_,The method has 5 parameters. Parameters: size' dx' dx_idx' dy' dy_idx
Long Parameter List,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcstep,The method has 13 parameters. Parameters: stx' fx' dx' sty' fy' dy' stp' fp' dp' brackt' stpmin' stpmax' info
Long Parameter List,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,ddot_,The method has 5 parameters. Parameters: size' dx' dx_idx' dy' dy_idx
Long Parameter List,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcsrch,The method has 9 parameters. Parameters: x' f' g' s' s_idx' stp' info' nfev' wa
Long Identifier,CRFSharp,ModelWriter,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\ModelWriter.cs,BuildFeatureSetIntoIndex,The length of the parameter filename_featureset_raw_format is 30.
Long Statement,CRFSharp,HugeFeatureLexicalDict,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\HugeFeatureLexicalDict.cs,GetOrAddId,The length of the statement  "                        Console.WriteLine("[Feature Size:{0}' TimeSpan:{1}' Next Shrink Rate:{2}%]"' arrayFeatureFreqSize' ts' SHRINK_AVALI_MEM_LOAD); " is 126.
Long Statement,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcsrch,The length of the statement  "                    Console.WriteLine("MCSRCH warning: Rounding errors prevent further progress.There may not be a step which satisfies the sufficient decrease and curvature conditions. Tolerances may be too small."); " is 197.
Long Statement,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcsrch,The length of the statement  "                    Console.WriteLine("stp:{0}' lb3_1_stpmin:{1}' f:{2}' ftest1:{3}' dg:{4}' dgtest:{5}"' stp' lb3_1_stpmin' f' ftest1' dg' dgtest); " is 128.
Long Statement,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcsrch,The length of the statement  "                    Console.WriteLine("MCSRCH warning: More than {0} function evaluations were required at the present iteration."' maxfev); " is 120.
Complex Conditional,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcstep,The conditional expression  "brackt == true && ((stp <= Math.Min(stx' sty) || stp >= Math.Max(stx' sty)) ||                              dx * (stp - stx) >= 0.0 || stpmax < stpmin)"  is complex.
Complex Conditional,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcsrch,The conditional expression  "brackt && ((stp <= stmin || stp >= stmax) || infoc == 0)"  is complex.
Complex Conditional,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcsrch,The conditional expression  "(brackt && ((stp <= stmin || stp >= stmax) ||                              nfev >= maxfev - 1 || infoc == 0)) ||                  (brackt && (stmax - stmin <= xtol * stmax))"  is complex.
Magic Number,CRFSharp,BaseModel,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\base\BaseModel.cs,get_index,The following statement contains a magic number: row = 10 * row + (c - '0');
Magic Number,CRFSharp,Utils,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\base\Utils.cs,heap_insert,The following statement contains a magic number: H.elem_ptr_list[i] = H.elem_ptr_list[i / 2];
Magic Number,CRFSharp,Utils,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\base\Utils.cs,heap_insert,The following statement contains a magic number: i /= 2;
Magic Number,CRFSharp,Utils,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\base\Utils.cs,heap_insert,The following statement contains a magic number: i != 1 && H.elem_ptr_list[i / 2].fx > qe.fx
Magic Number,CRFSharp,Utils,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\base\Utils.cs,heap_delete_min,The following statement contains a magic number: int i = 1' ci = 2;
Magic Number,CRFSharp,Utils,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\base\Utils.cs,heap_delete_min,The following statement contains a magic number: ci *= 2;
Magic Number,CRFSharp,DecoderTagger,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\decoder\DecoderTagger.cs,InitializeFeatureCache,The following statement contains a magic number: i < crf_max_word_num * 2
Magic Number,CRFSharp,DecoderTagger,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\decoder\DecoderTagger.cs,termbuf_build,The following statement contains a magic number: switch (vlevel_)                  {                      case 0:                          term_buf.weight_[i] = 0.0;                          break;                      case 2:                          term_buf.weight_[i] = prob(i);                          break;                  }
Magic Number,CRFSharp,HugeFeatureLexicalDict,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\HugeFeatureLexicalDict.cs,HugeFeatureLexicalDict,The following statement contains a magic number: arrayFeatureFreq = new VarBigArray<FeatureFreq>(1024 * 1024);
Magic Number,CRFSharp,HugeFeatureLexicalDict,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\HugeFeatureLexicalDict.cs,HugeFeatureLexicalDict,The following statement contains a magic number: arrayFeatureFreq = new VarBigArray<FeatureFreq>(1024 * 1024);
Magic Number,CRFSharp,HugeFeatureLexicalDict,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\HugeFeatureLexicalDict.cs,GetOrAddId,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,CRFSharp,HugeFeatureLexicalDict,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\HugeFeatureLexicalDict.cs,GetOrAddId,The following statement contains a magic number: oldValue % 10000000 == 0
Magic Number,CRFSharp,HugeFeatureLexicalDict,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\HugeFeatureLexicalDict.cs,GetOrAddId,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,CRFSharp,HugeFeatureLexicalDict,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\HugeFeatureLexicalDict.cs,GetOrAddId,The following statement contains a magic number: SHRINK_AVALI_MEM_LOAD = 100;
Magic Number,CRFSharp,HugeFeatureLexicalDict,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\HugeFeatureLexicalDict.cs,GetOrAddId,The following statement contains a magic number: SHRINK_AVALI_MEM_LOAD >= 100
Magic Number,CRFSharp,LBFGS,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\LBFGS.cs,optimize,The following statement contains a magic number: const long msize = 5;
Magic Number,CRFSharp,LBFGS,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\LBFGS.cs,optimize,The following statement contains a magic number: w = new FixedBigArray<double>(size * (2 * msize + 1) + 2 * msize' 1);
Magic Number,CRFSharp,LBFGS,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\LBFGS.cs,optimize,The following statement contains a magic number: w = new FixedBigArray<double>(size * (2 * msize + 1) + 2 * msize' 1);
Magic Number,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcstep,The following statement contains a magic number: theta = (fx - fp) * 3 / (stp - stx) + dx + dp;
Magic Number,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcstep,The following statement contains a magic number: stpq = stx + dx / ((fx - fp) /                                       (stp - stx) + dx) / 2 * (stp - stx);
Magic Number,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcstep,The following statement contains a magic number: d1 = stx + (sty - stx) * 0.66;
Magic Number,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcsrch,The following statement contains a magic number: info = 6;
Magic Number,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcsrch,The following statement contains a magic number: info = 5;
Magic Number,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcsrch,The following statement contains a magic number: info = 4;
Magic Number,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcsrch,The following statement contains a magic number: info = 3;
Magic Number,CRFSharp,Mcsrch,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\Mcsrch.cs,mcsrch,The following statement contains a magic number: info = 2;
Magic Number,CRFSharp,ModelWriter,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\ModelWriter.cs,ReadAllRecords,The following statement contains a magic number: Parallel.For(0' trainCorpusList.Count' parallelOption' i =>              {                  var _x = new EncoderTagger(this);                  if (_x.GenerateFeature(trainCorpusList[i]) == false)                  {                      Logger.WriteLine("Load a training sentence failed' skip it.");                  }                  else                  {                      var oldValue = Interlocked.Increment(ref arrayEncoderTaggerSize) - 1;                      arrayEncoderTagger[oldValue] = _x;                        if (oldValue % 10000 == 0)                      {                          //Show current progress on console                          Console.Write("{0}..."' oldValue);                      }                  }              });
Magic Number,CRFSharp,ModelWriter,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\ModelWriter.cs,SaveFeatureWeight,The following statement contains a magic number: int vqSize = 256;
Magic Number,CRFSharp,DefaultFeatureLexicalDict,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\encoder\DefaultFeatureLexicalDict.cs,DefaultFeatureLexicalDict,The following statement contains a magic number: featureset_dict_ = new BTreeDictionary<string' FeatureIdPair>(StringComparer.Ordinal' 128);
Missing Default,CRFSharp,DecoderTagger,D:\research\architectureSmells\repos\zhongkaifu_CRFSharp\Core\CRFSharp\decoder\DecoderTagger.cs,termbuf_build,The following switch statement is missing a default case: switch (vlevel_)                  {                      case 0:                          term_buf.weight_[i] = 0.0;                          break;                      case 2:                          term_buf.weight_[i] = prob(i);                          break;                  }
