Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Neo.IronLua,LuaTraceLineExceptionEventArgs,C:\repos\neolithos_neolua\NeoLua.Dbg\LuaTraceLineDebugger.cs,LuaTraceLineExceptionEventArgs,The method has 5 parameters. Parameters: name' sourceFile' line' scopeCallback' exception
Long Parameter List,Neo.IronLua,TraceCallback,C:\repos\neolithos_neolua\NeoLua.Dbg\LuaTraceLineDebugger.cs,OnTraceEvent,The method has 7 parameters. Parameters: kind' name' sourceFileName' sourceSpan' scopeCallback' payload' customPayload
Long Statement,Neo.IronLua,TraceCallback,C:\repos\neolithos_neolua\NeoLua.Dbg\LuaTraceLineDebugger.cs,OnTraceEvent,The length of the statement  "            traceLineDebugger.OnExceptionUnwind(new LuaTraceLineExceptionEventArgs(name' sourceFileName' sourceSpan.Start.Line' scopeCallback' (Exception)payload)); " is 152.
Magic Number,Neo.IronLua,TransformAllLambda,C:\repos\neolithos_neolua\NeoLua.Dbg\LuaTraceLineDebugger.cs,ReduceDebugExpressions,The following statement contains a magic number: foreach (Expression expr in expressions)          {            var exprDebugInfo = expr as DebugInfoExpression;            if (current > 0 && exprDebugInfo != null)            {              if (exprDebugInfo.StartLine != 16707566)              {                if (newBlock[current - 1] is DebugInfoExpression)                  newBlock[current - 1] = expr;                else                  newBlock[current++] = expr;              }            }            else              newBlock[current++] = expr;          }
Missing Default,Neo.IronLua,TraceCallback,C:\repos\neolithos_neolua\NeoLua.Dbg\LuaTraceLineDebugger.cs,OnTraceEvent,The following switch statement is missing a default case: switch (kind)          {            case TraceEventKind.ExceptionUnwind:              traceLineDebugger.OnExceptionUnwind(new LuaTraceLineExceptionEventArgs(name' sourceFileName' sourceSpan.Start.Line' scopeCallback' (Exception)payload));              break;            case TraceEventKind.FrameEnter:              traceLineDebugger.OnFrameEnter(new LuaTraceLineEventArgs(name' sourceFileName' sourceSpan.Start.Line' scopeCallback));               break;            case TraceEventKind.FrameExit:              traceLineDebugger.OnFrameExit();              break;            case TraceEventKind.TracePoint:              traceLineDebugger.OnTracePoint(new LuaTraceLineEventArgs(name' sourceFileName' sourceSpan.Start.Line' scopeCallback));              break;          }
