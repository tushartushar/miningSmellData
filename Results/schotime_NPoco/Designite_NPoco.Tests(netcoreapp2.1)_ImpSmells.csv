Implementation smell,Namespace,Class,File,Method,Description
Long Method,NPoco.Tests.Common,SQLLocalDatabase,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\SQLLocalDatabase.cs,RecreateDataBase,The method has 161 lines of code.
Complex Method,NPoco.Tests,ConstructorTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ConstructorTests.cs,GetConfiguredDatabaseType,Cyclomatic complexity of the method is 9
Long Parameter List,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetBytes,The method has 5 parameters. Parameters: ordinal' dataOffset' buffer' bufferOffset' length
Long Parameter List,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetChars,The method has 5 parameters. Parameters: ordinal' dataOffset' buffer' bufferOffset' length
Long Statement,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,SetUp,The length of the statement  "                    Database = new Database(TestDatabase.Connection' new SqlServer2008DatabaseType() { UseOutputClause = false }' IsolationLevel.ReadUncommitted); // Need read uncommitted for the transaction tests " is 193.
Long Statement,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The length of the statement  "            Assert.AreEqual(InMemoryUsers.Count' userCount' "Test User Data not in sync db has " + userCount + " records' but the in memory copy has only " + InMemoryUsers.Count + " records."); " is 181.
Long Statement,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The length of the statement  "            Assert.AreEqual(InMemoryExtraUserInfos.Count' userExtraInfoCount' "Test User Extra Info Data not in sync db has " + userExtraInfoCount + " records' but the in memory copy has only " + InMemoryExtraUserInfos.Count + " records."); " is 228.
Long Statement,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The length of the statement  "            System.Diagnostics.Debug.WriteLine("Created " + userExtraInfoCount + " test extra user info records for the unit tests."); " is 122.
Long Statement,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The length of the statement  "            Assert.AreEqual(InMemoryCompositeObjects.Count' compositeObjectCount' "Test Composite Object Data not in sync db has " + compositeObjectCount + " records' but the in memory copy has only " + InMemoryCompositeObjects.Count + " records."); " is 237.
Long Statement,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The length of the statement  "            System.Diagnostics.Debug.WriteLine("Created " + compositeObjectCount + " test composite PK objects for the unit tests."); " is 121.
Long Statement,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,SetUp,The length of the statement  "            var types = new[] { typeof(User)' typeof(ExtraUserInfo)' typeof(UserWithExtraInfo)' typeof(Usersss)' typeof(House)' typeof(Supervisor) }; " is 137.
Long Statement,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,SetUp,The length of the statement  "                s.Columns.ForceDateTimesToUtcWhere(x => x.GetMemberInfoType() == typeof(DateTime) || x.GetMemberInfoType() == typeof(DateTime?)); " is 129.
Long Statement,NPoco.Tests.Common,InMemoryDatabase,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\InMemoryDatabase.cs,RecreateDataBase,The length of the statement  "            cmd.CommandText = "CREATE TABLE Users(UserId INTEGER PRIMARY KEY' Name nvarchar(200)' Age int' DateOfBirth datetime' Savings Decimal(10'5));"; " is 142.
Long Statement,NPoco.Tests.Common,InMemoryDatabase,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\InMemoryDatabase.cs,RecreateDataBase,The length of the statement  "            cmd.CommandText = "CREATE TABLE ExtraUserInfos(ExtraUserInfoId INTEGER PRIMARY KEY' UserId int' Email nvarchar(200)' Children int);"; " is 133.
Long Statement,NPoco.Tests,ConstructorTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ConstructorTests.cs,ConstructorWithConnectionStringDBTypeAndIsolationLevel,The length of the statement  "            var db = new Database(TestDatabase.ConnectionString' dbType' SqlClientFactory.Instance' IsolationLevel.ReadUncommitted); " is 120.
Long Statement,NPoco.Tests,ConstructorTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ConstructorTests.cs,ConstructorWithConnectionStringDBTypeAndSettings,The length of the statement  "            var db = new Database(TestDatabase.ConnectionString' dbType' SqlClientFactory.Instance' IsolationLevel.ReadUncommitted' false); " is 127.
Long Statement,NPoco.Tests,PagingHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\PagingHelper.cs,ExtractOrderbyCorrectly,The length of the statement  "            Assert.AreEqual("SELECT COUNT(*) FROM (select test.*' (select top 1 d from test2 order by c) from test ) npoco_tbl"' parts.sqlCount); " is 133.
Long Statement,NPoco.Tests,PagingHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\PagingHelper.cs,ExtractOrderbyCorrectlyWithWhereWithOrderBy,The length of the statement  "            var sql = @"select test.*' (select top 1 d from test2 order by c) from test where (select top 1 e from test2 order by e) > 5 order by a' b"; " is 140.
Long Statement,NPoco.Tests,PagingHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\PagingHelper.cs,ExtractOrderbyCorrectlyWithWhereWithOrderBy,The length of the statement  "            Assert.AreEqual("SELECT COUNT(*) FROM (select test.*' (select top 1 d from test2 order by c) from test where (select top 1 e from test2 order by e) > 5 ) npoco_tbl"' parts.sqlCount); " is 182.
Long Statement,NPoco.Tests,PagingHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\PagingHelper.cs,EnsureTheSubselectOrderByIsNotConsumed,The length of the statement  "            Assert.AreEqual("SELECT COUNT(*) FROM (select test.*' (select top 1 d from test2 order by c) from test) npoco_tbl"' parts.sqlCount); " is 132.
Long Statement,NPoco.Tests,PagingHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\PagingHelper.cs,EnsureTheOrderIsExtractedWhenThereIsAcolumnCalledFromWithNestedSubselect,The length of the statement  "            Assert.AreEqual("SELECT COUNT(*) FROM (select id' date_from from(select id' date_from from test1) a ) npoco_tbl"' parts.sqlCount); " is 130.
Long Statement,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,TestMultipleInClausesPerf,The length of the statement  "            var sql = "SELECT * FROM test WHERE testID in (@0) and test2ID in (@0) and asdf = @1 and asdf = @2 and asdf = @3 and asdf = @4 and asdf = @5"; " is 142.
Long Statement,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,TestMultipleInClausesPerf,The length of the statement  "            var expectedSql = "SELECT * FROM test WHERE testID in (@0'@1'@2'@3'@4'@5) and test2ID in (@0'@1'@2'@3'@4'@5) and asdf = @6 and asdf = @7 and asdf = @8 and asdf = @9 and asdf = @10"; " is 181.
Long Statement,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdateBatchTest,The length of the statement  "            var users = InMemoryUsers.Select(x => UpdateBatch.For(x' Database.StartSnapshot(x))).Select(x => { x.Poco.Age = 30; return x; }); " is 129.
Long Statement,NPoco.Tests.DecoratedTests.QueryTests,AdvancedFetchDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\AdvancedFetchDecoratedTest.cs,FetchWithComplexObjectFilledAsExpectedWithExplicitNaming,The length of the statement  "            var user = Database.Fetch<UserDecoratedWithExtraInfo>("select u.*' e.ExtraUserInfoId as ExtraUserInfo__ExtraUserInfoId'e.UserId as ExtraUserInfo__UserId'e.Email as ExtraUserInfo__Email'e.Children as ExtraUserInfo__Children from users u inner join extrauserinfos e on u.userid = e.userid where u.userid = 1").Single(); " is 317.
Long Statement,NPoco.Tests.DecoratedTests.QueryTests,AdvancedFetchDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\AdvancedFetchDecoratedTest.cs,FetchWithComplexObjectFilledAsExpectedUsingOldConvention,The length of the statement  "            var user = Database.Fetch<UserDecoratedWithExtraInfo>("select u.*' e.* from users u inner join extrauserinfos e on u.userid = e.userid where u.userid = 1").Single(); " is 165.
Long Statement,NPoco.Tests.DecoratedTests.QueryTests,AdvancedFetchDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\AdvancedFetchDecoratedTest.cs,FetchWithComplexObjectFilledAsExpectedUsingNewConvention,The length of the statement  "            var user = Database.Fetch<UserDecoratedWithExtraInfo>("select u.*' null npoco_ExtraUserInfo' e.* from users u inner join extrauserinfos e on u.userid = e.userid where u.userid = 1").Single(); " is 191.
Long Statement,NPoco.Tests.DecoratedTests.QueryTests,NestedNestedFetchDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\NestedNestedFetchDecoratedTests.cs,FetchWithComplexObjectFilledAsExpected,The length of the statement  "            var user = Database.Fetch<NestedUser1>("select '1' Name' '2' User2__Name' '3' User2__User3__Name /*poco_dual*/").Single(); " is 122.
Long Statement,NPoco.Tests.DecoratedTests.QueryTests,NestedNestedFetchDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\NestedNestedFetchDecoratedTests.cs,FetchWithComplexObjectFilledAsExpectedWhenBaseIsNull,The length of the statement  "            var user = Database.Fetch<NestedUser1>("select null Name' '2' User2__Name' '3' User2__User3__Name /*poco_dual*/").Single(); " is 123.
Long Statement,NPoco.Tests.DecoratedTests.QueryTests,NestedNestedFetchDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\NestedNestedFetchDecoratedTests.cs,FetchWithComplexObjectFilledAsExpectedWhenNestedIsNull,The length of the statement  "            var user = Database.Fetch<NestedUser1>("select '1' Name' null User2__Name' '3' User2__User3__Name /*poco_dual*/").Single(); " is 123.
Long Statement,NPoco.Tests.DecoratedTests.QueryTests,NestedNestedFetchDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\NestedNestedFetchDecoratedTests.cs,FetchWithComplexObjectFilledAsExpectedWhenNestedNestedIsNull,The length of the statement  "            var user = Database.Fetch<NestedUser1>("select '1' Name' '2' User2__Name' null User2__User3__Name /*poco_dual*/").Single(); " is 123.
Long Statement,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,PageWithAlias,The length of the statement  "            var page = Database.Page<UserDecorated>(2' 5' "SELECT u.* FROM Users u WHERE u.userId <= 15 ORDER BY u.UserID' u.Age DESC"); " is 124.
Long Statement,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_MultiPoco,The length of the statement  "            var page = Database.Page<CustomerUser>(2' 5' "SELECT Users.UserId AS Id' Users.Name CustomerName' ExtraUserInfos.Email CustomerEmail FROM Users INNER JOIN ExtraUserInfos ON Users.UserId = ExtraUserInfos.UserId"); " is 212.
Long Statement,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_MultiPoco,The length of the statement  "                if (!emailMatch) Assert.Fail("Email doesn't match for user '" + customer.CustomerName + "' in InMemoryExtraUserInfos."); " is 120.
Long Statement,NPoco.Tests.DecoratedTests.QueryTests,SingleAndFirstQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\SingleAndFirstQueryDecoratedTest.cs,SingleSqlWithNoRecord,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Database.Single<UserDecorated>("select u.* from users u where u.userid = -1")); " is 126.
Long Statement,NPoco.Tests.DecoratedTests.QueryTests,SingleAndFirstQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\SingleAndFirstQueryDecoratedTest.cs,FirstSqlWithNoRecord,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Database.First<UserDecorated>("select u.* from users u where u.userid < 0")); " is 124.
Long Statement,NPoco.Tests.DecoratedTests.QueryTests,SingleAndFirstQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\SingleAndFirstQueryDecoratedTest.cs,SingleOrDefaultFromIntToNullableEnum,The length of the statement  "            var user = Database.SingleOrDefault<UserWithNullableId>("select u.userid' u.userid userid2 from users u where u.userid = 1"); " is 125.
Long Statement,NPoco.Tests.DecoratedTests.QueryTests,SingleAndFirstQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\SingleAndFirstQueryDecoratedTest.cs,SingleOrDefaultFromNullToNullableEnum,The length of the statement  "            var user = Database.SingleOrDefault<UserWithNullableId>("select u.userid' null userid2 from users u where u.userid = 1"); " is 121.
Long Statement,NPoco.Tests.FluentMappings,ColumnConfigurationBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentMappings\ColumnConfigurationBuilderTests.cs,ScanIgnoresColumnsDefinedByConvention,The length of the statement  "                scan.IncludeTypes(x => x == typeof(User) || ReflectionUtils.GetFieldsAndPropertiesForClasses(typeof(User)).Select(y=>y.GetMemberInfoType()).Contains(x)); " is 153.
Long Statement,NPoco.Tests.FluentMappings,ColumnConfigurationBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentMappings\ColumnConfigurationBuilderTests.cs,ScanIgnoresColumnsDefinedByConvention,The length of the statement  "            var pd = map.Config(new MapperCollection()).Resolver(typeof(User)' new PocoDataFactory(new MapperCollection())).Build(); " is 120.
Long Statement,NPoco.Tests.FluentMappings,ColumnConfigurationBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentMappings\ColumnConfigurationBuilderTests.cs,ScanSetsResultColumnsDefinedByConvention,The length of the statement  "                scan.IncludeTypes(x => x == typeof(User) || ReflectionUtils.GetFieldsAndPropertiesForClasses(typeof(User)).Select(y => y.GetMemberInfoType()).Contains(x)); " is 155.
Long Statement,NPoco.Tests.FluentMappings,ColumnConfigurationBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentMappings\ColumnConfigurationBuilderTests.cs,ScanSetsResultColumnsDefinedByConvention,The length of the statement  "            var pd = map.Config(new MapperCollection()).Resolver(typeof(User)' new PocoDataFactory(new MapperCollection())).Build(); " is 120.
Long Statement,NPoco.Tests.FluentMappings,ColumnConfigurationBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentMappings\ColumnConfigurationBuilderTests.cs,ScanSetsNameOfColumnDefinedByConvention,The length of the statement  "                scan.IncludeTypes(x => x == typeof(User) || ReflectionUtils.GetFieldsAndPropertiesForClasses(typeof(User)).Select(y => y.GetMemberInfoType()).Contains(x)); " is 155.
Long Statement,NPoco.Tests.FluentMappings,ColumnConfigurationBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentMappings\ColumnConfigurationBuilderTests.cs,ScanSetsNameOfColumnDefinedByConvention,The length of the statement  "            var pd = map.Config(new MapperCollection()).Resolver(typeof(User)' new PocoDataFactory(new MapperCollection())).Build(); " is 120.
Long Statement,NPoco.Tests.FluentMappings,ColumnConfigurationBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentMappings\ColumnConfigurationBuilderTests.cs,PrimaryKeyShouldGetRemapped,The length of the statement  "                scan.IncludeTypes(x => x == typeof(User) || ReflectionUtils.GetFieldsAndPropertiesForClasses(typeof(User)).Select(y => y.GetMemberInfoType()).Contains(x)); " is 155.
Long Statement,NPoco.Tests.FluentMappings,ColumnConfigurationBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentMappings\ColumnConfigurationBuilderTests.cs,PrimaryKeyShouldGetRemapped,The length of the statement  "            var pd = map.Config(new MapperCollection()).Resolver(typeof(User)' new PocoDataFactory(new MapperCollection())).Build(); " is 120.
Long Statement,NPoco.Tests.FluentMappings,ColumnConfigurationBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentMappings\ColumnConfigurationBuilderTests.cs,NestedColumn,The length of the statement  "            Assert.AreEqual(MemberHelper<User>.GetMembers(x => x.House.Address).Last()' columnDefinitions["House__Address"].MemberInfo); " is 124.
Long Statement,NPoco.Tests.FluentMappings,ColumnConfigurationBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentMappings\ColumnConfigurationBuilderTests.cs,FluentMappingOverridesShouldOverrideComplexMappingPrefix,The length of the statement  "            var pd = map.Config(new MapperCollection()).Resolver(typeof(User)' new PocoDataFactory(new MapperCollection())).Build(); " is 120.
Long Statement,NPoco.Tests.FluentTests.QueryTests,AdvancedFetchFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\AdvancedFetchFluentTest.cs,FetchWithComplexObjectFilledAsExpected,The length of the statement  "            var user = Database.Fetch<UserWithExtraInfo>("select u.*' e.ExtraUserInfoId as ExtraUserInfo__ExtraUserInfoId'e.UserId as ExtraUserInfo__UserId'e.Email as ExtraUserInfo__Email'e.Children as ExtraUserInfo__Children from users u inner join extrauserinfos e on u.userid = e.userid where u.userid = 1").Single(); " is 308.
Long Statement,NPoco.Tests.FluentTests.QueryTests,AdvancedFetchFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\AdvancedFetchFluentTest.cs,FetchWithComplexReturnsNullExtraUserInfoPropertyIfAllColumnsNull,The length of the statement  "            var user = Database.Fetch<UserWithExtraInfo>("select u.*' e.ExtraUserInfoId as ExtraUserInfo__ExtraUserInfoId'e.UserId as ExtraUserInfo__UserId'e.Email as ExtraUserInfo__Email'e.Children as ExtraUserInfo__Children from users u left join extrauserinfos e on u.userid = -1 where u.userid = 1").Single(); " is 301.
Long Statement,NPoco.Tests.FluentTests.QueryTests,AdvancedFetchFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\AdvancedFetchFluentTest.cs,FetchWithComplexReturnsSecondObjectIfFirstIsNull,The length of the statement  "            var user = Database.Fetch<UserWithExtraInfo>("select u.*' e.ExtraUserInfoId as ExtraUserInfo__ExtraUserInfoId'e.UserId as ExtraUserInfo__UserId'e.Email as ExtraUserInfo__Email'e.Children as ExtraUserInfo__Children from extrauserinfos e left join users u on u.userid = -1 where e.userid = 1").Single(); " is 301.
Long Statement,NPoco.Tests.FluentTests.QueryTests,AdvancedFetchFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\AdvancedFetchFluentTest.cs,FetchWithAllNullsReturnsNonNullObject,The length of the statement  "            var user = Database.Fetch<UserWithExtraInfo>("select  e.ExtraUserInfoId as ExtraUserInfo__ExtraUserInfoId'e.UserId as ExtraUserInfo__UserId'e.Email as ExtraUserInfo__Email'e.Children as ExtraUserInfo__Children from users u left join extrauserinfos e on u.userid = -1 where u.userid = 1").Single(); " is 297.
Long Statement,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,EmptyInQueryWithGuids,The length of the statement  "            var data = Database.Fetch<User>("select * from users where uniqueid in (@1) and userid = @0 and name = @2"' 1' list' "name"); " is 125.
Long Statement,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_MultiPoco,The length of the statement  "            var page = Database.Page<CustomerUser>(2' 5' "SELECT Users.UserId AS Id' Users.Name CustomerName' ExtraUserInfos.Email CustomerEmail FROM Users INNER JOIN ExtraUserInfos ON Users.UserId = ExtraUserInfos.UserId"); " is 212.
Long Statement,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_MultiPoco,The length of the statement  "                if (!emailMatch) Assert.Fail("Email doesn't match for user '" + customer.CustomerName + "' in InMemoryExtraUserInfos."); " is 120.
Long Statement,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithOrderByThenByDescending,The length of the statement  "            var users = Database.Query<User>().Include(x => x.House).OrderBy(x => x.House.HouseId).ThenByDescending(x => x.UserId).ToList(); " is 128.
Long Statement,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithOrderByThenByDescending,The length of the statement  "            var inmemory = InMemoryUsers.OrderBy(x => x.House != null ? x.House.HouseId : -1).ThenByDescending(x => x.UserId).ToList(); " is 123.
Long Statement,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithOrderByDescendingThenBy,The length of the statement  "            var users = Database.Query<User>().Include(x=>x.House).OrderByDescending(x => x.House.HouseId).ThenBy(x => x.UserId).ToList(); " is 126.
Long Statement,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithOrderByDescendingThenBy,The length of the statement  "            var inmemory = InMemoryUsers.OrderByDescending(x => x.House != null ? x.House.HouseId : -1).ThenBy(x => x.UserId).ToList(); " is 123.
Long Statement,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithOrderByDescendingThenByDescending,The length of the statement  "            var users = Database.Query<User>().Include(x => x.House).OrderByDescending(x => x.House.HouseId).ThenByDescending(x => x.UserId).ToList(); " is 138.
Long Statement,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithOrderByDescendingThenByDescending,The length of the statement  "            var inmemory = InMemoryUsers.OrderByDescending(x => x.House != null ? x.House.HouseId : -1).ThenByDescending(x => x.UserId).ToList(); " is 133.
Long Statement,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithIncludeAndNestedWhere,The length of the statement  "            var users = Database.Query<User>().Include(x => x.House).Where(x=> x.House.Address == InMemoryHouses[0].Address).ToList(); " is 122.
Long Statement,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithIncludeAndNestedOrderBy,The length of the statement  "            var users = Database.Query<User>().Include(x => x.House).Where(x=>x.House != null).OrderBy(x => x.House.Address).ToList(); " is 122.
Long Statement,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithIncludeNestedOrderByLimitAndProjection,The length of the statement  "            var inmemory = InMemoryUsers.Where(x => x.House != null).OrderBy(x => x.House.HouseId).Select(x => new {x.House.Address' x.House.HouseId}).ToList(); " is 148.
Long Statement,NPoco.Tests.FluentTests.QueryTests,SingleAndFirstQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\SingleAndFirstQueryFluentTest.cs,NoParameterLessConstructor,The length of the statement  "                Database.Single<UserWithNoParamConstructor>("select * from users where userid = 1")' "Poco '{0}' has not parameterless constructor"'  " is 132.
Long Statement,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test1,The length of the statement  "            var data = Database.Fetch<NestedConvention>("select 'Name' Name' 23 money__value' 'AUD' money__currency /*poco_dual*/").Single(); " is 129.
Long Statement,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test2,The length of the statement  "            var data = Database.Fetch<NestedConvention>("select 'Name' Name' null money__value' null money__currency /*poco_dual*/").Single(); " is 130.
Long Statement,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test3,The length of the statement  "            var data = Database.Fetch<NestedConvention>("select 'Name' Name' 23 money__value' null money__currency /*poco_dual*/").Single(); " is 128.
Long Statement,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test4_2,The length of the statement  "            var data = Database.Fetch<string[]>("select 'Name' Name' null npoco_wow' '4' Day' 'AUD' money__currency /*poco_dual*/").Single(); " is 129.
Long Statement,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test9,The length of the statement  "            var data = Database.Fetch<NestedConvention>("select 'Name' Name' 23 money__value' 'AUD' money__currency' 24 money__money2__value' 'USD' money__money2__currency /*poco_dual*/").Single(); " is 185.
Long Statement,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test10,The length of the statement  "            var data = Database.Fetch<NestedConvention>("select 'Name' Name' 24 money__money2__value' 'USD' money__money2__currency /*poco_dual*/").Single(); " is 145.
Long Statement,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test16,The length of the statement  "                .WhereSql(x => new Sql(string.Format("{0}.Id in (@list)"' x.GetAliasFor(z => z.CreatedBy))' new { list = new[] { 1' 3 } })) " is 123.
Long Statement,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test21,The length of the statement  "            var data = Database.Fetch(typeof(NestedConvention)' "select 'Name' Name' 23 money__value' 'AUD' money__currency /*poco_dual*/").Cast<NestedConvention>().Single(); " is 162.
Long Statement,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test28,The length of the statement  "            var data = Database.Fetch<Test28Class>("select 3 Id' 'Name' Name' null' 'dyn' Dynamic__Value1' 'dict' Dict__Value2' null npoco_Nest1__Dict2'" + " is 143.
Long Statement,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test28,The length of the statement  "                                                   " 'dictnested' Value3' null npoco_Dict2__Value4' 'my string' S' 5 I' null npoco' 'oh my' DictHell__Key1__Dict2__Key2__S' 99 DictInt__ints'" + " is 141.
Long Statement,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test33,The length of the statement  "                .WhereSql(x=> new Sql($"{x.DatabaseType.EscapeTableName(x.PocoData.TableInfo.AutoAlias)}.UserId in (@list)"' new {list = new[] {2}})) " is 133.
Long Statement,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test34,The length of the statement  "                .WhereSql(x => new Sql($"{x.DatabaseType.EscapeTableName(x.PocoData.TableInfo.AutoAlias)}.UserId in (@list)"' new { list = new[] { 1' 2 } })) " is 141.
Long Statement,NPoco.Tests.NewMapper,Ext,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,IncludeSecurity,The length of the statement  "            return query.WhereSql(x => new Sql(string.Format("exists (select 1 from {1} where Id = {0}.Id)"' x.DatabaseType.EscapeTableName(x.GetAliasFor(z => z.CreatedBy))' x.GetPocoDataFor<RecursionUser>().TableInfo.TableName))); " is 219.
Magic Number,NPoco.Tests.Async,InsertAsyncTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Async\InsertAsyncTests.cs,InsertPocoIntoDatabaseUsingInsertAsync,The following statement contains a magic number: var user = new User()              {                  Age = 10'                  DateOfBirth = DateTime.Now              };
Magic Number,NPoco.Tests.Async,InsertAsyncTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Async\InsertAsyncTests.cs,InsertTwoPocoIntoDatabaseUsingInsertAsync,The following statement contains a magic number: var user1 = new User() { Age = 10' DateOfBirth = DateTime.Now };
Magic Number,NPoco.Tests.Async,InsertAsyncTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Async\InsertAsyncTests.cs,InsertTwoPocoIntoDatabaseUsingInsertAsync,The following statement contains a magic number: var user2 = new User() { Age = 11' DateOfBirth = DateTime.Now };
Magic Number,NPoco.Tests.Async,InsertAsyncTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Async\InsertAsyncTests.cs,InsertTwoPocoIntoDatabaseUsingInsertAsyncWaitingForAll1,The following statement contains a magic number: var user1 = new User() { Age = 10' DateOfBirth = DateTime.Now };
Magic Number,NPoco.Tests.Async,InsertAsyncTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Async\InsertAsyncTests.cs,InsertTwoPocoIntoDatabaseUsingInsertAsyncWaitingForAll1,The following statement contains a magic number: var user2 = new User() { Age = 11' DateOfBirth = DateTime.Now };
Magic Number,NPoco.Tests.Async,QueryAsyncTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Async\QueryAsyncTests.cs,CountAsync,The following statement contains a magic number: Assert.AreEqual(15' userCount);
Magic Number,NPoco.Tests.Async,QueryAsyncTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Async\QueryAsyncTests.cs,PagingAsync,The following statement contains a magic number: var records = await Database.PageAsync<User>(2' 5' "SELECT u.* FROM Users u WHERE UserID <= 15");
Magic Number,NPoco.Tests.Async,QueryAsyncTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Async\QueryAsyncTests.cs,PagingAsync,The following statement contains a magic number: var records = await Database.PageAsync<User>(2' 5' "SELECT u.* FROM Users u WHERE UserID <= 15");
Magic Number,NPoco.Tests.Async,QueryAsyncTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Async\QueryAsyncTests.cs,PagingAsync,The following statement contains a magic number: Assert.AreEqual(records.Items.Count' 5);
Magic Number,NPoco.Tests.Async,UpdateAsyncTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Async\UpdateAsyncTests.cs,UpdatePrimaryKeyObject,The following statement contains a magic number: poco.Age = InMemoryUsers[1].Age + 100;
Magic Number,NPoco.Tests.Async,UpdateAsyncTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Async\UpdateAsyncTests.cs,UpdatePrimaryKeyObject,The following statement contains a magic number: poco.Savings = (Decimal)1234.23;
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      Database = new Database(TestDatabase.Connection);                      break;                    case 2: // SQL Local DB                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      Database = new Database(TestDatabase.Connection' new SqlServer2008DatabaseType() { UseOutputClause = false }' IsolationLevel.ReadUncommitted); // Need read uncommitted for the transaction tests                      break;                    case 3: // SQL Server                  case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      Database = new Database(TestDatabase.Connection' new FirebirdDatabaseType()' IsolationLevel.ReadUncommitted);                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified");                      return;              }
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      Database = new Database(TestDatabase.Connection);                      break;                    case 2: // SQL Local DB                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      Database = new Database(TestDatabase.Connection' new SqlServer2008DatabaseType() { UseOutputClause = false }' IsolationLevel.ReadUncommitted); // Need read uncommitted for the transaction tests                      break;                    case 3: // SQL Server                  case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      Database = new Database(TestDatabase.Connection' new FirebirdDatabaseType()' IsolationLevel.ReadUncommitted);                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified");                      return;              }
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      Database = new Database(TestDatabase.Connection);                      break;                    case 2: // SQL Local DB                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      Database = new Database(TestDatabase.Connection' new SqlServer2008DatabaseType() { UseOutputClause = false }' IsolationLevel.ReadUncommitted); // Need read uncommitted for the transaction tests                      break;                    case 3: // SQL Server                  case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      Database = new Database(TestDatabase.Connection' new FirebirdDatabaseType()' IsolationLevel.ReadUncommitted);                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified");                      return;              }
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      Database = new Database(TestDatabase.Connection);                      break;                    case 2: // SQL Local DB                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      Database = new Database(TestDatabase.Connection' new SqlServer2008DatabaseType() { UseOutputClause = false }' IsolationLevel.ReadUncommitted); // Need read uncommitted for the transaction tests                      break;                    case 3: // SQL Server                  case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      Database = new Database(TestDatabase.Connection' new FirebirdDatabaseType()' IsolationLevel.ReadUncommitted);                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified");                      return;              }
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      Database = new Database(TestDatabase.Connection);                      break;                    case 2: // SQL Local DB                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      Database = new Database(TestDatabase.Connection' new SqlServer2008DatabaseType() { UseOutputClause = false }' IsolationLevel.ReadUncommitted); // Need read uncommitted for the transaction tests                      break;                    case 3: // SQL Server                  case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      Database = new Database(TestDatabase.Connection' new FirebirdDatabaseType()' IsolationLevel.ReadUncommitted);                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified");                      return;              }
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      Database = new Database(TestDatabase.Connection);                      break;                    case 2: // SQL Local DB                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      Database = new Database(TestDatabase.Connection' new SqlServer2008DatabaseType() { UseOutputClause = false }' IsolationLevel.ReadUncommitted); // Need read uncommitted for the transaction tests                      break;                    case 3: // SQL Server                  case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      Database = new Database(TestDatabase.Connection' new FirebirdDatabaseType()' IsolationLevel.ReadUncommitted);                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified");                      return;              }
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The following statement contains a magic number: i < 5
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i + 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i%2==0)'                      HouseId = i % 2 == 0 ? (int?)null : InMemoryHouses[i % 5].HouseId                  };
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i + 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i%2==0)'                      HouseId = i % 2 == 0 ? (int?)null : InMemoryHouses[i % 5].HouseId                  };
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i + 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i%2==0)'                      HouseId = i % 2 == 0 ? (int?)null : InMemoryHouses[i % 5].HouseId                  };
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i + 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i%2==0)'                      HouseId = i % 2 == 0 ? (int?)null : InMemoryHouses[i % 5].HouseId                  };
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i + 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i%2==0)'                      HouseId = i % 2 == 0 ? (int?)null : InMemoryHouses[i % 5].HouseId                  };
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i + 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i%2==0)'                      HouseId = i % 2 == 0 ? (int?)null : InMemoryHouses[i % 5].HouseId                  };
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i + 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i%2==0)'                      HouseId = i % 2 == 0 ? (int?)null : InMemoryHouses[i % 5].HouseId                  };
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The following statement contains a magic number: var composite = new CompositeObjectDecorated                  {                      Key1ID = pos'                      Key2ID = i + 2'                      Key3ID = i + 4'                      TextData = "This is some text data."'                      DateEntered = DateTime.Now                  };
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The following statement contains a magic number: var composite = new CompositeObjectDecorated                  {                      Key1ID = pos'                      Key2ID = i + 2'                      Key3ID = i + 4'                      TextData = "This is some text data."'                      DateEntered = DateTime.Now                  };
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The following statement contains a magic number: var recursionUser = new RecursionUser                  {                      Name = "Name" + (i + 1)'                      CreatedBy = new RecursionUser() {Id = 1}'                      Supervisor = new RecursionUser() {Id = 2}                  };
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The following statement contains a magic number: j < (i%3)
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The following statement contains a magic number: var userWithAddress = new UserWithAddress()                  {                      Name = "Name" + (i + 1)'                      Address = new UserWithAddress.MyAddress()                      {                          StreetNo = i + 1'                          StreetName = "Street" + (i + 1)'                          MovedInOn = new DateTime(1970' 1' 1).AddYears(i + 1)'                          AddressFurtherInfo = new UserWithAddress.MyAddress.AddressInfo()                          {                              PostCode = "99999"                          }                      }                  };
Magic Number,NPoco.Tests.Common,BaseDBDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBDecoratedTest.cs,InsertData,The following statement contains a magic number: i < 15
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      Database = dbFactory.Build(new Database(TestDatabase.Connection));                      break;                    case 2: // SQL Local DB                  case 3: // SQL Server                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      Database = dbFactory.Build(new Database(TestDatabase.Connection' new SqlServer2008DatabaseType()));                      break;                    case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      var db = new Database(TestDatabase.Connection' new FirebirdDatabaseType());                      db.Mappers.Insert(0' new FirebirdDefaultMapper());                      Database = dbFactory.Build(db);                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified");                      return;              }
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      Database = dbFactory.Build(new Database(TestDatabase.Connection));                      break;                    case 2: // SQL Local DB                  case 3: // SQL Server                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      Database = dbFactory.Build(new Database(TestDatabase.Connection' new SqlServer2008DatabaseType()));                      break;                    case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      var db = new Database(TestDatabase.Connection' new FirebirdDatabaseType());                      db.Mappers.Insert(0' new FirebirdDefaultMapper());                      Database = dbFactory.Build(db);                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified");                      return;              }
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      Database = dbFactory.Build(new Database(TestDatabase.Connection));                      break;                    case 2: // SQL Local DB                  case 3: // SQL Server                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      Database = dbFactory.Build(new Database(TestDatabase.Connection' new SqlServer2008DatabaseType()));                      break;                    case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      var db = new Database(TestDatabase.Connection' new FirebirdDatabaseType());                      db.Mappers.Insert(0' new FirebirdDefaultMapper());                      Database = dbFactory.Build(db);                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified");                      return;              }
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      Database = dbFactory.Build(new Database(TestDatabase.Connection));                      break;                    case 2: // SQL Local DB                  case 3: // SQL Server                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      Database = dbFactory.Build(new Database(TestDatabase.Connection' new SqlServer2008DatabaseType()));                      break;                    case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      var db = new Database(TestDatabase.Connection' new FirebirdDatabaseType());                      db.Mappers.Insert(0' new FirebirdDefaultMapper());                      Database = dbFactory.Build(db);                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified");                      return;              }
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      Database = dbFactory.Build(new Database(TestDatabase.Connection));                      break;                    case 2: // SQL Local DB                  case 3: // SQL Server                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      Database = dbFactory.Build(new Database(TestDatabase.Connection' new SqlServer2008DatabaseType()));                      break;                    case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      var db = new Database(TestDatabase.Connection' new FirebirdDatabaseType());                      db.Mappers.Insert(0' new FirebirdDefaultMapper());                      Database = dbFactory.Build(db);                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified");                      return;              }
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      Database = dbFactory.Build(new Database(TestDatabase.Connection));                      break;                    case 2: // SQL Local DB                  case 3: // SQL Server                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      Database = dbFactory.Build(new Database(TestDatabase.Connection' new SqlServer2008DatabaseType()));                      break;                    case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      var db = new Database(TestDatabase.Connection' new FirebirdDatabaseType());                      db.Mappers.Insert(0' new FirebirdDefaultMapper());                      Database = dbFactory.Build(db);                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified");                      return;              }
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,InsertData,The following statement contains a magic number: i < 5
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,InsertData,The following statement contains a magic number: var user = new User                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i - 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i % 2 == 0)'                      YorN = (i % 2 == 0) ? 'Y' : 'N''                      UniqueId = (i % 2 != 0 ? Guid.NewGuid() : (Guid?)null)'                      TimeSpan = new TimeSpan(1' 1' 1)'                      House = i % 2 == 0 ? null : InMemoryHouses[i % 5]'                      SupervisorId = (i + 1) % 2 == 0 ? (i + 1) : (int?)null'                      Address = i % 10 == 0 ? null : new Address()                      {                          Street = i + " Road Street"'                          City = "City " + i                      }'                      TestEnum = (i + 1) % 2 == 0 ? TestEnum.All : TestEnum.None                  };
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,InsertData,The following statement contains a magic number: var user = new User                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i - 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i % 2 == 0)'                      YorN = (i % 2 == 0) ? 'Y' : 'N''                      UniqueId = (i % 2 != 0 ? Guid.NewGuid() : (Guid?)null)'                      TimeSpan = new TimeSpan(1' 1' 1)'                      House = i % 2 == 0 ? null : InMemoryHouses[i % 5]'                      SupervisorId = (i + 1) % 2 == 0 ? (i + 1) : (int?)null'                      Address = i % 10 == 0 ? null : new Address()                      {                          Street = i + " Road Street"'                          City = "City " + i                      }'                      TestEnum = (i + 1) % 2 == 0 ? TestEnum.All : TestEnum.None                  };
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,InsertData,The following statement contains a magic number: var user = new User                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i - 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i % 2 == 0)'                      YorN = (i % 2 == 0) ? 'Y' : 'N''                      UniqueId = (i % 2 != 0 ? Guid.NewGuid() : (Guid?)null)'                      TimeSpan = new TimeSpan(1' 1' 1)'                      House = i % 2 == 0 ? null : InMemoryHouses[i % 5]'                      SupervisorId = (i + 1) % 2 == 0 ? (i + 1) : (int?)null'                      Address = i % 10 == 0 ? null : new Address()                      {                          Street = i + " Road Street"'                          City = "City " + i                      }'                      TestEnum = (i + 1) % 2 == 0 ? TestEnum.All : TestEnum.None                  };
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,InsertData,The following statement contains a magic number: var user = new User                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i - 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i % 2 == 0)'                      YorN = (i % 2 == 0) ? 'Y' : 'N''                      UniqueId = (i % 2 != 0 ? Guid.NewGuid() : (Guid?)null)'                      TimeSpan = new TimeSpan(1' 1' 1)'                      House = i % 2 == 0 ? null : InMemoryHouses[i % 5]'                      SupervisorId = (i + 1) % 2 == 0 ? (i + 1) : (int?)null'                      Address = i % 10 == 0 ? null : new Address()                      {                          Street = i + " Road Street"'                          City = "City " + i                      }'                      TestEnum = (i + 1) % 2 == 0 ? TestEnum.All : TestEnum.None                  };
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,InsertData,The following statement contains a magic number: var user = new User                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i - 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i % 2 == 0)'                      YorN = (i % 2 == 0) ? 'Y' : 'N''                      UniqueId = (i % 2 != 0 ? Guid.NewGuid() : (Guid?)null)'                      TimeSpan = new TimeSpan(1' 1' 1)'                      House = i % 2 == 0 ? null : InMemoryHouses[i % 5]'                      SupervisorId = (i + 1) % 2 == 0 ? (i + 1) : (int?)null'                      Address = i % 10 == 0 ? null : new Address()                      {                          Street = i + " Road Street"'                          City = "City " + i                      }'                      TestEnum = (i + 1) % 2 == 0 ? TestEnum.All : TestEnum.None                  };
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,InsertData,The following statement contains a magic number: var user = new User                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i - 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i % 2 == 0)'                      YorN = (i % 2 == 0) ? 'Y' : 'N''                      UniqueId = (i % 2 != 0 ? Guid.NewGuid() : (Guid?)null)'                      TimeSpan = new TimeSpan(1' 1' 1)'                      House = i % 2 == 0 ? null : InMemoryHouses[i % 5]'                      SupervisorId = (i + 1) % 2 == 0 ? (i + 1) : (int?)null'                      Address = i % 10 == 0 ? null : new Address()                      {                          Street = i + " Road Street"'                          City = "City " + i                      }'                      TestEnum = (i + 1) % 2 == 0 ? TestEnum.All : TestEnum.None                  };
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,InsertData,The following statement contains a magic number: var user = new User                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i - 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i % 2 == 0)'                      YorN = (i % 2 == 0) ? 'Y' : 'N''                      UniqueId = (i % 2 != 0 ? Guid.NewGuid() : (Guid?)null)'                      TimeSpan = new TimeSpan(1' 1' 1)'                      House = i % 2 == 0 ? null : InMemoryHouses[i % 5]'                      SupervisorId = (i + 1) % 2 == 0 ? (i + 1) : (int?)null'                      Address = i % 10 == 0 ? null : new Address()                      {                          Street = i + " Road Street"'                          City = "City " + i                      }'                      TestEnum = (i + 1) % 2 == 0 ? TestEnum.All : TestEnum.None                  };
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,InsertData,The following statement contains a magic number: var user = new User                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i - 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i % 2 == 0)'                      YorN = (i % 2 == 0) ? 'Y' : 'N''                      UniqueId = (i % 2 != 0 ? Guid.NewGuid() : (Guid?)null)'                      TimeSpan = new TimeSpan(1' 1' 1)'                      House = i % 2 == 0 ? null : InMemoryHouses[i % 5]'                      SupervisorId = (i + 1) % 2 == 0 ? (i + 1) : (int?)null'                      Address = i % 10 == 0 ? null : new Address()                      {                          Street = i + " Road Street"'                          City = "City " + i                      }'                      TestEnum = (i + 1) % 2 == 0 ? TestEnum.All : TestEnum.None                  };
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,InsertData,The following statement contains a magic number: var user = new User                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i - 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i % 2 == 0)'                      YorN = (i % 2 == 0) ? 'Y' : 'N''                      UniqueId = (i % 2 != 0 ? Guid.NewGuid() : (Guid?)null)'                      TimeSpan = new TimeSpan(1' 1' 1)'                      House = i % 2 == 0 ? null : InMemoryHouses[i % 5]'                      SupervisorId = (i + 1) % 2 == 0 ? (i + 1) : (int?)null'                      Address = i % 10 == 0 ? null : new Address()                      {                          Street = i + " Road Street"'                          City = "City " + i                      }'                      TestEnum = (i + 1) % 2 == 0 ? TestEnum.All : TestEnum.None                  };
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,InsertData,The following statement contains a magic number: var user = new User                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i - 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i % 2 == 0)'                      YorN = (i % 2 == 0) ? 'Y' : 'N''                      UniqueId = (i % 2 != 0 ? Guid.NewGuid() : (Guid?)null)'                      TimeSpan = new TimeSpan(1' 1' 1)'                      House = i % 2 == 0 ? null : InMemoryHouses[i % 5]'                      SupervisorId = (i + 1) % 2 == 0 ? (i + 1) : (int?)null'                      Address = i % 10 == 0 ? null : new Address()                      {                          Street = i + " Road Street"'                          City = "City " + i                      }'                      TestEnum = (i + 1) % 2 == 0 ? TestEnum.All : TestEnum.None                  };
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,InsertData,The following statement contains a magic number: var user = new User                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i - 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i % 2 == 0)'                      YorN = (i % 2 == 0) ? 'Y' : 'N''                      UniqueId = (i % 2 != 0 ? Guid.NewGuid() : (Guid?)null)'                      TimeSpan = new TimeSpan(1' 1' 1)'                      House = i % 2 == 0 ? null : InMemoryHouses[i % 5]'                      SupervisorId = (i + 1) % 2 == 0 ? (i + 1) : (int?)null'                      Address = i % 10 == 0 ? null : new Address()                      {                          Street = i + " Road Street"'                          City = "City " + i                      }'                      TestEnum = (i + 1) % 2 == 0 ? TestEnum.All : TestEnum.None                  };
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,InsertData,The following statement contains a magic number: var user = new User                  {                      Name = "Name" + (i + 1)'                      Age = 20 + (i + 1)'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(i - 1)'                      Savings = 50.00m + (1.01m * (i + 1))'                      IsMale = (i % 2 == 0)'                      YorN = (i % 2 == 0) ? 'Y' : 'N''                      UniqueId = (i % 2 != 0 ? Guid.NewGuid() : (Guid?)null)'                      TimeSpan = new TimeSpan(1' 1' 1)'                      House = i % 2 == 0 ? null : InMemoryHouses[i % 5]'                      SupervisorId = (i + 1) % 2 == 0 ? (i + 1) : (int?)null'                      Address = i % 10 == 0 ? null : new Address()                      {                          Street = i + " Road Street"'                          City = "City " + i                      }'                      TestEnum = (i + 1) % 2 == 0 ? TestEnum.All : TestEnum.None                  };
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,InsertData,The following statement contains a magic number: j < (i % 3)
Magic Number,NPoco.Tests.Common,BaseDBFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\BaseDBFluentTest.cs,InsertData,The following statement contains a magic number: i < 15
Magic Number,NPoco.Tests.Common,User,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\Common\User.cs,User,The following statement contains a magic number: DateOfBirth = new DateTime(1900' 1' 1);
Magic Number,NPoco.Tests,ConstructorTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ConstructorTests.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      break;                    case 2: // SQL Local DB                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      break;                    case 3: // SQL Server                  case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified: " + testDBType);                      return;              }
Magic Number,NPoco.Tests,ConstructorTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ConstructorTests.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      break;                    case 2: // SQL Local DB                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      break;                    case 3: // SQL Server                  case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified: " + testDBType);                      return;              }
Magic Number,NPoco.Tests,ConstructorTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ConstructorTests.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      break;                    case 2: // SQL Local DB                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      break;                    case 3: // SQL Server                  case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified: " + testDBType);                      return;              }
Magic Number,NPoco.Tests,ConstructorTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ConstructorTests.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      break;                    case 2: // SQL Local DB                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      break;                    case 3: // SQL Server                  case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified: " + testDBType);                      return;              }
Magic Number,NPoco.Tests,ConstructorTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ConstructorTests.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      break;                    case 2: // SQL Local DB                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      break;                    case 3: // SQL Server                  case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified: " + testDBType);                      return;              }
Magic Number,NPoco.Tests,ConstructorTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ConstructorTests.cs,SetUp,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      TestDatabase = new InMemoryDatabase();                      break;                    case 2: // SQL Local DB                      var dataSource = configuration.GetSection("TestDbDataSource").Value;                      TestDatabase = new SQLLocalDatabase(dataSource);                      break;                    case 3: // SQL Server                  case 4: // SQL CE                  case 5: // MySQL                  case 6: // Oracle                  case 7: // Postgres                      Assert.Fail("Database platform not supported for unit testing");                      return;  #if !DNXCORE50                  case 8: // Firebird                      TestDatabase = new FirebirdDatabase();                      break;  #endif                    default:                      Assert.Fail("Unknown database platform specified: " + testDBType);                      return;              }
Magic Number,NPoco.Tests,ConstructorTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ConstructorTests.cs,GetConfiguredDatabaseType,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      return new SQLiteDatabaseType();                  case 2: // SQL Local DB                      return new SqlServerDatabaseType();                  case 3: // SQL Server                      return new SqlServer2012DatabaseType();                  case 4: // SQL CE                      return new SqlServerCEDatabaseType();                  case 5: // MySQL                      return new MySqlDatabaseType();                  case 6: // Oracle                      return new OracleDatabaseType();                  case 7: // Postgres                      return new PostgreSQLDatabaseType();                  case 8: // Firebird                      return new FirebirdDatabaseType();                  default:                      Assert.Fail("Unknown database platform specified : " + testDBType);                      return null;              }
Magic Number,NPoco.Tests,ConstructorTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ConstructorTests.cs,GetConfiguredDatabaseType,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      return new SQLiteDatabaseType();                  case 2: // SQL Local DB                      return new SqlServerDatabaseType();                  case 3: // SQL Server                      return new SqlServer2012DatabaseType();                  case 4: // SQL CE                      return new SqlServerCEDatabaseType();                  case 5: // MySQL                      return new MySqlDatabaseType();                  case 6: // Oracle                      return new OracleDatabaseType();                  case 7: // Postgres                      return new PostgreSQLDatabaseType();                  case 8: // Firebird                      return new FirebirdDatabaseType();                  default:                      Assert.Fail("Unknown database platform specified : " + testDBType);                      return null;              }
Magic Number,NPoco.Tests,ConstructorTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ConstructorTests.cs,GetConfiguredDatabaseType,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      return new SQLiteDatabaseType();                  case 2: // SQL Local DB                      return new SqlServerDatabaseType();                  case 3: // SQL Server                      return new SqlServer2012DatabaseType();                  case 4: // SQL CE                      return new SqlServerCEDatabaseType();                  case 5: // MySQL                      return new MySqlDatabaseType();                  case 6: // Oracle                      return new OracleDatabaseType();                  case 7: // Postgres                      return new PostgreSQLDatabaseType();                  case 8: // Firebird                      return new FirebirdDatabaseType();                  default:                      Assert.Fail("Unknown database platform specified : " + testDBType);                      return null;              }
Magic Number,NPoco.Tests,ConstructorTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ConstructorTests.cs,GetConfiguredDatabaseType,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      return new SQLiteDatabaseType();                  case 2: // SQL Local DB                      return new SqlServerDatabaseType();                  case 3: // SQL Server                      return new SqlServer2012DatabaseType();                  case 4: // SQL CE                      return new SqlServerCEDatabaseType();                  case 5: // MySQL                      return new MySqlDatabaseType();                  case 6: // Oracle                      return new OracleDatabaseType();                  case 7: // Postgres                      return new PostgreSQLDatabaseType();                  case 8: // Firebird                      return new FirebirdDatabaseType();                  default:                      Assert.Fail("Unknown database platform specified : " + testDBType);                      return null;              }
Magic Number,NPoco.Tests,ConstructorTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ConstructorTests.cs,GetConfiguredDatabaseType,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      return new SQLiteDatabaseType();                  case 2: // SQL Local DB                      return new SqlServerDatabaseType();                  case 3: // SQL Server                      return new SqlServer2012DatabaseType();                  case 4: // SQL CE                      return new SqlServerCEDatabaseType();                  case 5: // MySQL                      return new MySqlDatabaseType();                  case 6: // Oracle                      return new OracleDatabaseType();                  case 7: // Postgres                      return new PostgreSQLDatabaseType();                  case 8: // Firebird                      return new FirebirdDatabaseType();                  default:                      Assert.Fail("Unknown database platform specified : " + testDBType);                      return null;              }
Magic Number,NPoco.Tests,ConstructorTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ConstructorTests.cs,GetConfiguredDatabaseType,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      return new SQLiteDatabaseType();                  case 2: // SQL Local DB                      return new SqlServerDatabaseType();                  case 3: // SQL Server                      return new SqlServer2012DatabaseType();                  case 4: // SQL CE                      return new SqlServerCEDatabaseType();                  case 5: // MySQL                      return new MySqlDatabaseType();                  case 6: // Oracle                      return new OracleDatabaseType();                  case 7: // Postgres                      return new PostgreSQLDatabaseType();                  case 8: // Firebird                      return new FirebirdDatabaseType();                  default:                      Assert.Fail("Unknown database platform specified : " + testDBType);                      return null;              }
Magic Number,NPoco.Tests,ConstructorTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ConstructorTests.cs,GetConfiguredDatabaseType,The following statement contains a magic number: switch (testDBType)              {                  case 1: // SQLite In-Memory                      return new SQLiteDatabaseType();                  case 2: // SQL Local DB                      return new SqlServerDatabaseType();                  case 3: // SQL Server                      return new SqlServer2012DatabaseType();                  case 4: // SQL CE                      return new SqlServerCEDatabaseType();                  case 5: // MySQL                      return new MySqlDatabaseType();                  case 6: // Oracle                      return new OracleDatabaseType();                  case 7: // Postgres                      return new PostgreSQLDatabaseType();                  case 8: // Firebird                      return new FirebirdDatabaseType();                  default:                      Assert.Fail("Unknown database platform specified : " + testDBType);                      return null;              }
Magic Number,NPoco.Tests,HashCodeCombinerTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\HashCodeCombinerTests.cs,HashCombiner_Test_Int,The following statement contains a magic number: combiner1.AddInt(1234);
Magic Number,NPoco.Tests,HashCodeCombinerTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\HashCodeCombinerTests.cs,HashCombiner_Test_Int,The following statement contains a magic number: combiner2.AddInt(1234);
Magic Number,NPoco.Tests,NewMapperPerfTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperPerfTests.cs,PerfTests,The following statement contains a magic number: i < 500
Magic Number,NPoco.Tests,NewMapperPerfTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperPerfTests.cs,PerfTests,The following statement contains a magic number: i < 500
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,TestExpandListInParameters,The following statement contains a magic number: var list = new List<int>() { 1' 2' 1 };
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,TestExpandListInParameters,The following statement contains a magic number: Assert.AreEqual(2' args[1]);
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,DontDuplicateParametersWithTheSameName,The following statement contains a magic number: var resultSql = ParameterHelper.ProcessParams(sql' new object[] { 99' 89 }' args);
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,DontDuplicateParametersWithTheSameName,The following statement contains a magic number: var resultSql = ParameterHelper.ProcessParams(sql' new object[] { 99' 89 }' args);
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,DontDuplicateParametersWithTheSameName,The following statement contains a magic number: Assert.AreEqual(2' args.Count);
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,DontDuplicateParametersWithTheSameName,The following statement contains a magic number: Assert.AreEqual(99' args[0]);
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,DontDuplicateParametersWithTheSameNameStrings,The following statement contains a magic number: var resultSql = ParameterHelper.ProcessParams(sql' new[] { new {test = 99' wow = 89} }' args);
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,DontDuplicateParametersWithTheSameNameStrings,The following statement contains a magic number: var resultSql = ParameterHelper.ProcessParams(sql' new[] { new {test = 99' wow = 89} }' args);
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,DontDuplicateParametersWithTheSameNameStrings,The following statement contains a magic number: Assert.AreEqual(2' args.Count);
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,DontDuplicateParametersWithTheSameNameStrings,The following statement contains a magic number: Assert.AreEqual(99' args[0]);
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,DontDuplicateParametersWithTheSameNameStrings,The following statement contains a magic number: Assert.AreEqual(89' args[1]);
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,TestMultipleInClauses,The following statement contains a magic number: var list = new List<int>() { 1' 2' 3 };
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,TestMultipleInClauses,The following statement contains a magic number: var list = new List<int>() { 1' 2' 3 };
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,TestMultipleInClausesPerf,The following statement contains a magic number: var list = new List<int>() { 1' 2' 3' 6' 5' 4 };
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,TestMultipleInClausesPerf,The following statement contains a magic number: var list = new List<int>() { 1' 2' 3' 6' 5' 4 };
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,TestMultipleInClausesPerf,The following statement contains a magic number: var list = new List<int>() { 1' 2' 3' 6' 5' 4 };
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,TestMultipleInClausesPerf,The following statement contains a magic number: var list = new List<int>() { 1' 2' 3' 6' 5' 4 };
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,TestMultipleInClausesPerf,The following statement contains a magic number: var list = new List<int>() { 1' 2' 3' 6' 5' 4 };
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,TestMultipleInClausesPerf,The following statement contains a magic number: var resultSql = ParameterHelper.ProcessParams(sql' new object[] { list' 1'2'3'4'5 }' args);
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,TestMultipleInClausesPerf,The following statement contains a magic number: var resultSql = ParameterHelper.ProcessParams(sql' new object[] { list' 1'2'3'4'5 }' args);
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,TestMultipleInClausesPerf,The following statement contains a magic number: var resultSql = ParameterHelper.ProcessParams(sql' new object[] { list' 1'2'3'4'5 }' args);
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,TestMultipleInClausesPerf,The following statement contains a magic number: var resultSql = ParameterHelper.ProcessParams(sql' new object[] { list' 1'2'3'4'5 }' args);
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,RewriteTheSameParameters,The following statement contains a magic number: var resultSql = ParameterHelper.ProcessParams(sql' new object[] { 1' 2' 1' 1' 2 }' args' true);
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,RewriteTheSameParameters,The following statement contains a magic number: var resultSql = ParameterHelper.ProcessParams(sql' new object[] { 1' 2' 1' 1' 2 }' args' true);
Magic Number,NPoco.Tests,ParameterHelperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\ParameterHelper.cs,RewriteTheSameParameters,The following statement contains a magic number: Assert.AreEqual(2' args.Count);
Magic Number,NPoco.Tests,PocoExpandoTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\PocoExpandoTests.cs,CanAccessPropertiesWithAnyCase,The following statement contains a magic number: Assert.AreEqual(results[1].USERID' 2);
Magic Number,NPoco.Tests,PocoExpandoTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\PocoExpandoTests.cs,CanAccessPropertiesWithAnyCase,The following statement contains a magic number: Assert.AreEqual(results[2].USERid' 3);
Magic Number,NPoco.Tests,PocoExpandoTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\PocoExpandoTests.cs,CanAccessPropertiesWithAnyCase,The following statement contains a magic number: Assert.AreEqual(results[2].USERid' 3);
Magic Number,NPoco.Tests,PocoExpandoTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\PocoExpandoTests.cs,CanInsertDynamic,The following statement contains a magic number: Assert.AreEqual(id' 16);
Magic Number,NPoco.Tests,PocoExpandoTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\PocoExpandoTests.cs,CanGetPocoDataForPocoExpando,The following statement contains a magic number: Assert.AreEqual(pd.Columns.Count' 2);
Magic Number,NPoco.Tests,PocoExpandoTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\PocoExpandoTests.cs,CanGetPocoDataWithTypeForPocoExpando,The following statement contains a magic number: Assert.AreEqual(pd.Columns.Count' 2);
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,BasicDiffUsingSnapshotter,The following statement contains a magic number: user.Savings = 50.50m;
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,BasicDiffUsingSnapshotter,The following statement contains a magic number: user.DateOfBirth = new DateTime(2001' 1' 1);
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,BasicDiffUsingSnapshotter,The following statement contains a magic number: user.Age = 21;
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,BasicDiffUsingSnapshotter,The following statement contains a magic number: Assert.AreEqual(4' snap.Changes().Count);
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,BasicDiffUsingSnapshotter,The following statement contains a magic number: Assert.AreEqual(4' snap.UpdatedColumns().Count);
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,ValuesAlreadySetUsingSnapshotter,The following statement contains a magic number: user.Savings = 50.50m;
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,ValuesAlreadySetUsingSnapshotter,The following statement contains a magic number: user.DateOfBirth = new DateTime(2001' 1' 1);
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,ValuesAlreadySetUsingSnapshotter,The following statement contains a magic number: user.Age = 21;
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,ValuesAlreadySetUsingSnapshotter,The following statement contains a magic number: user.Age = 22;
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,ValuesAlreadySetUsingSnapshotter,The following statement contains a magic number: Assert.AreEqual(21' snap.Changes().First().OldValue);
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,ValuesAlreadySetUsingSnapshotter,The following statement contains a magic number: Assert.AreEqual(22' snap.Changes().First().NewValue);
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,OverrideTrackedObjectUsingSnapshotter,The following statement contains a magic number: user1.Savings = 50.50m;
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,OverrideTrackedObjectUsingSnapshotter,The following statement contains a magic number: user1.DateOfBirth = new DateTime(2001' 1' 1);
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,OverrideTrackedObjectUsingSnapshotter,The following statement contains a magic number: user1.Age = 21;
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,OverrideTrackedObjectUsingSnapshotter,The following statement contains a magic number: Assert.AreEqual(4' snap.Changes().Count);
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,OverrideTrackedObjectUsingSnapshotter,The following statement contains a magic number: Assert.AreEqual(4' snap.UpdatedColumns().Count);
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,GetDiffIncludingObjectPropertiesOnlyByReferenceThough,The following statement contains a magic number: var user = new SnapshotOnClass()              {                  Phone = new SnapshotOnClass.PhoneClass()                  {                      Value = "2" + (char)22                  }              };
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,GetDiffIncludingObjectPropertiesOnlyByReferenceThough,The following statement contains a magic number: user.Phone.PhoneId = 21;
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,GetDiffIncludingObjectPropertiesOnlyByReferenceThough,The following statement contains a magic number: Assert.AreEqual(2' snap.Changes().Count);
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,GetDiffIncludingObjectPropertiesOnlyByReferenceThough,The following statement contains a magic number: Assert.AreEqual(2' snap.UpdatedColumns().Count);
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,GetDiffIncludingLists,The following statement contains a magic number: var user = new SnapshotOnClass()              {                  Values = new[] {1' 2' 3}              };
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,GetDiffIncludingLists,The following statement contains a magic number: var user = new SnapshotOnClass()              {                  Values = new[] {1' 2' 3}              };
Magic Number,NPoco.Tests,SnapshotterTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SnapshotterTests.cs,GetDiffIncludingLists,The following statement contains a magic number: user.Values[0] = 2;
Magic Number,NPoco.Tests,SqlBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SqlBuilderTests.cs,Test1,The following statement contains a magic number: sqlBuilder.Where("id2 = @0"' 2);
Magic Number,NPoco.Tests,SqlBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SqlBuilderTests.cs,Test1,The following statement contains a magic number: Assert.AreEqual(2' temp.Parameters.Length);
Magic Number,NPoco.Tests,SqlBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SqlBuilderTests.cs,Test3,The following statement contains a magic number: var test = new[] {1' 2};
Magic Number,NPoco.Tests,SqlBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SqlBuilderTests.cs,Test3,The following statement contains a magic number: Assert.AreEqual(2' temp.Parameters.Length);
Magic Number,NPoco.Tests,SqlBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SqlBuilderTests.cs,Test5,The following statement contains a magic number: sqlBuilder.Where("id2 = @0"' 2);
Magic Number,NPoco.Tests,SqlBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SqlBuilderTests.cs,Test5,The following statement contains a magic number: Assert.AreEqual(2' temp2.Parameters.Length);
Magic Number,NPoco.Tests,SqlBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SqlBuilderTests.cs,Test6,The following statement contains a magic number: sqlBuilder.Where("id2 = @0"' 2);
Magic Number,NPoco.Tests,SqlBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SqlBuilderTests.cs,Test6,The following statement contains a magic number: Assert.AreEqual(2' sql1.Arguments.Length);
Magic Number,NPoco.Tests,SqlBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SqlBuilderTests.cs,Test6,The following statement contains a magic number: sqlBuilder.Where("id3 = @0"' 3);
Magic Number,NPoco.Tests,SqlBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SqlBuilderTests.cs,Test6,The following statement contains a magic number: Assert.AreEqual(3' sql2.Arguments.Length);
Magic Number,NPoco.Tests,SqlBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SqlBuilderTests.cs,Test8,The following statement contains a magic number: sqlBuilder.WhereNamed("test"' "id2 = @0"' 2);
Magic Number,NPoco.Tests,SqlBuilderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\SqlBuilderTests.cs,Test8,The following statement contains a magic number: Assert.AreEqual(2' temp.Parameters.Length);
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,InsertTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\InsertTests.cs,InsertPrimaryKeyAutoIncrement,The following statement contains a magic number: const int dataAge = 56;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,InsertTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\InsertTests.cs,InsertPrimaryKeyAutoIncrement,The following statement contains a magic number: const decimal dataSavings = (decimal)345.23;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,InsertTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\InsertTests.cs,InsertPrimaryKeyAssigned,The following statement contains a magic number: const int dataKey1ID = 100;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,InsertTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\InsertTests.cs,InsertPrimaryKeyAssigned,The following statement contains a magic number: const int dataKey2ID = 200;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,InsertTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\InsertTests.cs,InsertPrimaryKeyAssigned,The following statement contains a magic number: const int dataKey3ID = 300;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,InsertTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\InsertTests.cs,InsertCompositeKey,The following statement contains a magic number: const int dataKey1ID = 100;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,InsertTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\InsertTests.cs,InsertCompositeKey,The following statement contains a magic number: const int dataKey2ID = 200;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,InsertTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\InsertTests.cs,InsertCompositeKey,The following statement contains a magic number: const int dataKey3ID = 300;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,InsertTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\InsertTests.cs,InsertBatch,The following statement contains a magic number: var users = Enumerable.Range(0' 50).Select(x => new UserDecoratedWithNullable              {                  Name = "Name" + x'                  Age = x + 1              });
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,InsertTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\InsertTests.cs,InsertBatch,The following statement contains a magic number: Database.InsertBatch(users' new BatchOptions() {BatchSize = 22});
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,InsertTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\InsertTests.cs,InsertBatch,The following statement contains a magic number: Assert.AreEqual(65' result);
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,SaveTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\SaveTests.cs,SavePrimaryKeyAutoIncrementNew,The following statement contains a magic number: const int dataAge = 56;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,SaveTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\SaveTests.cs,SavePrimaryKeyAutoIncrementNew,The following statement contains a magic number: const decimal dataSavings = (decimal)345.23;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,SaveTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\SaveTests.cs,SavePrimaryKeyAutoIncrementExisting,The following statement contains a magic number: poco.Age = InMemoryUsers[1].Age + 100;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,SaveTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\SaveTests.cs,SavePrimaryKeyAutoIncrementExisting,The following statement contains a magic number: poco.Savings = (Decimal)1234.23;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,SaveTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\SaveTests.cs,SavePrimaryKeyAssignedNew,The following statement contains a magic number: const int dataKey1ID = 100;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,SaveTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\SaveTests.cs,SavePrimaryKeyAssignedNew,The following statement contains a magic number: const int dataKey2ID = 200;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,SaveTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\SaveTests.cs,SavePrimaryKeyAssignedNew,The following statement contains a magic number: const int dataKey3ID = 300;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,SaveTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\SaveTests.cs,SaveCompositeKeyNew,The following statement contains a magic number: const int dataKey1ID = 100;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,SaveTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\SaveTests.cs,SaveCompositeKeyNew,The following statement contains a magic number: const int dataKey2ID = 200;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,SaveTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\SaveTests.cs,SaveCompositeKeyNew,The following statement contains a magic number: const int dataKey3ID = 300;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,SaveTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\SaveTests.cs,SaveCompositeKeyNewWithSingleOrDefaultById,The following statement contains a magic number: const int dataKey1ID = 100;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,SaveTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\SaveTests.cs,SaveCompositeKeyNewWithSingleOrDefaultById,The following statement contains a magic number: const int dataKey2ID = 200;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,SaveTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\SaveTests.cs,SaveCompositeKeyNewWithSingleOrDefaultById,The following statement contains a magic number: const int dataKey3ID = 300;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyObject,The following statement contains a magic number: poco.Age = InMemoryUsers[1].Age + 100;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyObject,The following statement contains a magic number: poco.Savings = (Decimal)1234.23;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyObjectOverridingPrimaryKey,The following statement contains a magic number: poco.Age = InMemoryUsers[1].Age + 100;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyObjectOverridingPrimaryKey,The following statement contains a magic number: poco.Savings = (Decimal)1234.23;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyObjectOverridingPrimaryKey,The following statement contains a magic number: Database.Update(poco' InMemoryUsers[2].UserId);
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyObjectOverridingPrimaryKey,The following statement contains a magic number: var verify = Database.SingleOrDefaultById<UserDecorated>(InMemoryUsers[2].UserId);
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyObjectOverridingPrimaryKey,The following statement contains a magic number: Assert.AreEqual(InMemoryUsers[2].UserId' verify.UserId);
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyObjectOverridingPrimaryKey,The following statement contains a magic number: Assert.AreNotEqual(InMemoryUsers[2].Age' verify.Age);
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyObjectOverridingPrimaryKey,The following statement contains a magic number: Assert.AreNotEqual(InMemoryUsers[2].Savings' verify.Savings);
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdateWithFields,The following statement contains a magic number: poco.Age = poco.Age + 100;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdateWithFields,The following statement contains a magic number: poco.Savings = (Decimal)1234.23;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyVersionConcurrencyException,The following statement contains a magic number: poco1.Age = 100;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyVersionConcurrencyException,The following statement contains a magic number: poco2.Age = 200;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyNoVersionConcurrencyException,The following statement contains a magic number: poco1.Age = 100;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyNoVersionConcurrencyException,The following statement contains a magic number: poco2.Age = 200;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyNoVersionConcurrencyException,The following statement contains a magic number: Assert.AreEqual(200' verify.Age);
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyVersionIntConcurrencyException,The following statement contains a magic number: poco1.Age = 100;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyVersionIntConcurrencyException,The following statement contains a magic number: poco2.Age = 200;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyNoVersionIntConcurrencyException,The following statement contains a magic number: poco1.Age = 100;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyNoVersionIntConcurrencyException,The following statement contains a magic number: poco2.Age = 200;
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdatePrimaryKeyNoVersionIntConcurrencyException,The following statement contains a magic number: Assert.AreEqual(200' verify.Age);
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdateBatchTest,The following statement contains a magic number: var users = InMemoryUsers.Select(x => UpdateBatch.For(x' Database.StartSnapshot(x))).Select(x => { x.Poco.Age = 30; return x; });
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdateBatchTest,The following statement contains a magic number: var updated = Database.UpdateBatch(users' new BatchOptions() { BatchSize = 10 });
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdateBatchTest,The following statement contains a magic number: Assert.AreEqual(15' result.Count);
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdateBatchTest,The following statement contains a magic number: Assert.AreEqual(30' u.Age);
Magic Number,NPoco.Tests.DecoratedTests.CRUDTests,UpdateTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\CRUDTests\UpdateTests.cs,UpdateBatchTest,The following statement contains a magic number: Assert.AreEqual(14' updated);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,FetchAllFields,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,FetchWithWhere,The following statement contains a magic number: Assert.AreEqual(5' users.Count);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,FetchWithWhere,The following statement contains a magic number: AssertUserValues(InMemoryUsers[i + 10]' users[i]);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,FetchWithPaging,The following statement contains a magic number: var users = Database.Fetch<UserDecorated>(2' 5' "where userid > 0 order by userid");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,FetchWithPaging,The following statement contains a magic number: var users = Database.Fetch<UserDecorated>(2' 5' "where userid > 0 order by userid");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,FetchWithPaging,The following statement contains a magic number: Assert.AreEqual(5' users.Count);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,FetchWithPaging,The following statement contains a magic number: AssertUserValues(InMemoryUsers[i + 5]' users[i]);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,BasicPaging,The following statement contains a magic number: var users = Database.Page<UserDecorated>(3' 5' "order by userid");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,BasicPaging,The following statement contains a magic number: var users = Database.Page<UserDecorated>(3' 5' "order by userid");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,BasicPaging,The following statement contains a magic number: Assert.AreEqual(5' users.Items.Count);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,BasicPaging,The following statement contains a magic number: AssertUserValues(InMemoryUsers[i + 10]' users.Items[i]);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,BasicPaging,The following statement contains a magic number: Assert.AreEqual(3' users.CurrentPage);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,BasicPaging,The following statement contains a magic number: Assert.AreEqual(5' users.ItemsPerPage);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,BasicPaging,The following statement contains a magic number: Assert.AreEqual(3' users.TotalPages);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,BasicSkipTake,The following statement contains a magic number: var users = Database.SkipTake<UserDecorated>(3' 2' "order by userid");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,BasicSkipTake,The following statement contains a magic number: var users = Database.SkipTake<UserDecorated>(3' 2' "order by userid");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,BasicSkipTake,The following statement contains a magic number: Assert.AreEqual(2' users.Count);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,BasicSkipTake,The following statement contains a magic number: AssertUserValues(InMemoryUsers[i + 3]' users[i]);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,BasicSkipTakeWithNoResults,The following statement contains a magic number: var users = Database.SkipTake<UserDecorated>(50' 10' "order by userid");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,BasicSkipTakeWithNoResults,The following statement contains a magic number: var users = Database.SkipTake<UserDecorated>(50' 10' "order by userid");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,ReturnObjectArray,The following statement contains a magic number: Assert.AreEqual(2' data[0][0]);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,ReturnDictionaryStringObject,The following statement contains a magic number: Assert.AreEqual(2' data[0]["userid"]);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,FetchAndQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\FetchAndQueryDecoratedTests.cs,FetchWithWhereExpression,The following statement contains a magic number: Assert.AreEqual(8' users.Count);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page,The following statement contains a magic number: var page = Database.Page<UserDecorated>(2' 5' "SELECT * FROM Users WHERE UserID <= 15 ORDER BY UserID");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page,The following statement contains a magic number: var page = Database.Page<UserDecorated>(2' 5' "SELECT * FROM Users WHERE UserID <= 15 ORDER BY UserID");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page,The following statement contains a magic number: Assert.AreEqual(page.Items.Count' 5);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page,The following statement contains a magic number: Assert.AreEqual(page.CurrentPage' 2);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page,The following statement contains a magic number: Assert.AreEqual(page.ItemsPerPage' 5);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page,The following statement contains a magic number: Assert.AreEqual(page.TotalItems' 15);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page,The following statement contains a magic number: Assert.AreEqual(page.TotalPages' 3);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,PageWithAlias,The following statement contains a magic number: var page = Database.Page<UserDecorated>(2' 5' "SELECT u.* FROM Users u WHERE u.userId <= 15 ORDER BY u.UserID' u.Age DESC");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,PageWithAlias,The following statement contains a magic number: var page = Database.Page<UserDecorated>(2' 5' "SELECT u.* FROM Users u WHERE u.userId <= 15 ORDER BY u.UserID' u.Age DESC");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,PageWithAlias,The following statement contains a magic number: Assert.AreEqual(page.Items.Count' 5);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,PageWithAlias,The following statement contains a magic number: Assert.AreEqual(page.CurrentPage' 2);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,PageWithAlias,The following statement contains a magic number: Assert.AreEqual(page.ItemsPerPage' 5);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,PageWithAlias,The following statement contains a magic number: Assert.AreEqual(page.TotalItems' 15);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,PageWithAlias,The following statement contains a magic number: Assert.AreEqual(page.TotalPages' 3);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_NoOrderBy,The following statement contains a magic number: var records = Database.Page<UserDecorated>(2' 5' "SELECT * FROM Users WHERE UserID <= 15");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_NoOrderBy,The following statement contains a magic number: var records = Database.Page<UserDecorated>(2' 5' "SELECT * FROM Users WHERE UserID <= 15");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_NoOrderBy,The following statement contains a magic number: Assert.AreEqual(records.Items.Count' 5);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_boundary,The following statement contains a magic number: var page = Database.Page<UserDecorated>(3' 5' "SELECT * FROM Users  WHERE UserID <= 15 ORDER BY UserID");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_boundary,The following statement contains a magic number: var page = Database.Page<UserDecorated>(3' 5' "SELECT * FROM Users  WHERE UserID <= 15 ORDER BY UserID");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_boundary,The following statement contains a magic number: Assert.AreEqual(page.Items.Count' 5);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_boundary,The following statement contains a magic number: Assert.AreEqual(page.CurrentPage' 3);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_boundary,The following statement contains a magic number: Assert.AreEqual(page.ItemsPerPage' 5);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_boundary,The following statement contains a magic number: Assert.AreEqual(page.TotalItems' 15);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_boundary,The following statement contains a magic number: Assert.AreEqual(page.TotalPages' 3);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_MultiPoco,The following statement contains a magic number: var page = Database.Page<CustomerUser>(2' 5' "SELECT Users.UserId AS Id' Users.Name CustomerName' ExtraUserInfos.Email CustomerEmail FROM Users INNER JOIN ExtraUserInfos ON Users.UserId = ExtraUserInfos.UserId");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_MultiPoco,The following statement contains a magic number: var page = Database.Page<CustomerUser>(2' 5' "SELECT Users.UserId AS Id' Users.Name CustomerName' ExtraUserInfos.Email CustomerEmail FROM Users INNER JOIN ExtraUserInfos ON Users.UserId = ExtraUserInfos.UserId");
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_MultiPoco,The following statement contains a magic number: Assert.AreEqual(page.Items.Count' 5);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_MultiPoco,The following statement contains a magic number: Assert.AreEqual(page.CurrentPage' 2);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_MultiPoco,The following statement contains a magic number: Assert.AreEqual(page.ItemsPerPage' 5);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_MultiPoco,The following statement contains a magic number: Assert.AreEqual(page.TotalItems' 15);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,PagingDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\PagingDecoratedTest.cs,Page_MultiPoco,The following statement contains a magic number: Assert.AreEqual(page.TotalPages' 3);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,SingleAndFirstQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\SingleAndFirstQueryDecoratedTest.cs,SingleByIdWithCompositePrimaryKey,The following statement contains a magic number: var user = Database.SingleById<CompositeObjectDecorated>(new { Key1_ID = 1' Key2ID = 2' Key3ID = 4 });
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,SingleAndFirstQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\SingleAndFirstQueryDecoratedTest.cs,SingleByIdWithCompositePrimaryKey,The following statement contains a magic number: var user = Database.SingleById<CompositeObjectDecorated>(new { Key1_ID = 1' Key2ID = 2' Key3ID = 4 });
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,SingleAndFirstQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\SingleAndFirstQueryDecoratedTest.cs,SingleByIdWithCompositePrimaryKeyUsingDictionary,The following statement contains a magic number: d["Key2ID"] = 2;
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,SingleAndFirstQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\SingleAndFirstQueryDecoratedTest.cs,SingleByIdWithCompositePrimaryKeyUsingDictionary,The following statement contains a magic number: d["Key3ID"] = 4;
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,SingleAndFirstQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\SingleAndFirstQueryDecoratedTest.cs,NotExists,The following statement contains a magic number: var userExists = Database.Exists<UserDecorated>(100);
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,SingleAndFirstQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\SingleAndFirstQueryDecoratedTest.cs,ExistsComposite,The following statement contains a magic number: var userExists = Database.Exists<CompositeObjectDecorated>(new              {                  Key1_ID = 1'                  Key2ID = 2'                  Key3ID = 4              });
Magic Number,NPoco.Tests.DecoratedTests.QueryTests,SingleAndFirstQueryDecoratedTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\QueryTests\SingleAndFirstQueryDecoratedTest.cs,ExistsComposite,The following statement contains a magic number: var userExists = Database.Exists<CompositeObjectDecorated>(new              {                  Key1_ID = 1'                  Key2ID = 2'                  Key3ID = 4              });
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionComplete,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionComplete,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionComplete,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionComplete,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionComplete,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionComplete,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionComplete,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionComplete,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionComplete,The following statement contains a magic number: var extra = new ExtraUserInfoDecorated                  {                      UserId = user.UserId'                      Email = "email" + 16 + "@email.com"'                      Children = 16                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionComplete,The following statement contains a magic number: var extra = new ExtraUserInfoDecorated                  {                      UserId = user.UserId'                      Email = "email" + 16 + "@email.com"'                      Children = 16                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionComplete,The following statement contains a magic number: Assert.AreEqual(count' 16);
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var user1 = new UserDecorated                      {                          Name = "Name" + 16'                          Age = 20 + 16'                          DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                          Savings = 50.00m + (1.01m * 16)                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var user1 = new UserDecorated                      {                          Name = "Name" + 16'                          Age = 20 + 16'                          DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                          Savings = 50.00m + (1.01m * 16)                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var user1 = new UserDecorated                      {                          Name = "Name" + 16'                          Age = 20 + 16'                          DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                          Savings = 50.00m + (1.01m * 16)                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var user1 = new UserDecorated                      {                          Name = "Name" + 16'                          Age = 20 + 16'                          DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                          Savings = 50.00m + (1.01m * 16)                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var user1 = new UserDecorated                      {                          Name = "Name" + 16'                          Age = 20 + 16'                          DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                          Savings = 50.00m + (1.01m * 16)                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var user1 = new UserDecorated                      {                          Name = "Name" + 16'                          Age = 20 + 16'                          DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                          Savings = 50.00m + (1.01m * 16)                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var user1 = new UserDecorated                      {                          Name = "Name" + 16'                          Age = 20 + 16'                          DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                          Savings = 50.00m + (1.01m * 16)                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var user1 = new UserDecorated                      {                          Name = "Name" + 16'                          Age = 20 + 16'                          DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                          Savings = 50.00m + (1.01m * 16)                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var extra1 = new ExtraUserInfoDecorated                      {                          UserId = user1.UserId'                          Email = "email" + 16 + "@email.com"'                          Children = 16                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var extra1 = new ExtraUserInfoDecorated                      {                          UserId = user1.UserId'                          Email = "email" + 16 + "@email.com"'                          Children = 16                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var extra = new ExtraUserInfoDecorated                  {                      UserId = user.UserId'                      Email = "email" + 16 + "@email.com"'                      Children = 16                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: var extra = new ExtraUserInfoDecorated                  {                      UserId = user.UserId'                      Email = "email" + 16 + "@email.com"'                      Children = 16                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWhole,The following statement contains a magic number: Assert.AreEqual(15' count);
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var user1 = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var user1 = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var user1 = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var user1 = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var user1 = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var user1 = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var user1 = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var user1 = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var extra1 = new ExtraUserInfoDecorated              {                  UserId = user1.UserId'                  Email = "email" + 16 + "@email.com"'                  Children = 16              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var extra1 = new ExtraUserInfoDecorated              {                  UserId = user1.UserId'                  Email = "email" + 16 + "@email.com"'                  Children = 16              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var user = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var user = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var user = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var user = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var user = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var user = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var user = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var user = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var extra = new ExtraUserInfoDecorated              {                  UserId = user.UserId'                  Email = "email" + 16 + "@email.com"'                  Children = 16              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: var extra = new ExtraUserInfoDecorated              {                  UserId = user.UserId'                  Email = "email" + 16 + "@email.com"'                  Children = 16              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionThatFailsAbortsWholeUsingBeginAbort,The following statement contains a magic number: Assert.AreEqual(15' count);
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var extra = new ExtraUserInfoDecorated                  {                      UserId = user.UserId'                      Email = "email" + 16 + "@email.com"'                      Children = 16                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var extra = new ExtraUserInfoDecorated                  {                      UserId = user.UserId'                      Email = "email" + 16 + "@email.com"'                      Children = 16                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var user1 = new UserDecorated                      {                          Name = "Name" + 16'                          Age = 20 + 16'                          DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                          Savings = 50.00m + (1.01m * 16)                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var user1 = new UserDecorated                      {                          Name = "Name" + 16'                          Age = 20 + 16'                          DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                          Savings = 50.00m + (1.01m * 16)                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var user1 = new UserDecorated                      {                          Name = "Name" + 16'                          Age = 20 + 16'                          DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                          Savings = 50.00m + (1.01m * 16)                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var user1 = new UserDecorated                      {                          Name = "Name" + 16'                          Age = 20 + 16'                          DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                          Savings = 50.00m + (1.01m * 16)                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var user1 = new UserDecorated                      {                          Name = "Name" + 16'                          Age = 20 + 16'                          DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                          Savings = 50.00m + (1.01m * 16)                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var user1 = new UserDecorated                      {                          Name = "Name" + 16'                          Age = 20 + 16'                          DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                          Savings = 50.00m + (1.01m * 16)                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var user1 = new UserDecorated                      {                          Name = "Name" + 16'                          Age = 20 + 16'                          DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                          Savings = 50.00m + (1.01m * 16)                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var user1 = new UserDecorated                      {                          Name = "Name" + 16'                          Age = 20 + 16'                          DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                          Savings = 50.00m + (1.01m * 16)                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var extra1 = new ExtraUserInfoDecorated                      {                          UserId = user1.UserId'                          Email = "email" + 16 + "@email.com"'                          Children = 16                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: var extra1 = new ExtraUserInfoDecorated                      {                          UserId = user1.UserId'                          Email = "email" + 16 + "@email.com"'                          Children = 16                      };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothComplete,The following statement contains a magic number: Assert.AreEqual(17' count);
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var user = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m*16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var user = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m*16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var user = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m*16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var user = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m*16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var user = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m*16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var user = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m*16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var user = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m*16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var user = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m*16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var extra = new ExtraUserInfoDecorated              {                  UserId = user.UserId'                  Email = "email" + 16 + "@email.com"'                  Children = 16              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var extra = new ExtraUserInfoDecorated              {                  UserId = user.UserId'                  Email = "email" + 16 + "@email.com"'                  Children = 16              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var user1 = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m*16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var user1 = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m*16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var user1 = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m*16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var user1 = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m*16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var user1 = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m*16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var user1 = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m*16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var user1 = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m*16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var user1 = new UserDecorated              {                  Name = "Name" + 16'                  Age = 20 + 16'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m*16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var extra1 = new ExtraUserInfoDecorated              {                  UserId = user1.UserId'                  Email = "email" + 16 + "@email.com"'                  Children = 16              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: var extra1 = new ExtraUserInfoDecorated              {                  UserId = user1.UserId'                  Email = "email" + 16 + "@email.com"'                  Children = 16              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,NestedTransactionsBothCompleteUsingBeginAbort,The following statement contains a magic number: Assert.AreEqual(17' count);
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionDiscarded,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionDiscarded,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionDiscarded,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionDiscarded,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionDiscarded,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionDiscarded,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionDiscarded,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionDiscarded,The following statement contains a magic number: var user = new UserDecorated                  {                      Name = "Name" + 16'                      Age = 20 + 16'                      DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                      Savings = 50.00m + (1.01m * 16)                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionDiscarded,The following statement contains a magic number: var extra = new ExtraUserInfoDecorated                  {                      UserId = user.UserId'                      Email = "email" + 16 + "@email.com"'                      Children = 16                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionDiscarded,The following statement contains a magic number: var extra = new ExtraUserInfoDecorated                  {                      UserId = user.UserId'                      Email = "email" + 16 + "@email.com"'                      Children = 16                  };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,ExternalTransactionDiscarded,The following statement contains a magic number: Assert.AreEqual(count' 15);
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationCompletes,The following statement contains a magic number: var nameInsert = "Name" + 16;
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationCompletes,The following statement contains a magic number: var ageInsert = 20 + 16;
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationCompletes,The following statement contains a magic number: var ageInsert = 20 + 16;
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationCompletes,The following statement contains a magic number: var nameUpdate = "Name" + 99;
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationCompletes,The following statement contains a magic number: var ageUpdate = 20 + 99;
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationCompletes,The following statement contains a magic number: var ageUpdate = 20 + 99;
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationCompletes,The following statement contains a magic number: var user = new UserDecorated              {                  Name = nameInsert'                  Age = ageInsert'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationCompletes,The following statement contains a magic number: var user = new UserDecorated              {                  Name = nameInsert'                  Age = ageInsert'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationCompletes,The following statement contains a magic number: var user = new UserDecorated              {                  Name = nameInsert'                  Age = ageInsert'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationCompletes,The following statement contains a magic number: var user = new UserDecorated              {                  Name = nameInsert'                  Age = ageInsert'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationCompletes,The following statement contains a magic number: var user = new UserDecorated              {                  Name = nameInsert'                  Age = ageInsert'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationRollback,The following statement contains a magic number: var nameInsert = "Name" + 16;
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationRollback,The following statement contains a magic number: var ageInsert = 20 + 16;
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationRollback,The following statement contains a magic number: var ageInsert = 20 + 16;
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationRollback,The following statement contains a magic number: var nameUpdate = "Name" + 99;
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationRollback,The following statement contains a magic number: var ageUpdate = 20 + 99;
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationRollback,The following statement contains a magic number: var ageUpdate = 20 + 99;
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationRollback,The following statement contains a magic number: var user = new UserDecorated              {                  Name = nameInsert'                  Age = ageInsert'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationRollback,The following statement contains a magic number: var user = new UserDecorated              {                  Name = nameInsert'                  Age = ageInsert'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationRollback,The following statement contains a magic number: var user = new UserDecorated              {                  Name = nameInsert'                  Age = ageInsert'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationRollback,The following statement contains a magic number: var user = new UserDecorated              {                  Name = nameInsert'                  Age = ageInsert'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.DecoratedTests,TransactionDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\DecoratedTests\TransactionDecoratedTests.cs,TransactionSettingsDontCauseLocksAndTransationRollback,The following statement contains a magic number: var user = new UserDecorated              {                  Name = nameInsert'                  Age = ageInsert'                  DateOfBirth = new DateTime(1970' 1' 1).AddYears(16)'                  Savings = 50.00m + (1.01m * 16)              };
Magic Number,NPoco.Tests.FluentMappings,MapTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentMappings\MapTests.cs,InheritColumns,The following statement contains a magic number: Assert.AreEqual(4' typeDefinition1.ColumnConfiguration.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchByExpressionAdvanced,The following statement contains a magic number: var users = Database.Query<User>().Where(y => y.UserId > 10).OrderBy(x => x.UserId).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchByExpressionAdvanced,The following statement contains a magic number: Assert.AreEqual(5' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchByExpressionAdvanced,The following statement contains a magic number: AssertUserValues(InMemoryUsers[i + 10]' users[i]);
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWhereExpression,The following statement contains a magic number: var users = Database.Query<User>().Where(y => y.UserId == 2 && !y.IsMale).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWhereExpressionEquals,The following statement contains a magic number: var users = Database.Query<User>().Where(y => y.UserId.Equals(2)).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchByExpressionAndColumnAlias,The following statement contains a magic number: Assert.AreEqual(8' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchByExpressionAndLimit,The following statement contains a magic number: var users = Database.Query<UserDecorated>().OrderBy(x => x.UserId).Limit(5' 5).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchByExpressionAndLimit,The following statement contains a magic number: var users = Database.Query<UserDecorated>().OrderBy(x => x.UserId).Limit(5' 5).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchByExpressionAndLimit,The following statement contains a magic number: Assert.AreEqual(5' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchByExpressionAndSubstringInWhere,The following statement contains a magic number: var users = Database.Query<UserDecorated>().Where(x => x.Name.Substring(0' 4) == "Name").ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchByExpressionAndSubstringInWhere,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchByExpressionAndSubstringAndUpper,The following statement contains a magic number: var users = Database.Query<UserDecorated>().Where(x => x.Name.ToUpper().Substring(0' 4) == "NAME").ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchByExpressionAndSubstringAndUpper,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchByExpressionAndContains,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchByExpressionAndStartsWith,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchByExpressionAndSelectWithSubstring,The following statement contains a magic number: var users = Database.Query<UserDecorated>().ProjectTo(x => new {Name = x.Name.Substring(0' 2)}).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchByExpressionAndSelectWithSubstring2,The following statement contains a magic number: var users = Database.Query<UserDecorated>().ProjectTo(x => new { Name = x.Name.Substring(2) }).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionContains,The following statement contains a magic number: var list = new[] {1' 2' 3' 4};
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionContains,The following statement contains a magic number: var list = new[] {1' 2' 3' 4};
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionContains,The following statement contains a magic number: var list = new[] {1' 2' 3' 4};
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionContains,The following statement contains a magic number: Assert.AreEqual(4' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionContainsWithNullable,The following statement contains a magic number: var list = new[] { 2 };
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionNotContains,The following statement contains a magic number: var list = new[] { 1' 2' 3' 4 };
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionNotContains,The following statement contains a magic number: var list = new[] { 1' 2' 3' 4 };
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionNotContains,The following statement contains a magic number: var list = new[] { 1' 2' 3' 4 };
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionNotContains,The following statement contains a magic number: Assert.AreEqual(11' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionNotContains,The following statement contains a magic number: AssertUserValues(InMemoryUsers[i+4]' users[i]);
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionInAsExtensionMethod,The following statement contains a magic number: var list = new[] {1' 2' 3' 4};
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionInAsExtensionMethod,The following statement contains a magic number: var list = new[] {1' 2' 3' 4};
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionInAsExtensionMethod,The following statement contains a magic number: var list = new[] {1' 2' 3' 4};
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionInAsExtensionMethod,The following statement contains a magic number: Assert.AreEqual(4' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionInAsStaticMethod,The following statement contains a magic number: var list = new[] {1' 2' 3' 4};
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionInAsStaticMethod,The following statement contains a magic number: var list = new[] {1' 2' 3' 4};
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionInAsStaticMethod,The following statement contains a magic number: var list = new[] {1' 2' 3' 4};
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,FetchWithWhereExpressionInAsStaticMethod,The following statement contains a magic number: Assert.AreEqual(4' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,UpdateWhere,The following statement contains a magic number: var list = new[] {1' 2' 3' 4};
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,UpdateWhere,The following statement contains a magic number: var list = new[] {1' 2' 3' 4};
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,UpdateWhere,The following statement contains a magic number: var list = new[] {1' 2' 3' 4};
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,UpdateWhere,The following statement contains a magic number: i < 4
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,UpdateWhere,The following statement contains a magic number: i < 15
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,UpdateWhere1,The following statement contains a magic number: InMemoryUsers[0].Age = 99;
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,UpdateWhere1,The following statement contains a magic number: Assert.AreEqual(99' users.Age);
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,DeleteWhere,The following statement contains a magic number: var list = new[]              {                  new User() {UserId = 1}'                  new User() {UserId = 2}'                  new User() {UserId = 3}'                  new User() {UserId = 4}'              };
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,DeleteWhere,The following statement contains a magic number: var list = new[]              {                  new User() {UserId = 1}'                  new User() {UserId = 2}'                  new User() {UserId = 3}'                  new User() {UserId = 4}'              };
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,DeleteWhere,The following statement contains a magic number: var list = new[]              {                  new User() {UserId = 1}'                  new User() {UserId = 2}'                  new User() {UserId = 3}'                  new User() {UserId = 4}'              };
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,DeleteWhere,The following statement contains a magic number: Assert.AreEqual(11' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,ExpressionFluentTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\ExpressionFluentTests.cs,BitwiseSupport,The following statement contains a magic number: Assert.AreEqual(8' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,FetchWithWhere,The following statement contains a magic number: Assert.AreEqual(5' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,FetchWithWhere,The following statement contains a magic number: AssertUserValues(InMemoryUsers[i + 10]' users[i]);
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,FetchWithPaging,The following statement contains a magic number: var users = Database.Fetch<User>(2' 5' "where userid > 0 order by userid");
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,FetchWithPaging,The following statement contains a magic number: var users = Database.Fetch<User>(2' 5' "where userid > 0 order by userid");
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,FetchWithPaging,The following statement contains a magic number: Assert.AreEqual(5' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,FetchWithPaging,The following statement contains a magic number: AssertUserValues(InMemoryUsers[i + 5]' users[i]);
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,BasicPaging,The following statement contains a magic number: var users = Database.Page<User>(3' 5' "order by userid");
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,BasicPaging,The following statement contains a magic number: var users = Database.Page<User>(3' 5' "order by userid");
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,BasicPaging,The following statement contains a magic number: Assert.AreEqual(5' users.Items.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,BasicPaging,The following statement contains a magic number: AssertUserValues(InMemoryUsers[i + 10]' users.Items[i]);
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,BasicPaging,The following statement contains a magic number: Assert.AreEqual(3' users.CurrentPage);
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,BasicPaging,The following statement contains a magic number: Assert.AreEqual(5' users.ItemsPerPage);
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,BasicPaging,The following statement contains a magic number: Assert.AreEqual(3' users.TotalPages);
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,BasicSkipTake,The following statement contains a magic number: var users = Database.SkipTake<User>(3' 2' "order by userid");
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,BasicSkipTake,The following statement contains a magic number: var users = Database.SkipTake<User>(3' 2' "order by userid");
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,BasicSkipTake,The following statement contains a magic number: Assert.AreEqual(2' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,BasicSkipTake,The following statement contains a magic number: AssertUserValues(InMemoryUsers[i + 3]' users[i]);
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,BasicSkipTakeWithNoResults,The following statement contains a magic number: var users = Database.SkipTake<User>(50' 10' "order by userid");
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,BasicSkipTakeWithNoResults,The following statement contains a magic number: var users = Database.SkipTake<User>(50' 10' "order by userid");
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,ReturnObjectArray,The following statement contains a magic number: Assert.AreEqual(2' data[0][0]);
Magic Number,NPoco.Tests.FluentTests.QueryTests,FetchAndQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\FetchAndQueryFluentTest.cs,ReturnDictionaryStringObject,The following statement contains a magic number: Assert.AreEqual(2' data[0]["userid"]);
Magic Number,NPoco.Tests.FluentTests.QueryTests,NullableTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\NullableTests.cs,NullableExpressionHasValueWithAnotherExpression_ReturnsIsNotNull,The following statement contains a magic number: sqlExpression.Where(x => x.Age.HasValue && x.Age > 2);
Magic Number,NPoco.Tests.FluentTests.QueryTests,NullableTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\NullableTests.cs,NullableExpressionNotHasValueWithAnotherExpression_ReturnsNotIsNotNull,The following statement contains a magic number: sqlExpression.Where(x => !x.Age.HasValue && x.Age > 2);
Magic Number,NPoco.Tests.FluentTests.QueryTests,NullableTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\NullableTests.cs,ExpressionWithNullableExpressionNotHasValue_ReturnsNotIsNotNull,The following statement contains a magic number: sqlExpression.Where(x => x.Age > 2 && x.Age.HasValue);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page,The following statement contains a magic number: var page = Database.Page<User>(2' 5' @"                  SELECT Name' UserID' is_male FROM Users WHERE ( UserID <= @0 ) order by UserID desc' is_male"' 15);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page,The following statement contains a magic number: var page = Database.Page<User>(2' 5' @"                  SELECT Name' UserID' is_male FROM Users WHERE ( UserID <= @0 ) order by UserID desc' is_male"' 15);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page,The following statement contains a magic number: var page = Database.Page<User>(2' 5' @"                  SELECT Name' UserID' is_male FROM Users WHERE ( UserID <= @0 ) order by UserID desc' is_male"' 15);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page,The following statement contains a magic number: Assert.AreEqual(page.Items.Count' 5);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page,The following statement contains a magic number: Assert.AreEqual(page.CurrentPage' 2);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page,The following statement contains a magic number: Assert.AreEqual(page.ItemsPerPage' 5);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page,The following statement contains a magic number: Assert.AreEqual(page.TotalItems' 15);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page,The following statement contains a magic number: Assert.AreEqual(page.TotalPages' 3);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_NoOrderBy,The following statement contains a magic number: var records = Database.Page<User>(2' 5' "SELECT * FROM Users WHERE UserID <= 15");
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_NoOrderBy,The following statement contains a magic number: var records = Database.Page<User>(2' 5' "SELECT * FROM Users WHERE UserID <= 15");
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_NoOrderBy,The following statement contains a magic number: Assert.AreEqual(records.Items.Count' 5);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_NoOrderBy_WithAliases,The following statement contains a magic number: var records = Database.Page<User>(2' 5' "SELECT u.* FROM Users u WHERE UserID <= 15");
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_NoOrderBy_WithAliases,The following statement contains a magic number: var records = Database.Page<User>(2' 5' "SELECT u.* FROM Users u WHERE UserID <= 15");
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_NoOrderBy_WithAliases,The following statement contains a magic number: Assert.AreEqual(records.Items.Count' 5);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_Distinct,The following statement contains a magic number: var page = Database.Page<User>(2' 5' "SELECT DISTINCT * FROM Users  WHERE UserID <= 15 ORDER BY UserID");
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_Distinct,The following statement contains a magic number: var page = Database.Page<User>(2' 5' "SELECT DISTINCT * FROM Users  WHERE UserID <= 15 ORDER BY UserID");
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_Distinct,The following statement contains a magic number: Assert.AreEqual(page.Items.Count' 5);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_Distinct,The following statement contains a magic number: Assert.AreEqual(page.CurrentPage' 2);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_Distinct,The following statement contains a magic number: Assert.AreEqual(page.ItemsPerPage' 5);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_Distinct,The following statement contains a magic number: Assert.AreEqual(page.TotalItems' 15);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_Distinct,The following statement contains a magic number: Assert.AreEqual(page.TotalPages' 3);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_boundary,The following statement contains a magic number: var page = Database.Page<User>(3' 5' "SELECT DISTINCT * FROM Users  WHERE UserID <= 15 ORDER BY UserID");
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_boundary,The following statement contains a magic number: var page = Database.Page<User>(3' 5' "SELECT DISTINCT * FROM Users  WHERE UserID <= 15 ORDER BY UserID");
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_boundary,The following statement contains a magic number: Assert.AreEqual(page.Items.Count' 5);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_boundary,The following statement contains a magic number: Assert.AreEqual(page.CurrentPage' 3);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_boundary,The following statement contains a magic number: Assert.AreEqual(page.ItemsPerPage' 5);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_boundary,The following statement contains a magic number: Assert.AreEqual(page.TotalItems' 15);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_boundary,The following statement contains a magic number: Assert.AreEqual(page.TotalPages' 3);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_MultiPoco,The following statement contains a magic number: var page = Database.Page<CustomerUser>(2' 5' "SELECT Users.UserId AS Id' Users.Name CustomerName' ExtraUserInfos.Email CustomerEmail FROM Users INNER JOIN ExtraUserInfos ON Users.UserId = ExtraUserInfos.UserId");
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_MultiPoco,The following statement contains a magic number: var page = Database.Page<CustomerUser>(2' 5' "SELECT Users.UserId AS Id' Users.Name CustomerName' ExtraUserInfos.Email CustomerEmail FROM Users INNER JOIN ExtraUserInfos ON Users.UserId = ExtraUserInfos.UserId");
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_MultiPoco,The following statement contains a magic number: Assert.AreEqual(page.Items.Count' 5);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_MultiPoco,The following statement contains a magic number: Assert.AreEqual(page.CurrentPage' 2);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_MultiPoco,The following statement contains a magic number: Assert.AreEqual(page.ItemsPerPage' 5);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_MultiPoco,The following statement contains a magic number: Assert.AreEqual(page.TotalItems' 15);
Magic Number,NPoco.Tests.FluentTests.QueryTests,PagingFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\PagingFluentTest.cs,Page_MultiPoco,The following statement contains a magic number: Assert.AreEqual(page.TotalPages' 3);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryAllData,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,CountQuery,The following statement contains a magic number: Assert.AreEqual(15' usersCount);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,DistinctQueryWithProjection,The following statement contains a magic number: Assert.AreEqual(2' userRecordsExist.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,DistinctQueryWithSimpleProjection,The following statement contains a magic number: Assert.AreEqual(2' userRecordsExist.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,DistinctQuery,The following statement contains a magic number: Assert.AreEqual(15' userRecordsExist.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithWhereTrue,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithSeparateWheresProduceSameSql,The following statement contains a magic number: var users1 = Database.Query<User>().Where(x => x.UserId == 1).Where(x => x.UserId == 2).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithSeparateWheresProduceSameSql,The following statement contains a magic number: var users2 = Database.Query<User>().Where(x => x.UserId == 1 && x.UserId == 2).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithWhereChar,The following statement contains a magic number: Assert.AreEqual(8' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithWhereCharVar,The following statement contains a magic number: Assert.AreEqual(8' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithOrderBy,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithOrderByDescending,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithOrderByThenBy,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithOrderByThenByDescending,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithOrderByDescendingThenBy,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithOrderByDescendingThenByDescending,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithLimit,The following statement contains a magic number: var users = Database.Query<User>().OrderBy(x=>x.UserId).Limit(5).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithLimit,The following statement contains a magic number: var inmemory = InMemoryUsers.OrderBy(x=>x.UserId).Take(5).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithLimit,The following statement contains a magic number: Assert.AreEqual(5' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithLimitWithOffset,The following statement contains a magic number: var users = Database.Query<User>().OrderBy(x => x.UserId).Limit(5'5).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithLimitWithOffset,The following statement contains a magic number: var users = Database.Query<User>().OrderBy(x => x.UserId).Limit(5'5).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithLimitWithOffset,The following statement contains a magic number: var inmemory = InMemoryUsers.OrderBy(x => x.UserId).Skip(5).Take(5).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithLimitWithOffset,The following statement contains a magic number: var inmemory = InMemoryUsers.OrderBy(x => x.UserId).Skip(5).Take(5).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithLimitWithOffset,The following statement contains a magic number: Assert.AreEqual(5' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithWhere,The following statement contains a magic number: var users = Database.Query<User>().Where(x => x.UserId > 10).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithWhere,The following statement contains a magic number: var inmemory = InMemoryUsers.Where(x => x.UserId > 10).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithWhere,The following statement contains a magic number: Assert.AreEqual(5' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithWhereReversed,The following statement contains a magic number: var users = Database.Query<User>().Where(x => 10 < x.UserId).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithWhereReversed,The following statement contains a magic number: var inmemory = InMemoryUsers.Where(x => 10 < x.UserId).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithWhereReversed,The following statement contains a magic number: Assert.AreEqual(5' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithWhereAnd,The following statement contains a magic number: var users = Database.Query<User>().Where(x => x.UserId > 10 && x.UserId < 12).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithWhereAnd,The following statement contains a magic number: var users = Database.Query<User>().Where(x => x.UserId > 10 && x.UserId < 12).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithWhereAnd,The following statement contains a magic number: var inmemory = InMemoryUsers.Where(x => x.UserId > 10 && x.UserId < 12).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithWhereAnd,The following statement contains a magic number: var inmemory = InMemoryUsers.Where(x => x.UserId > 10 && x.UserId < 12).ToList();
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithInclude,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithIncludeOneToOne,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithIncludeAndNestedOrderBy,The following statement contains a magic number: Assert.AreEqual(7' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithProjectionAndEnclosedMethod,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithProjectionAndEnclosedMethod1,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithProjectionAndEnclosedMethod2,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithProjectionAndEnclosedMethod3,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithProjectionAndEnclosedMethod4,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithProjectionAndMethod,The following statement contains a magic number: Assert.AreEqual(21' users[0].Age);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithProjectionAndMethod,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithProjection,The following statement contains a magic number: Assert.AreEqual(21' users[0].Age);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithProjection,The following statement contains a magic number: Assert.AreEqual(15' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithProjectionAndLimit,The following statement contains a magic number: var users = Database.Query<User>()                  .Limit(10)                  .ProjectTo(x => new { x.Age });
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithProjectionAndLimit,The following statement contains a magic number: Assert.AreEqual(21' users[0].Age);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithProjectionAndLimit,The following statement contains a magic number: Assert.AreEqual(10' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithIncludeNestedOrderByLimitAndProjection,The following statement contains a magic number: var users = Database.Query<User>()                  .Include(x => x.House)                  .Where(x => x.House != null)                  .OrderBy(x => x.House.HouseId)                  .Limit(5)                  .ProjectTo(x => new { Address = (x.House != null ? x.House.Address : string.Empty)' x.House.HouseId});
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithIncludeNestedOrderByLimitAndProjection,The following statement contains a magic number: Assert.AreEqual(5' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithIncludeNestedOrderByLimitAndProjectionToProjectUser,The following statement contains a magic number: var users = Database.Query<User>()                  .Include(x => x.House)                  .Where(x => x.House.HouseId > 2)                  .OrderBy(x => x.House.HouseId)                  .Limit(5)                  .ProjectTo(x => new ProjectUser() { UserId = x.UserId' NameWithAge = x.Name + x.Age });
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithIncludeNestedOrderByLimitAndProjectionToProjectUser,The following statement contains a magic number: var users = Database.Query<User>()                  .Include(x => x.House)                  .Where(x => x.House.HouseId > 2)                  .OrderBy(x => x.House.HouseId)                  .Limit(5)                  .ProjectTo(x => new ProjectUser() { UserId = x.UserId' NameWithAge = x.Name + x.Age });
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithIncludeNestedOrderByLimitAndProjectionToProjectUser,The following statement contains a magic number: Assert.AreEqual(4' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithIncludeNestedOrderByLimitAndProjectionToProjectUserWithList,The following statement contains a magic number: var users = Database.Query<User>()                  .Include(x => x.House)                  .Where(x => x.House != null)                  .OrderBy(x => x.House.HouseId)                  .Limit(5)                  .ProjectTo(x => new ProjectUser() { Array = new object[] { x.Name' x.Age } });
Magic Number,NPoco.Tests.FluentTests.QueryTests,QueryProviderTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\QueryProviderTests.cs,QueryWithIncludeNestedOrderByLimitAndProjectionToProjectUserWithList,The following statement contains a magic number: Assert.AreEqual(5' users.Count);
Magic Number,NPoco.Tests.FluentTests.QueryTests,SingleAndFirstQueryFluentTest,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\FluentTests\QueryTests\SingleAndFirstQueryFluentTest.cs,SingleWithAdHocObject,The following statement contains a magic number: Assert.AreEqual(999' data.UserId);
Magic Number,NPoco.Tests.NewMapper,ComplexMappingTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\ComplexMappingTests.cs,NestedClassShouldBeMappedAsAComplexObject,The following statement contains a magic number: Assert.AreEqual(7' pocoData.Columns.Count);
Magic Number,NPoco.Tests.NewMapper,ComplexMappingTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\ComplexMappingTests.cs,NestedClassShouldBeAbleToGetValue,The following statement contains a magic number: var obj = new ComplexMap()              {                  Name = "Bill"'                  NestedComplexMap = new NestedComplexMap()                  {                      Id = 9                  }              };
Magic Number,NPoco.Tests.NewMapper,ComplexMappingTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\ComplexMappingTests.cs,NestedClassShouldBeAbleToGetValue,The following statement contains a magic number: Assert.AreEqual(9' val);
Magic Number,NPoco.Tests.NewMapper,ComplexMappingTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\ComplexMappingTests.cs,NestedNestedClassShouldBeAbleToGetValue,The following statement contains a magic number: var obj = new ComplexMap()              {                  Name = "Bill"'                  NestedComplexMap = new NestedComplexMap()                  {                      Id = 9'                      NestedComplexMap2 = new NestedComplexMap2()                      {                          Id = 18                      }                  }              };
Magic Number,NPoco.Tests.NewMapper,ComplexMappingTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\ComplexMappingTests.cs,NestedNestedClassShouldBeAbleToGetValue,The following statement contains a magic number: var obj = new ComplexMap()              {                  Name = "Bill"'                  NestedComplexMap = new NestedComplexMap()                  {                      Id = 9'                      NestedComplexMap2 = new NestedComplexMap2()                      {                          Id = 18                      }                  }              };
Magic Number,NPoco.Tests.NewMapper,ComplexMappingTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\ComplexMappingTests.cs,NestedNestedClassShouldBeAbleToGetValue,The following statement contains a magic number: Assert.AreEqual(18' val);
Magic Number,NPoco.Tests.NewMapper,NewMapperDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\ComplexMappingTests.cs,Test1,The following statement contains a magic number: var obj = new ComplexMap()              {                  Name = "Bill"'                  NestedComplexMap = new NestedComplexMap()                  {                      Id = 9'                      NestedComplexMap2 = new NestedComplexMap2()                      {                          Id = 18                      }                  }              };
Magic Number,NPoco.Tests.NewMapper,NewMapperDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\ComplexMappingTests.cs,Test1,The following statement contains a magic number: var obj = new ComplexMap()              {                  Name = "Bill"'                  NestedComplexMap = new NestedComplexMap()                  {                      Id = 9'                      NestedComplexMap2 = new NestedComplexMap2()                      {                          Id = 18                      }                  }              };
Magic Number,NPoco.Tests.NewMapper,NewMapperDecoratedTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\ComplexMappingTests.cs,ProjectToComplexColumn,The following statement contains a magic number: var obj = new ComplexMap()              {                  Name = "Bill"'                  NestedComplexMap2 = new NestedComplexMap2()                  {                      Id = 9'                      Name = "Silly"                  }              };
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetName,The following statement contains a magic number: switch (i)              {                  case 0: return "Name";                  case 1: return "MoneyId";                  case 2: return "Money__Value";                  case 3: return "Money__Currency";                  case 4: return "Money__Money2__Value";                  case 5: return "Money__Money2__Currency";              }
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetName,The following statement contains a magic number: switch (i)              {                  case 0: return "Name";                  case 1: return "MoneyId";                  case 2: return "Money__Value";                  case 3: return "Money__Currency";                  case 4: return "Money__Money2__Value";                  case 5: return "Money__Money2__Currency";              }
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetName,The following statement contains a magic number: switch (i)              {                  case 0: return "Name";                  case 1: return "MoneyId";                  case 2: return "Money__Value";                  case 3: return "Money__Currency";                  case 4: return "Money__Money2__Value";                  case 5: return "Money__Money2__Currency";              }
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetName,The following statement contains a magic number: switch (i)              {                  case 0: return "Name";                  case 1: return "MoneyId";                  case 2: return "Money__Value";                  case 3: return "Money__Currency";                  case 4: return "Money__Money2__Value";                  case 5: return "Money__Money2__Currency";              }
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetValues,The following statement contains a magic number: values[1] = 5;
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetValues,The following statement contains a magic number: values[2] = 23m;
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetValues,The following statement contains a magic number: values[2] = 23m;
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetValues,The following statement contains a magic number: values[3] = "AUD";
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetValues,The following statement contains a magic number: values[4] = 24m;
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetValues,The following statement contains a magic number: values[4] = 24m;
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetValues,The following statement contains a magic number: values[5] = "USD";
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetFieldType,The following statement contains a magic number: switch (i)              {                  case 0: return typeof(string);                  case 1: return typeof(int);                  case 2: return typeof(decimal);                  case 3: return typeof(string);                  case 4: return typeof(decimal);                  case 5: return typeof(string);              }
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetFieldType,The following statement contains a magic number: switch (i)              {                  case 0: return typeof(string);                  case 1: return typeof(int);                  case 2: return typeof(decimal);                  case 3: return typeof(string);                  case 4: return typeof(decimal);                  case 5: return typeof(string);              }
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetFieldType,The following statement contains a magic number: switch (i)              {                  case 0: return typeof(string);                  case 1: return typeof(int);                  case 2: return typeof(decimal);                  case 3: return typeof(string);                  case 4: return typeof(decimal);                  case 5: return typeof(string);              }
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetFieldType,The following statement contains a magic number: switch (i)              {                  case 0: return typeof(string);                  case 1: return typeof(int);                  case 2: return typeof(decimal);                  case 3: return typeof(string);                  case 4: return typeof(decimal);                  case 5: return typeof(string);              }
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetValue,The following statement contains a magic number: switch (i)              {                  case 0: return "Name";                  case 1: return 5;                  case 2: return 23m;                  case 3: return "AUD";                  case 4: return 24m;                  case 5: return "USD";              }
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetValue,The following statement contains a magic number: switch (i)              {                  case 0: return "Name";                  case 1: return 5;                  case 2: return 23m;                  case 3: return "AUD";                  case 4: return 24m;                  case 5: return "USD";              }
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetValue,The following statement contains a magic number: switch (i)              {                  case 0: return "Name";                  case 1: return 5;                  case 2: return 23m;                  case 3: return "AUD";                  case 4: return 24m;                  case 5: return "USD";              }
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetValue,The following statement contains a magic number: switch (i)              {                  case 0: return "Name";                  case 1: return 5;                  case 2: return 23m;                  case 3: return "AUD";                  case 4: return 24m;                  case 5: return "USD";              }
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetValue,The following statement contains a magic number: switch (i)              {                  case 0: return "Name";                  case 1: return 5;                  case 2: return 23m;                  case 3: return "AUD";                  case 4: return 24m;                  case 5: return "USD";              }
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetValue,The following statement contains a magic number: switch (i)              {                  case 0: return "Name";                  case 1: return 5;                  case 2: return 23m;                  case 3: return "AUD";                  case 4: return 24m;                  case 5: return "USD";              }
Magic Number,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetValue,The following statement contains a magic number: switch (i)              {                  case 0: return "Name";                  case 1: return 5;                  case 2: return 23m;                  case 3: return "AUD";                  case 4: return 24m;                  case 5: return "USD";              }
Magic Number,NPoco.Tests.NewMapper,IncludesWithLinqProvider,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\IncludesWithLinqProvider.cs,Test3,The following statement contains a magic number: Assert.AreEqual(2' result[2].Items.Count);
Magic Number,NPoco.Tests.NewMapper,IncludesWithLinqProvider,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\IncludesWithLinqProvider.cs,Test3,The following statement contains a magic number: Assert.AreEqual(2' result[2].Items.Count);
Magic Number,NPoco.Tests.NewMapper,IncludesWithLinqProvider,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\IncludesWithLinqProvider.cs,Test4,The following statement contains a magic number: Assert.AreEqual(15' results.Count);
Magic Number,NPoco.Tests.NewMapper,IncludesWithLinqProvider,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\IncludesWithLinqProvider.cs,Test4,The following statement contains a magic number: Assert.AreEqual(2' results[0].One.OneId);
Magic Number,NPoco.Tests.NewMapper,IncludesWithLinqProvider,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\IncludesWithLinqProvider.cs,IncludeManyAsync,The following statement contains a magic number: Assert.AreEqual(15' results.Count);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test1,The following statement contains a magic number: Assert.AreEqual(23' data.Money.Value);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test3,The following statement contains a magic number: Assert.AreEqual(23' data.Money.Value);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test4_2,The following statement contains a magic number: Assert.AreEqual("AUD"' data[2]);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test6,The following statement contains a magic number: Assert.AreEqual(23' data.Age);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test7,The following statement contains a magic number: Assert.AreEqual(23' data["Age"]);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test8,The following statement contains a magic number: Assert.AreEqual(23' data["Age"]);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test9,The following statement contains a magic number: Assert.AreEqual(23' data.Money.Value);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test9,The following statement contains a magic number: Assert.AreEqual(24' data.Money.Money2.Value);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test10,The following statement contains a magic number: Assert.AreEqual(24' data.Money.Money2.Value);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test11,The following statement contains a magic number: Assert.AreEqual("Name" + 2' data[i].CreatedBy.Supervisor.Name);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test11,The following statement contains a magic number: Assert.AreEqual("Name" + 2' data[i].Supervisor.Name);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test11,The following statement contains a magic number: Assert.AreEqual("Name" + 2' data[i].Supervisor.Supervisor.Name);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(5' user.Count);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(12' user[0].Items[0].Value);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(2' user[1].OneId);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(2' user[1].Items.Count);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(14' user[1].Items[0].Value);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(15' user[1].Items[1].Value);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(3' user[2].OneId);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(3' user[2].OneId);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual("Name3"' user[2].Name);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(1' user[2].Items.Count);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(16' user[2].Items[0].Value);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(16' user[2].Items[0].Value);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual("EUR"' user[2].Items[0].Currency);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(4' user[3].OneId);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(4' user[3].OneId);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual("Name4"' user[3].Name);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(null' user[3].Items);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(5' user[4].OneId);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(5' user[4].OneId);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual("Name5"' user[4].Name);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(1' user[4].Items.Count);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(17' user[4].Items[0].Value);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual(17' user[4].Items[0].Value);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test13,The following statement contains a magic number: Assert.AreEqual("CHN"' user[4].Items[0].Currency);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test14,The following statement contains a magic number: Assert.AreEqual(new DateTime(1971' 01' 01' 0' 0' 0)' data.Address.MovedInOn);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test15,The following statement contains a magic number: Assert.AreEqual(15' ones.Count);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test15,The following statement contains a magic number: i % 3 == 0
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test16,The following statement contains a magic number: var users = Database.Query<RecursionUser>()                  .UsingAlias("TEST")                  .Include(x => x.CreatedBy' "CREATEDBY")                  .Where(x => x.Id.In(new[] { 2' 3 }))                  .WhereSql("CREATEDBY.Id in (@list)"' new { list = new[] { 1' 3 } })                  .ToList();
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test16,The following statement contains a magic number: var users = Database.Query<RecursionUser>()                  .UsingAlias("TEST")                  .Include(x => x.CreatedBy' "CREATEDBY")                  .Where(x => x.Id.In(new[] { 2' 3 }))                  .WhereSql("CREATEDBY.Id in (@list)"' new { list = new[] { 1' 3 } })                  .ToList();
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test16,The following statement contains a magic number: var users = Database.Query<RecursionUser>()                  .UsingAlias("TEST")                  .Include(x => x.CreatedBy' "CREATEDBY")                  .Where(x => x.Id.In(new[] { 2' 3 }))                  .WhereSql("CREATEDBY.Id in (@list)"' new { list = new[] { 1' 3 } })                  .ToList();
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test16,The following statement contains a magic number: Database.Query<RecursionUser>()                  .UsingAlias("TEST1")                  .Include(x => x.CreatedBy)                  .Where(x => x.Id.In(new[] { 2' 3 }))                  .WhereSql("RU4.Id in (@list)"' new { list = new[] { 1' 3 } })                  .ToList();
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test16,The following statement contains a magic number: Database.Query<RecursionUser>()                  .UsingAlias("TEST1")                  .Include(x => x.CreatedBy)                  .Where(x => x.Id.In(new[] { 2' 3 }))                  .WhereSql("RU4.Id in (@list)"' new { list = new[] { 1' 3 } })                  .ToList();
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test16,The following statement contains a magic number: Database.Query<RecursionUser>()                  .UsingAlias("TEST1")                  .Include(x => x.CreatedBy)                  .Where(x => x.Id.In(new[] { 2' 3 }))                  .WhereSql("RU4.Id in (@list)"' new { list = new[] { 1' 3 } })                  .ToList();
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test16,The following statement contains a magic number: Database.Query<RecursionUser>()                  .WhereSql(x => new Sql(string.Format("{0}.Id in (@list)"' x.GetAliasFor(z => z))' new { list = new[] { 1' 3 } }))                  .ToList();
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test16,The following statement contains a magic number: Database.Query<RecursionUser>()                  .Include(x => x.CreatedBy)                  .WhereSql(x => new Sql(string.Format("{0}.Id in (@list)"' x.GetAliasFor(z => z.CreatedBy))' new { list = new[] { 1' 3 } }))                  .ToList();
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test16,The following statement contains a magic number: Assert.AreEqual(2' users.Count);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test17,The following statement contains a magic number: Assert.AreEqual(15' ones.Count);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test17_1,The following statement contains a magic number: Assert.AreEqual(15' ones.Count);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test17_2,The following statement contains a magic number: Assert.AreEqual(15' ones.Count);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,AssertOnes,The following statement contains a magic number: Assert.AreEqual(2' ones[2].Items.Count);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,AssertOnes,The following statement contains a magic number: Assert.AreEqual(2' ones[2].Items.Count);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test18,The following statement contains a magic number: Assert.AreEqual("Name" + 2' data[i].CreatedBy.Supervisor.Name);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test18,The following statement contains a magic number: Assert.AreEqual("Name" + 2' data[i].Supervisor.Name);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test18,The following statement contains a magic number: Assert.AreEqual("Name" + 2' data[i].Supervisor.Supervisor.Name);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test18_1,The following statement contains a magic number: Assert.AreEqual("Name" + 2' data[i].CreatedBy.Supervisor.TheName);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test18_1,The following statement contains a magic number: Assert.AreEqual("Name" + 2' data[i].Supervisor.TheName);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test18_1,The following statement contains a magic number: Assert.AreEqual("Name" + 2' data[i].Supervisor.Supervisor.TheName);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test20,The following statement contains a magic number: Assert.AreEqual(22' nestedConvention.Money.Value);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test21,The following statement contains a magic number: Assert.AreEqual(23' data.Money.Value);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test22,The following statement contains a magic number: Assert.AreEqual(15' data.Count);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test22,The following statement contains a magic number: Assert.AreEqual(2' data[1].HouseId);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test22,The following statement contains a magic number: Assert.AreEqual(2' data[1].House.HouseId);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test22_1,The following statement contains a magic number: Assert.AreEqual(15' data.Count);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test22_1,The following statement contains a magic number: Assert.AreEqual(2' data[1].HouseId);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test26,The following statement contains a magic number: Assert.AreEqual(3' data.Id);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test26_1,The following statement contains a magic number: Assert.AreEqual(3' data.Id);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test26_1,The following statement contains a magic number: Assert.AreEqual(4' data.Nest1.Id);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test27,The following statement contains a magic number: Assert.AreEqual(3' data.Id);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test28,The following statement contains a magic number: Assert.AreEqual(3' data.Id);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test28,The following statement contains a magic number: Assert.AreEqual(5' data.Dict2["Value4"].I);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test28,The following statement contains a magic number: Assert.AreEqual(99' data.DictInt["ints"]);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test29,The following statement contains a magic number: Assert.AreEqual(3' data.Id);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test29,The following statement contains a magic number: Assert.AreEqual(4' data.Dyn);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test30,The following statement contains a magic number: Assert.AreEqual(15' data.Count);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test33,The following statement contains a magic number: var users = Database.Query<UserDecorated>()                  .WhereSql(x=> new Sql($"{x.DatabaseType.EscapeTableName(x.PocoData.TableInfo.AutoAlias)}.UserId in (@list)"' new {list = new[] {2}}))                  .Where(x => x.UserId.In(new[] { 1' 2 }))                  .OrderBy(x => x.UserId)                  .ToList();
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test33,The following statement contains a magic number: var users = Database.Query<UserDecorated>()                  .WhereSql(x=> new Sql($"{x.DatabaseType.EscapeTableName(x.PocoData.TableInfo.AutoAlias)}.UserId in (@list)"' new {list = new[] {2}}))                  .Where(x => x.UserId.In(new[] { 1' 2 }))                  .OrderBy(x => x.UserId)                  .ToList();
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test33,The following statement contains a magic number: Assert.AreEqual(2' users[0].UserId);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test34,The following statement contains a magic number: var users = Database.Query<UserDecorated>()                  .Where(x => x.UserId.In(new[] { 2 }))                  .WhereSql(x => new Sql($"{x.DatabaseType.EscapeTableName(x.PocoData.TableInfo.AutoAlias)}.UserId in (@list)"' new { list = new[] { 1' 2 } }))                  .OrderBy(x => x.UserId)                  .ToList();
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test34,The following statement contains a magic number: var users = Database.Query<UserDecorated>()                  .Where(x => x.UserId.In(new[] { 2 }))                  .WhereSql(x => new Sql($"{x.DatabaseType.EscapeTableName(x.PocoData.TableInfo.AutoAlias)}.UserId in (@list)"' new { list = new[] { 1' 2 } }))                  .OrderBy(x => x.UserId)                  .ToList();
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test34,The following statement contains a magic number: Assert.AreEqual(2' users[0].UserId);
Magic Number,NPoco.Tests.NewMapper,NewMapperTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\NewMapperTests.cs,Test35,The following statement contains a magic number: var data = new Result35.ResultData() {Name = "Bob"' Age = 66};
Magic Number,NPoco.Tests.NewMapper,OldFakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\OldFakeReader.cs,GetName,The following statement contains a magic number: switch (i)              {                  case 0: return "Name";                  case 1: return "MoneyId";                  case 2: return "Value";                  case 3: return "Currency";                  case 4: return "Value";                  case 5: return "Currency";              }
Magic Number,NPoco.Tests.NewMapper,OldFakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\OldFakeReader.cs,GetName,The following statement contains a magic number: switch (i)              {                  case 0: return "Name";                  case 1: return "MoneyId";                  case 2: return "Value";                  case 3: return "Currency";                  case 4: return "Value";                  case 5: return "Currency";              }
Magic Number,NPoco.Tests.NewMapper,OldFakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\OldFakeReader.cs,GetName,The following statement contains a magic number: switch (i)              {                  case 0: return "Name";                  case 1: return "MoneyId";                  case 2: return "Value";                  case 3: return "Currency";                  case 4: return "Value";                  case 5: return "Currency";              }
Magic Number,NPoco.Tests.NewMapper,OldFakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\OldFakeReader.cs,GetName,The following statement contains a magic number: switch (i)              {                  case 0: return "Name";                  case 1: return "MoneyId";                  case 2: return "Value";                  case 3: return "Currency";                  case 4: return "Value";                  case 5: return "Currency";              }
Magic Number,NPoco.Tests.NewMapper,PerfTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\PerfTests.cs,Test11,The following statement contains a magic number: i < 1000
Magic Number,NPoco.Tests.NewMapper,PerfTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\PerfTests.cs,Test11,The following statement contains a magic number: j < 1000
Magic Number,NPoco.Tests.NewMapper,PerfTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\PerfTests.cs,Test1,The following statement contains a magic number: Assert.AreEqual(4' pocoData.Members.Count);
Magic Number,NPoco.Tests.NewMapper,PerfTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\PerfTests.cs,Test1,The following statement contains a magic number: Assert.AreEqual("Supervisor"' pocoData.Members[2].Name);
Magic Number,NPoco.Tests.NewMapper,PerfTests,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\PerfTests.cs,Test1,The following statement contains a magic number: Assert.AreEqual("CreatedBy"' pocoData.Members[3].Name);
Missing Default,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetName,The following switch statement is missing a default case: switch (i)              {                  case 0: return "Name";                  case 1: return "MoneyId";                  case 2: return "Money__Value";                  case 3: return "Money__Currency";                  case 4: return "Money__Money2__Value";                  case 5: return "Money__Money2__Currency";              }
Missing Default,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetFieldType,The following switch statement is missing a default case: switch (i)              {                  case 0: return typeof(string);                  case 1: return typeof(int);                  case 2: return typeof(decimal);                  case 3: return typeof(string);                  case 4: return typeof(decimal);                  case 5: return typeof(string);              }
Missing Default,NPoco.Tests.NewMapper,FakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\FakeReader.cs,GetValue,The following switch statement is missing a default case: switch (i)              {                  case 0: return "Name";                  case 1: return 5;                  case 2: return 23m;                  case 3: return "AUD";                  case 4: return 24m;                  case 5: return "USD";              }
Missing Default,NPoco.Tests.NewMapper,OldFakeReader,D:\research\architectureSmells\repos1\schotime_NPoco\test\NPoco.Tests\NewMapper\OldFakeReader.cs,GetName,The following switch statement is missing a default case: switch (i)              {                  case 0: return "Name";                  case 1: return "MoneyId";                  case 2: return "Value";                  case 3: return "Currency";                  case 4: return "Value";                  case 5: return "Currency";              }
