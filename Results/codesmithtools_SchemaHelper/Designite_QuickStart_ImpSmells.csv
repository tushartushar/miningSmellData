Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Generator.QuickStart,ProjectBuilderSettings,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\Creators\ProjectBuilderSettings.cs,ProjectBuilderSettings,Cyclomatic complexity of the method is 40
Long Parameter List,Generator.QuickStart,QuickStartUtils,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\Creators\QuickStartUtils.cs,ReplaceAllInDirectory,The method has 6 parameters.
Long Parameter List,Generator.QuickStart,SolutionItem,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\Creators\SolutionItem.cs,SolutionItem,The method has 5 parameters.
Long Identifier,Generator.QuickStart,ProjectCreator,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\Creators\ProjectCreator.cs,ReplaceFileVariables,The length of the parameter connectionStringProviderNameAttribute is 37.
Long Statement,Generator.QuickStart,WebApplicationCreator,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\Creators\WebApplicationCreator.cs,ReplaceFileVariables,The length of the statement  "	return base.ReplaceFileVariables (content' isCSP).Replace ("$entityNamespace$"' ProjectBuilder.DataProjectName).Replace ("$datacontext$"' ProjectBuilder.DataContextName); " is 170.
Long Statement,Generator.QuickStart,ProjectCreator,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\Creators\ProjectCreator.cs,GetVariableFiles,The length of the statement  "	IEnumerable<string> files = PathHelper.GetFiles (ProjectDirectory' "*.*proj"' "*.config"' "*." + ProjectBuilder.LanguageAppendage' "*.as*x"' "*.svc"' "*.master"); " is 162.
Long Statement,Generator.QuickStart,ProjectCreator,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\Creators\ProjectCreator.cs,ReplaceFileVariables,The length of the statement  "	string connectionString = ProjectBuilder.SourceDatabase != null ? ProjectBuilder.SourceDatabase.ConnectionString : String.Empty; " is 128.
Long Statement,Generator.QuickStart,ProjectCreator,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\Creators\ProjectCreator.cs,ReplaceFileVariables,The length of the statement  "	string connectionStringProviderNameAttribute = !String.IsNullOrEmpty (ProjectBuilder.ConnectionStringProviderNameAttribute) ? String.Format (" providerName=\"{0}\""' ProjectBuilder.ConnectionStringProviderNameAttribute) : String.Empty; " is 235.
Long Statement,Generator.QuickStart,ProjectCreator,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\Creators\ProjectCreator.cs,ReplaceFileVariables,The length of the statement  "		projectReferencePath = CodeSmith.Core.IO.PathHelper.RelativePathTo (ProjectDirectory' new FileInfo (SolutionItem.ProjectReferences.First (p => !p.Website).Path).DirectoryName); " is 176.
Long Statement,Generator.QuickStart,ProjectCreator,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\Creators\ProjectCreator.cs,ReplaceFileVariables,The length of the statement  "		projectReferencePath = CodeSmith.Core.IO.PathHelper.RelativePathTo (ProjectDirectory' new FileInfo (SolutionItem.ProjectReferences.First ().Path).DirectoryName); " is 161.
Long Statement,Generator.QuickStart,ProjectCreator,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\Creators\ProjectCreator.cs,ReplaceFileVariables,The length of the statement  "	return content.Replace ("$connectionStringName$"' ConnectionStringName).Replace ("$connectionString$"' isCSP ? connectionString : String.Format (ConnectionStringFormat' connectionString)).Replace ("$connectionStringProvider$"' ConnectionStringProvider).Replace ("$connectionStringProviderNameAttribute$"' connectionStringProviderNameAttribute).Replace ("$databaseProvider$"' ProjectBuilder.DatabaseProvider).Replace ("$projectname$"' ProjectName).Replace ("$safeprojectname$"' ProjectName).Replace ("$DataProjectDirectory$"' projectReferencePath).Replace ("$rootnamespace$"' ProjectName).Replace ("$guid1$"' SolutionItem.Guid.ToString ("B")).Replace ("$assemblyGuid$"' Guid.NewGuid ().ToString ()).Replace ("$registeredorganization$"' "CodeSmith Tools' LLC").Replace ("$year$"' DateTime.Now.Year.ToString (CultureInfo.InvariantCulture)).Replace ("$targetframeworkversion$"' ProjectBuilder.FrameworkString).Replace ("$frameworkEnum$"' GetFrameworkVersionString ()).Replace ("$datacontext$"' ProjectBuilder.DataContextName).Replace ("$entityNamespace$"' ProjectBuilder.DataProjectName).Replace ("$databaseName$"' ProjectBuilder.DatabaseName).Replace ("$baseNamespace$"' ProjectBuilder.BaseNamespace).Replace ("$language$"' ProjectBuilder.Language == Language.CSharp ? "CSharp" : "VisualBasic").Replace ("$template.path$"' TemplatePath).Replace ("$includeFunctions$"' ProjectBuilder.IncludeFunctions.ToString ()).Replace ("$includeViews$"' ProjectBuilder.IncludeViews.ToString ()); " is 1478.
Long Statement,Generator.QuickStart,QuickStartUtils,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\Creators\QuickStartUtils.cs,CopyDirectory,The length of the statement  "			if ((File.GetAttributes (subdir) & FileAttributes.ReparsePoint) != FileAttributes.ReparsePoint && (File.GetAttributes (subdir) & FileAttributes.Hidden) != FileAttributes.Hidden) " is 177.
Long Statement,Generator.QuickStart,WebSiteCreator,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\Creators\WebSiteCreator.cs,ReplaceFileVariables,The length of the statement  "	return base.ReplaceFileVariables (content' isCSP).Replace ("$entityNamespace$"' ProjectBuilder.DataProjectName).Replace ("$datacontext$"' ProjectBuilder.DataContextName); " is 170.
Long Statement,Generator.QuickStart,EntityCodeTemplate,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\EntityCodeTemplate.cs,OnEntityChanged,The length of the statement  "	////TODO: What is this?  Not sure what this is doing on this Property.  Doesn't look like the Entity effects this code at all. " is 126.
Long Statement,Generator.QuickStart,EntityCodeTemplate,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\EntityCodeTemplate.cs,RegisterReferences,The length of the statement  "	//RegisterReference(Path.Combine(CodeTemplateInfo.DirectoryName' @"..\..\..\Framework\NetTiers.Build\netTiers.Core.dll")); " is 122.
Long Statement,Generator.QuickStart.Base,BaseTemplate,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\Base\BaseTemplate.cs,ResolveTargetLanguage,The length of the statement  "		Configuration.Instance.TargetLanguage = CodeTemplateInfo.TargetLanguage.ToUpper () == "VB" ? Language.VB : Language.CSharp; " is 123.
Long Statement,Generator.QuickStart.Base,BaseTemplate,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\Base\BaseTemplate.cs,RegisterReferences,The length of the statement  "	//RegisterReference(Path.Combine(CodeTemplateInfo.DirectoryName' @"..\..\..\Framework\NetTiers.Build\netTiers.Core.dll")); " is 122.
Magic Number,Generator.QuickStart,QuickStartUtils,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\Creators\QuickStartUtils.cs,ReplaceAllInDirectory,The following statement contains a magic number: if (level <= 3) {  	Console.Out.WriteLine (path);  	// Process the list of files found in the directory.  	string[] fileEntries = Directory.GetFiles (path);  	foreach (string fileName in fileEntries)  		FindAndReplace (fileName' find' replace);  	// Recurse into subdirectories of this directory.  	string[] subdirEntries = Directory.GetDirectories (path);  	foreach (string subdir in subdirEntries) {  		// Do not iterate through reparse points  		if ((File.GetAttributes (subdir) & FileAttributes.ReparsePoint) != FileAttributes.ReparsePoint) {  			if (exemptDirectories == null || exemptDirectories.Count<string> (d => subdir.EndsWith (d)) == 0)  				ReplaceAllInDirectory (subdir' find' replace' exemptDirectories' level + 1);  		}  	}  }  
Magic Number,Generator.QuickStart,QuickStartUtils,C:\repos\codesmithtools_SchemaHelper\Source\QuickStart\Creators\QuickStartUtils.cs,CopyDirectory,The following statement contains a magic number: if (level <= 5) {  	if (!Directory.Exists (pathTo))  		Directory.CreateDirectory (pathTo);  	string[] fileEntries = Directory.GetFiles (pathFrom);  	foreach (string fileName in fileEntries)  		File.Copy (fileName' fileName.Replace (pathFrom' pathTo + @"\"));  	string[] subdirEntries = Directory.GetDirectories (pathFrom);  	foreach (string subdir in subdirEntries) {  		// Do not iterate through reparse points  		if ((File.GetAttributes (subdir) & FileAttributes.ReparsePoint) != FileAttributes.ReparsePoint && (File.GetAttributes (subdir) & FileAttributes.Hidden) != FileAttributes.Hidden)  			CopyDirectory (subdir' subdir.Replace (pathFrom' pathTo + @"\")' level + 1);  	}  }  
