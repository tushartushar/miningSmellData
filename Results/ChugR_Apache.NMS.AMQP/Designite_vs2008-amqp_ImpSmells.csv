Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Apache.NMS.Amqp,BytesMessage,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\BytesMessage.cs,WriteObject,Cyclomatic complexity of the method is 11
Complex Method,Apache.NMS.Amqp,Connection,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\Connection.cs,CheckConnected,Cyclomatic complexity of the method is 10
Complex Method,Apache.NMS.Amqp,Connection,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\Connection.cs,CheckDisconnected,Cyclomatic complexity of the method is 8
Complex Method,Apache.NMS.Amqp,StreamMessage,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\StreamMessage.cs,ReadInt16,Cyclomatic complexity of the method is 8
Complex Method,Apache.NMS.Amqp,StreamMessage,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\StreamMessage.cs,ReadInt32,Cyclomatic complexity of the method is 9
Complex Method,Apache.NMS.Amqp,StreamMessage,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\StreamMessage.cs,ReadInt64,Cyclomatic complexity of the method is 10
Complex Method,Apache.NMS.Amqp,StreamMessage,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\StreamMessage.cs,ReadDouble,Cyclomatic complexity of the method is 8
Complex Method,Apache.NMS.Amqp,StreamMessage,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\StreamMessage.cs,ReadString,Cyclomatic complexity of the method is 15
Complex Method,Apache.NMS.Amqp,StreamMessage,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\StreamMessage.cs,ReadBytes,Cyclomatic complexity of the method is 8
Complex Method,Apache.NMS.Amqp,StreamMessage,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\StreamMessage.cs,ReadObject,Cyclomatic complexity of the method is 16
Complex Method,Apache.NMS.Amqp,StreamMessage,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\StreamMessage.cs,WriteObject,Cyclomatic complexity of the method is 11
Long Parameter List,Apache.NMS.Amqp,MessageProducer,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\MessageProducer.cs,Send,The method has 5 parameters.
Long Statement,Apache.NMS.Amqp,Connection,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\Connection.cs,CheckConnected,The length of the statement  "						qpidConnection = new Org.Apache.Qpid.Messaging.Connection (brokerUri.ToString ()' ConstructConnectionOptionsString (connectionProperties)); " is 139.
Long Statement,Apache.NMS.Amqp,Connection,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\Connection.cs,CheckConnected,The length of the statement  "		if (connected.Value || closed.Value || closing.Value || (DateTime.Now > timeoutTime && this.RequestTimeout != InfiniteTimeSpan)) { " is 130.
Complex Conditional,Apache.NMS.Amqp,Connection,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\Connection.cs,CheckConnected,The conditional expression  "connected.Value || closed.Value || closing.Value || (DateTime.Now > timeoutTime && this.RequestTimeout != InfiniteTimeSpan)"  is complex.
Empty Catch Block,Apache.NMS.Amqp,DefaultMessageConverter,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\DefaultMessageConverter.cs,ToNmsMessage,The method has an empty catch block.
Empty Catch Block,Apache.NMS.Amqp,Connection,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\Connection.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Apache.NMS.Amqp,Session,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\Session.cs,Dispose,The method has an empty catch block.
Magic Number,Apache.NMS.Amqp,Connection,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\Connection.cs,CheckConnected,The following statement contains a magic number: while (!connected.Value && !closed.Value && !closing.Value) {  	if (Monitor.TryEnter (connectedLock)) {  		try// strictly for Monitor unlock  		 {  			// Create and open the Qpid connection  			try {  				// TODO: embellish the brokerUri with other connection options  				// Allocate a Qpid connection  				if (qpidConnection == null) {  					qpidConnection = new Org.Apache.Qpid.Messaging.Connection (brokerUri.ToString ()' ConstructConnectionOptionsString (connectionProperties));  				}  				// Open the connection  				if (!qpidConnection.IsOpen) {  					qpidConnection.Open ();  				}  				connected.Value = true;  			}  			catch (Org.Apache.Qpid.Messaging.QpidException e) {  				throw new ConnectionClosedException (e.Message);  			}  		}  		finally {  			Monitor.Exit (connectedLock);  		}  	}  	if (connected.Value || closed.Value || closing.Value || (DateTime.Now > timeoutTime && this.RequestTimeout != InfiniteTimeSpan)) {  		break;  	}  	// Back off from being overly aggressive.  Having too many threads  	// aggressively trying to connect to a down broker pegs the CPU.  	Thread.Sleep (5 * (waitCount++));  }  
Magic Number,Apache.NMS.Amqp,Connection,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\Connection.cs,CheckConnected,The following statement contains a magic number: Thread.Sleep (5 * (waitCount++));  
Magic Number,Apache.NMS.Amqp,MessageConsumer,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\MessageConsumer.cs,StopAsyncDelivery,The following statement contains a magic number: if (asyncDelivery.CompareAndSet (true' false)) {  	if (null != asyncDeliveryThread) {  		Tracer.Info ("Stopping async delivery thread.");  		pause.Set ();  		if (!asyncDeliveryThread.Join (10000)) {  			Tracer.Info ("Aborting async delivery thread.");  			asyncDeliveryThread.Abort ();  		}  		asyncDeliveryThread = null;  		Tracer.Info ("Async delivery thread stopped.");  	}  }  
Magic Number,Apache.NMS.Amqp,MessageConsumer,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\MessageConsumer.cs,StopAsyncDelivery,The following statement contains a magic number: if (null != asyncDeliveryThread) {  	Tracer.Info ("Stopping async delivery thread.");  	pause.Set ();  	if (!asyncDeliveryThread.Join (10000)) {  		Tracer.Info ("Aborting async delivery thread.");  		asyncDeliveryThread.Abort ();  	}  	asyncDeliveryThread = null;  	Tracer.Info ("Async delivery thread stopped.");  }  
Magic Number,Apache.NMS.Amqp,MessageConsumer,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\MessageConsumer.cs,StopAsyncDelivery,The following statement contains a magic number: if (!asyncDeliveryThread.Join (10000)) {  	Tracer.Info ("Aborting async delivery thread.");  	asyncDeliveryThread.Abort ();  }  
Magic Number,Apache.NMS.Amqp,StreamMessage,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\StreamMessage.cs,WriteString,The following statement contains a magic number: try {  	if (value.Length > 8192) {  		this.dataOut.Write (PrimitiveMap.BIG_STRING_TYPE);  		this.dataOut.WriteString32 (value);  	}  	else {  		this.dataOut.Write (PrimitiveMap.STRING_TYPE);  		this.dataOut.WriteString16 (value);  	}  }  catch (IOException e) {  	NMSExceptionSupport.Create (e);  }  
Magic Number,Apache.NMS.Amqp,StreamMessage,C:\repos\ChugR_Apache.NMS.AMQP\src\main\csharp\StreamMessage.cs,WriteString,The following statement contains a magic number: if (value.Length > 8192) {  	this.dataOut.Write (PrimitiveMap.BIG_STRING_TYPE);  	this.dataOut.WriteString32 (value);  }  else {  	this.dataOut.Write (PrimitiveMap.STRING_TYPE);  	this.dataOut.WriteString16 (value);  }  
