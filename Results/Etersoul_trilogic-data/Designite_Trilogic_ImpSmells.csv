Implementation smell,Namespace,Class,File,Method,Description
Long Method,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnButtonStartDiffClicked,The method has 115 lines of code.
Long Method,Trilogic,CompareWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\CompareWindow.cs,ShowSchema,The method has 123 lines of code.
Long Method,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The method has 198 lines of code.
Complex Method,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnButtonStartDiffClicked,Cyclomatic complexity of the method is 23
Complex Method,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,ShowProcessedList,Cyclomatic complexity of the method is 17
Complex Method,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnButtonLeftClicked,Cyclomatic complexity of the method is 11
Complex Method,Trilogic,CompareWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\CompareWindow.cs,ShowSchema,Cyclomatic complexity of the method is 20
Complex Method,Trilogic.Utility,AppSettings,C:\repos\Etersoul_trilogic-data\src\Trilogic\Utility\AppSettings.cs,ReadFromFile,Cyclomatic complexity of the method is 23
Complex Method,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,Cyclomatic complexity of the method is 46
Complex Method,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetAllDataQuery,Cyclomatic complexity of the method is 19
Long Statement,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnButtonRightClicked,The length of the statement  "					File.WriteAllText (this.entryFolder.Text + "/" + AppSettings.TableDir + "/" + schema.Name + "." + schema.Type.ToString () + ".sql"' this.Sql.GetTableSchema (schema.ObjectID)); " is 175.
Long Statement,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnButtonRightClicked,The length of the statement  "					File.WriteAllText (this.entryFolder.Text + "/" + AppSettings.ProcedureDir + "/" + schema.Name + "." + schema.Type.ToString () + ".sql"' this.Sql.GetStoredProcedureDefinition (schema.ObjectID)); " is 193.
Long Statement,Trilogic,SchemaLogBuilder,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SchemaLogBuilder.cs,ReadLog,The length of the statement  "	foreach (string line in System.IO.File.ReadAllLines (path + "/" + this.baseFileName + "_" + this.databaseName.ToString ())) { " is 125.
Long Statement,Trilogic,SchemaLogBuilder,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SchemaLogBuilder.cs,Commit,The length of the statement  "	System.IO.File.WriteAllText (path + "/" + this.baseFileName + "_" + this.databaseName.ToUpper ()' string.Join ("\n"' this.list.ToArray ())); " is 140.
Long Statement,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The length of the statement  "	string foreignKeyDef = "ALTER TABLE [{0}].[{1}] WITH CHECK ADD CONSTRAINT [{2}] FOREIGN KEY ({3})\nREFERENCES [{4}].[{5}] ({6});"; " is 130.
Long Statement,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The length of the statement  "					columnList.Add (string.Format (columnDef' reader ["column_name"].ToString ()' reader ["type_name"].ToString ()' maxLength' reader ["is_nullable"].ToString () == "False" ? "NOT NULL" : "NULL")); " is 193.
Long Statement,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The length of the statement  "								columnList.Add (string.Format ("CONSTRAINT [{0}] {1}{2}\n\t(\n\t\t{3}\n\t)"' lastName' lastIsPrimary == "True" ? "PRIMARY KEY " : (lastIsUnique == "True" ? "UNIQUE " : string.Empty)' lastTypeDesc' string.Join ("'\n\t\t"' memberList.ToArray ()))); " is 246.
Long Statement,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The length of the statement  "								nonUniqueList.Add (string.Format ("CREATE {0} INDEX [{1}] ON [{2}].[{3}]\n(\n\t{4}\n);"' lastTypeDesc' lastName' schemaName' tableName' string.Join ("'\n\t"' memberList.ToArray ()))); " is 183.
Long Statement,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The length of the statement  "					memberList.Add (string.Format ("[{0}] {1}"' reader ["column_name"].ToString ()' reader ["is_descending_key"].ToString () == "False" ? "ASC" : "DESC")); " is 151.
Long Statement,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The length of the statement  "						columnList.Add (string.Format ("CONSTRAINT [{0}] {1}{2}\n\t(\n\t\t{3}\n\t)"' lastName' lastIsPrimary == "True" ? "PRIMARY KEY " : (lastIsUnique == "True" ? "UNIQUE " : string.Empty)' lastTypeDesc' string.Join ("'\n\t\t"' memberList.ToArray ()))); " is 246.
Long Statement,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The length of the statement  "						nonUniqueList.Add (string.Format ("CREATE {0} INDEX [{1}] ON [{2}].[{3}]\n(\n\t{4}\n);"' lastTypeDesc' lastName' schemaName' tableName' string.Join ("'\n\t"' memberList.ToArray ()))); " is 183.
Long Statement,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The length of the statement  "					checkConstraintList.Add (string.Format (constraintDef' schemaName' tableName' reader ["name"].ToString ()' reader ["definition"].ToString ())); " is 143.
Long Statement,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The length of the statement  "			foreignKeyList.Add (string.Format (foreignKeyDef' schemaName' tableName' fk.Value ["fk_name"].ToString ()' string.Join ("' "' parent.ToArray ())' fk.Value ["referenced_schema_name"].ToString ()' fk.Value ["referenced_table_name"].ToString ()' string.Join ("' "' reference.ToArray ()))); " is 286.
Long Statement,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetAllDataQuery,The length of the statement  "	return string.Format ("INSERT INTO [{0}].[{1}] ({2}) VALUES ({3});"' schemaName' tableName' string.Join ("' "' columns.ToArray ())' string.Join ("' "' dataList.ToArray ())); " is 173.
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: gc.RgbFgColor = new Gdk.Color (255' 255' 255);  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: gc.RgbFgColor = new Gdk.Color (255' 255' 255);  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: gc.RgbFgColor = new Gdk.Color (255' 255' 255);  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: gc.RgbFgColor = new Gdk.Color (255' 0' 0);  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\Etersoul_trilogic-data\src\Trilogic\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,MainWindow,The following statement contains a magic number: this.vpaned1.Position = 300;  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,MainWindow,The following statement contains a magic number: this.hpaned1.Position = 300;  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,MainWindow,The following statement contains a magic number: columnDBToggle.FixedWidth = 20;  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,MainWindow,The following statement contains a magic number: columnFileToggle.FixedWidth = 20;  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,MainWindow,The following statement contains a magic number: columnDBStatus.FixedWidth = 20;  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,MainWindow,The following statement contains a magic number: columnFileStatus.FixedWidth = 20;  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,MainWindow,The following statement contains a magic number: columnDBToggle.AddAttribute (toggleDB' "active"' 2);  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,MainWindow,The following statement contains a magic number: columnFileToggle.AddAttribute (toggleFile' "active"' 2);  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,MainWindow,The following statement contains a magic number: columnDBStatus.AddAttribute (statusDB' "text"' 3);  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,MainWindow,The following statement contains a magic number: columnFileStatus.AddAttribute (statusFile' "text"' 3);  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,MainWindow,The following statement contains a magic number: toggleDB.Toggled += (object o' ToggledArgs args) =>  {  	TreeIter iter;  	this.treeviewDB.Model.GetIterFromString (out iter' args.Path);  	bool enable = (bool)this.treeviewDB.Model.GetValue (iter' 2);  	this.treeviewDB.Model.SetValue (iter' 2' !enable);  };  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,MainWindow,The following statement contains a magic number: toggleDB.Toggled += (object o' ToggledArgs args) =>  {  	TreeIter iter;  	this.treeviewDB.Model.GetIterFromString (out iter' args.Path);  	bool enable = (bool)this.treeviewDB.Model.GetValue (iter' 2);  	this.treeviewDB.Model.SetValue (iter' 2' !enable);  };  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,MainWindow,The following statement contains a magic number: this.treeviewDB.Model.SetValue (iter' 2' !enable);  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,MainWindow,The following statement contains a magic number: toggleFile.Toggled += (object o' ToggledArgs args) =>  {  	TreeIter iter;  	this.treeviewFile.Model.GetIterFromString (out iter' args.Path);  	bool enable = (bool)this.treeviewFile.Model.GetValue (iter' 2);  	this.treeviewFile.Model.SetValue (iter' 2' !enable);  };  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,MainWindow,The following statement contains a magic number: toggleFile.Toggled += (object o' ToggledArgs args) =>  {  	TreeIter iter;  	this.treeviewFile.Model.GetIterFromString (out iter' args.Path);  	bool enable = (bool)this.treeviewFile.Model.GetValue (iter' 2);  	this.treeviewFile.Model.SetValue (iter' 2' !enable);  };  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,MainWindow,The following statement contains a magic number: this.treeviewFile.Model.SetValue (iter' 2' !enable);  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnResizeChecked,The following statement contains a magic number: if (this.WidthRequest < 600) {  	this.WidthRequest = 600;  }  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnResizeChecked,The following statement contains a magic number: if (this.WidthRequest < 600) {  	this.WidthRequest = 600;  }  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnResizeChecked,The following statement contains a magic number: this.WidthRequest = 600;  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnResizeChecked,The following statement contains a magic number: if (this.HeightRequest < 400) {  	this.HeightRequest = 400;  }  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnResizeChecked,The following statement contains a magic number: if (this.HeightRequest < 400) {  	this.HeightRequest = 400;  }  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnResizeChecked,The following statement contains a magic number: this.HeightRequest = 400;  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,ShowProcessedList,The following statement contains a magic number: foreach (SchemaData file in this.combinedFile) {  	if (comboShow.Active == 1 && file.Status == SchemaDataStatus.None) {  		continue;  	}  	if (comboType.Active == 1 && file.Type != SchemaDataType.Table) {  		continue;  	}  	if (comboType.Active == 2 && file.Type != SchemaDataType.StoredProcedure) {  		continue;  	}  	// Compare current file to the SQL Schema  	string color = "#ffffff";  	bool check = false;  	string status = string.Empty;  	if (file.Status == SchemaDataStatus.Added) {  		color = "#99ff99";  		check = true;  		status = "+";  	}  	else if (file.Status == SchemaDataStatus.Modified) {  		color = "#ffff99";  		check = true;  		status = "#";  	}  	else if (file.Status == SchemaDataStatus.Conflicted) {  		color = "#ff9999";  		check = false;  		status = "?";  	}  	TreeIter localIter = iterTable2;  	if (file.Type == SchemaDataType.StoredProcedure) {  		localIter = iterProcedure2;  	}  	list2.AppendValues (localIter' file.Name' color' check' status' file);  }  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,ShowProcessedList,The following statement contains a magic number: if (comboType.Active == 2 && file.Type != SchemaDataType.StoredProcedure) {  	continue;  }  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,ShowProcessedList,The following statement contains a magic number: foreach (SchemaData str in this.combinedDB) {  	if (comboShow.Active == 1 && str.Status == SchemaDataStatus.None) {  		continue;  	}  	if (comboType.Active == 1 && str.Type != SchemaDataType.Table) {  		continue;  	}  	if (comboType.Active == 2 && str.Type != SchemaDataType.StoredProcedure) {  		continue;  	}  	// Compare the current SQL Schema to the file  	string color = "#ffffff";  	bool check = false;  	string status = string.Empty;  	if (str.Status == SchemaDataStatus.Added) {  		color = "#99ff99";  		check = true;  		status = "+";  	}  	else if (str.Status == SchemaDataStatus.Modified) {  		color = "#ffff99";  		check = true;  		status = "#";  	}  	else if (str.Status == SchemaDataStatus.Conflicted) {  		color = "#ff9999";  		check = false;  		status = "?";  	}  	TreeIter localIter = iterTable1;  	if (str.Type == SchemaDataType.StoredProcedure) {  		localIter = iterProcedure1;  	}  	list.AppendValues (localIter' str.Name' color' check' status' str);  }  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,ShowProcessedList,The following statement contains a magic number: if (comboType.Active == 2 && str.Type != SchemaDataType.StoredProcedure) {  	continue;  }  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnTreeviewRowActivated,The following statement contains a magic number: if (tree.Name == "treeviewDB") {  	db = (SchemaData)tree.Model.GetValue (iter' 4);  	file = this.combinedFile [db.Name];  }  else {  	file = (SchemaData)tree.Model.GetValue (iter' 4);  	db = this.combinedDB [file.Name];  }  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnTreeviewRowActivated,The following statement contains a magic number: if (tree.Name == "treeviewDB") {  	db = (SchemaData)tree.Model.GetValue (iter' 4);  	file = this.combinedFile [db.Name];  }  else {  	file = (SchemaData)tree.Model.GetValue (iter' 4);  	db = this.combinedDB [file.Name];  }  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnTreeviewRowActivated,The following statement contains a magic number: db = (SchemaData)tree.Model.GetValue (iter' 4);  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnTreeviewRowActivated,The following statement contains a magic number: file = (SchemaData)tree.Model.GetValue (iter' 4);  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnButtonRightClicked,The following statement contains a magic number: do {  	TreeIter iterChild;  	bool isChild = model.IterChildren (out iterChild' iter);  	// Ignore the tree that doesn't have child  	if (!isChild) {  		continue;  	}  	do {  		bool active = (bool)model.GetValue (iterChild' 2);  		if (active == true) {  			SchemaData schema = (SchemaData)model.GetValue (iterChild' 4);  			if (schema.Type == SchemaDataType.Table) {  				File.WriteAllText (this.entryFolder.Text + "/" + AppSettings.TableDir + "/" + schema.Name + "." + schema.Type.ToString () + ".sql"' this.Sql.GetTableSchema (schema.ObjectID));  			}  			else if (schema.Type == SchemaDataType.StoredProcedure) {  				File.WriteAllText (this.entryFolder.Text + "/" + AppSettings.ProcedureDir + "/" + schema.Name + "." + schema.Type.ToString () + ".sql"' this.Sql.GetStoredProcedureDefinition (schema.ObjectID));  			}  		}  	}  	while (model.IterNext (ref iterChild));  }  while (model.IterNext (ref iter));  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnButtonRightClicked,The following statement contains a magic number: do {  	TreeIter iterChild;  	bool isChild = model.IterChildren (out iterChild' iter);  	// Ignore the tree that doesn't have child  	if (!isChild) {  		continue;  	}  	do {  		bool active = (bool)model.GetValue (iterChild' 2);  		if (active == true) {  			SchemaData schema = (SchemaData)model.GetValue (iterChild' 4);  			if (schema.Type == SchemaDataType.Table) {  				File.WriteAllText (this.entryFolder.Text + "/" + AppSettings.TableDir + "/" + schema.Name + "." + schema.Type.ToString () + ".sql"' this.Sql.GetTableSchema (schema.ObjectID));  			}  			else if (schema.Type == SchemaDataType.StoredProcedure) {  				File.WriteAllText (this.entryFolder.Text + "/" + AppSettings.ProcedureDir + "/" + schema.Name + "." + schema.Type.ToString () + ".sql"' this.Sql.GetStoredProcedureDefinition (schema.ObjectID));  			}  		}  	}  	while (model.IterNext (ref iterChild));  }  while (model.IterNext (ref iter));  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnButtonRightClicked,The following statement contains a magic number: do {  	bool active = (bool)model.GetValue (iterChild' 2);  	if (active == true) {  		SchemaData schema = (SchemaData)model.GetValue (iterChild' 4);  		if (schema.Type == SchemaDataType.Table) {  			File.WriteAllText (this.entryFolder.Text + "/" + AppSettings.TableDir + "/" + schema.Name + "." + schema.Type.ToString () + ".sql"' this.Sql.GetTableSchema (schema.ObjectID));  		}  		else if (schema.Type == SchemaDataType.StoredProcedure) {  			File.WriteAllText (this.entryFolder.Text + "/" + AppSettings.ProcedureDir + "/" + schema.Name + "." + schema.Type.ToString () + ".sql"' this.Sql.GetStoredProcedureDefinition (schema.ObjectID));  		}  	}  }  while (model.IterNext (ref iterChild));  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnButtonRightClicked,The following statement contains a magic number: do {  	bool active = (bool)model.GetValue (iterChild' 2);  	if (active == true) {  		SchemaData schema = (SchemaData)model.GetValue (iterChild' 4);  		if (schema.Type == SchemaDataType.Table) {  			File.WriteAllText (this.entryFolder.Text + "/" + AppSettings.TableDir + "/" + schema.Name + "." + schema.Type.ToString () + ".sql"' this.Sql.GetTableSchema (schema.ObjectID));  		}  		else if (schema.Type == SchemaDataType.StoredProcedure) {  			File.WriteAllText (this.entryFolder.Text + "/" + AppSettings.ProcedureDir + "/" + schema.Name + "." + schema.Type.ToString () + ".sql"' this.Sql.GetStoredProcedureDefinition (schema.ObjectID));  		}  	}  }  while (model.IterNext (ref iterChild));  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnButtonRightClicked,The following statement contains a magic number: if (active == true) {  	SchemaData schema = (SchemaData)model.GetValue (iterChild' 4);  	if (schema.Type == SchemaDataType.Table) {  		File.WriteAllText (this.entryFolder.Text + "/" + AppSettings.TableDir + "/" + schema.Name + "." + schema.Type.ToString () + ".sql"' this.Sql.GetTableSchema (schema.ObjectID));  	}  	else if (schema.Type == SchemaDataType.StoredProcedure) {  		File.WriteAllText (this.entryFolder.Text + "/" + AppSettings.ProcedureDir + "/" + schema.Name + "." + schema.Type.ToString () + ".sql"' this.Sql.GetStoredProcedureDefinition (schema.ObjectID));  	}  }  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnButtonLeftClicked,The following statement contains a magic number: do {  	TreeIter iterChild;  	bool isChild = model.IterChildren (out iterChild' iter);  	// Ignore the tree that doesn't have child  	if (!isChild) {  		continue;  	}  	do {  		bool active = (bool)model.GetValue (iterChild' 2);  		if (active == true) {  			SchemaData schema = (SchemaData)model.GetValue (iterChild' 4);  			string mainQuery = schema.Data;  			if (schema.Type == SchemaDataType.Table) {  				if (this.Sql.IsTableExist (schema.Name)) {  					this.Sql.RunCommand ("DROP TABLE " + schema.Name);  				}  				// Search for foreign key and strip it from the main query' process it later  				int idx = schema.Data.IndexOf ("-------- FOREIGN KEY --------");  				if (idx != -1) {  					mainQuery = schema.Data.Substring (0' idx);  					fk.Add (schema.Data.Substring (idx));  				}  			}  			else if (schema.Type == SchemaDataType.StoredProcedure) {  				if (this.Sql.IsProcedureExist (schema.Name)) {  					this.Sql.RunCommand ("DROP PROCEDURE " + schema.Name);  				}  			}  			this.Sql.RunCommand (mainQuery);  		}  	}  	while (model.IterNext (ref iterChild));  }  while (model.IterNext (ref iter));  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnButtonLeftClicked,The following statement contains a magic number: do {  	TreeIter iterChild;  	bool isChild = model.IterChildren (out iterChild' iter);  	// Ignore the tree that doesn't have child  	if (!isChild) {  		continue;  	}  	do {  		bool active = (bool)model.GetValue (iterChild' 2);  		if (active == true) {  			SchemaData schema = (SchemaData)model.GetValue (iterChild' 4);  			string mainQuery = schema.Data;  			if (schema.Type == SchemaDataType.Table) {  				if (this.Sql.IsTableExist (schema.Name)) {  					this.Sql.RunCommand ("DROP TABLE " + schema.Name);  				}  				// Search for foreign key and strip it from the main query' process it later  				int idx = schema.Data.IndexOf ("-------- FOREIGN KEY --------");  				if (idx != -1) {  					mainQuery = schema.Data.Substring (0' idx);  					fk.Add (schema.Data.Substring (idx));  				}  			}  			else if (schema.Type == SchemaDataType.StoredProcedure) {  				if (this.Sql.IsProcedureExist (schema.Name)) {  					this.Sql.RunCommand ("DROP PROCEDURE " + schema.Name);  				}  			}  			this.Sql.RunCommand (mainQuery);  		}  	}  	while (model.IterNext (ref iterChild));  }  while (model.IterNext (ref iter));  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnButtonLeftClicked,The following statement contains a magic number: do {  	bool active = (bool)model.GetValue (iterChild' 2);  	if (active == true) {  		SchemaData schema = (SchemaData)model.GetValue (iterChild' 4);  		string mainQuery = schema.Data;  		if (schema.Type == SchemaDataType.Table) {  			if (this.Sql.IsTableExist (schema.Name)) {  				this.Sql.RunCommand ("DROP TABLE " + schema.Name);  			}  			// Search for foreign key and strip it from the main query' process it later  			int idx = schema.Data.IndexOf ("-------- FOREIGN KEY --------");  			if (idx != -1) {  				mainQuery = schema.Data.Substring (0' idx);  				fk.Add (schema.Data.Substring (idx));  			}  		}  		else if (schema.Type == SchemaDataType.StoredProcedure) {  			if (this.Sql.IsProcedureExist (schema.Name)) {  				this.Sql.RunCommand ("DROP PROCEDURE " + schema.Name);  			}  		}  		this.Sql.RunCommand (mainQuery);  	}  }  while (model.IterNext (ref iterChild));  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnButtonLeftClicked,The following statement contains a magic number: do {  	bool active = (bool)model.GetValue (iterChild' 2);  	if (active == true) {  		SchemaData schema = (SchemaData)model.GetValue (iterChild' 4);  		string mainQuery = schema.Data;  		if (schema.Type == SchemaDataType.Table) {  			if (this.Sql.IsTableExist (schema.Name)) {  				this.Sql.RunCommand ("DROP TABLE " + schema.Name);  			}  			// Search for foreign key and strip it from the main query' process it later  			int idx = schema.Data.IndexOf ("-------- FOREIGN KEY --------");  			if (idx != -1) {  				mainQuery = schema.Data.Substring (0' idx);  				fk.Add (schema.Data.Substring (idx));  			}  		}  		else if (schema.Type == SchemaDataType.StoredProcedure) {  			if (this.Sql.IsProcedureExist (schema.Name)) {  				this.Sql.RunCommand ("DROP PROCEDURE " + schema.Name);  			}  		}  		this.Sql.RunCommand (mainQuery);  	}  }  while (model.IterNext (ref iterChild));  
Magic Number,Trilogic,MainWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\MainWindow.cs,OnButtonLeftClicked,The following statement contains a magic number: if (active == true) {  	SchemaData schema = (SchemaData)model.GetValue (iterChild' 4);  	string mainQuery = schema.Data;  	if (schema.Type == SchemaDataType.Table) {  		if (this.Sql.IsTableExist (schema.Name)) {  			this.Sql.RunCommand ("DROP TABLE " + schema.Name);  		}  		// Search for foreign key and strip it from the main query' process it later  		int idx = schema.Data.IndexOf ("-------- FOREIGN KEY --------");  		if (idx != -1) {  			mainQuery = schema.Data.Substring (0' idx);  			fk.Add (schema.Data.Substring (idx));  		}  	}  	else if (schema.Type == SchemaDataType.StoredProcedure) {  		if (this.Sql.IsProcedureExist (schema.Name)) {  			this.Sql.RunCommand ("DROP PROCEDURE " + schema.Name);  		}  	}  	this.Sql.RunCommand (mainQuery);  }  
Magic Number,Trilogic,FolderSelector,C:\repos\Etersoul_trilogic-data\src\Trilogic\FolderSelector.cs,FileChooserSelectionChanged,The following statement contains a magic number: if (this.fileChooser.Uri != null) {  	string uri = this.fileChooser.Uri;  	if ("file:///" == uri.Substring (0' 8)) {  		uri = uri.Substring (8);  	}  	this.entryFolder.Text = uri;  }  
Magic Number,Trilogic,FolderSelector,C:\repos\Etersoul_trilogic-data\src\Trilogic\FolderSelector.cs,FileChooserSelectionChanged,The following statement contains a magic number: if (this.fileChooser.Uri != null) {  	string uri = this.fileChooser.Uri;  	if ("file:///" == uri.Substring (0' 8)) {  		uri = uri.Substring (8);  	}  	this.entryFolder.Text = uri;  }  
Magic Number,Trilogic,FolderSelector,C:\repos\Etersoul_trilogic-data\src\Trilogic\FolderSelector.cs,FileChooserSelectionChanged,The following statement contains a magic number: if ("file:///" == uri.Substring (0' 8)) {  	uri = uri.Substring (8);  }  
Magic Number,Trilogic,FolderSelector,C:\repos\Etersoul_trilogic-data\src\Trilogic\FolderSelector.cs,FileChooserSelectionChanged,The following statement contains a magic number: if ("file:///" == uri.Substring (0' 8)) {  	uri = uri.Substring (8);  }  
Magic Number,Trilogic,FolderSelector,C:\repos\Etersoul_trilogic-data\src\Trilogic\FolderSelector.cs,FileChooserSelectionChanged,The following statement contains a magic number: uri = uri.Substring (8);  
Magic Number,Trilogic,FolderSelector,C:\repos\Etersoul_trilogic-data\src\Trilogic\FolderSelector.cs,WindowResize,The following statement contains a magic number: if (this.WidthRequest < 600) {  	this.WidthRequest = 600;  }  
Magic Number,Trilogic,FolderSelector,C:\repos\Etersoul_trilogic-data\src\Trilogic\FolderSelector.cs,WindowResize,The following statement contains a magic number: if (this.WidthRequest < 600) {  	this.WidthRequest = 600;  }  
Magic Number,Trilogic,FolderSelector,C:\repos\Etersoul_trilogic-data\src\Trilogic\FolderSelector.cs,WindowResize,The following statement contains a magic number: this.WidthRequest = 600;  
Magic Number,Trilogic,FolderSelector,C:\repos\Etersoul_trilogic-data\src\Trilogic\FolderSelector.cs,WindowResize,The following statement contains a magic number: if (this.HeightRequest < 400) {  	this.HeightRequest = 400;  }  
Magic Number,Trilogic,FolderSelector,C:\repos\Etersoul_trilogic-data\src\Trilogic\FolderSelector.cs,WindowResize,The following statement contains a magic number: if (this.HeightRequest < 400) {  	this.HeightRequest = 400;  }  
Magic Number,Trilogic,FolderSelector,C:\repos\Etersoul_trilogic-data\src\Trilogic\FolderSelector.cs,WindowResize,The following statement contains a magic number: this.HeightRequest = 400;  
Magic Number,Trilogic,CompareWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\CompareWindow.cs,CompareWindow,The following statement contains a magic number: childLocal.Position = 2;  
Magic Number,Trilogic,CompareWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\CompareWindow.cs,ShowSchema,The following statement contains a magic number: if (this.checkBoxDiff.Active) {  	StyleTextLineMarker addMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (0.8' 0.8' 1)  	};  	StyleTextLineMarker deleteMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (1' 0.8' 0.8)  	};  	StyleTextLineMarker modifyMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (1' 1' 0.6)  	};  	StyleTextLineMarker grayMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (0.6' 0.6' 0.6)  	};  	DiffResult result = new DiffPlex.Differ ().CreateLineDiffs (databaseText' fileText' false);  	Dictionary<int' TextLineMarker> databaseMarker = new Dictionary<int' TextLineMarker> ();  	Dictionary<int' TextLineMarker> fileMarker = new Dictionary<int' TextLineMarker> ();  	string[] fileTextArray = fileText.Split ('\n');  	string[] databaseTextArray = databaseText.Split ('\n');  	List<string> processedFile = new List<string> ();  	List<string> processedDatabase = new List<string> ();  	int i1 = 0;  	// original database line number' start from 0  	int i2 = 0;  	// original file line number' start from 0  	int d1 = -1;  	int d2 = -1;  	DiffBlock currentBlock = new DiffBlock (-1' 0' -1' 0);  	if (result.DiffBlocks.Count > 0) {  		currentBlock = result.DiffBlocks [0];  		result.DiffBlocks.RemoveAt (0);  	}  	for (int i = 0; true; i++) {  		bool change = false;  		if (i1 == currentBlock.DeleteStartA) {  			d1 = 0;  		}  		if (d1 != -1) {  			change = true;  			if (d1 < currentBlock.DeleteCountA) {  				processedDatabase.Add (databaseTextArray [i1]);  				databaseMarker.Add (i + 1' deleteMarker);  				processedFile.Add (string.Empty);  				fileMarker.Add (i + 1' deleteMarker);  				i1++;  				d1++;  			}  			else {  				d1 = -1;  			}  		}  		if (i2 == currentBlock.InsertStartB) {  			d2 = 0;  		}  		if (d2 != -1) {  			change = true;  			if (d2 < currentBlock.InsertCountB) {  				processedDatabase.Add (string.Empty);  				if (databaseMarker.ContainsKey (i + 1)) {  					databaseMarker [i + 1] = modifyMarker;  				}  				else {  					databaseMarker.Add (i + 1' addMarker);  				}  				processedFile.Add (fileTextArray [i2]);  				if (fileMarker.ContainsKey (i + 1)) {  					fileMarker [i + 1] = modifyMarker;  				}  				else {  					fileMarker.Add (i + 1' addMarker);  				}  				i2++;  				d2++;  			}  			else {  				d2 = -1;  			}  		}  		// Stop the iteration if we are on the last line now  		if (i1 >= databaseTextArray.Length && i2 >= fileTextArray.Length) {  			break;  		}  		if (d1 == -1 && d2 == -1 && change) {  			if (result.DiffBlocks.Count > 0) {  				currentBlock = result.DiffBlocks [0];  				result.DiffBlocks.RemoveAt (0);  			}  			else {  				currentBlock = new DiffBlock (-1' 0' -1' 0);  			}  			change = false;  		}  		// No changes' insert the original text without marker  		if (!change) {  			processedDatabase.Add (databaseTextArray [i1]);  			processedFile.Add (fileTextArray [i2]);  			i1++;  			i2++;  		}  	}  	this.docDB.Text = string.Join ("\n"' processedDatabase.ToArray ());  	this.docLocal.Text = string.Join ("\n"' processedFile.ToArray ());  	foreach (KeyValuePair<int' TextLineMarker> single in databaseMarker) {  		this.docDB.AddMarker (single.Key' single.Value);  	}  	foreach (KeyValuePair<int' TextLineMarker> single in fileMarker) {  		this.docLocal.AddMarker (single.Key' single.Value);  	}  	this.docDB.CommitUpdateAll ();  }  else {  	this.docDB.Text = databaseText;  	this.docLocal.Text = fileText;  }  
Magic Number,Trilogic,CompareWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\CompareWindow.cs,ShowSchema,The following statement contains a magic number: if (this.checkBoxDiff.Active) {  	StyleTextLineMarker addMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (0.8' 0.8' 1)  	};  	StyleTextLineMarker deleteMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (1' 0.8' 0.8)  	};  	StyleTextLineMarker modifyMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (1' 1' 0.6)  	};  	StyleTextLineMarker grayMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (0.6' 0.6' 0.6)  	};  	DiffResult result = new DiffPlex.Differ ().CreateLineDiffs (databaseText' fileText' false);  	Dictionary<int' TextLineMarker> databaseMarker = new Dictionary<int' TextLineMarker> ();  	Dictionary<int' TextLineMarker> fileMarker = new Dictionary<int' TextLineMarker> ();  	string[] fileTextArray = fileText.Split ('\n');  	string[] databaseTextArray = databaseText.Split ('\n');  	List<string> processedFile = new List<string> ();  	List<string> processedDatabase = new List<string> ();  	int i1 = 0;  	// original database line number' start from 0  	int i2 = 0;  	// original file line number' start from 0  	int d1 = -1;  	int d2 = -1;  	DiffBlock currentBlock = new DiffBlock (-1' 0' -1' 0);  	if (result.DiffBlocks.Count > 0) {  		currentBlock = result.DiffBlocks [0];  		result.DiffBlocks.RemoveAt (0);  	}  	for (int i = 0; true; i++) {  		bool change = false;  		if (i1 == currentBlock.DeleteStartA) {  			d1 = 0;  		}  		if (d1 != -1) {  			change = true;  			if (d1 < currentBlock.DeleteCountA) {  				processedDatabase.Add (databaseTextArray [i1]);  				databaseMarker.Add (i + 1' deleteMarker);  				processedFile.Add (string.Empty);  				fileMarker.Add (i + 1' deleteMarker);  				i1++;  				d1++;  			}  			else {  				d1 = -1;  			}  		}  		if (i2 == currentBlock.InsertStartB) {  			d2 = 0;  		}  		if (d2 != -1) {  			change = true;  			if (d2 < currentBlock.InsertCountB) {  				processedDatabase.Add (string.Empty);  				if (databaseMarker.ContainsKey (i + 1)) {  					databaseMarker [i + 1] = modifyMarker;  				}  				else {  					databaseMarker.Add (i + 1' addMarker);  				}  				processedFile.Add (fileTextArray [i2]);  				if (fileMarker.ContainsKey (i + 1)) {  					fileMarker [i + 1] = modifyMarker;  				}  				else {  					fileMarker.Add (i + 1' addMarker);  				}  				i2++;  				d2++;  			}  			else {  				d2 = -1;  			}  		}  		// Stop the iteration if we are on the last line now  		if (i1 >= databaseTextArray.Length && i2 >= fileTextArray.Length) {  			break;  		}  		if (d1 == -1 && d2 == -1 && change) {  			if (result.DiffBlocks.Count > 0) {  				currentBlock = result.DiffBlocks [0];  				result.DiffBlocks.RemoveAt (0);  			}  			else {  				currentBlock = new DiffBlock (-1' 0' -1' 0);  			}  			change = false;  		}  		// No changes' insert the original text without marker  		if (!change) {  			processedDatabase.Add (databaseTextArray [i1]);  			processedFile.Add (fileTextArray [i2]);  			i1++;  			i2++;  		}  	}  	this.docDB.Text = string.Join ("\n"' processedDatabase.ToArray ());  	this.docLocal.Text = string.Join ("\n"' processedFile.ToArray ());  	foreach (KeyValuePair<int' TextLineMarker> single in databaseMarker) {  		this.docDB.AddMarker (single.Key' single.Value);  	}  	foreach (KeyValuePair<int' TextLineMarker> single in fileMarker) {  		this.docLocal.AddMarker (single.Key' single.Value);  	}  	this.docDB.CommitUpdateAll ();  }  else {  	this.docDB.Text = databaseText;  	this.docLocal.Text = fileText;  }  
Magic Number,Trilogic,CompareWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\CompareWindow.cs,ShowSchema,The following statement contains a magic number: if (this.checkBoxDiff.Active) {  	StyleTextLineMarker addMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (0.8' 0.8' 1)  	};  	StyleTextLineMarker deleteMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (1' 0.8' 0.8)  	};  	StyleTextLineMarker modifyMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (1' 1' 0.6)  	};  	StyleTextLineMarker grayMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (0.6' 0.6' 0.6)  	};  	DiffResult result = new DiffPlex.Differ ().CreateLineDiffs (databaseText' fileText' false);  	Dictionary<int' TextLineMarker> databaseMarker = new Dictionary<int' TextLineMarker> ();  	Dictionary<int' TextLineMarker> fileMarker = new Dictionary<int' TextLineMarker> ();  	string[] fileTextArray = fileText.Split ('\n');  	string[] databaseTextArray = databaseText.Split ('\n');  	List<string> processedFile = new List<string> ();  	List<string> processedDatabase = new List<string> ();  	int i1 = 0;  	// original database line number' start from 0  	int i2 = 0;  	// original file line number' start from 0  	int d1 = -1;  	int d2 = -1;  	DiffBlock currentBlock = new DiffBlock (-1' 0' -1' 0);  	if (result.DiffBlocks.Count > 0) {  		currentBlock = result.DiffBlocks [0];  		result.DiffBlocks.RemoveAt (0);  	}  	for (int i = 0; true; i++) {  		bool change = false;  		if (i1 == currentBlock.DeleteStartA) {  			d1 = 0;  		}  		if (d1 != -1) {  			change = true;  			if (d1 < currentBlock.DeleteCountA) {  				processedDatabase.Add (databaseTextArray [i1]);  				databaseMarker.Add (i + 1' deleteMarker);  				processedFile.Add (string.Empty);  				fileMarker.Add (i + 1' deleteMarker);  				i1++;  				d1++;  			}  			else {  				d1 = -1;  			}  		}  		if (i2 == currentBlock.InsertStartB) {  			d2 = 0;  		}  		if (d2 != -1) {  			change = true;  			if (d2 < currentBlock.InsertCountB) {  				processedDatabase.Add (string.Empty);  				if (databaseMarker.ContainsKey (i + 1)) {  					databaseMarker [i + 1] = modifyMarker;  				}  				else {  					databaseMarker.Add (i + 1' addMarker);  				}  				processedFile.Add (fileTextArray [i2]);  				if (fileMarker.ContainsKey (i + 1)) {  					fileMarker [i + 1] = modifyMarker;  				}  				else {  					fileMarker.Add (i + 1' addMarker);  				}  				i2++;  				d2++;  			}  			else {  				d2 = -1;  			}  		}  		// Stop the iteration if we are on the last line now  		if (i1 >= databaseTextArray.Length && i2 >= fileTextArray.Length) {  			break;  		}  		if (d1 == -1 && d2 == -1 && change) {  			if (result.DiffBlocks.Count > 0) {  				currentBlock = result.DiffBlocks [0];  				result.DiffBlocks.RemoveAt (0);  			}  			else {  				currentBlock = new DiffBlock (-1' 0' -1' 0);  			}  			change = false;  		}  		// No changes' insert the original text without marker  		if (!change) {  			processedDatabase.Add (databaseTextArray [i1]);  			processedFile.Add (fileTextArray [i2]);  			i1++;  			i2++;  		}  	}  	this.docDB.Text = string.Join ("\n"' processedDatabase.ToArray ());  	this.docLocal.Text = string.Join ("\n"' processedFile.ToArray ());  	foreach (KeyValuePair<int' TextLineMarker> single in databaseMarker) {  		this.docDB.AddMarker (single.Key' single.Value);  	}  	foreach (KeyValuePair<int' TextLineMarker> single in fileMarker) {  		this.docLocal.AddMarker (single.Key' single.Value);  	}  	this.docDB.CommitUpdateAll ();  }  else {  	this.docDB.Text = databaseText;  	this.docLocal.Text = fileText;  }  
Magic Number,Trilogic,CompareWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\CompareWindow.cs,ShowSchema,The following statement contains a magic number: if (this.checkBoxDiff.Active) {  	StyleTextLineMarker addMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (0.8' 0.8' 1)  	};  	StyleTextLineMarker deleteMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (1' 0.8' 0.8)  	};  	StyleTextLineMarker modifyMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (1' 1' 0.6)  	};  	StyleTextLineMarker grayMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (0.6' 0.6' 0.6)  	};  	DiffResult result = new DiffPlex.Differ ().CreateLineDiffs (databaseText' fileText' false);  	Dictionary<int' TextLineMarker> databaseMarker = new Dictionary<int' TextLineMarker> ();  	Dictionary<int' TextLineMarker> fileMarker = new Dictionary<int' TextLineMarker> ();  	string[] fileTextArray = fileText.Split ('\n');  	string[] databaseTextArray = databaseText.Split ('\n');  	List<string> processedFile = new List<string> ();  	List<string> processedDatabase = new List<string> ();  	int i1 = 0;  	// original database line number' start from 0  	int i2 = 0;  	// original file line number' start from 0  	int d1 = -1;  	int d2 = -1;  	DiffBlock currentBlock = new DiffBlock (-1' 0' -1' 0);  	if (result.DiffBlocks.Count > 0) {  		currentBlock = result.DiffBlocks [0];  		result.DiffBlocks.RemoveAt (0);  	}  	for (int i = 0; true; i++) {  		bool change = false;  		if (i1 == currentBlock.DeleteStartA) {  			d1 = 0;  		}  		if (d1 != -1) {  			change = true;  			if (d1 < currentBlock.DeleteCountA) {  				processedDatabase.Add (databaseTextArray [i1]);  				databaseMarker.Add (i + 1' deleteMarker);  				processedFile.Add (string.Empty);  				fileMarker.Add (i + 1' deleteMarker);  				i1++;  				d1++;  			}  			else {  				d1 = -1;  			}  		}  		if (i2 == currentBlock.InsertStartB) {  			d2 = 0;  		}  		if (d2 != -1) {  			change = true;  			if (d2 < currentBlock.InsertCountB) {  				processedDatabase.Add (string.Empty);  				if (databaseMarker.ContainsKey (i + 1)) {  					databaseMarker [i + 1] = modifyMarker;  				}  				else {  					databaseMarker.Add (i + 1' addMarker);  				}  				processedFile.Add (fileTextArray [i2]);  				if (fileMarker.ContainsKey (i + 1)) {  					fileMarker [i + 1] = modifyMarker;  				}  				else {  					fileMarker.Add (i + 1' addMarker);  				}  				i2++;  				d2++;  			}  			else {  				d2 = -1;  			}  		}  		// Stop the iteration if we are on the last line now  		if (i1 >= databaseTextArray.Length && i2 >= fileTextArray.Length) {  			break;  		}  		if (d1 == -1 && d2 == -1 && change) {  			if (result.DiffBlocks.Count > 0) {  				currentBlock = result.DiffBlocks [0];  				result.DiffBlocks.RemoveAt (0);  			}  			else {  				currentBlock = new DiffBlock (-1' 0' -1' 0);  			}  			change = false;  		}  		// No changes' insert the original text without marker  		if (!change) {  			processedDatabase.Add (databaseTextArray [i1]);  			processedFile.Add (fileTextArray [i2]);  			i1++;  			i2++;  		}  	}  	this.docDB.Text = string.Join ("\n"' processedDatabase.ToArray ());  	this.docLocal.Text = string.Join ("\n"' processedFile.ToArray ());  	foreach (KeyValuePair<int' TextLineMarker> single in databaseMarker) {  		this.docDB.AddMarker (single.Key' single.Value);  	}  	foreach (KeyValuePair<int' TextLineMarker> single in fileMarker) {  		this.docLocal.AddMarker (single.Key' single.Value);  	}  	this.docDB.CommitUpdateAll ();  }  else {  	this.docDB.Text = databaseText;  	this.docLocal.Text = fileText;  }  
Magic Number,Trilogic,CompareWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\CompareWindow.cs,ShowSchema,The following statement contains a magic number: if (this.checkBoxDiff.Active) {  	StyleTextLineMarker addMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (0.8' 0.8' 1)  	};  	StyleTextLineMarker deleteMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (1' 0.8' 0.8)  	};  	StyleTextLineMarker modifyMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (1' 1' 0.6)  	};  	StyleTextLineMarker grayMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (0.6' 0.6' 0.6)  	};  	DiffResult result = new DiffPlex.Differ ().CreateLineDiffs (databaseText' fileText' false);  	Dictionary<int' TextLineMarker> databaseMarker = new Dictionary<int' TextLineMarker> ();  	Dictionary<int' TextLineMarker> fileMarker = new Dictionary<int' TextLineMarker> ();  	string[] fileTextArray = fileText.Split ('\n');  	string[] databaseTextArray = databaseText.Split ('\n');  	List<string> processedFile = new List<string> ();  	List<string> processedDatabase = new List<string> ();  	int i1 = 0;  	// original database line number' start from 0  	int i2 = 0;  	// original file line number' start from 0  	int d1 = -1;  	int d2 = -1;  	DiffBlock currentBlock = new DiffBlock (-1' 0' -1' 0);  	if (result.DiffBlocks.Count > 0) {  		currentBlock = result.DiffBlocks [0];  		result.DiffBlocks.RemoveAt (0);  	}  	for (int i = 0; true; i++) {  		bool change = false;  		if (i1 == currentBlock.DeleteStartA) {  			d1 = 0;  		}  		if (d1 != -1) {  			change = true;  			if (d1 < currentBlock.DeleteCountA) {  				processedDatabase.Add (databaseTextArray [i1]);  				databaseMarker.Add (i + 1' deleteMarker);  				processedFile.Add (string.Empty);  				fileMarker.Add (i + 1' deleteMarker);  				i1++;  				d1++;  			}  			else {  				d1 = -1;  			}  		}  		if (i2 == currentBlock.InsertStartB) {  			d2 = 0;  		}  		if (d2 != -1) {  			change = true;  			if (d2 < currentBlock.InsertCountB) {  				processedDatabase.Add (string.Empty);  				if (databaseMarker.ContainsKey (i + 1)) {  					databaseMarker [i + 1] = modifyMarker;  				}  				else {  					databaseMarker.Add (i + 1' addMarker);  				}  				processedFile.Add (fileTextArray [i2]);  				if (fileMarker.ContainsKey (i + 1)) {  					fileMarker [i + 1] = modifyMarker;  				}  				else {  					fileMarker.Add (i + 1' addMarker);  				}  				i2++;  				d2++;  			}  			else {  				d2 = -1;  			}  		}  		// Stop the iteration if we are on the last line now  		if (i1 >= databaseTextArray.Length && i2 >= fileTextArray.Length) {  			break;  		}  		if (d1 == -1 && d2 == -1 && change) {  			if (result.DiffBlocks.Count > 0) {  				currentBlock = result.DiffBlocks [0];  				result.DiffBlocks.RemoveAt (0);  			}  			else {  				currentBlock = new DiffBlock (-1' 0' -1' 0);  			}  			change = false;  		}  		// No changes' insert the original text without marker  		if (!change) {  			processedDatabase.Add (databaseTextArray [i1]);  			processedFile.Add (fileTextArray [i2]);  			i1++;  			i2++;  		}  	}  	this.docDB.Text = string.Join ("\n"' processedDatabase.ToArray ());  	this.docLocal.Text = string.Join ("\n"' processedFile.ToArray ());  	foreach (KeyValuePair<int' TextLineMarker> single in databaseMarker) {  		this.docDB.AddMarker (single.Key' single.Value);  	}  	foreach (KeyValuePair<int' TextLineMarker> single in fileMarker) {  		this.docLocal.AddMarker (single.Key' single.Value);  	}  	this.docDB.CommitUpdateAll ();  }  else {  	this.docDB.Text = databaseText;  	this.docLocal.Text = fileText;  }  
Magic Number,Trilogic,CompareWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\CompareWindow.cs,ShowSchema,The following statement contains a magic number: if (this.checkBoxDiff.Active) {  	StyleTextLineMarker addMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (0.8' 0.8' 1)  	};  	StyleTextLineMarker deleteMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (1' 0.8' 0.8)  	};  	StyleTextLineMarker modifyMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (1' 1' 0.6)  	};  	StyleTextLineMarker grayMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (0.6' 0.6' 0.6)  	};  	DiffResult result = new DiffPlex.Differ ().CreateLineDiffs (databaseText' fileText' false);  	Dictionary<int' TextLineMarker> databaseMarker = new Dictionary<int' TextLineMarker> ();  	Dictionary<int' TextLineMarker> fileMarker = new Dictionary<int' TextLineMarker> ();  	string[] fileTextArray = fileText.Split ('\n');  	string[] databaseTextArray = databaseText.Split ('\n');  	List<string> processedFile = new List<string> ();  	List<string> processedDatabase = new List<string> ();  	int i1 = 0;  	// original database line number' start from 0  	int i2 = 0;  	// original file line number' start from 0  	int d1 = -1;  	int d2 = -1;  	DiffBlock currentBlock = new DiffBlock (-1' 0' -1' 0);  	if (result.DiffBlocks.Count > 0) {  		currentBlock = result.DiffBlocks [0];  		result.DiffBlocks.RemoveAt (0);  	}  	for (int i = 0; true; i++) {  		bool change = false;  		if (i1 == currentBlock.DeleteStartA) {  			d1 = 0;  		}  		if (d1 != -1) {  			change = true;  			if (d1 < currentBlock.DeleteCountA) {  				processedDatabase.Add (databaseTextArray [i1]);  				databaseMarker.Add (i + 1' deleteMarker);  				processedFile.Add (string.Empty);  				fileMarker.Add (i + 1' deleteMarker);  				i1++;  				d1++;  			}  			else {  				d1 = -1;  			}  		}  		if (i2 == currentBlock.InsertStartB) {  			d2 = 0;  		}  		if (d2 != -1) {  			change = true;  			if (d2 < currentBlock.InsertCountB) {  				processedDatabase.Add (string.Empty);  				if (databaseMarker.ContainsKey (i + 1)) {  					databaseMarker [i + 1] = modifyMarker;  				}  				else {  					databaseMarker.Add (i + 1' addMarker);  				}  				processedFile.Add (fileTextArray [i2]);  				if (fileMarker.ContainsKey (i + 1)) {  					fileMarker [i + 1] = modifyMarker;  				}  				else {  					fileMarker.Add (i + 1' addMarker);  				}  				i2++;  				d2++;  			}  			else {  				d2 = -1;  			}  		}  		// Stop the iteration if we are on the last line now  		if (i1 >= databaseTextArray.Length && i2 >= fileTextArray.Length) {  			break;  		}  		if (d1 == -1 && d2 == -1 && change) {  			if (result.DiffBlocks.Count > 0) {  				currentBlock = result.DiffBlocks [0];  				result.DiffBlocks.RemoveAt (0);  			}  			else {  				currentBlock = new DiffBlock (-1' 0' -1' 0);  			}  			change = false;  		}  		// No changes' insert the original text without marker  		if (!change) {  			processedDatabase.Add (databaseTextArray [i1]);  			processedFile.Add (fileTextArray [i2]);  			i1++;  			i2++;  		}  	}  	this.docDB.Text = string.Join ("\n"' processedDatabase.ToArray ());  	this.docLocal.Text = string.Join ("\n"' processedFile.ToArray ());  	foreach (KeyValuePair<int' TextLineMarker> single in databaseMarker) {  		this.docDB.AddMarker (single.Key' single.Value);  	}  	foreach (KeyValuePair<int' TextLineMarker> single in fileMarker) {  		this.docLocal.AddMarker (single.Key' single.Value);  	}  	this.docDB.CommitUpdateAll ();  }  else {  	this.docDB.Text = databaseText;  	this.docLocal.Text = fileText;  }  
Magic Number,Trilogic,CompareWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\CompareWindow.cs,ShowSchema,The following statement contains a magic number: if (this.checkBoxDiff.Active) {  	StyleTextLineMarker addMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (0.8' 0.8' 1)  	};  	StyleTextLineMarker deleteMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (1' 0.8' 0.8)  	};  	StyleTextLineMarker modifyMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (1' 1' 0.6)  	};  	StyleTextLineMarker grayMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (0.6' 0.6' 0.6)  	};  	DiffResult result = new DiffPlex.Differ ().CreateLineDiffs (databaseText' fileText' false);  	Dictionary<int' TextLineMarker> databaseMarker = new Dictionary<int' TextLineMarker> ();  	Dictionary<int' TextLineMarker> fileMarker = new Dictionary<int' TextLineMarker> ();  	string[] fileTextArray = fileText.Split ('\n');  	string[] databaseTextArray = databaseText.Split ('\n');  	List<string> processedFile = new List<string> ();  	List<string> processedDatabase = new List<string> ();  	int i1 = 0;  	// original database line number' start from 0  	int i2 = 0;  	// original file line number' start from 0  	int d1 = -1;  	int d2 = -1;  	DiffBlock currentBlock = new DiffBlock (-1' 0' -1' 0);  	if (result.DiffBlocks.Count > 0) {  		currentBlock = result.DiffBlocks [0];  		result.DiffBlocks.RemoveAt (0);  	}  	for (int i = 0; true; i++) {  		bool change = false;  		if (i1 == currentBlock.DeleteStartA) {  			d1 = 0;  		}  		if (d1 != -1) {  			change = true;  			if (d1 < currentBlock.DeleteCountA) {  				processedDatabase.Add (databaseTextArray [i1]);  				databaseMarker.Add (i + 1' deleteMarker);  				processedFile.Add (string.Empty);  				fileMarker.Add (i + 1' deleteMarker);  				i1++;  				d1++;  			}  			else {  				d1 = -1;  			}  		}  		if (i2 == currentBlock.InsertStartB) {  			d2 = 0;  		}  		if (d2 != -1) {  			change = true;  			if (d2 < currentBlock.InsertCountB) {  				processedDatabase.Add (string.Empty);  				if (databaseMarker.ContainsKey (i + 1)) {  					databaseMarker [i + 1] = modifyMarker;  				}  				else {  					databaseMarker.Add (i + 1' addMarker);  				}  				processedFile.Add (fileTextArray [i2]);  				if (fileMarker.ContainsKey (i + 1)) {  					fileMarker [i + 1] = modifyMarker;  				}  				else {  					fileMarker.Add (i + 1' addMarker);  				}  				i2++;  				d2++;  			}  			else {  				d2 = -1;  			}  		}  		// Stop the iteration if we are on the last line now  		if (i1 >= databaseTextArray.Length && i2 >= fileTextArray.Length) {  			break;  		}  		if (d1 == -1 && d2 == -1 && change) {  			if (result.DiffBlocks.Count > 0) {  				currentBlock = result.DiffBlocks [0];  				result.DiffBlocks.RemoveAt (0);  			}  			else {  				currentBlock = new DiffBlock (-1' 0' -1' 0);  			}  			change = false;  		}  		// No changes' insert the original text without marker  		if (!change) {  			processedDatabase.Add (databaseTextArray [i1]);  			processedFile.Add (fileTextArray [i2]);  			i1++;  			i2++;  		}  	}  	this.docDB.Text = string.Join ("\n"' processedDatabase.ToArray ());  	this.docLocal.Text = string.Join ("\n"' processedFile.ToArray ());  	foreach (KeyValuePair<int' TextLineMarker> single in databaseMarker) {  		this.docDB.AddMarker (single.Key' single.Value);  	}  	foreach (KeyValuePair<int' TextLineMarker> single in fileMarker) {  		this.docLocal.AddMarker (single.Key' single.Value);  	}  	this.docDB.CommitUpdateAll ();  }  else {  	this.docDB.Text = databaseText;  	this.docLocal.Text = fileText;  }  
Magic Number,Trilogic,CompareWindow,C:\repos\Etersoul_trilogic-data\src\Trilogic\CompareWindow.cs,ShowSchema,The following statement contains a magic number: if (this.checkBoxDiff.Active) {  	StyleTextLineMarker addMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (0.8' 0.8' 1)  	};  	StyleTextLineMarker deleteMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (1' 0.8' 0.8)  	};  	StyleTextLineMarker modifyMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (1' 1' 0.6)  	};  	StyleTextLineMarker grayMarker = new StyleTextLineMarker () {  		BackgroundColor = new Cairo.Color (0.6' 0.6' 0.6)  	};  	DiffResult result = new DiffPlex.Differ ().CreateLineDiffs (databaseText' fileText' false);  	Dictionary<int' TextLineMarker> databaseMarker = new Dictionary<int' TextLineMarker> ();  	Dictionary<int' TextLineMarker> fileMarker = new Dictionary<int' TextLineMarker> ();  	string[] fileTextArray = fileText.Split ('\n');  	string[] databaseTextArray = databaseText.Split ('\n');  	List<string> processedFile = new List<string> ();  	List<string> processedDatabase = new List<string> ();  	int i1 = 0;  	// original database line number' start from 0  	int i2 = 0;  	// original file line number' start from 0  	int d1 = -1;  	int d2 = -1;  	DiffBlock currentBlock = new DiffBlock (-1' 0' -1' 0);  	if (result.DiffBlocks.Count > 0) {  		currentBlock = result.DiffBlocks [0];  		result.DiffBlocks.RemoveAt (0);  	}  	for (int i = 0; true; i++) {  		bool change = false;  		if (i1 == currentBlock.DeleteStartA) {  			d1 = 0;  		}  		if (d1 != -1) {  			change = true;  			if (d1 < currentBlock.DeleteCountA) {  				processedDatabase.Add (databaseTextArray [i1]);  				databaseMarker.Add (i + 1' deleteMarker);  				processedFile.Add (string.Empty);  				fileMarker.Add (i + 1' deleteMarker);  				i1++;  				d1++;  			}  			else {  				d1 = -1;  			}  		}  		if (i2 == currentBlock.InsertStartB) {  			d2 = 0;  		}  		if (d2 != -1) {  			change = true;  			if (d2 < currentBlock.InsertCountB) {  				processedDatabase.Add (string.Empty);  				if (databaseMarker.ContainsKey (i + 1)) {  					databaseMarker [i + 1] = modifyMarker;  				}  				else {  					databaseMarker.Add (i + 1' addMarker);  				}  				processedFile.Add (fileTextArray [i2]);  				if (fileMarker.ContainsKey (i + 1)) {  					fileMarker [i + 1] = modifyMarker;  				}  				else {  					fileMarker.Add (i + 1' addMarker);  				}  				i2++;  				d2++;  			}  			else {  				d2 = -1;  			}  		}  		// Stop the iteration if we are on the last line now  		if (i1 >= databaseTextArray.Length && i2 >= fileTextArray.Length) {  			break;  		}  		if (d1 == -1 && d2 == -1 && change) {  			if (result.DiffBlocks.Count > 0) {  				currentBlock = result.DiffBlocks [0];  				result.DiffBlocks.RemoveAt (0);  			}  			else {  				currentBlock = new DiffBlock (-1' 0' -1' 0);  			}  			change = false;  		}  		// No changes' insert the original text without marker  		if (!change) {  			processedDatabase.Add (databaseTextArray [i1]);  			processedFile.Add (fileTextArray [i2]);  			i1++;  			i2++;  		}  	}  	this.docDB.Text = string.Join ("\n"' processedDatabase.ToArray ());  	this.docLocal.Text = string.Join ("\n"' processedFile.ToArray ());  	foreach (KeyValuePair<int' TextLineMarker> single in databaseMarker) {  		this.docDB.AddMarker (single.Key' single.Value);  	}  	foreach (KeyValuePair<int' TextLineMarker> single in fileMarker) {  		this.docLocal.AddMarker (single.Key' single.Value);  	}  	this.docDB.CommitUpdateAll ();  }  else {  	this.docDB.Text = databaseText;  	this.docLocal.Text = fileText;  }  
Magic Number,Trilogic,SchemaLogBuilder,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SchemaLogBuilder.cs,ReadLog,The following statement contains a magic number: foreach (string line in System.IO.File.ReadAllLines (path + "/" + this.baseFileName + "_" + this.databaseName.ToString ())) {  	string[] split = line.Split (';');  	SchemaData schema = new SchemaData ();  	schema.Name = split [1];  	schema.Type = (SchemaDataType)Enum.Parse (typeof(SchemaDataType)' split [0]);  	schema.ModifyDate = DateTime.Parse (split [2]);  	collection.Add (schema);  }  
Magic Number,Trilogic,SchemaLogBuilder,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SchemaLogBuilder.cs,ReadLog,The following statement contains a magic number: schema.ModifyDate = DateTime.Parse (split [2]);  
Magic Number,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The following statement contains a magic number: using (SqlConnection connection = this.CreateConnection ()) {  	// Table  	using (SqlCommand command = connection.CreateCommand ()) {  		command.CommandText = @"                     SELECT s.name AS table_name' h.name AS schema_name' s.object_id                     FROM sys.tables s                     INNER JOIN sys.schemas h                         ON h.schema_id = s.schema_id                     WHERE s.type = 'U'                         AND s.object_id = @objectid                     ORDER BY s.name";  		command.Parameters.Add (new SqlParameter ("objectid"' objectID));  		using (SqlDataReader reader = command.ExecuteReader ()) {  			if (reader.Read ()) {  				tableName = reader ["table_name"].ToString ();  				schemaName = reader ["schema_name"].ToString ();  			}  		}  	}  	// Columns  	using (SqlCommand command = connection.CreateCommand ()) {  		command.CommandText = @"                     SELECT h.name AS column_name' t.name AS type_name' h.is_nullable' h.max_length' h.precision' h.scale'                         t.max_length AS max_length_default' h.is_identity                     FROM sys.columns h                     INNER JOIN sys.types t                     ON t.user_type_id = h.user_type_id                     WHERE h.object_id = @objectid                     ORDER BY h.column_id";  		command.CommandType = CommandType.Text;  		command.Parameters.Add (new SqlParameter ("objectid"' objectID));  		using (SqlDataReader reader = command.ExecuteReader ()) {  			while (reader.Read ()) {  				string maxLength = reader ["max_length"].ToString ();  				if (maxLength != reader ["max_length_default"].ToString ()) {  					if (maxLength == "-1") {  						maxLength = "(max)";  					}  					else if (reader ["precision"].ToString () != "0" || reader ["scale"].ToString () != "0") {  						maxLength = "(" + reader ["precision"].ToString () + "'" + reader ["scale"].ToString () + ")";  					}  					else {  						// Since nchar and nvarchar use 2 bytes for every 1 max length' the saved max length on sys.columns should  						// be divided by 2  						if (reader ["type_name"].ToString () == "nchar" || reader ["type_name"].ToString () == "nvarchar") {  							maxLength = "(" + (Convert.ToInt32 (reader ["max_length"]) / 2) + ")";  						}  						else {  							maxLength = "(" + maxLength + ")";  						}  					}  				}  				else {  					maxLength = string.Empty;  				}  				columnList.Add (string.Format (columnDef' reader ["column_name"].ToString ()' reader ["type_name"].ToString ()' maxLength' reader ["is_nullable"].ToString () == "False" ? "NOT NULL" : "NULL"));  			}  		}  	}  	// Unique constraint & index part  	using (SqlCommand command = connection.CreateCommand ()) {  		command.CommandText = @"                     SELECT c.name AS column_name' h.is_primary_key' h.name' h.index_id' t.is_descending_key' h.type_desc' h.is_unique                     FROM sys.indexes h                     INNER JOIN sys.index_columns t                         ON t.object_id = h.object_id                         AND t.index_id = h.index_id                     INNER JOIN sys.columns c                         ON c.object_id = h.object_id                         AND c.column_id = t.column_id                     WHERE h.object_id = @objectid                     ORDER BY h.index_id' t.column_id";  		command.CommandType = CommandType.Text;  		command.Parameters.Add (new SqlParameter ("objectid"' objectID));  		using (SqlDataReader reader = command.ExecuteReader ()) {  			string lastName = string.Empty;  			string lastIsPrimary = string.Empty;  			string lastIsUnique = string.Empty;  			string lastTypeDesc = string.Empty;  			List<string> memberList = new List<string> ();  			while (reader.Read ()) {  				if (lastName != reader ["name"].ToString ()) {  					if (lastName != string.Empty) {  						if (lastIsUnique == "True") {  							columnList.Add (string.Format ("CONSTRAINT [{0}] {1}{2}\n\t(\n\t\t{3}\n\t)"' lastName' lastIsPrimary == "True" ? "PRIMARY KEY " : (lastIsUnique == "True" ? "UNIQUE " : string.Empty)' lastTypeDesc' string.Join ("'\n\t\t"' memberList.ToArray ())));  						}  						else {  							nonUniqueList.Add (string.Format ("CREATE {0} INDEX [{1}] ON [{2}].[{3}]\n(\n\t{4}\n);"' lastTypeDesc' lastName' schemaName' tableName' string.Join ("'\n\t"' memberList.ToArray ())));  						}  					}  					lastName = reader ["name"].ToString ();  					lastIsPrimary = reader ["is_primary_key"].ToString ();  					lastIsUnique = reader ["is_unique"].ToString ();  					lastTypeDesc = reader ["type_desc"].ToString ();  					memberList = new List<string> ();  				}  				memberList.Add (string.Format ("[{0}] {1}"' reader ["column_name"].ToString ()' reader ["is_descending_key"].ToString () == "False" ? "ASC" : "DESC"));  			}  			if (lastName != string.Empty) {  				if (lastIsUnique == "True") {  					columnList.Add (string.Format ("CONSTRAINT [{0}] {1}{2}\n\t(\n\t\t{3}\n\t)"' lastName' lastIsPrimary == "True" ? "PRIMARY KEY " : (lastIsUnique == "True" ? "UNIQUE " : string.Empty)' lastTypeDesc' string.Join ("'\n\t\t"' memberList.ToArray ())));  				}  				else {  					nonUniqueList.Add (string.Format ("CREATE {0} INDEX [{1}] ON [{2}].[{3}]\n(\n\t{4}\n);"' lastTypeDesc' lastName' schemaName' tableName' string.Join ("'\n\t"' memberList.ToArray ())));  				}  			}  		}  	}  	completeList.Add (string.Format (tableDef' schemaName' tableName' string.Join ("'\n\t"' columnList)));  	if (nonUniqueList.Count != 0) {  		completeList.Add (string.Join ("\n\n"' nonUniqueList.ToArray ()));  	}  	// Check constraint part  	using (SqlCommand command = connection.CreateCommand ()) {  		command.CommandText = @"                     SELECT h.name' h.definition                     FROM sys.check_constraints h                     WHERE h.parent_object_id = @objectid";  		command.CommandType = CommandType.Text;  		command.Parameters.Add (new SqlParameter ("objectid"' objectID));  		using (SqlDataReader reader = command.ExecuteReader ()) {  			while (reader.Read ()) {  				checkConstraintList.Add (string.Format (constraintDef' schemaName' tableName' reader ["name"].ToString ()' reader ["definition"].ToString ()));  			}  		}  	}  	if (checkConstraintList.Count != 0) {  		completeList.Add (string.Join ("\n\n"' checkConstraintList.ToArray ()));  	}  	// Foreign key constraint  	Dictionary<int' Dictionary<string' string>> keys = new Dictionary<int' Dictionary<string' string>> ();  	using (SqlCommand command = connection.CreateCommand ()) {  		command.CommandText = @"                     SELECT f.object_id' f.name' t.name AS table_name' s.name AS schema_name                     FROM sys.foreign_keys f                     INNER JOIN sys.tables t                         ON t.object_id = f.referenced_object_id                     INNER JOIN sys.schemas s                         ON s.schema_id = t.schema_id                     WHERE f.parent_object_id = @objectid";  		command.CommandType = CommandType.Text;  		command.Parameters.Add (new SqlParameter ("objectid"' objectID));  		using (SqlDataReader reader = command.ExecuteReader ()) {  			while (reader.Read ()) {  				Dictionary<string' string> col = new Dictionary<string' string> ();  				col.Add ("object_id"' reader ["object_id"].ToString ());  				col.Add ("fk_name"' reader ["name"].ToString ());  				col.Add ("referenced_table_name"' reader ["table_name"].ToString ());  				col.Add ("referenced_schema_name"' reader ["schema_name"].ToString ());  				keys.Add ((int)reader ["object_id"]' col);  			}  		}  	}  	foreach (KeyValuePair<int' Dictionary<string' string>> fk in keys) {  		List<string> parent = new List<string> ();  		List<string> reference = new List<string> ();  		using (SqlCommand command = connection.CreateCommand ()) {  			command.CommandText = @"                         SELECT c1.name AS parent_name' c2.name AS referenced_name                         FROM sys.foreign_key_columns f                         INNER JOIN sys.columns c1                             ON c1.object_id = f.parent_object_id                             AND c1.column_id = f.parent_column_id                         INNER JOIN sys.columns c2                             ON c2.object_id = f.referenced_object_id                             AND c2.column_id = f.referenced_column_id                         WHERE f.constraint_object_id = @objectid                         ORDER BY f.constraint_column_id";  			command.CommandType = CommandType.Text;  			command.Parameters.Add (new SqlParameter ("objectid"' fk.Value ["object_id"]));  			using (SqlDataReader reader = command.ExecuteReader ()) {  				while (reader.Read ()) {  					parent.Add ("[" + reader ["parent_name"].ToString () + "]");  					reference.Add ("[" + reader ["referenced_name"].ToString () + "]");  				}  			}  		}  		foreignKeyList.Add (string.Format (foreignKeyDef' schemaName' tableName' fk.Value ["fk_name"].ToString ()' string.Join ("' "' parent.ToArray ())' fk.Value ["referenced_schema_name"].ToString ()' fk.Value ["referenced_table_name"].ToString ()' string.Join ("' "' reference.ToArray ())));  	}  	if (foreignKeyList.Count != 0) {  		foreignKeyList.Insert (0' "-------- FOREIGN KEY --------");  		completeList.Add (string.Join ("\n\n"' foreignKeyList.ToArray ()));  	}  }  
Magic Number,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The following statement contains a magic number: using (SqlCommand command = connection.CreateCommand ()) {  	command.CommandText = @"                     SELECT h.name AS column_name' t.name AS type_name' h.is_nullable' h.max_length' h.precision' h.scale'                         t.max_length AS max_length_default' h.is_identity                     FROM sys.columns h                     INNER JOIN sys.types t                     ON t.user_type_id = h.user_type_id                     WHERE h.object_id = @objectid                     ORDER BY h.column_id";  	command.CommandType = CommandType.Text;  	command.Parameters.Add (new SqlParameter ("objectid"' objectID));  	using (SqlDataReader reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			string maxLength = reader ["max_length"].ToString ();  			if (maxLength != reader ["max_length_default"].ToString ()) {  				if (maxLength == "-1") {  					maxLength = "(max)";  				}  				else if (reader ["precision"].ToString () != "0" || reader ["scale"].ToString () != "0") {  					maxLength = "(" + reader ["precision"].ToString () + "'" + reader ["scale"].ToString () + ")";  				}  				else {  					// Since nchar and nvarchar use 2 bytes for every 1 max length' the saved max length on sys.columns should  					// be divided by 2  					if (reader ["type_name"].ToString () == "nchar" || reader ["type_name"].ToString () == "nvarchar") {  						maxLength = "(" + (Convert.ToInt32 (reader ["max_length"]) / 2) + ")";  					}  					else {  						maxLength = "(" + maxLength + ")";  					}  				}  			}  			else {  				maxLength = string.Empty;  			}  			columnList.Add (string.Format (columnDef' reader ["column_name"].ToString ()' reader ["type_name"].ToString ()' maxLength' reader ["is_nullable"].ToString () == "False" ? "NOT NULL" : "NULL"));  		}  	}  }  
Magic Number,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The following statement contains a magic number: using (SqlDataReader reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		string maxLength = reader ["max_length"].ToString ();  		if (maxLength != reader ["max_length_default"].ToString ()) {  			if (maxLength == "-1") {  				maxLength = "(max)";  			}  			else if (reader ["precision"].ToString () != "0" || reader ["scale"].ToString () != "0") {  				maxLength = "(" + reader ["precision"].ToString () + "'" + reader ["scale"].ToString () + ")";  			}  			else {  				// Since nchar and nvarchar use 2 bytes for every 1 max length' the saved max length on sys.columns should  				// be divided by 2  				if (reader ["type_name"].ToString () == "nchar" || reader ["type_name"].ToString () == "nvarchar") {  					maxLength = "(" + (Convert.ToInt32 (reader ["max_length"]) / 2) + ")";  				}  				else {  					maxLength = "(" + maxLength + ")";  				}  			}  		}  		else {  			maxLength = string.Empty;  		}  		columnList.Add (string.Format (columnDef' reader ["column_name"].ToString ()' reader ["type_name"].ToString ()' maxLength' reader ["is_nullable"].ToString () == "False" ? "NOT NULL" : "NULL"));  	}  }  
Magic Number,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The following statement contains a magic number: while (reader.Read ()) {  	string maxLength = reader ["max_length"].ToString ();  	if (maxLength != reader ["max_length_default"].ToString ()) {  		if (maxLength == "-1") {  			maxLength = "(max)";  		}  		else if (reader ["precision"].ToString () != "0" || reader ["scale"].ToString () != "0") {  			maxLength = "(" + reader ["precision"].ToString () + "'" + reader ["scale"].ToString () + ")";  		}  		else {  			// Since nchar and nvarchar use 2 bytes for every 1 max length' the saved max length on sys.columns should  			// be divided by 2  			if (reader ["type_name"].ToString () == "nchar" || reader ["type_name"].ToString () == "nvarchar") {  				maxLength = "(" + (Convert.ToInt32 (reader ["max_length"]) / 2) + ")";  			}  			else {  				maxLength = "(" + maxLength + ")";  			}  		}  	}  	else {  		maxLength = string.Empty;  	}  	columnList.Add (string.Format (columnDef' reader ["column_name"].ToString ()' reader ["type_name"].ToString ()' maxLength' reader ["is_nullable"].ToString () == "False" ? "NOT NULL" : "NULL"));  }  
Magic Number,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The following statement contains a magic number: if (maxLength != reader ["max_length_default"].ToString ()) {  	if (maxLength == "-1") {  		maxLength = "(max)";  	}  	else if (reader ["precision"].ToString () != "0" || reader ["scale"].ToString () != "0") {  		maxLength = "(" + reader ["precision"].ToString () + "'" + reader ["scale"].ToString () + ")";  	}  	else {  		// Since nchar and nvarchar use 2 bytes for every 1 max length' the saved max length on sys.columns should  		// be divided by 2  		if (reader ["type_name"].ToString () == "nchar" || reader ["type_name"].ToString () == "nvarchar") {  			maxLength = "(" + (Convert.ToInt32 (reader ["max_length"]) / 2) + ")";  		}  		else {  			maxLength = "(" + maxLength + ")";  		}  	}  }  else {  	maxLength = string.Empty;  }  
Magic Number,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The following statement contains a magic number: if (maxLength == "-1") {  	maxLength = "(max)";  }  else if (reader ["precision"].ToString () != "0" || reader ["scale"].ToString () != "0") {  	maxLength = "(" + reader ["precision"].ToString () + "'" + reader ["scale"].ToString () + ")";  }  else {  	// Since nchar and nvarchar use 2 bytes for every 1 max length' the saved max length on sys.columns should  	// be divided by 2  	if (reader ["type_name"].ToString () == "nchar" || reader ["type_name"].ToString () == "nvarchar") {  		maxLength = "(" + (Convert.ToInt32 (reader ["max_length"]) / 2) + ")";  	}  	else {  		maxLength = "(" + maxLength + ")";  	}  }  
Magic Number,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The following statement contains a magic number: if (reader ["precision"].ToString () != "0" || reader ["scale"].ToString () != "0") {  	maxLength = "(" + reader ["precision"].ToString () + "'" + reader ["scale"].ToString () + ")";  }  else {  	// Since nchar and nvarchar use 2 bytes for every 1 max length' the saved max length on sys.columns should  	// be divided by 2  	if (reader ["type_name"].ToString () == "nchar" || reader ["type_name"].ToString () == "nvarchar") {  		maxLength = "(" + (Convert.ToInt32 (reader ["max_length"]) / 2) + ")";  	}  	else {  		maxLength = "(" + maxLength + ")";  	}  }  
Magic Number,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The following statement contains a magic number: if (reader ["type_name"].ToString () == "nchar" || reader ["type_name"].ToString () == "nvarchar") {  	maxLength = "(" + (Convert.ToInt32 (reader ["max_length"]) / 2) + ")";  }  else {  	maxLength = "(" + maxLength + ")";  }  
Magic Number,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,GetTableSchema,The following statement contains a magic number: maxLength = "(" + (Convert.ToInt32 (reader ["max_length"]) / 2) + ")";  
Magic Number,Trilogic.Data,SqlServerAccess,C:\repos\Etersoul_trilogic-data\src\Trilogic\Data\SqlServerAccess.cs,CreateConnection,The following statement contains a magic number: builder.ConnectTimeout = 5;  
