Implementation smell,Namespace,Class,File,Method,Description
Long Method,System.Reflection.Tests,FieldTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Field\FieldTests.cs,TestLiteralFields1,The method has 232 lines of code.
Long Method,System.Reflection.Tests,PropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Property\PropertyTests.cs,TestProperties_GetterSetter,The method has 154 lines of code.
Long Method,System.Reflection.Tests,TypeInvariants,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeInvariants.cs,TestTypeCommonInvariants,The method has 124 lines of code.
Complex Method,System.Reflection.Tests,MethodInvariants,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodInvariants.cs,TestMethodBaseCommonInvariants,Cyclomatic complexity of the method is 8
Complex Method,System.Reflection.Tests,ReflectionOnlyRestrictions,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\RestrictedApis\RestrictedApis.cs,TestRestrictions,Cyclomatic complexity of the method is 8
Complex Method,System.Reflection.Tests,TypeInvariants,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeInvariants.cs,TestTypeCommonInvariants,Cyclomatic complexity of the method is 16
Complex Method,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestGetInterfaces,Cyclomatic complexity of the method is 11
Complex Method,System.Reflection.Tests,TypeTests_GetMember,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.GetMember.cs,TestReturnType,Cyclomatic complexity of the method is 9
Complex Method,System.Reflection.Tests,TypeTests_GetMember,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.GetMember.cs,TestMemberTypeCombos,Cyclomatic complexity of the method is 9
Complex Method,System.Reflection.Tests,CustomAttributeInstantiator,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\CustomAttributeInstantiator.cs,Instantiate,Cyclomatic complexity of the method is 17
Long Parameter List,SampleMetadata,ClassWithMethods1<T>,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\SampleMetadata\SampleMetadata.cs,TestPrimitives1,The method has 17 parameters. Parameters: bo' b' c' s' i' l' ip' sb' us' ui' ul' uip' fl' db' o' str' tr
Long Identifier,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,ModuleResolveEvent,The length of the parameter moduleReturnedFromEventHandler is 30.
Long Identifier,System.Reflection.Tests,TestData,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestData.cs,,The length of the parameter s_SimpleAssemblyRecompiledMvid is 30.
Long Identifier,System.Reflection.Tests,TestData,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestData.cs,,The length of the parameter s_SimpleAssemblyRecompiledImage is 31.
Long Identifier,System.Reflection.Tests,TestData,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestData.cs,,The length of the parameter s_PublicKeyToken1ee753223f71263d_Pk is 35.
Long Identifier,System.Reflection.Tests,TestData,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestData.cs,,The length of the parameter s_PublicKeyToken1ee753223f71263dImage is 37.
Long Identifier,System.Reflection.Tests,TestData,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestData.cs,,The length of the parameter s_PlatformAnyCpu32BitPreferred is 30.
Long Identifier,System.Reflection.Tests,TestData,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestData.cs,,The length of the parameter s_AssemblyRefUsingFullPublicKeyImage is 36.
Long Identifier,System.Reflection.Tests,TestData,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestData.cs,,The length of the parameter s_AssemblyWithEmbeddedResourcesImage is 36.
Long Identifier,System.Reflection.Tests,TestData,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestData.cs,,The length of the parameter s_AssemblyWithResourcesInManifestFilesImage is 43.
Long Identifier,System.Reflection.Tests,TestData,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestData.cs,,The length of the parameter s_AssemblyWithResourcesInModuleImage is 36.
Long Identifier,System.Reflection.Tests,TestData,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestData.cs,,The length of the parameter s_ModuleForAssemblyWithResourcesInModuleImage is 45.
Long Identifier,System.Reflection.Tests,TestData,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestData.cs,,The length of the parameter s_DerivedClassWithVariationsOnFooImage is 38.
Long Identifier,System.Reflection.Tests,TestData,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestData.cs,,The length of the parameter s_AssemblyWithEntryPointEntryPointToken is 39.
Long Identifier,System.Reflection.Tests,TestData,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestData.cs,,The length of the parameter s_AssemblyWithMethodBodyILBytes is 31.
Long Identifier,System.Reflection.Tests,TestData,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestData.cs,,The length of the parameter s_AssemblyWithTypeRefToNestedTypeImage is 38.
Long Identifier,System.Reflection.Tests,TestData,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestData.cs,,The length of the parameter s_NameOfTypeWithStrangeCharacters is 33.
Long Statement,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,CannotDoWithReflectionOnlyAssemblies,The length of the statement  "                // Storing as ICustomAttributeProvider so we don't accidentally pick up the CustomAttributeExtensions extension methods. " is 120.
Long Statement,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,CannotDoWithReflectionOnlyAssemblies,The length of the statement  "                Assert.Throws<ArgumentException>(() => coreAssembly.CreateInstance("System.Object")); // Compat quirk: Why ArgumentException instead of InvalidOperationException? " is 162.
Long Statement,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetCopiedName,The length of the statement  "                AssemblyName name = a.GetName(copiedName: true);   // Shadow-copying is irrevant for TypeLoader-loaded assemblies so this parameter is ignored. " is 143.
Long Statement,System.Reflection.Tests,ConstructorTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Constructor\ConstructorTests.cs,TestConstructors1Worker,The length of the statement  "            const BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.ExactBinding; " is 121.
Long Statement,System.Reflection.Tests,ConstructorTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Constructor\ConstructorTests.cs,TestConstructors1Worker,The length of the statement  "            Assert.Equal(MethodAttributes.Public | MethodAttributes.HideBySig | MethodAttributes.SpecialName | MethodAttributes.RTSpecialName' c.Attributes); " is 145.
Long Statement,System.Reflection.Tests,CustomAttributeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\CustomAttributes\CustomAttributeTests.cs,CustomAttributeTest1,The length of the statement  "            Type t = typeof(AttributeHolder1);  // Intentionally not projected. We're reflecting on this (and Invoking it) to get the validation baseline data. " is 147.
Long Statement,System.Reflection.Tests,CustomAttributeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\CustomAttributes\CustomAttributeTests.cs,CustomAttributeTest1,The length of the statement  "                Type parameterType = cad.Constructor.GetParameters()[0].ParameterType;  // Capture the formal parameter type of the constructor. " is 128.
Long Statement,System.Reflection.Tests,CustomAttributeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\CustomAttributes\CustomAttributeTests.cs,CustomAttributeTest1,The length of the statement  "                CustomAttributeData cadProjected = ntProjected.CustomAttributes.Single(c => c.AttributeType == typeof(SampleCustomAttribute).Project()); " is 136.
Long Statement,System.Reflection.Tests,CustomAttributeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\CustomAttributes\CustomAttributeTests.cs,UnwrapEnum,The length of the statement  "            FieldInfo f = e.GetType().GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly).First(); " is 142.
Long Statement,System.Reflection.Tests,CustomAttributeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\CustomAttributes\CustomAttributeTests.cs,TestDllImportPseudoCustomAttribute,The length of the statement  "            TypeInfo runtimeType = typeof(DllImportHolders).GetTypeInfo();  // Intentionally not projected - using to get expected results. " is 127.
Long Statement,System.Reflection.Tests,CustomAttributeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\CustomAttributes\CustomAttributeTests.cs,TestDllImportPseudoCustomAttribute,The length of the statement  "                CustomAttributeData cad = ecmaMethods[i].CustomAttributes.Single(c => c.AttributeType.Name == nameof(DllImportAttribute)); " is 122.
Long Statement,System.Reflection.Tests,FieldTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Field\FieldTests.cs,TestField1Worker,The length of the statement  "            const BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.DeclaredOnly; " is 143.
Long Statement,System.Reflection.Tests,FieldTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Field\FieldTests.cs,TestField1Worker,The length of the statement  "                Assert.Equal(FieldAttributes.Private | FieldAttributes.Static | FieldAttributes.Literal | FieldAttributes.HasDefault' f.Attributes); " is 132.
Long Statement,System.Reflection.Tests,FieldTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Field\FieldTests.cs,TestLiteralFields1,The length of the statement  "            FieldInfo[] fields = t.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.DeclaredOnly); " is 129.
Long Statement,System.Reflection.Tests,IdentityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Identity\IdentityTests.cs,Identity_ReflectedType1,The length of the statement  "            MemberInfo[] fromBase = typeof(MemberHolderBase<int>).Project().GetMember("*"' mt' bf).Where(m => m.DeclaringType != typeof(object).Project()).OrderBy(m => m.Name).ToArray(); " is 174.
Long Statement,System.Reflection.Tests,IdentityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Identity\IdentityTests.cs,Identity_ReflectedType1,The length of the statement  "            MemberInfo[] fromDerived = typeof(MemberHolder<int>).Project().GetMember("*"' mt' bf).Where(m => m.DeclaringType != typeof(object).Project()).OrderBy(m => m.Name).ToArray(); " is 173.
Long Statement,System.Reflection.Tests,IdentityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Identity\IdentityTests.cs,Identity_ReflectedType1,The length of the statement  "                // We want to exercise the actual Equals() method and all of its branches in both directions. We don't want test middleware " is 123.
Long Statement,System.Reflection.Tests,IdentityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Identity\IdentityTests.cs,Identity_DeclaringType1,The length of the statement  "            MemberTypes mt = MemberTypes.Constructor | MemberTypes.Event | MemberTypes.Field | MemberTypes.Method | MemberTypes.Property; " is 125.
Long Statement,System.Reflection.Tests,IdentityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Identity\IdentityTests.cs,Identity_DeclaringType1,The length of the statement  "            MemberInfo[] fromBase = typeof(MemberHolderBase<int>).Project().GetMember("*"' mt' bf).Where(m => m.DeclaringType != typeof(object).Project()).OrderBy(m => m.Name).ToArray(); " is 174.
Long Statement,System.Reflection.Tests,IdentityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Identity\IdentityTests.cs,Identity_DeclaringType1,The length of the statement  "            MemberInfo[] fromDerived = typeof(MemberHolderBase<long>).Project().GetMember("*"' mt' bf).Where(m => m.DeclaringType != typeof(object).Project()).OrderBy(m => m.Name).ToArray(); " is 178.
Long Statement,System.Reflection.Tests,IdentityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Identity\IdentityTests.cs,Identity_Handle1,The length of the statement  "            MemberTypes mt = MemberTypes.Constructor | MemberTypes.Event | MemberTypes.Field | MemberTypes.Method | MemberTypes.Property; " is 125.
Long Statement,System.Reflection.Tests,IdentityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Identity\IdentityTests.cs,Identity_Handle1,The length of the statement  "            MemberInfo[] fromBase = typeof(MemberHolderBase<>).Project().GetMember("*"' mt' bf | BindingFlags.DeclaredOnly).Where(m => m.DeclaringType != typeof(object).Project()).OrderBy(m => m.Name).ToArray(); " is 199.
Long Statement,System.Reflection.Tests,IdentityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Identity\IdentityTests.cs,Identity_Handle1,The length of the statement  "            MemberInfo[] fromBaseAgain = typeof(MemberHolderBase<>).Project().GetMember("*"' mt' bf).Where(m => m.DeclaringType != typeof(object).Project()).OrderBy(m => m.Name).ToArray(); " is 176.
Long Statement,System.Reflection.Tests,MethodInvariants,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodInvariants.cs,TestGenericMethodInfoCommonInvariants,The length of the statement  "                // The DeclaringMethod isn't necessarily the same as there is only one Type object for a generic parameter and it's shared between " is 130.
Long Statement,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethods1Worker,The length of the statement  "            const BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.DeclaredOnly; " is 143.
Long Statement,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestAllCoreTypes,The length of the statement  "            const BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.DeclaredOnly; " is 143.
Long Statement,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestGenericMethods1Worker,The length of the statement  "            const BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.DeclaredOnly; " is 143.
Long Statement,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestConstructedGenericMethods1Worker,The length of the statement  "            const BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.DeclaredOnly; " is 143.
Long Statement,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The length of the statement  "                Assert.Equal(coreAssembly.GetType("System.Collections.Generic.IList`1"' throwOnError: true).MakeGenericType(theM)' lvis[4].LocalType); " is 134.
Long Statement,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestCallingConventions,The length of the statement  "            const BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.DeclaredOnly; " is 143.
Long Statement,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestCallingConventions,The length of the statement  "            MethodBase[] mbs = (MethodBase[])(typeof(ExerciseCallingConventions).Project().GetMember("*"' MemberTypes.Method | MemberTypes.Constructor' bf)); " is 145.
Long Statement,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,CannotDoWithReflectionOnlyModule,The length of the statement  "                // Storing as ICustomAttributeProvider so we don't accidentally pick up the CustomAttributeExtensions extension methods. " is 120.
Long Statement,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,LoadMultiModuleFromDisk_GetModule,The length of the statement  "                File.WriteAllBytes(bobNetModulePath' TestData.s_JoeNetModuleImage); // Note: ScopeName ("Joe") intentionally different from manifest name ("Bob") " is 145.
Long Statement,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,LoadMultiModuleFromDisk_GetModuleCaseInsensitive,The length of the statement  "                File.WriteAllBytes(bobNetModulePath' TestData.s_JoeNetModuleImage); // Note: ScopeName ("Joe") intentionally different from manifest name ("Bob") " is 145.
Long Statement,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,LoadMultiModuleFromDisk_GetModuleNameNotInManifest,The length of the statement  "                File.WriteAllBytes(bobNetModulePath' TestData.s_JoeNetModuleImage); // Note: ScopeName ("Joe") intentionally different from manifest name ("Bob") " is 145.
Long Statement,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,LoadMultiModuleFromDisk_Twice,The length of the statement  "                File.WriteAllBytes(bobNetModulePath' TestData.s_JoeNetModuleImage); // Note: ScopeName ("Joe") intentionally different from manifest name ("Bob") " is 145.
Long Statement,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,LoadMultiModuleFromDisk_GetModuleManifest,The length of the statement  "                File.WriteAllBytes(bobNetModulePath' TestData.s_JoeNetModuleImage); // Note: ScopeName ("Joe") intentionally different from manifest name ("Bob") " is 145.
Long Statement,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,LoadMultiModuleFromDisk_GetModuleNull,The length of the statement  "                File.WriteAllBytes(bobNetModulePath' TestData.s_JoeNetModuleImage); // Note: ScopeName ("Joe") intentionally different from manifest name ("Bob") " is 145.
Long Statement,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,MultiModule_GetModules,The length of the statement  "                File.WriteAllBytes(bobNetModulePath' TestData.s_JoeNetModuleImage); // Note: ScopeName ("Joe") intentionally different from manifest name ("Bob") " is 145.
Long Statement,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,MultiModule_AssemblyGetTypes,The length of the statement  "                File.WriteAllBytes(bobNetModulePath' TestData.s_JoeNetModuleImage); // Note: ScopeName ("Joe") intentionally different from manifest name ("Bob") " is 145.
Long Statement,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,MultiModule_AssemblyDefinedTypes,The length of the statement  "                File.WriteAllBytes(bobNetModulePath' TestData.s_JoeNetModuleImage); // Note: ScopeName ("Joe") intentionally different from manifest name ("Bob") " is 145.
Long Statement,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,MultiModule_AssemblyGetTypes_ReturnsDifferentObjectEachType,The length of the statement  "                File.WriteAllBytes(bobNetModulePath' TestData.s_JoeNetModuleImage); // Note: ScopeName ("Joe") intentionally different from manifest name ("Bob") " is 145.
Long Statement,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,MultiModule_AssemblyDefinedTypes_ReturnsDifferentObjectEachType,The length of the statement  "                File.WriteAllBytes(bobNetModulePath' TestData.s_JoeNetModuleImage); // Note: ScopeName ("Joe") intentionally different from manifest name ("Bob") " is 145.
Long Statement,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,ModuleGetTypes,The length of the statement  "                File.WriteAllBytes(bobNetModulePath' TestData.s_JoeNetModuleImage); // Note: ScopeName ("Joe") intentionally different from manifest name ("Bob") " is 145.
Long Statement,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,ModuleGetTypesReturnsNewObjectEachType,The length of the statement  "                File.WriteAllBytes(bobNetModulePath' TestData.s_JoeNetModuleImage); // Note: ScopeName ("Joe") intentionally different from manifest name ("Bob") " is 145.
Long Statement,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,CrossModuleTypeRefResolution,The length of the statement  "                File.WriteAllBytes(bobNetModulePath' TestData.s_JoeNetModuleImage); // Note: ScopeName ("Joe") intentionally different from manifest name ("Bob") " is 145.
Long Statement,System.Reflection.Tests,ParameterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Parameter\ParameterTests.cs,TestRawDefaultValue1,The length of the statement  "            ParameterInfo p = typeof(ParametersWithDefaultValues).Project().GetTypeInfo().GetDeclaredMethod("Foo1").GetParameters()[0]; " is 123.
Long Statement,System.Reflection.Tests,ParameterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Parameter\ParameterTests.cs,TestRawDefaultValue2,The length of the statement  "            ParameterInfo p = typeof(ParametersWithDefaultValues).Project().GetTypeInfo().GetDeclaredMethod("Foo2").GetParameters()[0]; " is 123.
Long Statement,System.Reflection.Tests,ParameterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Parameter\ParameterTests.cs,TestRawDefaultValue3,The length of the statement  "            ParameterInfo p = typeof(ParametersWithDefaultValues).Project().GetTypeInfo().GetDeclaredMethod("Foo3").GetParameters()[0]; " is 123.
Long Statement,System.Reflection.Tests,ParameterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Parameter\ParameterTests.cs,TestRawDefaultValue4,The length of the statement  "            ParameterInfo p = typeof(ParametersWithDefaultValues).Project().GetTypeInfo().GetDeclaredMethod("Foo4").GetParameters()[0]; " is 123.
Long Statement,System.Reflection.Tests,ParameterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Parameter\ParameterTests.cs,TestRawDefaultValue5,The length of the statement  "            ParameterInfo p = typeof(ParametersWithDefaultValues).Project().GetTypeInfo().GetDeclaredMethod("Foo5").GetParameters()[0]; " is 123.
Long Statement,System.Reflection.Tests,ParameterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Parameter\ParameterTests.cs,TestRawDefaultValue6,The length of the statement  "            ParameterInfo p = typeof(ParametersWithDefaultValues).Project().GetTypeInfo().GetDeclaredMethod("Foo6").GetParameters()[0]; " is 123.
Long Statement,System.Reflection.Tests,ReflectionOnlyRestrictions,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\RestrictedApis\RestrictedApis.cs,TestRestrictions,The length of the statement  "                    foreach (MemberInfo mem in t.GetMember("*"' BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.DeclaredOnly)) " is 164.
Long Statement,System.Reflection.Tests,ReflectionOnlyRestrictions,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\RestrictedApis\RestrictedApis.cs,TestRestrictions,The length of the statement  "                            Assert.Throws<InvalidOperationException>(() => c.Invoke(null' default(BindingFlags)' null' Array.Empty<object>()' null)); " is 121.
Long Statement,System.Reflection.Tests,ReflectionOnlyRestrictions,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\RestrictedApis\RestrictedApis.cs,TestRestrictions,The length of the statement  "                            Assert.Throws<InvalidOperationException>(() => m.Invoke(null' default(BindingFlags)' null' Array.Empty<object>()' null)); " is 121.
Long Statement,System.Reflection.Tests,TypeInfoDeclaredGenericTypeArgumentsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_GenericTypeArgumentsTests.cs,TestGenericArguments15,The length of the statement  "            VerifyGenericTypeArguments(typeof(Test_SIG2<Int32' String>).Project()' new string[] { "Int32"' "String" }' new string[] { "Int32"' "String" }); " is 143.
Long Statement,System.Reflection.Tests,TypeInfoDeclaredGenericTypeArgumentsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_GenericTypeArgumentsTests.cs,TestGenericArguments18,The length of the statement  "            VerifyGenericTypeArguments(typeof(Test_SIG_Int<string>).Project()' new string[] { "String" }' new string[] { "String"' "Int32" }); " is 130.
Long Statement,System.Reflection.Tests,TypeInfoDeclaredGenericTypeArgumentsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_GenericTypeArgumentsTests.cs,TestGenericArguments28,The length of the statement  "            VerifyGenericTypeArguments(typeof(Test_CIG2<int' string>).Project()' new string[] { "Int32"' "String" }' new string[] { "Int32"' "String" }); " is 141.
Long Statement,System.Reflection.Tests,TypeInfoDeclaredGenericTypeArgumentsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_GenericTypeArgumentsTests.cs,TestGenericArguments31,The length of the statement  "            VerifyGenericTypeArguments(typeof(Test_CIG_Int<string>).Project()' new string[] { "String" }' new string[] { "String"' "Int32" }); " is 130.
Long Statement,System.Reflection.Tests,TypeInfoDeclaredImplementedInterfacesTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_ImplementedInterfacesTests.cs,TestInterFaces4,The length of the statement  "            VerifyInterfaces(typeof(D1).Project()' new Type[] { typeof(ImI1).Project()' typeof(I0).Project()' typeof(I21).Project() }); " is 123.
Long Statement,System.Reflection.Tests,TypeInfoDeclaredImplementedInterfacesTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_ImplementedInterfacesTests.cs,TestInterFaces5,The length of the statement  "            VerifyInterfaces(typeof(D2<>).Project()' new Type[] { typeof(ImI1).Project()' typeof(I0).Project()' typeof(I21).Project() }); " is 125.
Long Statement,System.Reflection.Tests,TypeInfoDeclaredImplementedInterfacesTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_ImplementedInterfacesTests.cs,TestInterFaces6,The length of the statement  "            VerifyInterfaces(typeof(D2<int>).Project()' new Type[] { typeof(ImI1).Project()' typeof(I0).Project()' typeof(I21).Project() }); " is 128.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable2,The length of the statement  "            VerifyIsAssignableFrom("ListArray"' typeof(IList<object>).Project().GetTypeInfo()' typeof(object[]).Project().GetTypeInfo()' true); " is 131.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable2,The length of the statement  "            VerifyIsAssignableFrom("ArrayList"' typeof(object[]).Project().GetTypeInfo()' typeof(IList<object>).Project().GetTypeInfo()' false); " is 132.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable2,The length of the statement  "            VerifyIsAssignableFrom("IList<object>&B[]"' typeof(IList<object>).Project().GetTypeInfo()' typeof(B[]).Project().GetTypeInfo()' true); " is 134.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable2,The length of the statement  "            VerifyIsAssignableFrom("IList<B>*B[]"' typeof(IList<B>).Project().GetTypeInfo()' typeof(B[]).Project().GetTypeInfo()' true); " is 124.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable2,The length of the statement  "            VerifyIsAssignableFrom("IList<B>&D[]"' typeof(IList<B>).Project().GetTypeInfo()' typeof(D[]).Project().GetTypeInfo()' true); " is 124.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable2,The length of the statement  "            VerifyIsAssignableFrom("IList<D> & D[]"' typeof(IList<D>).Project().GetTypeInfo()' typeof(D[]).Project().GetTypeInfo()' true); " is 126.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable3,The length of the statement  "            VerifyIsAssignableFrom("I<object>&G2<object>"' typeof(I<object>).Project().GetTypeInfo()' typeof(G2<object>).Project().GetTypeInfo()' true); " is 140.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable3,The length of the statement  "            VerifyIsAssignableFrom("G<string>&G2<string>"' typeof(G<string>).Project().GetTypeInfo()' typeof(G2<string>).Project().GetTypeInfo()' true); " is 140.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable3,The length of the statement  "            VerifyIsAssignableFrom("G<string>&G<string>"' typeof(G<string>).Project().GetTypeInfo()' typeof(G<string>).Project().GetTypeInfo()' true); " is 138.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable3,The length of the statement  "            VerifyIsAssignableFrom("G<string>&G<object>"' typeof(G<string>).Project().GetTypeInfo()' typeof(G<object>).Project().GetTypeInfo()' false); " is 139.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable3,The length of the statement  "            VerifyIsAssignableFrom("G<object>&G<stgring>"' typeof(G<object>).Project().GetTypeInfo()' typeof(G<string>).Project().GetTypeInfo()' false); " is 140.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable3,The length of the statement  "            VerifyIsAssignableFrom("G2<object>&G<object>"' typeof(G2<object>).Project().GetTypeInfo()' typeof(G<object>).Project().GetTypeInfo()' false); " is 141.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable3,The length of the statement  "            VerifyIsAssignableFrom("G<string>&I<String>"' typeof(G<string>).Project().GetTypeInfo()' typeof(I<string>).Project().GetTypeInfo()' false); " is 139.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable4,The length of the statement  "            VerifyIsAssignableFrom("I2 Gen<string>"' typeof(I2).Project().GetTypeInfo()' typeof(Gen<string>).Project().GetTypeInfo()' true); " is 128.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable5,The length of the statement  "            VerifyIsAssignableFrom("Case500.A Case500.B"' typeof(Case500.A).Project().GetTypeInfo()' typeof(Case500.B).Project().GetTypeInfo()' true); " is 138.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable5,The length of the statement  "            VerifyIsAssignableFrom("Case500.A Case500.C"' typeof(Case500.A).Project().GetTypeInfo()' typeof(Case500.C).Project().GetTypeInfo()' true); " is 138.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable5,The length of the statement  "            VerifyIsAssignableFrom("Case500.B Case500.C"' typeof(Case500.B).Project().GetTypeInfo()' typeof(Case500.C).Project().GetTypeInfo()' true); " is 138.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable6,The length of the statement  "            VerifyIsAssignableFrom("IList<I1> S[]"' typeof(IList<I1>).Project().GetTypeInfo()' typeof(S[]).Project().GetTypeInfo()' false); " is 127.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable6,The length of the statement  "            VerifyIsAssignableFrom("IList<I1> D[]"' typeof(IList<I1>).Project().GetTypeInfo()' typeof(D[]).Project().GetTypeInfo()' true); " is 126.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable6,The length of the statement  "            VerifyIsAssignableFrom("int[] uint[]"' typeof(int[]).Project().GetTypeInfo()' typeof(uint[]).Project().GetTypeInfo()' true); " is 124.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable6,The length of the statement  "            VerifyIsAssignableFrom("uint[] int[]"' typeof(uint[]).Project().GetTypeInfo()' typeof(int[]).Project().GetTypeInfo()' true); " is 124.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable6,The length of the statement  "            VerifyIsAssignableFrom("IList<int> uint[]"' typeof(IList<int>).Project().GetTypeInfo()' typeof(uint[]).Project().GetTypeInfo()' true); " is 134.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable6,The length of the statement  "            VerifyIsAssignableFrom("IList<uint> int[]"' typeof(IList<uint>).Project().GetTypeInfo()' typeof(int[]).Project().GetTypeInfo()' true); " is 134.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable9,The length of the statement  "            // Why a generic parameter as the element type? .NETNative runtime doesn't support rank 1 mdarrays' but the reflection layer does as long as  " is 140.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable11,The length of the statement  "            VerifyIsAssignableFrom("GBase<> GBase<>"' typeof(GBase<>).Project().GetTypeInfo()' typeof(GBase<>).Project().GetTypeInfo()' true); " is 130.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable11,The length of the statement  "            // The fact that this returns "false" often surprises people. But it is the correct result under both .NET Native and the desktop. But they get there " is 149.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable11,The length of the statement  "            // The .NET Native implements returns false because one cannot derive from a generic type definition (only an instantiation of  " is 126.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable11,The length of the statement  "            // The desktop' however' converts generic type definitions to instantiations closed over the generic type definition's formal type parameter " is 140.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable11,The length of the statement  "            // (that is' the "T" in GBase<T>) However' "false" is still the appropriate answer since GDerived<T> derives from GBase closed over " is 131.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable11,The length of the statement  "            VerifyIsAssignableFrom("GBase<> GDerived<>"' typeof(GBase<>).Project().GetTypeInfo()' typeof(GDerived<>).Project().GetTypeInfo()' false); " is 137.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable11,The length of the statement  "            // This test now corrects the "flaw" in the prior test. We close GBase over GDerived's "T" and ask if GDerived<> derives from that. " is 131.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable11,The length of the statement  "            VerifyIsAssignableFrom("GBase<T> GDerived<>"' typeof(GBase<>).Project().MakeGenericType(typeof(GDerived<>).Project().Gp(0).AsType()).GetTypeInfo()' typeof(GDerived<>).Project().GetTypeInfo()' true); " is 198.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable12,The length of the statement  "            VerifyIsAssignableFrom("IContravariant<string> IContravariance<object>"' typeof(IContraVariant<string>).Project().GetTypeInfo()' typeof(IContraVariant<object>).Project().GetTypeInfo()' true); " is 191.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable12,The length of the statement  "            VerifyIsAssignableFrom("IContravariant<int[]> IContravariance<uint[]>"' typeof(IContraVariant<int[]>).Project().GetTypeInfo()' typeof(IContraVariant<uint[]>).Project().GetTypeInfo()' true); " is 189.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable12,The length of the statement  "            VerifyIsAssignableFrom("IContravariant<int> IContravariance<uint>"' typeof(IContraVariant<int>).Project().GetTypeInfo()' typeof(IContraVariant<uint>).Project().GetTypeInfo()' false); " is 182.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable12,The length of the statement  "            VerifyIsAssignableFrom("IContravariant<int> IContravariance<int?>"' typeof(IContraVariant<int>).Project().GetTypeInfo()' typeof(IContraVariant<int?>).Project().GetTypeInfo()' false); " is 182.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable12,The length of the statement  "            // Variance checks do check castability between generic type parameters but only if it can be proven that the type parameter never binds to a valuetype. " is 152.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable12,The length of the statement  "            // (either the type parameter has a "class" constraint (not one "inherited" from an ancestor)' or has a non-interface' non-valuetype constraint.) " is 145.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable12,The length of the statement  "            VerifyIsAssignableFrom("IContravariant<T> IContravariance<object>"' typeof(IContraVariant<>).Project().MakeGenericType(theT).GetTypeInfo()' typeof(IContraVariant<object>).Project().GetTypeInfo()' false); " is 203.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable12,The length of the statement  "            VerifyIsAssignableFrom("IContravariant<U> IContravariance<object>"' typeof(IContraVariant<>).Project().MakeGenericType(theU).GetTypeInfo()' typeof(IContraVariant<object>).Project().GetTypeInfo()' true); " is 202.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable12,The length of the statement  "            VerifyIsAssignableFrom("IContravariant<T> IContravariance<I1>"' typeof(IContraVariant<>).Project().MakeGenericType(theT).GetTypeInfo()' typeof(IContraVariant<I1>).Project().GetTypeInfo()' false); " is 195.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable12,The length of the statement  "            VerifyIsAssignableFrom("IContravariant<U> IContravariance<I1>"' typeof(IContraVariant<>).Project().MakeGenericType(theU).GetTypeInfo()' typeof(IContraVariant<I1>).Project().GetTypeInfo()' true); " is 194.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable13,The length of the statement  "            VerifyIsAssignableFrom("ICoVariant<object> ICoVariant<string>"' typeof(ICoVariant<object>).Project().GetTypeInfo()' typeof(ICoVariant<string>).Project().GetTypeInfo()' true); " is 174.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable13,The length of the statement  "            VerifyIsAssignableFrom("ICoVariant<uint[]> ICoVariant<int[]>"' typeof(ICoVariant<uint[]>).Project().GetTypeInfo()' typeof(ICoVariant<int[]>).Project().GetTypeInfo()' true); " is 172.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable13,The length of the statement  "            VerifyIsAssignableFrom("ICoVariant<uint> ICoVariant<int>"' typeof(ICoVariant<uint>).Project().GetTypeInfo()' typeof(ICoVariant<int>).Project().GetTypeInfo()' false); " is 165.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable13,The length of the statement  "            VerifyIsAssignableFrom("ICoVariant<int?> ICoVariant<int>"' typeof(ICoVariant<int?>).Project().GetTypeInfo()' typeof(ICoVariant<int>).Project().GetTypeInfo()' false); " is 165.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable13,The length of the statement  "            // Variance checks do check castability between generic type parameters but only if it can be proven that the type parameter never binds to a valuetype. " is 152.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable13,The length of the statement  "            // (either the type parameter has a "class" constraint (not one "inherited" from an ancestor)' or has a non-interface' non-valuetype constraint.) " is 145.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable13,The length of the statement  "            VerifyIsAssignableFrom("ICoVariant<object> ICoVariant<T>"' typeof(ICoVariant<object>).Project().GetTypeInfo()' typeof(ICoVariant<>).Project().MakeGenericType(theT).GetTypeInfo()' false); " is 186.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable13,The length of the statement  "            VerifyIsAssignableFrom("ICoVariant<object> ICoVariant<U>"' typeof(ICoVariant<object>).Project().GetTypeInfo()' typeof(ICoVariant<>).Project().MakeGenericType(theU).GetTypeInfo()' true); " is 185.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable13,The length of the statement  "            VerifyIsAssignableFrom("ICoVariant<I1> ICoVariant<T>"' typeof(ICoVariant<I1>).Project().GetTypeInfo()' typeof(ICoVariant<>).Project().MakeGenericType(theT).GetTypeInfo()' false); " is 178.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable13,The length of the statement  "            VerifyIsAssignableFrom("ICoVariant<I1> ICoVariant<U>"' typeof(ICoVariant<I1>).Project().GetTypeInfo()' typeof(ICoVariant<>).Project().MakeGenericType(theU).GetTypeInfo()' true); " is 177.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,TestIsAssignable15,The length of the statement  "            VerifyIsAssignableFrom("object ICoVariant<T>"' typeof(object).Project().GetTypeInfo()' typeof(ICoVariant<>).Project().MakeGenericType(theT).GetTypeInfo()' true); " is 161.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,VerifyElementedTypeIsAssignableFrom,The length of the statement  "            VerifyIsAssignableFrom(TestName' leftElementType.MakeArrayType().GetTypeInfo()' rightElementType.MakeArrayType().GetTypeInfo()' expected); " is 138.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,VerifyElementedTypeIsAssignableFrom,The length of the statement  "            VerifyIsAssignableFrom(TestName' leftElementType.MakeArrayType(2).GetTypeInfo()' rightElementType.MakeArrayType(2).GetTypeInfo()' expected); " is 140.
Long Statement,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,VerifyElementedTypeIsAssignableFrom,The length of the statement  "            VerifyIsAssignableFrom(TestName' leftElementType.MakeByRefType().GetTypeInfo()' rightElementType.MakeByRefType().GetTypeInfo()' expected); " is 138.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsAbstract,The length of the statement  "            Assert.True(typeof(abstractClass).Project().GetTypeInfo().IsAbstract' "Failed!! .IsAbstract returned false for a type that is abstract."); " is 138.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsAbstract,The length of the statement  "            Assert.False(typeof(TypeInfoPropertyBase).Project().GetTypeInfo().IsAbstract' "Failed!! .IsAbstract returned true for a type that is not abstract."); " is 149.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsArray,The length of the statement  "            Assert.False(typeof(int).Project().GetTypeInfo().IsArray' "Failed!! .IsArray returned true for a type that is not an array."); " is 126.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsClass,The length of the statement  "            Assert.True(typeof(TypeInfoPropertyBase).Project().GetTypeInfo().IsClass' "Failed!!  IsClass returned false for a class Type"); " is 127.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsEnum,The length of the statement  "            Assert.False(typeof(TypeInfoPropertyBase).Project().GetTypeInfo().IsEnum' "Failed!!  IsEnum returned true for a class Type"); " is 125.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsInterface,The length of the statement  "            Assert.False(typeof(TypeInfoPropertyBase).Project().GetTypeInfo().IsInterface' "Failed!!  IsInterface returned true for a class Type"); " is 135.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsInterface,The length of the statement  "            Assert.True(typeof(ITest).Project().GetTypeInfo().IsInterface' "Failed!!   IsInterface returned false for a interface Type"); " is 125.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsNested,The length of the statement  "            Assert.False(typeof(TypeInfoPropertyBase).Project().GetTypeInfo().IsNested' "Failed!!  IsNested returned true for a non nested class Type"); " is 140.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsNested,The length of the statement  "            Assert.True(typeof(PublicClass.PublicNestedType).Project().GetTypeInfo().IsNested' "Failed!!    IsNested returned false for a nested class Type"); " is 146.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsPrimitive,The length of the statement  "            Assert.False(typeof(TypeInfoPropertyBase).Project().GetTypeInfo().IsPrimitive' "Failed!!  IsPrimitive returned true for a non primitive Type"); " is 143.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsPrimitive,The length of the statement  "            Assert.True(typeof(int).Project().GetTypeInfo().IsPrimitive' "Failed!!    IsPrimitive returned true for a primitive Type"); " is 123.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsPrimitive,The length of the statement  "            Assert.True(typeof(char).Project().GetTypeInfo().IsPrimitive' "Failed!!    IsPrimitive returned true for a primitive Type"); " is 124.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsPublic,The length of the statement  "            Assert.True(typeof(TypeInfoPropertyBase).Project().GetTypeInfo().IsPublic' "Failed!!  IsPublic returned false for a public Type"); " is 130.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsPublic,The length of the statement  "            Assert.True(typeof(TypeInfoPropertyDerived).Project().GetTypeInfo().IsPublic' "Failed!!  IsPublic returned false for a public Type"); " is 133.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsPublic,The length of the statement  "            Assert.True(typeof(PublicClass).Project().GetTypeInfo().IsPublic' "Failed!!  IsPublic returned false for a public Type"); " is 121.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsNotPublic,The length of the statement  "            Assert.False(typeof(TypeInfoPropertyBase).Project().GetTypeInfo().IsNotPublic' "Failed!!  IsNotPublic returned false for a public Type"); " is 137.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsNotPublic,The length of the statement  "            Assert.False(typeof(TypeInfoPropertyDerived).Project().GetTypeInfo().IsNotPublic' "Failed!!  IsNotPublic returned false for a public Type"); " is 140.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsNotPublic,The length of the statement  "            Assert.False(typeof(PublicClass).Project().GetTypeInfo().IsNotPublic' "Failed!! IsNotPublic returned false for a public Type"); " is 127.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsNotPublic,The length of the statement  "            Assert.False(typeof(ITest).Project().GetTypeInfo().IsNotPublic' "Failed!!  IsNotPublic returned false for a public Type"); " is 122.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsNotPublic,The length of the statement  "            Assert.False(typeof(ImplClass).Project().GetTypeInfo().IsNotPublic' "Failed!!  IsNotPublic returned false for a public Type"); " is 126.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsNestedPublic,The length of the statement  "            Assert.True(typeof(PublicClass.publicNestedClass).Project().GetTypeInfo().IsNestedPublic' "Failed!!  IsNestedPublic returned false for a nested public Type"); " is 158.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsNestedPrivate,The length of the statement  "            Assert.False(typeof(PublicClass.publicNestedClass).Project().GetTypeInfo().IsNestedPrivate' "Failed!!  IsNestedPrivate returned true for a nested public Type"); " is 160.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsSealed,The length of the statement  "            Assert.False(typeof(TypeInfoPropertyBase).Project().GetTypeInfo().IsSealed' "Failed!!  IsSealed returned true for a Type that is not sealed"); " is 142.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsSealed,The length of the statement  "            Assert.True(typeof(sealedClass).Project().GetTypeInfo().IsSealed' "Failed!!  IsSealed returned false for a Type that is sealed"); " is 129.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsSerializable,The length of the statement  "            Assert.False(typeof(TypeInfoPropertyBase).Project().GetTypeInfo().IsSerializable' "Failed!!  IsSerializable returned true for a Type that is not serializable"); " is 160.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsValueType,The length of the statement  "            Assert.False(typeof(TypeInfoPropertyBase).Project().GetTypeInfo().IsValueType' "Failed!!  IsValueType returned true for a class Type"); " is 135.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsValueType,The length of the statement  "            Assert.True(typeof(MYENUM).Project().GetTypeInfo().IsValueType' "Failed!!  IsValueType returned false for a Enum Type"); " is 120.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsVisible,The length of the statement  "            Assert.True(typeof(PublicClass.publicNestedClass).Project().GetTypeInfo().IsVisible' "Failed!!  IsVisible returned false"); " is 123.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsImport,The length of the statement  "            Assert.False(typeof(TypeInfoPropertyBase).Project().GetTypeInfo().IsImport' "Failed!!  IsImport returned true for a class Type that is not imported."); " is 151.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsImport,The length of the statement  "            Assert.False(typeof(MYENUM).Project().GetTypeInfo().IsImport' "Failed!!  IsImport returned true for a non-class Type that is not imported."); " is 141.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsNestedAssembly,The length of the statement  "            Assert.False(typeof(PublicClass).Project().GetTypeInfo().IsNestedAssembly' "Failed!!  IsNestedAssembly returned true for a class with public visibility."); " is 155.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsNestedFamily,The length of the statement  "            Assert.False(typeof(PublicClass).Project().GetTypeInfo().IsNestedFamily' "Failed!!  IsNestedFamily returned true for a class with private visibility."); " is 152.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsNestedFamAndAssem,The length of the statement  "            Assert.False(typeof(PublicClass).Project().GetTypeInfo().IsNestedFamANDAssem' "Failed!!  IsNestedFamAndAssem returned true for a class with private visibility."); " is 162.
Long Statement,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsNestedFamOrAssem,The length of the statement  "            Assert.False(typeof(PublicClass).Project().GetTypeInfo().IsNestedFamORAssem' "Failed!!  IsNestedFamOrAssem returned true for a class with private visibility."); " is 160.
Long Statement,System.Reflection.Tests,TypeLoaderTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeLoader\CoreAssembly.cs,CoreAssemblyDelayedWrite,The length of the statement  "                // to look up "System.Object" in the core assembly we assigned to it' which in this case is null and should force an exception. " is 127.
Long Statement,System.Reflection.Tests,TypeLoaderTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeLoader\CoreAssembly.cs,ResolveEventFromReferencedAssembliesUsingFullPublicKeyReference,The length of the statement  "            // Ecma-335 allows an assembly reference to specify a full public key rather than the token. Ensure that those references " is 121.
Long Statement,System.Reflection.Tests,TypeInvariants,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeInvariants.cs,TestInvariantCode,The length of the statement  "            MethodInfo genericMethod = typeof(ClassWithGenericMethods1).GetMethod("GenericMethod1"' BindingFlags.Public | BindingFlags.Instance); " is 133.
Long Statement,System.Reflection.Tests,TypeInvariants,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeInvariants.cs,TestArrayInvariants,The length of the statement  "            BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.DeclaredOnly; " is 137.
Long Statement,System.Reflection.Tests,TypeInvariants,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeInvariants.cs,TestMdArrayInvariants,The length of the statement  "            ConstructorInfo[] cis = type.GetConstructors(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.DeclaredOnly); " is 165.
Long Statement,System.Reflection.Tests,TypeInvariants,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeInvariants.cs,TestByRefInvariants,The length of the statement  "            BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.DeclaredOnly; " is 137.
Long Statement,System.Reflection.Tests,TypeInvariants,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeInvariants.cs,TestPointerInvariants,The length of the statement  "            BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.DeclaredOnly; " is 137.
Long Statement,System.Reflection.Tests,TypeInvariants,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeInvariants.cs,TestGenericParameterInvariants,The length of the statement  "            BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.DeclaredOnly; " is 137.
Long Statement,System.Reflection.Tests,TypeInvariants,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeInvariants.cs,TestTypeCommonInvariants,The length of the statement  "            // Ensure that ToString() doesn't throw and that it returns some non-null value. Exact contents are considered implementation detail. " is 133.
Long Statement,System.Reflection.Tests,TypeInvariants,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeInvariants.cs,TestTypeCommonInvariants,The length of the statement  "            const BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.FlattenHierarchy; " is 147.
Long Statement,System.Reflection.Tests,TypeInvariants,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeInvariants.cs,TestGenericParameterCommonInvariants,The length of the statement  "            BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.DeclaredOnly; " is 137.
Long Statement,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestGenericTypeParameterConstraints_Struct,The length of the statement  "            Assert.Equal(GenericParameterAttributes.NotNullableValueTypeConstraint | GenericParameterAttributes.DefaultConstructorConstraint' theT.GenericParameterAttributes); " is 163.
Long Statement,System.Reflection.Tests,TypeTests_HiddenEvents,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,GetEventHidesEventsBySimpleNameCompare,The length of the statement  "            EventInfo[] es = t.GetEvents(BindingFlags.Public | BindingFlags.Instance | BindingFlags.Static | BindingFlags.FlattenHierarchy); " is 128.
Long Statement,System.Reflection.Tests,TypeTests_HiddenFields,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,GetFieldDoesNotHideHiddenFields,The length of the statement  "            FieldInfo[] fs = t.GetFields(BindingFlags.Public | BindingFlags.Instance | BindingFlags.Static | BindingFlags.FlattenHierarchy); " is 128.
Long Statement,System.Reflection.Tests,TypeTests_HiddenMethods,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,GetMethodDoesNotHideHiddenMethods,The length of the statement  "            MethodInfo[] ms = t.GetMethods(BindingFlags.Public | BindingFlags.Instance | BindingFlags.Static | BindingFlags.FlattenHierarchy); " is 130.
Long Statement,System.Reflection.Tests,TypeTests_HiddenProperties,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,GetPropertyHidesPropertiesByNameAndSigAndCallingConventionCompare,The length of the statement  "            PropertyInfo[] ps = t.GetProperties(BindingFlags.Public | BindingFlags.Instance | BindingFlags.Static | BindingFlags.FlattenHierarchy); " is 135.
Long Statement,System.Reflection.Tests,TypeTests_HiddenProperties,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,GetPropertyHidesPropertiesByNameAndSigAndCallingConventionCompare,The length of the statement  "            string[] expected = { "Item"' nameof(Base.MyInstanceThenStaticProp)' nameof(Base.MyStaticThenInstanceProp)' nameof(Base.MyStringThenDoubleProp) }; " is 146.
Long Statement,System.Reflection.Tests,TypeTests_HiddenTestingOrder,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,HideDetectionHappensAfterPrivateInBaseClassChecks,The length of the statement  "            // Hiding members won't suppress results if the hiding member is filtered out due to being a private member in a base class. " is 124.
Long Statement,System.Reflection.Tests,TypeTests_HiddenTestingOrder,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,HideDetectionHappensAfterPrivateInBaseClassChecks,The length of the statement  "            EventInfo[] events = derived2.GetEvents(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static); " is 132.
Long Statement,System.Reflection.Tests,TypeTests_HiddenTestingOrder,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,HideDetectionHappensAfterPrivateInBaseClassChecks,The length of the statement  "            PropertyInfo[] properties = derived2.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static); " is 143.
Long Statement,System.Reflection.Tests,TypeTests_HiddenTestingOrder,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,HideDetectionHappensBeforeStaticInNonFlattenedHierarchyChecks,The length of the statement  "            // Hiding members suppress results even if the hiding member is filtered out due to being a static member in a base class (and BindingFlags.FlattenHierarchy not being specified.) " is 178.
Long Statement,System.Reflection.Tests,TypeTests_HiddenTestingOrder,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,HideDetectionHappensBeforeStaticInNonFlattenedHierarchyChecks,The length of the statement  "            EventInfo[] events = staticDerived2.GetEvents(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static); " is 138.
Long Statement,System.Reflection.Tests,TypeTests_AmbiguityResolution_NoParameterBinding,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,EventsThrowAlways,The length of the statement  "            BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.IgnoreCase; " is 135.
Long Statement,System.Reflection.Tests,TypeTests_AmbiguityResolution_NoParameterBinding,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,NestedTypesThrowAlways,The length of the statement  "            BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.IgnoreCase; " is 135.
Long Statement,System.Reflection.Tests,TypeTests_AmbiguityResolution_NoParameterBinding,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,PropertiesThrowAlways,The length of the statement  "            BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.IgnoreCase; " is 135.
Long Statement,System.Reflection.Tests,TypeTests_AmbiguityResolution_NoParameterBinding,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,FieldsThrowIfDeclaringTypeIsSame,The length of the statement  "            BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.IgnoreCase; " is 135.
Long Statement,System.Reflection.Tests,TypeTests_AmbiguityResolution_NoParameterBinding,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,MethodsThrowIfDeclaringTypeIsSameAndSigIsDifferent,The length of the statement  "            BindingFlags bf = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.IgnoreCase; " is 135.
Long Statement,System.Reflection.Tests,TypeTests_GetMember,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.GetMember.cs,TestNull,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => t.GetMember(null' MemberTypes.All' BindingFlags.Public | BindingFlags.Instance)); " is 124.
Long Statement,System.Reflection.Tests,TypeTests_GetMember,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.GetMember.cs,TestTypeInfoIsSynonymForNestedInfo,The length of the statement  "            actualMembers = t.GetMember("*"' MemberTypes.NestedType | MemberTypes.TypeInfo' BindingFlags.Public | BindingFlags.Instance); " is 125.
Long Statement,System.Reflection.Tests,TypeTests_GetMember,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.GetMember.cs,TestReturnType,The length of the statement  "            // Desktop compat: Type.GetMember() returns the most specific array type possible given the MemberType combinations passed in. " is 126.
Long Statement,System.Reflection.Tests,TypeTests_GetMember,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.GetMember.cs,TestMemberTypeCombos,The length of the statement  "                MemberInfo[] members = t.GetMember("*"' memberType' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly); " is 125.
Long Statement,System.Reflection.Tests,TypeTests_GetMember,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.GetMember.cs,TestZeroMatch,The length of the statement  "            MemberInfo[] members = t.GetMember("NOSUCHMEMBER"' MemberTypes.All' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly); " is 141.
Long Statement,System.Reflection.Tests,TypeTests_GetMember,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.GetMember.cs,TestCaseSensitive1,The length of the statement  "            MemberInfo[] members = t.GetMember("MyField"' MemberTypes.All' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly); " is 136.
Long Statement,System.Reflection.Tests,TypeTests_GetMember,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.GetMember.cs,TestCaseSensitive2,The length of the statement  "            MemberInfo[] members = t.GetMember("MYFIELD"' MemberTypes.All' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly); " is 136.
Long Statement,System.Reflection.Tests,TypeTests_GetMember,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.GetMember.cs,TestCaseInsensitive1,The length of the statement  "            MemberInfo[] members = t.GetMember("MyField"' MemberTypes.All' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly | BindingFlags.IgnoreCase); " is 162.
Long Statement,System.Reflection.Tests,TypeTests_GetMember,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.GetMember.cs,TestCaseInsensitive2,The length of the statement  "            MemberInfo[] members = t.GetMember("MYfiELD"' MemberTypes.All' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly | BindingFlags.IgnoreCase); " is 162.
Long Statement,System.Reflection.Tests,TypeTests_GetMember,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.GetMember.cs,TestPrefixCaseSensitive1,The length of the statement  "            MemberInfo[] members = t.GetMember("MyFi*"' MemberTypes.All' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly); " is 134.
Long Statement,System.Reflection.Tests,TypeTests_GetMember,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.GetMember.cs,TestPrefixCaseSensitive2,The length of the statement  "            MemberInfo[] members = t.GetMember("MYFI*"' MemberTypes.All' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly); " is 134.
Long Statement,System.Reflection.Tests,TypeTests_GetMember,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.GetMember.cs,TestPrefixCaseInsensitive1,The length of the statement  "            MemberInfo[] members = t.GetMember("MyFi*"' MemberTypes.All' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly | BindingFlags.IgnoreCase); " is 160.
Long Statement,System.Reflection.Tests,TypeTests_GetMember,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.GetMember.cs,TestPrefixCaseInsensitive2,The length of the statement  "            MemberInfo[] members = t.GetMember("MYFI*"' MemberTypes.All' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly | BindingFlags.IgnoreCase); " is 160.
Long Statement,System.Reflection.Tests,TypeTests_StructLayoutAttribute,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.StructLayoutAttribute.cs,Test_Derived,The length of the statement  "            // Though the layout engine honors StructLayout attributes on base classes' Type.StructLayoutAttribute does not. It only looks at the immediate class. " is 150.
Long Statement,System.Reflection.Tests,TypeTests_StructLayoutAttribute,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.StructLayoutAttribute.cs,Test_Generic,The length of the statement  "            // Type.StructLayoutAttribute treats generic instance classes as if they were the generic type definition. (The runtime layout engine' on the other hand " is 152.
Long Statement,System.Reflection.Tests,CustomAttributeInstantiator,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\CustomAttributeInstantiator.cs,Instantiate,The length of the statement  "            foreach (ConstructorInfo ctor in attributeType.GetConstructors(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly)) " is 161.
Long Statement,System.Reflection.Tests,CustomAttributeInstantiator,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\CustomAttributeInstantiator.cs,Instantiate,The length of the statement  "                        FieldInfo fieldInfo = walk.GetField(name' BindingFlags.Public | BindingFlags.Instance | BindingFlags.Static | BindingFlags.DeclaredOnly); " is 137.
Long Statement,System.Reflection.Tests,CustomAttributeInstantiator,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\CustomAttributeInstantiator.cs,Instantiate,The length of the statement  "                        PropertyInfo propertyInfo = walk.GetProperty(name' BindingFlags.Public | BindingFlags.Instance | BindingFlags.Static | BindingFlags.DeclaredOnly); " is 146.
Long Statement,System.Reflection.Tests,NetCoreApiEmulators,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\NetStandardBridge.cs,IsByRefLike,The length of the statement  "                return t.CustomAttributes.Any(cad => cad.AttributeType.FullName == "System.Runtime.CompilerServices.IsByRefLikeAttribute"); " is 123.
Long Statement,System.Reflection.Tests,NetCoreApiEmulators,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\NetStandardBridge.cs,CallUsingReflection,The length of the statement  "            MethodInfo m = implementationType.GetMethod(name' BindingFlags.Public | BindingFlags.Instance | BindingFlags.ExactBinding' null' parameterTypes' null); " is 151.
Long Statement,System.Reflection.Tests,TestUtils,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestUtils.cs,ProjectBackToRuntime,The length of the statement  "            IList<CustomAttributeTypedArgument> runtimeCats = cad.ConstructorArguments.Select(ct => ct.ProjectBackToRuntime()).ToArray(); " is 125.
Long Statement,System.Reflection.Tests,TestUtils,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestUtils.cs,ProjectBackToRuntime,The length of the statement  "                return new CustomAttributeTypedArgument(typeof(Type)' cat.Value == null ? null : ((Type)cat.Value).ProjectBackToRuntime()); " is 123.
Long Statement,System.Reflection.Tests,TestUtils,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestUtils.cs,AssertNewObjectReturnedEachTime,The length of the statement  "            // Don't use xunit's sequence Equality assert here - we want to exercise our object's Equals() methods and not bypass because " is 125.
Long Statement,System.Reflection.Tests,TestUtils,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestUtils.cs,Dump,The length of the statement  "            Console.WriteLine(si + "Constructor.....: " + cad.Constructor.ToString() + " (" + cad.Constructor.DeclaringType.Name + ")"); " is 124.
Long Statement,System.Reflection.Tests,TestUtils,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestUtils.cs,Project,The length of the statement  "                    // The core assembly we're using might not be the one powering the runtime. Make sure we project to the core assembly the typeloader " is 132.
Long Statement,System.Reflection.Tests,TestUtils,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestUtils.cs,Project,The length of the statement  "            Type projectedType = s_typeDict.GetOrAdd(type' (t) => projectedAssembly.GetType(t.FullName' throwOnError: true' ignoreCase: false)); " is 132.
Long Statement,System.Reflection.Tests,TestUtils,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestUtils.cs,CreateStreamForCoreAssembly,The length of the statement  "            // We need a core assembly in IL form. Since this version of this code is for Jitted platforms' the System.Private.Corelib " is 122.
Empty Catch Block,System.IO,TempDirectory,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\FromCoreFx\TempDirectory.cs,DeleteDirectory,The method has an empty catch block.
Empty Catch Block,System.IO,TempFile,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\FromCoreFx\TempFile.cs,DeleteFile,The method has an empty catch block.
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyName_GetName_Version1_2_65534_4,The following statement contains a magic number: Assert.Equal(2' v.Minor);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyName_GetName_Version1_2_65534_4,The following statement contains a magic number: Assert.Equal(65534' v.Build);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyName_GetName_Version1_2_65534_4,The following statement contains a magic number: Assert.Equal(4' v.Revision);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyName_GetName_Version1_2_65535_65535,The following statement contains a magic number: Assert.Equal(2' v.Minor);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyName_GetName_Version1_2_65535_65535,The following statement contains a magic number: Assert.Equal(65535' v.Build);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyName_GetName_Version1_2_65535_65535,The following statement contains a magic number: Assert.Equal(65535' v.Revision);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetReferencedAssemblies,The following statement contains a magic number: Assert.Equal(3' ans.Length);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetReferencedAssemblies,The following statement contains a magic number: Assert.Equal(4' v.Major);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetReferencedAssemblies,The following statement contains a magic number: Assert.Equal(2' v.Minor);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetReferencedAssemblies,The following statement contains a magic number: Assert.Equal(3' v.Build);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetReferencedAssemblies,The following statement contains a magic number: Assert.Equal(4' v.Revision);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetReferencedAssembliesPartialVersions,The following statement contains a magic number: Assert.Equal(6' ans.Length);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetReferencedAssembliesPartialVersions,The following statement contains a magic number: an = ans[2];
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetReferencedAssembliesPartialVersions,The following statement contains a magic number: an = ans[3];
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetReferencedAssembliesPartialVersions,The following statement contains a magic number: Assert.Equal(2' an.Version.Minor);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetReferencedAssembliesPartialVersions,The following statement contains a magic number: an = ans[4];
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetReferencedAssembliesPartialVersions,The following statement contains a magic number: Assert.Equal(2' an.Version.Minor);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetReferencedAssembliesPartialVersions,The following statement contains a magic number: an = ans[5];
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetReferencedAssembliesPartialVersions,The following statement contains a magic number: Assert.Equal(2' an.Version.Minor);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetReferencedAssembliesPartialVersions,The following statement contains a magic number: Assert.Equal(3' an.Version.Build);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetForwardedTypes2,The following statement contains a magic number: Assert.Equal(3' re.Types.Length);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetForwardedTypes2,The following statement contains a magic number: Assert.Equal(3' re.LoaderExceptions.Length);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetForwardedTypes2,The following statement contains a magic number: Assert.Equal(2' re.Types.Count((t) => t == null));
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetForwardedTypes3,The following statement contains a magic number: Assert.Equal(4' re.Types.Length);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetForwardedTypes3,The following statement contains a magic number: Assert.Equal(4' re.LoaderExceptions.Length);
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetForwardedTypes3,The following statement contains a magic number: Assert.Equal(2' re.Types.Count((t) => t == null));
Magic Number,System.Reflection.Tests,AssemblyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Assembly\AssemblyGetNameTests.cs,AssemblyGetForwardedTypes3,The following statement contains a magic number: Assert.Equal(2' re.LoaderExceptions.Count((t) => t == null));
Magic Number,System.Reflection.Tests,ConstructorTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Constructor\ConstructorTests.cs,TestConstructors1Worker,The following statement contains a magic number: Assert.Equal(2' ps.Length);
Magic Number,System.Reflection.Tests,CustomAttributeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\CustomAttributes\CustomAttributeTests.cs,CustomAttributeNamedArguments_Field,The following statement contains a magic number: can.TypedValue.Validate(typeof(int).Project()' 4);
Magic Number,System.Reflection.Tests,CustomAttributeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\CustomAttributes\CustomAttributeTests.cs,CustomAttributeNamedArguments_Property,The following statement contains a magic number: can.TypedValue.Validate(typeof(int).Project()' 8);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethods1Worker,The following statement contains a magic number: Assert.Equal(2' ps.Length);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestGenericMethods1Worker,The following statement contains a magic number: Assert.Equal(2' methodGenericParameters.Length);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestGenericMethods1Worker,The following statement contains a magic number: Type expected = typeof(GenericClass5<''''>).Project().MakeGenericType(                  theN'                  theM.MakeArrayType()'                  typeof(IEnumerable<>).Project().MakeGenericType(theU)'                  theT.MakeArrayType(2)'                  typeof(int).Project());
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestConstructedGenericMethods1Worker,The following statement contains a magic number: Assert.Equal(2' methodGenericParameters.Length);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestConstructedGenericMethods1Worker,The following statement contains a magic number: Type expected = typeof(GenericClass5<''''>).Project().MakeGenericType(                  theN'                  theM.MakeArrayType()'                  typeof(IEnumerable<>).Project().MakeGenericType(theU)'                  theT.MakeArrayType(2)'                  typeof(int).Project());
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(4' mb.MaxStackSize);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(10' lvis.Count);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(2' lvis[2].LocalIndex);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(2' lvis[2].LocalIndex);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.False(lvis[2].IsPinned);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(theT' lvis[2].LocalType);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(3' lvis[3].LocalIndex);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(3' lvis[3].LocalIndex);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.False(lvis[3].IsPinned);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(theT.MakeArrayType()' lvis[3].LocalType);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(4' lvis[4].LocalIndex);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(4' lvis[4].LocalIndex);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.False(lvis[4].IsPinned);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(coreAssembly.GetType("System.Collections.Generic.IList`1"' throwOnError: true).MakeGenericType(theM)' lvis[4].LocalType);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(5' lvis[5].LocalIndex);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(5' lvis[5].LocalIndex);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.False(lvis[5].IsPinned);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(coreAssembly.GetType("System.String"' throwOnError: true)' lvis[5].LocalType);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(6' lvis[6].LocalIndex);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(6' lvis[6].LocalIndex);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.False(lvis[6].IsPinned);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(coreAssembly.GetType("System.Int32"' throwOnError: true).MakeArrayType()' lvis[6].LocalType);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(7' lvis[7].LocalIndex);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(7' lvis[7].LocalIndex);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.True(lvis[7].IsPinned);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(coreAssembly.GetType("System.Int32"' throwOnError: true).MakeByRefType()' lvis[7].LocalType);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(8' lvis[8].LocalIndex);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(8' lvis[8].LocalIndex);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.False(lvis[8].IsPinned);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(coreAssembly.GetType("System.Int32"' throwOnError: true).MakeArrayType()' lvis[8].LocalType);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(9' lvis[9].LocalIndex);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(9' lvis[9].LocalIndex);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.False(lvis[9].IsPinned);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(coreAssembly.GetType("System.Boolean"' throwOnError: true)' lvis[9].LocalType);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(2' ehcs.Count);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(97' ehc.TryOffset);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(41' ehc.TryLength);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(138' ehc.HandlerOffset);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(5' ehc.HandlerLength);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(88' ehc.TryOffset);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(58' ehc.TryLength);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(172' ehc.HandlerOffset);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(16' ehc.HandlerLength);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestMethodBody1,The following statement contains a magic number: Assert.Equal(146' ehc.FilterOffset);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestEHClauses,The following statement contains a magic number: Assert.Equal(15' eh.TryLength);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestEHClauses,The following statement contains a magic number: Assert.Equal(16' eh.HandlerOffset);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestEHClauses,The following statement contains a magic number: Assert.Equal(16' eh.HandlerLength);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestEHClauses,The following statement contains a magic number: Assert.Equal(15' eh.TryLength);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestEHClauses,The following statement contains a magic number: Assert.Equal(16' eh.HandlerOffset);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestEHClauses,The following statement contains a magic number: Assert.Equal(16' eh.HandlerLength);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestEHClauses,The following statement contains a magic number: Assert.Equal(15' eh.TryLength);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestEHClauses,The following statement contains a magic number: Assert.Equal(16' eh.HandlerOffset);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestEHClauses,The following statement contains a magic number: Assert.Equal(14' eh.HandlerLength);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestEHClauses,The following statement contains a magic number: Assert.Equal(15' eh.TryLength);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestEHClauses,The following statement contains a magic number: Assert.Equal(16' eh.HandlerOffset);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestEHClauses,The following statement contains a magic number: Assert.Equal(14' eh.HandlerLength);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestEHClauses,The following statement contains a magic number: Assert.Equal(15' eh.TryLength);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestEHClauses,The following statement contains a magic number: Assert.Equal(40' eh.HandlerOffset);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestEHClauses,The following statement contains a magic number: Assert.Equal(16' eh.HandlerLength);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestEHClauses,The following statement contains a magic number: Assert.Equal(16' eh.FilterOffset);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestCallingConventions,The following statement contains a magic number: Assert.Equal(5' mbs.Length);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestCallingConventions,The following statement contains a magic number: Assert.Equal("InstanceMethod"' mbs[2].Name);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestCallingConventions,The following statement contains a magic number: Assert.Equal(CallingConventions.Standard | CallingConventions.HasThis' mbs[2].CallingConvention);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestCallingConventions,The following statement contains a magic number: Assert.Equal("StaticMethod"' mbs[3].Name);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestCallingConventions,The following statement contains a magic number: Assert.Equal(CallingConventions.Standard' mbs[3].CallingConvention);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestCallingConventions,The following statement contains a magic number: Assert.Equal("VirtualMethod"' mbs[4].Name);
Magic Number,System.Reflection.Tests,MethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Method\MethodTests.cs,TestCallingConventions,The following statement contains a magic number: Assert.Equal(CallingConventions.Standard | CallingConventions.HasThis' mbs[4].CallingConvention);
Magic Number,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,MultiModule_GetModules,The following statement contains a magic number: Assert.Equal(2' ms.Length);
Magic Number,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,ModuleGetTypes,The following statement contains a magic number: Assert.Equal(2' types.Length);
Magic Number,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,ModuleGetTypes,The following statement contains a magic number: Assert.Equal(2' bobTypes.Length);
Magic Number,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,AssertContentsOfMultiModule,The following statement contains a magic number: Assert.Equal(4' types.Length);
Magic Number,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,ResourceOnlyModules,The following statement contains a magic number: Assert.Equal(4' modules2.Length);
Magic Number,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,GetLoadModules1,The following statement contains a magic number: Assert.Equal(2' loadedModules.Length);
Magic Number,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,GetLoadModules1,The following statement contains a magic number: Assert.Equal(2' loadedModules.Length);
Magic Number,System.Reflection.Tests,ModuleTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Module\ModuleProhibitedApiTests.cs,GetLoadModules2,The following statement contains a magic number: Assert.Equal(3' modules.Length);
Magic Number,System.Reflection.Tests,ParameterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Parameter\ParameterTests.cs,TestRawDefaultValue3,The following statement contains a magic number: Assert.Equal(42' (int)dv);
Magic Number,System.Reflection.Tests,ParameterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Parameter\ParameterTests.cs,TestRawDefaultValue4,The following statement contains a magic number: Assert.Equal(-34' (short)dv);
Magic Number,System.Reflection.Tests,ParameterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Parameter\ParameterTests.cs,TestRawDefaultValue5,The following statement contains a magic number: Assert.Equal(1234m' (decimal)dv);
Magic Number,System.Reflection.Tests,ParameterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Parameter\ParameterTests.cs,TestRawDefaultValue6,The following statement contains a magic number: Assert.Equal(8736726782' ((DateTime)dv).Ticks);
Magic Number,System.Reflection.Tests,ParameterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Parameter\ParameterTests.cs,TestPseudoCustomAttributes,The following statement contains a magic number: ParameterInfo p = pis[2];
Magic Number,System.Reflection.Tests,ParameterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Parameter\ParameterTests.cs,TestPseudoCustomAttributes,The following statement contains a magic number: ParameterInfo p = pis[3];
Magic Number,System.Reflection.Tests,PropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Property\PropertyTests.cs,TestProperties_GetterSetter,The following statement contains a magic number: Assert.Equal(2' pis.Length);
Magic Number,System.Reflection.Tests,TypeInfoDeclaredCtorTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_DeclaredCtorTests.cs,TestTypeInfoBaseClassCtor,The following statement contains a magic number: VerifyConstructors(typeof(TypeInfoBaseClass).Project()' 2);
Magic Number,System.Reflection.Tests,TypeInfoDeclaredCtorTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_DeclaredCtorTests.cs,TestDerivedClassCtor,The following statement contains a magic number: VerifyConstructors(typeof(TypeInfoSubClass).Project()' 2);
Magic Number,System.Reflection.Tests,TypeInfoDeclaredCtorTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_DeclaredCtorTests.cs,TestClassWithMultipleCtor,The following statement contains a magic number: VerifyConstructors(typeof(ClassWithMultipleConstructors).Project()' 4);
Magic Number,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,VerifyElementedTypeIsAssignableFrom,The following statement contains a magic number: VerifyIsAssignableFrom(TestName' leftElementType.MakeArrayType(2).GetTypeInfo()' rightElementType.MakeArrayType(2).GetTypeInfo()' expected);
Magic Number,System.Reflection.Tests,TypeInfoIsAssignableFromTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_IsAssignableFromTests.cs,VerifyElementedTypeIsAssignableFrom,The following statement contains a magic number: VerifyIsAssignableFrom(TestName' leftElementType.MakeArrayType(2).GetTypeInfo()' rightElementType.MakeArrayType(2).GetTypeInfo()' expected);
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestGetArrayRank1,The following statement contains a magic number: int[] myArray = { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestGetArrayRank1,The following statement contains a magic number: int[] myArray = { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestGetArrayRank1,The following statement contains a magic number: int[] myArray = { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestGetArrayRank1,The following statement contains a magic number: int[] myArray = { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestGetArrayRank1,The following statement contains a magic number: int[] myArray = { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestGetArrayRank1,The following statement contains a magic number: int[] myArray = { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestGetDeclaredMethods1,The following statement contains a magic number: VerifyGetDeclaredMethods(typeInfo' "overRiddenMethod"' 4);
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestGetElementType3,The following statement contains a magic number: int[] myArray = { 1' 2' 3' 4 };
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestGetElementType3,The following statement contains a magic number: int[] myArray = { 1' 2' 3' 4 };
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestGetElementType3,The following statement contains a magic number: int[] myArray = { 1' 2' 3' 4 };
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestGetGenericParameterConstraints1,The following statement contains a magic number: Assert.Equal(2' defparams.Length);
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestGetGenericParameterConstraints1,The following statement contains a magic number: Assert.Equal(2' tpConstraints.Length);
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestGetGenericParameterConstraints2,The following statement contains a magic number: Assert.Equal(2' defparams.Length);
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestMakeArrayType2,The following statement contains a magic number: int[] intArray = { 1' 2' 3 };
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestMakeArrayType2,The following statement contains a magic number: int[] intArray = { 1' 2' 3 };
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestMakeArrayTypeWithRank2,The following statement contains a magic number: Type arraytype = ti.MakeArrayType(2);
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestMakeArrayOfPointerType1,The following statement contains a magic number: Type arraytype = ti.MakeArrayType(3);
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestMakeArrayOfPointerType1,The following statement contains a magic number: Assert.Equal(arraytype.GetArrayRank()' 3);
Magic Number,System.Reflection.Tests,TypeInfoMethodTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_MethodTests.cs,TestMakeArrayTypeWithRank3,The following statement contains a magic number: Type arraytype = ti.MakeArrayType(3);
Magic Number,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestHasElementType,The following statement contains a magic number: int[] nums = { 1' 1' 2' 3 };
Magic Number,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestHasElementType,The following statement contains a magic number: int[] nums = { 1' 1' 2' 3 };
Magic Number,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsArray,The following statement contains a magic number: int[] myarray = { 1' 2' 3 };
Magic Number,System.Reflection.Tests,TypeInfoPropertyTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeInfoFromProjectN\TypeInfo_PropertyTests.cs,TestIsArray,The following statement contains a magic number: int[] myarray = { 1' 2' 3 };
Magic Number,System.Reflection.Tests,TypeLoaderTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeLoader\CoreAssembly.cs,GetAssemblies,The following statement contains a magic number: Assert.Equal(2' loadedAssemblies.Length);
Magic Number,System.Reflection.Tests,TypeLoaderTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\TypeLoader\CoreAssembly.cs,BadImageFormat,The following statement contains a magic number: i < 100
Magic Number,System.Reflection.Tests,TypeInvariants,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeInvariants.cs,TestInvariantCode,The following statement contains a magic number: Type openMdArrayRank2 = theN.MakeArrayType(2);
Magic Number,System.Reflection.Tests,TypeInvariants,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeInvariants.cs,TestMdArrayInvariants,The following statement contains a magic number: Assert.Equal(cis.Length' 2);
Magic Number,System.Reflection.Tests,TypeInvariants,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeInvariants.cs,TestMdArrayInvariants,The following statement contains a magic number: ConstructorInfo c2 = cis.Single(c => c.GetParameters().Length == rank * 2);
Magic Number,System.Reflection.Tests,TypeInvariants,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeInvariants.cs,TestTypeCommonInvariants,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => type.MakeGenericType(new Type[3]));
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestGenericTypeParameterConstraints_Type,The following statement contains a magic number: Assert.Equal(3' constraints.Length);
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestGenericTypeParameterConstraints_Type,The following statement contains a magic number: Assert.Equal(typeof(IConstrained2<>).Project().MakeGenericType(theT)' constraints[2]);
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestGenericTypeParameterConstraints_Interface,The following statement contains a magic number: Assert.Equal(2' constraints.Length);
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestArraySetMethod,The following statement contains a magic number: Assert.Equal(p.Length' 2);
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestMethodSelection1,The following statement contains a magic number: Assert.Equal(10010' m.GetMark());
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestMethodSelection1,The following statement contains a magic number: Assert.Equal(10010' m.GetMark());
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestMethodSelection1,The following statement contains a magic number: Assert.Equal(10020' m.GetMark());
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestMethodSelection1,The following statement contains a magic number: Assert.Equal(20' m.GetMark());
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestMethodSelection1,The following statement contains a magic number: Assert.Equal(30' m.GetMark());
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestMethodSelection1,The following statement contains a magic number: Assert.Equal(12' m.GetMark());
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestMethodSelection1,The following statement contains a magic number: Assert.Equal(11' m.GetMark());
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestExplicitOffsetPseudoCustomAttribute,The following statement contains a magic number: Assert.Equal(42' foa.Value);
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestExplicitOffsetPseudoCustomAttribute,The following statement contains a magic number: Assert.Equal(65' foa.Value);
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,CoreGetTypeCacheCoverage1,The following statement contains a magic number: i < 1000
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,CoreGetTypeCacheCoverage2,The following statement contains a magic number: i < 16
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestMakeGenericTypeParameter,The following statement contains a magic number: Assert.Equal(3' gps.Length);
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestMakeGenericTypeParameter,The following statement contains a magic number: Assert.Equal("V"' gps[2].Name);
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestMakeGenericTypeNegativeInput,The following statement contains a magic number: typeArguments = new Type[2];
Magic Number,System.Reflection.Tests,TypeTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.BaseType.cs,TestMakeGenericTypeNegativeInput,The following statement contains a magic number: typeArguments = new Type[4];
Magic Number,System.Reflection.Tests,TypeTests_PrefixingOnlyAllowedOnGetMember,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,TestGetMemberAll,The following statement contains a magic number: Assert.Equal(5' members.Length);
Magic Number,System.Reflection.Tests,TypeTests_HiddenEvents,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,GetEventHidesEventsBySimpleNameCompare,The following statement contains a magic number: Assert.Equal(4' es.Length);
Magic Number,System.Reflection.Tests,TypeTests_HiddenFields,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,GetFieldDoesNotHideHiddenFields,The following statement contains a magic number: Assert.Equal(4' fs.Length);
Magic Number,System.Reflection.Tests,TypeTests_HiddenFields,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,GetFieldDoesNotHideHiddenFields,The following statement contains a magic number: Assert.Equal(2' count);
Magic Number,System.Reflection.Tests,TypeTests_HiddenMethods,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.Get.CornerCases.cs,GetMethodDoesNotHideHiddenMethods,The following statement contains a magic number: Assert.Equal(2' count);
Magic Number,System.Reflection.Tests,TypeTests_GetMember,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.GetMember.cs,TestMemberTypeCombos,The following statement contains a magic number: int expectedMethods = ((memberType & MemberTypes.Method) == 0) ? 0 : 4;
Magic Number,System.Reflection.Tests,TypeTests_StructLayoutAttribute,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.StructLayoutAttribute.cs,Test_UndecoratedClass,The following statement contains a magic number: Assert.Equal(8' s.Pack);
Magic Number,System.Reflection.Tests,TypeTests_StructLayoutAttribute,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.StructLayoutAttribute.cs,Test_AutoAnsiEightZero,The following statement contains a magic number: Assert.Equal(8' s.Pack);
Magic Number,System.Reflection.Tests,TypeTests_StructLayoutAttribute,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.StructLayoutAttribute.cs,Test_SequentialAnsiEightZero,The following statement contains a magic number: Assert.Equal(8' s.Pack);
Magic Number,System.Reflection.Tests,TypeTests_StructLayoutAttribute,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.StructLayoutAttribute.cs,Test_ExplicitAnsiEightZero,The following statement contains a magic number: Assert.Equal(8' s.Pack);
Magic Number,System.Reflection.Tests,TypeTests_StructLayoutAttribute,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.StructLayoutAttribute.cs,Test_SequentialUnicodeEightZero,The following statement contains a magic number: Assert.Equal(8' s.Pack);
Magic Number,System.Reflection.Tests,TypeTests_StructLayoutAttribute,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.StructLayoutAttribute.cs,TestSequentialAutoZeroZero,The following statement contains a magic number: Assert.Equal(8' s.Pack);
Magic Number,System.Reflection.Tests,TypeTests_StructLayoutAttribute,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.StructLayoutAttribute.cs,Test_SequentialAutoTwoZero,The following statement contains a magic number: Assert.Equal(2' s.Pack);
Magic Number,System.Reflection.Tests,TypeTests_StructLayoutAttribute,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.StructLayoutAttribute.cs,Test_SequentialAutoFourZero,The following statement contains a magic number: Assert.Equal(4' s.Pack);
Magic Number,System.Reflection.Tests,TypeTests_StructLayoutAttribute,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.StructLayoutAttribute.cs,Test_SequentialAutoEightZero,The following statement contains a magic number: Assert.Equal(8' s.Pack);
Magic Number,System.Reflection.Tests,TypeTests_StructLayoutAttribute,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.StructLayoutAttribute.cs,Test_SequentialAutoSixteeentZero,The following statement contains a magic number: Assert.Equal(16' s.Pack);
Magic Number,System.Reflection.Tests,TypeTests_StructLayoutAttribute,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.StructLayoutAttribute.cs,Test_ExplicitAutoEightFortyTwo,The following statement contains a magic number: Assert.Equal(8' s.Pack);
Magic Number,System.Reflection.Tests,TypeTests_StructLayoutAttribute,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.StructLayoutAttribute.cs,Test_ExplicitAutoEightFortyTwo,The following statement contains a magic number: Assert.Equal(42' s.Size);
Magic Number,System.Reflection.Tests,TypeTests_StructLayoutAttribute,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.StructLayoutAttribute.cs,Test_Derived,The following statement contains a magic number: Assert.Equal(8' s.Pack);
Magic Number,System.Reflection.Tests,TypeTests_StructLayoutAttribute,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.StructLayoutAttribute.cs,Test_Generic,The following statement contains a magic number: Assert.Equal(4' s.Pack);
Magic Number,System.Reflection.Tests,TypeTests_StructLayoutAttribute,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\Tests\Type\TypeTests.StructLayoutAttribute.cs,Test_Generic,The following statement contains a magic number: Assert.Equal(40' s.Size);
Magic Number,System.Reflection.Tests,TestUtils,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestUtils.cs,HexToByteArray,The following statement contains a magic number: byte[] bytes = new byte[hexString.Length / 2];
Magic Number,System.Reflection.Tests,TestUtils,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestUtils.cs,HexToByteArray,The following statement contains a magic number: string s = hexString.Substring(i' 2);
Magic Number,System.Reflection.Tests,TestUtils,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestUtils.cs,HexToByteArray,The following statement contains a magic number: bytes[i / 2] = byte.Parse(s' NumberStyles.HexNumber' null);
Magic Number,System.Reflection.Tests,TestUtils,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestUtils.cs,ByteArrayToHex,The following statement contains a magic number: StringBuilder builder = new StringBuilder(bytes.Length * 2);
Magic Number,System.Reflection.Tests,TestUtils,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestUtils.cs,Dump,The following statement contains a magic number: cta.Dump(indent + 4);
Magic Number,System.Reflection.Tests,TestUtils,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Reflection.TypeLoader.Tests\src\TestUtils\TestUtils.cs,Dump,The following statement contains a magic number: cna.TypedValue.Dump(indent + 4);
