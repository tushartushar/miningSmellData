Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,System.Buffers.Tests,BufferEqualityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferEqualityTests.cs,SequentialEqualityOfBuffersOfFloatingPointTypesDoesNotUseBitwiseComparison,The method has 5 parameters. Parameters: negativeInfinity' positiveInfinity' negativeZero' positiveZero' NaN
Long Identifier,System.Buffers.Tests,BufferEqualityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferEqualityTests.cs,EmptyBuffersAreSequentiallyAndStructurallyEqual,The length of the parameter bufferFromNonEmptyArrayButWithZeroLength is 40.
Long Identifier,System.Buffers.Tests,BufferEqualityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferEqualityTests.cs,SequentialEqualityOfBuffersOfFloatingPointTypesDoesNotUseBitwiseComparison,The length of the parameter elementsCountThatNormallyWouldInvolveMemCmp is 43.
Long Statement,System.Buffers.Tests,BufferEqualityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferEqualityTests.cs,SequentialEqualityOfBuffersOfFloatingPointTypesDoesNotUseBitwiseComparison,The length of the statement  "            var negativeInfinities = new Memory<T>(Enumerable.Repeat(negativeInfinity' elementsCountThatNormallyWouldInvolveMemCmp).ToArray()); " is 131.
Long Statement,System.Buffers.Tests,BufferEqualityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferEqualityTests.cs,SequentialEqualityOfBuffersOfFloatingPointTypesDoesNotUseBitwiseComparison,The length of the statement  "            var positiveInfinities = new Memory<T>(Enumerable.Repeat(positiveInfinity' elementsCountThatNormallyWouldInvolveMemCmp).ToArray()); " is 131.
Long Statement,System.Buffers.Tests,BufferEqualityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferEqualityTests.cs,SequentialEqualityOfBuffersOfFloatingPointTypesDoesNotUseBitwiseComparison,The length of the statement  "            var negativeZeroes = new Memory<T>(Enumerable.Repeat(negativeZero' elementsCountThatNormallyWouldInvolveMemCmp).ToArray()); " is 123.
Long Statement,System.Buffers.Tests,BufferEqualityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferEqualityTests.cs,SequentialEqualityOfBuffersOfFloatingPointTypesDoesNotUseBitwiseComparison,The length of the statement  "            var positiveZeroes = new Memory<T>(Enumerable.Repeat(positiveZero' elementsCountThatNormallyWouldInvolveMemCmp).ToArray()); " is 123.
Long Statement,System.Buffers.Tests,StringSliceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\StringSliceTests.cs,AssertThrows,The length of the statement  "                Assert.False(true' "Wrong exception thrown: Expected " + typeof(E).GetType() + ": Actual: " + wrongException.GetType()); " is 120.
Empty Catch Block,System.Buffers.Tests,StringSliceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\StringSliceTests.cs,AssertThrows,The method has an empty catch block.
Magic Number,System.Buffers.Tests,BufferEqualityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferEqualityTests.cs,EmptyBuffersAreSequentiallyAndStructurallyEqual,The following statement contains a magic number: var bufferFromNonEmptyArrayButWithZeroLength = new Memory<int>(new int[1] { 123 }).Slice(0' 0);
Magic Number,System.Buffers.Tests,BufferEqualityTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferEqualityTests.cs,SequentialEqualityOfBuffersOfFloatingPointTypesDoesNotUseBitwiseComparison,The following statement contains a magic number: const int elementsCountThatNormallyWouldInvolveMemCmp = 1000;
Magic Number,System.Buffers.Tests,BufferExtensionTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferExtensionsTests.cs,ToSpanOnReadableBufferSingleSpan,The following statement contains a magic number: byte[] data = { 0' 1' 2' 3' 4' 5' 6' 7 };
Magic Number,System.Buffers.Tests,BufferExtensionTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferExtensionsTests.cs,ToSpanOnReadableBufferSingleSpan,The following statement contains a magic number: byte[] data = { 0' 1' 2' 3' 4' 5' 6' 7 };
Magic Number,System.Buffers.Tests,BufferExtensionTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferExtensionsTests.cs,ToSpanOnReadableBufferSingleSpan,The following statement contains a magic number: byte[] data = { 0' 1' 2' 3' 4' 5' 6' 7 };
Magic Number,System.Buffers.Tests,BufferExtensionTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferExtensionsTests.cs,ToSpanOnReadableBufferSingleSpan,The following statement contains a magic number: byte[] data = { 0' 1' 2' 3' 4' 5' 6' 7 };
Magic Number,System.Buffers.Tests,BufferExtensionTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferExtensionsTests.cs,ToSpanOnReadableBufferSingleSpan,The following statement contains a magic number: byte[] data = { 0' 1' 2' 3' 4' 5' 6' 7 };
Magic Number,System.Buffers.Tests,BufferExtensionTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferExtensionsTests.cs,ToSpanOnReadableBufferSingleSpan,The following statement contains a magic number: byte[] data = { 0' 1' 2' 3' 4' 5' 6' 7 };
Magic Number,System.Buffers.Tests,BufferExtensionTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferExtensionsTests.cs,ToSpanOnReadableBufferMultiSpan,The following statement contains a magic number: byte[] data1 = { 0' 1' 2 };
Magic Number,System.Buffers.Tests,BufferExtensionTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferExtensionsTests.cs,ToSpanOnReadableBufferMultiSpan,The following statement contains a magic number: byte[] data2 = { 3' 4' 5 };
Magic Number,System.Buffers.Tests,BufferExtensionTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferExtensionsTests.cs,ToSpanOnReadableBufferMultiSpan,The following statement contains a magic number: byte[] data2 = { 3' 4' 5 };
Magic Number,System.Buffers.Tests,BufferExtensionTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferExtensionsTests.cs,ToSpanOnReadableBufferMultiSpan,The following statement contains a magic number: byte[] data2 = { 3' 4' 5 };
Magic Number,System.Buffers.Tests,BufferExtensionTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferExtensionsTests.cs,ToSpanOnReadableBufferMultiSpan,The following statement contains a magic number: byte[] data3 = { 6' 7' 8 };
Magic Number,System.Buffers.Tests,BufferExtensionTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferExtensionsTests.cs,ToSpanOnReadableBufferMultiSpan,The following statement contains a magic number: byte[] data3 = { 6' 7' 8 };
Magic Number,System.Buffers.Tests,BufferExtensionTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferExtensionsTests.cs,ToSpanOnReadableBufferMultiSpan,The following statement contains a magic number: byte[] data3 = { 6' 7' 8 };
Magic Number,System.Buffers.Tests,NativeBufferPoolTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferPoolTest.cs,BasicsWork,The following statement contains a magic number: var buffer = pool.Rent(10);
Magic Number,System.Buffers.Tests,NativeBufferPoolTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferPoolTest.cs,BasicsWork,The following statement contains a magic number: buffer = pool.Rent(10);
Magic Number,System.Buffers.Tests,BufferReferenceUnitTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferReferenceTests.cs,AutoDisposeBufferReferenceTests,The following statement contains a magic number: BufferReferenceTests.TestAutoOwnedBuffer(() => {                  return new AutoDisposeBuffer<byte>(new byte[1024]);              });
Magic Number,System.Buffers.Tests,BufferReferenceUnitTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferReferenceTests.cs,AutoPooledBufferReferenceTests,The following statement contains a magic number: BufferReferenceTests.TestAutoOwnedBuffer(() => {                  return new AutoPooledBuffer(1024);              });
Magic Number,System.Buffers.Tests,BufferReferenceUnitTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\BufferReferenceTests.cs,CustomBufferReferenceTests,The following statement contains a magic number: BufferReferenceTests.TestMemoryManager(() => {                  return new CustomBuffer<byte>(512);              });
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: span[10] = 10;
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: span[10] = 10;
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: Assert.Equal(10' owned.Pointer[10]);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: Assert.Equal(10' owned.Pointer[10]);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: Assert.Equal(10' array[10]);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: Assert.Equal(10' array[10]);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: Span<byte> copy = new byte[20];
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: memory.Span.Slice(10' 20).CopyTo(copy);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: memory.Span.Slice(10' 20).CopyTo(copy);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: Assert.Equal(10' copy[0]);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: span[10] = 10;
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: span[10] = 10;
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: Assert.Equal(10' owned.Array[10]);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: Assert.Equal(10' owned.Array[10]);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: Assert.Equal(10' owned.Pointer[10]);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: Assert.Equal(10' owned.Pointer[10]);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: Assert.Equal(10' array[10]);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: Assert.Equal(10' array[10]);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: Span<byte> copy = new byte[20];
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: memory.Span.Slice(10' 20).CopyTo(copy);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: memory.Span.Slice(10' 20).CopyTo(copy);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,SimpleTests,The following statement contains a magic number: Assert.Equal(10' copy[0]);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,NativeMemoryLifetime,The following statement contains a magic number: var owner = new OwnedNativeBuffer(1024);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,PinnedArrayMemoryLifetime,The following statement contains a magic number: var bytes = new byte[1024];
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,TestLifetime,The following statement contains a magic number: Memory<byte> memorySlice = memory.Slice(10);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,AutoDispose,The following statement contains a magic number: MemoryManager<byte> owned = new AutoPooledBuffer(1000);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,OnNoReferencesTest,The following statement contains a magic number: var owned = new CustomBuffer<byte>(255);
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,RacyAccess,The following statement contains a magic number: var owners = new IMemoryOwner<byte>[128];
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,RacyAccess,The following statement contains a magic number: var array = new byte[1024];
Magic Number,System.Buffers.Tests,MemoryTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\MemoryTests.cs,RacyAccess,The following statement contains a magic number: k < 1000
Magic Number,System.Buffers.Tests,ReferenceCounterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\ReferenceCounterTests.cs,BasicMultiThreadedCounts,The following statement contains a magic number: var t1 = Task.Run(() => {                  for (int i = 0; i < 100000; i++)                  {                      ReferenceCounter.AddReference(obj);                      ReferenceCounter.AddReference(obj);                      ReferenceCounter.Release(obj);                      ReferenceCounter.Release(obj);                  }              });
Magic Number,System.Buffers.Tests,ReferenceCounterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\ReferenceCounterTests.cs,BasicMultiThreadedCounts,The following statement contains a magic number: var t2 = Task.Run(() => {                  for (int i = 0; i < 100000; i++)                  {                      ReferenceCounter.AddReference(obj);                      ReferenceCounter.AddReference(obj);                      ReferenceCounter.Release(obj);                      ReferenceCounter.Release(obj);                  }              });
Magic Number,System.Buffers.Tests,ReferenceCounterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\ReferenceCounterTests.cs,ResizingThreadTableWorks,The following statement contains a magic number: var thread = new Thread(new ThreadStart(() =>                  {                      for (int itteration = 0; itteration < 100; itteration++)                      {                          ReferenceCounter.AddReference(obj);                          Thread.Sleep(10);                          ReferenceCounter.Release(obj);                      }                      handle.Set();                  }));
Magic Number,System.Buffers.Tests,ReferenceCounterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\ReferenceCounterTests.cs,ResizingThreadTableWorks,The following statement contains a magic number: var thread = new Thread(new ThreadStart(() =>                  {                      for (int itteration = 0; itteration < 100; itteration++)                      {                          ReferenceCounter.AddReference(obj);                          Thread.Sleep(10);                          ReferenceCounter.Release(obj);                      }                      handle.Set();                  }));
Magic Number,System.Buffers.Tests,ReferenceCounterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\ReferenceCounterTests.cs,ResizingThreadTableWorks,The following statement contains a magic number: threadNumber < defaultThreadTableSize * 2
Magic Number,System.Buffers.Tests,ReferenceCounterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\ReferenceCounterTests.cs,ResizingObjectTableWorks,The following statement contains a magic number: var defaultObjectTableSize = 16;
Magic Number,System.Buffers.Tests,ReferenceCounterTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\ReferenceCounterTests.cs,ResizingObjectTableWorks,The following statement contains a magic number: objectNumber < defaultObjectTableSize * 2
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,SequenceIndexOfSingleSegment,The following statement contains a magic number: var array = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,SequenceIndexOfSingleSegment,The following statement contains a magic number: var array = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,SequenceIndexOfSingleSegment,The following statement contains a magic number: var array = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,SequenceIndexOfSingleSegment,The following statement contains a magic number: var array = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,SequenceIndexOfMultiSegment,The following statement contains a magic number: ReadOnlySequence<byte> bytes = BufferFactory.Create(                  new byte[] { 1' 2 }'                  new byte[] { 3' 4 }              );
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,SequenceIndexOfMultiSegment,The following statement contains a magic number: ReadOnlySequence<byte> bytes = BufferFactory.Create(                  new byte[] { 1' 2 }'                  new byte[] { 3' 4 }              );
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,SequenceIndexOfMultiSegment,The following statement contains a magic number: ReadOnlySequence<byte> bytes = BufferFactory.Create(                  new byte[] { 1' 2 }'                  new byte[] { 3' 4 }              );
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,SequenceIndexOfMultiSegment,The following statement contains a magic number: Assert.Equal(4' bytes.Length);
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,SequenceIndexOfMultiSegmentSliced,The following statement contains a magic number: ReadOnlySequence<byte> bytes = BufferFactory.Create(                  new byte[] { 1' 2 }'                  new byte[] { 3' 4 }              );
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,SequenceIndexOfMultiSegmentSliced,The following statement contains a magic number: ReadOnlySequence<byte> bytes = BufferFactory.Create(                  new byte[] { 1' 2 }'                  new byte[] { 3' 4 }              );
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,SequenceIndexOfMultiSegmentSliced,The following statement contains a magic number: ReadOnlySequence<byte> bytes = BufferFactory.Create(                  new byte[] { 1' 2 }'                  new byte[] { 3' 4 }              );
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,SequenceIndexOfMultiSegmentSliced,The following statement contains a magic number: Assert.Equal(3' bytes.Length);
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,SequenceIndexOfMultiSegmentSliced,The following statement contains a magic number: Assert.Equal(i' Sequence.IndexOf(bytes' (byte)(i + 2)));
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,SequencePositionOfMultiSegment,The following statement contains a magic number: var (first' last) = BufferList.Create(                  new byte[] { 1' 2 }'                  new byte[] { 3' 4 }              );
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,SequencePositionOfMultiSegment,The following statement contains a magic number: var (first' last) = BufferList.Create(                  new byte[] { 1' 2 }'                  new byte[] { 3' 4 }              );
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,SequencePositionOfMultiSegment,The following statement contains a magic number: var (first' last) = BufferList.Create(                  new byte[] { 1' 2 }'                  new byte[] { 3' 4 }              );
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,SequencePositionOfMultiSegment,The following statement contains a magic number: Assert.Equal(4' bytes.Length);
Magic Number,System.Buffers.Tests,SequenceExtensionsTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\SequenceExtensionsTests.cs,TryParseInt32Multisegment,The following statement contains a magic number: byte[] array = new byte[32];
Magic Number,System.Buffers.Tests,StringSliceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\StringSliceTests.cs,StringSliceInt,The following statement contains a magic number: ReadOnlySpan<char> span = s.AsSpan(2);
Magic Number,System.Buffers.Tests,StringSliceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\StringSliceTests.cs,StringSliceInt,The following statement contains a magic number: char[] expected = s.Substring(2).ToCharArray();
Magic Number,System.Buffers.Tests,StringSliceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\StringSliceTests.cs,StringSliceIntInt,The following statement contains a magic number: ReadOnlySpan<char> span = s.AsSpan(2' 4);
Magic Number,System.Buffers.Tests,StringSliceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\StringSliceTests.cs,StringSliceIntInt,The following statement contains a magic number: ReadOnlySpan<char> span = s.AsSpan(2' 4);
Magic Number,System.Buffers.Tests,StringSliceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\StringSliceTests.cs,StringSliceIntInt,The following statement contains a magic number: char[] expected = s.Substring(2' 4).ToCharArray();
Magic Number,System.Buffers.Tests,StringSliceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\StringSliceTests.cs,StringSliceIntInt,The following statement contains a magic number: char[] expected = s.Substring(2' 4).ToCharArray();
Magic Number,System.Buffers.Tests,StringSliceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\StringSliceTests.cs,StringSliceIntIntUpToEnd,The following statement contains a magic number: ReadOnlySpan<char> span = s.AsSpan(2' s.Length - 2);
Magic Number,System.Buffers.Tests,StringSliceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\StringSliceTests.cs,StringSliceIntIntUpToEnd,The following statement contains a magic number: ReadOnlySpan<char> span = s.AsSpan(2' s.Length - 2);
Magic Number,System.Buffers.Tests,StringSliceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\StringSliceTests.cs,StringSliceIntIntUpToEnd,The following statement contains a magic number: char[] expected = s.Substring(2).ToCharArray();
Magic Number,System.Buffers.Tests,StringSliceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\StringSliceTests.cs,StringSliceIntRangeChecked,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => s.AsSpan(2' s.Length + 1 - 2).DontBox());
Magic Number,System.Buffers.Tests,StringSliceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Experimental.Tests\StringSliceTests.cs,StringSliceIntRangeChecked,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => s.AsSpan(2' s.Length + 1 - 2).DontBox());
