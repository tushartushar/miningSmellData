Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MemoryUsage,MemoryUsageAnalyzer,D:\research\architectureSmells\repos\dotnet_corefxlab\samples\SpanUsage\MemoryUsage\MemoryUsage\MemoryUsageAnalyzer.cs,AnalyzeNodeInvokation,Cyclomatic complexity of the method is 8
Long Statement,MemoryUsage,MemoryUsageAnalyzer,D:\research\architectureSmells\repos\dotnet_corefxlab\samples\SpanUsage\MemoryUsage\MemoryUsage\MemoryUsageAnalyzer.cs,AnalyzeNodeInvokation,The length of the statement  "            if (identifier.Value.ValueText != "Slice" || (typeContainingMethod != "System.Memory<T>" && typeContainingMethod != "System.ReadOnlyMemory<T>")) " is 144.
Long Statement,MemoryUsage,MemoryUsageAnalyzer,D:\research\architectureSmells\repos\dotnet_corefxlab\samples\SpanUsage\MemoryUsage\MemoryUsage\MemoryUsageAnalyzer.cs,AnalyzeNodeInvokation,The length of the statement  "            if (secondIdentifier.Value.ValueText == "Span" && (typeContainingMemberAccess == "System.Memory<T>" || typeContainingMemberAccess == "System.ReadOnlyMemory<T>")) " is 161.
Long Statement,MemoryUsage,MemoryUsageCodeFixProvider,D:\research\architectureSmells\repos\dotnet_corefxlab\samples\SpanUsage\MemoryUsage\MemoryUsage\MemoryUsageCodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "            InvocationExpressionSyntax[] declarationList = root.FindToken(diagnosticSpan.Start).Parent.AncestorsAndSelf().OfType<InvocationExpressionSyntax>().ToArray(); " is 157.
Long Statement,MemoryUsage,MemoryUsageCodeFixProvider,D:\research\architectureSmells\repos\dotnet_corefxlab\samples\SpanUsage\MemoryUsage\MemoryUsage\MemoryUsageCodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "                if (index != -1 && (index < propertyStr.Length || !str.Substring(index - propertyStr.Length).StartsWith(skipAlreadyFixed))) " is 123.
Long Statement,MemoryUsage,MemoryUsageCodeFixProvider,D:\research\architectureSmells\repos\dotnet_corefxlab\samples\SpanUsage\MemoryUsage\MemoryUsage\MemoryUsageCodeFixProvider.cs,SwapMethodCalls,The length of the statement  "            InvocationExpressionSyntax replacement = typeDecl.ReplaceNode(target' formattedLocal).WithAdditionalAnnotations(Formatter.Annotation); " is 134.
Magic Number,MemoryUsage,MemoryUsageAnalyzer,D:\research\architectureSmells\repos\dotnet_corefxlab\samples\SpanUsage\MemoryUsage\MemoryUsage\MemoryUsageAnalyzer.cs,AnalyzeNodeInvokation,The following statement contains a magic number: invocation.ArgumentList.Arguments.Count != 1 && invocation.ArgumentList.Arguments.Count != 2
