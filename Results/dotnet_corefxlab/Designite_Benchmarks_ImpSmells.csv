Implementation smell,Namespace,Class,File,Method,Description
Complex Method,System.Azure.Experimental.Benchmarks,CosmosDb,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Azure.Experimental\CosmosDb.cs,TryWritePrimitives,Cyclomatic complexity of the method is 15
Complex Method,System.Azure.Experimental.Benchmarks,Storage,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Azure.Experimental\Storage.cs,TryWritePrimitive,Cyclomatic complexity of the method is 8
Complex Method,System.Buffers,SpanLiteralExtensions,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\System.Buffers.Primitives.Tests\SpanLiteralExtensions.cs,AppendCharLiteral,Cyclomatic complexity of the method is 13
Long Parameter List,Benchmarks.ALCProxy,ITest,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,CallUsingMultipleParameters,The method has 9 parameters. Parameters: a' b' s' t' c' x' y' z' tt
Long Parameter List,Benchmarks.ALCProxy,Test,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,CallUsingMultipleParameters,The method has 9 parameters. Parameters: a' b' s' t' c' x' y' z' tt
Long Parameter List,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimFasta,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimFasta.cs,MakeRandomFasta,The method has 5 parameters. Parameters: id' desc' a' n' s
Long Parameter List,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimFasta,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimFasta.cs,MakeRepeatFasta,The method has 5 parameters. Parameters: id' desc' alu' n' s
Long Parameter List,System.Azure.Experimental.Benchmarks,CosmosDb,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Azure.Experimental\CosmosDb.cs,CosmosDbBaselineFromMsdn,The method has 7 parameters. Parameters: key' keyType' verb' resourceId' resourceType' tokenVersion' utc
Long Parameter List,System.Azure.Experimental.Benchmarks,CosmosDb,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Azure.Experimental\CosmosDb.cs,TryWritePrimitives,The method has 9 parameters. Parameters: output' hash' keyType' verb' resourceId' resourceType' tokenVersion' utc' bytesWritten
Long Parameter List,System.Azure.Experimental.Benchmarks,Storage,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Azure.Experimental\Storage.cs,TryWritePrimitive,The method has 6 parameters. Parameters: output' hash' verb' canonicalizedResource' utc' bytesWritten
Long Parameter List,System.Text.Http.Parser.Benchmarks,Request,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Http.Parser\HttpParser.cs,OnStartLine,The method has 7 parameters. Parameters: method' version' target' path' query' customMethod' pathEncoded
Long Parameter List,System.Text.Http.Parser.Benchmarks,RequestStruct,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Http.Parser\HttpParser.cs,OnStartLine,The method has 7 parameters. Parameters: method' version' target' path' query' customMethod' pathEncoded
Long Identifier,System.Azure.Experimental.Benchmarks,CosmosDb,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Azure.Experimental\CosmosDb.cs,,The length of the parameter AuthenticationHeaderBufferSize is 30.
Long Identifier,System.Text.Http.Parser.Benchmarks,HttpParser<T>,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Http.Parser\HttpParser.cs,,The length of the parameter s_plaintextTechEmpowerHeadersArray is 34.
Long Identifier,System.Text.Http.Parser.Benchmarks,HttpParser<T>,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Http.Parser\HttpParser.cs,,The length of the parameter s_plaintextTechEmpowerRequestArray is 34.
Long Identifier,System.Text.Http.Parser.Benchmarks,HttpParser<T>,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Http.Parser\HttpParser.cs,,The length of the parameter s_plaintextTechEmpowerRequestRos is 32.
Long Identifier,System.Text.Http.Parser.Benchmarks,HttpParser<T>,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Http.Parser\HttpParser.cs,,The length of the parameter s_plaintextTechEmpowerHeadersRos is 32.
Long Statement,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,Setup,The length of the statement  "            testObject = ProxyBuilder<ITest' ClientDispatch>.CreateInstanceAndUnwrap(alc' Assembly.GetAssembly(typeof(Test)).GetName()' "Benchmarks.ALCProxy.Test"); " is 152.
Long Statement,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,Setup,The length of the statement  "            genericObject = ProxyBuilder<IGeneric<Test2>' ClientDispatch>.CreateGenericInstanceAndUnwrap(alc' Assembly.GetAssembly(typeof(GenericClass<>)).GetName()' "Benchmarks.ALCProxy.GenericClass`1"' new Type[] { typeof(Test2) }); " is 222.
Long Statement,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,Setup,The length of the statement  "            string path = Assembly.GetAssembly(typeof(Test)).Location.Split("Benchmarks")[0] + "ALCProxy.TestAssembly\\bin\\Release\\netcoreapp3.0\\ALCProxy.TestAssembly.dll"; " is 163.
Long Statement,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,CreateExternalAssemblyProxyObject,The length of the statement  "            return ProxyBuilder<IExternalClass' ClientDispatch>.CreateInstanceAndUnwrap(alc2' name' "ALCProxy.TestAssembly.ExternalClass"' new object[] { }); " is 145.
Long Statement,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,CreateGenericProxy,The length of the statement  "            return ProxyBuilder<IGeneric<Test2>' ClientDispatch>.CreateGenericInstanceAndUnwrap(alc' Assembly.GetExecutingAssembly().GetName()' "Benchmarks.ALCProxy.GenericClass`1"' new Type[] { typeof(Test2) }); " is 200.
Long Statement,Benchmarks.Microsoft.Data.Analysis,DataFrameFunctions,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Data.Analysis.DataFrame\DataFrameFunctions.cs,Setup,The length of the statement  "            _otherBool = new PrimitiveDataFrameColumn<bool>("Bool"' Enumerable.Range(0' length/2).Select(x => x % 2 == 0 ? true : false)); " is 126.
Long Statement,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimKNucleotide,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,CheckResults,The length of the statement  "            var expected = Size == 250_000 ? "A 30.298nT 30.157nC 19.793nG 19.752njAA 9.177nTA 9.137nAT 9.136nTT 9.094nAC 6.000nCA 5.999nGA 5.986nAG 5.985nTC 5.970nCT 5.970nGT 5.957nTG 5.956nCC 3.915nCG 3.910nGC 3.908nGG 3.902nj14717	GGTj4463	GGTAj472	GGTATTj9	GGTATTTTAATTj9	GGTATTTTAATTTATAGT" " is 283.
Long Statement,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimKNucleotide,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,CheckResults,The length of the statement  "                         : Size == 2_500_000 ? "A 30.297nT 30.151nC 19.798nG 19.755njAA 9.177nTA 9.133nAT 9.131nTT 9.091nCA 6.002nAC 6.001nAG 5.987nGA 5.984nCT 5.971nTC 5.971nGT 5.957nTG 5.956nCC 3.917nGC 3.910nCG 3.909nGG 3.903nj147166	GGTj44658	GGTAj4736	GGTATTj89	GGTATTTTAATTj89	GGTATTTTAATTTATAGT" " is 277.
Long Statement,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimKNucleotide,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,CheckResults,The length of the statement  "                         : Size == 25_000_000 ? "A 30.295nT 30.151nC 19.800nG 19.754njAA 9.177nTA 9.132nAT 9.131nTT 9.091nCA 6.002nAC 6.001nAG 5.987nGA 5.984nCT 5.971nTC 5.971nGT 5.957nTG 5.956nCC 3.917nGC 3.911nCG 3.909nGG 3.902nj1471758	GGTj446535	GGTAj47336	GGTATTj893	GGTATTTTAATTj893	GGTATTTTAATTTATAGT" " is 283.
Long Statement,System.Azure.Experimental.Benchmarks,CosmosDb,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Azure.Experimental\CosmosDb.cs,TryWritePrimitives,The length of the statement  "            if (TextEncodings.Utf16.ToUtf8(MemoryMarshal.AsBytes(keyType.AsSpan())' buffer.Slice(totalWritten)' out int consumed' out int written) != OperationStatus.Done) " is 159.
Long Statement,System.Azure.Experimental.Benchmarks,CosmosDb,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Azure.Experimental\CosmosDb.cs,TryWritePrimitives,The length of the statement  "            if (TextEncodings.Utf16.ToUtf8(MemoryMarshal.AsBytes(tokenVersion.AsSpan())' buffer.Slice(totalWritten)' out consumed' out written) != OperationStatus.Done) " is 156.
Long Statement,System.Azure.Experimental.Benchmarks,CosmosDb,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Azure.Experimental\CosmosDb.cs,TryWritePrimitives,The length of the statement  "                if (TextEncodings.Utf16.ToUtf8(MemoryMarshal.AsBytes(verb.AsSpan())' payload' out consumed' out written) != OperationStatus.Done) " is 129.
Long Statement,System.Azure.Experimental.Benchmarks,CosmosDb,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Azure.Experimental\CosmosDb.cs,TryWritePrimitives,The length of the statement  "            if (TextEncodings.Utf16.ToUtf8(MemoryMarshal.AsBytes(resourceType.AsSpan())' bufferSlice' out consumed' out written) != OperationStatus.Done) " is 141.
Long Statement,System.Azure.Experimental.Benchmarks,CosmosDb,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Azure.Experimental\CosmosDb.cs,TryWritePrimitives,The length of the statement  "            if (TextEncodings.Utf16.ToUtf8(MemoryMarshal.AsBytes(resourceId.AsSpan())' bufferSlice' out consumed' out written) != OperationStatus.Done) " is 139.
Long Statement,System.Azure.Experimental.Benchmarks,Storage,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Azure.Experimental\Storage.cs,TryWritePrimitive,The length of the statement  "                if (TextEncodings.Utf16.ToUtf8(MemoryMarshal.AsBytes(verb.AsSpan())' output' out consumed' out written) != OperationStatus.Done) " is 128.
Long Statement,System.Azure.Experimental.Benchmarks,Storage,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Azure.Experimental\Storage.cs,TryWritePrimitive,The length of the statement  "            if (TextEncodings.Utf16.ToUtf8(MemoryMarshal.AsBytes(canonicalizedResource.AsSpan())' free' out consumed' out written) != OperationStatus.Done) " is 143.
Long Statement,System.Binary.Base64.Benchmarks,Base64Encode,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Binary.Base64\Base64Encode.cs,Base64ConvertWithLineBreaks,The length of the statement  "            return Convert.ToBase64CharArray(_source' 0' _source.Length' _charsDestination' 0' Base64FormattingOptions.InsertLineBreaks); " is 125.
Long Statement,System.Binary.Base64.Benchmarks,Stiching,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Binary.Base64\Stiching.cs,Setup,The length of the statement  "            Base64TestHelper.SplitSourceIntoSpans(_source' false' out ReadOnlySpan<byte> alignedSource1' out ReadOnlySpan<byte> alignedSource2); " is 132.
Long Statement,System.Binary.Base64.Benchmarks,Stiching,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Binary.Base64\Stiching.cs,Setup,The length of the statement  "            Base64TestHelper.SplitSourceIntoSpans(_source' false' out ReadOnlySpan<byte> notAlignedSource1' out ReadOnlySpan<byte> notAlignedSource2); " is 138.
Long Statement,System.Memory.Benchmarks,IndexOf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Memory\IndexOf.cs,SpanIndexOf,The length of the statement  "            Span<byte> span = s_buffer; // this has a price' so the OperationsPerInvoke needs to be big to not spoil the result of IndexOf benchmark " is 136.
Long Statement,System.Memory.Benchmarks,IndexOf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Memory\IndexOf.cs,SpanIndexOf,The length of the statement  "            value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); " is 151.
Long Statement,System.Memory.Benchmarks,IndexOf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Memory\IndexOf.cs,SpanIndexOf,The length of the statement  "            value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); " is 151.
Long Statement,System.Memory.Benchmarks,IndexOf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Memory\IndexOf.cs,SpanIndexOf,The length of the statement  "            value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); " is 151.
Long Statement,System.Memory.Benchmarks,IndexOf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Memory\IndexOf.cs,SpanIndexOf,The length of the statement  "            value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); " is 151.
Long Statement,System.Memory.Benchmarks,IndexOf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Memory\IndexOf.cs,SpanIndexOf,The length of the statement  "            value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); " is 151.
Long Statement,System.Memory.Benchmarks,IndexOf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Memory\IndexOf.cs,SpanIndexOf,The length of the statement  "            value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); value += span.IndexOf(searchedValue); " is 151.
Long Statement,System.Text.Primitives.Benchmarks,EncodeFromUtf16toUtf8,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Primitives\EncodeFromUtf16toUtf8.cs,Setup,The length of the statement  "            string inputString = EncoderHelper.GenerateStringData(Length' this.CodePointInfo.MinCodePoint' CodePointInfo.MaxCodePoint' CodePointInfo.Special); " is 146.
Long Statement,System.Text.Primitives.Benchmarks,EncodeFromUtf16toUtf8,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Primitives\EncodeFromUtf16toUtf8.cs,UsingTextEncoder,The length of the statement  "            OperationStatus status = Buffers.Text.TextEncodings.Utf16.ToUtf8(_utf16Source' _utf8Destination' out int consumed' out int written); " is 132.
Long Statement,System.Text.Primitives.Benchmarks,EncodeFromUtf32toUtf16,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Primitives\EncodeFromUtf32toUtf16.cs,Setup,The length of the statement  "            string inputString = EncoderHelper.GenerateStringData(Length' CodePointInfo.MinCodePoint' CodePointInfo.MaxCodePoint' CodePointInfo.Special); " is 141.
Long Statement,System.Text.Primitives.Benchmarks,EncodeFromUtf32toUtf16,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Primitives\EncodeFromUtf32toUtf16.cs,EncodeFromUtf32toUtf16UsingTextEncoder,The length of the statement  "            OperationStatus status = Buffers.Text.TextEncodings.Utf32.ToUtf16(_utf32Source' _utf16Destination' out int consumed' out int written); " is 134.
Long Statement,System.Text.Primitives.Benchmarks,EncodeFromUtf32toUtf8,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Primitives\EncodeFromUtf32toUtf8.cs,Setup,The length of the statement  "            string inputString = EncoderHelper.GenerateStringData(Length' CodePointInfo.MinCodePoint' CodePointInfo.MaxCodePoint' CodePointInfo.Special); " is 141.
Long Statement,System.Text.Primitives.Benchmarks,EncodeFromUtf32toUtf8,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Primitives\EncodeFromUtf32toUtf8.cs,UsingTextEncoder,The length of the statement  "            OperationStatus status = Buffers.Text.TextEncodings.Utf32.ToUtf8(_utf32Source' _utf8Destination' out int consumed' out int written); " is 132.
Long Statement,System.Text.Primitives.Benchmarks,EncodeFromUtf8toUtf16,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Primitives\EncodeFromUtf8toUtf16.cs,Setup,The length of the statement  "            string inputString = EncoderHelper.GenerateStringData(Length' CodePointInfo.MinCodePoint' CodePointInfo.MaxCodePoint' CodePointInfo.Special); " is 141.
Long Statement,System.Text.Primitives.Benchmarks,EncodeFromUtf8toUtf16,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Primitives\EncodeFromUtf8toUtf16.cs,EncodeFromUtf8toUtf16UsingTextEncoder,The length of the statement  "            OperationStatus status = Buffers.Text.TextEncodings.Utf8.ToUtf16(_utf8Source' _utf16Destination' out int consumed' out int written); " is 132.
Long Statement,System.Text.Primitives.Benchmarks,EncoderHelper,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Primitives\EncoderHelper.cs,GetEncodingPerformanceTestData,The length of the statement  "            yield return new CodePoint(TextEncoderConstants.Utf8OneByteLastCodePoint + 1' TextEncoderConstants.Utf8TwoBytesLastCodePoint); " is 126.
Long Statement,System.Text.Primitives.Benchmarks,EncoderHelper,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Primitives\EncoderHelper.cs,GetEncodingPerformanceTestData,The length of the statement  "            yield return new CodePoint(TextEncoderConstants.Utf8TwoBytesLastCodePoint + 1' TextEncoderConstants.Utf8ThreeBytesLastCodePoint); " is 129.
Long Statement,System.Text.Primitives.Benchmarks,EncoderHelper,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Primitives\EncoderHelper.cs,GetEncodingPerformanceTestData,The length of the statement  "            yield return new CodePoint(TextEncoderConstants.Utf16HighSurrogateFirstCodePoint' TextEncoderConstants.Utf16LowSurrogateLastCodePoint); " is 135.
Long Statement,System.Text.Primitives.Benchmarks,EncoderHelper,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Primitives\EncoderHelper.cs,GenerateStringData,The length of the statement  "                if (special == SpecialTestCases.AlternatingASCIIAndNonASCII) return TextEncoderTestHelper.GenerateStringAlternatingASCIIAndNonASCII(length); " is 140.
Long Statement,System.Text.Primitives.Benchmarks,EncoderHelper,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Primitives\EncoderHelper.cs,GenerateStringData,The length of the statement  "                if (special == SpecialTestCases.MostlyASCIIAndSomeNonASCII) return TextEncoderTestHelper.GenerateStringWithMostlyASCIIAndSomeNonASCII(length); " is 142.
Long Statement,System.Text.Primitives.Benchmarks,GetUtf16CharCount,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Primitives\GetUtf16CharCount.cs,ReadTestResource,The length of the statement  "            typeof(GetUtf16CharCount).Assembly.GetManifestResourceStream("Benchmarks.System.Text.Primitives.SampleTexts." + resourceName).CopyTo(ms); " is 137.
Long Statement,System.Text.Utf8.Benchmarks,Utf8StringPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Utf8\Utf8StringPerf.cs,Setup,The length of the statement  "            // the length of the string is same across the runs' so the content of the string can be random for this particular benchmarks " is 126.
Empty Catch Block,System.Buffers.Benchmarks,Reader_Advance,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Advance.cs,Advance,The method has an empty catch block.
Magic Number,Benchmarks.ALCProxy,Test2,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,Test2,The following statement contains a magic number: mutableMember = 5;
Magic Number,Benchmarks.ALCProxy,GenericClass<T>,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,MethodWithUserTypeParameter,The following statement contains a magic number: return 6;
Magic Number,Benchmarks.ALCProxy,Test,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,MethodWithUserTypeParameter,The following statement contains a magic number: return 5;
Magic Number,Benchmarks.ALCProxy,Test,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,SimpleMethod,The following statement contains a magic number: return 3;
Magic Number,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,UserTypeParameters,The following statement contains a magic number: return testObject.MethodWithUserTypeParameter(3' new Test2());
Magic Number,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,UserTypeParametersControl,The following statement contains a magic number: return controlObject.MethodWithUserTypeParameter(3' new Test2());
Magic Number,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,UserTypeParameters2,The following statement contains a magic number: return testObject.MethodWithUserTypeParameter(3' userInput);
Magic Number,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,UserTypeParametersControl2,The following statement contains a magic number: return controlObject.MethodWithUserTypeParameter(3' userInput);
Magic Number,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,SerializeManyParameters,The following statement contains a magic number: return testObject.CallUsingMultipleParameters(1'2'"3"'new Test2()' 44' 1' 3' new int[] { 3'4'5}' new Test2());
Magic Number,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,SerializeManyParameters,The following statement contains a magic number: return testObject.CallUsingMultipleParameters(1'2'"3"'new Test2()' 44' 1' 3' new int[] { 3'4'5}' new Test2());
Magic Number,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,SerializeManyParameters,The following statement contains a magic number: return testObject.CallUsingMultipleParameters(1'2'"3"'new Test2()' 44' 1' 3' new int[] { 3'4'5}' new Test2());
Magic Number,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,SerializeManyParameters,The following statement contains a magic number: return testObject.CallUsingMultipleParameters(1'2'"3"'new Test2()' 44' 1' 3' new int[] { 3'4'5}' new Test2());
Magic Number,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,SerializeManyParameters,The following statement contains a magic number: return testObject.CallUsingMultipleParameters(1'2'"3"'new Test2()' 44' 1' 3' new int[] { 3'4'5}' new Test2());
Magic Number,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,SerializeManyParameters,The following statement contains a magic number: return testObject.CallUsingMultipleParameters(1'2'"3"'new Test2()' 44' 1' 3' new int[] { 3'4'5}' new Test2());
Magic Number,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,SerializeManyParametersControl,The following statement contains a magic number: return controlObject.CallUsingMultipleParameters(1' 2' "3"' new Test2()' 44' 1' 3' new int[] { 3' 4' 5 }' new Test2());
Magic Number,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,SerializeManyParametersControl,The following statement contains a magic number: return controlObject.CallUsingMultipleParameters(1' 2' "3"' new Test2()' 44' 1' 3' new int[] { 3' 4' 5 }' new Test2());
Magic Number,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,SerializeManyParametersControl,The following statement contains a magic number: return controlObject.CallUsingMultipleParameters(1' 2' "3"' new Test2()' 44' 1' 3' new int[] { 3' 4' 5 }' new Test2());
Magic Number,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,SerializeManyParametersControl,The following statement contains a magic number: return controlObject.CallUsingMultipleParameters(1' 2' "3"' new Test2()' 44' 1' 3' new int[] { 3' 4' 5 }' new Test2());
Magic Number,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,SerializeManyParametersControl,The following statement contains a magic number: return controlObject.CallUsingMultipleParameters(1' 2' "3"' new Test2()' 44' 1' 3' new int[] { 3' 4' 5 }' new Test2());
Magic Number,Benchmarks.ALCProxy,ALCBenchmark,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\ALCProxy\ALCBenchmark.cs,SerializeManyParametersControl,The following statement contains a magic number: return controlObject.CallUsingMultipleParameters(1' 2' "3"' new Test2()' 44' 1' 3' new int[] { 3' 4' 5 }' new Test2());
Magic Number,System.IO.Pipelines.Samples,RawInMemoryHttpServer,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Helpers\Server.cs,Run,The following statement contains a magic number: listener.OnConnection(async connection => {                  while (true)                  {                      // Wait for data                      var result = await connection.Input.ReadAsync();                      ReadOnlySequence<byte> input = result.Buffer;                        try                      {                          if (input.IsEmpty && result.IsCompleted)                          {                              // No more data                              break;                          }                            var requestBytes = input.First;                            if (requestBytes.Length != 492)                          {                              continue;                          }                          // Parse the input http request                          // TODO: use the Kestrel parser here                          object parsedRequest = null;                            // Writing directly to pooled buffers                          var output = connection.Output;                          writeResponse(parsedRequest' output);                          await output.FlushAsync();                      }                      catch (Exception e)                      {                          var istr = new Utf8Span(input.First.Span).ToString();                          Debug.WriteLine(e.Message);                      }                      finally                      {                          // Consume the input                          connection.Input.AdvanceTo(input.End' input.End);                      }                  }              });
Magic Number,Benchmarks.Microsoft.Data.Analysis,DataFrameBinaryOps,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Data.Analysis.DataFrame\DataFrameBinaryOps.cs,Setup,The following statement contains a magic number: _column = new PrimitiveDataFrameColumn<int>("Int0"' Enumerable.Range(0' 50000));
Magic Number,Benchmarks.Microsoft.Data.Analysis,DataFrameBinaryOps,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Data.Analysis.DataFrame\DataFrameBinaryOps.cs,AddValue,The following statement contains a magic number: return _column.Add(10);
Magic Number,Benchmarks.Microsoft.Data.Analysis,DataFrameComputations,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Data.Analysis.DataFrame\DataFrameComputations.cs,Setup,The following statement contains a magic number: _column0 = new PrimitiveDataFrameColumn<int>("Int0"' Enumerable.Range(0' 50000));
Magic Number,Benchmarks.Microsoft.Data.Analysis,DataFrameFunctions,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Data.Analysis.DataFrame\DataFrameFunctions.cs,Setup,The following statement contains a magic number: int length = 50000;
Magic Number,Benchmarks.Microsoft.Data.Analysis,DataFrameFunctions,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Data.Analysis.DataFrame\DataFrameFunctions.cs,Setup,The following statement contains a magic number: _bool = new PrimitiveDataFrameColumn<bool>("Bool"' Enumerable.Range(0' length).Select(x => x % 2 == 0 ? true : false));
Magic Number,Benchmarks.Microsoft.Data.Analysis,DataFrameFunctions,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Data.Analysis.DataFrame\DataFrameFunctions.cs,Setup,The following statement contains a magic number: _dataFrame.Columns.Insert(2' _bool);
Magic Number,Benchmarks.Microsoft.Data.Analysis,DataFrameFunctions,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Data.Analysis.DataFrame\DataFrameFunctions.cs,Setup,The following statement contains a magic number: _otherColumn = new PrimitiveDataFrameColumn<int>("Int0"' Enumerable.Range(0' length/2));
Magic Number,Benchmarks.Microsoft.Data.Analysis,DataFrameFunctions,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Data.Analysis.DataFrame\DataFrameFunctions.cs,Setup,The following statement contains a magic number: _otherString = new StringDataFrameColumn("String"' Enumerable.Range(0' length/2).Select(x => x.ToString()));
Magic Number,Benchmarks.Microsoft.Data.Analysis,DataFrameFunctions,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Data.Analysis.DataFrame\DataFrameFunctions.cs,Setup,The following statement contains a magic number: _otherBool = new PrimitiveDataFrameColumn<bool>("Bool"' Enumerable.Range(0' length/2).Select(x => x % 2 == 0 ? true : false));
Magic Number,Benchmarks.Microsoft.Data.Analysis,DataFrameFunctions,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Data.Analysis.DataFrame\DataFrameFunctions.cs,Setup,The following statement contains a magic number: _otherBool = new PrimitiveDataFrameColumn<bool>("Bool"' Enumerable.Range(0' length/2).Select(x => x % 2 == 0 ? true : false));
Magic Number,Benchmarks.Microsoft.Data.Analysis,DataFrameFunctions,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Data.Analysis.DataFrame\DataFrameFunctions.cs,Setup,The following statement contains a magic number: _otherDataFrame.Columns.Insert(2' _otherBool);
Magic Number,Benchmarks.Microsoft.Data.Analysis,DataFrameFunctions,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Data.Analysis.DataFrame\DataFrameFunctions.cs,Clip,The following statement contains a magic number: return _dataFrame.Clip(10000' 40000);
Magic Number,Benchmarks.Microsoft.Data.Analysis,DataFrameFunctions,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Data.Analysis.DataFrame\DataFrameFunctions.cs,Clip,The following statement contains a magic number: return _dataFrame.Clip(10000' 40000);
Magic Number,Benchmarks.Microsoft.Data.Analysis,DataFrameFunctions,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Data.Analysis.DataFrame\DataFrameFunctions.cs,ColumnFillNulls,The following statement contains a magic number: return _column.FillNulls(5);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimFasta,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimFasta.cs,Create,The following statement contains a magic number: MakeRepeatFasta("ONE"' "Homo sapiens alu"' Encoding.ASCII.GetBytes(ALU)' n * 2' s);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimFasta,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimFasta.cs,Create,The following statement contains a magic number: MakeRandomFasta("TWO"' "IUB ambiguity codes"' IUB' n * 3' s);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimFasta,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimFasta.cs,Create,The following statement contains a magic number: MakeRandomFasta("THREE"' "Homo sapiens frequency"' HomoSapiens' n * 5' s);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimFasta,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimFasta.cs,MakeRandomFasta,The following statement contains a magic number: var queue = new BlockingCollection<int[]>(2);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimFasta,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimFasta.cs,MakeRandomFasta,The following statement contains a magic number: var bufferCount = Environment.ProcessorCount + 4;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimFasta,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimFasta.cs,MakeRandomFasta,The following statement contains a magic number: Task.Run(() =>              {                  var len = LineLength * 40;                  var buffers = Enumerable.Range(0' bufferCount)                  .Select(i => new int[len]).ToArray();                  var index = 0;                  for (var i = 0; i < n; i += len)                  {                      var buffer = n - i < len                          ? new int[n - i]                          : buffers[index++ % buffers.Length];                        FillRandom(buffer);                      queue.Add(buffer);                  }                  queue.CompleteAdding();              });
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimFasta,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimFasta.cs,MakeRepeatFasta,The following statement contains a magic number: int outputBytes = n + n / 60;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimFasta,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimFasta.cs,MakeRepeatFastaBuffer,The following statement contains a magic number: var buf = new byte[1024];
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimGeneral,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimGeneral.cs,CreateValuesList,The following statement contains a magic number: var rand = new Random(11231992);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimGroupBy,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimGroupBy.cs,CreateValuesList,The following statement contains a magic number: var rand = new Random(5737262);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimGroupBy,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimGroupBy.cs,GroupBy,The following statement contains a magic number: var x = _keys.GroupBy(i => i.Key / 10).Select(g => g.Max(i => i.HashCode)).Min();
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimGroupBy,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimGroupBy.cs,DictionarySlim,The following statement contains a magic number: var x = _keys.GroupByRef(i => i.Key / 10).Select(g => g.Max(i => i.HashCode)).Min();
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: bytes[i] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: Buffer.BlockCopy(block0' threeStart' block0' threeStart - 18' BLOCK_SIZE - threeStart);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: Buffer.BlockCopy(block1' 0' block0' BLOCK_SIZE - 18' 18);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: Buffer.BlockCopy(block1' 0' block0' BLOCK_SIZE - 18' 18);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: block1[i] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: i < 18
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: threeStart + 18 > BLOCK_SIZE
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Check,The following statement contains a magic number: nb == 255
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Check,The following statement contains a magic number: rollingKey = ((rollingKey & mask) << 2) | nb;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Count,The following statement contains a magic number: return Task.Run(() =>              {                  long rollingKey = 0;                  var firstBlock = threeBlocks[0];                  var start = threeStart;                  while (--l > 0) rollingKey = (rollingKey << 2) | firstBlock[start++];                  var dict = new Dictionary<long' int>(1024);                  using (var incrementor = new Incrementor(dict))                  {                      for (int i = start; i < firstBlock.Length; i++)                          Check(incrementor' ref rollingKey' firstBlock[i]' mask);                        int lastBlockId = threeBlocks.Count - 1;                      for (int bl = 1; bl < lastBlockId; bl++)                      {                          var bytes = threeBlocks[bl];                          for (int i = 0; i < bytes.Length; i++)                              Check(incrementor' ref rollingKey' bytes[i]' mask);                      }                        var lastBlock = threeBlocks[lastBlockId];                      for (int i = 0; i < threeEnd; i++)                          Check(incrementor' ref rollingKey' lastBlock[i]' mask);                  }                  return summary(dict);              });
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Count,The following statement contains a magic number: return Task.Run(() =>              {                  long rollingKey = 0;                  var firstBlock = threeBlocks[0];                  var start = threeStart;                  while (--l > 0) rollingKey = (rollingKey << 2) | firstBlock[start++];                  var dict = new Dictionary<long' int>(1024);                  using (var incrementor = new Incrementor(dict))                  {                      for (int i = start; i < firstBlock.Length; i++)                          Check(incrementor' ref rollingKey' firstBlock[i]' mask);                        int lastBlockId = threeBlocks.Count - 1;                      for (int bl = 1; bl < lastBlockId; bl++)                      {                          var bytes = threeBlocks[bl];                          for (int i = 0; i < bytes.Length; i++)                              Check(incrementor' ref rollingKey' bytes[i]' mask);                      }                        var lastBlock = threeBlocks[lastBlockId];                      for (int i = 0; i < threeEnd; i++)                          Check(incrementor' ref rollingKey' lastBlock[i]' mask);                  }                  return summary(dict);              });
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,WriteFrequencies,The following statement contains a magic number: double percent = 100.0 / freq.Values.Sum();
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,WriteFrequencies,The following statement contains a magic number: key >>= 2;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,WriteCount,The following statement contains a magic number: key = (key << 2) | tonum[fragment[i]];
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['g'] = 2;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['G'] = 2;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['t'] = 3;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['T'] = 3;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['\n'] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['>'] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum[255] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum[255] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task12 = Count(12' 8388607' d => WriteCount(d' "GGTATTTTAATT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task12 = Count(12' 8388607' d => WriteCount(d' "GGTATTTTAATT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task18 = Count(18' 34359738367' d => WriteCount(d' "GGTATTTTAATTTATAGT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task18 = Count(18' 34359738367' d => WriteCount(d' "GGTATTTTAATTTATAGT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task6 = Count(6' 0b1111111111' d => WriteCount(d' "GGTATT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task2 = Count(2' 0b11' d => WriteFrequencies(d' 2));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task2 = Count(2' 0b11' d => WriteFrequencies(d' 2));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task3 = Count(3' 0b1111' d => WriteCount(d' "GGT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideHack9,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task4 = Count(4' 0b111111' d => WriteCount(d' "GGTA"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,Incrementor,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Increment,The following statement contains a magic number: p = (int *)entries + i * 6;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,Incrementor,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Increment,The following statement contains a magic number: (*(p+4))++;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,Incrementor,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Increment,The following statement contains a magic number: *((long *)(p+2)) == key
Magic Number,Microsoft.Collections.Extensions.Benchmarks,Incrementor,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Increment,The following statement contains a magic number: p = (int *)entries + i * 6;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,Incrementor,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Increment,The following statement contains a magic number: *((long *)(p+2)) = key;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,Incrementor,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Increment,The following statement contains a magic number: *(p+4) = 1;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: bytes[i] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: Buffer.BlockCopy(block0' threeStart' block0' threeStart - 18' BLOCK_SIZE - threeStart);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: Buffer.BlockCopy(block1' 0' block0' BLOCK_SIZE - 18' 18);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: Buffer.BlockCopy(block1' 0' block0' BLOCK_SIZE - 18' 18);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: block1[i] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: i < 18
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: threeStart + 18 > BLOCK_SIZE
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Check,The following statement contains a magic number: nb == 255
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Check,The following statement contains a magic number: rollingKey = ((rollingKey & mask) << 2) | nb;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Count,The following statement contains a magic number: return Task.Run(() =>              {                  long rollingKey = 0;                  var firstBlock = threeBlocks[0];                  var start = threeStart;                  while (--l > 0) rollingKey = (rollingKey << 2) | firstBlock[start++];                  var dict = new Dictionary<long' int>(1024);                  for (int i = start; i < firstBlock.Length; i++)                      Check(dict' ref rollingKey' firstBlock[i]' mask);                    int lastBlockId = threeBlocks.Count - 1;                  for (int bl = 1; bl < lastBlockId; bl++)                  {                      var bytes = threeBlocks[bl];                      for (int i = 0; i < bytes.Length; i++)                          Check(dict' ref rollingKey' bytes[i]' mask);                  }                    var lastBlock = threeBlocks[lastBlockId];                  for (int i = 0; i < threeEnd; i++)                      Check(dict' ref rollingKey' lastBlock[i]' mask);                  return summary(dict);              });
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Count,The following statement contains a magic number: return Task.Run(() =>              {                  long rollingKey = 0;                  var firstBlock = threeBlocks[0];                  var start = threeStart;                  while (--l > 0) rollingKey = (rollingKey << 2) | firstBlock[start++];                  var dict = new Dictionary<long' int>(1024);                  for (int i = start; i < firstBlock.Length; i++)                      Check(dict' ref rollingKey' firstBlock[i]' mask);                    int lastBlockId = threeBlocks.Count - 1;                  for (int bl = 1; bl < lastBlockId; bl++)                  {                      var bytes = threeBlocks[bl];                      for (int i = 0; i < bytes.Length; i++)                          Check(dict' ref rollingKey' bytes[i]' mask);                  }                    var lastBlock = threeBlocks[lastBlockId];                  for (int i = 0; i < threeEnd; i++)                      Check(dict' ref rollingKey' lastBlock[i]' mask);                  return summary(dict);              });
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,writeFrequencies,The following statement contains a magic number: double percent = 100.0 / freq.Values.Sum();
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,writeFrequencies,The following statement contains a magic number: key >>= 2;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,WriteCount,The following statement contains a magic number: key = (key << 2) | tonum[fragment[i]];
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['g'] = 2;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['G'] = 2;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['t'] = 3;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['T'] = 3;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['\n'] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['>'] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum[255] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum[255] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task12 = Count(12' 8388607' d => WriteCount(d' "GGTATTTTAATT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task12 = Count(12' 8388607' d => WriteCount(d' "GGTATTTTAATT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task18 = Count(18' 34359738367' d => WriteCount(d' "GGTATTTTAATTTATAGT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task18 = Count(18' 34359738367' d => WriteCount(d' "GGTATTTTAATTTATAGT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task6 = Count(6' 0b1111111111' d => WriteCount(d' "GGTATT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task2 = Count(2' 0b11' d => writeFrequencies(d' 2));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task2 = Count(2' 0b11' d => writeFrequencies(d' 2));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task3 = Count(3' 0b1111' d => WriteCount(d' "GGT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task4 = Count(4' 0b111111' d => WriteCount(d' "GGTA"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: bytes[i] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: Buffer.BlockCopy(block0' threeStart' block0' threeStart - 18' BLOCK_SIZE - threeStart);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: Buffer.BlockCopy(block1' 0' block0' BLOCK_SIZE - 18' 18);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: Buffer.BlockCopy(block1' 0' block0' BLOCK_SIZE - 18' 18);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: block1[i] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: i < 18
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,LoadThreeData,The following statement contains a magic number: threeStart + 18 > BLOCK_SIZE
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Check,The following statement contains a magic number: nb == 255
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Check,The following statement contains a magic number: rollingKey = ((rollingKey & mask) << 2) | nb;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Count,The following statement contains a magic number: return Task.Run(() =>              {                  long rollingKey = 0;                  var firstBlock = threeBlocks[0];                  var start = threeStart;                  while (--l > 0) rollingKey = (rollingKey << 2) | firstBlock[start++];                  var dict = new DictionarySlim<long' int>(1024);                    for (int i = start; i < firstBlock.Length; i++)                      Check(dict' ref rollingKey' firstBlock[i]' mask);                    int lastBlockId = threeBlocks.Count - 1;                  for (int bl = 1; bl < lastBlockId; bl++)                  {                      var bytes = threeBlocks[bl];                      for (int i = 0; i < bytes.Length; i++)                          Check(dict' ref rollingKey' bytes[i]' mask);                  }                    var lastBlock = threeBlocks[lastBlockId];                  for (int i = 0; i < threeEnd; i++)                      Check(dict' ref rollingKey' lastBlock[i]' mask);                    return summary(dict);              });
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Count,The following statement contains a magic number: return Task.Run(() =>              {                  long rollingKey = 0;                  var firstBlock = threeBlocks[0];                  var start = threeStart;                  while (--l > 0) rollingKey = (rollingKey << 2) | firstBlock[start++];                  var dict = new DictionarySlim<long' int>(1024);                    for (int i = start; i < firstBlock.Length; i++)                      Check(dict' ref rollingKey' firstBlock[i]' mask);                    int lastBlockId = threeBlocks.Count - 1;                  for (int bl = 1; bl < lastBlockId; bl++)                  {                      var bytes = threeBlocks[bl];                      for (int i = 0; i < bytes.Length; i++)                          Check(dict' ref rollingKey' bytes[i]' mask);                  }                    var lastBlock = threeBlocks[lastBlockId];                  for (int i = 0; i < threeEnd; i++)                      Check(dict' ref rollingKey' lastBlock[i]' mask);                    return summary(dict);              });
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,WriteFrequencies,The following statement contains a magic number: double percent = 100.0 / freq.Select(x => x.Value).Sum();
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,WriteFrequencies,The following statement contains a magic number: key >>= 2;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,WriteCount,The following statement contains a magic number: key = (key << 2) | tonum[fragment[i]];
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['g'] = 2;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['G'] = 2;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['t'] = 3;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['T'] = 3;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['\n'] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum['>'] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum[255] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: tonum[255] = 255;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task12 = Count(12' 8388607' d => WriteCount(d' "GGTATTTTAATT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task12 = Count(12' 8388607' d => WriteCount(d' "GGTATTTTAATT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task18 = Count(18' 34359738367' d => WriteCount(d' "GGTATTTTAATTTATAGT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task18 = Count(18' 34359738367' d => WriteCount(d' "GGTATTTTAATTTATAGT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task6 = Count(6' 0b1111111111' d => WriteCount(d' "GGTATT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task2 = Count(2' 0b11' d => WriteFrequencies(d' 2));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task2 = Count(2' 0b11' d => WriteFrequencies(d' 2));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task3 = Count(3' 0b1111' d => WriteCount(d' "GGT"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,KNucleotideDictionarySlim,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimKNucleotide.cs,Main,The following statement contains a magic number: var task4 = Count(4' 0b111111' d => WriteCount(d' "GGTA"));
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimRemove,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimRemove.cs,Shuffle,The following statement contains a magic number: var rng = new Random(1234617);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimRemove,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimRemove.cs,CreateRemoveOrder,The following statement contains a magic number: _removeOrder[i] = i * 7;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimRemove,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimRemove.cs,LoadDictionarySlim,The following statement contains a magic number: _dictSlim.GetOrAddValueRef(i * 7) = -i;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimRemove,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimRemove.cs,LoadDictionary,The following statement contains a magic number: _dict[i * 7] = -i;
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimString,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimString.cs,CreateValuesList,The following statement contains a magic number: var rand = new Random(11231992);
Magic Number,Microsoft.Collections.Extensions.Benchmarks,DictionarySlimString,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\DictionarySlimString.cs,CreateValuesList,The following statement contains a magic number: var stringChars = new char[rand.Next(9)+1];
Magic Number,Microsoft.Collections.Extensions.Tests,MultiValueDictionaryPerformanceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\MultiValueDictionaryPerformanceTests.cs,CreateMultiValueDictionary_SingleValues,The following statement contains a magic number: Random rand = new Random(11231992);
Magic Number,Microsoft.Collections.Extensions.Tests,MultiValueDictionaryPerformanceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\MultiValueDictionaryPerformanceTests.cs,CreateMultiValueDictionary_AddRandomKey,The following statement contains a magic number: _randomKey = new Random(837322).Next(0' 400000);
Magic Number,Microsoft.Collections.Extensions.Tests,MultiValueDictionaryPerformanceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\MultiValueDictionaryPerformanceTests.cs,CreateMultiValueDictionary_AddRandomKey,The following statement contains a magic number: _randomKey = new Random(837322).Next(0' 400000);
Magic Number,Microsoft.Collections.Extensions.Tests,MultiValueDictionaryPerformanceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\MultiValueDictionaryPerformanceTests.cs,CreateMultiValueDictionary_AddRandomKey,The following statement contains a magic number: _dict.Add(_randomKey' 12);
Magic Number,Microsoft.Collections.Extensions.Tests,MultiValueDictionaryPerformanceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\MultiValueDictionaryPerformanceTests.cs,SetValue,The following statement contains a magic number: _value = 1024;
Magic Number,Microsoft.Collections.Extensions.Tests,MultiValueDictionaryPerformanceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\MultiValueDictionaryPerformanceTests.cs,SetValue,The following statement contains a magic number: Size >= 1024
Magic Number,Microsoft.Collections.Extensions.Tests,MultiValueDictionaryPerformanceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\MultiValueDictionaryPerformanceTests.cs,SetValue,The following statement contains a magic number: _value = 4096;
Magic Number,Microsoft.Collections.Extensions.Tests,MultiValueDictionaryPerformanceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\MultiValueDictionaryPerformanceTests.cs,SetValue,The following statement contains a magic number: Size >= 4096
Magic Number,Microsoft.Collections.Extensions.Tests,MultiValueDictionaryPerformanceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\MultiValueDictionaryPerformanceTests.cs,SetValue,The following statement contains a magic number: _value = 16384;
Magic Number,Microsoft.Collections.Extensions.Tests,MultiValueDictionaryPerformanceTests,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\Microsoft.Experimental.Collections\MultiValueDictionaryPerformanceTests.cs,SetValue,The following statement contains a magic number: Size >= 16384
Magic Number,System.Azure.Experimental.Benchmarks,Storage,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Azure.Experimental\Storage.cs,TryWritePrimitive,The following statement contains a magic number: output.Length < 3
Magic Number,System.Binary.Base64.Benchmarks,Stiching,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Binary.Base64\Stiching.cs,StichingRequiredNoThirdCall,The following statement contains a magic number: Span<byte> stackSpan = stackalloc byte[600 * InputBufferSize / 1000];
Magic Number,System.Binary.Base64.Benchmarks,Stiching,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Binary.Base64\Stiching.cs,StichingRequiredNoThirdCall,The following statement contains a magic number: Span<byte> stackSpan = stackalloc byte[600 * InputBufferSize / 1000];
Magic Number,System.Buffers.Benchmarks,Reader,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader.cs,Setup,The following statement contains a magic number: int sections = 100000;
Magic Number,System.Buffers.Benchmarks,Reader_Advance,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Advance.cs,Setup,The following statement contains a magic number: Random r = new Random(42);
Magic Number,System.Buffers.Benchmarks,Reader_Advance,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Advance.cs,Setup,The following statement contains a magic number: int run = Math.Min(r.Next(3' 15)' remaining);
Magic Number,System.Buffers.Benchmarks,Reader_Advance,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Advance.cs,Setup,The following statement contains a magic number: int run = Math.Min(r.Next(3' 15)' remaining);
Magic Number,System.Buffers.Benchmarks,Reader_Advance,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Advance.cs,Setup,The following statement contains a magic number: s_rosBlobsSplit = BufferUtilities.CreateSplitBuffer(s_arrayBlobs' 10' 100);
Magic Number,System.Buffers.Benchmarks,Reader_Advance,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Advance.cs,Setup,The following statement contains a magic number: s_rosBlobsSplit = BufferUtilities.CreateSplitBuffer(s_arrayBlobs' 10' 100);
Magic Number,System.Buffers.Benchmarks,Reader_Advance,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Advance.cs,Advance,The following statement contains a magic number: reader.Advance(255);
Magic Number,System.Buffers.Benchmarks,Reader_Binary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Binary.cs,Setup,The following statement contains a magic number: s_buffer = new byte[4096];
Magic Number,System.Buffers.Benchmarks,Reader_Binary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Binary.cs,Setup,The following statement contains a magic number: Random r = new Random(42);
Magic Number,System.Buffers.Benchmarks,Reader_Binary,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Binary.cs,PeekSpan,The following statement contains a magic number: const int Count = 1000;
Magic Number,System.Buffers.Benchmarks,Reader_Construction,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Construction.cs,Setup,The following statement contains a magic number: s_array = new byte[1000];
Magic Number,System.Buffers.Benchmarks,Reader_Construction,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Construction.cs,Setup,The following statement contains a magic number: Random r = new Random(1776);
Magic Number,System.Buffers.Benchmarks,Reader_Construction,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Construction.cs,Setup,The following statement contains a magic number: s_rosSplit = BufferUtilities.CreateSplitBuffer(s_array' 10' 100);
Magic Number,System.Buffers.Benchmarks,Reader_Construction,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Construction.cs,Setup,The following statement contains a magic number: s_rosSplit = BufferUtilities.CreateSplitBuffer(s_array' 10' 100);
Magic Number,System.Buffers.Benchmarks,Reader_ParseInt,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_ParseInt.cs,Setup,The following statement contains a magic number: s_rosSplit = BufferUtilities.CreateSplitBuffer(s_array' 100' 1000);
Magic Number,System.Buffers.Benchmarks,Reader_ParseInt,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_ParseInt.cs,Setup,The following statement contains a magic number: s_rosSplit = BufferUtilities.CreateSplitBuffer(s_array' 100' 1000);
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,Setup,The following statement contains a magic number: Random r = new Random(42);
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,Setup,The following statement contains a magic number: s_rosSplit = BufferUtilities.CreateSplitBuffer(s_array' 10' 100);
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,Setup,The following statement contains a magic number: s_rosSplit = BufferUtilities.CreateSplitBuffer(s_array' 10' 100);
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadTo_Sequence,The following statement contains a magic number: reader.TryReadTo(out ReadOnlySequence<byte> bytes' 42)
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_2_Sequence,The following statement contains a magic number: byte[] delimiters = { 0' 255 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_5_Sequence,The following statement contains a magic number: byte[] delimiters = { 2' 3' 5' 7' 11 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_5_Sequence,The following statement contains a magic number: byte[] delimiters = { 2' 3' 5' 7' 11 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_5_Sequence,The following statement contains a magic number: byte[] delimiters = { 2' 3' 5' 7' 11 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_5_Sequence,The following statement contains a magic number: byte[] delimiters = { 2' 3' 5' 7' 11 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_5_Sequence,The following statement contains a magic number: byte[] delimiters = { 2' 3' 5' 7' 11 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadTo_Span,The following statement contains a magic number: reader.TryReadTo(out ReadOnlySpan<byte> bytes' 42)
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadTo_Span_OneSegment,The following statement contains a magic number: reader.TryReadTo(out ReadOnlySpan<byte> bytes' 42)
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_2_Span,The following statement contains a magic number: byte[] delimiters = { 0' 255 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_2_Span_OneSegment,The following statement contains a magic number: byte[] delimiters = { 0' 255 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_5_Span,The following statement contains a magic number: byte[] delimiters = { 2' 3' 5' 7' 11 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_5_Span,The following statement contains a magic number: byte[] delimiters = { 2' 3' 5' 7' 11 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_5_Span,The following statement contains a magic number: byte[] delimiters = { 2' 3' 5' 7' 11 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_5_Span,The following statement contains a magic number: byte[] delimiters = { 2' 3' 5' 7' 11 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_5_Span,The following statement contains a magic number: byte[] delimiters = { 2' 3' 5' 7' 11 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_5_Span_OneSegment,The following statement contains a magic number: byte[] delimiters = { 2' 3' 5' 7' 11 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_5_Span_OneSegment,The following statement contains a magic number: byte[] delimiters = { 2' 3' 5' 7' 11 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_5_Span_OneSegment,The following statement contains a magic number: byte[] delimiters = { 2' 3' 5' 7' 11 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_5_Span_OneSegment,The following statement contains a magic number: byte[] delimiters = { 2' 3' 5' 7' 11 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadToAny_5_Span_OneSegment,The following statement contains a magic number: byte[] delimiters = { 2' 3' 5' 7' 11 };
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryReadTo_2Span,The following statement contains a magic number: Span<byte> span = new Span<byte>(b' 2);
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryAdvanceTo,The following statement contains a magic number: reader.TryAdvanceTo(42)
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TryAdvanceTo_SingleSegment,The following statement contains a magic number: reader.TryAdvanceTo(42)
Magic Number,System.Buffers.Benchmarks,Reader_Search,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Reader_Search.cs,TrySkipToAny_AndSkipPastAny,The following statement contains a magic number: Span<byte> span = new Span<byte>(b' 2);
Magic Number,System.Buffers.Benchmarks,Sink,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Writer.cs,Sink,The following statement contains a magic number: _buffer = new byte[4096];
Magic Number,System.Buffers.Benchmarks,AsciiString,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Writer.cs,GetHashCode,The following statement contains a magic number: int hash1 = 5381;
Magic Number,System.Buffers.Benchmarks,AsciiString,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Writer.cs,GetHashCode,The following statement contains a magic number: hash1 = ((hash1 << 5) + hash1) ^ b;
Magic Number,System.Buffers.Benchmarks,AsciiString,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Buffers\Writer.cs,GetHashCode,The following statement contains a magic number: return hash1 + (hash2 * 1566083941);
Magic Number,System.Text.Encodings.Web.Utf8.Benchmarks,UrlEncoderPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Encodings.Web.Utf8\UrlEncoderPerf.cs,Setup,The following statement contains a magic number: var random = new Random(42);
Magic Number,System.Text.Encodings.Web.Utf8.Benchmarks,UrlEncoderPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Encodings.Web.Utf8\UrlEncoderPerf.cs,Setup,The following statement contains a magic number: random.NextDouble() < 0.15
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,InvariantFormatIntDec,The following statement contains a magic number: sb.Append(((int)(i % 10)));
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,InvariantFormatIntDecClr,The following statement contains a magic number: sb.Append(((int)(i % 10)));
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,InvariantFormatIntHex,The following statement contains a magic number: sb.Append(((int)(i % 10))' format);
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,InvariantFormatIntHexClr,The following statement contains a magic number: sb.Append(((int)(i % 10)).ToString("X"));
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,InvariantFormatStruct,The following statement contains a magic number: var sb = new StringFormatter(NumbersToWrite * 2' pool);
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,InvariantFormatStruct,The following statement contains a magic number: sb.Append(new Age(i % 10));
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,FormatGuid,The following statement contains a magic number: var guidsToWrite = NumbersToWrite / 10;
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,FormatGuid,The following statement contains a magic number: var sb = new StringFormatter(guidsToWrite * 36' pool);
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,InvariantFormatStructClr,The following statement contains a magic number: var sb = new StringBuilder(NumbersToWrite * 2);
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,InvariantFormatStructClr,The following statement contains a magic number: sb.Append(new Age(i % 10));
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,CustomCultureFormat,The following statement contains a magic number: var sb = new StringFormatter(NumbersToWrite * 3' pool);
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,CustomCultureFormat,The following statement contains a magic number: var next = (i % 128) + 101;
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,CustomCultureFormat,The following statement contains a magic number: var next = (i % 128) + 101;
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,CustomCultureFormatClr,The following statement contains a magic number: var sb = new StringBuilder(NumbersToWrite * 3);
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,CustomCultureFormatClr,The following statement contains a magic number: sb.Append(((i % 128) + 100).ToString(culture));
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,CustomCultureFormatClr,The following statement contains a magic number: sb.Append(((i % 128) + 100).ToString(culture));
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,EncodeStringToUtf8,The following statement contains a magic number: int stringsToWrite = 2000;
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,EncodeStringToUtf8Clr,The following statement contains a magic number: int stringsToWrite = 2000;
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,CreateCustomCulture,The following statement contains a magic number: var utf16digitsAndSymbols = new byte[17][];
Magic Number,System.Text.Formatting.Benchmarks,StringFormatterPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Formatting\StringFormatterPerf.cs,CreateCustomCulture,The following statement contains a magic number: digit < 10
Magic Number,System.Text.Utf8.Benchmarks,Utf8StringPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Utf8\Utf8StringPerf.cs,Setup,The following statement contains a magic number: switch (TestCase)              {                  case TestCaseType.ShortAscii:                      { length = 5; maxCodePoint = 126; break; }                  case TestCaseType.ShortMultiByte:                      { length = 5; maxCodePoint = 0xD7FF; break; }                  case TestCaseType.LongAscii:                      { length = 50000; maxCodePoint = 126; break; }                  case TestCaseType.LongMultiByte:                      { length = 50000; maxCodePoint = 0xD7FF; break; }                  default:                      throw new InvalidOperationException();              }
Magic Number,System.Text.Utf8.Benchmarks,Utf8StringPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Utf8\Utf8StringPerf.cs,Setup,The following statement contains a magic number: switch (TestCase)              {                  case TestCaseType.ShortAscii:                      { length = 5; maxCodePoint = 126; break; }                  case TestCaseType.ShortMultiByte:                      { length = 5; maxCodePoint = 0xD7FF; break; }                  case TestCaseType.LongAscii:                      { length = 50000; maxCodePoint = 126; break; }                  case TestCaseType.LongMultiByte:                      { length = 50000; maxCodePoint = 0xD7FF; break; }                  default:                      throw new InvalidOperationException();              }
Magic Number,System.Text.Utf8.Benchmarks,Utf8StringPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Utf8\Utf8StringPerf.cs,Setup,The following statement contains a magic number: switch (TestCase)              {                  case TestCaseType.ShortAscii:                      { length = 5; maxCodePoint = 126; break; }                  case TestCaseType.ShortMultiByte:                      { length = 5; maxCodePoint = 0xD7FF; break; }                  case TestCaseType.LongAscii:                      { length = 50000; maxCodePoint = 126; break; }                  case TestCaseType.LongMultiByte:                      { length = 50000; maxCodePoint = 0xD7FF; break; }                  default:                      throw new InvalidOperationException();              }
Magic Number,System.Text.Utf8.Benchmarks,Utf8StringPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Utf8\Utf8StringPerf.cs,Setup,The following statement contains a magic number: switch (TestCase)              {                  case TestCaseType.ShortAscii:                      { length = 5; maxCodePoint = 126; break; }                  case TestCaseType.ShortMultiByte:                      { length = 5; maxCodePoint = 0xD7FF; break; }                  case TestCaseType.LongAscii:                      { length = 50000; maxCodePoint = 126; break; }                  case TestCaseType.LongMultiByte:                      { length = 50000; maxCodePoint = 0xD7FF; break; }                  default:                      throw new InvalidOperationException();              }
Magic Number,System.Text.Utf8.Benchmarks,Utf8StringPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Utf8\Utf8StringPerf.cs,Setup,The following statement contains a magic number: switch (TestCase)              {                  case TestCaseType.ShortAscii:                      { length = 5; maxCodePoint = 126; break; }                  case TestCaseType.ShortMultiByte:                      { length = 5; maxCodePoint = 0xD7FF; break; }                  case TestCaseType.LongAscii:                      { length = 50000; maxCodePoint = 126; break; }                  case TestCaseType.LongMultiByte:                      { length = 50000; maxCodePoint = 0xD7FF; break; }                  default:                      throw new InvalidOperationException();              }
Magic Number,System.Text.Utf8.Benchmarks,Utf8StringPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Utf8\Utf8StringPerf.cs,Setup,The following statement contains a magic number: switch (TestCase)              {                  case TestCaseType.ShortAscii:                      { length = 5; maxCodePoint = 126; break; }                  case TestCaseType.ShortMultiByte:                      { length = 5; maxCodePoint = 0xD7FF; break; }                  case TestCaseType.LongAscii:                      { length = 50000; maxCodePoint = 126; break; }                  case TestCaseType.LongMultiByte:                      { length = 50000; maxCodePoint = 0xD7FF; break; }                  default:                      throw new InvalidOperationException();              }
Magic Number,System.Text.Utf8.Benchmarks,Utf8StringPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Utf8\Utf8StringPerf.cs,Setup,The following statement contains a magic number: _string = GetRandomString(length' 32' maxCodePoint);
Magic Number,System.Text.Utf8.Benchmarks,Utf8StringPerf,D:\research\architectureSmells\repos\dotnet_corefxlab\tests\Benchmarks\System.Text.Utf8\Utf8StringPerf.cs,GetRandomString,The following statement contains a magic number: Random r = new Random(42);
