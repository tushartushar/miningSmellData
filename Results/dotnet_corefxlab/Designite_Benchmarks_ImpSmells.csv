Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Benchmarks,ComparisonBench,C:\repos\dotnet_corefxlab\tests\Benchmarks\ComparisonBench.cs,GetBookEnds,The following statement contains a magic number: Random rnd = new Random(42);
Magic Number,Benchmarks,ComparisonBench,C:\repos\dotnet_corefxlab\tests\Benchmarks\ComparisonBench.cs,GetBookEnds,The following statement contains a magic number: start = rnd.Next(0' SliceSpanDataSize / 2);
Magic Number,Benchmarks,ComparisonBench,C:\repos\dotnet_corefxlab\tests\Benchmarks\ComparisonBench.cs,GetBookEnds,The following statement contains a magic number: length = rnd.Next(0' SliceSpanDataSize / 2);
Magic Number,System.IO.Pipelines.Samples,RawInMemoryHttpServer,C:\repos\dotnet_corefxlab\tests\Benchmarks\Helpers\Server.cs,Run,The following statement contains a magic number: listener.OnConnection(async connection => {                  while (true)                  {                      // Wait for data                      var result = await connection.Input.ReadAsync();                      ReadableBuffer input = result.Buffer;                        try                      {                          if (input.IsEmpty && result.IsCompleted)                          {                              // No more data                              break;                          }                            var requestBytes = input.First;                            if (requestBytes.Length != 492)                          {                              continue;                          }                          // Parse the input http request                          // TODO: use the Kestrel parser here                          object parsedRequest = null;                            // Writing directly to pooled buffers                          var output = connection.Output.Alloc();                          writeResponse(parsedRequest' output);                          await output.FlushAsync();                      }                      catch (Exception e)                      {                          var istr = new Utf8Span(input.First.Span).ToString();                          Debug.WriteLine(e.Message);                      }                      finally                      {                          // Consume the input                          connection.Input.Advance(input.End' input.End);                      }                  }              });
