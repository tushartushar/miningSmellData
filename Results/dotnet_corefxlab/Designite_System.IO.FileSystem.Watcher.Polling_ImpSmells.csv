Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,System.IO.FileSystem,DllImports,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\InteropDeclarations.cs,FindFirstFileExW,The method has 6 parameters. Parameters: lpFileName' fInfoLevelId' lpFindFileData' fSearchOp' lpSearchFilter' dwAdditionalFlags
Long Identifier,System.IO.FileSystem,PollingWatcher,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PollingWatcher.cs,,The length of the parameter _pollingIntervalInMilliseconds is 30.
Long Statement,System.IO.FileSystem,PollingWatcher,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PollingWatcher.cs,ComputeChangesAndUpdateState,The length of the statement  "                    var handle = DllImports.FindFirstFileExW(directory' FINDEX_INFO_LEVELS.FindExInfoBasic' pFileData' FINDEX_SEARCH_OPS.FindExSearchNameMatch' IntPtr.Zero' DllImports.FIND_FIRST_EX_LARGE_FETCH); " is 191.
Magic Number,System.IO.FileSystem,FileChangeList,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\Datastructures.cs,EnsureCapacity,The following statement contains a magic number: if (_count >= _changes.Length)              {                  var larger = new FileChange[_changes.Length * 2];                  _changes.CopyTo(larger' 0);                  _changes = larger;              }
Magic Number,System.IO.FileSystem,PathToFileStateHashtable,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PathToFileStateHashtable.cs,GetHashCode,The following statement contains a magic number: for (int index = 0; index < path.Length; index++)              {                  char next = path[index];                  code |= next;                  code <<= 8;                  if (index > 8) break;              }
Magic Number,System.IO.FileSystem,PathToFileStateHashtable,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PathToFileStateHashtable.cs,GetHashCode,The following statement contains a magic number: for (int index = 0; index < path.Length; index++)              {                  char next = path[index];                  code |= next;                  code <<= 8;                  if (index > 8) break;              }
Magic Number,System.IO.FileSystem,PathToFileStateHashtable,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PathToFileStateHashtable.cs,GetHashCode,The following statement contains a magic number: while (true)              {                  char next = *nullTerminatedString;                  if (next == 0)                  {                      break;                  }                  nullTerminatedString++;                  code |= next;                  code <<= 8;                  if (index > 8) break;                  index++;              }
Magic Number,System.IO.FileSystem,PathToFileStateHashtable,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PathToFileStateHashtable.cs,GetHashCode,The following statement contains a magic number: while (true)              {                  char next = *nullTerminatedString;                  if (next == 0)                  {                      break;                  }                  nullTerminatedString++;                  code |= next;                  code <<= 8;                  if (index > 8) break;                  index++;              }
Magic Number,System.IO.FileSystem,PathToFileStateHashtable,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PathToFileStateHashtable.cs,Resize,The following statement contains a magic number: var newSize = Math.Max(_count * 2' 4);
Magic Number,System.IO.FileSystem,PathToFileStateHashtable,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PathToFileStateHashtable.cs,Resize,The following statement contains a magic number: var newSize = Math.Max(_count * 2' 4);
Magic Number,System.IO.FileSystem,PathToFileStateHashtable,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PathToFileStateHashtable.cs,Resize,The following statement contains a magic number: if (_trace.Switch.ShouldTrace(TraceEventType.Verbose))              {                  _trace.TraceEvent(TraceEventType.Verbose' 5' "Resizing hashtable from {0} to {1}"' Values.Length' newSize);              }
Magic Number,System.IO.FileSystem,PathToFileStateHashtable,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PathToFileStateHashtable.cs,IsPrime,The following statement contains a magic number: if ((candidate & 1) != 0)              {                  int limit = (int)Math.Sqrt(candidate);                  for (int divisor = 3; divisor <= limit; divisor += 2)                  {                      if ((candidate % divisor) == 0)                          return false;                  }                  return true;              }
Magic Number,System.IO.FileSystem,PathToFileStateHashtable,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PathToFileStateHashtable.cs,IsPrime,The following statement contains a magic number: if ((candidate & 1) != 0)              {                  int limit = (int)Math.Sqrt(candidate);                  for (int divisor = 3; divisor <= limit; divisor += 2)                  {                      if ((candidate % divisor) == 0)                          return false;                  }                  return true;              }
Magic Number,System.IO.FileSystem,PathToFileStateHashtable,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PathToFileStateHashtable.cs,IsPrime,The following statement contains a magic number: return (candidate == 2);
Magic Number,System.IO.FileSystem,PathToFileStateHashtable,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PathToFileStateHashtable.cs,GetPrime,The following statement contains a magic number: for (int i = (min | 1); i < Int32.MaxValue; i += 2)              {                  if (IsPrime(i))                      return i;              }
Magic Number,System.IO.FileSystem,PollingWatcher,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PollingWatcher.cs,ComputeChangesAndUpdateState,The following statement contains a magic number: unsafe              {                  WIN32_FIND_DATAW* pFileData = &fileData;                    for(int index=0; index < _directories.Count; index++) {                      var directory = _directories[index];                        var handle = DllImports.FindFirstFileExW(directory' FINDEX_INFO_LEVELS.FindExInfoBasic' pFileData' FINDEX_SEARCH_OPS.FindExSearchNameMatch' IntPtr.Zero' DllImports.FIND_FIRST_EX_LARGE_FETCH);                      if (handle == DllImports.INVALID_HANDLE_VALUE) { // directory got deleted                           if (Tracing.Switch.ShouldTrace(TraceEventType.Information))                          {                              Tracing.TraceEvent(TraceEventType.Warning' 2' "Directory could not be opened {0}"' directory);                          }                          _directories.Remove(directory);                          continue;                      }                        try                      {                          do                          {                              if (IsSpecial(fileData.cFileName)) continue;                              if (!IsWatched(fileData.cFileName)) continue;                              UpdateState(directory' ref changes' ref fileData' fileData.cFileName);                          }                          while (DllImports.FindNextFileW(handle' pFileData));                      }                      finally                      {                          DllImports.FindClose(handle);                      }                  }              }
Magic Number,System.IO.FileSystem,PollingWatcher,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PollingWatcher.cs,IsSpecial,The following statement contains a magic number: if (cFileName[0] == '.') {                  if (cFileName[1] == 0) return true;                  if (cFileName[1] == '.' && cFileName[2] == 0) return true;              }
Magic Number,System.IO.FileSystem,PollingWatcher,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PollingWatcher.cs,TimerHandler,The following statement contains a magic number: try {                  _stopwatch.Restart();                  var changes = ComputeChangesAndUpdateState();                  var lastCycleTicks = _stopwatch.ElapsedTicks;                  if (Tracing.Switch.ShouldTrace(TraceEventType.Information))                  {                      Tracing.TraceEvent(TraceEventType.Information' 1' "Last polling cycle {0}ms"' lastCycleTicks*1000/Stopwatch.Frequency);                      Tracing.TraceEvent(TraceEventType.Information' 6' "Changes detected {0}"' changes.Count);                  }                    var changedHandler = Changed;                  var ChangedDetailedHandler = ChangedDetailed;                    if (changedHandler != null || ChangedDetailedHandler != null)                  {                      if (!changes.IsEmpty)                      {                          if (changedHandler != null)                          {                              changedHandler();                          }                          if (ChangedDetailedHandler != null)                          {                              ChangedDetailedHandler(changes.ToArray());                          }                      }                  }              }              catch(Exception e)              {                  Tracing.TraceEvent(TraceEventType.Error' 0' e.ToString());              }
Magic Number,System.IO.FileSystem,PollingWatcher,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PollingWatcher.cs,TimerHandler,The following statement contains a magic number: try {                  _stopwatch.Restart();                  var changes = ComputeChangesAndUpdateState();                  var lastCycleTicks = _stopwatch.ElapsedTicks;                  if (Tracing.Switch.ShouldTrace(TraceEventType.Information))                  {                      Tracing.TraceEvent(TraceEventType.Information' 1' "Last polling cycle {0}ms"' lastCycleTicks*1000/Stopwatch.Frequency);                      Tracing.TraceEvent(TraceEventType.Information' 6' "Changes detected {0}"' changes.Count);                  }                    var changedHandler = Changed;                  var ChangedDetailedHandler = ChangedDetailed;                    if (changedHandler != null || ChangedDetailedHandler != null)                  {                      if (!changes.IsEmpty)                      {                          if (changedHandler != null)                          {                              changedHandler();                          }                          if (ChangedDetailedHandler != null)                          {                              ChangedDetailedHandler(changes.ToArray());                          }                      }                  }              }              catch(Exception e)              {                  Tracing.TraceEvent(TraceEventType.Error' 0' e.ToString());              }
Magic Number,System.IO.FileSystem,PollingWatcher,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PollingWatcher.cs,TimerHandler,The following statement contains a magic number: if (Tracing.Switch.ShouldTrace(TraceEventType.Verbose))              {                  Tracing.TraceEvent(TraceEventType.Verbose' 3' "Number of names watched: {0}"' _state.Count);                  Tracing.TraceEvent(TraceEventType.Verbose' 4' "Number of directories watched: {0}"' _directories.Count);              }
Magic Number,System.IO.FileSystem,PollingWatcher,C:\repos\dotnet_corefxlab\src\System.IO.FileSystem.Watcher.Polling\System\IO\PollingWatcher.cs,TimerHandler,The following statement contains a magic number: if (Tracing.Switch.ShouldTrace(TraceEventType.Verbose))              {                  Tracing.TraceEvent(TraceEventType.Verbose' 3' "Number of names watched: {0}"' _state.Count);                  Tracing.TraceEvent(TraceEventType.Verbose' 4' "Number of directories watched: {0}"' _directories.Count);              }
