Implementation smell,Namespace,Class,File,Method,Description
Complex Method,System.Buffers,BufferReader,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader.cs,TryReadTo,Cyclomatic complexity of the method is 12
Complex Method,System.Buffers,BufferReader,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader.cs,TryReadTo,Cyclomatic complexity of the method is 9
Complex Method,System.Buffers,BufferReader,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader.cs,IsNextSlow,Cyclomatic complexity of the method is 8
Complex Method,System.Buffers.Writer,TransformationFormat,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Writer\TransformationFormat.cs,TryTransform,Cyclomatic complexity of the method is 9
Long Parameter List,System.Buffers,BufferReader,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader.cs,TryReadToSlow,The method has 5 parameters. Parameters: span' delimiter' delimiterEscape' index' advancePastDelimiter
Long Parameter List,System.Buffers,BufferReader,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader.cs,TryReadToSlow,The method has 5 parameters. Parameters: sequence' delimiter' delimiterEscape' index' advancePastDelimiter
Long Parameter List,System.Buffers,ReaderExtensions,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader_binary.cs,TryParseFixed,The method has 5 parameters. Parameters: reader' value' standardFormat' bufferSize' parseDelegate
Long Parameter List,System.Buffers,ReaderExtensions,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader_binary.cs,TryParseGreedy,The method has 5 parameters. Parameters: reader' value' standardFormat' bufferSize' parseDelegate
Long Statement,System.Buffers,BufferReader,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader.cs,GetFirstSpanSlow,The length of the statement  "                // No need to remove the FlagBitMask since (endIndex - startIndex) == (endIndex & ReadOnlySequence.IndexBitMask) - (startIndex & ReadOnlySequence.IndexBitMask) " is 159.
Long Statement,System.Buffers,BufferReader,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader.cs,TryReadToSlow,The length of the statement  "            if (!TryReadToInternal(out ReadOnlySequence<T> sequence' delimiter' advancePastDelimiter' CurrentSpan.Length - CurrentSpanIndex)) " is 129.
Long Statement,System.Buffers,BufferReader,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader.cs,TryReadToAnySlow,The length of the statement  "            if (!TryReadToAnyInternal(out ReadOnlySequence<T> sequence' delimiters' advancePastDelimiter' CurrentSpan.Length - CurrentSpanIndex)) " is 133.
Long Statement,System.Buffers.Writer,BufferWriter,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Writer\BufferWriter.cs,Write,The length of the statement  "                if(TextEncodings.Utf8.FromUtf16(MemoryMarshal.AsBytes(utf16Span)' utf8Span' out int consumed' out int written) == OperationStatus.Done) " is 135.
Complex Conditional,System.Buffers,BufferReader,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader.cs,AdvancePastAny,The conditional expression  "!value.Equals(value0) && !value.Equals(value1) && !value.Equals(value2) && !value.Equals(value3)"  is complex.
Magic Number,System.Buffers,BufferReader,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader.cs,TryReadTo,The following statement contains a magic number: priorEscape = escapeCount % 2 != 0;
Magic Number,System.Buffers,BufferReader,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader.cs,TryReadToAny,The following statement contains a magic number: int index = delimiters.Length == 2                  ? remaining.IndexOfAny(delimiters[0]' delimiters[1])                  : remaining.IndexOfAny(delimiters);
Magic Number,System.Buffers,BufferReader,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader.cs,TryReadToAnyInternal,The following statement contains a magic number: int index = delimiters.Length == 2                      ? remaining.IndexOfAny(delimiters[0]' delimiters[1])                      : remaining.IndexOfAny(delimiters);
Magic Number,System.Buffers,BufferReader,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader.cs,TryReadTo,The following statement contains a magic number: delimiter.Length * sizeof(T) < 512
Magic Number,System.Buffers,ReaderExtensions,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader_binary.cs,TryParseGreedy,The following statement contains a magic number: bufferSize = Math.Min(MaxParseBytes' bufferSize * 2);
Magic Number,System.Buffers,ReaderExtensions,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader_binary.cs,TryParse,The following statement contains a magic number: return TryParseGreedy(ref r' out v' f' 4' Utf8Parser.TryParse);
Magic Number,System.Buffers,ReaderExtensions,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader_binary.cs,TryParse,The following statement contains a magic number: return TryParseGreedy(ref r' out v' f' 5' Utf8Parser.TryParse);
Magic Number,System.Buffers,ReaderExtensions,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader_binary.cs,TryParse,The following statement contains a magic number: return TryParseGreedy(ref r' out v' f' 8' Utf8Parser.TryParse);
Magic Number,System.Buffers,ReaderExtensions,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader_binary.cs,TryParse,The following statement contains a magic number: return TryParseGreedy(ref r' out v' f' 7' Utf8Parser.TryParse);
Magic Number,System.Buffers,ReaderExtensions,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader_binary.cs,TryParse,The following statement contains a magic number: return TryParseGreedy(ref r' out v' f' 15' Utf8Parser.TryParse);
Magic Number,System.Buffers,ReaderExtensions,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader_binary.cs,TryParse,The following statement contains a magic number: return TryParseGreedy(ref r' out v' f' 14' Utf8Parser.TryParse);
Magic Number,System.Buffers,ReaderExtensions,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader_binary.cs,TryParse,The following statement contains a magic number: return TryParseGreedy(ref r' out v' f' 27' Utf8Parser.TryParse);
Magic Number,System.Buffers,ReaderExtensions,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Reader\BufferReader_binary.cs,TryParse,The following statement contains a magic number: return TryParseGreedy(ref r' out v' f' 27' Utf8Parser.TryParse);
Magic Number,System.Buffers.Writer,BufferWriter,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Writer\BufferWriter.cs,Resize,The following statement contains a magic number: desiredBufferSize = _buffer.Length * 2 + 1;
Magic Number,System.Buffers.Writer,BufferWriter,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Writer\BufferWriter.cs,Write,The following statement contains a magic number: character <= 127
Missing Default,System.Buffers.Writer,BufferWriter,D:\research\architectureSmells\repos\dotnet_corefxlab\src\System.Buffers.ReaderWriter\System\Buffers\Writer\BufferWriter.cs,Write,The following switch statement is missing a default case: switch (status)                  {                      case OperationStatus.Done:                          Advance(written);                          return;                      case OperationStatus.DestinationTooSmall:                          Advance(written);                          Enlarge();                          break;                      case OperationStatus.NeedMoreData:                      case OperationStatus.InvalidData:                          throw new ArgumentOutOfRangeException(nameof(value));                  }
