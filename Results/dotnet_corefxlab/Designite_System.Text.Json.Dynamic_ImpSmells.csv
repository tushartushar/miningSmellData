Implementation smell,Namespace,Class,File,Method,Description
Complex Method,System.Text.Json,JsonDynamicObject,C:\repos\dotnet_corefxlab\src\System.Text.Json.Dynamic\System\Text\Json\JsonDynamicObject.cs,TryFormat,Cyclomatic complexity of the method is 9
Long Parameter List,System.Text.Json,Utf8SpanExtensions,C:\repos\dotnet_corefxlab\src\System.Text.Json.Dynamic\System\Text\Json\JsonDynamicObject.cs,TryFormat,The method has 5 parameters. Parameters: str' buffer' written' format' symbolTable
Long Parameter List,System.Text.Json,Utf8SpanExtensions,C:\repos\dotnet_corefxlab\src\System.Text.Json.Dynamic\System\Text\Json\JsonDynamicObject.cs,TryFormatQuotedString,The method has 5 parameters. Parameters: str' buffer' written' format' symbolTable
Long Statement,System.Text.Json,JsonDynamicObject,C:\repos\dotnet_corefxlab\src\System.Text.Json.Dynamic\System\Text\Json\JsonDynamicObject.cs,Parse,The length of the statement  "                            case JsonValueType.Object: // TODO: could this be lazy? Could this reuse the root JsonObject (which would store non-allocating JsonDom)? " is 136.
Magic Number,System.Text.Json,JsonDynamicObject,C:\repos\dotnet_corefxlab\src\System.Text.Json.Dynamic\System\Text\Json\JsonDynamicObject.cs,Parse,The following statement contains a magic number: if(expectedNumberOfProperties == -1) { expectedNumberOfProperties = utf8.Length >> 3; }
