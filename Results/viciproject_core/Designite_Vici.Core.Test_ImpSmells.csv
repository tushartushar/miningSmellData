Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Vici.Core.Test,JsonSeralizerTestFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JsonSeralizerTestFixture.cs,TestDate,The length of the statement  "            Assert.AreEqual("\"" + date.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ssZ") + "\""' JsonSerializer.ToJson(date' JsonDateFormat.UtcISO)); " is 139.
Long Statement,Vici.Core.Test,JsonSeralizerTestFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JsonSeralizerTestFixture.cs,TestCircularReferences,The length of the statement  "            Assert.AreEqual("{\"Id\":\"A\"'\"Children\":[{\"Id\":\"A1\"'\"Parent\":null'\"Others\":[null'{\"Id\":\"B\"'\"Children\":null}]}]}"'json); " is 137.
Long Statement,Vici.Core.Test,NotifierTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\NotifierTest.cs,CreateNotifierWithTypedSubscriptions,The length of the statement  "            notifier.Subscribe("x"' delegate(Notification<string> notification) { _notificationResult += notification.Payload + "B"; }); " is 124.
Long Statement,Vici.Core.Test,NotifierTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\NotifierTest.cs,CreateNotifierWithTypedSubscriptions,The length of the statement  "            notifier.Subscribe("x|y"' delegate(Notification<string> notification) { _notificationResult += notification.Payload + "C"; }); " is 126.
Long Statement,Vici.Core.Test,NotifierTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\NotifierTest.cs,CreateNotifierWithTypedSubscriptions,The length of the statement  "            notifier.Subscribe("y|z"' delegate(Notification<string> notification) { _notificationResult += notification.Payload + "D"; }); " is 126.
Long Statement,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexExpressions,The length of the statement  "            Assert.AreEqual(435' _parser.Evaluate<int>("Math.Max(Data.Method2(Data.Int1+10'300)'Data.Method1(Data.Int1))+(\"x\" + 5).Length")); " is 131.
Long Statement,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ExpressionTree,The length of the statement  "            expr.Expression = Exp.Add(TokenPosition.Unknown' Exp.Value(TokenPosition.Unknown' 4)' Exp.Value(TokenPosition.Unknown' 5)); " is 123.
Long Statement,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ExpressionTree,The length of the statement  "            expr.Expression = Exp.Add(TokenPosition.Unknown' Exp.Add(TokenPosition.Unknown' Exp.Value(TokenPosition.Unknown' 4)' Exp.Value(TokenPosition.Unknown' (long)5))' Exp.Value(TokenPosition.Unknown' 6)); " is 198.
Long Statement,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ExpressionTree,The length of the statement  "            expr.Expression = Exp.Op(TokenPosition.Unknown' "<<"' Exp.Value(TokenPosition.Unknown' (long)4)' Exp.Value(TokenPosition.Unknown' 2)); " is 134.
Long Statement,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,TestForeachIntsTwice_ProMesh,The length of the statement  "            string input = @"<!--{{foreach x in intList}}-->{{x}}/{{x*2}}/<!--{{end}}-->.. <!--{{foreach x in intList}}-->{{x}}/{{x*2}}/<!--{{end}}-->"; " is 140.
Long Statement,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,Test_Macro1_ProMesh,The length of the statement  "            string input = @"<!--{{macro TestMacro}}-->{{x*2}}<!--{{end}}--><!--{{call TestMacro @x=5}}-->'<!--{{ call TestMacro @x=7 }}-->"; " is 129.
Long Statement,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,Test_Macro2_Curly,The length of the statement  "            string input = @"{{macro TestMacro}}{{x*2}}({{call AnotherMacro @y=x}}){{end}}{{call TestMacro @x=5}}'{{call TestMacro @x=7}}{{macro AnotherMacro}}{{y*5}}{{end}}"; " is 163.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToInt,The length of the statement  "            RunTests(new Dictionary<Enum' int> { { _TestByteEnum.Zero' 0 }' { _TestByteEnum.One' 1 }' { _TestByteEnum.Two' 2}' {_TestByteEnum.Big' Byte.MaxValue} }); " is 153.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToInt,The length of the statement  "            RunTests(new Dictionary<Enum' int> { { _TestIntEnum.Zero' 0 }' { _TestIntEnum.One' 1 }' { _TestIntEnum.Two' 2 }' { _TestIntEnum.Big' Int32.MaxValue } }); " is 153.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToInt,The length of the statement  "            RunTests(new Dictionary<Enum' int> { { _TestLongEnum.Zero' 0 }' { _TestLongEnum.One' 1 }' { _TestLongEnum.Two' 2 }' { _TestLongEnum.Big' 0 } }); " is 144.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToInt,The length of the statement  "            RunTests(new Dictionary<Enum' int?> { { _TestByteEnum.Zero' 0 }' { _TestByteEnum.One' 1 }' { _TestByteEnum.Two' 2 }' { _TestByteEnum.Big' Byte.MaxValue } }); " is 157.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToInt,The length of the statement  "            RunTests(new Dictionary<Enum' int?> { { _TestIntEnum.Zero' 0 }' { _TestIntEnum.One' 1 }' { _TestIntEnum.Two' 2 }' { _TestIntEnum.Big' Int32.MaxValue } }); " is 154.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToInt,The length of the statement  "            RunTests(new Dictionary<Enum' int?> { { _TestLongEnum.Zero' 0 }' { _TestLongEnum.One' 1 }' { _TestLongEnum.Two' 2 }' { _TestLongEnum.Big' null } }); " is 148.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToByte,The length of the statement  "            RunTests(new Dictionary<Enum' byte> { { _TestByteEnum.Zero' 0 }' { _TestByteEnum.One' 1 }' { _TestByteEnum.Two' 2 }' { _TestByteEnum.Big' Byte.MaxValue } }); " is 157.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToByte,The length of the statement  "            RunTests(new Dictionary<Enum' byte> { { _TestIntEnum.Zero' 0 }' { _TestIntEnum.One' 1 }' { _TestIntEnum.Two' 2 }' { _TestIntEnum.Big' 0 } }); " is 141.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToByte,The length of the statement  "            RunTests(new Dictionary<Enum' byte> { { _TestLongEnum.Zero' 0 }' { _TestLongEnum.One' 1 }' { _TestLongEnum.Two' 2 }' { _TestLongEnum.Big' 0 } }); " is 145.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToByte,The length of the statement  "            RunTests(new Dictionary<Enum' byte?> { { _TestByteEnum.Zero' 0 }' { _TestByteEnum.One' 1 }' { _TestByteEnum.Two' 2 }' { _TestByteEnum.Big' Byte.MaxValue } }); " is 158.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToByte,The length of the statement  "            RunTests(new Dictionary<Enum' byte?> { { _TestIntEnum.Zero' 0 }' { _TestIntEnum.One' 1 }' { _TestIntEnum.Two' 2 }' { _TestIntEnum.Big' null } }); " is 145.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToByte,The length of the statement  "            RunTests(new Dictionary<Enum' byte?> { { _TestLongEnum.Zero' 0 }' { _TestLongEnum.One' 1 }' { _TestLongEnum.Two' 2 }' { _TestLongEnum.Big' null } }); " is 149.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToLong,The length of the statement  "            RunTests(new Dictionary<Enum' long> { { _TestByteEnum.Zero' 0 }' { _TestByteEnum.One' 1 }' { _TestByteEnum.Two' 2 }' { _TestByteEnum.Big' Byte.MaxValue } }); " is 157.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToLong,The length of the statement  "            RunTests(new Dictionary<Enum' long> { { _TestIntEnum.Zero' 0 }' { _TestIntEnum.One' 1 }' { _TestIntEnum.Two' 2 }' { _TestIntEnum.Big' Int32.MaxValue } }); " is 154.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToLong,The length of the statement  "            RunTests(new Dictionary<Enum' long> { { _TestLongEnum.Zero' 0 }' { _TestLongEnum.One' 1 }' { _TestLongEnum.Two' 2 }' { _TestLongEnum.Big' Int64.MaxValue } }); " is 158.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToLong,The length of the statement  "            RunTests(new Dictionary<Enum' long?> { { _TestByteEnum.Zero' 0 }' { _TestByteEnum.One' 1 }' { _TestByteEnum.Two' 2 }' { _TestByteEnum.Big' Byte.MaxValue } }); " is 158.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToLong,The length of the statement  "            RunTests(new Dictionary<Enum' long?> { { _TestIntEnum.Zero' 0 }' { _TestIntEnum.One' 1 }' { _TestIntEnum.Two' 2 }' { _TestIntEnum.Big' Int32.MaxValue } }); " is 155.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToLong,The length of the statement  "            RunTests(new Dictionary<Enum' long?> { { _TestLongEnum.Zero' 0 }' { _TestLongEnum.One' 1 }' { _TestLongEnum.Two' 2 }' { _TestLongEnum.Big' Int64.MaxValue } }); " is 159.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The length of the statement  "            RunTests(new Dictionary<int' _TestByteEnum> { { 0'_TestByteEnum.Zero }' { 1'_TestByteEnum.One }' { 2'_TestByteEnum.Two }' { 999' _TestByteEnum.Zero } }); " is 153.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The length of the statement  "            RunTests(new Dictionary<int' _TestByteEnum?> { { 0' _TestByteEnum.Zero }' { 1' _TestByteEnum.One }' { 2' _TestByteEnum.Two }' { 999' null } }); " is 143.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The length of the statement  "            RunTests(new Dictionary<int' _TestIntEnum> { { 0' _TestIntEnum.Zero }' { 1' _TestIntEnum.One }' { 2' _TestIntEnum.Two }' { 999' _TestIntEnum.Zero } }); " is 151.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The length of the statement  "            RunTests(new Dictionary<int' _TestIntEnum?> { { 0' _TestIntEnum.Zero }' { 1' _TestIntEnum.One }' { 2' _TestIntEnum.Two }' { 999' null } }); " is 139.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The length of the statement  "            RunTests(new Dictionary<int' _TestLongEnum> { { 0' _TestLongEnum.Zero }' { 1' _TestLongEnum.One }' { 2' _TestLongEnum.Two }' { 999' _TestLongEnum.Zero } }); " is 156.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The length of the statement  "            RunTests(new Dictionary<int' _TestLongEnum?> { { 0' _TestLongEnum.Zero }' { 1' _TestLongEnum.One }' { 2' _TestLongEnum.Two }' { 999' null } }); " is 143.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The length of the statement  "            RunTests(new Dictionary<double' _TestByteEnum> { { 0' _TestByteEnum.Zero }' { 1' _TestByteEnum.One }' { 2' _TestByteEnum.Two }' { 999' _TestByteEnum.Zero } }); " is 159.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The length of the statement  "            RunTests(new Dictionary<double' _TestByteEnum?> { { 0' _TestByteEnum.Zero }' { 1' _TestByteEnum.One }' { 2' _TestByteEnum.Two }' { 999' null } }); " is 146.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The length of the statement  "            RunTests(new Dictionary<double' _TestIntEnum> { { 0' _TestIntEnum.Zero }' { 1' _TestIntEnum.One }' { 2' _TestIntEnum.Two }' { 999' _TestIntEnum.Zero } }); " is 154.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The length of the statement  "            RunTests(new Dictionary<double' _TestIntEnum?> { { 0' _TestIntEnum.Zero }' { 1' _TestIntEnum.One }' { 2' _TestIntEnum.Two }' { 999' null } }); " is 142.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The length of the statement  "            RunTests(new Dictionary<double' _TestLongEnum> { { 0' _TestLongEnum.Zero }' { 1' _TestLongEnum.One }' { 2' _TestLongEnum.Two }' { 999' _TestLongEnum.Zero } }); " is 159.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The length of the statement  "            RunTests(new Dictionary<double' _TestLongEnum?> { { 0' _TestLongEnum.Zero }' { 1' _TestLongEnum.One }' { 2' _TestLongEnum.Two }' { 999' null } }); " is 146.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToEnum,The length of the statement  "            RunTests(new Dictionary<string' _TestByteEnum> { { "0"' _TestByteEnum.Zero }' { "1"' _TestByteEnum.One }' { "2"' _TestByteEnum.Two }' { "999"' _TestByteEnum.Zero }' { "Zero"' _TestByteEnum.Zero }' { "One"' _TestByteEnum.One }' { "Two"' _TestByteEnum.Two }' { ""' _TestByteEnum.Zero }' { "X"' _TestByteEnum.Zero } }); " is 316.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToEnum,The length of the statement  "            RunTests(new Dictionary<string' _TestByteEnum?> { { "0"' _TestByteEnum.Zero }' { "1"' _TestByteEnum.One }' { "2"' _TestByteEnum.Two }' { "999"' null }' { "Zero"' _TestByteEnum.Zero }' { "One"' _TestByteEnum.One }' { "Two"' _TestByteEnum.Two }' { ""' null }' { "X"' null } }); " is 275.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToEnum,The length of the statement  "            RunTests(new Dictionary<string' _TestIntEnum> { { "0"' _TestIntEnum.Zero }' { "1"' _TestIntEnum.One }' { "2"' _TestIntEnum.Two }' { "999"' _TestIntEnum.Zero }' { "Zero"' _TestIntEnum.Zero }' { "One"' _TestIntEnum.One }' { "Two"' _TestIntEnum.Two }' { ""' _TestIntEnum.Zero }' { "X"' _TestIntEnum.Zero } }); " is 306.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToEnum,The length of the statement  "            RunTests(new Dictionary<string' _TestIntEnum?> { { "0"' _TestIntEnum.Zero }' { "1"' _TestIntEnum.One }' { "2"' _TestIntEnum.Two }' { "999"' null }' { "Zero"' _TestIntEnum.Zero }' { "One"' _TestIntEnum.One }' { "Two"' _TestIntEnum.Two }' { ""' null }' { "X"' null } }); " is 268.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToEnum,The length of the statement  "            RunTests(new Dictionary<string' _TestLongEnum> { { "0"' _TestLongEnum.Zero }' { "1"' _TestLongEnum.One }' { "2"' _TestLongEnum.Two }' { "999"' _TestLongEnum.Zero }' { "Zero"' _TestLongEnum.Zero }' { "One"' _TestLongEnum.One }' { "Two"' _TestLongEnum.Two }' { ""' _TestLongEnum.Zero }' { "X"' _TestLongEnum.Zero } }); " is 316.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToEnum,The length of the statement  "            RunTests(new Dictionary<string' _TestLongEnum?> { { "0"' _TestLongEnum.Zero }' { "1"' _TestLongEnum.One }' { "2"' _TestLongEnum.Two }' { "999"' null }' { "Zero"' _TestLongEnum.Zero }' { "One"' _TestLongEnum.One }' { "Two"' _TestLongEnum.Two }' { ""' null }' { "X"' null } }); " is 275.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The length of the statement  "            RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } }); " is 334.
Long Statement,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The length of the statement  "            RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } }); " is 309.
Long Statement,Vici.Core.Test,StringConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\StringConverterTest.cs,TestTypes,The length of the statement  "            Type[] types = new [] { typeof(int)' typeof(string)' typeof(bool)' typeof(TestEnum)' typeof(double)' typeof(EmptyEnum) }; " is 121.
Long Statement,Vici.Core.Test,Tokenizer_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Tokenizer_Fixture.cs,TestAnySequence,The length of the statement  "            ITokenMatcher alphaMatcher = new SequenceOfAnyCharMatcher("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789"); " is 125.
Empty Catch Block,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,PropertyAssignmentNotAllowed,The method has an empty catch block.
Empty Catch Block,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,NotFalsyNull,The method has an empty catch block.
Empty Catch Block,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,NotFalsyEmptyString,The method has an empty catch block.
Empty Catch Block,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,NotFalsyString,The method has an empty catch block.
Empty Catch Block,Vici.Core.Test,Tokenizer_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Tokenizer_Fixture.cs,BadToken,The method has an empty catch block.
Magic Number,Vici.Core.Test,ConfigTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ConfigTest.cs,TestStaticClassWithoutKey,The following statement contains a magic number: Assert.AreEqual(99' StaticConfig.SubObject1.TestInt1);
Magic Number,Vici.Core.Test,ConfigTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ConfigTest.cs,TestStaticClassWithoutKey,The following statement contains a magic number: Assert.AreEqual(88' StaticConfig2.SubObject1.TestInt1);
Magic Number,Vici.Core.Test,ConfigTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ConfigTest.cs,TestStaticClassWithoutKey,The following statement contains a magic number: Assert.AreEqual(99' config.SubObject1.TestInt1);
Magic Number,Vici.Core.Test,ConfigTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ConfigTest.cs,TestStaticClassWithoutKey,The following statement contains a magic number: Assert.AreEqual(3' StaticConfig.StringValues.Count);
Magic Number,Vici.Core.Test,ConfigTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ConfigTest.cs,TestStaticClassWithoutKey,The following statement contains a magic number: Assert.AreEqual(2' StaticConfig.IntValues["Val2"]);
Magic Number,Vici.Core.Test,ConfigTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ConfigTest.cs,TestStaticClassWithoutKey,The following statement contains a magic number: Assert.AreEqual(3' StaticConfig.IntValues["Val3"]);
Magic Number,Vici.Core.Test,ConfigTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ConfigTest.cs,TestStaticClassWithoutKey,The following statement contains a magic number: Assert.AreEqual(3' StaticConfig.IntValues.Count);
Magic Number,Vici.Core.Test,ConfigTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ConfigTest.cs,TestStaticClassWithKey,The following statement contains a magic number: Assert.AreEqual(88' StaticConfig2.SubObject1.TestInt1);
Magic Number,Vici.Core.Test,ConfigTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ConfigTest.cs,TestInstanceClassWithoutKey,The following statement contains a magic number: Assert.AreEqual(99' config.SubObject1.TestInt1);
Magic Number,Vici.Core.Test,ConfigTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ConfigTest.cs,TestInstanceClassWithoutKey,The following statement contains a magic number: Assert.AreEqual(3' config.StringValues.Count);
Magic Number,Vici.Core.Test,ConfigTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ConfigTest.cs,TestInstanceClassWithoutKey,The following statement contains a magic number: Assert.AreEqual(2' config.IntValues["Val2"]);
Magic Number,Vici.Core.Test,ConfigTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ConfigTest.cs,TestInstanceClassWithoutKey,The following statement contains a magic number: Assert.AreEqual(3' config.IntValues["Val3"]);
Magic Number,Vici.Core.Test,ConfigTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ConfigTest.cs,TestInstanceClassWithoutKey,The following statement contains a magic number: Assert.AreEqual(3' config.IntValues.Count);
Magic Number,Vici.Core.Test,ConfigTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ConfigTest.cs,TestXmlConfigFile,The following statement contains a magic number: Assert.AreEqual(21' config.Prop1);
Magic Number,Vici.Core.Test,DynamicObjectTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\DynamicObjectTest.cs,TestPropertyOfMultipleLinkedObject,The following statement contains a magic number: var obj2 = new { Value = 15.5m };
Magic Number,Vici.Core.Test,DynamicObjectTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\DynamicObjectTest.cs,TestPropertyOfMultipleLinkedObject,The following statement contains a magic number: Assert.AreEqual(15.5m' viewData["Value"]);
Magic Number,Vici.Core.Test,DynamicObjectTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\DynamicObjectTest.cs,TestPropertyOfMultipleLinkedObject,The following statement contains a magic number: Assert.AreEqual(15.5m' value);
Magic Number,Vici.Core.Test,DynamicObjectTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\DynamicObjectTest.cs,TestApply,The following statement contains a magic number: var obj2 = new { Value = 15.5m };
Magic Number,Vici.Core.Test,DynamicObjectTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\DynamicObjectTest.cs,TestApply,The following statement contains a magic number: Assert.AreEqual(15.5m' viewData["Value"]);
Magic Number,Vici.Core.Test,DynamicObjectTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\DynamicObjectTest.cs,TestApply,The following statement contains a magic number: Assert.AreEqual(15.5m' value);
Magic Number,Vici.Core.Test,JSONParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JSONParserFixture.cs,SimpleTypedObject,The following statement contains a magic number: Assert.AreEqual(4500.20m'person.salary);
Magic Number,Vici.Core.Test,JSONParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JSONParserFixture.cs,SimpleTypedObject,The following statement contains a magic number: Assert.AreEqual(2'person.children.Length);
Magic Number,Vici.Core.Test,JSONParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JSONParserFixture.cs,ComplexDictionary,The following statement contains a magic number: Assert.AreEqual(2' jsonObject["menu"].Keys.Length);
Magic Number,Vici.Core.Test,JSONParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JSONParserFixture.cs,ComplexDictionary,The following statement contains a magic number: Assert.AreEqual(22' jsonObject["menu"]["items"].AsArray().Length);
Magic Number,Vici.Core.Test,JSONParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JSONParserFixture.cs,ComplexDictionary,The following statement contains a magic number: Assert.AreEqual(22' jsonObject["menu.items"].AsArray().Length);
Magic Number,Vici.Core.Test,JSONParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JSONParserFixture.cs,ComplexDictionary,The following statement contains a magic number: Assert.AreEqual(22'jsonObject["menu.items"].Count());
Magic Number,Vici.Core.Test,JSONParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JSONParserFixture.cs,ComplexDictionary,The following statement contains a magic number: Assert.IsTrue(jsonObject["menu"]["items"][2].IsNull);
Magic Number,Vici.Core.Test,JsonSeralizerTestFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JsonSeralizerTestFixture.cs,TestArray,The following statement contains a magic number: string json = JsonSerializer.ToJson(new[] { 1' 2' 3 });
Magic Number,Vici.Core.Test,JsonSeralizerTestFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JsonSeralizerTestFixture.cs,TestArray,The following statement contains a magic number: string json = JsonSerializer.ToJson(new[] { 1' 2' 3 });
Magic Number,Vici.Core.Test,JsonSeralizerTestFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JsonSeralizerTestFixture.cs,TestList,The following statement contains a magic number: string json = JsonSerializer.ToJson(new List<int>(new[] { 1' 2' 3 }));
Magic Number,Vici.Core.Test,JsonSeralizerTestFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JsonSeralizerTestFixture.cs,TestList,The following statement contains a magic number: string json = JsonSerializer.ToJson(new List<int>(new[] { 1' 2' 3 }));
Magic Number,Vici.Core.Test,JsonSeralizerTestFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JsonSeralizerTestFixture.cs,TestInt,The following statement contains a magic number: Assert.AreEqual("123"' JsonSerializer.ToJson(123));
Magic Number,Vici.Core.Test,JsonSeralizerTestFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JsonSeralizerTestFixture.cs,TestDouble,The following statement contains a magic number: Assert.AreEqual("12.34"' JsonSerializer.ToJson(12.34));
Magic Number,Vici.Core.Test,JsonSeralizerTestFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JsonSeralizerTestFixture.cs,TestDictionary,The following statement contains a magic number: dic["b"] = 2;
Magic Number,Vici.Core.Test,JsonSeralizerTestFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JsonSeralizerTestFixture.cs,TestDate,The following statement contains a magic number: DateTime utcBase = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Vici.Core.Test,JsonSeralizerTestFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JsonSeralizerTestFixture.cs,TestDate,The following statement contains a magic number: date = new DateTime(1999' 12' 1' 10' 0' 0' DateTimeKind.Utc);
Magic Number,Vici.Core.Test,JsonSeralizerTestFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JsonSeralizerTestFixture.cs,TestDate,The following statement contains a magic number: date = new DateTime(1999' 12' 1' 10' 0' 0' DateTimeKind.Utc);
Magic Number,Vici.Core.Test,JsonSeralizerTestFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JsonSeralizerTestFixture.cs,TestDate,The following statement contains a magic number: date = new DateTime(1999' 12' 1' 10' 0' 0' DateTimeKind.Utc);
Magic Number,Vici.Core.Test,JsonSeralizerTestFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Json\JsonSeralizerTestFixture.cs,TestDate,The following statement contains a magic number: date = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Vici.Core.Test,ObjectMappedTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ObjectMappedTest.cs,ByCallback,The following statement contains a magic number: Assert.AreEqual(101'obj.IntField);
Magic Number,Vici.Core.Test,ObjectMappedTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ObjectMappedTest.cs,ByCallback,The following statement contains a magic number: Assert.AreEqual(102'obj.IntProperty);
Magic Number,Vici.Core.Test,ObjectMappedTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ObjectMappedTest.cs,ByCallback,The following statement contains a magic number: Assert.AreEqual(new DateTime(1970'1'1).AddSeconds(100)' obj.DateField);
Magic Number,Vici.Core.Test,ObjectMappedTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ObjectMappedTest.cs,ByCallback,The following statement contains a magic number: Assert.AreEqual(new DateTime(1970'1'1).AddSeconds(100)' obj.DateField);
Magic Number,Vici.Core.Test,ObjectMappedTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ObjectMappedTest.cs,ByDictionary,The following statement contains a magic number: Assert.AreEqual(101' obj.IntField);
Magic Number,Vici.Core.Test,ObjectMappedTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ObjectMappedTest.cs,ByDictionary,The following statement contains a magic number: Assert.AreEqual(102' obj.IntProperty);
Magic Number,Vici.Core.Test,ObjectMappedTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ObjectMappedTest.cs,ByDictionary,The following statement contains a magic number: Assert.AreEqual(new DateTime(1970' 1' 1).AddSeconds(100)' obj.DateField);
Magic Number,Vici.Core.Test,ObjectMappedTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ObjectMappedTest.cs,ByDictionary,The following statement contains a magic number: Assert.AreEqual(new DateTime(1970' 1' 1).AddSeconds(100)' obj.DateField);
Magic Number,Vici.Core.Test,ObjectMappedTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ObjectMappedTest.cs,MismatchedCase_CaseInsensitive,The following statement contains a magic number: Assert.AreEqual(101' obj.IntField);
Magic Number,Vici.Core.Test,ObjectMappedTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ObjectMappedTest.cs,MismatchedCase_CaseInsensitive,The following statement contains a magic number: Assert.AreEqual(102' obj.IntProperty);
Magic Number,Vici.Core.Test,ObjectMappedTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ObjectMappedTest.cs,MismatchedCase_CaseInsensitive,The following statement contains a magic number: Assert.AreEqual(new DateTime(1970' 1' 1).AddSeconds(100)' obj.DateField);
Magic Number,Vici.Core.Test,ObjectMappedTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\ObjectMappedTest.cs,MismatchedCase_CaseInsensitive,The following statement contains a magic number: Assert.AreEqual(new DateTime(1970' 1' 1).AddSeconds(100)' obj.DateField);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SetupFixture,The following statement contains a magic number: dataObject.Int1 = 123;
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SetupFixture,The following statement contains a magic number: _context.Set("Value10"' 10' typeof(int));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SetupFixture,The following statement contains a magic number: _context.Set("NullableValue5"' 5' typeof(int?));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SetupFixture,The following statement contains a magic number: _context.Set("MyArray"' new int[] { 1' 2' 4' 8' 16 });
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SetupFixture,The following statement contains a magic number: _context.Set("MyArray"' new int[] { 1' 2' 4' 8' 16 });
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SetupFixture,The following statement contains a magic number: _context.Set("MyArray"' new int[] { 1' 2' 4' 8' 16 });
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SetupFixture,The following statement contains a magic number: _context.Set("MyArray"' new int[] { 1' 2' 4' 8' 16 });
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SetupFixture,The following statement contains a magic number: _context.Set("MyArray2"' new int['] { { 1' 2 }' { 2' 4 }' { 4' 8 }' { 8' 16 }' { 16' 32 } });
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SetupFixture,The following statement contains a magic number: _context.Set("MyArray2"' new int['] { { 1' 2 }' { 2' 4 }' { 4' 8 }' { 8' 16 }' { 16' 32 } });
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SetupFixture,The following statement contains a magic number: _context.Set("MyArray2"' new int['] { { 1' 2 }' { 2' 4 }' { 4' 8 }' { 8' 16 }' { 16' 32 } });
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SetupFixture,The following statement contains a magic number: _context.Set("MyArray2"' new int['] { { 1' 2 }' { 2' 4 }' { 4' 8 }' { 8' 16 }' { 16' 32 } });
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SetupFixture,The following statement contains a magic number: _context.Set("MyArray2"' new int['] { { 1' 2 }' { 2' 4 }' { 4' 8 }' { 8' 16 }' { 16' 32 } });
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SetupFixture,The following statement contains a magic number: _context.Set("MyArray2"' new int['] { { 1' 2 }' { 2' 4 }' { 4' 8 }' { 8' 16 }' { 16' 32 } });
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SetupFixture,The following statement contains a magic number: _context.Set("MyArray2"' new int['] { { 1' 2 }' { 2' 4 }' { 4' 8 }' { 8' 16 }' { 16' 32 } });
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SetupFixture,The following statement contains a magic number: _context.Set("MyArray2"' new int['] { { 1' 2 }' { 2' 4 }' { 4' 8 }' { 8' 16 }' { 16' 32 } });
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SetupFixture,The following statement contains a magic number: _context.Set("MyArray2"' new int['] { { 1' 2 }' { 2' 4 }' { 4' 8 }' { 8' 16 }' { 16' 32 } });
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SetupFixture,The following statement contains a magic number: _context.Set("f"' new Func<int'int>(i => i*2));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,Func,The following statement contains a magic number: return i * 5;
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexExpressions,The following statement contains a magic number: Assert.AreEqual(435' _parser.Evaluate<int>("Math.Max(Data.Method2(Data.Int1+10'300)'Data.Method1(Data.Int1))+(\"x\" + 5).Length"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexExpressions,The following statement contains a magic number: Assert.AreEqual(17' _parser.Evaluate<int>("Data.Method2(Data.Method2(3'4)'Data.Method1(5))"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexExpressions,The following statement contains a magic number: Assert.AreEqual(100' _parser.Evaluate<int>("Max(Max(100'5)'Func(10))"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexExpressions,The following statement contains a magic number: Assert.AreEqual(1000' _parser.Evaluate<int>("Max(Max(100'5)'Func(200))"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,MemberMethods,The following statement contains a magic number: Assert.AreEqual(2' _parser.Evaluate<int>("Data.Method0()"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,MemberMethods,The following statement contains a magic number: Assert.AreEqual(2' _parser.Evaluate<int>("Math.Max(1'2)"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,MemberMethods,The following statement contains a magic number: Assert.AreEqual(21' _parser.Evaluate<int>("Data.Method0() + Data.Method1(5) + Data.Method2(5'4)"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,NumericLiterals,The following statement contains a magic number: Assert.AreEqual(10000000000' _parser.Evaluate<long>("10000000000"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ObjectCreation,The following statement contains a magic number: Assert.AreEqual(5' _parser.Evaluate<int>("(new DataClass(5)).Int1"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ObjectCreation,The following statement contains a magic number: Assert.AreEqual(5' _parser.Evaluate<int>("new DataClass(5).Int1"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ObjectCreation,The following statement contains a magic number: Assert.AreEqual(5' _parser.Evaluate<int>("Math.Max(new DataClass(3+2).Int1'3)"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,Delegates,The following statement contains a magic number: Assert.AreEqual(10' _parser.Evaluate<int>("Func(2)"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,Delegates,The following statement contains a magic number: Assert.AreEqual(5' _parser.Evaluate<int>("Max(4'5)"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,OperatorPrecedence,The following statement contains a magic number: Assert.AreEqual(2' _parser.Evaluate<int>("(5-4)*2"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,OperatorPrecedence,The following statement contains a magic number: Assert.AreEqual(13' _parser.Evaluate<int>("5+4*2"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,OperatorPrecedence,The following statement contains a magic number: Assert.AreEqual(22' _parser.Evaluate<int>("5*4+2"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,OperatorPrecedence,The following statement contains a magic number: Assert.AreEqual(18' _parser.Evaluate<int>("(5+4)*2"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,UnaryMinus,The following statement contains a magic number: Assert.AreEqual(-2' _parser.Evaluate<int>("-2"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,UnaryMinus,The following statement contains a magic number: Assert.AreEqual(3' _parser.Evaluate<int>("5+-2"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,BitwiseComplement,The following statement contains a magic number: Assert.AreEqual(~2' _parser.Evaluate<int>("~2"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,BitwiseComplement,The following statement contains a magic number: Assert.AreEqual(5 + ~2' _parser.Evaluate<int>("5+~2"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,BitwiseComplement,The following statement contains a magic number: Assert.AreEqual(5 + ~2' _parser.Evaluate<int>("5+~2"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,BitwiseComplement,The following statement contains a magic number: Assert.AreEqual(~(3 - 2)' _parser.Evaluate<int>("~(3 - 2)"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,BitwiseComplement,The following statement contains a magic number: Assert.AreEqual(~(3 - 2)' _parser.Evaluate<int>("~(3 - 2)"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,StaticFields,The following statement contains a magic number: Assert.AreEqual(500' _parser.Evaluate<int>("DataClass.Static1"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,StaticFields,The following statement contains a magic number: Assert.AreEqual(501' _parser.Evaluate<int>("DataClass.Static2"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,NullableLifting,The following statement contains a magic number: Assert.AreEqual(15' _parser.Evaluate<int?>("Value10 + NullableValue5"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,Indexing,The following statement contains a magic number: Assert.AreEqual(30' _parser.Evaluate<int>("Data[Func(5)'5]"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ArrayIndexing,The following statement contains a magic number: Assert.AreEqual(8' _parser.Evaluate<int>("MyArray[3]"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ArrayIndexing,The following statement contains a magic number: Assert.AreEqual(8' _parser.Evaluate<int>("MyArray2[2'1]"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ArrayIndexing,The following statement contains a magic number: Assert.AreEqual(16' _parser.Evaluate<int>("MyArray[Data.Method0()+2]"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ArrayIndexing,The following statement contains a magic number: Assert.AreEqual(8' _parser.Evaluate<int>("MyArray2[Data.Method0()+1'0]"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,Ternary,The following statement contains a magic number: Assert.AreEqual(2' _parser.Evaluate<int>("false ? 1:2"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,Ternary,The following statement contains a magic number: Assert.AreEqual(2' _parser.Evaluate<int>("a!=1 ? 1 : 2"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,Ternary,The following statement contains a magic number: _context.Set("a"' 2);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,Ternary,The following statement contains a magic number: _context.Set("a"' 3);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,Ternary,The following statement contains a magic number: _context.Set("a"' 56443);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,Comparisons,The following statement contains a magic number: _context.Set("ShortValue"' 4' typeof(short));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,NullValueOperator,The following statement contains a magic number: Assert.AreEqual(10' _parser.Evaluate<int>("NullableValueNull ?? 10"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,NullValueOperator,The following statement contains a magic number: Assert.AreEqual(5' _parser.Evaluate<int>("NullableValue5 ?? 10"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,Assignment,The following statement contains a magic number: Assert.AreEqual(5' _parser.Evaluate<int>("aaa = 5"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,Assignment,The following statement contains a magic number: Assert.AreEqual(100' _parser.Evaluate<int>("aaa = 100"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,Assignment,The following statement contains a magic number: Assert.AreEqual(200' _parser.Evaluate<int>("aaa = bbb = 100*2"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,PropertyAssignmentNotAllowed,The following statement contains a magic number: Assert.AreEqual(123' _parser.Evaluate<int>("Data.Int1 = 123"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,PropertyAssignment,The following statement contains a magic number: Assert.AreEqual(123' _parser.Evaluate<int>("Data.Int1 = 123"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,PropertyAssignment,The following statement contains a magic number: Assert.AreEqual(123'_parser.Evaluate<int>("Data.Int1"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ExpressionTree,The following statement contains a magic number: expr.Expression = Exp.Add(TokenPosition.Unknown' Exp.Value(TokenPosition.Unknown' 4)' Exp.Value(TokenPosition.Unknown' 5));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ExpressionTree,The following statement contains a magic number: expr.Expression = Exp.Add(TokenPosition.Unknown' Exp.Value(TokenPosition.Unknown' 4)' Exp.Value(TokenPosition.Unknown' 5));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ExpressionTree,The following statement contains a magic number: Assert.AreEqual(9' expr.Evaluate().Value);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ExpressionTree,The following statement contains a magic number: expr.Expression = Exp.Add(TokenPosition.Unknown' Exp.Add(TokenPosition.Unknown' Exp.Value(TokenPosition.Unknown' 4)' Exp.Value(TokenPosition.Unknown' (long)5))' Exp.Value(TokenPosition.Unknown' 6));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ExpressionTree,The following statement contains a magic number: expr.Expression = Exp.Add(TokenPosition.Unknown' Exp.Add(TokenPosition.Unknown' Exp.Value(TokenPosition.Unknown' 4)' Exp.Value(TokenPosition.Unknown' (long)5))' Exp.Value(TokenPosition.Unknown' 6));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ExpressionTree,The following statement contains a magic number: expr.Expression = Exp.Add(TokenPosition.Unknown' Exp.Add(TokenPosition.Unknown' Exp.Value(TokenPosition.Unknown' 4)' Exp.Value(TokenPosition.Unknown' (long)5))' Exp.Value(TokenPosition.Unknown' 6));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ExpressionTree,The following statement contains a magic number: Assert.AreEqual(15L' expr.Evaluate().Value);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ExpressionTree,The following statement contains a magic number: expr.Expression = Exp.Op(TokenPosition.Unknown' "<<"' Exp.Value(TokenPosition.Unknown' (long)4)' Exp.Value(TokenPosition.Unknown' 2));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ExpressionTree,The following statement contains a magic number: expr.Expression = Exp.Op(TokenPosition.Unknown' "<<"' Exp.Value(TokenPosition.Unknown' (long)4)' Exp.Value(TokenPosition.Unknown' 2));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ExpressionTree,The following statement contains a magic number: Assert.AreEqual(16L' expr.Evaluate().Value);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,NumRange,The following statement contains a magic number: Assert.AreEqual(6'_parser.Evaluate<int>("sum(1 ... 3)"));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,DynObject,The following statement contains a magic number: dynObj.Apply(new DataClass(5));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,DynObject,The following statement contains a magic number: Assert.AreEqual(2' _parser.Evaluate<int>("Method0()"'context));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,DynObject,The following statement contains a magic number: Assert.AreEqual(21' _parser.Evaluate<int>("Method0() + Method1(5) + Method2(Int1'4)"' context));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,SequenceWithReturn,The following statement contains a magic number: Assert.AreEqual(5'_parser.Evaluate<int>("f(1);return 5;f(2);"' context));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,IfWithReturn,The following statement contains a magic number: Assert.AreEqual(5'_parser.Evaluate<int>("if(1==1) { f(1); return 5; } f(2);"' context));
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexScript1,The following statement contains a magic number: int[] array = new int[50];
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexScript1,The following statement contains a magic number: Assert.AreEqual(2' array[1]);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexScript1,The following statement contains a magic number: Assert.AreEqual(3' array[2]);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexScript1,The following statement contains a magic number: Assert.AreEqual(3' array[2]);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexScript1,The following statement contains a magic number: Assert.AreEqual(4' array[3]);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexScript1,The following statement contains a magic number: Assert.AreEqual(4' array[3]);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexScript1,The following statement contains a magic number: Assert.AreEqual(5' array[4]);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexScript1,The following statement contains a magic number: Assert.AreEqual(5' array[4]);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexScript1,The following statement contains a magic number: Assert.AreEqual(6' array[5]);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexScript1,The following statement contains a magic number: Assert.AreEqual(6' array[5]);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexScript1,The following statement contains a magic number: Assert.AreEqual(7' array[6]);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexScript1,The following statement contains a magic number: Assert.AreEqual(7' array[6]);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexScript1,The following statement contains a magic number: Assert.AreEqual(8' array[7]);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexScript1,The following statement contains a magic number: Assert.AreEqual(8' array[7]);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexScript1,The following statement contains a magic number: Assert.AreEqual(9' array[8]);
Magic Number,Vici.Core.Test,CSharpParserFixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,ComplexScript1,The following statement contains a magic number: Assert.AreEqual(9' array[8]);
Magic Number,Vici.Core.Test,DataClass,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,Method0,The following statement contains a magic number: return 2;
Magic Number,Vici.Core.Test,DataClass,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\CSharpParserFixture.cs,Method1,The following statement contains a magic number: return x * 2;
Magic Number,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,Setup,The following statement contains a magic number: context.Set("doubleValue"' 20.5);
Magic Number,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,Setup,The following statement contains a magic number: context.Set("intList"' new int[] { 3' 4' 5 });
Magic Number,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,Setup,The following statement contains a magic number: context.Set("intList"' new int[] { 3' 4' 5 });
Magic Number,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,Setup,The following statement contains a magic number: context.Set("intList"' new int[] { 3' 4' 5 });
Magic Number,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,Setup,The following statement contains a magic number: context.Set("objList" ' new TestClass[] { new TestClass(1'"X1")' new TestClass(5'"X5") });
Magic Number,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,Setup,The following statement contains a magic number: context.Set("intVar"'5);
Magic Number,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,TestIf_Curly,The following statement contains a magic number: newContext.Set("A"'5);
Magic Number,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,TestIf_Curly,The following statement contains a magic number: newContext.Set("A"' 6);
Magic Number,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,TestIf_ProMesh,The following statement contains a magic number: newContext.Set("A"' 5);
Magic Number,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,TestIf_ProMesh,The following statement contains a magic number: newContext.Set("A"' 6);
Magic Number,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,TestIf_ProMesh,The following statement contains a magic number: newContext.Set("A"' 5);
Magic Number,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,TestIf_ProMesh,The following statement contains a magic number: newContext.Set("A"' 6);
Magic Number,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,TestIf_Xml,The following statement contains a magic number: newContext.Set("A"' 5);
Magic Number,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,TestIf_Xml,The following statement contains a magic number: newContext.Set("A"' 6);
Magic Number,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,TestIf2_Xml,The following statement contains a magic number: newContext.Set("A"' 5);
Magic Number,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,TestIf2_Xml,The following statement contains a magic number: newContext.Set("B"' 4);
Magic Number,Vici.Core.Test,TemplateParser_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Parser\TemplateParser_Fixture.cs,TestIf2_Xml,The following statement contains a magic number: newContext.Set("B"' 6);
Magic Number,Vici.Core.Test,SafeDictionaryTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SafeDictionaryTest.cs,TestDefaultDefaultInt,The following statement contains a magic number: dic["B"] = 2;
Magic Number,Vici.Core.Test,SafeDictionaryTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SafeDictionaryTest.cs,TestCustomDefaultInt,The following statement contains a magic number: dic.DefaultValue = 999;
Magic Number,Vici.Core.Test,SafeDictionaryTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SafeDictionaryTest.cs,TestCustomDefaultInt,The following statement contains a magic number: dic["B"] = 2;
Magic Number,Vici.Core.Test,SafeDictionaryTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SafeDictionaryTest.cs,TestCustomDefaultInt,The following statement contains a magic number: Assert.AreEqual(999' dic["C"]);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestContinuous,The following statement contains a magic number: Scheduler scheduler = new CyclicScheduler(null' TimeSpan.FromMinutes(30));
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestContinuous,The following statement contains a magic number: _time.Now += TimeSpan.FromMinutes(10);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestContinuous,The following statement contains a magic number: _time.Now += TimeSpan.FromMinutes(20);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestContinuous,The following statement contains a magic number: _time.Now += TimeSpan.FromMinutes(50);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestContinuous2,The following statement contains a magic number: Scheduler scheduler1 = new CyclicScheduler(null' TimeSpan.FromMinutes(30));
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestContinuous2,The following statement contains a magic number: Scheduler scheduler2 = new CyclicScheduler(null' TimeSpan.FromMinutes(30));
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestContinuous2,The following statement contains a magic number: Scheduler scheduler3 = new CyclicScheduler(null' TimeSpan.FromMinutes(30));
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestContinuous2,The following statement contains a magic number: _time.Now += TimeSpan.FromMinutes(10);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestContinuous2,The following statement contains a magic number: _time.Now += TimeSpan.FromMinutes(20);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestContinuous2,The following statement contains a magic number: _time.Now += TimeSpan.FromMinutes(50);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestMonthly,The following statement contains a magic number: Scheduler scheduler = new MonthlyScheduler("MONTHLY"' new TimeSpan(12' 0' 0)' 5' 10);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestMonthly,The following statement contains a magic number: Scheduler scheduler = new MonthlyScheduler("MONTHLY"' new TimeSpan(12' 0' 0)' 5' 10);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestMonthly,The following statement contains a magic number: Scheduler scheduler = new MonthlyScheduler("MONTHLY"' new TimeSpan(12' 0' 0)' 5' 10);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestMonthly,The following statement contains a magic number: _time.Now = new DateTime(2000' 1' 1);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestMonthly,The following statement contains a magic number: _time.Now += TimeSpan.FromHours(12);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestMonthly,The following statement contains a magic number: _time.Now = new DateTime(2000' 1' 5' 11' 0' 0);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestMonthly,The following statement contains a magic number: _time.Now = new DateTime(2000' 1' 5' 11' 0' 0);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestMonthly,The following statement contains a magic number: _time.Now = new DateTime(2000' 1' 5' 11' 0' 0);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestDaily,The following statement contains a magic number: Scheduler scheduler = new TimeOfDayScheduler("DAILY"' new TimeSpan(12' 0' 0));
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestDaily,The following statement contains a magic number: _time.Now = new DateTime(2000' 1' 1' 0' 0' 0);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestDaily,The following statement contains a magic number: _time.Now += TimeSpan.FromHours(11);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestDaily,The following statement contains a magic number: _time.Now += TimeSpan.FromHours(24);
Magic Number,Vici.Core.Test,SchedulerTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SchedulerTest.cs,TestDefaultHistoryStore,The following statement contains a magic number: DateTime ts3 = ts1.AddDays(2);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,ThreadedTest,The following statement contains a magic number: SmartCache<int> cache = new SmartCache<int>(50);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,ThreadedTest,The following statement contains a magic number: Thread[] threads = new Thread[50];
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,ThreadedTest,The following statement contains a magic number: i<50
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,ThreadedTest,The following statement contains a magic number: i < 50
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,ThreadedTest,The following statement contains a magic number: Assert.AreEqual(50'cache.ItemCount);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,trd,The following statement contains a magic number: i < 1000
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,ThreadedRemoveTest,The following statement contains a magic number: SmartCache<int> cache = new SmartCache<int>(50);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,ThreadedRemoveTest,The following statement contains a magic number: Thread[] threads = new Thread[50];
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,ThreadedRemoveTest,The following statement contains a magic number: i < 50
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,ThreadedRemoveTest,The following statement contains a magic number: i < 50
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,ThreadedRemoveTest,The following statement contains a magic number: Assert.AreEqual(50' cache.ItemCount);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,ThreadCacheRemove,The following statement contains a magic number: random.Next() % 4 != 0
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,ThreadCacheRemove,The following statement contains a magic number: i < 10000
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Expiring,The following statement contains a magic number: time.Now = new DateTime(2000' 1' 1);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Expiring,The following statement contains a magic number: SmartCache<int> cache = new SmartCache<int>(5' time);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Expiring,The following statement contains a magic number: cache.Add("1"' 1' time.Now.AddMinutes(100));
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Expiring,The following statement contains a magic number: cache.Add("2"' 2' time.Now.AddMinutes(200));
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Expiring,The following statement contains a magic number: cache.Add("2"' 2' time.Now.AddMinutes(200));
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Expiring,The following statement contains a magic number: cache.Add("3"' 3' time.Now.AddMinutes(300));
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Expiring,The following statement contains a magic number: cache.Add("3"' 3' time.Now.AddMinutes(300));
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Expiring,The following statement contains a magic number: Assert.AreEqual(3' cache.ItemCount);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Expiring,The following statement contains a magic number: time.Now += TimeSpan.FromMinutes(150);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Expiring,The following statement contains a magic number: Assert.AreEqual(2' cache.ItemCount);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Expiring,The following statement contains a magic number: time.Now += TimeSpan.FromMinutes(100);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Expiring,The following statement contains a magic number: time.Now += TimeSpan.FromMinutes(100);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Remove,The following statement contains a magic number: SmartCache<int> cache = new SmartCache<int>(5);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Remove,The following statement contains a magic number: cache.Add("2"' 2);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Remove,The following statement contains a magic number: cache.Add("3"' 3);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Remove,The following statement contains a magic number: cache.Add("4"' 4);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Remove,The following statement contains a magic number: cache.Add("5"' 5);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Remove,The following statement contains a magic number: Assert.AreEqual(5' cache.ItemCount);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Remove,The following statement contains a magic number: Assert.AreEqual(2' item);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Remove,The following statement contains a magic number: Assert.AreEqual(4' item);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Remove,The following statement contains a magic number: Assert.AreEqual(5' item);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Remove,The following statement contains a magic number: Assert.AreEqual(4' cache.ItemCount);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Remove,The following statement contains a magic number: Assert.AreEqual(2' item);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Remove,The following statement contains a magic number: Assert.AreEqual(4' item);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Remove,The following statement contains a magic number: Assert.AreEqual(5' item);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Remove,The following statement contains a magic number: Assert.AreEqual(3' cache.ItemCount);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Remove,The following statement contains a magic number: cache.Add("3"' 3);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Remove,The following statement contains a magic number: Assert.AreEqual(4' cache.ItemCount);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Remove,The following statement contains a magic number: Assert.AreEqual(4' cache.ItemCount);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Sliding,The following statement contains a magic number: time.Now = new DateTime(2000' 1' 1);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Sliding,The following statement contains a magic number: SmartCache<int> cache = new SmartCache<int>(5' time);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Sliding,The following statement contains a magic number: cache.Add("1"' 1' TimeSpan.FromMinutes(100));
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Sliding,The following statement contains a magic number: cache.Add("2"' 2' TimeSpan.FromMinutes(200));
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Sliding,The following statement contains a magic number: cache.Add("2"' 2' TimeSpan.FromMinutes(200));
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Sliding,The following statement contains a magic number: cache.Add("3"' 3' TimeSpan.FromMinutes(300));
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Sliding,The following statement contains a magic number: cache.Add("3"' 3' TimeSpan.FromMinutes(300));
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Sliding,The following statement contains a magic number: time.Now += TimeSpan.FromMinutes(20);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Sliding,The following statement contains a magic number: Assert.AreEqual(3' cache.ItemCount);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Sliding,The following statement contains a magic number: time.Now += TimeSpan.FromMinutes(150);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test_Sliding,The following statement contains a magic number: Assert.AreEqual(2' cache.ItemCount);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: SmartCache<int> cache = new SmartCache<int>(5);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: cache.Add("2"' 2);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: cache.Add("3"' 3);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: cache.Add("4"' 4);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: cache.Add("5"' 5);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: Assert.AreEqual(5' cache.ItemCount);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: Assert.AreEqual(2' item);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: Assert.AreEqual(3' item);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: Assert.AreEqual(4' item);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: Assert.AreEqual(5' item);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: cache.Add("6"'6);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: Assert.AreEqual(5' cache.ItemCount);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: cache.Add("7"' 7);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: cache.Add("8"' 8);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: cache.Add("9"' 9);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: Assert.AreEqual(5' cache.ItemCount);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: Assert.AreEqual(3' item);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: Assert.AreEqual(6' item);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: Assert.AreEqual(7' item);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: Assert.AreEqual(8' item);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: Assert.AreEqual(9' item);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: Assert.AreEqual(7' item);
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: cache.CacheSize = 2;
Magic Number,Vici.Core.Test,SmartCache_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\SmartCache_Fixture.cs,Test1,The following statement contains a magic number: Assert.AreEqual(2' cache.ItemCount);
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringsToInt,The following statement contains a magic number: RunTests(new Dictionary<string' int> {{"111"' 111}' {""' 0}' {"A"' 0}});
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringsToInt,The following statement contains a magic number: RunTests(new Dictionary<string' int?> {{"111"' 111}' {""' null}' {"A"' null}});
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoublesToInt,The following statement contains a magic number: RunTests(new Dictionary<double' int> { { 111.0' 111 }' { 111.4' 111 }' { 111.5' 112 }' { 111.6' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoublesToInt,The following statement contains a magic number: RunTests(new Dictionary<double' int> { { 111.0' 111 }' { 111.4' 111 }' { 111.5' 112 }' { 111.6' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoublesToInt,The following statement contains a magic number: RunTests(new Dictionary<double' int> { { 111.0' 111 }' { 111.4' 111 }' { 111.5' 112 }' { 111.6' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoublesToInt,The following statement contains a magic number: RunTests(new Dictionary<double' int> { { 111.0' 111 }' { 111.4' 111 }' { 111.5' 112 }' { 111.6' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoublesToInt,The following statement contains a magic number: RunTests(new Dictionary<double' int> { { 111.0' 111 }' { 111.4' 111 }' { 111.5' 112 }' { 111.6' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoublesToInt,The following statement contains a magic number: RunTests(new Dictionary<double' int> { { 111.0' 111 }' { 111.4' 111 }' { 111.5' 112 }' { 111.6' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoublesToInt,The following statement contains a magic number: RunTests(new Dictionary<double' int> { { 111.0' 111 }' { 111.4' 111 }' { 111.5' 112 }' { 111.6' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoublesToInt,The following statement contains a magic number: RunTests(new Dictionary<double' int> { { 111.0' 111 }' { 111.4' 111 }' { 111.5' 112 }' { 111.6' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoublesToInt,The following statement contains a magic number: RunTests(new Dictionary<double' int?> { { 111.0' 111 }' { 111.4' 111 }' { 111.5' 112 }' { 111.6' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoublesToInt,The following statement contains a magic number: RunTests(new Dictionary<double' int?> { { 111.0' 111 }' { 111.4' 111 }' { 111.5' 112 }' { 111.6' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoublesToInt,The following statement contains a magic number: RunTests(new Dictionary<double' int?> { { 111.0' 111 }' { 111.4' 111 }' { 111.5' 112 }' { 111.6' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoublesToInt,The following statement contains a magic number: RunTests(new Dictionary<double' int?> { { 111.0' 111 }' { 111.4' 111 }' { 111.5' 112 }' { 111.6' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoublesToInt,The following statement contains a magic number: RunTests(new Dictionary<double' int?> { { 111.0' 111 }' { 111.4' 111 }' { 111.5' 112 }' { 111.6' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoublesToInt,The following statement contains a magic number: RunTests(new Dictionary<double' int?> { { 111.0' 111 }' { 111.4' 111 }' { 111.5' 112 }' { 111.6' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoublesToInt,The following statement contains a magic number: RunTests(new Dictionary<double' int?> { { 111.0' 111 }' { 111.4' 111 }' { 111.5' 112 }' { 111.6' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoublesToInt,The following statement contains a magic number: RunTests(new Dictionary<double' int?> { { 111.0' 111 }' { 111.4' 111 }' { 111.5' 112 }' { 111.6' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,FloatsToInt,The following statement contains a magic number: RunTests(new Dictionary<float' int> { { 111.0f' 111 }' { 111.4f' 111 }' { 111.5f' 112 }' { 111.6f' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,FloatsToInt,The following statement contains a magic number: RunTests(new Dictionary<float' int> { { 111.0f' 111 }' { 111.4f' 111 }' { 111.5f' 112 }' { 111.6f' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,FloatsToInt,The following statement contains a magic number: RunTests(new Dictionary<float' int> { { 111.0f' 111 }' { 111.4f' 111 }' { 111.5f' 112 }' { 111.6f' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,FloatsToInt,The following statement contains a magic number: RunTests(new Dictionary<float' int> { { 111.0f' 111 }' { 111.4f' 111 }' { 111.5f' 112 }' { 111.6f' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,FloatsToInt,The following statement contains a magic number: RunTests(new Dictionary<float' int> { { 111.0f' 111 }' { 111.4f' 111 }' { 111.5f' 112 }' { 111.6f' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,FloatsToInt,The following statement contains a magic number: RunTests(new Dictionary<float' int> { { 111.0f' 111 }' { 111.4f' 111 }' { 111.5f' 112 }' { 111.6f' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,FloatsToInt,The following statement contains a magic number: RunTests(new Dictionary<float' int> { { 111.0f' 111 }' { 111.4f' 111 }' { 111.5f' 112 }' { 111.6f' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,FloatsToInt,The following statement contains a magic number: RunTests(new Dictionary<float' int> { { 111.0f' 111 }' { 111.4f' 111 }' { 111.5f' 112 }' { 111.6f' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,FloatsToInt,The following statement contains a magic number: RunTests(new Dictionary<float' int?> { { 111.0f' 111 }' { 111.4f' 111 }' { 111.5f' 112 }' { 111.6f' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,FloatsToInt,The following statement contains a magic number: RunTests(new Dictionary<float' int?> { { 111.0f' 111 }' { 111.4f' 111 }' { 111.5f' 112 }' { 111.6f' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,FloatsToInt,The following statement contains a magic number: RunTests(new Dictionary<float' int?> { { 111.0f' 111 }' { 111.4f' 111 }' { 111.5f' 112 }' { 111.6f' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,FloatsToInt,The following statement contains a magic number: RunTests(new Dictionary<float' int?> { { 111.0f' 111 }' { 111.4f' 111 }' { 111.5f' 112 }' { 111.6f' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,FloatsToInt,The following statement contains a magic number: RunTests(new Dictionary<float' int?> { { 111.0f' 111 }' { 111.4f' 111 }' { 111.5f' 112 }' { 111.6f' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,FloatsToInt,The following statement contains a magic number: RunTests(new Dictionary<float' int?> { { 111.0f' 111 }' { 111.4f' 111 }' { 111.5f' 112 }' { 111.6f' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,FloatsToInt,The following statement contains a magic number: RunTests(new Dictionary<float' int?> { { 111.0f' 111 }' { 111.4f' 111 }' { 111.5f' 112 }' { 111.6f' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,FloatsToInt,The following statement contains a magic number: RunTests(new Dictionary<float' int?> { { 111.0f' 111 }' { 111.4f' 111 }' { 111.5f' 112 }' { 111.6f' 112 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToInt,The following statement contains a magic number: RunTests(new Dictionary<Enum' int> { { _TestByteEnum.Zero' 0 }' { _TestByteEnum.One' 1 }' { _TestByteEnum.Two' 2}' {_TestByteEnum.Big' Byte.MaxValue} });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToInt,The following statement contains a magic number: RunTests(new Dictionary<Enum' int> { { _TestIntEnum.Zero' 0 }' { _TestIntEnum.One' 1 }' { _TestIntEnum.Two' 2 }' { _TestIntEnum.Big' Int32.MaxValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToInt,The following statement contains a magic number: RunTests(new Dictionary<Enum' int> { { _TestLongEnum.Zero' 0 }' { _TestLongEnum.One' 1 }' { _TestLongEnum.Two' 2 }' { _TestLongEnum.Big' 0 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToInt,The following statement contains a magic number: RunTests(new Dictionary<Enum' int?> { { _TestByteEnum.Zero' 0 }' { _TestByteEnum.One' 1 }' { _TestByteEnum.Two' 2 }' { _TestByteEnum.Big' Byte.MaxValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToInt,The following statement contains a magic number: RunTests(new Dictionary<Enum' int?> { { _TestIntEnum.Zero' 0 }' { _TestIntEnum.One' 1 }' { _TestIntEnum.Two' 2 }' { _TestIntEnum.Big' Int32.MaxValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToInt,The following statement contains a magic number: RunTests(new Dictionary<Enum' int?> { { _TestLongEnum.Zero' 0 }' { _TestLongEnum.One' 1 }' { _TestLongEnum.Two' 2 }' { _TestLongEnum.Big' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringsToByte,The following statement contains a magic number: RunTests(new Dictionary<string' byte> { { "111"' 111 }' { ""' 0 }' { "A"' 0 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringsToByte,The following statement contains a magic number: RunTests(new Dictionary<string' byte?> { { "111"' 111 }' { ""' null }' { "A"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToByte,The following statement contains a magic number: RunTests(new Dictionary<Enum' byte> { { _TestByteEnum.Zero' 0 }' { _TestByteEnum.One' 1 }' { _TestByteEnum.Two' 2 }' { _TestByteEnum.Big' Byte.MaxValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToByte,The following statement contains a magic number: RunTests(new Dictionary<Enum' byte> { { _TestIntEnum.Zero' 0 }' { _TestIntEnum.One' 1 }' { _TestIntEnum.Two' 2 }' { _TestIntEnum.Big' 0 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToByte,The following statement contains a magic number: RunTests(new Dictionary<Enum' byte> { { _TestLongEnum.Zero' 0 }' { _TestLongEnum.One' 1 }' { _TestLongEnum.Two' 2 }' { _TestLongEnum.Big' 0 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToByte,The following statement contains a magic number: RunTests(new Dictionary<Enum' byte?> { { _TestByteEnum.Zero' 0 }' { _TestByteEnum.One' 1 }' { _TestByteEnum.Two' 2 }' { _TestByteEnum.Big' Byte.MaxValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToByte,The following statement contains a magic number: RunTests(new Dictionary<Enum' byte?> { { _TestIntEnum.Zero' 0 }' { _TestIntEnum.One' 1 }' { _TestIntEnum.Two' 2 }' { _TestIntEnum.Big' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToByte,The following statement contains a magic number: RunTests(new Dictionary<Enum' byte?> { { _TestLongEnum.Zero' 0 }' { _TestLongEnum.One' 1 }' { _TestLongEnum.Two' 2 }' { _TestLongEnum.Big' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringsToLong,The following statement contains a magic number: RunTests(new Dictionary<string' long> { { "111"' 111 }' { ""' 0 }' { "A"' 0 } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringsToLong,The following statement contains a magic number: RunTests(new Dictionary<string' long?> { { "111"' 111 }' { ""' null }' { "A"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToLong,The following statement contains a magic number: RunTests(new Dictionary<Enum' long> { { _TestByteEnum.Zero' 0 }' { _TestByteEnum.One' 1 }' { _TestByteEnum.Two' 2 }' { _TestByteEnum.Big' Byte.MaxValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToLong,The following statement contains a magic number: RunTests(new Dictionary<Enum' long> { { _TestIntEnum.Zero' 0 }' { _TestIntEnum.One' 1 }' { _TestIntEnum.Two' 2 }' { _TestIntEnum.Big' Int32.MaxValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToLong,The following statement contains a magic number: RunTests(new Dictionary<Enum' long> { { _TestLongEnum.Zero' 0 }' { _TestLongEnum.One' 1 }' { _TestLongEnum.Two' 2 }' { _TestLongEnum.Big' Int64.MaxValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToLong,The following statement contains a magic number: RunTests(new Dictionary<Enum' long?> { { _TestByteEnum.Zero' 0 }' { _TestByteEnum.One' 1 }' { _TestByteEnum.Two' 2 }' { _TestByteEnum.Big' Byte.MaxValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToLong,The following statement contains a magic number: RunTests(new Dictionary<Enum' long?> { { _TestIntEnum.Zero' 0 }' { _TestIntEnum.One' 1 }' { _TestIntEnum.Two' 2 }' { _TestIntEnum.Big' Int32.MaxValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,EnumToLong,The following statement contains a magic number: RunTests(new Dictionary<Enum' long?> { { _TestLongEnum.Zero' 0 }' { _TestLongEnum.One' 1 }' { _TestLongEnum.Two' 2 }' { _TestLongEnum.Big' Int64.MaxValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntsToString,The following statement contains a magic number: RunTests(new Dictionary<object' string> { { 111' "111" } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The following statement contains a magic number: RunTests(new Dictionary<int' _TestByteEnum> { { 0'_TestByteEnum.Zero }' { 1'_TestByteEnum.One }' { 2'_TestByteEnum.Two }' { 999' _TestByteEnum.Zero } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The following statement contains a magic number: RunTests(new Dictionary<int' _TestByteEnum> { { 0'_TestByteEnum.Zero }' { 1'_TestByteEnum.One }' { 2'_TestByteEnum.Two }' { 999' _TestByteEnum.Zero } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The following statement contains a magic number: RunTests(new Dictionary<int' _TestByteEnum?> { { 0' _TestByteEnum.Zero }' { 1' _TestByteEnum.One }' { 2' _TestByteEnum.Two }' { 999' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The following statement contains a magic number: RunTests(new Dictionary<int' _TestByteEnum?> { { 0' _TestByteEnum.Zero }' { 1' _TestByteEnum.One }' { 2' _TestByteEnum.Two }' { 999' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The following statement contains a magic number: RunTests(new Dictionary<int' _TestIntEnum> { { 0' _TestIntEnum.Zero }' { 1' _TestIntEnum.One }' { 2' _TestIntEnum.Two }' { 999' _TestIntEnum.Zero } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The following statement contains a magic number: RunTests(new Dictionary<int' _TestIntEnum> { { 0' _TestIntEnum.Zero }' { 1' _TestIntEnum.One }' { 2' _TestIntEnum.Two }' { 999' _TestIntEnum.Zero } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The following statement contains a magic number: RunTests(new Dictionary<int' _TestIntEnum?> { { 0' _TestIntEnum.Zero }' { 1' _TestIntEnum.One }' { 2' _TestIntEnum.Two }' { 999' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The following statement contains a magic number: RunTests(new Dictionary<int' _TestIntEnum?> { { 0' _TestIntEnum.Zero }' { 1' _TestIntEnum.One }' { 2' _TestIntEnum.Two }' { 999' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The following statement contains a magic number: RunTests(new Dictionary<int' _TestLongEnum> { { 0' _TestLongEnum.Zero }' { 1' _TestLongEnum.One }' { 2' _TestLongEnum.Two }' { 999' _TestLongEnum.Zero } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The following statement contains a magic number: RunTests(new Dictionary<int' _TestLongEnum> { { 0' _TestLongEnum.Zero }' { 1' _TestLongEnum.One }' { 2' _TestLongEnum.Two }' { 999' _TestLongEnum.Zero } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The following statement contains a magic number: RunTests(new Dictionary<int' _TestLongEnum?> { { 0' _TestLongEnum.Zero }' { 1' _TestLongEnum.One }' { 2' _TestLongEnum.Two }' { 999' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToEnum,The following statement contains a magic number: RunTests(new Dictionary<int' _TestLongEnum?> { { 0' _TestLongEnum.Zero }' { 1' _TestLongEnum.One }' { 2' _TestLongEnum.Two }' { 999' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The following statement contains a magic number: RunTests(new Dictionary<double' _TestByteEnum> { { 0' _TestByteEnum.Zero }' { 1' _TestByteEnum.One }' { 2' _TestByteEnum.Two }' { 999' _TestByteEnum.Zero } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The following statement contains a magic number: RunTests(new Dictionary<double' _TestByteEnum> { { 0' _TestByteEnum.Zero }' { 1' _TestByteEnum.One }' { 2' _TestByteEnum.Two }' { 999' _TestByteEnum.Zero } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The following statement contains a magic number: RunTests(new Dictionary<double' _TestByteEnum?> { { 0' _TestByteEnum.Zero }' { 1' _TestByteEnum.One }' { 2' _TestByteEnum.Two }' { 999' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The following statement contains a magic number: RunTests(new Dictionary<double' _TestByteEnum?> { { 0' _TestByteEnum.Zero }' { 1' _TestByteEnum.One }' { 2' _TestByteEnum.Two }' { 999' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The following statement contains a magic number: RunTests(new Dictionary<double' _TestIntEnum> { { 0' _TestIntEnum.Zero }' { 1' _TestIntEnum.One }' { 2' _TestIntEnum.Two }' { 999' _TestIntEnum.Zero } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The following statement contains a magic number: RunTests(new Dictionary<double' _TestIntEnum> { { 0' _TestIntEnum.Zero }' { 1' _TestIntEnum.One }' { 2' _TestIntEnum.Two }' { 999' _TestIntEnum.Zero } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The following statement contains a magic number: RunTests(new Dictionary<double' _TestIntEnum?> { { 0' _TestIntEnum.Zero }' { 1' _TestIntEnum.One }' { 2' _TestIntEnum.Two }' { 999' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The following statement contains a magic number: RunTests(new Dictionary<double' _TestIntEnum?> { { 0' _TestIntEnum.Zero }' { 1' _TestIntEnum.One }' { 2' _TestIntEnum.Two }' { 999' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The following statement contains a magic number: RunTests(new Dictionary<double' _TestLongEnum> { { 0' _TestLongEnum.Zero }' { 1' _TestLongEnum.One }' { 2' _TestLongEnum.Two }' { 999' _TestLongEnum.Zero } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The following statement contains a magic number: RunTests(new Dictionary<double' _TestLongEnum> { { 0' _TestLongEnum.Zero }' { 1' _TestLongEnum.One }' { 2' _TestLongEnum.Two }' { 999' _TestLongEnum.Zero } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The following statement contains a magic number: RunTests(new Dictionary<double' _TestLongEnum?> { { 0' _TestLongEnum.Zero }' { 1' _TestLongEnum.One }' { 2' _TestLongEnum.Two }' { 999' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,DoubleToEnum,The following statement contains a magic number: RunTests(new Dictionary<double' _TestLongEnum?> { { 0' _TestLongEnum.Zero }' { 1' _TestLongEnum.One }' { 2' _TestLongEnum.Two }' { 999' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToDateTime,The following statement contains a magic number: RunTests(new Dictionary<int'DateTime>{{100' new DateTime(1970'1'1).AddSeconds(100)}});
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToDateTime,The following statement contains a magic number: RunTests(new Dictionary<int'DateTime>{{100' new DateTime(1970'1'1).AddSeconds(100)}});
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,IntToDateTime,The following statement contains a magic number: RunTests(new Dictionary<int'DateTime>{{100' new DateTime(1970'1'1).AddSeconds(100)}});
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' DateTime.MinValue }' { "X"' DateTime.MinValue } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } });
Magic Number,Vici.Core.Test,ObjectConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\ObjectConverterTest.cs,StringToDateTime,The following statement contains a magic number: RunTests(new Dictionary<string' DateTime?> { { "100"' new DateTime(1970' 1' 1).AddSeconds(100) }' { "2014-12-31"' new DateTime(2014' 12' 31) }' { "2014-12-31 22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { "2014-12-31T22:23:24"' new DateTime(2014' 12' 31' 22' 23' 24) }' { ""' null }' { "X"' null } });
Magic Number,Vici.Core.Test,StringConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\StringConverterTest.cs,ToInt,The following statement contains a magic number: Assert.AreEqual(123'"123".To<int>());
Magic Number,Vici.Core.Test,StringConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\StringConverterTest.cs,ToInt,The following statement contains a magic number: Assert.AreEqual(123' "123".To(typeof(int)));
Magic Number,Vici.Core.Test,StringConverterTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringConverter\StringConverterTest.cs,ToNullableInt,The following statement contains a magic number: Assert.AreEqual(123' "123".To<int?>());
Magic Number,Vici.Core.Test,StringExtensionsTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringExtensionsTest.cs,Left,The following statement contains a magic number: Assert.AreEqual("ABC"' "ABCDEFGH".Left(3));
Magic Number,Vici.Core.Test,StringExtensionsTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringExtensionsTest.cs,Left,The following statement contains a magic number: Assert.AreEqual("ABCDEFGH"' "ABCDEFGH".Left(8));
Magic Number,Vici.Core.Test,StringExtensionsTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringExtensionsTest.cs,Left,The following statement contains a magic number: Assert.AreEqual("ABCDEFGH"' "ABCDEFGH".Left(20));
Magic Number,Vici.Core.Test,StringExtensionsTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringExtensionsTest.cs,Right,The following statement contains a magic number: Assert.AreEqual("FGH"' "ABCDEFGH".Right(3));
Magic Number,Vici.Core.Test,StringExtensionsTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringExtensionsTest.cs,Right,The following statement contains a magic number: Assert.AreEqual("ABCDEFGH"' "ABCDEFGH".Right(8));
Magic Number,Vici.Core.Test,StringExtensionsTest,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\StringExtensionsTest.cs,Right,The following statement contains a magic number: Assert.AreEqual("ABCDEFGH"' "ABCDEFGH".Right(20));
Magic Number,Vici.Core.Test,Tokenizer_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Tokenizer_Fixture.cs,TestStringLiteral,The following statement contains a magic number: Assert.AreEqual(5' tokens.Length);
Magic Number,Vici.Core.Test,Tokenizer_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Tokenizer_Fixture.cs,TestStringLiteral,The following statement contains a magic number: Assert.AreEqual("\"test2\""' tokens[4].Text);
Magic Number,Vici.Core.Test,Tokenizer_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Tokenizer_Fixture.cs,TestStringLiteral,The following statement contains a magic number: Assert.AreEqual(5' tokens.Length);
Magic Number,Vici.Core.Test,Tokenizer_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Tokenizer_Fixture.cs,TestStringLiteral,The following statement contains a magic number: Assert.AreEqual("\"test\\\"2\""' tokens[4].Text);
Magic Number,Vici.Core.Test,Tokenizer_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Tokenizer_Fixture.cs,NumericLiterals,The following statement contains a magic number: Assert.AreEqual(3'tokens.Length);
Magic Number,Vici.Core.Test,Tokenizer_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Tokenizer_Fixture.cs,NumericLiterals,The following statement contains a magic number: Assert.AreEqual("10.0"'tokens[2].Text);
Magic Number,Vici.Core.Test,Tokenizer_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Tokenizer_Fixture.cs,NumericLiterals,The following statement contains a magic number: Assert.AreEqual(3' tokens.Length);
Magic Number,Vici.Core.Test,Tokenizer_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Tokenizer_Fixture.cs,NumericLiterals,The following statement contains a magic number: Assert.AreEqual("10ul"' tokens[2].Text);
Magic Number,Vici.Core.Test,Tokenizer_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Tokenizer_Fixture.cs,NumericLiterals,The following statement contains a magic number: Assert.AreEqual(3' tokens.Length);
Magic Number,Vici.Core.Test,Tokenizer_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Tokenizer_Fixture.cs,NumericLiterals,The following statement contains a magic number: Assert.AreEqual("10l"' tokens[2].Text);
Magic Number,Vici.Core.Test,Tokenizer_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Tokenizer_Fixture.cs,TestFallback,The following statement contains a magic number: Assert.AreEqual(4'tokens.Length);
Magic Number,Vici.Core.Test,Tokenizer_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Tokenizer_Fixture.cs,TestAnySequence,The following statement contains a magic number: Assert.AreEqual(3'tokens.Length);
Magic Number,Vici.Core.Test,Tokenizer_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Tokenizer_Fixture.cs,TestAnySequence,The following statement contains a magic number: Assert.AreEqual("Max"' tokens[2].Text);
Magic Number,Vici.Core.Test,Tokenizer_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Tokenizer_Fixture.cs,StartsAndEndsWithToken,The following statement contains a magic number: Assert.AreEqual(3'tokens.Length);
Magic Number,Vici.Core.Test,Tokenizer_Fixture,D:\research\architectureSmells\repos\viciproject_core\Test\Tests\Tokenizer_Fixture.cs,StartsAndEndsWithToken,The following statement contains a magic number: Assert.AreEqual(3' tokens.Length);
