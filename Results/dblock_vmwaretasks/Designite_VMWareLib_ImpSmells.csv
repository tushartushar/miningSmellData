Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Vestris.VMWareLib,VMWareVirtualHost,C:\repos\dblock_vmwaretasks\Source\VMWareLib\VMWareVirtualHost.cs,Connect,The method has 6 parameters. Parameters: serviceProviderType' hostName' hostPort' username' password' timeout
Long Statement,Vestris.VMWareLib,VMWareSnapshot,C:\repos\dblock_vmwaretasks\Source\VMWareLib\VMWareSnapshot.cs,Clone,The length of the statement  "                    string.Format("Failed to clone virtual machine snapshot: cloneType=\"{0}\" destConfigPathName=\"{1}\" timeoutInSeconds={2}"' " is 124.
Long Statement,Vestris.VMWareLib,VMWareVirtualHost,C:\repos\dblock_vmwaretasks\Source\VMWareLib\VMWareVirtualHost.cs,ConnectToVMWareWorkstation,The length of the statement  "            Connect(ServiceProviderType.WorkstationShared' string.Format("https://{0}/sdk"' hostName)' 0' username' password' timeoutInSeconds); " is 132.
Long Statement,Vestris.VMWareLib,VMWareVirtualHost,C:\repos\dblock_vmwaretasks\Source\VMWareLib\VMWareVirtualHost.cs,Connect,The length of the statement  "                    string.Format("Failed to connect: serviceProviderType=\"{0}\" hostName=\"{1}\" hostPort={2} username=\"{3}\" timeout={4}"'  " is 122.
Long Statement,Vestris.VMWareLib,VMWareVirtualMachine,C:\repos\dblock_vmwaretasks\Source\VMWareLib\VMWareVirtualMachine.cs,CopyFileFromHostToGuest,The length of the statement  "                    string.Format("Failed to copy file from host to guest: hostPathName=\"{0}\" guestPathName=\"{1}\" timeoutInSeconds={2}"'  " is 120.
Long Statement,Vestris.VMWareLib,VMWareVirtualMachine,C:\repos\dblock_vmwaretasks\Source\VMWareLib\VMWareVirtualMachine.cs,CopyFileFromGuestToHost,The length of the statement  "                    string.Format("Failed to copy file from guest to host: guestPathName=\"{0}\" hostPathName=\"{1}\" timeoutInSeconds={2}"' " is 120.
Empty Catch Block,Vestris.VMWareLib,VMWareVirtualMachine,C:\repos\dblock_vmwaretasks\Source\VMWareLib\VMWareVirtualMachine.cs,WaitForVMWareUserProcessInGuest,The method has an empty catch block.
Magic Number,Vestris.VMWareLib,VMWareInterop,C:\repos\dblock_vmwaretasks\Source\VMWareLib\VMWareInterop.cs,FromUnixEpoch,The following statement contains a magic number: return new DateTime(1970' 1' 1' 0' 0' 0' 0).AddSeconds(dt);
Magic Number,Vestris.VMWareLib,VMWareJob,C:\repos\dblock_vmwaretasks\Source\VMWareLib\VMWareJob.cs,Wait,The following statement contains a magic number: _callback.WaitForCompletion(timeoutInSeconds * 1000);
Magic Number,Vestris.VMWareLib,VMWareJob,C:\repos\dblock_vmwaretasks\Source\VMWareLib\VMWareJob.cs,Wait,The following statement contains a magic number: _callback.WaitForCompletion(timeoutInSeconds * 1000);
Magic Number,Vestris.VMWareLib,VMWareJob,C:\repos\dblock_vmwaretasks\Source\VMWareLib\VMWareJob.cs,YieldWait,The following statement contains a magic number: _callback.WaitForCompletion(timeoutInSeconds * 1000);
Magic Number,Vestris.VMWareLib,VMWareJob,C:\repos\dblock_vmwaretasks\Source\VMWareLib\VMWareJob.cs,Wait,The following statement contains a magic number: _callback.WaitForCompletion(timeoutInSeconds * 1000);
Magic Number,Vestris.VMWareLib,VMWareSnapshotCollection,C:\repos\dblock_vmwaretasks\Source\VMWareLib\VMWareSnapshotCollection.cs,FindSnapshot,The following statement contains a magic number: string[] paths = pathToSnapshot.Split("\\".ToCharArray()' 2);
Magic Number,Vestris.VMWareLib,VMWareVirtualMachine,C:\repos\dblock_vmwaretasks\Source\VMWareLib\VMWareVirtualMachine.cs,GetFileInfoInGuest,The following statement contains a magic number: try              {                  VMWareJobCallback callback = new VMWareJobCallback();                  using (VMWareJob job = new VMWareJob(_handle.GetFileInfoInGuest(guestPathName' callback)' callback))                  {                      object[] properties =                       {                           Constants.VIX_PROPERTY_JOB_RESULT_FILE_SIZE'                          Constants.VIX_PROPERTY_JOB_RESULT_FILE_FLAGS'                          Constants.VIX_PROPERTY_JOB_RESULT_FILE_MOD_TIME                      };                      object[] propertyValues = job.Wait<object[]>(properties' timeoutInSeconds);                      GuestFileInfo fileInfo = new GuestFileInfo();                      fileInfo.GuestPathName = guestPathName;                      fileInfo.FileSize = (long)propertyValues[0];                      fileInfo.Flags = (int)propertyValues[1];                      fileInfo.LastModified = VMWareInterop.FromUnixEpoch((long)propertyValues[2]);                      return fileInfo;                  }              }              catch (Exception ex)              {                  throw new Exception(                      string.Format("Failed to get file info in guest: guestPathName=\"{0}\" timeoutInSeconds={1}"'                      guestPathName' timeoutInSeconds)' ex);              }
Magic Number,Vestris.VMWareLib,VMWareVirtualMachine,C:\repos\dblock_vmwaretasks\Source\VMWareLib\VMWareVirtualMachine.cs,ListDirectoryInGuest,The following statement contains a magic number: if (!DirectoryExistsInGuest(pathName))                  throw new VMWareException(2);
Magic Number,Vestris.VMWareLib,VMWareVirtualMachine,C:\repos\dblock_vmwaretasks\Source\VMWareLib\VMWareVirtualMachine.cs,ListDirectoryInGuest,The following statement contains a magic number: try              {                  List<string> results = new List<string>();                  VMWareJobCallback callback = new VMWareJobCallback();                  using (VMWareJob job = new VMWareJob(_handle.ListDirectoryInGuest(                      pathName' 0' callback)' callback))                  {                        object[] properties =                   {                       Constants.VIX_PROPERTY_JOB_RESULT_ITEM_NAME'                       Constants.VIX_PROPERTY_JOB_RESULT_FILE_FLAGS                  };                        try                      {                          foreach (object[] fileProperties in job.YieldWait(properties' timeoutInSeconds))                          {                              string fileName = (string)fileProperties[0];                              int flags = (int)fileProperties[1];                                if ((flags & 1) > 0)                              {                                  if (recurse)                                  {                                      results.AddRange(ListDirectoryInGuest(Path.Combine(pathName' fileName)'                                          true' timeoutInSeconds));                                  }                              }                              else                              {                                  results.Add(Path.Combine(pathName' fileName));                              }                          }                      }                      catch (VMWareException ex)                      {                          switch (ex.ErrorCode)                          {                              case 2:                              // file not found? empty directory in ESX                              case Constants.VIX_E_UNRECOGNIZED_PROPERTY:                                  // unrecognized property returned by GetNumProperties' the directory exists' but contains no files                                  break;                              default:                                  throw;                          }                      }                  }                  return results;              }              catch (Exception ex)              {                  throw new Exception(                      string.Format("Failed to list directory in guest: pathName=\"{0}\" recurse={1} timeoutInSeconds={2}"'                      pathName' recurse' timeoutInSeconds)' ex);              }
Missing Default,Vestris.VMWareLib,VMWareJobCallback,C:\repos\dblock_vmwaretasks\Source\VMWareLib\VMWareJobCallback.cs,OnVixEvent,The following switch statement is missing a default case: switch (eventType)              {                  case Constants.VIX_EVENTTYPE_JOB_COMPLETED:                      _jobCompleted.Set();                      break;              }
