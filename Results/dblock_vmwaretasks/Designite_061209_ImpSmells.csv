Implementation smell,Namespace,Class,File,Method,Description
Complex Method,VMWareCrash,Program,F:\newReposMay17\dblock_vmwaretasks\Source\VixCOM\061209\Program.cs,Main,Cyclomatic complexity of the method is 8
Long Statement,VMWareCrash,Program,F:\newReposMay17\dblock_vmwaretasks\Source\VixCOM\061209\Program.cs,Main,The length of the statement  "			IJob connectJob = vix.Connect (Constants.VIX_API_VERSION' Constants.VIX_SERVICEPROVIDER_VMWARE_VI_SERVER' "https://linc.nycapt35k.com/sdk/"' 0' "vmuser"' "admin123"' 0' null' null); " is 181.
Long Statement,VMWareCrash,Program,F:\newReposMay17\dblock_vmwaretasks\Source\VixCOM\061209\Program.cs,Main,The length of the statement  "			IJob createSnapshotJob = vm.CreateSnapshot (Guid.NewGuid ().ToString ()' Guid.NewGuid ().ToString ()' 0' null' jobDoneCallback); " is 128.
Magic Number,VMWareCrash,Program,F:\newReposMay17\dblock_vmwaretasks\Source\VixCOM\061209\Program.cs,Main,The following statement contains a magic number: try {  	VixCOM.VixLib vix = new VixLib ();  	{  		// connect to a VI host  		Console.WriteLine ("Connecting to VI host");  		IJob connectJob = vix.Connect (Constants.VIX_API_VERSION' Constants.VIX_SERVICEPROVIDER_VMWARE_VI_SERVER' "https://linc.nycapt35k.com/sdk/"' 0' "vmuser"' "admin123"' 0' null' null);  		object[] connectProperties =  {  			Constants.VIX_PROPERTY_JOB_RESULT_HANDLE  		};  		object hosts = null;  		ulong rc = connectJob.Wait (connectProperties' ref hosts);  		if (vix.ErrorIndicatesFailure (rc))  			throw new Exception (vix.GetErrorText (rc' "en-US"));  		IHost host = (IHost)((object[])hosts) [0];  		// open a vm  		Console.WriteLine ("Opening VM");  		IJob openJob = host.OpenVM ("[dbprotect-1] ddoub-red/ddoub-red.vmx"' null);  		object[] openProperties =  {  			Constants.VIX_PROPERTY_JOB_RESULT_HANDLE  		};  		object openResults = null;  		rc = openJob.Wait (openProperties' ref openResults);  		if (vix.ErrorIndicatesFailure (rc))  			throw new Exception (vix.GetErrorText (rc' "en-US"));  		IVM2 vm = (IVM2)((object[])openResults) [0];  		// number of snapshots  		int nSnapshots = 0;  		vm.GetNumRootSnapshots (out nSnapshots);  		Console.WriteLine ("Root snapshots: {0}"' nSnapshots);  		List<ISnapshot> snapshots = new List<ISnapshot> ();  		for (int i = 0; i < nSnapshots; i++) {  			Console.WriteLine ("Fetching snapshot: {0}"' i);  			ISnapshot snapshot = null;  			rc = vm.GetRootSnapshot (i' out snapshot);  			snapshots.Add (snapshot);  			if (vix.ErrorIndicatesFailure (rc))  				throw new Exception (vix.GetErrorText (rc' "en-US"));  		}  		// create a snapshot  		Console.WriteLine ("Creating snapshot");  		VMWareJobCallback jobDoneCallback = new VMWareJobCallback ();  		IJob createSnapshotJob = vm.CreateSnapshot (Guid.NewGuid ().ToString ()' Guid.NewGuid ().ToString ()' 0' null' jobDoneCallback);  		jobDoneCallback.WaitForCompletion (10000);  		rc = createSnapshotJob.WaitWithoutResults ();  		if (vix.ErrorIndicatesFailure (rc))  			throw new Exception (vix.GetErrorText (rc' "en-US"));  		snapshots = null;  		GC.Collect ();  		GC.WaitForPendingFinalizers ();  		// disconnect  		Console.WriteLine ("Disconnecting");  		host.Disconnect ();  	}  } catch (Exception ex) {  	Console.WriteLine (ex.Message);  }  
Magic Number,VMWareCrash,Program,F:\newReposMay17\dblock_vmwaretasks\Source\VixCOM\061209\Program.cs,Main,The following statement contains a magic number: jobDoneCallback.WaitForCompletion (10000);  
Missing Default,VMWareCrash,VMWareJobCallback,F:\newReposMay17\dblock_vmwaretasks\Source\VixCOM\061209\VMJobCallback.cs,OnVixEvent,The following switch statement is missing a default case: switch (eventType) {  case VixCOM.Constants.VIX_EVENTTYPE_JOB_COMPLETED:  	_jobCompleted.Set ();  	break;  }  
