Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Orient.Client,ODocument,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\API\Types\ODocument.cs,GetField,Cyclomatic complexity of the method is 13
Complex Method,Orient.Client.Mapping,TypeMapper<T>,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Mapping\TypeMapper.cs,TypeMapper,Cyclomatic complexity of the method is 13
Complex Method,Orient.Client.Protocol,SqlQuery,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Query\SqlQuery.cs,Set,Cyclomatic complexity of the method is 8
Complex Method,Orient.Client.Protocol,SqlQuery,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Query\SqlQuery.cs,ToString,Cyclomatic complexity of the method is 12
Complex Method,Orient.Client.Protocol,SqlQuery,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Query\SqlQuery.cs,GenerateSelectQuery,Cyclomatic complexity of the method is 8
Complex Method,Orient.Client.Protocol.Operations,Command,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\Command.cs,Response,Cyclomatic complexity of the method is 14
Complex Method,Orient.Client.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbOpen.cs,Response,Cyclomatic complexity of the method is 8
Complex Method,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,SerializeValue,Cyclomatic complexity of the method is 13
Complex Method,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseFieldName,Cyclomatic complexity of the method is 13
Complex Method,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseMap,Cyclomatic complexity of the method is 8
Complex Method,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseValue,Cyclomatic complexity of the method is 16
Complex Method,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseList,Cyclomatic complexity of the method is 8
Complex Method,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseSet,Cyclomatic complexity of the method is 8
Complex Method,Orient.Client.Transactions,ORIDUpdater<T>,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Transactions\ORIDUpdater.cs,ORIDUpdater,Cyclomatic complexity of the method is 11
Long Parameter List,Orient.Client,OClient,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\API\OClient.cs,CreateDatabasePool,The method has 8 parameters. Parameters: hostname' port' databaseName' databaseType' userName' userPassword' poolSize' alias
Long Parameter List,Orient.Client.Protocol,Connection,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Connection.cs,Connection,The method has 8 parameters. Parameters: hostname' port' databaseName' databaseType' userName' userPassword' alias' isReusable
Long Parameter List,Orient.Client.Protocol,DatabasePool,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\DatabasePool.cs,DatabasePool,The method has 8 parameters. Parameters: hostname' port' databaseName' databaseType' userName' userPassword' poolSize' alias
Long Parameter List,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,Deserialize,The method has 5 parameters. Parameters: orid' version' type' classId' rawRecord
Long Statement,Orient.Client,OClient,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\API\OClient.cs,CreateDatabasePool,The length of the statement  "                DatabasePool databasePool = new DatabasePool(hostname' port' databaseName' databaseType' userName' userPassword' poolSize' alias); " is 130.
Long Statement,Orient.Client,OClient,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\API\OClient.cs,ReleaseConnection,The length of the statement  "                            connection = new Connection(pool.Hostname' pool.Port' pool.DatabaseName' pool.DatabaseType' pool.UserName' pool.UserPassword' alias' true); " is 139.
Long Statement,Orient.Client,ODocument,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\API\Types\ODocument.cs,GetField,The length of the statement  "            var result = type.IsPrimitive || type == typeof(string) || type.IsArray ? default(T) : (T)Activator.CreateInstance(type); " is 121.
Long Statement,Orient.Client.API,OTransaction,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\API\OTransaction.cs,Insert,The length of the statement  "                throw new InvalidOperationException("Objects to be updated or deleted via a transaction must already be in the database"); " is 122.
Long Statement,Orient.Client.Mapping,CollectionNamedFieldMapping<TTarget>,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Mapping\CollectionFieldMapping.cs,MapToNamedField,The length of the statement  "            if (collection == null) // if we only have one item currently stored (but scope for more) we create a temporary list and put our single item in it. " is 147.
Long Statement,Orient.Client.Protocol,BinaryReaderHelper,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\BinaryReaderHelper.cs,ReadBytesRequired,The length of the statement  "                throw new EndOfStreamException(string.Format("{0} bytes required from stream' but only {1} returned."' byteCount' result.Length)); " is 130.
Long Statement,Orient.Client.Protocol,SqlQuery,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Query\SqlQuery.cs,GenerateDeleteEdgeQuery,The length of the statement  "                query += string.Join(" "' Q.Delete' Q.Edge' _compiler.Value(Q.Class)' Q.From' _compiler.Value(Q.From)' Q.To' _compiler.Value(Q.To)); " is 132.
Long Statement,Orient.Client.Protocol.Operations,CommitTransaction,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\CommitTransaction.cs,Request,The length of the statement  "            request.DataItems.Add(new RequestDataItem() { Type = "byte"' Data = BinarySerializer.ToArray((byte)OperationType.TX_COMMIT) }); " is 127.
Long Statement,Orient.Client.Protocol.Operations,CommitTransaction,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\CommitTransaction.cs,Request,The length of the statement  "            request.DataItems.Add(new RequestDataItem() { Type = "byte"' Data = BinarySerializer.ToArray((byte)0) }); // use log 0 = no' 1 = yes " is 132.
Long Statement,Orient.Client.Protocol.Operations,CommitTransaction,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\CommitTransaction.cs,Request,The length of the statement  "            request.DataItems.Add(new RequestDataItem() { Type = "byte"' Data = BinarySerializer.ToArray((byte)0) }); // zero terminated " is 124.
Long Statement,Orient.Client.Protocol.Operations,CommitTransaction,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\CommitTransaction.cs,Request,The length of the statement  "            //request.DataItems.Add(new RequestDataItem() { Type = "int"' Data = BinarySerializer.ToArray(-1) });  // data segment id " is 121.
Long Statement,Orient.Client.Protocol.Operations,CommitTransaction,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\CommitTransaction.cs,Request,The length of the statement  "            //request.DataItems.Add(new RequestDataItem() {Type = "string"' Data = BinarySerializer.ToArray(_document.Serialize())}); " is 121.
Long Statement,Orient.Client.Protocol.Operations,CreateRecord,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\CreateRecord.cs,Request,The length of the statement  "            request.DataItems.Add(new RequestDataItem() { Type = "byte"' Data = BinarySerializer.ToArray((byte)OperationType.RECORD_CREATE) }); " is 131.
Long Statement,Orient.Client.Protocol.Operations,CreateRecord,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\CreateRecord.cs,Request,The length of the statement  "                request.DataItems.Add(new RequestDataItem() { Type = "int"' Data = BinarySerializer.ToArray((int)-1) });  // data segment id " is 124.
Long Statement,Orient.Client.Protocol.Operations,CreateRecord,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\CreateRecord.cs,Request,The length of the statement  "            request.DataItems.Add(new RequestDataItem() { Type = "string"' Data = BinarySerializer.ToArray(_document.Serialize()) }); " is 121.
Long Statement,Orient.Client.Protocol.Operations,LoadRecord,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\LoadRecord.cs,ReadAssociatedResult,The length of the statement  "            var document = RecordSerializer.Deserialize(new ORID(clusterId' clusterPosition)' recordVersion' ORecordType.Document' 0' record); " is 130.
Long Statement,Orient.Client.Protocol.Operations,Connect,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\Connect.cs,Request,The length of the statement  "            request.DataItems.Add(new RequestDataItem() { Type = "byte"' Data = BinarySerializer.ToArray((byte)OperationType.CONNECT) }); " is 125.
Long Statement,Orient.Client.Protocol.Operations,Connect,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\Connect.cs,Request,The length of the statement  "                request.DataItems.Add(new RequestDataItem() { Type = "string"' Data = BinarySerializer.ToArray(OClient.DriverVersion) }); " is 121.
Long Statement,Orient.Client.Protocol.Operations,Connect,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\Connect.cs,Request,The length of the statement  "                request.DataItems.Add(new RequestDataItem() { Type = "short"' Data = BinarySerializer.ToArray(OClient.ProtocolVersion) }); " is 122.
Long Statement,Orient.Client.Protocol.Operations,Connect,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\Connect.cs,Request,The length of the statement  "                request.DataItems.Add(new RequestDataItem { Type = "string"' Data = BinarySerializer.ToArray(OClient.SerializationImpl) }); " is 123.
Long Statement,Orient.Client.Protocol.Operations,DbCreate,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbCreate.cs,Request,The length of the statement  "            request.DataItems.Add(new RequestDataItem() { Type = "byte"' Data = BinarySerializer.ToArray((byte)OperationType.DB_CREATE) }); " is 127.
Long Statement,Orient.Client.Protocol.Operations,DbCreate,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbCreate.cs,Request,The length of the statement  "            request.DataItems.Add(new RequestDataItem() { Type = "string"' Data = BinarySerializer.ToArray(DatabaseType.ToString().ToLower()) }); " is 133.
Long Statement,Orient.Client.Protocol.Operations,DbCreate,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbCreate.cs,Request,The length of the statement  "            request.DataItems.Add(new RequestDataItem() { Type = "string"' Data = BinarySerializer.ToArray(StorageType.ToString().ToLower()) }); " is 132.
Long Statement,Orient.Client.Protocol.Operations,DbDrop,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbDrop.cs,Request,The length of the statement  "            request.DataItems.Add(new RequestDataItem() { Type = "byte"' Data = BinarySerializer.ToArray((byte)OperationType.DB_DROP) }); " is 125.
Long Statement,Orient.Client.Protocol.Operations,DbDrop,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbDrop.cs,Request,The length of the statement  "                request.DataItems.Add(new RequestDataItem() { Type = "string"' Data = BinarySerializer.ToArray(StorageType.ToString().ToLower()) }); " is 132.
Long Statement,Orient.Client.Protocol.Operations,DbExist,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbExist.cs,Request,The length of the statement  "            request.DataItems.Add(new RequestDataItem() { Type = "byte"' Data = BinarySerializer.ToArray((byte)OperationType.DB_EXIST) }); " is 126.
Long Statement,Orient.Client.Protocol.Operations,DbExist,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbExist.cs,Request,The length of the statement  "                request.DataItems.Add(new RequestDataItem() { Type = "string"' Data = BinarySerializer.ToArray(StorageType.ToString().ToLower()) }); " is 132.
Long Statement,Orient.Client.Protocol.Operations,Command,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\Command.cs,Request,The length of the statement  "            request.DataItems.Add(new RequestDataItem() { Type = "byte"' Data = BinarySerializer.ToArray((byte)OperationType.COMMAND) }); " is 125.
Long Statement,Orient.Client.Protocol.Operations,Command,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\Command.cs,Request,The length of the statement  "                request.DataItems.Add(new RequestDataItem() { Type = "string"' Data = BinarySerializer.ToArray(CommandPayload.Language) }); " is 123.
Long Statement,Orient.Client.Protocol.Operations,Command,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\Command.cs,Request,The length of the statement  "            request.DataItems.Add(new RequestDataItem() { Type = "int"' Data = BinarySerializer.ToArray(CommandPayload.NonTextLimit) }); " is 124.
Long Statement,Orient.Client.Protocol.Operations,Command,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\Command.cs,Request,The length of the statement  "            request.DataItems.Add(new RequestDataItem() { Type = "string"' Data = BinarySerializer.ToArray(CommandPayload.FetchPlan) }); " is 124.
Long Statement,Orient.Client.Protocol.Operations,DbClose,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbClose.cs,Request,The length of the statement  "            request.DataItems.Add(new RequestDataItem() { Type = "byte"' Data = BinarySerializer.ToArray((byte)OperationType.DB_CLOSE) }); " is 126.
Long Statement,Orient.Client.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbOpen.cs,Request,The length of the statement  "            request.DataItems.Add(new RequestDataItem() { Type = "byte"' Data = BinarySerializer.ToArray((byte)OperationType.DB_OPEN) }); " is 125.
Long Statement,Orient.Client.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbOpen.cs,Request,The length of the statement  "                request.DataItems.Add(new RequestDataItem() { Type = "string"' Data = BinarySerializer.ToArray(OClient.DriverVersion) }); " is 121.
Long Statement,Orient.Client.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbOpen.cs,Request,The length of the statement  "                request.DataItems.Add(new RequestDataItem() { Type = "short"' Data = BinarySerializer.ToArray(OClient.ProtocolVersion) }); " is 122.
Long Statement,Orient.Client.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbOpen.cs,Request,The length of the statement  "                request.DataItems.Add(new RequestDataItem { Type = "string"' Data = BinarySerializer.ToArray(OClient.SerializationImpl) }); " is 123.
Long Statement,Orient.Client.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbOpen.cs,Request,The length of the statement  "                request.DataItems.Add(new RequestDataItem() { Type = "string"' Data = BinarySerializer.ToArray(DatabaseType.ToString().ToLower()) }); " is 133.
Long Statement,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,Serialize,The length of the statement  "                throw new OException(OExceptionType.Serialization' "Document doesn't contain @OClassName field which is required for serialization."); " is 134.
Long Statement,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseValue,The length of the statement  "                else if ((stringValue.Length > 2) && (stringValue[stringValue.Length - 1] == 't') || (stringValue[stringValue.Length - 1] == 'a')) " is 130.
Complex Conditional,Orient.Client,OClient,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\API\OClient.cs,ReturnConnection,The conditional expression  "(pool != null) &&                      (pool.CurrentSize < pool.PoolSize) &&                      connection.IsActive &&                      connection.IsReusable"  is complex.
Complex Conditional,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseRecordID,The conditional expression  "(i < recordString.Length) &&                  (recordString[i] != ''') &&                  (recordString[i] != ')') &&                  (recordString[i] != ']') &&                  (recordString[i] != '>')"  is complex.
Complex Conditional,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseValue,The conditional expression  "(i < recordString.Length) &&                  (recordString[i] != ''') &&                  (recordString[i] != ')') &&                  (recordString[i] != ']') &&                  (recordString[i] != '>')"  is complex.
Empty Catch Block,Orient.Client.Protocol.Operations,CommitTransaction,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\CommitTransaction.cs,Response,The method has an empty catch block.
Empty Catch Block,Orient.Client.Protocol.Operations,CreateRecord,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\CreateRecord.cs,Response,The method has an empty catch block.
Magic Number,Orient.Client,OClient,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\API\OClient.cs,OClient,The following statement contains a magic number: BufferLenght = 1024;
Magic Number,Orient.Client,ORID,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\API\Types\ORID.cs,FastParse,The following statement contains a magic number: iVal < 0 || iVal > 9
Magic Number,Orient.Client,ORID,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\API\Types\ORID.cs,FastParse,The following statement contains a magic number: result = result * 10 + iVal;
Magic Number,Orient.Client,ORID,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\API\Types\ORID.cs,GetHashCode,The following statement contains a magic number: return (ClusterId * 17) ^ ClusterPosition.GetHashCode();
Magic Number,Orient.Client,OServer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\API\OServer.cs,Databases,The following statement contains a magic number: returnValue.Add(keyValue[0]' keyValue[1] + ":" + keyValue[2]);
Magic Number,Orient.Client.Protocol,Connection,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Connection.cs,ExecuteOperation,The following statement contains a magic number: switch (item.Type)                  {                      case "byte":                      case "short":                      case "int":                      case "long":                          Send(item.Data);                          break;                      case "record":                          buffer = new byte[2 + item.Data.Length];                          Buffer.BlockCopy(BinarySerializer.ToArray(item.Data.Length)' 0' buffer' 0' 2);                          Buffer.BlockCopy(item.Data' 0' buffer' 2' item.Data.Length);                          Send(buffer);                          break;                      case "bytes":                      case "string":                      case "strings":                          //buffer = new byte[4 + item.Data.Length];                          //Buffer.BlockCopy(BinarySerializer.ToArray(item.Data.Length)' 0' buffer' 0' 4);                          //Buffer.BlockCopy(item.Data' 0' buffer' 4' item.Data.Length);                          //Send(buffer);                            Send(BinarySerializer.ToArray(item.Data.Length));                          Send(item.Data);                          break;                      default:                          break;                  }
Magic Number,Orient.Client.Protocol,Connection,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Connection.cs,ExecuteOperation,The following statement contains a magic number: switch (item.Type)                  {                      case "byte":                      case "short":                      case "int":                      case "long":                          Send(item.Data);                          break;                      case "record":                          buffer = new byte[2 + item.Data.Length];                          Buffer.BlockCopy(BinarySerializer.ToArray(item.Data.Length)' 0' buffer' 0' 2);                          Buffer.BlockCopy(item.Data' 0' buffer' 2' item.Data.Length);                          Send(buffer);                          break;                      case "bytes":                      case "string":                      case "strings":                          //buffer = new byte[4 + item.Data.Length];                          //Buffer.BlockCopy(BinarySerializer.ToArray(item.Data.Length)' 0' buffer' 0' 4);                          //Buffer.BlockCopy(item.Data' 0' buffer' 4' item.Data.Length);                          //Send(buffer);                            Send(BinarySerializer.ToArray(item.Data.Length));                          Send(item.Data);                          break;                      default:                          break;                  }
Magic Number,Orient.Client.Protocol,Connection,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Connection.cs,ExecuteOperation,The following statement contains a magic number: switch (item.Type)                  {                      case "byte":                      case "short":                      case "int":                      case "long":                          Send(item.Data);                          break;                      case "record":                          buffer = new byte[2 + item.Data.Length];                          Buffer.BlockCopy(BinarySerializer.ToArray(item.Data.Length)' 0' buffer' 0' 2);                          Buffer.BlockCopy(item.Data' 0' buffer' 2' item.Data.Length);                          Send(buffer);                          break;                      case "bytes":                      case "string":                      case "strings":                          //buffer = new byte[4 + item.Data.Length];                          //Buffer.BlockCopy(BinarySerializer.ToArray(item.Data.Length)' 0' buffer' 0' 4);                          //Buffer.BlockCopy(item.Data' 0' buffer' 4' item.Data.Length);                          //Send(buffer);                            Send(BinarySerializer.ToArray(item.Data.Length));                          Send(item.Data);                          break;                      default:                          break;                  }
Magic Number,Orient.Client.Protocol,Connection,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Connection.cs,InitializeDatabaseConnection,The following statement contains a magic number: _networkStream.Read(_readBuffer' 0' 2);
Magic Number,Orient.Client.Protocol,Connection,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Connection.cs,InitializeDatabaseConnection,The following statement contains a magic number: OClient.ProtocolVersion = ProtocolVersion = BinarySerializer.ToShort(_readBuffer.Take(2).ToArray());
Magic Number,Orient.Client.Protocol,Connection,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Connection.cs,InitializeServerConnection,The following statement contains a magic number: _networkStream.Read(_readBuffer' 0' 2);
Magic Number,Orient.Client.Protocol,Connection,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Connection.cs,InitializeServerConnection,The following statement contains a magic number: OClient.ProtocolVersion = ProtocolVersion = BinarySerializer.ToShort(_readBuffer.Take(2).ToArray());
Magic Number,Orient.Client.Protocol,Response,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Response.cs,Receive,The following statement contains a magic number: OClient.ProtocolVersion >= 19
Magic Number,Orient.Client.Protocol.Operations,CommitTransaction,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\CommitTransaction.cs,Response,The following statement contains a magic number: OClient.ProtocolVersion >= 20
Magic Number,Orient.Client.Protocol.Operations,CreateRecord,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\CreateRecord.cs,Request,The following statement contains a magic number: OClient.ProtocolVersion < 24
Magic Number,Orient.Client.Protocol.Operations,CreateRecord,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\CreateRecord.cs,Response,The following statement contains a magic number: OClient.ProtocolVersion >= 11
Magic Number,Orient.Client.Protocol.Operations,CreateRecord,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\CreateRecord.cs,Response,The following statement contains a magic number: OClient.ProtocolVersion >= 20
Magic Number,Orient.Client.Protocol.Operations,DbReload,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbReload.cs,Response,The following statement contains a magic number: OClient.ProtocolVersion >= 12
Magic Number,Orient.Client.Protocol.Operations,DbReload,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbReload.cs,Response,The following statement contains a magic number: OClient.ProtocolVersion < 24
Magic Number,Orient.Client.Protocol.Operations,LoadRecord,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\LoadRecord.cs,Request,The following statement contains a magic number: OClient.ProtocolVersion >= 9
Magic Number,Orient.Client.Protocol.Operations,LoadRecord,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\LoadRecord.cs,Request,The following statement contains a magic number: OClient.ProtocolVersion >= 13
Magic Number,Orient.Client.Protocol.Operations,TransactionRecord,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\TransactionRecord.cs,AddToRequest,The following statement contains a magic number: switch (RecordType)              {                  case RecordType.Create:                      request.AddDataItem(GetDocument().Serialize());                      break;                  case RecordType.Delete:                      request.AddDataItem(Version);                      break;                  case RecordType.Update:                      request.AddDataItem(Version);                      //request.AddDataItem((byte)1);                      request.AddDataItem(GetDocument().Serialize());                      if (OClient.ProtocolVersion >= 23)                      {                          request.AddDataItem((byte)1); // updateContent flag                       }                      break;                    default:                      throw new InvalidOperationException();              }
Magic Number,Orient.Client.Protocol.Operations,Connect,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\Connect.cs,Request,The following statement contains a magic number: OClient.ProtocolVersion > 7
Magic Number,Orient.Client.Protocol.Operations,Connect,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\Connect.cs,Request,The following statement contains a magic number: OClient.ProtocolVersion > 21
Magic Number,Orient.Client.Protocol.Operations,DbDrop,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbDrop.cs,Request,The following statement contains a magic number: OClient.ProtocolVersion >= 16
Magic Number,Orient.Client.Protocol.Operations,DbExist,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbExist.cs,Request,The following statement contains a magic number: OClient.ProtocolVersion >= 16
Magic Number,Orient.Client.Protocol.Operations,Command,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\Command.cs,Request,The following statement contains a magic number: request.DataItems.Add(new RequestDataItem() { Type = "int"' Data = BinarySerializer.ToArray(                  //4 + // this int                  4 + // class name int length                  BinarySerializer.Length(className) +                   4 + // limit int length                  4 + // text int length                  BinarySerializer.Length(CommandPayload.Text) +                   4 + // fetch plant int length                  BinarySerializer.Length(CommandPayload.FetchPlan) +                  4 // serialized params int (disable)              ) });
Magic Number,Orient.Client.Protocol.Operations,Command,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\Command.cs,Request,The following statement contains a magic number: request.DataItems.Add(new RequestDataItem() { Type = "int"' Data = BinarySerializer.ToArray(                  //4 + // this int                  4 + // class name int length                  BinarySerializer.Length(className) +                   4 + // limit int length                  4 + // text int length                  BinarySerializer.Length(CommandPayload.Text) +                   4 + // fetch plant int length                  BinarySerializer.Length(CommandPayload.FetchPlan) +                  4 // serialized params int (disable)              ) });
Magic Number,Orient.Client.Protocol.Operations,Command,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\Command.cs,Request,The following statement contains a magic number: request.DataItems.Add(new RequestDataItem() { Type = "int"' Data = BinarySerializer.ToArray(                  //4 + // this int                  4 + // class name int length                  BinarySerializer.Length(className) +                   4 + // limit int length                  4 + // text int length                  BinarySerializer.Length(CommandPayload.Text) +                   4 + // fetch plant int length                  BinarySerializer.Length(CommandPayload.FetchPlan) +                  4 // serialized params int (disable)              ) });
Magic Number,Orient.Client.Protocol.Operations,Command,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\Command.cs,Request,The following statement contains a magic number: request.DataItems.Add(new RequestDataItem() { Type = "int"' Data = BinarySerializer.ToArray(                  //4 + // this int                  4 + // class name int length                  BinarySerializer.Length(className) +                   4 + // limit int length                  4 + // text int length                  BinarySerializer.Length(CommandPayload.Text) +                   4 + // fetch plant int length                  BinarySerializer.Length(CommandPayload.FetchPlan) +                  4 // serialized params int (disable)              ) });
Magic Number,Orient.Client.Protocol.Operations,Command,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\Command.cs,Request,The following statement contains a magic number: request.DataItems.Add(new RequestDataItem() { Type = "int"' Data = BinarySerializer.ToArray(                  //4 + // this int                  4 + // class name int length                  BinarySerializer.Length(className) +                   4 + // limit int length                  4 + // text int length                  BinarySerializer.Length(CommandPayload.Text) +                   4 + // fetch plant int length                  BinarySerializer.Length(CommandPayload.FetchPlan) +                  4 // serialized params int (disable)              ) });
Magic Number,Orient.Client.Protocol.Operations,Command,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\Command.cs,ParseDocument,The following statement contains a magic number: classId == -2
Magic Number,Orient.Client.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbOpen.cs,Request,The following statement contains a magic number: OClient.ProtocolVersion >= 7
Magic Number,Orient.Client.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbOpen.cs,Request,The following statement contains a magic number: OClient.ProtocolVersion > 21
Magic Number,Orient.Client.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbOpen.cs,Request,The following statement contains a magic number: OClient.ProtocolVersion >= 8
Magic Number,Orient.Client.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: OClient.ProtocolVersion >= 7
Magic Number,Orient.Client.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: OClient.ProtocolVersion >= 12
Magic Number,Orient.Client.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: OClient.ProtocolVersion < 24
Magic Number,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,SerializeValue,The following statement contains a magic number: switch (Type.GetTypeCode(valueType))              {                  case TypeCode.Empty:                      // null case is empty                      break;                  case TypeCode.Boolean:                      return value.ToString().ToLower();                  case TypeCode.Byte:                      return value.ToString() + "b";                  case TypeCode.Int16:                      return value.ToString() + "s";                  case TypeCode.Int32:                      return value.ToString();                  case TypeCode.Int64:                      return value.ToString() + "l";                  case TypeCode.Single:                      return ((float)value).ToString(CultureInfo.InvariantCulture) + "f";                  case TypeCode.Double:                      return ((double)value).ToString(CultureInfo.InvariantCulture) + "d";                  case TypeCode.Decimal:                      return ((decimal)value).ToString(CultureInfo.InvariantCulture) + "c";                  case TypeCode.DateTime:                      DateTime unixEpoch = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);                      return ((long)((DateTime)value - unixEpoch).TotalMilliseconds).ToString() + "t";                  case TypeCode.String:                  case TypeCode.Char:                      // strings must escape these characters:                      // " -> \"                      // \ -> \\                      string stringValue = value.ToString();                      // escape quotes                      stringValue = stringValue.Replace("\\"' "\\\\");                      // escape backslashes                      stringValue = stringValue.Replace("\""' "\\" + "\"");                        return "\"" + stringValue + "\"";                  case TypeCode.Object:                      return SerializeObjectValue(value' valueType);              }
Magic Number,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseString,The following statement contains a magic number: i = i + 2;
Magic Number,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseValue,The following statement contains a magic number: stringValue = stringValue.Substring(1' stringValue.Length - 2);
Magic Number,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseValue,The following statement contains a magic number: int mod4 = stringValue.Length % 4;
Magic Number,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseValue,The following statement contains a magic number: stringValue += new string('='' 4 - mod4);
Magic Number,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseValue,The following statement contains a magic number: (stringValue.Length > 2) && (stringValue[0] == '_') && (stringValue[stringValue.Length - 1] == '_')
Magic Number,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseRidBags,The following statement contains a magic number: offset += 16;
Magic Number,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseEmbeddedDocument,The following statement contains a magic number: (i < 15) && (recordString.Length > 15) && (recordString.Substring(i' 15).Equals("ORIDs@pageSize:"))
Magic Number,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseEmbeddedDocument,The following statement contains a magic number: (i < 15) && (recordString.Length > 15) && (recordString.Substring(i' 15).Equals("ORIDs@pageSize:"))
Magic Number,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseEmbeddedDocument,The following statement contains a magic number: (i < 15) && (recordString.Length > 15) && (recordString.Substring(i' 15).Equals("ORIDs@pageSize:"))
Magic Number,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseLinkCollection,The following statement contains a magic number: i += 15;
Magic Number,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseLinkCollection,The following statement contains a magic number: i = index + 6;
Magic Number,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,ParseLinkCollection,The following statement contains a magic number: i = index + 9;
Missing Default,Orient.Client.Mapping,TypeMapper<T>,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Mapping\TypeMapper.cs,TypeMapper,The following switch statement is missing a default case: switch (propertyName)                  {                      case "ORID":                          _fields.Add(new ORIDFieldMapping<T>(propertyInfo));                          continue;                      case "OVersion":                          _fields.Add(new OVersionFieldMapping<T>(propertyInfo));                          continue;                      case "OClassId":                          _fields.Add(new OClassIdFieldMapping<T>(propertyInfo));                          continue;                      case "OClassName":                          _fields.Add(new OClassNameFieldMapping<T>(propertyInfo));                          continue;                  }
Missing Default,Orient.Client.Protocol.Operations,LoadRecord,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Operations\LoadRecord.cs,ReadPrimaryResult,The following switch statement is missing a default case: switch (recordType)              {                  case ORecordType.Document:                      string serialized = System.Text.Encoding.Default.GetString(readBytes);                      document = RecordSerializer.Deserialize(serialized);                      document.ORID = _orid;                      document.OVersion = version;                      responseDocument.SetField("Content"' document);                      break;                  case ORecordType.RawBytes:                      document.SetField("RawBytes"' readBytes);                      responseDocument.SetField("Content"' document);                      break;                  case ORecordType.FlatData:                      break;              }
Missing Default,Orient.Client.Protocol.Serializers,RecordSerializer,D:\research\architectureSmells\repos\yojimbo87_OrientDB-NET.binary\src\Orient\Orient.Client\Protocol\Serializers\RecordSerializer.cs,SerializeValue,The following switch statement is missing a default case: switch (Type.GetTypeCode(valueType))              {                  case TypeCode.Empty:                      // null case is empty                      break;                  case TypeCode.Boolean:                      return value.ToString().ToLower();                  case TypeCode.Byte:                      return value.ToString() + "b";                  case TypeCode.Int16:                      return value.ToString() + "s";                  case TypeCode.Int32:                      return value.ToString();                  case TypeCode.Int64:                      return value.ToString() + "l";                  case TypeCode.Single:                      return ((float)value).ToString(CultureInfo.InvariantCulture) + "f";                  case TypeCode.Double:                      return ((double)value).ToString(CultureInfo.InvariantCulture) + "d";                  case TypeCode.Decimal:                      return ((decimal)value).ToString(CultureInfo.InvariantCulture) + "c";                  case TypeCode.DateTime:                      DateTime unixEpoch = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);                      return ((long)((DateTime)value - unixEpoch).TotalMilliseconds).ToString() + "t";                  case TypeCode.String:                  case TypeCode.Char:                      // strings must escape these characters:                      // " -> \"                      // \ -> \\                      string stringValue = value.ToString();                      // escape quotes                      stringValue = stringValue.Replace("\\"' "\\\\");                      // escape backslashes                      stringValue = stringValue.Replace("\""' "\\" + "\"");                        return "\"" + stringValue + "\"";                  case TypeCode.Object:                      return SerializeObjectValue(value' valueType);              }
