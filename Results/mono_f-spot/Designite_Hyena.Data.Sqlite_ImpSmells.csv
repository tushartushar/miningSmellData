Implementation smell,Namespace,Class,File,Method,Description
Long Method,Hyena.Data.Sqlite,SqliteModelCache<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\SqliteModelCache.cs,SqliteModelCache,The method has 117 lines of code.
Complex Method,Hyena.Data.Sqlite,SqliteModelProvider<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\SqliteModelProvider.cs,Init,Cyclomatic complexity of the method is 11
Complex Method,Hyena.Data.Sqlite,SqliteModelProvider<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\SqliteModelProvider.cs,AddColumn,Cyclomatic complexity of the method is 8
Complex Method,Hyena.Data.Sqlite,SqliteModelProvider<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\SqliteModelProvider.cs,BuildQuerySql,Cyclomatic complexity of the method is 8
Long Parameter List,Hyena.Data.Sqlite,Native,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\Sqlite.cs,sqlite3_create_function16,The method has 8 parameters. Parameters: db' strName' nArgs' eTextRep' app' func' funcstep' funcfinal
Long Parameter List,Hyena.Data.Sqlite,Native,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\Sqlite.cs,sqlite3_create_collation16,The method has 5 parameters. Parameters: db' strName' eTextRep' ctx' fcompare
Long Parameter List,Hyena.Data.Sqlite,Native,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\Sqlite.cs,sqlite3_prepare16_v2,The method has 5 parameters. Parameters: db' pSql' nBytes' stmt' ptrRemain
Long Parameter List,Hyena.Data.Sqlite,Native,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\Sqlite.cs,sqlite3_exec,The method has 5 parameters. Parameters: db' sql' callback' cbArg' errPtr
Long Parameter List,Hyena.Data.Sqlite,Native,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\Sqlite.cs,sqlite3_bind_blob,The method has 5 parameters. Parameters: stmt' param' val' nBytes' destructorType
Long Parameter List,Hyena.Data.Sqlite,Native,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\Sqlite.cs,sqlite3_bind_text16,The method has 5 parameters. Parameters: stmt' param' val' numBytes' destructorType
Long Identifier,Hyena.Data.Sqlite,HyenaSqliteCommand,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\HyenaSqliteCommand.cs,,The length of the parameter raise_command_executed_threshold_ms is 35.
Long Identifier,Hyena.Data.Sqlite,SqliteModelCache<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\SqliteModelCache.cs,,The length of the parameter last_get_single_select_fragment is 31.
Long Identifier,Hyena.Data.Sqlite,SqliteModelCache<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\SqliteModelCache.cs,,The length of the parameter last_get_single_condition_fragment is 34.
Long Statement,Hyena.Data.Sqlite,Connection,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\Sqlite.cs,Execute,The length of the statement  "            // * The application must not close database connection specified by the 1st parameter to sqlite3_exec() while sqlite3_exec() is running. " is 137.
Long Statement,Hyena.Data.Sqlite,Connection,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\Sqlite.cs,Execute,The length of the statement  "            // * The application must not modify the SQL statement text passed into the 2nd parameter of sqlite3_exec() while sqlite3_exec() is running.  " is 140.
Long Statement,Hyena.Data.Sqlite,Statement,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\Sqlite.cs,Reset,The length of the statement  "                throw new InvalidOperationException ("Can't reset statement while it's being read; make sure to Dispose any IDataReaders"); " is 123.
Long Statement,Hyena.Data.Sqlite,SqliteModelProvider<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\SqliteModelProvider.cs,Load,The length of the statement  "                    String.Format ("Caught exception trying to load database column {0}"' bad_column == null ? "[unknown]" : bad_column.Name)' " is 122.
Long Statement,Hyena.Metrics,MetricsCollection,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Metrics\MetricsCollection.cs,ToJsonString,The length of the statement  "                metrics[metric.Name] = Store.GetFor (metric).Select (s => new object [] { DateTimeUtil.ToInvariantString (s.Stamp)' s.Value ?? "" }); " is 133.
Complex Conditional,Hyena.Data.Sqlite,SqliteModelCache<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\SqliteModelCache.cs,GetSingle,The conditional expression  "selectFragment != last_get_single_select_fragment                  || conditionOrderFragment != last_get_single_condition_fragment                  ||fromFragment != last_get_single_from_fragment                  || get_single_command == null"  is complex.
Complex Conditional,Hyena.Data.Sqlite,SqliteModelCache<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\SqliteModelCache.cs,SaveSelection,The conditional expression  "model.Selection != null && model.Selection.Count > 0 &&                  !(has_select_all_item && model.Selection.AllSelected)"  is complex.
Complex Conditional,Hyena.Data.Sqlite,SqliteUtils,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\SqliteUtils.cs,GetType,The conditional expression  "type == typeof (int) || type == typeof (long) || type == typeof (bool)                  || type == typeof (DateTime) || type == typeof (TimeSpan) || type.IsEnum"  is complex.
Complex Conditional,Hyena.Data.Sqlite,SqliteUtils,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\SqliteUtils.cs,GetType,The conditional expression  "type == typeof (int?) || type == typeof (long?) || type == typeof (bool?)                  || type == typeof (uint?)"  is complex.
Magic Number,Hyena.Data.Sqlite,Connection,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\Sqlite.cs,CheckError,The following statement contains a magic number: if (errorCode == 0 || errorCode == 100 || errorCode == 101)                  return;
Magic Number,Hyena.Data.Sqlite,Connection,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\Sqlite.cs,CheckError,The following statement contains a magic number: if (errorCode == 0 || errorCode == 100 || errorCode == 101)                  return;
Magic Number,Hyena.Data.Sqlite,Statement,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\Sqlite.cs,Bind,The following statement contains a magic number: for (int i = 1; i <= vals.Length; i++) {                  int code = 0;                  object o = SqliteUtils.ToDbFormat (vals[i - 1]);                    if (o == null)                      code = Native.sqlite3_bind_null (Ptr' i);                  else if (o is double)                      code = Native.sqlite3_bind_double (Ptr' i' (double)o);                  else if (o is float)                      code = Native.sqlite3_bind_double (Ptr' i' (double)(float)o);                  else if (o is int)                      code = Native.sqlite3_bind_int (Ptr' i' (int)o);                  else if (o is uint)                      code = Native.sqlite3_bind_int (Ptr' i' (int)(uint)o);                  else if (o is long)                      code = Native.sqlite3_bind_int64 (Ptr' i' (long)o);                  else if (o is ulong)                      code = Native.sqlite3_bind_int64 (Ptr' i' (long)(ulong)o);                  else if (o is byte[]) {                      byte [] bytes = o as byte[];                      code = Native.sqlite3_bind_blob (Ptr' i' bytes' bytes.Length' (IntPtr)(-1));                  } else {                      // C# strings are UTF-16' so 2 bytes per char                      // -1 for the last arg is the TRANSIENT destructor type so that sqlite will make its own copy of the string                      string str = (o as string) ?? o.ToString ();                      code = Native.sqlite3_bind_text16 (Ptr' i' str' str.Length * 2' (IntPtr)(-1));                  }                    CheckError (code);              }
Magic Number,Hyena.Data.Sqlite,SqliteFunction,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\SqliteFunction.cs,SetReturnValue,The following statement contains a magic number: if (r is Exception) {              Native.sqlite3_result_error16 (context' ((Exception)r).Message' -1);          } else {              var o = SqliteUtils.ToDbFormat (r);              if (o == null)                  Native.sqlite3_result_null (context);              else if (r is int || r is uint)                  Native.sqlite3_result_int (context' (int)r);              else if (r is long || r is ulong)                  Native.sqlite3_result_int64 (context' (long)r);              else if (r is double || r is float)                  Native.sqlite3_result_double (context' (double)r);              else if (r is string) {                  string str = (string)r;                  // -1 for the last arg is the TRANSIENT destructor type so that sqlite will make its own copy of the string                  Native.sqlite3_result_text16 (context' str' str.Length*2' (IntPtr)(-1));              } else if (r is byte[]) {                  var bytes = (byte[])r;                  Native.sqlite3_result_blob (context' bytes' bytes.Length' (IntPtr)(-1));              }          }
Magic Number,Hyena.Data.Sqlite,HyenaSqliteCommand,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\HyenaSqliteCommand.cs,Execute,The following statement contains a magic number: try {                  command_text = CurrentSqlText;                  ticks = System.Environment.TickCount;                    switch (CommandType) {                      case HyenaCommandType.Reader:                          using (var reader = connection.Query (command_text)) {                              result = new ArrayDataReader (reader' command_text);                          }                          break;                        case HyenaCommandType.Scalar:                          result = connection.Query<object> (command_text);                          break;                        case HyenaCommandType.Execute:                      default:                          connection.Execute (command_text);                          result = connection.LastInsertRowId;                          break;                  }                    execution_ms = System.Environment.TickCount - ticks;                  if (log_all) {                      Log.DebugFormat ("Executed in {0}ms {1}"' execution_ms' command_text);                  } else if (Log.Debugging && execution_ms > 500) {                      Log.WarningFormat ("Executed in {0}ms {1}"' execution_ms' command_text);                  }              } catch (Exception e) {                  Log.DebugFormat ("Exception executing command: {0}"' command_text ?? command);                  Log.Exception (e);                  execution_exception = e;              }
Magic Number,Hyena.Data.Sqlite,SqliteModelCache<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\SqliteModelCache.cs,IndexOf,The following statement contains a magic number: lock (this) {                  using (IDataReader reader = connection.Query (indexof_command' offset)) {                      if (reader.Read ()) {                          long target_id = (long) reader[reader.FieldCount - 2];                          if (target_id == 0) {                              return -1;                          }                          return target_id - FirstOrderId;                      }                  }                    return -1;              }
Magic Number,Hyena.Data.Sqlite,BinaryFunction,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Data.Sqlite\SqliteUtils.cs,Invoke,The following statement contains a magic number: return func (args[1]' args[2]);
Magic Number,Hyena.Metrics,HttpPoster,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Metrics\HttpPoster.cs,Post,The following statement contains a magic number: request.Timeout = 30 * 1000;
Magic Number,Hyena.Metrics,HttpPoster,C:\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Hyena.Metrics\HttpPoster.cs,Post,The following statement contains a magic number: request.Timeout = 30 * 1000;
