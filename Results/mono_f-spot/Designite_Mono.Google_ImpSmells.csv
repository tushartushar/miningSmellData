Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mono.Google.Picasa,PicasaAlbum,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google.Picasa\PicasaAlbum.cs,ParseAlbum,Cyclomatic complexity of the method is 8
Complex Method,Mono.Google.Picasa,PicasaAlbum,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google.Picasa\PicasaAlbum.cs,UploadPicture,Cyclomatic complexity of the method is 8
Long Parameter List,Mono.Google,Authentication,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google\Authentication.cs,GetAuthorization,The method has 6 parameters. Parameters: conn' email' password' service' token' captcha
Long Statement,Mono.Google.Picasa,PicasaPicture,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google.Picasa\PicasaPicture.cs,ParsePicture,The length of the statement  "			pub_date = DateTime.ParseExact (nodeitem.SelectSingleNode ("atom:published"' nsmgr).InnerText' GDataApi.DateFormat' info); " is 122.
Long Statement,Mono.Google.Picasa,PicasaWeb,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google.Picasa\PicasaWeb.cs,GetXmlForCreate,The length of the statement  "			xml.WriteElementString ("timestamp"' ((long)(date - new DateTime (1970' 1' 1)).TotalSeconds * 1000).ToString ()' PicasaNamespaces.GPhoto); " is 138.
Complex Conditional,Mono.Google,Authentication,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google\Authentication.cs,GetAuthorization,The conditional expression  "email == null || email == String.Empty || password == null || password == String.Empty"  is complex.
Empty Catch Block,Mono.Google,GoogleConnection,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google\GoogleConnection.cs,DownloadString,The method has an empty catch block.
Magic Number,Mono.Google.Picasa,PicasaAlbum,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google.Picasa\PicasaAlbum.cs,UploadPicture,The following statement contains a magic number: byte [] data = new byte [8192];
Magic Number,Mono.Google.Picasa,PicasaAlbum,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google.Picasa\PicasaAlbum.cs,UploadPicture,The following statement contains a magic number: if (UploadProgress != null) {  				int req_length = (int) ms.Length;  				request.Request.ContentLength = req_length;  				DoUploadProgress (title' 0' req_length);  				using (Stream req_stream = request.Request.GetRequestStream ()) {  					byte [] buffer = ms.GetBuffer ();  					int nwrite = 0;  					int offset;  					for (offset = 0; offset < req_length; offset += nwrite) {  						nwrite = System.Math.Min (16384' req_length - offset);  						req_stream.Write (buffer' offset' nwrite);  						// The progress uses the actual request size' not file size.  						DoUploadProgress (title' offset' req_length);  					}  					DoUploadProgress (title' offset' req_length);    				}  			}
Magic Number,Mono.Google.Picasa,PicasaWeb,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google.Picasa\PicasaWeb.cs,GetXmlForCreate,The following statement contains a magic number: xml.WriteElementString ("timestamp"' ((long)(date - new DateTime (1970' 1' 1)).TotalSeconds * 1000).ToString ()' PicasaNamespaces.GPhoto);
Magic Number,Mono.Google.Picasa,PicasaWeb,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google.Picasa\PicasaWeb.cs,GetXmlForCreate,The following statement contains a magic number: xml.WriteElementString ("timestamp"' ((long)(date - new DateTime (1970' 1' 1)).TotalSeconds * 1000).ToString ()' PicasaNamespaces.GPhoto);
Magic Number,Mono.Google.Picasa,XmlUtil,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google.Picasa\XmlUtil.cs,StartDocument,The following statement contains a magic number: writer.Indentation = 2;
Magic Number,Mono.Google.Picasa,XmlUtil,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google.Picasa\XmlUtil.cs,WriteElementStringWithAttributes,The following statement contains a magic number: for (int i = 0; i < attributes.Length; i+=2)  				writer.WriteAttributeString (attributes[i]' attributes[i+1]);
Magic Number,Mono.Google,Authentication,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google\Authentication.cs,GetAuthorization,The following statement contains a magic number: using (Stream stream = response.GetResponseStream ()) {  				StreamReader sr = new StreamReader (stream' Encoding.UTF8);  				string s;  				while ((s = sr.ReadLine ()) != null) {  					if (s.StartsWith ("Auth="))  						auth = s.Substring (5);  					//else if (s.StartsWith ("LSID="))  					//	lsid = s.Substring (5);  					//else if (s.StartsWith ("SID="))  					//	sid = s.Substring (4);  				}  			}
Magic Number,Mono.Google,Authentication,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google\Authentication.cs,ThrowOnError,The following statement contains a magic number: using (StreamReader reader = new StreamReader (response.GetResponseStream ())) {  				string str;  				while ((str = reader.ReadLine ()) != null) {  					if (str.StartsWith ("Url=")) {  						url = str.Substring (4);  					} else if (str.StartsWith ("Error=")) {  						/* These are the values for Error  							None'  							BadAuthentication'  							NotVerified'  							TermsNotAgreed'  							CaptchaRequired'  							Unknown'  							AccountDeleted'  							AccountDisabled'  							ServiceUnavailable  						*/  						code = str.Substring (6);  					} else if (str.StartsWith ("CaptchaToken=")) {  						token = str.Substring (13);  					} else if (str.StartsWith ("CaptchaUrl=")) {  						captcha_url = str.Substring (11);  					}  				}  			}
Magic Number,Mono.Google,Authentication,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google\Authentication.cs,ThrowOnError,The following statement contains a magic number: using (StreamReader reader = new StreamReader (response.GetResponseStream ())) {  				string str;  				while ((str = reader.ReadLine ()) != null) {  					if (str.StartsWith ("Url=")) {  						url = str.Substring (4);  					} else if (str.StartsWith ("Error=")) {  						/* These are the values for Error  							None'  							BadAuthentication'  							NotVerified'  							TermsNotAgreed'  							CaptchaRequired'  							Unknown'  							AccountDeleted'  							AccountDisabled'  							ServiceUnavailable  						*/  						code = str.Substring (6);  					} else if (str.StartsWith ("CaptchaToken=")) {  						token = str.Substring (13);  					} else if (str.StartsWith ("CaptchaUrl=")) {  						captcha_url = str.Substring (11);  					}  				}  			}
Magic Number,Mono.Google,Authentication,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google\Authentication.cs,ThrowOnError,The following statement contains a magic number: using (StreamReader reader = new StreamReader (response.GetResponseStream ())) {  				string str;  				while ((str = reader.ReadLine ()) != null) {  					if (str.StartsWith ("Url=")) {  						url = str.Substring (4);  					} else if (str.StartsWith ("Error=")) {  						/* These are the values for Error  							None'  							BadAuthentication'  							NotVerified'  							TermsNotAgreed'  							CaptchaRequired'  							Unknown'  							AccountDeleted'  							AccountDisabled'  							ServiceUnavailable  						*/  						code = str.Substring (6);  					} else if (str.StartsWith ("CaptchaToken=")) {  						token = str.Substring (13);  					} else if (str.StartsWith ("CaptchaUrl=")) {  						captcha_url = str.Substring (11);  					}  				}  			}
Magic Number,Mono.Google,Authentication,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google\Authentication.cs,ThrowOnError,The following statement contains a magic number: using (StreamReader reader = new StreamReader (response.GetResponseStream ())) {  				string str;  				while ((str = reader.ReadLine ()) != null) {  					if (str.StartsWith ("Url=")) {  						url = str.Substring (4);  					} else if (str.StartsWith ("Error=")) {  						/* These are the values for Error  							None'  							BadAuthentication'  							NotVerified'  							TermsNotAgreed'  							CaptchaRequired'  							Unknown'  							AccountDeleted'  							AccountDisabled'  							ServiceUnavailable  						*/  						code = str.Substring (6);  					} else if (str.StartsWith ("CaptchaToken=")) {  						token = str.Substring (13);  					} else if (str.StartsWith ("CaptchaUrl=")) {  						captcha_url = str.Substring (11);  					}  				}  			}
Magic Number,Mono.Google,GoogleConnection,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google\GoogleConnection.cs,DownloadBytes,The following statement contains a magic number: using (Stream stream = response.GetResponseStream ()) {  				if (response.ContentLength != -1) {  					bytes = new byte [response.ContentLength];  					stream.Read (bytes' 0' bytes.Length);  				} else {  					MemoryStream ms = new MemoryStream ();  					bytes = new byte [4096];  					int nread;  					while ((nread = stream.Read (bytes' 0' bytes.Length)) > 0) {  						ms.Write (bytes' 0' nread);  						if (nread < bytes.Length)  							break;  					}  					bytes = ms.ToArray ();  				}  			}
Magic Number,Mono.Google,GoogleConnection,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google\GoogleConnection.cs,DownloadToStream,The following statement contains a magic number: using (Stream stream = response.GetResponseStream ()) {  				bytes = new byte [4096];  				int nread;  				while ((nread = stream.Read (bytes' 0' bytes.Length)) > 0) {  					output.Write (bytes' 0' nread);  				}  			}
Magic Number,Mono.Google,MultipartRequest,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google\MultipartRequest.cs,AddHeader,The following statement contains a magic number: if (need_crlf)  				output_stream.Write (crlf' 0' 2);
Magic Number,Mono.Google,MultipartRequest,C:\repos\mono_f-spot\lib\Mono.Google\Mono.Google\MultipartRequest.cs,AddHeader,The following statement contains a magic number: if (last)  				output_stream.Write (crlf' 0' 2);
