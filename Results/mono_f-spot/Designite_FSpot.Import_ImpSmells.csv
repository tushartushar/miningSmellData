Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,FSpot.Import,ImportController,C:\repos\mono_f-spot\src\Core\FSpot.Import\ImportController.cs,DoImport,The method has 8 parameters. Parameters: db' photos' tagsToAttach' duplicateDetect' copyFiles' removeOriginals' reportProgress' token
Long Parameter List,FSpot.Import,ImportController,C:\repos\mono_f-spot\src\Core\FSpot.Import\ImportController.cs,ImportPhoto,The method has 6 parameters. Parameters: db' item' roll' tagsToAttach' duplicateDetect' copyFiles
Long Parameter List,FSpot.Import,IImportController,C:\repos\mono_f-spot\src\Core\FSpot.Import\IImportController.cs,DoImport,The method has 8 parameters. Parameters: db' photos' tagsToAttach' duplicateDetect' copyFiles' removeOriginals' reportProgress' token
Magic Number,FSpot.Import,ImportController,C:\repos\mono_f-spot\src\Core\FSpot.Import\ImportController.cs,ImportPhoto,The following statement contains a magic number: thumbnailLoader.Request (item.DefaultVersion.Uri' ThumbnailSize.Large' 10);
Magic Number,FSpot.Import,MetadataImporter,C:\repos\mono_f-spot\src\Core\FSpot.Import\MetadataImporter.cs,Import,The following statement contains a magic number: using (var metadata = Metadata.Parse (importingFrom.DefaultVersion.Uri)) {  				if (metadata == null)  					return true;    				// Copy Rating  				var rating = metadata.ImageTag.Rating;  				if (rating.HasValue) {  					var rating_val = Math.Min (metadata.ImageTag.Rating.Value' 5);  					photo.Rating = Math.Max (0' rating_val);  				}    				// Copy Keywords  				foreach (var keyword in metadata.ImageTag.Keywords) {  					AddTagToPhoto (photo' keyword);  				}    				// XXX: We might want to copy more data.  			}
