Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,Cyclomatic complexity of the method is 8
Long Identifier,Hyena.Data.Sqlite.Tests,DbBoundType,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\DbBoundType.cs,,The length of the parameter public_date_time_proprety_field is 31.
Long Identifier,Hyena.Data.Sqlite.Tests,DbBoundType,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\DbBoundType.cs,,The length of the parameter public_time_span_property_field is 31.
Long Identifier,Hyena.Data.Sqlite.Tests,DbBoundType,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\DbBoundType.cs,,The length of the parameter public_int_enum_property_field is 30.
Long Identifier,Hyena.Data.Sqlite.Tests,DbBoundType,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\DbBoundType.cs,,The length of the parameter public_long_enum_property_field is 31.
Long Identifier,Hyena.Data.Sqlite.Tests,DbBoundType,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\DbBoundType.cs,,The length of the parameter private_date_time_property_field is 32.
Long Identifier,Hyena.Data.Sqlite.Tests,DbBoundType,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\DbBoundType.cs,,The length of the parameter private_time_span_property_field is 32.
Long Identifier,Hyena.Data.Sqlite.Tests,DbBoundType,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\DbBoundType.cs,,The length of the parameter private_int_enum_property_field is 31.
Long Identifier,Hyena.Data.Sqlite.Tests,DbBoundType,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\DbBoundType.cs,,The length of the parameter private_long_enum_property_field is 32.
Long Statement,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,Constructor,The length of the statement  "            HyenaSqliteCommand cmd = new HyenaSqliteCommand ("select foo from bar where baz = ?' bbz = ?' this = ?"' "a"' 32' "22");" is 120.
Long Statement,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,ParameterSerialization,The length of the statement  "            Assert.AreEqual ("select foo from bar where baz = 'It''s complicated' \"but\" ''''why not''''?'"' GetGeneratedSql (cmd' "It's complicated' \"but\" ''why not''?"));" is 163.
Long Statement,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,ParameterSerialization,The length of the statement  "            Assert.AreEqual ("select foo from bar where baz = 931309200"' GetGeneratedSql (cmd' new DateTime (1999' 7' 7).ToLocalTime ()));" is 127.
Long Statement,Hyena.Data.Sqlite.Tests,SqliteModelProviderTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteModelProviderTests.cs,DateTimeMembers,The length of the statement  "            string command = String.Format ("SELECT PrivateDateTimeField FROM {0} WHERE PrimaryKey = {1}"' provider.TableName' newed_item.PrimaryKey);" is 138.
Long Statement,Hyena.Data.Sqlite.Tests,SqliteModelProviderTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteModelProviderTests.cs,TimeSpanMembers,The length of the statement  "            string command = String.Format ("SELECT PrivateTimeSpanProperty FROM {0} WHERE PrimaryKey = {1}"' provider.TableName' newed_item.PrimaryKey);" is 141.
Long Statement,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,MultipleCommands,The length of the statement  "                using (var stmt = con.CreateStatement ("CREATE TABLE Lusers (ID INTEGER PRIMARY KEY' Name TEXT); INSERT INTO Lusers (Name) VALUES ('Foo')")) {" is 142.
Long Statement,Hyena.Query.Tests,QueryTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Query\QueryTests.cs,EscapeUri,The length of the statement  "                @"(CoreTracks.Uri IS NOT NULL AND CoreTracks.Uri LIKE '%space\%203quotes\%60''\%22underscore\_percentage\%25slash/backslash\%5C%' ESCAPE '\')"'" is 143.
Long Statement,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,TestFormatInterleaved,The length of the statement  "            var format = new Func<string' string> ((fmt) => StringUtil.FormatInterleaved (fmt' objects).Select (o => o.ToString ()).Join (""));" is 131.
Empty Catch Block,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,IdentifiesParameters,The method has an empty catch block.
Empty Catch Block,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestBindWhileReading,The method has an empty catch block.
Empty Catch Block,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestQueryWhileReading,The method has an empty catch block.
Empty Catch Block,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestQueryWhileReading,The method has an empty catch block.
Empty Catch Block,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestQueryWhileReading,The method has an empty catch block.
Empty Catch Block,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,Test,The method has an empty catch block.
Empty Catch Block,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestBinding,The method has an empty catch block.
Empty Catch Block,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestBinding,The method has an empty catch block.
Empty Catch Block,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestBinding,The method has an empty catch block.
Empty Catch Block,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,CreateUsers,The method has an empty catch block.
Empty Catch Block,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,CheckInterleavedAccess,The method has an empty catch block.
Empty Catch Block,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,MultipleCommands,The method has an empty catch block.
Empty Catch Block,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,Execute,The method has an empty catch block.
Empty Catch Block,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,Md5Function,The method has an empty catch block.
Empty Catch Block,Hyena.Downloader.Tests,HttpTestServer,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Downloader\HttpTestServer.cs,GenerateStaticContent,The method has an empty catch block.
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: i < 20
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: h.Remove(10);
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: h.Remove(2);
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: h.Remove(11);
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: h.Remove(9);
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: h.Remove(19);
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: Assert.AreEqual(h.Pop()' 18);
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: Assert.AreEqual(h.Pop()' 17);
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: Assert.AreEqual(h.Pop()' 16);
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: Assert.AreEqual(h.Pop()' 15);
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: Assert.AreEqual(h.Pop()' 14);
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: Assert.AreEqual(h.Pop()' 13);
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: Assert.AreEqual(h.Pop()' 12);
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: Assert.AreEqual(h.Pop()' 8);
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: Assert.AreEqual(h.Pop()' 7);
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: Assert.AreEqual(h.Pop()' 6);
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: Assert.AreEqual(h.Pop()' 5);
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: Assert.AreEqual(h.Pop()' 4);
Magic Number,Hyena.Collections.Tests,IntervalHeapTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\IntervalHeapTests.cs,RemoveItemsFromHeap,The following statement contains a magic number: Assert.AreEqual(h.Pop()' 3);
Magic Number,Hyena.Collections.Tests,QueuePipelineTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\QueuePipelineTests.cs,BuildPipeline,The following statement contains a magic number: BuildPipeline (2);
Magic Number,Hyena.Collections.Tests,QueuePipelineTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\QueuePipelineTests.cs,BuildPipeline,The following statement contains a magic number: BuildPipeline (3);
Magic Number,Hyena.Collections.Tests,QueuePipelineTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\QueuePipelineTests.cs,BuildPipeline,The following statement contains a magic number: BuildPipeline (10);
Magic Number,Hyena.Collections.Tests,QueuePipelineTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\QueuePipelineTests.cs,BuildPipeline,The following statement contains a magic number: BuildPipeline (1000);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,SingleRanges,The following statement contains a magic number: _TestRanges (new RangeCollection ()' new int [] { 1' 11' 5' 7' 15' 32' 3' 9' 34 });
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,SingleRanges,The following statement contains a magic number: _TestRanges (new RangeCollection ()' new int [] { 1' 11' 5' 7' 15' 32' 3' 9' 34 });
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,SingleRanges,The following statement contains a magic number: _TestRanges (new RangeCollection ()' new int [] { 1' 11' 5' 7' 15' 32' 3' 9' 34 });
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,SingleRanges,The following statement contains a magic number: _TestRanges (new RangeCollection ()' new int [] { 1' 11' 5' 7' 15' 32' 3' 9' 34 });
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,SingleRanges,The following statement contains a magic number: _TestRanges (new RangeCollection ()' new int [] { 1' 11' 5' 7' 15' 32' 3' 9' 34 });
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,SingleRanges,The following statement contains a magic number: _TestRanges (new RangeCollection ()' new int [] { 1' 11' 5' 7' 15' 32' 3' 9' 34 });
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,SingleRanges,The following statement contains a magic number: _TestRanges (new RangeCollection ()' new int [] { 1' 11' 5' 7' 15' 32' 3' 9' 34 });
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,SingleRanges,The following statement contains a magic number: _TestRanges (new RangeCollection ()' new int [] { 1' 11' 5' 7' 15' 32' 3' 9' 34 });
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,MergedRanges,The following statement contains a magic number: int [] indexes = new int [] { 0' 7' 5' 9' 1' 6' 8' 2' 10' 12 };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,MergedRanges,The following statement contains a magic number: int [] indexes = new int [] { 0' 7' 5' 9' 1' 6' 8' 2' 10' 12 };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,MergedRanges,The following statement contains a magic number: int [] indexes = new int [] { 0' 7' 5' 9' 1' 6' 8' 2' 10' 12 };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,MergedRanges,The following statement contains a magic number: int [] indexes = new int [] { 0' 7' 5' 9' 1' 6' 8' 2' 10' 12 };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,MergedRanges,The following statement contains a magic number: int [] indexes = new int [] { 0' 7' 5' 9' 1' 6' 8' 2' 10' 12 };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,MergedRanges,The following statement contains a magic number: int [] indexes = new int [] { 0' 7' 5' 9' 1' 6' 8' 2' 10' 12 };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,MergedRanges,The following statement contains a magic number: int [] indexes = new int [] { 0' 7' 5' 9' 1' 6' 8' 2' 10' 12 };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,MergedRanges,The following statement contains a magic number: int [] indexes = new int [] { 0' 7' 5' 9' 1' 6' 8' 2' 10' 12 };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,MergedRanges,The following statement contains a magic number: Assert.AreEqual (3' range.RangeCount);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,MergedRanges,The following statement contains a magic number: switch (i++) {                     case 0:                         Assert.AreEqual (0' r.Start);                         Assert.AreEqual (2' r.End);                         break;                     case 1:                         Assert.AreEqual (5' r.Start);                         Assert.AreEqual (10' r.End);                         break;                     case 2:                         Assert.AreEqual (12' r.Start);                         Assert.AreEqual (12' r.End);                         break;                     default:                         Assert.Fail ("This should not be reached!");                         break;                 }
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,MergedRanges,The following statement contains a magic number: switch (i++) {                     case 0:                         Assert.AreEqual (0' r.Start);                         Assert.AreEqual (2' r.End);                         break;                     case 1:                         Assert.AreEqual (5' r.Start);                         Assert.AreEqual (10' r.End);                         break;                     case 2:                         Assert.AreEqual (12' r.Start);                         Assert.AreEqual (12' r.End);                         break;                     default:                         Assert.Fail ("This should not be reached!");                         break;                 }
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,MergedRanges,The following statement contains a magic number: switch (i++) {                     case 0:                         Assert.AreEqual (0' r.Start);                         Assert.AreEqual (2' r.End);                         break;                     case 1:                         Assert.AreEqual (5' r.Start);                         Assert.AreEqual (10' r.End);                         break;                     case 2:                         Assert.AreEqual (12' r.Start);                         Assert.AreEqual (12' r.End);                         break;                     default:                         Assert.Fail ("This should not be reached!");                         break;                 }
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,MergedRanges,The following statement contains a magic number: switch (i++) {                     case 0:                         Assert.AreEqual (0' r.Start);                         Assert.AreEqual (2' r.End);                         break;                     case 1:                         Assert.AreEqual (5' r.Start);                         Assert.AreEqual (10' r.End);                         break;                     case 2:                         Assert.AreEqual (12' r.Start);                         Assert.AreEqual (12' r.End);                         break;                     default:                         Assert.Fail ("This should not be reached!");                         break;                 }
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,MergedRanges,The following statement contains a magic number: switch (i++) {                     case 0:                         Assert.AreEqual (0' r.Start);                         Assert.AreEqual (2' r.End);                         break;                     case 1:                         Assert.AreEqual (5' r.Start);                         Assert.AreEqual (10' r.End);                         break;                     case 2:                         Assert.AreEqual (12' r.Start);                         Assert.AreEqual (12' r.End);                         break;                     default:                         Assert.Fail ("This should not be reached!");                         break;                 }
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,MergedRanges,The following statement contains a magic number: switch (i++) {                     case 0:                         Assert.AreEqual (0' r.Start);                         Assert.AreEqual (2' r.End);                         break;                     case 1:                         Assert.AreEqual (5' r.Start);                         Assert.AreEqual (10' r.End);                         break;                     case 2:                         Assert.AreEqual (12' r.Start);                         Assert.AreEqual (12' r.End);                         break;                     default:                         Assert.Fail ("This should not be reached!");                         break;                 }
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,LargeSequentialContains,The following statement contains a magic number: int i' n = 1000000;
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,LargeSequential,The following statement contains a magic number: int i' n = 1000000;
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,LargeNonAdjacent,The following statement contains a magic number: int i' n = 1000000;
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,LargeNonAdjacent,The following statement contains a magic number: Assert.AreEqual (n / 2' range.Count);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,LargeNonAdjacent,The following statement contains a magic number: i += 2;
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveSingles,The following statement contains a magic number: int [] indexes = new int [] { 0' 2' 4' 6' 8' 10' 12' 14 };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveSingles,The following statement contains a magic number: int [] indexes = new int [] { 0' 2' 4' 6' 8' 10' 12' 14 };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveSingles,The following statement contains a magic number: int [] indexes = new int [] { 0' 2' 4' 6' 8' 10' 12' 14 };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveSingles,The following statement contains a magic number: int [] indexes = new int [] { 0' 2' 4' 6' 8' 10' 12' 14 };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveSingles,The following statement contains a magic number: int [] indexes = new int [] { 0' 2' 4' 6' 8' 10' 12' 14 };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveSingles,The following statement contains a magic number: int [] indexes = new int [] { 0' 2' 4' 6' 8' 10' 12' 14 };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveSingles,The following statement contains a magic number: int [] indexes = new int [] { 0' 2' 4' 6' 8' 10' 12' 14 };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveStarts,The following statement contains a magic number: Assert.AreEqual (4' range.RangeCount);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveStarts,The following statement contains a magic number: Assert.AreEqual (true' range.Contains (2));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveStarts,The following statement contains a magic number: range.Remove (2);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveStarts,The following statement contains a magic number: Assert.AreEqual (false' range.Contains (2));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveStarts,The following statement contains a magic number: Assert.AreEqual (4' range.RangeCount);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveStarts,The following statement contains a magic number: Assert.AreEqual (3' range.Ranges[0].Start);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveStarts,The following statement contains a magic number: Assert.AreEqual (5' range.Ranges[0].End);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveStarts,The following statement contains a magic number: Assert.AreEqual (true' range.Contains (14));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveStarts,The following statement contains a magic number: range.Remove (14);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveStarts,The following statement contains a magic number: Assert.AreEqual (false' range.Contains (14));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveStarts,The following statement contains a magic number: Assert.AreEqual (4' range.RangeCount);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveStarts,The following statement contains a magic number: Assert.AreEqual (15' range.Ranges[2].Start);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveStarts,The following statement contains a magic number: Assert.AreEqual (15' range.Ranges[2].Start);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveStarts,The following statement contains a magic number: Assert.AreEqual (15' range.Ranges[2].End);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveStarts,The following statement contains a magic number: Assert.AreEqual (15' range.Ranges[2].End);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveEnds,The following statement contains a magic number: Assert.AreEqual (true' range.Contains (5));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveEnds,The following statement contains a magic number: range.Remove (5);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveEnds,The following statement contains a magic number: Assert.AreEqual (false' range.Contains (5));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveEnds,The following statement contains a magic number: Assert.AreEqual (5' range.RangeCount);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveEnds,The following statement contains a magic number: Assert.AreEqual (2' range.Ranges[1].Start);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveEnds,The following statement contains a magic number: Assert.AreEqual (4' range.Ranges[1].End);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveEnds,The following statement contains a magic number: Assert.AreEqual (true' range.Contains (15));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveEnds,The following statement contains a magic number: range.Remove (15);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveEnds,The following statement contains a magic number: Assert.AreEqual (false' range.Contains (15));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveEnds,The following statement contains a magic number: Assert.AreEqual (5' range.RangeCount);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveEnds,The following statement contains a magic number: Assert.AreEqual (14' range.Ranges[3].Start);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveEnds,The following statement contains a magic number: Assert.AreEqual (14' range.Ranges[3].Start);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveEnds,The following statement contains a magic number: Assert.AreEqual (14' range.Ranges[3].End);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveEnds,The following statement contains a magic number: Assert.AreEqual (14' range.Ranges[3].End);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (5' range.RangeCount);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (14' range.Ranges[3].Start);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (14' range.Ranges[3].Start);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (15' range.Ranges[3].End);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (15' range.Ranges[3].End);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (true' range.Contains (9));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: range.Remove (9);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (false' range.Contains (9));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (6' range.RangeCount);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (7' range.Ranges[2].Start);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (7' range.Ranges[2].Start);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (8' range.Ranges[2].End);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (8' range.Ranges[2].End);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (10' range.Ranges[3].Start);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (10' range.Ranges[3].Start);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (11' range.Ranges[3].End);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (11' range.Ranges[3].End);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (14' range.Ranges[4].Start);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (14' range.Ranges[4].Start);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (15' range.Ranges[4].End);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,RemoveMids,The following statement contains a magic number: Assert.AreEqual (15' range.Ranges[4].End);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: int [] indexes = new int [] {                 0'                 2' 3' 4' 5'                 7' 8' 9' 10' 11'                 14' 15'                 17' 18' 19             };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: int [] indexes = new int [] {                 0'                 2' 3' 4' 5'                 7' 8' 9' 10' 11'                 14' 15'                 17' 18' 19             };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: int [] indexes = new int [] {                 0'                 2' 3' 4' 5'                 7' 8' 9' 10' 11'                 14' 15'                 17' 18' 19             };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: int [] indexes = new int [] {                 0'                 2' 3' 4' 5'                 7' 8' 9' 10' 11'                 14' 15'                 17' 18' 19             };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: int [] indexes = new int [] {                 0'                 2' 3' 4' 5'                 7' 8' 9' 10' 11'                 14' 15'                 17' 18' 19             };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: int [] indexes = new int [] {                 0'                 2' 3' 4' 5'                 7' 8' 9' 10' 11'                 14' 15'                 17' 18' 19             };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: int [] indexes = new int [] {                 0'                 2' 3' 4' 5'                 7' 8' 9' 10' 11'                 14' 15'                 17' 18' 19             };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: int [] indexes = new int [] {                 0'                 2' 3' 4' 5'                 7' 8' 9' 10' 11'                 14' 15'                 17' 18' 19             };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: int [] indexes = new int [] {                 0'                 2' 3' 4' 5'                 7' 8' 9' 10' 11'                 14' 15'                 17' 18' 19             };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: int [] indexes = new int [] {                 0'                 2' 3' 4' 5'                 7' 8' 9' 10' 11'                 14' 15'                 17' 18' 19             };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: int [] indexes = new int [] {                 0'                 2' 3' 4' 5'                 7' 8' 9' 10' 11'                 14' 15'                 17' 18' 19             };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: int [] indexes = new int [] {                 0'                 2' 3' 4' 5'                 7' 8' 9' 10' 11'                 14' 15'                 17' 18' 19             };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: int [] indexes = new int [] {                 0'                 2' 3' 4' 5'                 7' 8' 9' 10' 11'                 14' 15'                 17' 18' 19             };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: int [] indexes = new int [] {                 0'                 2' 3' 4' 5'                 7' 8' 9' 10' 11'                 14' 15'                 17' 18' 19             };
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: switch (i++) {                     case 0:                         Assert.AreEqual (0' r.Start);                         Assert.AreEqual (0' r.End);                         break;                     case 1:                         Assert.AreEqual (2' r.Start);                         Assert.AreEqual (5' r.End);                         break;                     case 2:                         Assert.AreEqual (7' r.Start);                         Assert.AreEqual (11' r.End);                         break;                     case 3:                         Assert.AreEqual (14' r.Start);                         Assert.AreEqual (15' r.End);                         break;                     case 4:                         Assert.AreEqual (17' r.Start);                         Assert.AreEqual (19' r.End);                         break;                     default:                         Assert.Fail ("Should never reach here");                         break;                 }
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: switch (i++) {                     case 0:                         Assert.AreEqual (0' r.Start);                         Assert.AreEqual (0' r.End);                         break;                     case 1:                         Assert.AreEqual (2' r.Start);                         Assert.AreEqual (5' r.End);                         break;                     case 2:                         Assert.AreEqual (7' r.Start);                         Assert.AreEqual (11' r.End);                         break;                     case 3:                         Assert.AreEqual (14' r.Start);                         Assert.AreEqual (15' r.End);                         break;                     case 4:                         Assert.AreEqual (17' r.Start);                         Assert.AreEqual (19' r.End);                         break;                     default:                         Assert.Fail ("Should never reach here");                         break;                 }
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: switch (i++) {                     case 0:                         Assert.AreEqual (0' r.Start);                         Assert.AreEqual (0' r.End);                         break;                     case 1:                         Assert.AreEqual (2' r.Start);                         Assert.AreEqual (5' r.End);                         break;                     case 2:                         Assert.AreEqual (7' r.Start);                         Assert.AreEqual (11' r.End);                         break;                     case 3:                         Assert.AreEqual (14' r.Start);                         Assert.AreEqual (15' r.End);                         break;                     case 4:                         Assert.AreEqual (17' r.Start);                         Assert.AreEqual (19' r.End);                         break;                     default:                         Assert.Fail ("Should never reach here");                         break;                 }
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: switch (i++) {                     case 0:                         Assert.AreEqual (0' r.Start);                         Assert.AreEqual (0' r.End);                         break;                     case 1:                         Assert.AreEqual (2' r.Start);                         Assert.AreEqual (5' r.End);                         break;                     case 2:                         Assert.AreEqual (7' r.Start);                         Assert.AreEqual (11' r.End);                         break;                     case 3:                         Assert.AreEqual (14' r.Start);                         Assert.AreEqual (15' r.End);                         break;                     case 4:                         Assert.AreEqual (17' r.Start);                         Assert.AreEqual (19' r.End);                         break;                     default:                         Assert.Fail ("Should never reach here");                         break;                 }
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: switch (i++) {                     case 0:                         Assert.AreEqual (0' r.Start);                         Assert.AreEqual (0' r.End);                         break;                     case 1:                         Assert.AreEqual (2' r.Start);                         Assert.AreEqual (5' r.End);                         break;                     case 2:                         Assert.AreEqual (7' r.Start);                         Assert.AreEqual (11' r.End);                         break;                     case 3:                         Assert.AreEqual (14' r.Start);                         Assert.AreEqual (15' r.End);                         break;                     case 4:                         Assert.AreEqual (17' r.Start);                         Assert.AreEqual (19' r.End);                         break;                     default:                         Assert.Fail ("Should never reach here");                         break;                 }
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: switch (i++) {                     case 0:                         Assert.AreEqual (0' r.Start);                         Assert.AreEqual (0' r.End);                         break;                     case 1:                         Assert.AreEqual (2' r.Start);                         Assert.AreEqual (5' r.End);                         break;                     case 2:                         Assert.AreEqual (7' r.Start);                         Assert.AreEqual (11' r.End);                         break;                     case 3:                         Assert.AreEqual (14' r.Start);                         Assert.AreEqual (15' r.End);                         break;                     case 4:                         Assert.AreEqual (17' r.Start);                         Assert.AreEqual (19' r.End);                         break;                     default:                         Assert.Fail ("Should never reach here");                         break;                 }
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: switch (i++) {                     case 0:                         Assert.AreEqual (0' r.Start);                         Assert.AreEqual (0' r.End);                         break;                     case 1:                         Assert.AreEqual (2' r.Start);                         Assert.AreEqual (5' r.End);                         break;                     case 2:                         Assert.AreEqual (7' r.Start);                         Assert.AreEqual (11' r.End);                         break;                     case 3:                         Assert.AreEqual (14' r.Start);                         Assert.AreEqual (15' r.End);                         break;                     case 4:                         Assert.AreEqual (17' r.Start);                         Assert.AreEqual (19' r.End);                         break;                     default:                         Assert.Fail ("Should never reach here");                         break;                 }
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: switch (i++) {                     case 0:                         Assert.AreEqual (0' r.Start);                         Assert.AreEqual (0' r.End);                         break;                     case 1:                         Assert.AreEqual (2' r.Start);                         Assert.AreEqual (5' r.End);                         break;                     case 2:                         Assert.AreEqual (7' r.Start);                         Assert.AreEqual (11' r.End);                         break;                     case 3:                         Assert.AreEqual (14' r.Start);                         Assert.AreEqual (15' r.End);                         break;                     case 4:                         Assert.AreEqual (17' r.Start);                         Assert.AreEqual (19' r.End);                         break;                     default:                         Assert.Fail ("Should never reach here");                         break;                 }
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: switch (i++) {                     case 0:                         Assert.AreEqual (0' r.Start);                         Assert.AreEqual (0' r.End);                         break;                     case 1:                         Assert.AreEqual (2' r.Start);                         Assert.AreEqual (5' r.End);                         break;                     case 2:                         Assert.AreEqual (7' r.Start);                         Assert.AreEqual (11' r.End);                         break;                     case 3:                         Assert.AreEqual (14' r.Start);                         Assert.AreEqual (15' r.End);                         break;                     case 4:                         Assert.AreEqual (17' r.Start);                         Assert.AreEqual (19' r.End);                         break;                     default:                         Assert.Fail ("Should never reach here");                         break;                 }
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: switch (i++) {                     case 0:                         Assert.AreEqual (0' r.Start);                         Assert.AreEqual (0' r.End);                         break;                     case 1:                         Assert.AreEqual (2' r.Start);                         Assert.AreEqual (5' r.End);                         break;                     case 2:                         Assert.AreEqual (7' r.Start);                         Assert.AreEqual (11' r.End);                         break;                     case 3:                         Assert.AreEqual (14' r.Start);                         Assert.AreEqual (15' r.End);                         break;                     case 4:                         Assert.AreEqual (17' r.Start);                         Assert.AreEqual (19' r.End);                         break;                     default:                         Assert.Fail ("Should never reach here");                         break;                 }
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,_SetupTestRemoveMerges,The following statement contains a magic number: switch (i++) {                     case 0:                         Assert.AreEqual (0' r.Start);                         Assert.AreEqual (0' r.End);                         break;                     case 1:                         Assert.AreEqual (2' r.Start);                         Assert.AreEqual (5' r.End);                         break;                     case 2:                         Assert.AreEqual (7' r.Start);                         Assert.AreEqual (11' r.End);                         break;                     case 3:                         Assert.AreEqual (14' r.Start);                         Assert.AreEqual (15' r.End);                         break;                     case 4:                         Assert.AreEqual (17' r.Start);                         Assert.AreEqual (19' r.End);                         break;                     default:                         Assert.Fail ("Should never reach here");                         break;                 }
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: range.Add (2);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: range.Add (3);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: range.Add (5);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: range.Add (6);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: range.Add (7);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: range.Add (8);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: range.Add (11);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: range.Add (12);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: range.Add (13);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (1' range.IndexOf (2));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (2' range.IndexOf (3));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (2' range.IndexOf (3));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (3' range.IndexOf (5));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (3' range.IndexOf (5));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (4' range.IndexOf (6));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (4' range.IndexOf (6));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (5' range.IndexOf (7));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (5' range.IndexOf (7));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (6' range.IndexOf (8));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (6' range.IndexOf (8));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (7' range.IndexOf (11));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (7' range.IndexOf (11));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (8' range.IndexOf (12));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (8' range.IndexOf (12));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (9' range.IndexOf (13));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (9' range.IndexOf (13));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual (-1' range.IndexOf (99));
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: range.Add (2);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: range.Add (7);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: range.Add (8);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: range.Add (9);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: range.Add (11);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: range.Add (12);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: range.Add (13);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: Assert.AreEqual (2' range[2]);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: Assert.AreEqual (2' range[2]);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: Assert.AreEqual (7' range[3]);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: Assert.AreEqual (7' range[3]);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: Assert.AreEqual (8' range[4]);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: Assert.AreEqual (8' range[4]);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: Assert.AreEqual (9' range[5]);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: Assert.AreEqual (9' range[5]);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: Assert.AreEqual (11' range[6]);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: Assert.AreEqual (11' range[6]);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: Assert.AreEqual (12' range[7]);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: Assert.AreEqual (12' range[7]);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: Assert.AreEqual (13' range[8]);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,IndexerForGoodIndexes,The following statement contains a magic number: Assert.AreEqual (13' range[8]);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,ExplicitInterface,The following statement contains a magic number: range.Add (2);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,ExplicitInterface,The following statement contains a magic number: range.Add (5);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,ExplicitInterface,The following statement contains a magic number: range.Add (6);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,ExplicitInterface,The following statement contains a magic number: Assert.AreEqual (4' range.Count);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: c.Add (-10);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: c.Add (-5);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: c.Add (5);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: c.Add (-8);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: c.Add (10);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: c.Add (-9);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: c.Add (-11);
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: Assert.IsTrue (c.Contains(-10)' "#1");
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: Assert.IsTrue (c.Contains(-5)' "#2");
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: Assert.IsTrue (c.Contains(5)' "#3");
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: Assert.IsTrue (c.Contains(-8)' "#4");
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: Assert.AreEqual (4' c.RangeCount' "#5");
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: Assert.AreEqual (new RangeCollection.Range (-11' -8)' c.Ranges[0]' "#6");
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: Assert.AreEqual (new RangeCollection.Range (-11' -8)' c.Ranges[0]' "#6");
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: Assert.AreEqual (new RangeCollection.Range (-5' -5)' c.Ranges[1]' "#7");
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: Assert.AreEqual (new RangeCollection.Range (-5' -5)' c.Ranges[1]' "#7");
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: Assert.AreEqual (new RangeCollection.Range (5' 5)' c.Ranges[2]' "#8");
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: Assert.AreEqual (new RangeCollection.Range (5' 5)' c.Ranges[2]' "#8");
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: Assert.AreEqual (new RangeCollection.Range (5' 5)' c.Ranges[2]' "#8");
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: Assert.AreEqual (new RangeCollection.Range (10' 10)' c.Ranges[3]' "#9");
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: Assert.AreEqual (new RangeCollection.Range (10' 10)' c.Ranges[3]' "#9");
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: Assert.AreEqual (new RangeCollection.Range (10' 10)' c.Ranges[3]' "#9");
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: Assert.AreEqual (0' c.FindRangeIndexForValue (-9)' "#10");
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,NegativeIndices,The following statement contains a magic number: Assert.IsTrue (c.FindRangeIndexForValue (-7) < 0' "#11");
Magic Number,Hyena.Collections.Tests,RangeCollectionTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Collections\RangeCollectionTests.cs,GetAddress,The following statement contains a magic number: return (int)(System.Net.IPAddress.NetworkToHostOrder (                 BitConverter.ToInt32 (address.GetAddressBytes ()' 0)) >> 32);
Magic Number,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,IdentifiesParameters,The following statement contains a magic number: cmd = new HyenaSqliteCommand ("select foo from bar where baz = ?' bbz = ?' this = ?"'                     "a"' 32);
Magic Number,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,IdentifiesParameters,The following statement contains a magic number: cmd = new HyenaSqliteCommand ("select foo from bar where baz = ?' bbz = ?' this = ?"'                     "a"' 32' "22");
Magic Number,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,Constructor,The following statement contains a magic number: HyenaSqliteCommand cmd = new HyenaSqliteCommand ("select foo from bar where baz = ?' bbz = ?' this = ?"' "a"' 32' "22");
Magic Number,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,CultureInvariant,The following statement contains a magic number: HyenaSqliteCommand cmd = new HyenaSqliteCommand ("select foo from bar where baz = ?"' 32.2);
Magic Number,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,ParameterSerialization,The following statement contains a magic number: Assert.AreEqual ("select foo from bar where baz = 0"' GetGeneratedSql (cmd' new DateTime (1970' 1' 1).ToLocalTime ()));
Magic Number,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,ParameterSerialization,The following statement contains a magic number: Assert.AreEqual ("select foo from bar where baz = 931309200"' GetGeneratedSql (cmd' new DateTime (1999' 7' 7).ToLocalTime ()));
Magic Number,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,ParameterSerialization,The following statement contains a magic number: Assert.AreEqual ("select foo from bar where baz = 931309200"' GetGeneratedSql (cmd' new DateTime (1999' 7' 7).ToLocalTime ()));
Magic Number,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,ParameterSerialization,The following statement contains a magic number: Assert.AreEqual ("select foo from bar where baz = 931309200"' GetGeneratedSql (cmd' new DateTime (1999' 7' 7).ToLocalTime ()));
Magic Number,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,ParameterSerialization,The following statement contains a magic number: Assert.AreEqual ("select foo from bar where baz = 555.55"' GetGeneratedSql (cmd' 555.55f));
Magic Number,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,ParameterSerialization,The following statement contains a magic number: Assert.AreEqual ("select foo from bar where baz = 555.55"' GetGeneratedSql (cmd' 555.55));
Magic Number,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,ParameterSerialization,The following statement contains a magic number: Assert.AreEqual ("select foo from bar where baz = 555"' GetGeneratedSql (cmd' 555));
Magic Number,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,ParameterSerialization,The following statement contains a magic number: Assert.AreEqual ("select foo from bar where baz = NULL' bar = NULL' boo = 22"' GetGeneratedSql (cmd2' null' null' 22));
Magic Number,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,ParameterSerialization,The following statement contains a magic number: Assert.AreEqual ("select foo from bar where id in (1'2'4) and foo not in ('foo'''baz')"'                     GetGeneratedSql (cmd3' new int [] {1' 2' 4}' new string [] {"foo"' "baz"}));
Magic Number,Hyena.Data.Sqlite.Tests,SqliteCommandTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,ParameterSerialization,The following statement contains a magic number: Assert.AreEqual ("select foo from bar where id in (1'2'4) and foo not in ('foo'''baz')"'                     GetGeneratedSql (cmd3' new int [] {1' 2' 4}' new string [] {"foo"' "baz"}));
Magic Number,Hyena.Data.Sqlite.Tests,ObjectToSqlTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,TestDateTime,The following statement contains a magic number: AssertToSql (new DateTime (2000' 1' 2)' 946792800);
Magic Number,Hyena.Data.Sqlite.Tests,ObjectToSqlTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,TestDateTime,The following statement contains a magic number: AssertToSql (new DateTime (2000' 1' 2)' 946792800);
Magic Number,Hyena.Data.Sqlite.Tests,ObjectToSqlTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,TestDateTime,The following statement contains a magic number: AssertToSql (new DateTime (2000' 1' 2)' 946792800);
Magic Number,Hyena.Data.Sqlite.Tests,ObjectToSqlTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,TestDateTime,The following statement contains a magic number: AssertToSql (new DateTime (2000' 1' 2' 10' 9' 8' 7)' 946829348);
Magic Number,Hyena.Data.Sqlite.Tests,ObjectToSqlTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,TestDateTime,The following statement contains a magic number: AssertToSql (new DateTime (2000' 1' 2' 10' 9' 8' 7)' 946829348);
Magic Number,Hyena.Data.Sqlite.Tests,ObjectToSqlTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,TestDateTime,The following statement contains a magic number: AssertToSql (new DateTime (2000' 1' 2' 10' 9' 8' 7)' 946829348);
Magic Number,Hyena.Data.Sqlite.Tests,ObjectToSqlTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,TestDateTime,The following statement contains a magic number: AssertToSql (new DateTime (2000' 1' 2' 10' 9' 8' 7)' 946829348);
Magic Number,Hyena.Data.Sqlite.Tests,ObjectToSqlTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,TestDateTime,The following statement contains a magic number: AssertToSql (new DateTime (2000' 1' 2' 10' 9' 8' 7)' 946829348);
Magic Number,Hyena.Data.Sqlite.Tests,ObjectToSqlTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,TestDateTime,The following statement contains a magic number: AssertToSql (new DateTime (2000' 1' 2' 10' 9' 8' 7)' 946829348);
Magic Number,Hyena.Data.Sqlite.Tests,ObjectToSqlTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteCommandTests.cs,TestDateTime,The following statement contains a magic number: AssertToSql (new DateTime (2000' 1' 2' 10' 9' 8' 7)' 946829348);
Magic Number,Hyena.Data.Sqlite.Tests,SqliteModelProviderTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteModelProviderTests.cs,IntMembers,The following statement contains a magic number: newed_item.PublicIntField = 3141592;
Magic Number,Hyena.Data.Sqlite.Tests,SqliteModelProviderTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteModelProviderTests.cs,IntMembers,The following statement contains a magic number: newed_item.PublicIntProperty = 13;
Magic Number,Hyena.Data.Sqlite.Tests,SqliteModelProviderTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteModelProviderTests.cs,IntMembers,The following statement contains a magic number: newed_item.SetPrivateIntField (128);
Magic Number,Hyena.Data.Sqlite.Tests,SqliteModelProviderTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteModelProviderTests.cs,IntMembers,The following statement contains a magic number: newed_item.SetPrivateIntProperty (42);
Magic Number,Hyena.Data.Sqlite.Tests,SqliteModelProviderTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteModelProviderTests.cs,LongMembers,The following statement contains a magic number: newed_item.PublicLongField = 4926227057;
Magic Number,Hyena.Data.Sqlite.Tests,SqliteModelProviderTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteModelProviderTests.cs,LongMembers,The following statement contains a magic number: newed_item.PublicLongProperty = -932;
Magic Number,Hyena.Data.Sqlite.Tests,SqliteModelProviderTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteModelProviderTests.cs,LongMembers,The following statement contains a magic number: newed_item.SetPrivateLongField (3243);
Magic Number,Hyena.Data.Sqlite.Tests,SqliteModelProviderTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteModelProviderTests.cs,DateTimeMembers,The following statement contains a magic number: newed_item.PublicDateTimeProperty = new DateTime (1986' 4' 23);
Magic Number,Hyena.Data.Sqlite.Tests,SqliteModelProviderTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteModelProviderTests.cs,DateTimeMembers,The following statement contains a magic number: newed_item.PublicDateTimeProperty = new DateTime (1986' 4' 23);
Magic Number,Hyena.Data.Sqlite.Tests,SqliteModelProviderTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteModelProviderTests.cs,DateTimeMembers,The following statement contains a magic number: newed_item.PublicDateTimeProperty = new DateTime (1986' 4' 23);
Magic Number,Hyena.Data.Sqlite.Tests,SqliteModelProviderTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteModelProviderTests.cs,TimeSpanMembers,The following statement contains a magic number: newed_item.SetPrivateTimeSpanField (new TimeSpan (1' 39' 12));
Magic Number,Hyena.Data.Sqlite.Tests,SqliteModelProviderTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteModelProviderTests.cs,TimeSpanMembers,The following statement contains a magic number: newed_item.SetPrivateTimeSpanField (new TimeSpan (1' 39' 12));
Magic Number,Hyena.Data.Sqlite.Tests,CollationKeyTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteUtilTests.cs,TestKey,The following statement contains a magic number: CollationKeyTest ("\u0104"' new byte[] {14' 2' 1' 27' 1' 1' 1' 0});
Magic Number,Hyena.Data.Sqlite.Tests,CollationKeyTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteUtilTests.cs,TestKey,The following statement contains a magic number: CollationKeyTest ("\u0104"' new byte[] {14' 2' 1' 27' 1' 1' 1' 0});
Magic Number,Hyena.Data.Sqlite.Tests,CollationKeyTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteUtilTests.cs,TestKey,The following statement contains a magic number: CollationKeyTest ("\u0104"' new byte[] {14' 2' 1' 27' 1' 1' 1' 0});
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestBindWhileReading,The following statement contains a magic number: stmt.Bind (7);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestBindWhileReading,The following statement contains a magic number: Assert.AreEqual (7' reader[0]);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestBindWhileReading,The following statement contains a magic number: stmt.Bind (6);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestBindWhileReading,The following statement contains a magic number: Assert.AreEqual (7' reader[0]);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestBindWhileReading,The following statement contains a magic number: stmt.Bind (6);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestBindWhileReading,The following statement contains a magic number: Assert.AreEqual (6' stmt.Query<int> ());
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestQueryWhileReading,The following statement contains a magic number: stmt.Bind (7);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestQueryWhileReading,The following statement contains a magic number: Assert.AreEqual (7' reader[0]);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestQueryWhileReading,The following statement contains a magic number: Assert.AreEqual (7' reader[0]);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestQueryWhileReading,The following statement contains a magic number: stmt.Bind (6);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestQueryWhileReading,The following statement contains a magic number: Assert.AreEqual (6' stmt.Query<int> ());
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,Test,The following statement contains a magic number: Assert.AreEqual (7' reader.Get<int> (0));
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,Test,The following statement contains a magic number: Assert.AreEqual (7' reader[0]);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,Test,The following statement contains a magic number: Assert.AreEqual (7' reader["res"]);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestBinding,The following statement contains a magic number: stmt.Bind (1' 2);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestBinding,The following statement contains a magic number: stmt.Bind (21);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestBinding,The following statement contains a magic number: Assert.AreEqual (21' stmt.Query<int> ());
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestBinding,The following statement contains a magic number: stmt.Bind (1' "two"' 3.3);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestBinding,The following statement contains a magic number: Assert.AreEqual (3.3' reader[2]);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,TestBinding,The following statement contains a magic number: Assert.AreEqual (3.3' reader[2]);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,CreateTable,The following statement contains a magic number: Assert.AreEqual (2' stmt.Query<int> ());
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,CreateTable,The following statement contains a magic number: Assert.AreEqual (2' reader["ID"]);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,CreateTable,The following statement contains a magic number: Assert.AreEqual (2' reader[0]);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,CheckInterleavedAccess,The following statement contains a magic number: Assert.AreEqual (3' con.Query<int> ("SELECT COUNT(*) FROM Users"));
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,CheckInterleavedAccess,The following statement contains a magic number: Assert.AreEqual (4' con.Query<int> ("SELECT COUNT(*) FROM Users"));
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,CheckInterleavedAccess,The following statement contains a magic number: Assert.AreEqual (3' con.Query<int> ("SELECT COUNT(*) FROM Users"));
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,Query,The following statement contains a magic number: Assert.AreEqual (7' q[0]);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,QueryScalar,The following statement contains a magic number: Assert.AreEqual (7' con.Query<int> ("SELECT 7"));
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,Md5Function,The following statement contains a magic number: Assert.AreEqual ("ae2b1fca515949e5d54fb22b8ed95575"' stmt.Bind (2' "test"' "ing").Query<string> ());
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,Md5Function,The following statement contains a magic number: Assert.AreEqual (null' stmt.Bind (2' null' null).Query<string> ());
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,Md5Function,The following statement contains a magic number: Assert.AreEqual (null' stmt.Bind (3' null' ""' null).Query<string> ());
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,CollationKeyFunction,The following statement contains a magic number: Assert.AreEqual (new byte[] {14' 2' 1' 27' 1' 1' 1' 0}' stmt.Bind ("\u0104").Query<byte[]> ());
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,CollationKeyFunction,The following statement contains a magic number: Assert.AreEqual (new byte[] {14' 2' 1' 27' 1' 1' 1' 0}' stmt.Bind ("\u0104").Query<byte[]> ());
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,CollationKeyFunction,The following statement contains a magic number: Assert.AreEqual (new byte[] {14' 2' 1' 27' 1' 1' 1' 0}' stmt.Bind ("\u0104").Query<byte[]> ());
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,DataTypes,The following statement contains a magic number: AssertRoundTrip<int> (42);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,DataTypes,The following statement contains a magic number: AssertRoundTrip<uint> (42);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,DataTypes,The following statement contains a magic number: AssertRoundTrip<long> (42);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,DataTypes,The following statement contains a magic number: AssertRoundTrip<ulong> (42);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,DataTypes,The following statement contains a magic number: AssertRoundTrip<float> (42.222f);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,DataTypes,The following statement contains a magic number: AssertRoundTrip<double> (42.222);
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,DataTypes,The following statement contains a magic number: AssertRoundTrip<DateTime> (new DateTime (1970' 1' 1).ToLocalTime ());
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,DataTypes,The following statement contains a magic number: Assert.AreEqual (new DateTime (1970' 1' 1).ToLocalTime ()' con.Query<DateTime> ("SELECT 0"));
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,DataTypes,The following statement contains a magic number: AssertRoundTrip<TimeSpan> (TimeSpan.FromSeconds (0.001));
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,DataTypes,The following statement contains a magic number: AssertRoundTrip<TimeSpan> (TimeSpan.FromSeconds (0.002));
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,DataTypes,The following statement contains a magic number: AssertRoundTrip<TimeSpan> (TimeSpan.FromSeconds (0.503));
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,DataTypes,The following statement contains a magic number: AssertRoundTrip<TimeSpan> (TimeSpan.FromSeconds (1.01));
Magic Number,Hyena.Data.Sqlite,SqliteTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Data.Sqlite\SqliteTests.cs,DataTypes,The following statement contains a magic number: AssertRoundTrip<TimeSpan> (TimeSpan.FromHours (999.00193));
Magic Number,Hyena.Downloader.Tests,HttpTestServer,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Downloader\HttpTestServer.cs,HttpTestServer,The following statement contains a magic number: ResourceCount = 5;
Magic Number,Hyena.Downloader.Tests,HttpTestServer,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Downloader\HttpTestServer.cs,HttpTestServer,The following statement contains a magic number: MinResourceSize = 5 * 1024 * 1024;
Magic Number,Hyena.Downloader.Tests,HttpTestServer,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Downloader\HttpTestServer.cs,HttpTestServer,The following statement contains a magic number: MinResourceSize = 5 * 1024 * 1024;
Magic Number,Hyena.Downloader.Tests,HttpTestServer,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Downloader\HttpTestServer.cs,HttpTestServer,The following statement contains a magic number: MinResourceSize = 5 * 1024 * 1024;
Magic Number,Hyena.Downloader.Tests,HttpTestServer,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Downloader\HttpTestServer.cs,HttpTestServer,The following statement contains a magic number: MaxResourceSize = 15 * 1024 * 1024;
Magic Number,Hyena.Downloader.Tests,HttpTestServer,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Downloader\HttpTestServer.cs,HttpTestServer,The following statement contains a magic number: MaxResourceSize = 15 * 1024 * 1024;
Magic Number,Hyena.Downloader.Tests,HttpTestServer,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Downloader\HttpTestServer.cs,HttpTestServer,The following statement contains a magic number: MaxResourceSize = 15 * 1024 * 1024;
Magic Number,Hyena.Downloader.Tests,HttpTestServer,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Downloader\HttpTestServer.cs,ServeStaticContent,The following statement contains a magic number: var async_result = listener.BeginGetContext (result => {                     var context = listener.EndGetContext (result);                     var response = context.Response;                     var path = context.Request.Url.LocalPath;                      response.StatusCode = 200;                     response.StatusDescription = "OK";                     response.ProtocolVersion = new Version ("1.1");                      try {                         if (Debug) Console.WriteLine ("Serving: {0}"' path);                         if (path == "/") {                             ServeString (response' resources.Count.ToString () + "\n");                             return;                         } else if (path == "/shutdown") {                             ServeString (response' "Goodbye\n");                             lock (this) {                                 stop_requested = true;                             }                         }                          var resource = resources[Int32.Parse (path.Substring (1))];                         response.ContentType = "application/octet-stream";                         response.ContentLength64 = resource.Length;                         response.AppendHeader ("X-Content-MD5-Sum"' resource.Checksum);                                                  if (context.Request.HttpMethod == "HEAD") {                             response.Close ();                         }                          using (var resource_stream = File.OpenRead (resource.Path)) {                             var buffer = new byte[32 << 10];                             using (response.OutputStream) {                                 while (true) {                                     var read = resource_stream.Read (buffer' 0' buffer.Length);                                     if (read <= 0) {                                         break;                                     }                                     response.OutputStream.Write (buffer' 0' read);                                 }                             }                         }                     } catch {                         response.StatusCode = 404;                         response.StatusDescription = "404 Not Found";                         ServeString (response' "Invalid resource: " + path + "\n");                     }                      response.Close ();                 }' null);
Magic Number,Hyena.Downloader.Tests,HttpTestServer,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Downloader\HttpTestServer.cs,ServeStaticContent,The following statement contains a magic number: var async_result = listener.BeginGetContext (result => {                     var context = listener.EndGetContext (result);                     var response = context.Response;                     var path = context.Request.Url.LocalPath;                      response.StatusCode = 200;                     response.StatusDescription = "OK";                     response.ProtocolVersion = new Version ("1.1");                      try {                         if (Debug) Console.WriteLine ("Serving: {0}"' path);                         if (path == "/") {                             ServeString (response' resources.Count.ToString () + "\n");                             return;                         } else if (path == "/shutdown") {                             ServeString (response' "Goodbye\n");                             lock (this) {                                 stop_requested = true;                             }                         }                          var resource = resources[Int32.Parse (path.Substring (1))];                         response.ContentType = "application/octet-stream";                         response.ContentLength64 = resource.Length;                         response.AppendHeader ("X-Content-MD5-Sum"' resource.Checksum);                                                  if (context.Request.HttpMethod == "HEAD") {                             response.Close ();                         }                          using (var resource_stream = File.OpenRead (resource.Path)) {                             var buffer = new byte[32 << 10];                             using (response.OutputStream) {                                 while (true) {                                     var read = resource_stream.Read (buffer' 0' buffer.Length);                                     if (read <= 0) {                                         break;                                     }                                     response.OutputStream.Write (buffer' 0' read);                                 }                             }                         }                     } catch {                         response.StatusCode = 404;                         response.StatusDescription = "404 Not Found";                         ServeString (response' "Invalid resource: " + path + "\n");                     }                      response.Close ();                 }' null);
Magic Number,Hyena.Downloader.Tests,HttpTestServer,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Downloader\HttpTestServer.cs,ServeStaticContent,The following statement contains a magic number: var async_result = listener.BeginGetContext (result => {                     var context = listener.EndGetContext (result);                     var response = context.Response;                     var path = context.Request.Url.LocalPath;                      response.StatusCode = 200;                     response.StatusDescription = "OK";                     response.ProtocolVersion = new Version ("1.1");                      try {                         if (Debug) Console.WriteLine ("Serving: {0}"' path);                         if (path == "/") {                             ServeString (response' resources.Count.ToString () + "\n");                             return;                         } else if (path == "/shutdown") {                             ServeString (response' "Goodbye\n");                             lock (this) {                                 stop_requested = true;                             }                         }                          var resource = resources[Int32.Parse (path.Substring (1))];                         response.ContentType = "application/octet-stream";                         response.ContentLength64 = resource.Length;                         response.AppendHeader ("X-Content-MD5-Sum"' resource.Checksum);                                                  if (context.Request.HttpMethod == "HEAD") {                             response.Close ();                         }                          using (var resource_stream = File.OpenRead (resource.Path)) {                             var buffer = new byte[32 << 10];                             using (response.OutputStream) {                                 while (true) {                                     var read = resource_stream.Read (buffer' 0' buffer.Length);                                     if (read <= 0) {                                         break;                                     }                                     response.OutputStream.Write (buffer' 0' read);                                 }                             }                         }                     } catch {                         response.StatusCode = 404;                         response.StatusDescription = "404 Not Found";                         ServeString (response' "Invalid resource: " + path + "\n");                     }                      response.Close ();                 }' null);
Magic Number,Hyena.Downloader.Tests,HttpTestServer,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Downloader\HttpTestServer.cs,ServeStaticContent,The following statement contains a magic number: var async_result = listener.BeginGetContext (result => {                     var context = listener.EndGetContext (result);                     var response = context.Response;                     var path = context.Request.Url.LocalPath;                      response.StatusCode = 200;                     response.StatusDescription = "OK";                     response.ProtocolVersion = new Version ("1.1");                      try {                         if (Debug) Console.WriteLine ("Serving: {0}"' path);                         if (path == "/") {                             ServeString (response' resources.Count.ToString () + "\n");                             return;                         } else if (path == "/shutdown") {                             ServeString (response' "Goodbye\n");                             lock (this) {                                 stop_requested = true;                             }                         }                          var resource = resources[Int32.Parse (path.Substring (1))];                         response.ContentType = "application/octet-stream";                         response.ContentLength64 = resource.Length;                         response.AppendHeader ("X-Content-MD5-Sum"' resource.Checksum);                                                  if (context.Request.HttpMethod == "HEAD") {                             response.Close ();                         }                          using (var resource_stream = File.OpenRead (resource.Path)) {                             var buffer = new byte[32 << 10];                             using (response.OutputStream) {                                 while (true) {                                     var read = resource_stream.Read (buffer' 0' buffer.Length);                                     if (read <= 0) {                                         break;                                     }                                     response.OutputStream.Write (buffer' 0' read);                                 }                             }                         }                     } catch {                         response.StatusCode = 404;                         response.StatusDescription = "404 Not Found";                         ServeString (response' "Invalid resource: " + path + "\n");                     }                      response.Close ();                 }' null);
Magic Number,Hyena.Downloader.Tests,HttpTestServer,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Downloader\HttpTestServer.cs,GenerateStaticContent,The following statement contains a magic number: var buffer = new byte[32 << 10];
Magic Number,Hyena.Downloader.Tests,HttpTestServer,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Downloader\HttpTestServer.cs,GenerateStaticContent,The following statement contains a magic number: var buffer = new byte[32 << 10];
Magic Number,Hyena.Downloader.Tests,HttpTestServer,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Downloader\HttpTestServer.cs,GenerateStaticContent,The following statement contains a magic number: Console.Write ("\rCreating resource: {0} ({1:0.00} MB): [{2}/{3}]  {4:0.0}% "'                             resource.Path' resource.Length / 1024.0 / 1024.0'                             i + 1' ResourceCount'                             written / (double)resource.Length * 100.0);
Magic Number,Hyena.Downloader.Tests,HttpTestServer,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Downloader\HttpTestServer.cs,GenerateStaticContent,The following statement contains a magic number: Console.Write ("\rCreating resource: {0} ({1:0.00} MB): [{2}/{3}]  {4:0.0}% "'                             resource.Path' resource.Length / 1024.0 / 1024.0'                             i + 1' ResourceCount'                             written / (double)resource.Length * 100.0);
Magic Number,Hyena.Downloader.Tests,HttpTestServer,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Downloader\HttpTestServer.cs,GenerateStaticContent,The following statement contains a magic number: Console.Write ("\rCreating resource: {0} ({1:0.00} MB): [{2}/{3}]  {4:0.0}% "'                             resource.Path' resource.Length / 1024.0 / 1024.0'                             i + 1' ResourceCount'                             written / (double)resource.Length * 100.0);
Magic Number,Hyena.Jobs,SchedulerTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Jobs\SchedulerTests.cs,TestSimultaneousSpeedJobs,The following statement contains a magic number: scheduler.Add (new TestJob (200' PriorityHints.SpeedSensitive' Resource.Cpu' Resource.Disk));
Magic Number,Hyena.Jobs,SchedulerTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Jobs\SchedulerTests.cs,TestSimultaneousSpeedJobs,The following statement contains a magic number: scheduler.Add (new TestJob (200' PriorityHints.SpeedSensitive' Resource.Cpu' Resource.Disk));
Magic Number,Hyena.Jobs,SchedulerTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Jobs\SchedulerTests.cs,TestSimultaneousSpeedJobs,The following statement contains a magic number: scheduler.Add (new TestJob (200' PriorityHints.None' Resource.Cpu' Resource.Disk));
Magic Number,Hyena.Jobs,SchedulerTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Jobs\SchedulerTests.cs,TestSimultaneousSpeedJobs,The following statement contains a magic number: AssertJobsRunning (2);
Magic Number,Hyena.Jobs,SchedulerTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Jobs\SchedulerTests.cs,TestOneNonSpeedJobPerResource,The following statement contains a magic number: scheduler.Add (new TestJob (200' PriorityHints.None' Resource.Cpu' Resource.Disk));
Magic Number,Hyena.Jobs,SchedulerTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Jobs\SchedulerTests.cs,TestOneNonSpeedJobPerResource,The following statement contains a magic number: scheduler.Add (new TestJob (200' PriorityHints.None' Resource.Cpu' Resource.Disk));
Magic Number,Hyena.Jobs,SchedulerTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Jobs\SchedulerTests.cs,TestSpeedJobPreemptsNonSpeedJobs,The following statement contains a magic number: TestJob a = new TestJob (200' PriorityHints.None' Resource.Cpu);
Magic Number,Hyena.Jobs,SchedulerTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Jobs\SchedulerTests.cs,TestSpeedJobPreemptsNonSpeedJobs,The following statement contains a magic number: TestJob b = new TestJob (200' PriorityHints.None' Resource.Disk);
Magic Number,Hyena.Jobs,SchedulerTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Jobs\SchedulerTests.cs,TestSpeedJobPreemptsNonSpeedJobs,The following statement contains a magic number: TestJob c = new TestJob (200' PriorityHints.LongRunning' Resource.Database);
Magic Number,Hyena.Jobs,SchedulerTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Jobs\SchedulerTests.cs,TestSpeedJobPreemptsNonSpeedJobs,The following statement contains a magic number: AssertJobsRunning (3);
Magic Number,Hyena.Jobs,SchedulerTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Jobs\SchedulerTests.cs,TestSpeedJobPreemptsNonSpeedJobs,The following statement contains a magic number: scheduler.Add (new TestJob (200' PriorityHints.SpeedSensitive' Resource.Cpu' Resource.Disk));
Magic Number,Hyena.Jobs,SchedulerTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Jobs\SchedulerTests.cs,TestSpeedJobPreemptsNonSpeedJobs,The following statement contains a magic number: AssertJobsRunning (2);
Magic Number,Hyena.Jobs,TestJob,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Jobs\SchedulerTests.cs,Run,The following statement contains a magic number: !IsCancelRequested && i < 2
Magic Number,Hyena.Query.Tests,QueryTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Query\QueryTests.cs,QueryValueSql,The following statement contains a magic number: Assert.AreEqual (new DateTime (2007' 3' 9)' qv.Value);
Magic Number,Hyena.Query.Tests,QueryTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Query\QueryTests.cs,QueryValueSql,The following statement contains a magic number: Assert.AreEqual (new DateTime (2007' 3' 9)' qv.Value);
Magic Number,Hyena.Query.Tests,QueryTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Query\QueryTests.cs,QueryValueSql,The following statement contains a magic number: Assert.AreEqual (new DateTime (2007' 3' 9)' qv.Value);
Magic Number,Hyena.Query.Tests,QueryTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Query\QueryTests.cs,QueryValueSql,The following statement contains a magic number: Assert.AreEqual (22' qv.Value);
Magic Number,Hyena.Query.Tests,QueryTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Query\QueryTests.cs,QueryValueSql,The following statement contains a magic number: Assert.AreEqual (2097152' qv.Value);
Magic Number,Hyena.Query.Tests,QueryTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Query\QueryTests.cs,QueryValueSql,The following statement contains a magic number: Assert.AreEqual (-172800' qv.Value);
Magic Number,Hyena.Query.Tests,QueryTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena.Query\QueryTests.cs,QueryValueSql,The following statement contains a magic number: Assert.AreEqual (240' qv.Value);
Magic Number,Hyena.Tests,DateTimeUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\DateTimeUtilTests.cs,InvariantString,The following statement contains a magic number: TestInv ("2010-02-18 02:41:00.000 -06:00"' new DateTime (2010' 2' 18' 2' 41' 0' 0));
Magic Number,Hyena.Tests,DateTimeUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\DateTimeUtilTests.cs,InvariantString,The following statement contains a magic number: TestInv ("2010-02-18 02:41:00.000 -06:00"' new DateTime (2010' 2' 18' 2' 41' 0' 0));
Magic Number,Hyena.Tests,DateTimeUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\DateTimeUtilTests.cs,InvariantString,The following statement contains a magic number: TestInv ("2010-02-18 02:41:00.000 -06:00"' new DateTime (2010' 2' 18' 2' 41' 0' 0));
Magic Number,Hyena.Tests,DateTimeUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\DateTimeUtilTests.cs,InvariantString,The following statement contains a magic number: TestInv ("2010-02-18 02:41:00.000 -06:00"' new DateTime (2010' 2' 18' 2' 41' 0' 0));
Magic Number,Hyena.Tests,DateTimeUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\DateTimeUtilTests.cs,InvariantString,The following statement contains a magic number: TestInv ("2010-02-18 02:41:00.000 -06:00"' new DateTime (2010' 2' 18' 2' 41' 0' 0));
Magic Number,Hyena.Tests,DateTimeUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\DateTimeUtilTests.cs,InvariantString,The following statement contains a magic number: TestInv ("2010-02-18 02:41:50.123 -06:00"' new DateTime (2010' 2' 18' 2' 41' 50' 123));
Magic Number,Hyena.Tests,DateTimeUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\DateTimeUtilTests.cs,InvariantString,The following statement contains a magic number: TestInv ("2010-02-18 02:41:50.123 -06:00"' new DateTime (2010' 2' 18' 2' 41' 50' 123));
Magic Number,Hyena.Tests,DateTimeUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\DateTimeUtilTests.cs,InvariantString,The following statement contains a magic number: TestInv ("2010-02-18 02:41:50.123 -06:00"' new DateTime (2010' 2' 18' 2' 41' 50' 123));
Magic Number,Hyena.Tests,DateTimeUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\DateTimeUtilTests.cs,InvariantString,The following statement contains a magic number: TestInv ("2010-02-18 02:41:50.123 -06:00"' new DateTime (2010' 2' 18' 2' 41' 50' 123));
Magic Number,Hyena.Tests,DateTimeUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\DateTimeUtilTests.cs,InvariantString,The following statement contains a magic number: TestInv ("2010-02-18 02:41:50.123 -06:00"' new DateTime (2010' 2' 18' 2' 41' 50' 123));
Magic Number,Hyena.Tests,DateTimeUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\DateTimeUtilTests.cs,InvariantString,The following statement contains a magic number: TestInv ("2010-02-18 02:41:50.123 -06:00"' new DateTime (2010' 2' 18' 2' 41' 50' 123));
Magic Number,Hyena.Tests,DateTimeUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\DateTimeUtilTests.cs,InvariantString,The following statement contains a magic number: TestInv ("2010-02-18 02:41:50.123 -06:00"' new DateTime (2010' 2' 18' 2' 41' 50' 123));
Magic Number,Hyena.Tests,DateTimeUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\DateTimeUtilTests.cs,InvariantString,The following statement contains a magic number: TestInv ("2010-10-18 02:01:00.000 -05:00"' new DateTime (2010' 10' 18' 2' 1' 0' 0));
Magic Number,Hyena.Tests,DateTimeUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\DateTimeUtilTests.cs,InvariantString,The following statement contains a magic number: TestInv ("2010-10-18 02:01:00.000 -05:00"' new DateTime (2010' 10' 18' 2' 1' 0' 0));
Magic Number,Hyena.Tests,DateTimeUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\DateTimeUtilTests.cs,InvariantString,The following statement contains a magic number: TestInv ("2010-10-18 02:01:00.000 -05:00"' new DateTime (2010' 10' 18' 2' 1' 0' 0));
Magic Number,Hyena.Tests,DateTimeUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\DateTimeUtilTests.cs,InvariantString,The following statement contains a magic number: TestInv ("2010-10-18 02:01:00.000 -05:00"' new DateTime (2010' 10' 18' 2' 1' 0' 0));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,DoubleToTenthsPrecision,The following statement contains a magic number: Assert.AreEqual ("15"'      StringUtil.DoubleToTenthsPrecision (15.0));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,DoubleToTenthsPrecision,The following statement contains a magic number: Assert.AreEqual ("15"'      StringUtil.DoubleToTenthsPrecision (15.0334));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,DoubleToTenthsPrecision,The following statement contains a magic number: Assert.AreEqual ("15'1"'    StringUtil.DoubleToTenthsPrecision (15.052));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,DoubleToTenthsPrecision,The following statement contains a magic number: Assert.AreEqual ("15'5"'    StringUtil.DoubleToTenthsPrecision (15.5234));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,DoubleToTenthsPrecision,The following statement contains a magic number: Assert.AreEqual ("15"'      StringUtil.DoubleToTenthsPrecision (14.9734));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,DoubleToTenthsPrecision,The following statement contains a magic number: Assert.AreEqual ("14'9"'    StringUtil.DoubleToTenthsPrecision (14.92));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,DoubleToTenthsPrecision,The following statement contains a magic number: Assert.AreEqual ("0'4"'     StringUtil.DoubleToTenthsPrecision (0.421));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,DoubleToTenthsPrecision,The following statement contains a magic number: Assert.AreEqual ("0"'       StringUtil.DoubleToTenthsPrecision (0.01));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,DoubleToTenthsPrecision,The following statement contains a magic number: Assert.AreEqual ("1.000'3"' StringUtil.DoubleToTenthsPrecision (1000.32));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,DoubleToTenthsPrecision,The following statement contains a magic number: Assert.AreEqual ("9.233"'   StringUtil.DoubleToTenthsPrecision (9233));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,DoubleToPluralInt,The following statement contains a magic number: Assert.AreEqual (2'     StringUtil.DoubleToPluralInt (2));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,DoubleToPluralInt,The following statement contains a magic number: Assert.AreEqual (2'     StringUtil.DoubleToPluralInt (2));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,DoubleToPluralInt,The following statement contains a magic number: Assert.AreEqual (1'     StringUtil.DoubleToPluralInt (0.5));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,DoubleToPluralInt,The following statement contains a magic number: Assert.AreEqual (2'     StringUtil.DoubleToPluralInt (1.8));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,DoubleToPluralInt,The following statement contains a magic number: Assert.AreEqual (2'     StringUtil.DoubleToPluralInt (1.8));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,DoubleToPluralInt,The following statement contains a magic number: Assert.AreEqual (22'    StringUtil.DoubleToPluralInt (21.3));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,DoubleToPluralInt,The following statement contains a magic number: Assert.AreEqual (22'    StringUtil.DoubleToPluralInt (21.3));
Magic Number,Hyena.Tests,StringUtilTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,TestFormatInterleaved,The following statement contains a magic number: var objects = new object [] { "one"' 2 };
Magic Number,Hyena.Tests,SortKeyTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,TestSortKey,The following statement contains a magic number: AssertSortKey ("a"' new byte[] {14' 2' 1' 1' 1' 1' 0});
Magic Number,Hyena.Tests,SortKeyTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,TestSortKey,The following statement contains a magic number: AssertSortKey ("a"' new byte[] {14' 2' 1' 1' 1' 1' 0});
Magic Number,Hyena.Tests,SortKeyTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,TestSortKey,The following statement contains a magic number: AssertSortKey ("A"' new byte[] {14' 2' 1' 1' 1' 1' 0});
Magic Number,Hyena.Tests,SortKeyTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,TestSortKey,The following statement contains a magic number: AssertSortKey ("A"' new byte[] {14' 2' 1' 1' 1' 1' 0});
Magic Number,Hyena.Tests,SortKeyTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,TestSortKey,The following statement contains a magic number: AssertSortKey ("\u0104"' new byte[] {14' 2' 1' 27' 1' 1' 1' 0'});
Magic Number,Hyena.Tests,SortKeyTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,TestSortKey,The following statement contains a magic number: AssertSortKey ("\u0104"' new byte[] {14' 2' 1' 27' 1' 1' 1' 0'});
Magic Number,Hyena.Tests,SortKeyTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,TestSortKey,The following statement contains a magic number: AssertSortKey ("\u0104"' new byte[] {14' 2' 1' 27' 1' 1' 1' 0'});
Magic Number,Hyena.Tests,SubstringCountTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,TestMatches,The following statement contains a magic number: AssertCount ("abbcbba"' "a"' 2);
Magic Number,Hyena.Tests,SubstringCountTests,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\StringUtilTests.cs,TestMatches,The following statement contains a magic number: AssertCount ("abbcbba"' "b"' 4);
Magic Number,Hyena.Tests,TransformPair,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\TestBase.cs,GetFrom,The following statement contains a magic number: TransformPair<F' T> [] pairs = new TransformPair<F' T> [objects.Length / 2];
Magic Number,Hyena.Tests,TransformPair,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena.UnitTest\Hyena\TestBase.cs,GetFrom,The following statement contains a magic number: pairs[i/2] = new TransformPair<F' T> ((F)objects[i]' (T)objects[i+1]);
