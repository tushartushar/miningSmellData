Implementation smell,Namespace,Class,File,Method,Description
Long Method,Hyena.Data.Sqlite,SqliteModelCache<T>,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\SqliteModelCache.cs,SqliteModelCache,The method has 131 lines of code.
Long Method,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,InitEntities,The method has 257 lines of code.
Long Method,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,HtmlDecode,The method has 102 lines of code.
Complex Method,Hyena.CommandLine,Layout,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.CommandLine\Layout.cs,ToString,Cyclomatic complexity of the method is 9
Complex Method,Hyena.Data.Sqlite,HyenaSqliteCommand,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\HyenaSqliteCommand.cs,Execute,Cyclomatic complexity of the method is 9
Complex Method,Hyena.Data.Sqlite,HyenaSqliteCommand,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\HyenaSqliteCommand.cs,SqlifyObject,Cyclomatic complexity of the method is 9
Complex Method,Hyena.Data.Sqlite,Statement,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Sqlite.cs,Bind,Cyclomatic complexity of the method is 12
Complex Method,Hyena.Data.Sqlite,QueryReader,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Sqlite.cs,GetAs,Cyclomatic complexity of the method is 8
Complex Method,Hyena.Data.Sqlite,SqliteFunction,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\SqliteFunction.cs,SetReturnValue,Cyclomatic complexity of the method is 8
Complex Method,Hyena.Data.Sqlite,SqliteModelProvider<T>,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\SqliteModelProvider.cs,Init,Cyclomatic complexity of the method is 11
Complex Method,Hyena.Data.Sqlite,SqliteModelProvider<T>,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\SqliteModelProvider.cs,AddColumn,Cyclomatic complexity of the method is 8
Complex Method,Hyena.Data.Sqlite,SqliteModelProvider<T>,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\SqliteModelProvider.cs,BuildQuerySql,Cyclomatic complexity of the method is 9
Complex Method,Hyena.Data.Sqlite,SqliteUtils,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\SqliteUtils.cs,FromDbFormat,Cyclomatic complexity of the method is 14
Complex Method,Hyena.Query,FileSizeQueryValue,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\FileSizeQueryValue.cs,ParseUserQuery,Cyclomatic complexity of the method is 9
Complex Method,Hyena.Query,QueryListNode,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\QueryListNode.cs,Trim,Cyclomatic complexity of the method is 8
Complex Method,Hyena.Query,QueryListNode,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\QueryListNode.cs,AppendUserQuery,Cyclomatic complexity of the method is 8
Complex Method,Hyena.Query,TimeSpanQueryValue,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\TimeSpanQueryValue.cs,FactorString,Cyclomatic complexity of the method is 16
Complex Method,Hyena.Query,UserQueryParser,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\UserQueryParser.cs,ParseToken,Cyclomatic complexity of the method is 8
Complex Method,Hyena.Query,UserQueryParser,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\UserQueryParser.cs,Scan,Cyclomatic complexity of the method is 13
Complex Method,Hyena.Query,XmlQueryParser,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\XmlQueryParser.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,TranslateColor,Cyclomatic complexity of the method is 16
Complex Method,Hyena,Log,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\Log.cs,Commit,Cyclomatic complexity of the method is 9
Complex Method,Hyena,StringUtil,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\StringUtil.cs,SearchKey,Cyclomatic complexity of the method is 8
Complex Method,Hyena,StringUtil,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\StringUtil.cs,FormatInterleaved,Cyclomatic complexity of the method is 8
Complex Method,Hyena,XdgBaseDirectorySpec,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\XdgBaseDirectorySpec.cs,GetUserDirectory,Cyclomatic complexity of the method is 8
Complex Method,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,HtmlAttributeEncode,Cyclomatic complexity of the method is 9
Complex Method,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlDecode,Cyclomatic complexity of the method is 10
Complex Method,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlDecode,Cyclomatic complexity of the method is 15
Complex Method,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlDecodeToBytes,Cyclomatic complexity of the method is 9
Complex Method,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,HtmlDecode,Cyclomatic complexity of the method is 21
Complex Method,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,HtmlEncode,Cyclomatic complexity of the method is 11
Complex Method,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,ParseQueryString,Cyclomatic complexity of the method is 11
Long Parameter List,Hyena.Data.Sqlite,Native,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Sqlite.cs,sqlite3_create_function16,The method has 8 parameters. Parameters: db' strName' nArgs' eTextRep' app' func' funcstep' funcfinal
Long Parameter List,Hyena.Data.Sqlite,Native,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Sqlite.cs,sqlite3_create_collation16,The method has 5 parameters. Parameters: db' strName' eTextRep' ctx' fcompare
Long Parameter List,Hyena.Data.Sqlite,Native,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Sqlite.cs,sqlite3_prepare16_v2,The method has 5 parameters. Parameters: db' pSql' nBytes' stmt' ptrRemain
Long Parameter List,Hyena.Data.Sqlite,Native,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Sqlite.cs,sqlite3_exec,The method has 5 parameters. Parameters: db' sql' callback' cbArg' errPtr
Long Parameter List,Hyena.Data.Sqlite,Native,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Sqlite.cs,sqlite3_bind_blob,The method has 5 parameters. Parameters: stmt' param' val' nBytes' destructorType
Long Parameter List,Hyena.Data.Sqlite,Native,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Sqlite.cs,sqlite3_bind_text16,The method has 5 parameters. Parameters: stmt' param' val' numBytes' destructorType
Long Parameter List,Hyena.Data,PropertyChangeEventArgs,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data\PropertyStore.cs,PropertyChangeEventArgs,The method has 5 parameters. Parameters: propertyName' added' removed' oldValue' newValue
Long Parameter List,Hyena.Data,PropertyStore,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data\PropertyStore.cs,OnPropertyChanged,The method has 5 parameters. Parameters: propertyName' added' removed' oldValue' newValue
Long Parameter List,Hyena.Query,QueryField,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\QueryField.cs,QueryField,The method has 5 parameters. Parameters: name' propertyName' label' column' aliases
Long Parameter List,Hyena.Query,QueryField,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\QueryField.cs,QueryField,The method has 6 parameters. Parameters: name' propertyName' label' column' isDefault' aliases
Long Parameter List,Hyena.Query,QueryField,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\QueryField.cs,QueryField,The method has 6 parameters. Parameters: name' propertyName' label' column' valueType' aliases
Long Parameter List,Hyena.Query,QueryField,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\QueryField.cs,QueryField,The method has 6 parameters. Parameters: name' propertyName' label' column' valueTypes' aliases
Long Parameter List,Hyena.Query,QueryField,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\QueryField.cs,QueryField,The method has 7 parameters. Parameters: name' propertyName' label' column' valueTypes' isDefault' aliases
Long Parameter List,Hyena.Query,Operator,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\QueryOperator.cs,Operator,The method has 5 parameters. Parameters: name' label' sql_format' is_not' userOps
Long Parameter List,Hyena.Query,QueryOrder,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\QueryOrder.cs,QueryOrder,The method has 5 parameters. Parameters: name' label' order_sql' field' asc
Long Parameter List,Hyena,ApplicationContext,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ApplicationContext.cs,prctl,The method has 5 parameters. Parameters: option' arg2' arg3' arg4' arg5
Long Identifier,Hyena.Data.Sqlite,HyenaSqliteCommand,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\HyenaSqliteCommand.cs,,The length of the parameter raise_command_executed_threshold_ms is 35.
Long Identifier,Hyena.Data.Sqlite,SqliteModelCache<T>,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\SqliteModelCache.cs,,The length of the parameter last_get_single_select_fragment is 31.
Long Identifier,Hyena.Data.Sqlite,SqliteModelCache<T>,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\SqliteModelCache.cs,,The length of the parameter last_get_single_condition_fragment is 34.
Long Statement,Hyena.Data.Sqlite,Connection,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Sqlite.cs,Execute,The length of the statement  "            // * The application must not close database connection specified by the 1st parameter to sqlite3_exec() while sqlite3_exec() is running." is 137.
Long Statement,Hyena.Data.Sqlite,Connection,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Sqlite.cs,Execute,The length of the statement  "            // * The application must not modify the SQL statement text passed into the 2nd parameter of sqlite3_exec() while sqlite3_exec() is running. " is 140.
Long Statement,Hyena.Data.Sqlite,Statement,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Sqlite.cs,Reset,The length of the statement  "                throw new InvalidOperationException ("Can't reset statement while it's being read; make sure to Dispose any IDataReaders");" is 123.
Long Statement,Hyena.Data.Sqlite,SqliteModelProvider<T>,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\SqliteModelProvider.cs,Load,The length of the statement  "                    String.Format ("Caught exception trying to load database column {0}"' bad_column == null ? "[unknown]" : bad_column.Name)'" is 122.
Long Statement,Hyena.Downloader,HttpDownloaderState,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Downloader\HttpDownloaderState.cs,ToString,The length of the statement  "                return String.Format ("HttpDownloaderState: finished' {0}"' Success ? "successful" : "error: " + FailureException.Message);" is 123.
Long Statement,Hyena.Query,RelativeTimeSpanQueryValue,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\RelativeTimeSpanQueryValue.cs,ToSql,The length of the statement  "            return DateTimeUtil.FromDateTime (DateTime.Now + TimeSpan.FromSeconds ((double) offset)).ToString (System.Globalization.CultureInfo.InvariantCulture);" is 150.
Long Statement,Hyena,StringUtil,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\StringUtil.cs,FormatInterleaved,The length of the statement  "                    Hyena.Log.ErrorFormat ("Translated string {0} should contain {{1}} in which to place object {2}"' format' i' objects[i]);" is 121.
Complex Conditional,Hyena.Data.Sqlite,SqliteModelCache<T>,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\SqliteModelCache.cs,GetSingle,The conditional expression  "selectFragment != last_get_single_select_fragment                 || conditionOrderFragment != last_get_single_condition_fragment                 ||fromFragment != last_get_single_from_fragment                 || get_single_command == null"  is complex.
Complex Conditional,Hyena.Data.Sqlite,SqliteModelCache<T>,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\SqliteModelCache.cs,SaveSelection,The conditional expression  "model.Selection != null && model.Selection.Count > 0 &&                 !(has_select_all_item && model.Selection.AllSelected)"  is complex.
Complex Conditional,Hyena.Data.Sqlite,SqliteUtils,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\SqliteUtils.cs,GetType,The conditional expression  "type == typeof (int) || type == typeof (long) || type == typeof (bool)                 || type == typeof (DateTime) || type == typeof (TimeSpan) || type.IsEnum"  is complex.
Complex Conditional,Hyena.Data.Sqlite,SqliteUtils,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\SqliteUtils.cs,GetType,The conditional expression  "type == typeof (int?) || type == typeof (long?) || type == typeof (bool?)                 || type == typeof (uint?)"  is complex.
Complex Conditional,Hyena.Query,QueryTermNode,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\QueryTermNode.cs,Trim,The conditional expression  "Parent != null && (qvalue == null || qvalue.IsEmpty || (field != null && op == null))"  is complex.
Complex Conditional,Hyena.Query,StringQueryValue,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\StringQueryValue.cs,EscapeString,The conditional expression  "op == Contains   || op == DoesNotContain ||                 op == StartsWith || op == EndsWith"  is complex.
Complex Conditional,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlEncode,The conditional expression  "(c < '0') || (c < 'A' && c > '9') || (c > 'Z' && c < 'a') || (c > 'z')"  is complex.
Complex Conditional,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlEncodeChar,The conditional expression  "(c < '0') || 				(c < 'A' && c > '9') || 				(c > 'Z' && c < 'a') || 				(c > 'z')"  is complex.
Complex Conditional,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,HtmlEncode,The conditional expression  "c == '&' || c == '"' || c == '<' || c == '>' || c > 159"  is complex.
Virtual Method Call from Constructor,Hyena.Query,QueryParser,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\QueryParser.cs,QueryParser,The constructor "QueryParser" calls a virtual method "Reset".
Empty Catch Block,Hyena.Downloader,HttpStringDownloader,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Downloader\HttpStringDownloader.cs,OnBufferUpdated,The method has an empty catch block.
Empty Catch Block,Hyena.Jobs,SimpleAsyncJob,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Jobs\SimpleAsyncJob.cs,InnerStart,The method has an empty catch block.
Empty Catch Block,Hyena.Query,XmlQueryParser,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\XmlQueryParser.cs,BuildTree,The method has an empty catch block.
Empty Catch Block,Hyena,ApplicationContext,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ApplicationContext.cs,TrySetProcessName,The method has an empty catch block.
Empty Catch Block,Hyena,Paths,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\Paths.cs,FindProgramInPath,The method has an empty catch block.
Empty Catch Block,Hyena,PlatformDetection,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\PlatformDetection.cs,PlatformDetection,The method has an empty catch block.
Empty Catch Block,Hyena,StringUtil,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\StringUtil.cs,SearchKey,The method has an empty catch block.
Empty Catch Block,Hyena,XdgBaseDirectorySpec,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\XdgBaseDirectorySpec.cs,GetUserDirectory,The method has an empty catch block.
Magic Number,Hyena.Collections,IntervalHeap<T>,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Collections\IntervalHeap.cs,TrimExcess,The following statement contains a magic number: count < heap.Length * 0.9
Magic Number,Hyena.Collections,IntervalHeap<T>,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Collections\IntervalHeap.cs,GetLeftChildIndex,The following statement contains a magic number: return index * 2 + 1;
Magic Number,Hyena.Collections,IntervalHeap<T>,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Collections\IntervalHeap.cs,GetParentIndex,The following statement contains a magic number: return (index - 1) / 2;
Magic Number,Hyena.Collections,RangeCollection,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Collections\RangeCollection.cs,FindInsertionPosition,The following statement contains a magic number: int mid = min + ((max - min) / 2);
Magic Number,Hyena.Collections,RangeCollection,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Collections\RangeCollection.cs,FindRangeIndexForValue,The following statement contains a magic number: int mid = min + ((max - min) / 2);
Magic Number,Hyena.CommandLine,CommandLineParser,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.CommandLine\CommandLineParser.cs,IsOption,The following statement contains a magic number: return argument.Length > 2 && argument.Substring (0' 2) == "--";
Magic Number,Hyena.CommandLine,CommandLineParser,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.CommandLine\CommandLineParser.cs,IsOption,The following statement contains a magic number: return argument.Length > 2 && argument.Substring (0' 2) == "--";
Magic Number,Hyena.CommandLine,CommandLineParser,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.CommandLine\CommandLineParser.cs,OptionName,The following statement contains a magic number: return argument.Substring (2);
Magic Number,Hyena.CommandLine,Layout,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.CommandLine\Layout.cs,ToString,The following statement contains a magic number: int min_spacing = 6;
Magic Number,Hyena.CommandLine,Layout,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.CommandLine\Layout.cs,ToString,The following statement contains a magic number: max_description_length = TerminalWidth - max_option_length - min_spacing - 4;
Magic Number,Hyena.CommandLine,Layout,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.CommandLine\Layout.cs,ToString,The following statement contains a magic number: description_alignment = max_option_length + min_spacing + 4;
Magic Number,Hyena.Data.Sqlite,Connection,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Sqlite.cs,CheckError,The following statement contains a magic number: errorCode == 0 || errorCode == 100 || errorCode == 101
Magic Number,Hyena.Data.Sqlite,Connection,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\Sqlite.cs,CheckError,The following statement contains a magic number: errorCode == 0 || errorCode == 100 || errorCode == 101
Magic Number,Hyena.Data.Sqlite,SqliteModelCache<T>,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\SqliteModelCache.cs,IndexOf,The following statement contains a magic number: long target_id = (long) reader[reader.FieldCount - 2];
Magic Number,Hyena.Data.Sqlite,BinaryFunction,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Data.Sqlite\SqliteUtils.cs,Invoke,The following statement contains a magic number: return func (args[1]' args[2]);
Magic Number,Hyena.Downloader,DownloadManager,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Downloader\DownloadManager.cs,DownloadManager,The following statement contains a magic number: MaxConcurrentDownloaders = 2;
Magic Number,Hyena.Downloader,HttpDownloader,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Downloader\HttpDownloader.cs,HttpDownloader,The following statement contains a magic number: ProgressEventRaiseLimit = TimeSpan.FromSeconds (0.25);
Magic Number,Hyena.Downloader,HttpDownloader,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Downloader\HttpDownloader.cs,CreateRequest,The following statement contains a magic number: request.Timeout = 10000;
Magic Number,Hyena.Downloader,HttpDownloaderState,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Downloader\HttpDownloaderState.cs,ToString,The following statement contains a magic number: return String.Format ("HttpDownloaderState: working ({0}% complete)"' PercentComplete * 100.0);
Magic Number,Hyena.Query,QueryListNode,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\QueryListNode.cs,GetRightSibling,The following statement contains a magic number: index < 0 || index > ChildCount - 2
Magic Number,Hyena.Query,QueryNode,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\QueryNode.cs,PrintIndent,The following statement contains a magic number: Console.Write(String.Empty.PadLeft(depth * 2' ' '));
Magic Number,Hyena.Query,QueryNode,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\QueryNode.cs,ToXml,The following statement contains a magic number: xtw.Indentation = 2;
Magic Number,Hyena.Query,TimeSpanQueryValue,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\TimeSpanQueryValue.cs,ToSql,The following statement contains a magic number: return Convert.ToString (offset * 1000' System.Globalization.CultureInfo.InvariantCulture);
Magic Number,Hyena,ApplicationContext,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ApplicationContext.cs,SetProcessName,The following statement contains a magic number: prctl (15 /* PR_SET_NAME */' Encoding.ASCII.GetBytes (name + "\0")'                     IntPtr.Zero' IntPtr.Zero' IntPtr.Zero) != 0
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,TranslateColor,The following statement contains a magic number: switch (desired) {                 // Dark colors                 case ConsoleColor.Black: return 0;                 case ConsoleColor.DarkRed: return 1;                 case ConsoleColor.DarkGreen: return 2;                 case ConsoleColor.DarkYellow: return 3;                 case ConsoleColor.DarkBlue: return 4;                 case ConsoleColor.DarkMagenta: return 5;                 case ConsoleColor.DarkCyan: return 6;                 case ConsoleColor.Gray: return 7;                  // Light colors                 case ConsoleColor.DarkGray: light = true; return 0;                 case ConsoleColor.Red: light = true; return 1;                 case ConsoleColor.Green: light = true; return 2;                 case ConsoleColor.Yellow: light = true; return 3;                 case ConsoleColor.Blue: light = true; return 4;                 case ConsoleColor.Magenta: light = true; return 5;                 case ConsoleColor.Cyan: light = true; return 6;                 case ConsoleColor.White: default: light = true; return 7;             }
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,TranslateColor,The following statement contains a magic number: switch (desired) {                 // Dark colors                 case ConsoleColor.Black: return 0;                 case ConsoleColor.DarkRed: return 1;                 case ConsoleColor.DarkGreen: return 2;                 case ConsoleColor.DarkYellow: return 3;                 case ConsoleColor.DarkBlue: return 4;                 case ConsoleColor.DarkMagenta: return 5;                 case ConsoleColor.DarkCyan: return 6;                 case ConsoleColor.Gray: return 7;                  // Light colors                 case ConsoleColor.DarkGray: light = true; return 0;                 case ConsoleColor.Red: light = true; return 1;                 case ConsoleColor.Green: light = true; return 2;                 case ConsoleColor.Yellow: light = true; return 3;                 case ConsoleColor.Blue: light = true; return 4;                 case ConsoleColor.Magenta: light = true; return 5;                 case ConsoleColor.Cyan: light = true; return 6;                 case ConsoleColor.White: default: light = true; return 7;             }
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,TranslateColor,The following statement contains a magic number: switch (desired) {                 // Dark colors                 case ConsoleColor.Black: return 0;                 case ConsoleColor.DarkRed: return 1;                 case ConsoleColor.DarkGreen: return 2;                 case ConsoleColor.DarkYellow: return 3;                 case ConsoleColor.DarkBlue: return 4;                 case ConsoleColor.DarkMagenta: return 5;                 case ConsoleColor.DarkCyan: return 6;                 case ConsoleColor.Gray: return 7;                  // Light colors                 case ConsoleColor.DarkGray: light = true; return 0;                 case ConsoleColor.Red: light = true; return 1;                 case ConsoleColor.Green: light = true; return 2;                 case ConsoleColor.Yellow: light = true; return 3;                 case ConsoleColor.Blue: light = true; return 4;                 case ConsoleColor.Magenta: light = true; return 5;                 case ConsoleColor.Cyan: light = true; return 6;                 case ConsoleColor.White: default: light = true; return 7;             }
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,TranslateColor,The following statement contains a magic number: switch (desired) {                 // Dark colors                 case ConsoleColor.Black: return 0;                 case ConsoleColor.DarkRed: return 1;                 case ConsoleColor.DarkGreen: return 2;                 case ConsoleColor.DarkYellow: return 3;                 case ConsoleColor.DarkBlue: return 4;                 case ConsoleColor.DarkMagenta: return 5;                 case ConsoleColor.DarkCyan: return 6;                 case ConsoleColor.Gray: return 7;                  // Light colors                 case ConsoleColor.DarkGray: light = true; return 0;                 case ConsoleColor.Red: light = true; return 1;                 case ConsoleColor.Green: light = true; return 2;                 case ConsoleColor.Yellow: light = true; return 3;                 case ConsoleColor.Blue: light = true; return 4;                 case ConsoleColor.Magenta: light = true; return 5;                 case ConsoleColor.Cyan: light = true; return 6;                 case ConsoleColor.White: default: light = true; return 7;             }
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,TranslateColor,The following statement contains a magic number: switch (desired) {                 // Dark colors                 case ConsoleColor.Black: return 0;                 case ConsoleColor.DarkRed: return 1;                 case ConsoleColor.DarkGreen: return 2;                 case ConsoleColor.DarkYellow: return 3;                 case ConsoleColor.DarkBlue: return 4;                 case ConsoleColor.DarkMagenta: return 5;                 case ConsoleColor.DarkCyan: return 6;                 case ConsoleColor.Gray: return 7;                  // Light colors                 case ConsoleColor.DarkGray: light = true; return 0;                 case ConsoleColor.Red: light = true; return 1;                 case ConsoleColor.Green: light = true; return 2;                 case ConsoleColor.Yellow: light = true; return 3;                 case ConsoleColor.Blue: light = true; return 4;                 case ConsoleColor.Magenta: light = true; return 5;                 case ConsoleColor.Cyan: light = true; return 6;                 case ConsoleColor.White: default: light = true; return 7;             }
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,TranslateColor,The following statement contains a magic number: switch (desired) {                 // Dark colors                 case ConsoleColor.Black: return 0;                 case ConsoleColor.DarkRed: return 1;                 case ConsoleColor.DarkGreen: return 2;                 case ConsoleColor.DarkYellow: return 3;                 case ConsoleColor.DarkBlue: return 4;                 case ConsoleColor.DarkMagenta: return 5;                 case ConsoleColor.DarkCyan: return 6;                 case ConsoleColor.Gray: return 7;                  // Light colors                 case ConsoleColor.DarkGray: light = true; return 0;                 case ConsoleColor.Red: light = true; return 1;                 case ConsoleColor.Green: light = true; return 2;                 case ConsoleColor.Yellow: light = true; return 3;                 case ConsoleColor.Blue: light = true; return 4;                 case ConsoleColor.Magenta: light = true; return 5;                 case ConsoleColor.Cyan: light = true; return 6;                 case ConsoleColor.White: default: light = true; return 7;             }
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,TranslateColor,The following statement contains a magic number: switch (desired) {                 // Dark colors                 case ConsoleColor.Black: return 0;                 case ConsoleColor.DarkRed: return 1;                 case ConsoleColor.DarkGreen: return 2;                 case ConsoleColor.DarkYellow: return 3;                 case ConsoleColor.DarkBlue: return 4;                 case ConsoleColor.DarkMagenta: return 5;                 case ConsoleColor.DarkCyan: return 6;                 case ConsoleColor.Gray: return 7;                  // Light colors                 case ConsoleColor.DarkGray: light = true; return 0;                 case ConsoleColor.Red: light = true; return 1;                 case ConsoleColor.Green: light = true; return 2;                 case ConsoleColor.Yellow: light = true; return 3;                 case ConsoleColor.Blue: light = true; return 4;                 case ConsoleColor.Magenta: light = true; return 5;                 case ConsoleColor.Cyan: light = true; return 6;                 case ConsoleColor.White: default: light = true; return 7;             }
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,TranslateColor,The following statement contains a magic number: switch (desired) {                 // Dark colors                 case ConsoleColor.Black: return 0;                 case ConsoleColor.DarkRed: return 1;                 case ConsoleColor.DarkGreen: return 2;                 case ConsoleColor.DarkYellow: return 3;                 case ConsoleColor.DarkBlue: return 4;                 case ConsoleColor.DarkMagenta: return 5;                 case ConsoleColor.DarkCyan: return 6;                 case ConsoleColor.Gray: return 7;                  // Light colors                 case ConsoleColor.DarkGray: light = true; return 0;                 case ConsoleColor.Red: light = true; return 1;                 case ConsoleColor.Green: light = true; return 2;                 case ConsoleColor.Yellow: light = true; return 3;                 case ConsoleColor.Blue: light = true; return 4;                 case ConsoleColor.Magenta: light = true; return 5;                 case ConsoleColor.Cyan: light = true; return 6;                 case ConsoleColor.White: default: light = true; return 7;             }
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,TranslateColor,The following statement contains a magic number: switch (desired) {                 // Dark colors                 case ConsoleColor.Black: return 0;                 case ConsoleColor.DarkRed: return 1;                 case ConsoleColor.DarkGreen: return 2;                 case ConsoleColor.DarkYellow: return 3;                 case ConsoleColor.DarkBlue: return 4;                 case ConsoleColor.DarkMagenta: return 5;                 case ConsoleColor.DarkCyan: return 6;                 case ConsoleColor.Gray: return 7;                  // Light colors                 case ConsoleColor.DarkGray: light = true; return 0;                 case ConsoleColor.Red: light = true; return 1;                 case ConsoleColor.Green: light = true; return 2;                 case ConsoleColor.Yellow: light = true; return 3;                 case ConsoleColor.Blue: light = true; return 4;                 case ConsoleColor.Magenta: light = true; return 5;                 case ConsoleColor.Cyan: light = true; return 6;                 case ConsoleColor.White: default: light = true; return 7;             }
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,TranslateColor,The following statement contains a magic number: switch (desired) {                 // Dark colors                 case ConsoleColor.Black: return 0;                 case ConsoleColor.DarkRed: return 1;                 case ConsoleColor.DarkGreen: return 2;                 case ConsoleColor.DarkYellow: return 3;                 case ConsoleColor.DarkBlue: return 4;                 case ConsoleColor.DarkMagenta: return 5;                 case ConsoleColor.DarkCyan: return 6;                 case ConsoleColor.Gray: return 7;                  // Light colors                 case ConsoleColor.DarkGray: light = true; return 0;                 case ConsoleColor.Red: light = true; return 1;                 case ConsoleColor.Green: light = true; return 2;                 case ConsoleColor.Yellow: light = true; return 3;                 case ConsoleColor.Blue: light = true; return 4;                 case ConsoleColor.Magenta: light = true; return 5;                 case ConsoleColor.Cyan: light = true; return 6;                 case ConsoleColor.White: default: light = true; return 7;             }
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,TranslateColor,The following statement contains a magic number: switch (desired) {                 // Dark colors                 case ConsoleColor.Black: return 0;                 case ConsoleColor.DarkRed: return 1;                 case ConsoleColor.DarkGreen: return 2;                 case ConsoleColor.DarkYellow: return 3;                 case ConsoleColor.DarkBlue: return 4;                 case ConsoleColor.DarkMagenta: return 5;                 case ConsoleColor.DarkCyan: return 6;                 case ConsoleColor.Gray: return 7;                  // Light colors                 case ConsoleColor.DarkGray: light = true; return 0;                 case ConsoleColor.Red: light = true; return 1;                 case ConsoleColor.Green: light = true; return 2;                 case ConsoleColor.Yellow: light = true; return 3;                 case ConsoleColor.Blue: light = true; return 4;                 case ConsoleColor.Magenta: light = true; return 5;                 case ConsoleColor.Cyan: light = true; return 6;                 case ConsoleColor.White: default: light = true; return 7;             }
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,TranslateColor,The following statement contains a magic number: switch (desired) {                 // Dark colors                 case ConsoleColor.Black: return 0;                 case ConsoleColor.DarkRed: return 1;                 case ConsoleColor.DarkGreen: return 2;                 case ConsoleColor.DarkYellow: return 3;                 case ConsoleColor.DarkBlue: return 4;                 case ConsoleColor.DarkMagenta: return 5;                 case ConsoleColor.DarkCyan: return 6;                 case ConsoleColor.Gray: return 7;                  // Light colors                 case ConsoleColor.DarkGray: light = true; return 0;                 case ConsoleColor.Red: light = true; return 1;                 case ConsoleColor.Green: light = true; return 2;                 case ConsoleColor.Yellow: light = true; return 3;                 case ConsoleColor.Blue: light = true; return 4;                 case ConsoleColor.Magenta: light = true; return 5;                 case ConsoleColor.Cyan: light = true; return 6;                 case ConsoleColor.White: default: light = true; return 7;             }
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,GetAnsiColorControlCode,The following statement contains a magic number: int code = TranslateColor (color' out light) + (isForeground ? 30 : 40) + (light ? 60 : 0);
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,GetAnsiColorControlCode,The following statement contains a magic number: int code = TranslateColor (color' out light) + (isForeground ? 30 : 40) + (light ? 60 : 0);
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,GetAnsiColorControlCode,The following statement contains a magic number: int code = TranslateColor (color' out light) + (isForeground ? 30 : 40) + (light ? 60 : 0);
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,DetectXtermColors,The following statement contains a magic number: xterm_colors = _xterm_colors && isatty (1) && isatty (2);
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,TestAnsi,The following statement contains a magic number: Console.Write ("{0}{1}: {2}{3} :: {4}{1}: {5}{3}"' color_code_fg' color' color_code_fg.Substring (2)'                     GetAnsiResetControlCode ()' color_code_bg' color_code_bg.Substring (2));
Magic Number,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,TestAnsi,The following statement contains a magic number: Console.Write ("{0}{1}: {2}{3} :: {4}{1}: {5}{3}"' color_code_fg' color' color_code_fg.Substring (2)'                     GetAnsiResetControlCode ()' color_code_bg' color_code_bg.Substring (2));
Magic Number,Hyena,CryptoUtil,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\CryptoUtil.cs,IsMd5Encoded,The following statement contains a magic number: return text == null || text.Length != 32 ? false : md5_regex.IsMatch (text);
Magic Number,Hyena,Log,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\Log.cs,TimerPrint,The following statement contains a magic number: duration.TotalSeconds < 60
Magic Number,Hyena,PlatformDetection,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\PlatformDetection.cs,PlatformDetection,The following statement contains a magic number: IsUnix = p == 4 || p == 6 || p == 128;
Magic Number,Hyena,PlatformDetection,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\PlatformDetection.cs,PlatformDetection,The following statement contains a magic number: IsUnix = p == 4 || p == 6 || p == 128;
Magic Number,Hyena,PlatformDetection,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\PlatformDetection.cs,PlatformDetection,The following statement contains a magic number: IsUnix = p == 4 || p == 6 || p == 128;
Magic Number,Hyena,PlatformDetection,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\PlatformDetection.cs,PlatformDetection,The following statement contains a magic number: IsWindows = p < 4;
Magic Number,Hyena,PlatformDetection,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\PlatformDetection.cs,PlatformDetection,The following statement contains a magic number: utsname = Marshal.AllocHGlobal (8192);
Magic Number,Hyena,StringUtil,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\StringUtil.cs,RelaxedCompare,The following statement contains a magic number: int a_offset = a.StartsWith ("the ") ? 4 : 0;
Magic Number,Hyena,StringUtil,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\StringUtil.cs,RelaxedCompare,The following statement contains a magic number: int b_offset = b.StartsWith ("the ") ? 4 : 0;
Magic Number,Hyena,StringUtil,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\StringUtil.cs,CamelCaseToUnderCase,The following statement contains a magic number: i < tokens.Length - 2
Magic Number,Hyena,StringUtil,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\StringUtil.cs,FormatInterleaved,The following statement contains a magic number: str_pos = widget_i + 2 + Array.IndexOf (objects' obj).ToString ().Length;
Magic Number,Hyena,XdgBaseDirectorySpec,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\XdgBaseDirectorySpec.cs,GetUserDirectory,The following statement contains a magic number: path = path.Substring (6);
Magic Number,Hyena,XdgBaseDirectorySpec,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\XdgBaseDirectorySpec.cs,GetUserDirectory,The following statement contains a magic number: delim_index > 8 && line.Substring (0' delim_index) == key
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,WriteCharBytes,The following statement contains a magic number: ch > 255
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlDecode,The following statement contains a magic number: xchar = GetChar (s' i + 2' 4);
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlDecode,The following statement contains a magic number: xchar = GetChar (s' i + 2' 4);
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlDecode,The following statement contains a magic number: i += 5;
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlDecode,The following statement contains a magic number: s [i + 1] == 'u' && i + 5 < len
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlDecode,The following statement contains a magic number: ch == '%' && i + 2 < len && s [i + 1] != '%'
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,GetInt,The following statement contains a magic number: return c - 'a' + 10;
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,GetInt,The following statement contains a magic number: return c - 'A' + 10;
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,GetChar,The following statement contains a magic number: value = (value << 4) + current;
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,GetChar,The following statement contains a magic number: c > 127
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,GetChar,The following statement contains a magic number: val = (val << 4) + current;
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlDecode,The following statement contains a magic number: xchar = GetChar (bytes' i + 2' 4);
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlDecode,The following statement contains a magic number: xchar = GetChar (bytes' i + 2' 4);
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlDecode,The following statement contains a magic number: i += 5;
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlDecode,The following statement contains a magic number: bytes [i + 1] == (byte) 'u' && i + 5 < end
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlDecode,The following statement contains a magic number: bytes [i] == '%' && i + 2 < count && bytes [i + 1] != '%'
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlEncodeChar,The following statement contains a magic number: idx = i >> 12;
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlEncodeChar,The following statement contains a magic number: idx = (i >> 8) & 0x0F;
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlEncodeChar,The following statement contains a magic number: idx = (i >> 4) & 0x0F;
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlEncodeChar,The following statement contains a magic number: c > 255
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlEncodeChar,The following statement contains a magic number: isUnicode && c > 127
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,UrlEncodeChar,The following statement contains a magic number: int idx = ((int) c) >> 4;
Magic Number,System.Web,HttpUtility,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\System.Web\HttpUtility.cs,HtmlEncode,The following statement contains a magic number: c == '&' || c == '"' || c == '<' || c == '>' || c > 159
Missing Default,Hyena.Query,UserQueryParser,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena.Query\UserQueryParser.cs,ParseToken,The following switch statement is missing a default case: switch (token.ID) {                 case TokenID.OpenParen:                     DepthPush ();                     break;                  case TokenID.CloseParen:                     DepthPop ();                     break;                  case TokenID.Not:                     NodePush (new QueryListNode (Keyword.Not));                     break;                  case TokenID.Or:                 case TokenID.And:                     // Only push a node if the current_parent is not the same as this token                     if (current_parent.Keyword == Keyword.Not ||                             current_parent.Keyword == (token.ID == TokenID.Or ? Keyword.And : Keyword.Or)) {                          QueryListNode list = new QueryListNode (token.ID == TokenID.Or ? Keyword.Or : Keyword.And);                         QueryListNode p = current_parent.Parent;                          if (p != null) {                             current_parent.Parent.RemoveChild (current_parent);                         }                          if (current_parent.Keyword == Keyword.Not || current_parent.ChildCount > 1) {                             list.AddChild (current_parent);                         } else {                             list.TakeChildren (current_parent);                         }                          current_parent = p;                         NodePush (list);                     }                     break;                  case TokenID.Term:                     NodePush (QueryTermNode.ParseUserQuery (field_set' token.Term));                     break;             }
Missing Default,Hyena,ConsoleCrayon,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\ConsoleCrayon.cs,DetectXtermColors,The following switch statement is missing a default case: switch (Environment.GetEnvironmentVariable ("TERM")) {                 case "xterm":                 case "rxvt":                 case "rxvt-unicode":                     if (Environment.GetEnvironmentVariable ("COLORTERM") != null) {                         _xterm_colors = true;                     }                     break;                 case "xterm-color":                     _xterm_colors = true;                     break;             }
Missing Default,Hyena,Log,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\Log.cs,Commit,The following switch statement is missing a default case: switch (type) {                     case LogEntryType.Error: ConsoleCrayon.ForegroundColor = ConsoleColor.Red; break;                     case LogEntryType.Warning: ConsoleCrayon.ForegroundColor = ConsoleColor.DarkYellow; break;                     case LogEntryType.Information: ConsoleCrayon.ForegroundColor = ConsoleColor.Green; break;                     case LogEntryType.Debug: ConsoleCrayon.ForegroundColor = ConsoleColor.Blue; break;                 }
Missing Default,Hyena,Log,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\Log.cs,TypeString,The following switch statement is missing a default case: switch (type) {                 case LogEntryType.Debug:         return "Debug";                 case LogEntryType.Warning:       return "Warn ";                 case LogEntryType.Error:         return "Error";                 case LogEntryType.Information:   return "Info ";             }
Missing Default,Hyena,PlatformDetection,C:\research\architectureSmells\repos\mono_f-spot\lib\Hyena\Hyena\PlatformDetection.cs,PlatformDetection,The following switch statement is missing a default case: switch (PosixSystemName) {                 case "Darwin": IsMac = true; break;                 case "Linux": IsLinux = true; break;             }
