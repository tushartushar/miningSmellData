Implementation smell,Namespace,Class,File,Method,Description
Long Method,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,HandleKeyboardScrollKey,The method has 100 lines of code.
Complex Method,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintList,Cyclomatic complexity of the method is 10
Complex Method,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,RecalculateColumnSizes,Cyclomatic complexity of the method is 8
Complex Method,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnColumnRightClicked,Cyclomatic complexity of the method is 8
Complex Method,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,ResizeColumn,Cyclomatic complexity of the method is 10
Complex Method,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,SetModel,Cyclomatic complexity of the method is 9
Complex Method,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,KeyboardScroll,Cyclomatic complexity of the method is 9
Complex Method,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,UpdateAdjustments,Cyclomatic complexity of the method is 10
Complex Method,Hyena.Widgets,AnimatedBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\AnimatedBox.cs,RecalculateSpacings,Cyclomatic complexity of the method is 10
Complex Method,Hyena.Gui.Canvas,StackPanel,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\StackPanel.cs,Measure,Cyclomatic complexity of the method is 8
Complex Method,Hyena.Gui.Canvas,StackPanel,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\StackPanel.cs,Arrange,Cyclomatic complexity of the method is 9
Long Parameter List,Hyena.Data.Gui,Column,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\Column.cs,Column,The method has 5 parameters. Parameters: headerCell' title' cell' width' visible
Long Parameter List,Hyena.Data.Gui,Column,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\Column.cs,Column,The method has 7 parameters. Parameters: headerCell' title' cell' width' visible' minWidth' maxWidth
Long Parameter List,Hyena.Data.Gui,SortableColumn,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\SortableColumn.cs,SortableColumn,The method has 5 parameters. Parameters: title' cell' width' sort_key' visible
Long Parameter List,Hyena.Data.Gui,SortableColumn,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\SortableColumn.cs,SortableColumn,The method has 6 parameters. Parameters: header_cell' title' cell' width' sort_key' visible
Long Parameter List,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintCell,The method has 8 parameters. Parameters: item' column_index' row_index' area' opaque' bold' state' dragging
Long Parameter List,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,GetEventCell,The method has 5 parameters. Parameters: x' y' icell' column' row_index
Long Parameter List,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,GetCellAtPoint,The method has 5 parameters. Parameters: x' y' coord_type' row' col
Long Parameter List,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RoundedRectangle,The method has 6 parameters. Parameters: cr' x' y' w' h' r
Long Parameter List,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RoundedRectangle,The method has 7 parameters. Parameters: cr' x' y' w' h' r' corners
Long Parameter List,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RoundedRectangle,The method has 8 parameters. Parameters: cr' x' y' w' h' r' corners' topBottomFallsThrough
Long Parameter List,Hyena.Gui,CompositeUtils,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CompositeUtils.cs,gdk_property_change,The method has 7 parameters. Parameters: window' property' type' format' mode' data' nelements
Long Parameter List,Hyena.Gui,CompositeUtils,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CompositeUtils.cs,gdk_property_change,The method has 7 parameters. Parameters: window' property' type' format' mode' data' nelements
Long Parameter List,Hyena.Gui,CompositeUtils,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CompositeUtils.cs,ChangeProperty,The method has 5 parameters. Parameters: win' property' type' mode' data
Long Parameter List,Hyena.Gui,CompositeUtils,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CompositeUtils.cs,ChangeProperty,The method has 5 parameters. Parameters: win' property' type' mode' data
Long Parameter List,Hyena.Gui,RatingRenderer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\RatingRenderer.cs,Render,The method has 9 parameters. Parameters: cr' area' color' showEmptyStars' isHovering' hoverValue' fillOpacity' hoverFillOpacity' strokeOpacity
Long Parameter List,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,rgb_to_lab,The method has 6 parameters. Parameters: R' G' B' L' a' b
Long Parameter List,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,lab_to_rgb,The method has 6 parameters. Parameters: L' a' b' R' G' B
Long Parameter List,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,lab_distance,The method has 6 parameters. Parameters: La' aa' ba' Lb' ab' bb
Long Parameter List,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,PixbufImageSurface,The method has 6 parameters. Parameters: pixbuf' width' height' channels' rowstride' pixels
Long Parameter List,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,PixbufImageSurface,The method has 7 parameters. Parameters: pixbuf' data' width' height' channels' rowstride' pixels
Long Parameter List,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The method has 5 parameters. Parameters: width' height' channels' gdk_rowstride' pixels
Long Parameter List,Hyena.Gui,BaseWidgetAccessible,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\BaseWidgetAccessible.cs,GetExtents,The method has 5 parameters. Parameters: x' y' w' h' coordType
Long Parameter List,Hyena.Gui,BaseWidgetAccessible,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\BaseWidgetAccessible.cs,SetExtents,The method has 5 parameters. Parameters: x' y' w' h' coordType
Long Parameter List,Hyena.Gui,BaseWidgetAccessible,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\BaseWidgetAccessible.cs,SetSizeAndPosition,The method has 6 parameters. Parameters: x' y' w' h' coordType' setSize
Long Parameter List,Hyena.Gui,CairoDamageDebugger,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoDamageDebugger.cs,RenderDamage,The method has 5 parameters. Parameters: cr' x' y' w' h
Long Parameter List,Hyena.Widgets,AnimatedBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\AnimatedBox.cs,Pack,The method has 5 parameters. Parameters: widget' duration' easing' blocking' end
Long Parameter List,Hyena.Widgets,AnimatedBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\AnimatedBox.cs,RemoveCore,The method has 6 parameters. Parameters: widget' duration' easing' blocking' use_easing' use_blocking
Long Parameter List,Hyena.Widgets,AnimatedBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\AnimatedBox.cs,RemoveCore,The method has 6 parameters. Parameters: widget' duration' easing' blocking' use_easing' use_blocking
Long Parameter List,Hyena.Widgets,AnimatedWidget,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\AnimatedWidget.cs,AnimatedWidget,The method has 5 parameters. Parameters: widget' duration' easing' blocking' horizontal
Long Parameter List,Hyena.Widgets,HigMessageDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\HigMessageDialog.cs,HigMessageDialog,The method has 6 parameters. Parameters: parent' flags' type' buttons' header' msg
Long Parameter List,Hyena.Widgets,HigMessageDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\HigMessageDialog.cs,HigMessageDialog,The method has 6 parameters. Parameters: parent' flags' type' header' msg' ok_caption
Long Parameter List,Hyena.Widgets,HigMessageDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\HigMessageDialog.cs,RunHigMessageDialog,The method has 6 parameters. Parameters: parent' flags' type' buttons' header' msg
Long Parameter List,Hyena.Widgets,HigMessageDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\HigMessageDialog.cs,RunHigConfirmation,The method has 6 parameters. Parameters: parent' flags' type' header' msg' ok_caption
Long Parameter List,Hyena.Query.Gui,QueryTermsBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryTermsBox.cs,Attach,The method has 5 parameters. Parameters: widget' left_attach' right_attach' top_attach' bottom_attach
Long Parameter List,Hyena.Gui.Theming,Theme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\Theme.cs,DrawRowSelection,The method has 5 parameters. Parameters: cr' x' y' width' height
Long Parameter List,Hyena.Gui.Theming,Theme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\Theme.cs,DrawRowSelection,The method has 6 parameters. Parameters: cr' x' y' width' height' filled
Long Parameter List,Hyena.Gui.Theming,Theme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\Theme.cs,DrawRowSelection,The method has 8 parameters. Parameters: cr' x' y' width' height' filled' stroked' color
Long Parameter List,Hyena.Gui.Theming,Theme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\Theme.cs,DrawRowCursor,The method has 5 parameters. Parameters: cr' x' y' width' height
Long Parameter List,Hyena.Gui.Theming,Theme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\Theme.cs,DrawRowCursor,The method has 6 parameters. Parameters: cr' x' y' width' height' color
Long Parameter List,Hyena.Gui.Theming,Theme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\Theme.cs,DrawRowCursor,The method has 7 parameters. Parameters: cr' x' y' width' height' color' corners
Long Parameter List,Hyena.Gui.Theming,Theme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\Theme.cs,DrawRowSelection,The method has 9 parameters. Parameters: cr' x' y' width' height' filled' stroked' color' corners
Long Parameter List,Hyena.Gui.Theming,Theme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\Theme.cs,DrawRowRule,The method has 5 parameters. Parameters: cr' x' y' width' height
Long Parameter List,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowCursor,The method has 7 parameters. Parameters: cr' x' y' width' height' color' corners
Long Parameter List,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowSelection,The method has 9 parameters. Parameters: cr' x' y' width' height' filled' stroked' color' corners
Long Parameter List,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowSelection,The method has 10 parameters. Parameters: cr' x' y' width' height' filled' stroked' color' corners' flat_fill
Long Parameter List,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowRule,The method has 5 parameters. Parameters: cr' x' y' width' height
Long Parameter List,Hyena.Data.Gui.Accessibility,ColumnCellAccessible,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\Accessibility\ColumnCellAccessible.cs,SetExtents,The method has 5 parameters. Parameters: x' y' w' h' coordType
Long Parameter List,Hyena.Data.Gui.Accessibility,ColumnCellAccessible,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\Accessibility\ColumnCellAccessible.cs,GetExtents,The method has 5 parameters. Parameters: x' y' w' h' coordType
Long Identifier,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,,The length of the parameter pressed_column_x_start_hadjustment is 34.
Long Identifier,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,,The length of the parameter cairo_pop_group_to_source_call is 30.
Long Identifier,Hyena.Gui,PangoCairoHelper,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PangoCairoHelper.cs,LayoutPath,The length of the parameter iUnderstandThePerformanceImplications is 37.
Long Statement,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnQueryTooltip,The length of the statement  "                                Log.WarningFormat ("Tooltip rect {0} does not contain tooltip point {1}'{2} -- this will cause excessive requerying"' area' args.X' args.Y); " is 140.
Long Statement,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnQueryTooltip,The length of the statement  "                                Log.WarningFormat ("ListView tooltip rect {0} does not contain tooltip point {1}'{2} -- this will cause excessive requerying"' rect' args.X' args.Y); " is 149.
Long Statement,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintList,The length of the statement  "                        Theme.DrawRowSelection (cairo_context' list_rendering_alloc.X' selection_y' list_rendering_alloc.Width' selection_height' " is 121.
Long Statement,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,GetViewPointForModelRow,The length of the statement  "                    return new Gdk.Point ((row % cols) * ChildSize.Width' (int)(Math.Floor ((double)row / (double)cols) * ChildSize.Height)); " is 121.
Long Statement,Hyena.Data.Gui,ListViewAccessibleFactory<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView_Accessible.cs,Init,The length of the statement  "                Atk.Global.DefaultRegistry.SetFactoryType ((GLib.GType)typeof (ListView<T>)' (GLib.GType)typeof (ListViewAccessibleFactory<T>)); " is 128.
Long Statement,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The length of the statement  "            cd = (float) Math.Sqrt (Math.Pow (Math.Abs (a - points[max_color'1])' 2.0f) + Math.Pow (Math.Abs (b - points[max_color'2])' 2.0f)); " is 131.
Long Statement,Hyena.Widgets,AnimatedBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\AnimatedBox.cs,RemoveCore,The length of the statement  "                throw new ArgumentException ("Cannot remove the specified widget because it has not been added to this container or it has already been removed."' "widget"); " is 157.
Long Statement,Hyena.Widgets,RatingAccessibleFactory,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,Init,The length of the statement  "            Atk.Global.DefaultRegistry.SetFactoryType ((GLib.GType)typeof (RatingEntry)' (GLib.GType)typeof (RatingAccessibleFactory)); " is 123.
Long Statement,Hyena.Widgets,SimpleTable<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SimpleTable.cs,InsertRow,The length of the statement  "                throw new ArgumentException ("cols"' String.Format ("Expected {0} column widgets' same as previous calls to Add"' NColumns)); " is 125.
Long Statement,Hyena.Query.Gui,QueryTermBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryTermBox.cs,HandleFieldChanged,The length of the statement  "            if (this.field != null && (field.ValueTypes.Length == 1 && this.field.ValueTypes.Length == 1 && field.ValueTypes[0] == this.field.ValueTypes[0])) { " is 147.
Long Statement,Hyena.Gui.Canvas,CanvasItem,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\CanvasItem.cs,Render,The length of the statement  "                PrelightRenderer (context.Context' context.Theme' new Rect (0' 0' ContentAllocation.Width' ContentAllocation.Height)' prelight_opacity); " is 136.
Complex Conditional,Hyena.Data.Gui,Column,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\Column.cs,CalculateWidths,The conditional expression  "headerVisible && (min_was_zero || was_size_req) && !String.IsNullOrEmpty (Title)"  is complex.
Complex Conditional,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintHeaderCell,The conditional expression  "!dragging && ci < column_cache.Length - 1 && (have_drawn_separator ||                  column_cache[ci].MaxWidth != column_cache[ci].MinWidth)"  is complex.
Complex Conditional,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintList,The conditional expression  "Selection != null && Selection.FocusedIndex == ri && !Selection.Contains (ri) && HasFocus"  is complex.
Complex Conditional,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintList,The conditional expression  "Selection != null && Selection.Count > 1 &&                  !selected_focus_alloc.Equals (Rectangle.Zero) &&                  HasFocus && !HeaderFocused"  is complex.
Complex Conditional,Hyena.Widgets,ScrolledWindow,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\ScrolledWindow.cs,ProbeAdjustable,The conditional expression  "hadj_value == null || vadj_value == null                  || hadj_value.GetType () != typeof (Adjustment)                  || vadj_value.GetType () != typeof (Adjustment)"  is complex.
Complex Conditional,Hyena.Query.Gui,QueryTermBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryTermBox.cs,HandleFieldChanged,The conditional expression  "this.field != null && (field.ValueTypes.Length == 1 && this.field.ValueTypes.Length == 1 && field.ValueTypes[0] == this.field.ValueTypes[0])"  is complex.
Complex Conditional,Hyena.Gui.Canvas,CanvasHost,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\CanvasHost.cs,OnExposeEvent,The conditional expression  "canvas_child == null || !canvas_child.Visible || !Visible || !IsMapped"  is complex.
Complex Conditional,Hyena.Gui.Canvas,StackPanel,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\StackPanel.cs,Arrange,The conditional expression  "(Orientation == Orientation.Vertical && Double.IsNaN (child.Height)) ||                      (Orientation == Orientation.Horizontal && Double.IsNaN (child.Width))"  is complex.
Virtual Method Call from Constructor,Hyena.Gui.Theming,Theme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\Theme.cs,Theme,The constructor "Theme" calls a virtual method "OnColorsRefreshed".
Virtual Method Call from Constructor,Hyena.Gui.Theming,Theme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\Theme.cs,Theme,The constructor "Theme" calls a virtual method "PushContext".
Empty Catch Block,Hyena.Gui,GtkUtilities,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\GtkUtilities.cs,SetChooserShortcuts,The method has an empty catch block.
Empty Catch Block,Hyena.Gui,GtkUtilities,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\GtkUtilities.cs,StyleGetProperty,The method has an empty catch block.
Empty Catch Block,Hyena.Gui.Dialogs,ExceptionDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Dialogs\ExceptionDialog.cs,BuildExceptionMessage,The method has an empty catch block.
Empty Catch Block,Hyena.Widgets,MessageBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\MessageBar.cs,MessageBar,The method has an empty catch block.
Magic Number,Hyena.Data.Gui,Column,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\Column.cs,CalculateWidths,The following statement contains a magic number: if (headerVisible && (min_was_zero || was_size_req) && !String.IsNullOrEmpty (Title)) {                  int w' h;                  layout.SetText (Title);                  //column_layout.SetText ("\u2026"); // ellipsis char                  layout.GetPixelSize (out w' out h);                    // Pretty sure the 3* is needed here only b/c of the " - 8" in ColumnCellText;                  // See TODO there                  w += 3 * (int)header_cell.Padding.Left;                  if (this is ISortableColumn) {                      w += ColumnHeaderCellText.GetArrowWidth (headerHeight);                  }                    MinWidth = Math.Max (MinWidth' w);                    // If the min/max are sufficiently close (arbitrarily choosen as < 8px) then                  // make them equal' so that the column doesn't appear resizable but in reality is on barely.                  if (MaxWidth - MinWidth < 8) {                      MinWidth = MaxWidth;                  }              }
Magic Number,Hyena.Data.Gui,Column,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\Column.cs,CalculateWidths,The following statement contains a magic number: if (headerVisible && (min_was_zero || was_size_req) && !String.IsNullOrEmpty (Title)) {                  int w' h;                  layout.SetText (Title);                  //column_layout.SetText ("\u2026"); // ellipsis char                  layout.GetPixelSize (out w' out h);                    // Pretty sure the 3* is needed here only b/c of the " - 8" in ColumnCellText;                  // See TODO there                  w += 3 * (int)header_cell.Padding.Left;                  if (this is ISortableColumn) {                      w += ColumnHeaderCellText.GetArrowWidth (headerHeight);                  }                    MinWidth = Math.Max (MinWidth' w);                    // If the min/max are sufficiently close (arbitrarily choosen as < 8px) then                  // make them equal' so that the column doesn't appear resizable but in reality is on barely.                  if (MaxWidth - MinWidth < 8) {                      MinWidth = MaxWidth;                  }              }
Magic Number,Hyena.Data.Gui,ColumnCellText,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnCellText.cs,ColumnCellText,The following statement contains a magic number: Padding = new Thickness (4' 0);
Magic Number,Hyena.Data.Gui,ColumnCellText,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnCellText.cs,Render,The following statement contains a magic number: context.Context.MoveTo (Padding.Left' ((int)cellHeight - text_height) / 2);
Magic Number,Hyena.Data.Gui,ColumnCellText,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnCellText.cs,Render,The following statement contains a magic number: color.A = Alpha ?? (context.Opaque ? 1.0 : 0.5);
Magic Number,Hyena.Data.Gui,ColumnCellText,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnCellText.cs,ComputeRowHeight,The following statement contains a magic number: return row_height + 8;
Magic Number,Hyena.Data.Gui,ColumnHeaderCellText,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnHeaderCellText.cs,Render,The following statement contains a magic number: arrow_alloc.Width = (int)(cellHeight / 3.0);
Magic Number,Hyena.Data.Gui,ColumnHeaderCellText,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnHeaderCellText.cs,Render,The following statement contains a magic number: arrow_alloc.Height = (int)((double)arrow_alloc.Width / 1.6);
Magic Number,Hyena.Data.Gui,ColumnHeaderCellText,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnHeaderCellText.cs,Render,The following statement contains a magic number: arrow_alloc.Y = ((int)cellHeight - arrow_alloc.Height) / 2;
Magic Number,Hyena.Data.Gui,ColumnHeaderCellText,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnHeaderCellText.cs,GetArrowWidth,The following statement contains a magic number: return (int)(headerHeight / 3.0) + 4;
Magic Number,Hyena.Data.Gui,ColumnHeaderCellText,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnHeaderCellText.cs,GetArrowWidth,The following statement contains a magic number: return (int)(headerHeight / 3.0) + 4;
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,MoveResize,The following statement contains a magic number: list_rendering_alloc.Width = allocation.Width - Theme.TotalBorderWidth * 2;
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width = Theme.TotalBorderWidth * 2;
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnSizeRequested,The following statement contains a magic number: requisition.Height = HeaderHeight + Theme.TotalBorderWidth * 2;
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintHeaderCell,The following statement contains a magic number: if (dragging) {                  Theme.DrawColumnHighlight (cairo_context' area'                      CairoExtensions.ColorShade (Theme.Colors.GetWidgetColor (GtkColorClass.Dark' StateType.Normal)' 0.9));                    Cairo.Color stroke_color = CairoExtensions.ColorShade (Theme.Colors.GetWidgetColor (                      GtkColorClass.Base' StateType.Normal)' 0.0);                  stroke_color.A = 0.3;    		cairo_context.SetSourceColor (stroke_color);                  cairo_context.MoveTo (area.X + 0.5' area.Y + 1.0);                  cairo_context.LineTo (area.X + 0.5' area.Bottom);                  cairo_context.MoveTo (area.Right - 0.5' area.Y + 1.0);                  cairo_context.LineTo (area.Right - 0.5' area.Bottom);                  cairo_context.Stroke ();              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintHeaderCell,The following statement contains a magic number: if (dragging) {                  Theme.DrawColumnHighlight (cairo_context' area'                      CairoExtensions.ColorShade (Theme.Colors.GetWidgetColor (GtkColorClass.Dark' StateType.Normal)' 0.9));                    Cairo.Color stroke_color = CairoExtensions.ColorShade (Theme.Colors.GetWidgetColor (                      GtkColorClass.Base' StateType.Normal)' 0.0);                  stroke_color.A = 0.3;    		cairo_context.SetSourceColor (stroke_color);                  cairo_context.MoveTo (area.X + 0.5' area.Y + 1.0);                  cairo_context.LineTo (area.X + 0.5' area.Bottom);                  cairo_context.MoveTo (area.Right - 0.5' area.Y + 1.0);                  cairo_context.LineTo (area.Right - 0.5' area.Bottom);                  cairo_context.Stroke ();              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintHeaderCell,The following statement contains a magic number: if (dragging) {                  Theme.DrawColumnHighlight (cairo_context' area'                      CairoExtensions.ColorShade (Theme.Colors.GetWidgetColor (GtkColorClass.Dark' StateType.Normal)' 0.9));                    Cairo.Color stroke_color = CairoExtensions.ColorShade (Theme.Colors.GetWidgetColor (                      GtkColorClass.Base' StateType.Normal)' 0.0);                  stroke_color.A = 0.3;    		cairo_context.SetSourceColor (stroke_color);                  cairo_context.MoveTo (area.X + 0.5' area.Y + 1.0);                  cairo_context.LineTo (area.X + 0.5' area.Bottom);                  cairo_context.MoveTo (area.Right - 0.5' area.Y + 1.0);                  cairo_context.LineTo (area.Right - 0.5' area.Bottom);                  cairo_context.Stroke ();              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintHeaderCell,The following statement contains a magic number: if (dragging) {                  Theme.DrawColumnHighlight (cairo_context' area'                      CairoExtensions.ColorShade (Theme.Colors.GetWidgetColor (GtkColorClass.Dark' StateType.Normal)' 0.9));                    Cairo.Color stroke_color = CairoExtensions.ColorShade (Theme.Colors.GetWidgetColor (                      GtkColorClass.Base' StateType.Normal)' 0.0);                  stroke_color.A = 0.3;    		cairo_context.SetSourceColor (stroke_color);                  cairo_context.MoveTo (area.X + 0.5' area.Y + 1.0);                  cairo_context.LineTo (area.X + 0.5' area.Bottom);                  cairo_context.MoveTo (area.Right - 0.5' area.Y + 1.0);                  cairo_context.LineTo (area.Right - 0.5' area.Bottom);                  cairo_context.Stroke ();              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintHeaderCell,The following statement contains a magic number: if (dragging) {                  Theme.DrawColumnHighlight (cairo_context' area'                      CairoExtensions.ColorShade (Theme.Colors.GetWidgetColor (GtkColorClass.Dark' StateType.Normal)' 0.9));                    Cairo.Color stroke_color = CairoExtensions.ColorShade (Theme.Colors.GetWidgetColor (                      GtkColorClass.Base' StateType.Normal)' 0.0);                  stroke_color.A = 0.3;    		cairo_context.SetSourceColor (stroke_color);                  cairo_context.MoveTo (area.X + 0.5' area.Y + 1.0);                  cairo_context.LineTo (area.X + 0.5' area.Bottom);                  cairo_context.MoveTo (area.Right - 0.5' area.Y + 1.0);                  cairo_context.LineTo (area.Right - 0.5' area.Bottom);                  cairo_context.Stroke ();              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintHeaderCell,The following statement contains a magic number: if (dragging) {                  Theme.DrawColumnHighlight (cairo_context' area'                      CairoExtensions.ColorShade (Theme.Colors.GetWidgetColor (GtkColorClass.Dark' StateType.Normal)' 0.9));                    Cairo.Color stroke_color = CairoExtensions.ColorShade (Theme.Colors.GetWidgetColor (                      GtkColorClass.Base' StateType.Normal)' 0.0);                  stroke_color.A = 0.3;    		cairo_context.SetSourceColor (stroke_color);                  cairo_context.MoveTo (area.X + 0.5' area.Y + 1.0);                  cairo_context.LineTo (area.X + 0.5' area.Bottom);                  cairo_context.MoveTo (area.Right - 0.5' area.Y + 1.0);                  cairo_context.LineTo (area.Right - 0.5' area.Bottom);                  cairo_context.Stroke ();              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,RenderDarkBackgroundInSortedColumn,The following statement contains a magic number: Theme.DrawRowRule (cairo_context'                                 list_rendering_alloc.X + col.X1 - HadjustmentValue'                                 header_rendering_alloc.Bottom + Theme.BorderWidth'                                 col.Width'                                 list_rendering_alloc.Height + Theme.InnerBorderWidth * 2);
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintList,The following statement contains a magic number: for (int ri = first_row; ri < last_row; ri++) {                  if (Selection != null && Selection.Contains (ri)) {                      if (selection_height == 0) {                          selection_y = single_list_alloc.Y;                      }                        selection_height += single_list_alloc.Height;                      selected_rows.Add (ri);                        if (Selection.FocusedIndex == ri) {                          selected_focus_alloc = single_list_alloc;                      }                  } else {                      if (rules_hint && ri % 2 != 0) {                          Theme.DrawRowRule (cairo_context' single_list_alloc.X' single_list_alloc.Y'                              single_list_alloc.Width' single_list_alloc.Height);                      }                        PaintReorderLine (ri' single_list_alloc);                        if (Selection != null && Selection.FocusedIndex == ri && !Selection.Contains (ri) && HasFocus) {                          CairoCorners corners = CairoCorners.All;                            if (Selection.Contains (ri - 1)) {                              corners &= ~(CairoCorners.TopLeft | CairoCorners.TopRight);                          }                            if (Selection.Contains (ri + 1)) {                              corners &= ~(CairoCorners.BottomLeft | CairoCorners.BottomRight);                          }                            if (HasFocus && !HeaderFocused) // Cursor out of selection.                              Theme.DrawRowCursor (cairo_context' single_list_alloc.X' single_list_alloc.Y'                                                   single_list_alloc.Width' single_list_alloc.Height'                                                   CairoExtensions.ColorShade (Theme.Colors.GetWidgetColor (GtkColorClass.Background' StateType.Selected)' 0.85));                      }                        if (selection_height > 0) {                          Cairo.Color selection_color = Theme.Colors.GetWidgetColor (GtkColorClass.Background' StateType.Selected);                          if (!HasFocus || HeaderFocused)                              selection_color = CairoExtensions.ColorShade (selection_color' 1.1);                            Theme.DrawRowSelection (cairo_context' list_rendering_alloc.X' selection_y' list_rendering_alloc.Width' selection_height'                                                  true' true' selection_color' CairoCorners.All);                          selection_height = 0;                      }                        PaintRow (ri' single_list_alloc' StateType.Normal);                  }                    single_list_alloc.Y += single_list_alloc.Height;              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintList,The following statement contains a magic number: for (int ri = first_row; ri < last_row; ri++) {                  if (Selection != null && Selection.Contains (ri)) {                      if (selection_height == 0) {                          selection_y = single_list_alloc.Y;                      }                        selection_height += single_list_alloc.Height;                      selected_rows.Add (ri);                        if (Selection.FocusedIndex == ri) {                          selected_focus_alloc = single_list_alloc;                      }                  } else {                      if (rules_hint && ri % 2 != 0) {                          Theme.DrawRowRule (cairo_context' single_list_alloc.X' single_list_alloc.Y'                              single_list_alloc.Width' single_list_alloc.Height);                      }                        PaintReorderLine (ri' single_list_alloc);                        if (Selection != null && Selection.FocusedIndex == ri && !Selection.Contains (ri) && HasFocus) {                          CairoCorners corners = CairoCorners.All;                            if (Selection.Contains (ri - 1)) {                              corners &= ~(CairoCorners.TopLeft | CairoCorners.TopRight);                          }                            if (Selection.Contains (ri + 1)) {                              corners &= ~(CairoCorners.BottomLeft | CairoCorners.BottomRight);                          }                            if (HasFocus && !HeaderFocused) // Cursor out of selection.                              Theme.DrawRowCursor (cairo_context' single_list_alloc.X' single_list_alloc.Y'                                                   single_list_alloc.Width' single_list_alloc.Height'                                                   CairoExtensions.ColorShade (Theme.Colors.GetWidgetColor (GtkColorClass.Background' StateType.Selected)' 0.85));                      }                        if (selection_height > 0) {                          Cairo.Color selection_color = Theme.Colors.GetWidgetColor (GtkColorClass.Background' StateType.Selected);                          if (!HasFocus || HeaderFocused)                              selection_color = CairoExtensions.ColorShade (selection_color' 1.1);                            Theme.DrawRowSelection (cairo_context' list_rendering_alloc.X' selection_y' list_rendering_alloc.Width' selection_height'                                                  true' true' selection_color' CairoCorners.All);                          selection_height = 0;                      }                        PaintRow (ri' single_list_alloc' StateType.Normal);                  }                    single_list_alloc.Y += single_list_alloc.Height;              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintList,The following statement contains a magic number: for (int ri = first_row; ri < last_row; ri++) {                  if (Selection != null && Selection.Contains (ri)) {                      if (selection_height == 0) {                          selection_y = single_list_alloc.Y;                      }                        selection_height += single_list_alloc.Height;                      selected_rows.Add (ri);                        if (Selection.FocusedIndex == ri) {                          selected_focus_alloc = single_list_alloc;                      }                  } else {                      if (rules_hint && ri % 2 != 0) {                          Theme.DrawRowRule (cairo_context' single_list_alloc.X' single_list_alloc.Y'                              single_list_alloc.Width' single_list_alloc.Height);                      }                        PaintReorderLine (ri' single_list_alloc);                        if (Selection != null && Selection.FocusedIndex == ri && !Selection.Contains (ri) && HasFocus) {                          CairoCorners corners = CairoCorners.All;                            if (Selection.Contains (ri - 1)) {                              corners &= ~(CairoCorners.TopLeft | CairoCorners.TopRight);                          }                            if (Selection.Contains (ri + 1)) {                              corners &= ~(CairoCorners.BottomLeft | CairoCorners.BottomRight);                          }                            if (HasFocus && !HeaderFocused) // Cursor out of selection.                              Theme.DrawRowCursor (cairo_context' single_list_alloc.X' single_list_alloc.Y'                                                   single_list_alloc.Width' single_list_alloc.Height'                                                   CairoExtensions.ColorShade (Theme.Colors.GetWidgetColor (GtkColorClass.Background' StateType.Selected)' 0.85));                      }                        if (selection_height > 0) {                          Cairo.Color selection_color = Theme.Colors.GetWidgetColor (GtkColorClass.Background' StateType.Selected);                          if (!HasFocus || HeaderFocused)                              selection_color = CairoExtensions.ColorShade (selection_color' 1.1);                            Theme.DrawRowSelection (cairo_context' list_rendering_alloc.X' selection_y' list_rendering_alloc.Width' selection_height'                                                  true' true' selection_color' CairoCorners.All);                          selection_height = 0;                      }                        PaintRow (ri' single_list_alloc' StateType.Normal);                  }                    single_list_alloc.Y += single_list_alloc.Height;              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintCell,The following statement contains a magic number: if (dragging) {                  Cairo.Color fill_color = Theme.Colors.GetWidgetColor (GtkColorClass.Base' StateType.Normal);                  fill_color.A = 0.5;  		cairo_context.SetSourceColor (fill_color);                  cairo_context.Rectangle (area.X' area.Y' area.Width' area.Height);                  cairo_context.Fill ();              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintDraggingColumn,The following statement contains a magic number: fill_color.A = 0.45;
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintDraggingColumn,The following statement contains a magic number: stroke_color.A = 0.3;
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintDraggingColumn,The following statement contains a magic number: cairo_context.Rectangle (x' header_rendering_alloc.Bottom + 1' column.Width - 2'                  list_rendering_alloc.Bottom - header_rendering_alloc.Bottom - 1);
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintDraggingColumn,The following statement contains a magic number: cairo_context.MoveTo (x - 0.5' header_rendering_alloc.Bottom + 0.5);
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintDraggingColumn,The following statement contains a magic number: cairo_context.MoveTo (x - 0.5' header_rendering_alloc.Bottom + 0.5);
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintDraggingColumn,The following statement contains a magic number: cairo_context.LineTo (x - 0.5' list_rendering_alloc.Bottom + 0.5);
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintDraggingColumn,The following statement contains a magic number: cairo_context.LineTo (x - 0.5' list_rendering_alloc.Bottom + 0.5);
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintDraggingColumn,The following statement contains a magic number: cairo_context.LineTo (x + column.Width - 1.5' list_rendering_alloc.Bottom + 0.5);
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintDraggingColumn,The following statement contains a magic number: cairo_context.LineTo (x + column.Width - 1.5' list_rendering_alloc.Bottom + 0.5);
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintDraggingColumn,The following statement contains a magic number: cairo_context.LineTo (x + column.Width - 1.5' header_rendering_alloc.Bottom + 0.5);
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintDraggingColumn,The following statement contains a magic number: cairo_context.LineTo (x + column.Width - 1.5' header_rendering_alloc.Bottom + 0.5);
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,PaintView,The following statement contains a magic number: for (int layout_index = 0; layout_index < ViewLayout.ChildCount; layout_index++) {                  var layout_child = ViewLayout[layout_index];                  var child_allocation = layout_child.Allocation;                    if (!child_allocation.IntersectsWith (clip) || ViewLayout.GetModelIndex (layout_child) >= Model.Count) {                      continue;                  }                    if (Selection != null && Selection.Contains (ViewLayout.GetModelIndex (layout_child))) {                      selected_rows.Add (ViewLayout.GetModelIndex (layout_child));                        var selection_color = Theme.Colors.GetWidgetColor (GtkColorClass.Background' StateType.Selected);                      if (!HasFocus || HeaderFocused) {                          selection_color = CairoExtensions.ColorShade (selection_color' 1.1);                      }                        Theme.DrawRowSelection (cairo_context'                          (int)child_allocation.X' (int)child_allocation.Y'                          (int)child_allocation.Width' (int)child_allocation.Height'                          true' true' selection_color' CairoCorners.All);                        cell_context.State = StateType.Selected;                  } else {                      cell_context.State = StateType.Normal;                  }                    //cairo_context.Save ();                  //cairo_context.Translate (child_allocation.X' child_allocation.Y);                  //cairo_context.Rectangle (0' 0' child_allocation.Width' child_allocation.Height);                  //cairo_context.Clip ();                  layout_child.Render (cell_context);                  //cairo_context.Restore ();              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,GenerateColumnCache,The following statement contains a magic number: for (i = 0; i < column_cache.Length; i++) {                  column_cache[i].Column.Width *= scale_factor;                  if (column_cache[i].Column.Width <= 0) {                      Hyena.Log.Warning ("Overriding 0-computed column cache width");                      column_cache[i].Column.Width = 0.01;                  }              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,RegenerateColumnCache,The following statement contains a magic number: for (int i = 0; i < column_cache.Length; i++) {                  // Calculate this column's proportional share of the width' and set positions (X1/X2)                  column_cache[i].Width = (int)Math.Round (((double)header_width * column_cache[i].Column.Width));                  column_cache[i].X1 = i == 0 ? 0 : column_cache[i - 1].X2;                  column_cache[i].X2 = column_cache[i].X1 + column_cache[i].Width;                  column_cache[i].ResizeX1 = column_cache[i].X2;                  column_cache[i].ResizeX2 = column_cache[i].ResizeX1 + 2;              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnColumnRightClicked,The following statement contains a magic number: uint max_items_per_column = 15;
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnColumnRightClicked,The following statement contains a magic number: if (items >= max_items_per_column * 2) {                  max_items_per_column = (uint)Math.Ceiling (items / 3.0);              } else if (items >= max_items_per_column) {                  max_items_per_column = (uint)Math.Ceiling (items / 2.0);              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnColumnRightClicked,The following statement contains a magic number: if (items >= max_items_per_column * 2) {                  max_items_per_column = (uint)Math.Ceiling (items / 3.0);              } else if (items >= max_items_per_column) {                  max_items_per_column = (uint)Math.Ceiling (items / 2.0);              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnColumnRightClicked,The following statement contains a magic number: if (items >= max_items_per_column * 2) {                  max_items_per_column = (uint)Math.Ceiling (items / 3.0);              } else if (items >= max_items_per_column) {                  max_items_per_column = (uint)Math.Ceiling (items / 2.0);              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnColumnRightClicked,The following statement contains a magic number: uint row_offset = 2;
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnColumnRightClicked,The following statement contains a magic number: if (clickedColumn.Id != null) { // FIXME: Also restrict if the column vis can't be changed                  menu.Attach (new ColumnHideMenuItem (clickedColumn)' 0' column_count' 0' 1);                  menu.Attach (new SeparatorMenuItem ()' 0' column_count' 1' 2);              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnColumnRightClicked,The following statement contains a magic number: menu.Popup (null' null' delegate (Menu popup' out int pos_x' out int pos_y' out bool push_in) {                  int win_x' win_y;                  GdkWindow.GetOrigin (out win_x' out win_y);                    pos_x = win_x + x;                  pos_y = win_y + y;                  push_in = true;              }' 3' Gtk.Global.CurrentEventTime);
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,GetColumnForResizeHandle,The following statement contains a magic number: for (int i = 0; i < column_cache.Length - 1; i++) {                  if (x < column_cache[i].ResizeX1 - 2) {                      // No point in checking other columns since their ResizeX1 are even larger                      break;                  } else if (x <= column_cache[i].ResizeX2 + 2 && CanResizeColumn (i)) {                      return column_cache[i].Column;                  }              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,GetColumnForResizeHandle,The following statement contains a magic number: for (int i = 0; i < column_cache.Length - 1; i++) {                  if (x < column_cache[i].ResizeX1 - 2) {                      // No point in checking other columns since their ResizeX1 are even larger                      break;                  } else if (x <= column_cache[i].ResizeX2 + 2 && CanResizeColumn (i)) {                      return column_cache[i].Column;                  }              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnHeaderButtonPressEvent,The following statement contains a magic number: if (evnt.Button == 3 && ColumnController.EnableColumnMenu) {                  Column menu_column = GetColumnAt (x);                  if (menu_column != null) {                      OnColumnRightClicked (menu_column' x + Allocation.X' y + Allocation.Y);                  }                  return true;              } else if (evnt.Button != 1) {                  return true;              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnListButtonPressEvent,The following statement contains a magic number: if (evnt.Button == 1 && evnt.Type == Gdk.EventType.TwoButtonPress) {                  // Double clicked                  OnRowActivated ();              } else if (Selection != null) {                  if ((evnt.State & Gdk.ModifierType.ControlMask) != 0) {                      if (evnt.Button == 3) {                          // Right clicked with ctrl pressed' so make sure row selected                          if (!Selection.Contains (row_index)) {                              Selection.Select (row_index);                          }                      } else {                          // Normal ctrl-click' so toggle                          Selection.ToggleSelect (row_index);                      }                  } else if ((evnt.State & Gdk.ModifierType.ShiftMask) != 0) {                      // Shift-click' so select from first-row-selected (if any) to the current row                      Selection.SelectFromFirst (row_index' true);                  } else {                      if (evnt.Button == 3) {                          // Normal right-click' make sure row is only row selected                          if (!Selection.Contains (row_index)) {                              Selection.Clear (false);                              Selection.Select (row_index);                          }                      } else {                          // Normal click' if row not already selected' select only it right now'                          // but if it's already selected' wait until the Release to unselect any others so that                          // drag and drop of 2+ items works.                          if (!Selection.Contains (row_index)) {                              Selection.Clear (false);                              Selection.Select (row_index);                          }                      }                  }                    FocusModelRow (row_index);                    // Now that we've worked out the selections' open the context menu                  if (evnt.Button == 3) {                      OnPopupMenu ();                  }              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnListButtonPressEvent,The following statement contains a magic number: if (evnt.Button == 1 && evnt.Type == Gdk.EventType.TwoButtonPress) {                  // Double clicked                  OnRowActivated ();              } else if (Selection != null) {                  if ((evnt.State & Gdk.ModifierType.ControlMask) != 0) {                      if (evnt.Button == 3) {                          // Right clicked with ctrl pressed' so make sure row selected                          if (!Selection.Contains (row_index)) {                              Selection.Select (row_index);                          }                      } else {                          // Normal ctrl-click' so toggle                          Selection.ToggleSelect (row_index);                      }                  } else if ((evnt.State & Gdk.ModifierType.ShiftMask) != 0) {                      // Shift-click' so select from first-row-selected (if any) to the current row                      Selection.SelectFromFirst (row_index' true);                  } else {                      if (evnt.Button == 3) {                          // Normal right-click' make sure row is only row selected                          if (!Selection.Contains (row_index)) {                              Selection.Clear (false);                              Selection.Select (row_index);                          }                      } else {                          // Normal click' if row not already selected' select only it right now'                          // but if it's already selected' wait until the Release to unselect any others so that                          // drag and drop of 2+ items works.                          if (!Selection.Contains (row_index)) {                              Selection.Clear (false);                              Selection.Select (row_index);                          }                      }                  }                    FocusModelRow (row_index);                    // Now that we've worked out the selections' open the context menu                  if (evnt.Button == 3) {                      OnPopupMenu ();                  }              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnListButtonPressEvent,The following statement contains a magic number: if (evnt.Button == 1 && evnt.Type == Gdk.EventType.TwoButtonPress) {                  // Double clicked                  OnRowActivated ();              } else if (Selection != null) {                  if ((evnt.State & Gdk.ModifierType.ControlMask) != 0) {                      if (evnt.Button == 3) {                          // Right clicked with ctrl pressed' so make sure row selected                          if (!Selection.Contains (row_index)) {                              Selection.Select (row_index);                          }                      } else {                          // Normal ctrl-click' so toggle                          Selection.ToggleSelect (row_index);                      }                  } else if ((evnt.State & Gdk.ModifierType.ShiftMask) != 0) {                      // Shift-click' so select from first-row-selected (if any) to the current row                      Selection.SelectFromFirst (row_index' true);                  } else {                      if (evnt.Button == 3) {                          // Normal right-click' make sure row is only row selected                          if (!Selection.Contains (row_index)) {                              Selection.Clear (false);                              Selection.Select (row_index);                          }                      } else {                          // Normal click' if row not already selected' select only it right now'                          // but if it's already selected' wait until the Release to unselect any others so that                          // drag and drop of 2+ items works.                          if (!Selection.Contains (row_index)) {                              Selection.Clear (false);                              Selection.Select (row_index);                          }                      }                  }                    FocusModelRow (row_index);                    // Now that we've worked out the selections' open the context menu                  if (evnt.Button == 3) {                      OnPopupMenu ();                  }              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnMotionNotifyEvent,The following statement contains a magic number: OnDragScroll (OnDragHScrollTimeout' header_interaction_alloc.Width * 0.1' header_interaction_alloc.Width' x);
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (swap_column != null) {                  CachedColumn swap_column_c = GetCachedColumnForColumn (swap_column);                  bool reorder = false;                    if (swap_column_c.Index < pressed_column_index) {                      // Moving from right to left                      reorder = pressed_column_x_drag <= swap_column_c.X1 + swap_column_c.Width / 2;                  } else if (swap_column_c.Index > pressed_column_index) {                      if (column_cache.Length > pressed_column_index && pressed_column_index >= 0) {                          // Moving from left to right                          reorder = pressed_column_x_drag + column_cache[pressed_column_index].Width >=                              swap_column_c.X1 + swap_column_c.Width / 2;                      }                  }                    if (reorder) {                      int actual_pressed_index = ColumnController.IndexOf (column_cache[pressed_column_index].Column);                      int actual_swap_index = ColumnController.IndexOf (swap_column_c.Column);                      ColumnController.Reorder (actual_pressed_index' actual_swap_index);                      pressed_column_index = swap_column_c.Index;                      RegenerateColumnCache ();                  }              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (swap_column != null) {                  CachedColumn swap_column_c = GetCachedColumnForColumn (swap_column);                  bool reorder = false;                    if (swap_column_c.Index < pressed_column_index) {                      // Moving from right to left                      reorder = pressed_column_x_drag <= swap_column_c.X1 + swap_column_c.Width / 2;                  } else if (swap_column_c.Index > pressed_column_index) {                      if (column_cache.Length > pressed_column_index && pressed_column_index >= 0) {                          // Moving from left to right                          reorder = pressed_column_x_drag + column_cache[pressed_column_index].Width >=                              swap_column_c.X1 + swap_column_c.Width / 2;                      }                  }                    if (reorder) {                      int actual_pressed_index = ColumnController.IndexOf (column_cache[pressed_column_index].Column);                      int actual_swap_index = ColumnController.IndexOf (swap_column_c.Column);                      ColumnController.Reorder (actual_pressed_index' actual_swap_index);                      pressed_column_index = swap_column_c.Index;                      RegenerateColumnCache ();                  }              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,UpdateAdjustments,The following statement contains a magic number: if (hadjustment != null) {                  hadjustment.Upper = header_width;                  hadjustment.StepIncrement = 10.0;                  if (hadjustment.Value + hadjustment.PageSize > hadjustment.Upper) {                      hadjustment.Value = hadjustment.Upper - hadjustment.PageSize;                  }              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,CenterOn,The following statement contains a magic number: ScrollTo (index - ItemsInView / 2 + 1);
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnDragMotion,The following statement contains a magic number: OnDragScroll (OnDragVScrollTimeout' Allocation.Height * 0.3' Allocation.Height' y);
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,GetDragRow,The following statement contains a magic number: if (row != GetModelRowAt (0' y + ChildSize.Height / 2)) {                  row++;              }
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,InvokeColumnHeaderMenu,The following statement contains a magic number: OnColumnRightClicked (col' rectangle.X + rectangle.Width/2' rectangle.Y + rectangle.Height/2);
Magic Number,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,InvokeColumnHeaderMenu,The following statement contains a magic number: OnColumnRightClicked (col' rectangle.X + rectangle.Width/2' rectangle.Y + rectangle.Height/2);
Magic Number,Hyena.Data.Gui,ColumnCellCheckBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnCellCheckBox.cs,Measure,The following statement contains a magic number: Width = Size + 2 * Xpad;
Magic Number,Hyena.Data.Gui,ColumnCellCheckBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnCellCheckBox.cs,Measure,The following statement contains a magic number: Height = Size + 2 * Ypad;
Magic Number,Hyena.Data.Gui,ColumnCellCheckBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnCellCheckBox.cs,Render,The following statement contains a magic number: int cell_width = (int)cellWidth - 2 * Xpad;
Magic Number,Hyena.Data.Gui,ColumnCellCheckBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnCellCheckBox.cs,Render,The following statement contains a magic number: int cell_height = (int)cellHeight - 2 * Ypad;
Magic Number,Hyena.Data.Gui,ColumnCellCheckBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnCellCheckBox.cs,Render,The following statement contains a magic number: int x = context.Area.X + xpad + ((cell_width - Size) / 2);
Magic Number,Hyena.Data.Gui,ColumnCellCheckBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnCellCheckBox.cs,Render,The following statement contains a magic number: int y = context.Area.Y + ypad + ((cell_height - Size) / 2);
Magic Number,Hyena.Data.Gui,ColumnCellCheckBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnCellCheckBox.cs,GetWidthRange,The following statement contains a magic number: min = max = 2 * Xpad + Size;
Magic Number,Hyena.Data.Gui,ColumnCellRating,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnCellRating.cs,Render,The following statement contains a magic number: renderer.Render (context.Context' area' context.Theme.Colors.GetWidgetColor (GtkColorClass.Text' context.State)'                  is_hovering' is_hovering' hover_value' 0.8' 0.45' 0.35);
Magic Number,Hyena.Data.Gui,ColumnCellRating,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnCellRating.cs,Render,The following statement contains a magic number: renderer.Render (context.Context' area' context.Theme.Colors.GetWidgetColor (GtkColorClass.Text' context.State)'                  is_hovering' is_hovering' hover_value' 0.8' 0.45' 0.35);
Magic Number,Hyena.Data.Gui,ColumnCellRating,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ColumnCellRating.cs,Render,The following statement contains a magic number: renderer.Render (context.Context' area' context.Theme.Colors.GetWidgetColor (GtkColorClass.Text' context.State)'                  is_hovering' is_hovering' hover_value' 0.8' 0.45' 0.35);
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,GdkColorToCairoColor,The following statement contains a magic number: return new Cairo.Color(                  (double)(color.Red >> 8) / 255.0'                  (double)(color.Green >> 8) / 255.0'                  (double)(color.Blue >> 8) / 255.0'                  alpha);
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,GdkColorToCairoColor,The following statement contains a magic number: return new Cairo.Color(                  (double)(color.Red >> 8) / 255.0'                  (double)(color.Green >> 8) / 255.0'                  (double)(color.Blue >> 8) / 255.0'                  alpha);
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,GdkColorToCairoColor,The following statement contains a magic number: return new Cairo.Color(                  (double)(color.Red >> 8) / 255.0'                  (double)(color.Green >> 8) / 255.0'                  (double)(color.Blue >> 8) / 255.0'                  alpha);
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,GdkColorToCairoColor,The following statement contains a magic number: return new Cairo.Color(                  (double)(color.Red >> 8) / 255.0'                  (double)(color.Green >> 8) / 255.0'                  (double)(color.Blue >> 8) / 255.0'                  alpha);
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,GdkColorToCairoColor,The following statement contains a magic number: return new Cairo.Color(                  (double)(color.Red >> 8) / 255.0'                  (double)(color.Green >> 8) / 255.0'                  (double)(color.Blue >> 8) / 255.0'                  alpha);
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,GdkColorToCairoColor,The following statement contains a magic number: return new Cairo.Color(                  (double)(color.Red >> 8) / 255.0'                  (double)(color.Green >> 8) / 255.0'                  (double)(color.Blue >> 8) / 255.0'                  alpha);
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RgbToColor,The following statement contains a magic number: return RgbaToColor ((rgbColor << 8) | 0x000000ff);
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RgbaToColor,The following statement contains a magic number: return new Cairo.Color (                  (byte)(rgbaColor >> 24) / 255.0'                  (byte)(rgbaColor >> 16) / 255.0'                  (byte)(rgbaColor >> 8) / 255.0'                  (byte)(rgbaColor & 0x000000ff) / 255.0);
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RgbaToColor,The following statement contains a magic number: return new Cairo.Color (                  (byte)(rgbaColor >> 24) / 255.0'                  (byte)(rgbaColor >> 16) / 255.0'                  (byte)(rgbaColor >> 8) / 255.0'                  (byte)(rgbaColor & 0x000000ff) / 255.0);
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RgbaToColor,The following statement contains a magic number: return new Cairo.Color (                  (byte)(rgbaColor >> 24) / 255.0'                  (byte)(rgbaColor >> 16) / 255.0'                  (byte)(rgbaColor >> 8) / 255.0'                  (byte)(rgbaColor & 0x000000ff) / 255.0);
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RgbaToColor,The following statement contains a magic number: return new Cairo.Color (                  (byte)(rgbaColor >> 24) / 255.0'                  (byte)(rgbaColor >> 16) / 255.0'                  (byte)(rgbaColor >> 8) / 255.0'                  (byte)(rgbaColor & 0x000000ff) / 255.0);
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RgbaToColor,The following statement contains a magic number: return new Cairo.Color (                  (byte)(rgbaColor >> 24) / 255.0'                  (byte)(rgbaColor >> 16) / 255.0'                  (byte)(rgbaColor >> 8) / 255.0'                  (byte)(rgbaColor & 0x000000ff) / 255.0);
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RgbaToColor,The following statement contains a magic number: return new Cairo.Color (                  (byte)(rgbaColor >> 24) / 255.0'                  (byte)(rgbaColor >> 16) / 255.0'                  (byte)(rgbaColor >> 8) / 255.0'                  (byte)(rgbaColor & 0x000000ff) / 255.0);
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RgbaToColor,The following statement contains a magic number: return new Cairo.Color (                  (byte)(rgbaColor >> 24) / 255.0'                  (byte)(rgbaColor >> 16) / 255.0'                  (byte)(rgbaColor >> 8) / 255.0'                  (byte)(rgbaColor & 0x000000ff) / 255.0);
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorIsDark,The following statement contains a magic number: return b < 0.5;
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: brightness = (max + min) / 2;
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if(Math.Abs(max - min) < 0.0001) {                  hue = 0;                  saturation = 0;              } else {                  saturation = brightness <= 0.5                      ? (max - min) / (max + min)                      : (max - min) / (2 - max - min);                    delta = max - min;                    if(red == max) {                      hue = (green - blue) / delta;                  } else if(green == max) {                      hue = 2 + (blue - red) / delta;                  } else if(blue == max) {                      hue = 4 + (red - green) / delta;                  }                    hue *= 60;                  if(hue < 0) {                      hue += 360;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if(Math.Abs(max - min) < 0.0001) {                  hue = 0;                  saturation = 0;              } else {                  saturation = brightness <= 0.5                      ? (max - min) / (max + min)                      : (max - min) / (2 - max - min);                    delta = max - min;                    if(red == max) {                      hue = (green - blue) / delta;                  } else if(green == max) {                      hue = 2 + (blue - red) / delta;                  } else if(blue == max) {                      hue = 4 + (red - green) / delta;                  }                    hue *= 60;                  if(hue < 0) {                      hue += 360;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if(Math.Abs(max - min) < 0.0001) {                  hue = 0;                  saturation = 0;              } else {                  saturation = brightness <= 0.5                      ? (max - min) / (max + min)                      : (max - min) / (2 - max - min);                    delta = max - min;                    if(red == max) {                      hue = (green - blue) / delta;                  } else if(green == max) {                      hue = 2 + (blue - red) / delta;                  } else if(blue == max) {                      hue = 4 + (red - green) / delta;                  }                    hue *= 60;                  if(hue < 0) {                      hue += 360;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if(Math.Abs(max - min) < 0.0001) {                  hue = 0;                  saturation = 0;              } else {                  saturation = brightness <= 0.5                      ? (max - min) / (max + min)                      : (max - min) / (2 - max - min);                    delta = max - min;                    if(red == max) {                      hue = (green - blue) / delta;                  } else if(green == max) {                      hue = 2 + (blue - red) / delta;                  } else if(blue == max) {                      hue = 4 + (red - green) / delta;                  }                    hue *= 60;                  if(hue < 0) {                      hue += 360;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if(Math.Abs(max - min) < 0.0001) {                  hue = 0;                  saturation = 0;              } else {                  saturation = brightness <= 0.5                      ? (max - min) / (max + min)                      : (max - min) / (2 - max - min);                    delta = max - min;                    if(red == max) {                      hue = (green - blue) / delta;                  } else if(green == max) {                      hue = 2 + (blue - red) / delta;                  } else if(blue == max) {                      hue = 4 + (red - green) / delta;                  }                    hue *= 60;                  if(hue < 0) {                      hue += 360;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if(Math.Abs(max - min) < 0.0001) {                  hue = 0;                  saturation = 0;              } else {                  saturation = brightness <= 0.5                      ? (max - min) / (max + min)                      : (max - min) / (2 - max - min);                    delta = max - min;                    if(red == max) {                      hue = (green - blue) / delta;                  } else if(green == max) {                      hue = 2 + (blue - red) / delta;                  } else if(blue == max) {                      hue = 4 + (red - green) / delta;                  }                    hue *= 60;                  if(hue < 0) {                      hue += 360;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if(Math.Abs(max - min) < 0.0001) {                  hue = 0;                  saturation = 0;              } else {                  saturation = brightness <= 0.5                      ? (max - min) / (max + min)                      : (max - min) / (2 - max - min);                    delta = max - min;                    if(red == max) {                      hue = (green - blue) / delta;                  } else if(green == max) {                      hue = 2 + (blue - red) / delta;                  } else if(blue == max) {                      hue = 4 + (red - green) / delta;                  }                    hue *= 60;                  if(hue < 0) {                      hue += 360;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: m2 = brightness <= 0.5                  ? brightness * (1 + saturation)                  : brightness + saturation - brightness * saturation;
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: m1 = 2 * brightness - m2;
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: hue_shift[0] = hue + 120;
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: hue_shift[2] = hue - 120;
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: hue_shift[2] = hue - 120;
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: color_shift[0] = color_shift[1] = color_shift[2] = brightness;
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: i = saturation == 0 ? 3 : 0;
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for(; i < 3; i++) {                  m3 = hue_shift[i];                    if(m3 > 360) {                      m3 = Modula(m3' 360);                  } else if(m3 < 0) {                      m3 = 360 - Modula(Math.Abs(m3)' 360);                  }                    if(m3 < 60) {                      color_shift[i] = m1 + (m2 - m1) * m3 / 60;                  } else if(m3 < 180) {                      color_shift[i] = m2;                  } else if(m3 < 240) {                      color_shift[i] = m1 + (m2 - m1) * (240 - m3) / 60;                  } else {                      color_shift[i] = m1;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for(; i < 3; i++) {                  m3 = hue_shift[i];                    if(m3 > 360) {                      m3 = Modula(m3' 360);                  } else if(m3 < 0) {                      m3 = 360 - Modula(Math.Abs(m3)' 360);                  }                    if(m3 < 60) {                      color_shift[i] = m1 + (m2 - m1) * m3 / 60;                  } else if(m3 < 180) {                      color_shift[i] = m2;                  } else if(m3 < 240) {                      color_shift[i] = m1 + (m2 - m1) * (240 - m3) / 60;                  } else {                      color_shift[i] = m1;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for(; i < 3; i++) {                  m3 = hue_shift[i];                    if(m3 > 360) {                      m3 = Modula(m3' 360);                  } else if(m3 < 0) {                      m3 = 360 - Modula(Math.Abs(m3)' 360);                  }                    if(m3 < 60) {                      color_shift[i] = m1 + (m2 - m1) * m3 / 60;                  } else if(m3 < 180) {                      color_shift[i] = m2;                  } else if(m3 < 240) {                      color_shift[i] = m1 + (m2 - m1) * (240 - m3) / 60;                  } else {                      color_shift[i] = m1;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for(; i < 3; i++) {                  m3 = hue_shift[i];                    if(m3 > 360) {                      m3 = Modula(m3' 360);                  } else if(m3 < 0) {                      m3 = 360 - Modula(Math.Abs(m3)' 360);                  }                    if(m3 < 60) {                      color_shift[i] = m1 + (m2 - m1) * m3 / 60;                  } else if(m3 < 180) {                      color_shift[i] = m2;                  } else if(m3 < 240) {                      color_shift[i] = m1 + (m2 - m1) * (240 - m3) / 60;                  } else {                      color_shift[i] = m1;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for(; i < 3; i++) {                  m3 = hue_shift[i];                    if(m3 > 360) {                      m3 = Modula(m3' 360);                  } else if(m3 < 0) {                      m3 = 360 - Modula(Math.Abs(m3)' 360);                  }                    if(m3 < 60) {                      color_shift[i] = m1 + (m2 - m1) * m3 / 60;                  } else if(m3 < 180) {                      color_shift[i] = m2;                  } else if(m3 < 240) {                      color_shift[i] = m1 + (m2 - m1) * (240 - m3) / 60;                  } else {                      color_shift[i] = m1;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for(; i < 3; i++) {                  m3 = hue_shift[i];                    if(m3 > 360) {                      m3 = Modula(m3' 360);                  } else if(m3 < 0) {                      m3 = 360 - Modula(Math.Abs(m3)' 360);                  }                    if(m3 < 60) {                      color_shift[i] = m1 + (m2 - m1) * m3 / 60;                  } else if(m3 < 180) {                      color_shift[i] = m2;                  } else if(m3 < 240) {                      color_shift[i] = m1 + (m2 - m1) * (240 - m3) / 60;                  } else {                      color_shift[i] = m1;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for(; i < 3; i++) {                  m3 = hue_shift[i];                    if(m3 > 360) {                      m3 = Modula(m3' 360);                  } else if(m3 < 0) {                      m3 = 360 - Modula(Math.Abs(m3)' 360);                  }                    if(m3 < 60) {                      color_shift[i] = m1 + (m2 - m1) * m3 / 60;                  } else if(m3 < 180) {                      color_shift[i] = m2;                  } else if(m3 < 240) {                      color_shift[i] = m1 + (m2 - m1) * (240 - m3) / 60;                  } else {                      color_shift[i] = m1;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for(; i < 3; i++) {                  m3 = hue_shift[i];                    if(m3 > 360) {                      m3 = Modula(m3' 360);                  } else if(m3 < 0) {                      m3 = 360 - Modula(Math.Abs(m3)' 360);                  }                    if(m3 < 60) {                      color_shift[i] = m1 + (m2 - m1) * m3 / 60;                  } else if(m3 < 180) {                      color_shift[i] = m2;                  } else if(m3 < 240) {                      color_shift[i] = m1 + (m2 - m1) * (240 - m3) / 60;                  } else {                      color_shift[i] = m1;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for(; i < 3; i++) {                  m3 = hue_shift[i];                    if(m3 > 360) {                      m3 = Modula(m3' 360);                  } else if(m3 < 0) {                      m3 = 360 - Modula(Math.Abs(m3)' 360);                  }                    if(m3 < 60) {                      color_shift[i] = m1 + (m2 - m1) * m3 / 60;                  } else if(m3 < 180) {                      color_shift[i] = m2;                  } else if(m3 < 240) {                      color_shift[i] = m1 + (m2 - m1) * (240 - m3) / 60;                  } else {                      color_shift[i] = m1;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for(; i < 3; i++) {                  m3 = hue_shift[i];                    if(m3 > 360) {                      m3 = Modula(m3' 360);                  } else if(m3 < 0) {                      m3 = 360 - Modula(Math.Abs(m3)' 360);                  }                    if(m3 < 60) {                      color_shift[i] = m1 + (m2 - m1) * m3 / 60;                  } else if(m3 < 180) {                      color_shift[i] = m2;                  } else if(m3 < 240) {                      color_shift[i] = m1 + (m2 - m1) * (240 - m3) / 60;                  } else {                      color_shift[i] = m1;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for(; i < 3; i++) {                  m3 = hue_shift[i];                    if(m3 > 360) {                      m3 = Modula(m3' 360);                  } else if(m3 < 0) {                      m3 = 360 - Modula(Math.Abs(m3)' 360);                  }                    if(m3 < 60) {                      color_shift[i] = m1 + (m2 - m1) * m3 / 60;                  } else if(m3 < 180) {                      color_shift[i] = m2;                  } else if(m3 < 240) {                      color_shift[i] = m1 + (m2 - m1) * (240 - m3) / 60;                  } else {                      color_shift[i] = m1;                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: return new Cairo.Color(color_shift[0]' color_shift[1]' color_shift[2]);
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: if (withAlpha) {                  return String.Format("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)'                      (byte)(color.B * 255)' (byte)(color.A * 255));              } else {                  return String.Format("#{0:x2}{1:x2}{2:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)'                      (byte)(color.B * 255));              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: if (withAlpha) {                  return String.Format("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)'                      (byte)(color.B * 255)' (byte)(color.A * 255));              } else {                  return String.Format("#{0:x2}{1:x2}{2:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)'                      (byte)(color.B * 255));              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: if (withAlpha) {                  return String.Format("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)'                      (byte)(color.B * 255)' (byte)(color.A * 255));              } else {                  return String.Format("#{0:x2}{1:x2}{2:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)'                      (byte)(color.B * 255));              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: if (withAlpha) {                  return String.Format("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)'                      (byte)(color.B * 255)' (byte)(color.A * 255));              } else {                  return String.Format("#{0:x2}{1:x2}{2:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)'                      (byte)(color.B * 255));              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: if (withAlpha) {                  return String.Format("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)'                      (byte)(color.B * 255)' (byte)(color.A * 255));              } else {                  return String.Format("#{0:x2}{1:x2}{2:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)'                      (byte)(color.B * 255));              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: if (withAlpha) {                  return String.Format("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)'                      (byte)(color.B * 255)' (byte)(color.A * 255));              } else {                  return String.Format("#{0:x2}{1:x2}{2:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)'                      (byte)(color.B * 255));              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: if (withAlpha) {                  return String.Format("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)'                      (byte)(color.B * 255)' (byte)(color.A * 255));              } else {                  return String.Format("#{0:x2}{1:x2}{2:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)'                      (byte)(color.B * 255));              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if(topBottomFallsThrough && corners == CairoCorners.None) {                  cr.MoveTo(x' y - r);                  cr.LineTo(x' y + h + r);                  cr.MoveTo(x + w' y - r);                  cr.LineTo(x + w' y + h + r);                  return;              } else if(r < 0.0001 || corners == CairoCorners.None) {                  cr.Rectangle(x' y' w' h);                  return;              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if((corners & (CairoCorners.TopLeft | CairoCorners.TopRight)) == 0 && topBottomFallsThrough) {                  y -= r;                  h += r;                  cr.MoveTo(x + w' y);              } else {                  if((corners & CairoCorners.TopLeft) != 0) {                      cr.MoveTo(x + r' y);                  } else {                      cr.MoveTo(x' y);                  }                    if((corners & CairoCorners.TopRight) != 0) {                      cr.Arc(x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);                  } else {                      cr.LineTo(x + w' y);                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if((corners & (CairoCorners.TopLeft | CairoCorners.TopRight)) == 0 && topBottomFallsThrough) {                  y -= r;                  h += r;                  cr.MoveTo(x + w' y);              } else {                  if((corners & CairoCorners.TopLeft) != 0) {                      cr.MoveTo(x + r' y);                  } else {                      cr.MoveTo(x' y);                  }                    if((corners & CairoCorners.TopRight) != 0) {                      cr.Arc(x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);                  } else {                      cr.LineTo(x + w' y);                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if((corners & (CairoCorners.BottomLeft | CairoCorners.BottomRight)) == 0 && topBottomFallsThrough) {                  h += r;                  cr.LineTo(x + w' y + h);                  cr.MoveTo(x' y + h);                  cr.LineTo(x' y + r);                  cr.Arc(x + r' y + r' r' Math.PI' Math.PI * 1.5);              } else {                  if((corners & CairoCorners.BottomRight) != 0) {                      cr.Arc(x + w - r' y + h - r' r' 0' Math.PI * 0.5);                  } else {                      cr.LineTo(x + w' y + h);                  }                    if((corners & CairoCorners.BottomLeft) != 0) {                      cr.Arc(x + r' y + h - r' r' Math.PI * 0.5' Math.PI);                  } else {                      cr.LineTo(x' y + h);                  }                    if((corners & CairoCorners.TopLeft) != 0) {                      cr.Arc(x + r' y + r' r' Math.PI' Math.PI * 1.5);                  } else {                      cr.LineTo(x' y);                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if((corners & (CairoCorners.BottomLeft | CairoCorners.BottomRight)) == 0 && topBottomFallsThrough) {                  h += r;                  cr.LineTo(x + w' y + h);                  cr.MoveTo(x' y + h);                  cr.LineTo(x' y + r);                  cr.Arc(x + r' y + r' r' Math.PI' Math.PI * 1.5);              } else {                  if((corners & CairoCorners.BottomRight) != 0) {                      cr.Arc(x + w - r' y + h - r' r' 0' Math.PI * 0.5);                  } else {                      cr.LineTo(x + w' y + h);                  }                    if((corners & CairoCorners.BottomLeft) != 0) {                      cr.Arc(x + r' y + h - r' r' Math.PI * 0.5' Math.PI);                  } else {                      cr.LineTo(x' y + h);                  }                    if((corners & CairoCorners.TopLeft) != 0) {                      cr.Arc(x + r' y + r' r' Math.PI' Math.PI * 1.5);                  } else {                      cr.LineTo(x' y);                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if((corners & (CairoCorners.BottomLeft | CairoCorners.BottomRight)) == 0 && topBottomFallsThrough) {                  h += r;                  cr.LineTo(x + w' y + h);                  cr.MoveTo(x' y + h);                  cr.LineTo(x' y + r);                  cr.Arc(x + r' y + r' r' Math.PI' Math.PI * 1.5);              } else {                  if((corners & CairoCorners.BottomRight) != 0) {                      cr.Arc(x + w - r' y + h - r' r' 0' Math.PI * 0.5);                  } else {                      cr.LineTo(x + w' y + h);                  }                    if((corners & CairoCorners.BottomLeft) != 0) {                      cr.Arc(x + r' y + h - r' r' Math.PI * 0.5' Math.PI);                  } else {                      cr.LineTo(x' y + h);                  }                    if((corners & CairoCorners.TopLeft) != 0) {                      cr.Arc(x + r' y + r' r' Math.PI' Math.PI * 1.5);                  } else {                      cr.LineTo(x' y);                  }              }
Magic Number,Hyena.Gui,CairoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if((corners & (CairoCorners.BottomLeft | CairoCorners.BottomRight)) == 0 && topBottomFallsThrough) {                  h += r;                  cr.LineTo(x + w' y + h);                  cr.MoveTo(x' y + h);                  cr.LineTo(x' y + r);                  cr.Arc(x + r' y + r' r' Math.PI' Math.PI * 1.5);              } else {                  if((corners & CairoCorners.BottomRight) != 0) {                      cr.Arc(x + w - r' y + h - r' r' 0' Math.PI * 0.5);                  } else {                      cr.LineTo(x + w' y + h);                  }                    if((corners & CairoCorners.BottomLeft) != 0) {                      cr.Arc(x + r' y + h - r' r' Math.PI * 0.5' Math.PI);                  } else {                      cr.LineTo(x' y + h);                  }                    if((corners & CairoCorners.TopLeft) != 0) {                      cr.Arc(x + r' y + r' r' Math.PI' Math.PI * 1.5);                  } else {                      cr.LineTo(x' y);                  }              }
Magic Number,Hyena.Gui,GtkUtilities,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\GtkUtilities.cs,ColorBlend,The following statement contains a magic number: double blend = 0.5;
Magic Number,Hyena.Gui,GtkUtilities,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\GtkUtilities.cs,ColorBlend,The following statement contains a magic number: int aR = a.Red >> 8;
Magic Number,Hyena.Gui,GtkUtilities,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\GtkUtilities.cs,ColorBlend,The following statement contains a magic number: int aG = a.Green >> 8;
Magic Number,Hyena.Gui,GtkUtilities,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\GtkUtilities.cs,ColorBlend,The following statement contains a magic number: int aB = a.Blue >> 8;
Magic Number,Hyena.Gui,GtkUtilities,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\GtkUtilities.cs,ColorBlend,The following statement contains a magic number: int bR = b.Red >> 8;
Magic Number,Hyena.Gui,GtkUtilities,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\GtkUtilities.cs,ColorBlend,The following statement contains a magic number: int bG = b.Green >> 8;
Magic Number,Hyena.Gui,GtkUtilities,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\GtkUtilities.cs,ColorBlend,The following statement contains a magic number: int bB = b.Blue >> 8;
Magic Number,Hyena.Gui,ShadingTestWindow,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\ShadingTestWindow.cs,ShadingTestWindow,The following statement contains a magic number: SetSizeRequest (512' 512);
Magic Number,Hyena.Gui,ShadingTestWindow,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\ShadingTestWindow.cs,ShadingTestWindow,The following statement contains a magic number: SetSizeRequest (512' 512);
Magic Number,Hyena.Gui,ShadingTestWindow,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\ShadingTestWindow.cs,OnExposeEvent,The following statement contains a magic number: for (int xi = 0' i = 0; xi < steps; xi++) {                  for (int yi = 0; yi < steps; yi++' i++) {                      double bg_b = (double)(i / 255.0);                      double fg_b = 1.0 - bg_b;                        double x = Allocation.X + xi * step_width;                      double y = Allocation.Y + yi * step_height;                        cr.Rectangle (x' y' step_width' step_height);  		    cr.SetSourceColor (CairoExtensions.ColorFromHsb (h' s' bg_b));                      cr.Fill ();                        int tw' th;                      Pango.Layout layout = new Pango.Layout (PangoContext);                      layout.SetText (((int)(bg_b * 255.0)).ToString ());                      layout.GetPixelSize (out tw' out th);                        cr.Translate (0.5' 0.5);                      cr.MoveTo (x + (step_width - tw) / 2.0' y + (step_height - th) / 2.0);  		    cr.SetSourceColor (CairoExtensions.ColorFromHsb (h' s' fg_b));                      PangoCairoHelper.ShowLayout (cr' layout);                      cr.Translate (-0.5' -0.5);                  }              }
Magic Number,Hyena.Gui,ShadingTestWindow,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\ShadingTestWindow.cs,OnExposeEvent,The following statement contains a magic number: for (int xi = 0' i = 0; xi < steps; xi++) {                  for (int yi = 0; yi < steps; yi++' i++) {                      double bg_b = (double)(i / 255.0);                      double fg_b = 1.0 - bg_b;                        double x = Allocation.X + xi * step_width;                      double y = Allocation.Y + yi * step_height;                        cr.Rectangle (x' y' step_width' step_height);  		    cr.SetSourceColor (CairoExtensions.ColorFromHsb (h' s' bg_b));                      cr.Fill ();                        int tw' th;                      Pango.Layout layout = new Pango.Layout (PangoContext);                      layout.SetText (((int)(bg_b * 255.0)).ToString ());                      layout.GetPixelSize (out tw' out th);                        cr.Translate (0.5' 0.5);                      cr.MoveTo (x + (step_width - tw) / 2.0' y + (step_height - th) / 2.0);  		    cr.SetSourceColor (CairoExtensions.ColorFromHsb (h' s' fg_b));                      PangoCairoHelper.ShowLayout (cr' layout);                      cr.Translate (-0.5' -0.5);                  }              }
Magic Number,Hyena.Gui,ShadingTestWindow,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\ShadingTestWindow.cs,OnExposeEvent,The following statement contains a magic number: for (int xi = 0' i = 0; xi < steps; xi++) {                  for (int yi = 0; yi < steps; yi++' i++) {                      double bg_b = (double)(i / 255.0);                      double fg_b = 1.0 - bg_b;                        double x = Allocation.X + xi * step_width;                      double y = Allocation.Y + yi * step_height;                        cr.Rectangle (x' y' step_width' step_height);  		    cr.SetSourceColor (CairoExtensions.ColorFromHsb (h' s' bg_b));                      cr.Fill ();                        int tw' th;                      Pango.Layout layout = new Pango.Layout (PangoContext);                      layout.SetText (((int)(bg_b * 255.0)).ToString ());                      layout.GetPixelSize (out tw' out th);                        cr.Translate (0.5' 0.5);                      cr.MoveTo (x + (step_width - tw) / 2.0' y + (step_height - th) / 2.0);  		    cr.SetSourceColor (CairoExtensions.ColorFromHsb (h' s' fg_b));                      PangoCairoHelper.ShowLayout (cr' layout);                      cr.Translate (-0.5' -0.5);                  }              }
Magic Number,Hyena.Gui,ShadingTestWindow,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\ShadingTestWindow.cs,OnExposeEvent,The following statement contains a magic number: for (int xi = 0' i = 0; xi < steps; xi++) {                  for (int yi = 0; yi < steps; yi++' i++) {                      double bg_b = (double)(i / 255.0);                      double fg_b = 1.0 - bg_b;                        double x = Allocation.X + xi * step_width;                      double y = Allocation.Y + yi * step_height;                        cr.Rectangle (x' y' step_width' step_height);  		    cr.SetSourceColor (CairoExtensions.ColorFromHsb (h' s' bg_b));                      cr.Fill ();                        int tw' th;                      Pango.Layout layout = new Pango.Layout (PangoContext);                      layout.SetText (((int)(bg_b * 255.0)).ToString ());                      layout.GetPixelSize (out tw' out th);                        cr.Translate (0.5' 0.5);                      cr.MoveTo (x + (step_width - tw) / 2.0' y + (step_height - th) / 2.0);  		    cr.SetSourceColor (CairoExtensions.ColorFromHsb (h' s' fg_b));                      PangoCairoHelper.ShowLayout (cr' layout);                      cr.Translate (-0.5' -0.5);                  }              }
Magic Number,Hyena.Gui,ShadingTestWindow,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\ShadingTestWindow.cs,OnExposeEvent,The following statement contains a magic number: for (int xi = 0' i = 0; xi < steps; xi++) {                  for (int yi = 0; yi < steps; yi++' i++) {                      double bg_b = (double)(i / 255.0);                      double fg_b = 1.0 - bg_b;                        double x = Allocation.X + xi * step_width;                      double y = Allocation.Y + yi * step_height;                        cr.Rectangle (x' y' step_width' step_height);  		    cr.SetSourceColor (CairoExtensions.ColorFromHsb (h' s' bg_b));                      cr.Fill ();                        int tw' th;                      Pango.Layout layout = new Pango.Layout (PangoContext);                      layout.SetText (((int)(bg_b * 255.0)).ToString ());                      layout.GetPixelSize (out tw' out th);                        cr.Translate (0.5' 0.5);                      cr.MoveTo (x + (step_width - tw) / 2.0' y + (step_height - th) / 2.0);  		    cr.SetSourceColor (CairoExtensions.ColorFromHsb (h' s' fg_b));                      PangoCairoHelper.ShowLayout (cr' layout);                      cr.Translate (-0.5' -0.5);                  }              }
Magic Number,Hyena.Gui,ShadingTestWindow,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\ShadingTestWindow.cs,OnExposeEvent,The following statement contains a magic number: for (int xi = 0' i = 0; xi < steps; xi++) {                  for (int yi = 0; yi < steps; yi++' i++) {                      double bg_b = (double)(i / 255.0);                      double fg_b = 1.0 - bg_b;                        double x = Allocation.X + xi * step_width;                      double y = Allocation.Y + yi * step_height;                        cr.Rectangle (x' y' step_width' step_height);  		    cr.SetSourceColor (CairoExtensions.ColorFromHsb (h' s' bg_b));                      cr.Fill ();                        int tw' th;                      Pango.Layout layout = new Pango.Layout (PangoContext);                      layout.SetText (((int)(bg_b * 255.0)).ToString ());                      layout.GetPixelSize (out tw' out th);                        cr.Translate (0.5' 0.5);                      cr.MoveTo (x + (step_width - tw) / 2.0' y + (step_height - th) / 2.0);  		    cr.SetSourceColor (CairoExtensions.ColorFromHsb (h' s' fg_b));                      PangoCairoHelper.ShowLayout (cr' layout);                      cr.Translate (-0.5' -0.5);                  }              }
Magic Number,Hyena.Gui,ShadingTestWindow,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\ShadingTestWindow.cs,OnExposeEvent,The following statement contains a magic number: for (int xi = 0' i = 0; xi < steps; xi++) {                  for (int yi = 0; yi < steps; yi++' i++) {                      double bg_b = (double)(i / 255.0);                      double fg_b = 1.0 - bg_b;                        double x = Allocation.X + xi * step_width;                      double y = Allocation.Y + yi * step_height;                        cr.Rectangle (x' y' step_width' step_height);  		    cr.SetSourceColor (CairoExtensions.ColorFromHsb (h' s' bg_b));                      cr.Fill ();                        int tw' th;                      Pango.Layout layout = new Pango.Layout (PangoContext);                      layout.SetText (((int)(bg_b * 255.0)).ToString ());                      layout.GetPixelSize (out tw' out th);                        cr.Translate (0.5' 0.5);                      cr.MoveTo (x + (step_width - tw) / 2.0' y + (step_height - th) / 2.0);  		    cr.SetSourceColor (CairoExtensions.ColorFromHsb (h' s' fg_b));                      PangoCairoHelper.ShowLayout (cr' layout);                      cr.Translate (-0.5' -0.5);                  }              }
Magic Number,Hyena.Gui,ShadingTestWindow,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\ShadingTestWindow.cs,OnExposeEvent,The following statement contains a magic number: for (int xi = 0' i = 0; xi < steps; xi++) {                  for (int yi = 0; yi < steps; yi++' i++) {                      double bg_b = (double)(i / 255.0);                      double fg_b = 1.0 - bg_b;                        double x = Allocation.X + xi * step_width;                      double y = Allocation.Y + yi * step_height;                        cr.Rectangle (x' y' step_width' step_height);  		    cr.SetSourceColor (CairoExtensions.ColorFromHsb (h' s' bg_b));                      cr.Fill ();                        int tw' th;                      Pango.Layout layout = new Pango.Layout (PangoContext);                      layout.SetText (((int)(bg_b * 255.0)).ToString ());                      layout.GetPixelSize (out tw' out th);                        cr.Translate (0.5' 0.5);                      cr.MoveTo (x + (step_width - tw) / 2.0' y + (step_height - th) / 2.0);  		    cr.SetSourceColor (CairoExtensions.ColorFromHsb (h' s' fg_b));                      PangoCairoHelper.ShowLayout (cr' layout);                      cr.Translate (-0.5' -0.5);                  }              }
Magic Number,Hyena.Gui,CompositeUtils,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CompositeUtils.cs,GetRgbaColormap,The following statement contains a magic number: try {                  IntPtr raw_ret = gdk_screen_get_rgba_colormap (screen.Handle);                  Gdk.Colormap ret = GLib.Object.GetObject(raw_ret) as Gdk.Colormap;                  return ret;              } catch {                  Gdk.Visual visual = Gdk.Visual.GetBestWithDepth (32);                  if (visual != null) {                      Gdk.Colormap cmap = new Gdk.Colormap (visual' false);                      return cmap;                  }              }
Magic Number,Hyena.Gui,CompositeUtils,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CompositeUtils.cs,GetRgbaVisual,The following statement contains a magic number: try {                  IntPtr raw_ret = gdk_screen_get_rgba_visual (screen.Handle);                  Gdk.Visual ret = GLib.Object.GetObject (raw_ret) as Gdk.Visual;                  return ret;              } catch {                  Gdk.Visual visual = Gdk.Visual.GetBestWithDepth (32);                  if (visual != null) {                      return visual;                  }              }
Magic Number,Hyena.Gui,CompositeUtils,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CompositeUtils.cs,ChangeProperty,The following statement contains a magic number: gdk_property_change (win.Handle' property.Handle' type.Handle' 32' (int)mode'  data' data.Length * 4);
Magic Number,Hyena.Gui,CompositeUtils,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CompositeUtils.cs,ChangeProperty,The following statement contains a magic number: gdk_property_change (win.Handle' property.Handle' type.Handle' 32' (int)mode'  data' data.Length * 4);
Magic Number,Hyena.Gui,CompositeUtils,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CompositeUtils.cs,ChangeProperty,The following statement contains a magic number: gdk_property_change (win.Handle' property.Handle' type.Handle' 8' (int)mode'  data' data.Length);
Magic Number,Hyena.Gui,TestModuleRunner,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\TestModuleRunner.cs,TestModuleRunner,The following statement contains a magic number: SetSizeRequest (-1' 300);
Magic Number,Hyena.Gui,TestModuleRunner,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\TestModuleRunner.cs,TestModuleRunner,The following statement contains a magic number: Move (100' 100);
Magic Number,Hyena.Gui,TestModuleRunner,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\TestModuleRunner.cs,TestModuleRunner,The following statement contains a magic number: Move (100' 100);
Magic Number,Hyena.Gui,RatingRenderer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\RatingRenderer.cs,Render,The following statement contains a magic number: cr.Translate (0.5' 0.5);
Magic Number,Hyena.Gui,RatingRenderer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\RatingRenderer.cs,Render,The following statement contains a magic number: cr.Translate (0.5' 0.5);
Magic Number,Hyena.Gui,RatingRenderer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\RatingRenderer.cs,Render,The following statement contains a magic number: for (int i = MinRating + 1' s = isHovering || showEmptyStars ? MaxRating : Value; i <= s; i++' x += Size) {                  bool fill = i <= Value && Value > MinRating;                  bool hover_fill = i <= hoverValue && hoverValue > MinRating;                  double scale = fill || hover_fill ? Size : Size - 2;                  double ofs = fill || hover_fill ? 0 : 1;                    for (int p = 0' n = star_plot.GetLength (0); p < n; p++) {                      double px = x + ofs + star_plot[p' 0] * scale;                      double py = y + ofs + star_plot[p' 1] * scale;                      if (p == 0) {                          cr.MoveTo (px' py);                      } else {                          cr.LineTo (px' py);                      }                  }                  cr.ClosePath ();                    if (fill || hover_fill) {                      if (!isHovering || hoverValue >= Value) {  			cr.SetSourceColor (fill ? fill_color : hover_fill_color);                      } else {  			cr.SetSourceColor (hover_fill ? fill_color : hover_fill_color);                      }                      cr.Fill ();                  } else {  			cr.SetSourceColor (stroke_color);                      cr.Stroke ();                  }              }
Magic Number,Hyena.Gui,RatingRenderer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\RatingRenderer.cs,ComputePosition,The following statement contains a magic number: double cell_width = area.Width - 2 * Xpad;
Magic Number,Hyena.Gui,RatingRenderer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\RatingRenderer.cs,ComputePosition,The following statement contains a magic number: double cell_height = area.Height - 2 * Ypad;
Magic Number,Hyena.Gui,RatingRenderer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\RatingRenderer.cs,ComputePosition,The following statement contains a magic number: x = area.X + Xpad + (cell_width - stars_width) / 2.0;
Magic Number,Hyena.Gui,RatingRenderer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\RatingRenderer.cs,ComputePosition,The following statement contains a magic number: y = area.Y + Ypad + (cell_height - stars_height) / 2.0;
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,lab_to_rgb,The following statement contains a magic number: if (tmp < 0.0f)                  R = 0;              else if (tmp > 65535.0f)                  R = 65535;              else                  R = (ushort) tmp;
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,lab_to_rgb,The following statement contains a magic number: if (tmp < 0.0f)                  G = 0;              else if (tmp > 65535.0f)                  G = 65535;              else                  G = (ushort) tmp;
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,lab_to_rgb,The following statement contains a magic number: if (tmp < 0.0f)                  B = 0;              else if (tmp > 65535.0f)                  B = 65535;              else                  B = (ushort) tmp;
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: float['] points = new float[8'3];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: float['] points = new float[8'3];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: rgb_to_lab((ushort)(background.R * 255)' (ushort)(background.G * 255)'                  (ushort)(background.B * 255)' out L' out a' out b);
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: rgb_to_lab((ushort)(background.R * 255)' (ushort)(background.G * 255)'                  (ushort)(background.B * 255)' out L' out a' out b);
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: rgb_to_lab((ushort)(background.R * 255)' (ushort)(background.G * 255)'                  (ushort)(background.B * 255)' out L' out a' out b);
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[0'1] = color_regions[(int)color'2];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[0'2] = color_regions[(int)color'4];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[0'2] = color_regions[(int)color'4];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[1'1] = color_regions[(int)color'2];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[1'2] = color_regions[(int)color'5];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[1'2] = color_regions[(int)color'5];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[2'0] = color_regions[(int)color'0];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[2'1] = color_regions[(int)color'3];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[2'1] = color_regions[(int)color'3];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[2'2] = color_regions[(int)color'4];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[2'2] = color_regions[(int)color'4];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[2'2] = color_regions[(int)color'4];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[3'0] = color_regions[(int)color'0];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[3'1] = color_regions[(int)color'3];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[3'1] = color_regions[(int)color'3];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[3'2] = color_regions[(int)color'5];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[3'2] = color_regions[(int)color'5];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[3'2] = color_regions[(int)color'5];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[4'0] = color_regions[(int)color'1];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[4'1] = color_regions[(int)color'2];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[4'1] = color_regions[(int)color'2];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[4'2] = color_regions[(int)color'4];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[4'2] = color_regions[(int)color'4];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[4'2] = color_regions[(int)color'4];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[5'0] = color_regions[(int)color'1];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[5'1] = color_regions[(int)color'2];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[5'1] = color_regions[(int)color'2];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[5'2] = color_regions[(int)color'5];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[5'2] = color_regions[(int)color'5];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[5'2] = color_regions[(int)color'5];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[6'0] = color_regions[(int)color'1];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[6'1] = color_regions[(int)color'3];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[6'1] = color_regions[(int)color'3];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[6'2] = color_regions[(int)color'4];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[6'2] = color_regions[(int)color'4];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[6'2] = color_regions[(int)color'4];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[7'0] = color_regions[(int)color'1];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[7'1] = color_regions[(int)color'3];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[7'1] = color_regions[(int)color'3];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[7'2] = color_regions[(int)color'5];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[7'2] = color_regions[(int)color'5];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points[7'2] = color_regions[(int)color'5];
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: for (i = 0; i < 8; i++) {                  float dist = lab_distance(L' a' b' points[i'0]' points[i'1]' points[i'2]);                    if (dist > max_dist) {                      max_dist = dist;                      max_color = i;                  }              }
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: for (i = 0; i < 8; i++) {                  float dist = lab_distance(L' a' b' points[i'0]' points[i'1]' points[i'2]);                    if (dist > max_dist) {                      max_dist = dist;                      max_color = i;                  }              }
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: cd = (float) Math.Sqrt (Math.Pow (Math.Abs (a - points[max_color'1])' 2.0f) + Math.Pow (Math.Abs (b - points[max_color'2])' 2.0f));
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: if ((ld < 10.0f) && (cd < 60.0f)) {                  float dL' da' db;                    dL = points[max_color'0] - L;                  da = points[max_color'1] - a;                  db = points[max_color'2] - b;                  points[max_color'0] = L + (dL * 4.0f);                  points[max_color'1] = a + (da * 1.5f);                  points[max_color'2] = b + (db * 1.5f);              }
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: if ((ld < 10.0f) && (cd < 60.0f)) {                  float dL' da' db;                    dL = points[max_color'0] - L;                  da = points[max_color'1] - a;                  db = points[max_color'2] - b;                  points[max_color'0] = L + (dL * 4.0f);                  points[max_color'1] = a + (da * 1.5f);                  points[max_color'2] = b + (db * 1.5f);              }
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: lab_to_rgb(points[max_color'0]' points[max_color'1]' points[max_color'2]' out red' out green' out blue);
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: return new Color (red / 255.0' green / 255.0' blue / 255.0);
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: return new Color (red / 255.0' green / 255.0' blue / 255.0);
Magic Number,Hyena.Gui,Contrast,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: return new Color (red / 255.0' green / 255.0' blue / 255.0);
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,CreateSurface,The following statement contains a magic number: for (int i = height; i > 0; i--) {                  byte *p = gdk_pixels;                  byte *q = cairo_pixels;                    if (channels == 3) {                      byte *end = p + 3 * width;                      while (p < end) {                          if (is_le) {                              q[0] = p[2];                              q[1] = p[1];                              q[2] = p[0];                          } else {                              q[1] = p[0];                              q[2] = p[1];                              q[3] = p[2];                          }                            p += 3;                          q += 4;                      }                  } else {                      byte *end = p + 4 * width;                      while (p < end) {                          if (is_le) {                              q[0] = Mult (p[2]' p[3]);                              q[1] = Mult (p[1]' p[3]);                              q[2] = Mult (p[0]' p[3]);                              q[3] = p[3];                          } else {                              q[0] = p[3];                              q[1] = Mult (p[0]' p[3]);                              q[2] = Mult (p[1]' p[3]);                              q[3] = Mult (p[2]' p[3]);                          }                            p += 4;                          q += 4;                      }                  }                    gdk_pixels += gdk_rowstride;                  cairo_pixels += 4 * width;              }
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,Mult,The following statement contains a magic number: return (byte)(((t >> 8) + t) >> 8);
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,Mult,The following statement contains a magic number: return (byte)(((t >> 8) + t) >> 8);
Magic Number,Hyena.Gui,PixbufImageSurface,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PixbufImageSurface.cs,SetDestroyFunc,The following statement contains a magic number: try {                  Status status = cairo_surface_set_user_data (Handle' ref user_data_key' data' destroy_func);                  if (status != Status.Success) {                      throw new ApplicationException (String.Format (                          "cairo_surface_set_user_data returned {0}"' status));                  }              } catch (Exception e) {                  Console.Error.WriteLine ("WARNING: Image data will be leaked! ({0} bytes)"' Width * Height * 4);                  Console.Error.WriteLine (e);              }
Magic Number,Hyena.Gui,DragDropList<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\DragDropList.cs,AssignToSelection,The following statement contains a magic number: selectionData.Set(target' 8' data' data.Length);
Magic Number,Hyena.Gui,ActionManager,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\ActionManager.cs,FindAction,The following statement contains a magic number: if (parts == null || parts.Length < 2) {                  return null;              }
Magic Number,Hyena.Gui,PangoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PangoExtensions.cs,MeasureTextHeight,The following statement contains a magic number: using (var metrics = context.GetMetrics (description' language)) {                  return ((int)(metrics.Ascent + metrics.Descent) + 512) >> 10; // PANGO_PIXELS (d)              }
Magic Number,Hyena.Gui,PangoExtensions,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\PangoExtensions.cs,MeasureTextHeight,The following statement contains a magic number: using (var metrics = context.GetMetrics (description' language)) {                  return ((int)(metrics.Ascent + metrics.Descent) + 512) >> 10; // PANGO_PIXELS (d)              }
Magic Number,Hyena.Gui,CairoDamageDebugger,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoDamageDebugger.cs,RenderDamage,The following statement contains a magic number: cr.Rectangle (x + 0.5' y + 0.5' w - 1' h - 1);
Magic Number,Hyena.Gui,CairoDamageDebugger,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\CairoDamageDebugger.cs,RenderDamage,The following statement contains a magic number: cr.Rectangle (x + 0.5' y + 0.5' w - 1' h - 1);
Magic Number,Hyena.Gui.Dialogs,ExceptionDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Dialogs\ExceptionDialog.cs,ExceptionDialog,The following statement contains a magic number: BorderWidth = 5;
Magic Number,Hyena.Gui.Dialogs,ExceptionDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Dialogs\ExceptionDialog.cs,ExceptionDialog,The following statement contains a magic number: VBox.Spacing = 12;
Magic Number,Hyena.Gui.Dialogs,ExceptionDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Dialogs\ExceptionDialog.cs,ExceptionDialog,The following statement contains a magic number: HBox hbox = new HBox(false' 12);
Magic Number,Hyena.Gui.Dialogs,ExceptionDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Dialogs\ExceptionDialog.cs,ExceptionDialog,The following statement contains a magic number: hbox.BorderWidth = 5;
Magic Number,Hyena.Gui.Dialogs,ExceptionDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Dialogs\ExceptionDialog.cs,ExceptionDialog,The following statement contains a magic number: label_vbox.Spacing = 12;
Magic Number,Hyena.Gui.Dialogs,ExceptionDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Dialogs\ExceptionDialog.cs,ExceptionDialog,The following statement contains a magic number: scroll.SetSizeRequest(450' 250);
Magic Number,Hyena.Gui.Dialogs,ExceptionDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Dialogs\ExceptionDialog.cs,ExceptionDialog,The following statement contains a magic number: scroll.SetSizeRequest(450' 250);
Magic Number,Hyena.Gui.Dialogs,VersionInformationDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Dialogs\VersionInformationDialog.cs,VersionInformationDialog,The following statement contains a magic number: BorderWidth = 10;
Magic Number,Hyena.Gui.Dialogs,VersionInformationDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Dialogs\VersionInformationDialog.cs,VersionInformationDialog,The following statement contains a magic number: scroll.SetSizeRequest(420' 200);
Magic Number,Hyena.Gui.Dialogs,VersionInformationDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Dialogs\VersionInformationDialog.cs,VersionInformationDialog,The following statement contains a magic number: scroll.SetSizeRequest(420' 200);
Magic Number,Hyena.Gui.Dialogs,VersionInformationDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Dialogs\VersionInformationDialog.cs,VersionInformationDialog,The following statement contains a magic number: VBox.Spacing = 5;
Magic Number,Hyena.Gui.Dialogs,VersionInformationDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Dialogs\VersionInformationDialog.cs,OnCursorChanged,The following statement contains a magic number: object path = version_store.GetValue(iter' 2);
Magic Number,Hyena.Widgets,RoundedFrame,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RoundedFrame.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width += ((int)BorderWidth + frame_width) * 2;
Magic Number,Hyena.Widgets,RoundedFrame,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RoundedFrame.cs,OnSizeRequested,The following statement contains a magic number: requisition.Height += ((int)BorderWidth + frame_width) * 2;
Magic Number,Hyena.Widgets,RoundedFrame,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RoundedFrame.cs,OnSizeAllocated,The following statement contains a magic number: child_allocation.Width = (int)Math.Max (1' Allocation.Width - child_allocation.X * 2);
Magic Number,Hyena.Widgets,RoundedFrame,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RoundedFrame.cs,DrawFrame,The following statement contains a magic number: int width = child_allocation.Width + 2 * frame_width;
Magic Number,Hyena.Widgets,RoundedFrame,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RoundedFrame.cs,DrawFrame,The following statement contains a magic number: int height = child_allocation.Height + 2 * frame_width;
Magic Number,Hyena.Widgets,MessageBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\MessageBar.cs,MessageBar,The following statement contains a magic number: shell_box.Spacing = 10;
Magic Number,Hyena.Widgets,MessageBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\MessageBar.cs,MessageBar,The following statement contains a magic number: box.Spacing = 10;
Magic Number,Hyena.Widgets,MessageBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\MessageBar.cs,MessageBar,The following statement contains a magic number: try {                  image.Pixbuf = Gtk.IconTheme.Default.LoadIcon ("process-working"' 22' IconLookupFlags.NoSvg);                  image.FrameHeight = 22;                  image.FrameWidth = 22;                  Spinning = false;                  image.Load ();              } catch {              }
Magic Number,Hyena.Widgets,MessageBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\MessageBar.cs,MessageBar,The following statement contains a magic number: try {                  image.Pixbuf = Gtk.IconTheme.Default.LoadIcon ("process-working"' 22' IconLookupFlags.NoSvg);                  image.FrameHeight = 22;                  image.FrameWidth = 22;                  Spinning = false;                  image.Load ();              } catch {              }
Magic Number,Hyena.Widgets,MessageBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\MessageBar.cs,MessageBar,The following statement contains a magic number: try {                  image.Pixbuf = Gtk.IconTheme.Default.LoadIcon ("process-working"' 22' IconLookupFlags.NoSvg);                  image.FrameHeight = 22;                  image.FrameWidth = 22;                  Spinning = false;                  image.Load ();              } catch {              }
Magic Number,Hyena.Widgets,MessageBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\MessageBar.cs,MessageBar,The following statement contains a magic number: button_box.Spacing = 3;
Magic Number,Hyena.Widgets,MessageBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\MessageBar.cs,MessageBar,The following statement contains a magic number: BorderWidth = 3;
Magic Number,Hyena.Widgets,AnimatedImage,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\AnimatedImage.cs,OnIteration,The following statement contains a magic number: int index = (int)Math.Round ((double)(frames.Length - 2) * stage.Actor.Percent) + 1;
Magic Number,Hyena.Widgets,AnimatedBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\AnimatedBox.cs,OnSizeAllocated,The following statement contains a magic number: if (horizontal) {                  allocation.X += start_border;                  allocation.Y += (int)BorderWidth;                  allocation.Height -= (int)BorderWidth * 2;              } else {                  allocation.X += (int)BorderWidth;                  allocation.Y += start_border;                  allocation.Width -= (int)BorderWidth * 2;              }
Magic Number,Hyena.Widgets,AnimatedBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\AnimatedBox.cs,OnSizeAllocated,The following statement contains a magic number: if (horizontal) {                  allocation.X += start_border;                  allocation.Y += (int)BorderWidth;                  allocation.Height -= (int)BorderWidth * 2;              } else {                  allocation.X += (int)BorderWidth;                  allocation.Y += start_border;                  allocation.Width -= (int)BorderWidth * 2;              }
Magic Number,Hyena.Widgets,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Widgets,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Widgets,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Widgets,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Widgets,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Widgets,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Widgets,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Widgets,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Widgets,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Widgets,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Widgets,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Widgets,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Widgets,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Widgets,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Widgets,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Widgets,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Widgets,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Widgets,SmoothScrolledWindow,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SmoothScrolledWindow.cs,AccelerateCore,The following statement contains a magic number: return velocity + 8;
Magic Number,Hyena.Widgets,SmoothScrolledWindow,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SmoothScrolledWindow.cs,DecelerateCore,The following statement contains a magic number: return velocity - Math.Max (3' 0.2 * velocity);
Magic Number,Hyena.Widgets,SmoothScrolledWindow,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SmoothScrolledWindow.cs,DecelerateCore,The following statement contains a magic number: return velocity - Math.Max (3' 0.2 * velocity);
Magic Number,Hyena.Widgets,SmoothScrolledWindow,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SmoothScrolledWindow.cs,OnTimeout,The following statement contains a magic number: value = Math.Round (value + Math.Max (velocity' 2) * sign);
Magic Number,Hyena.Widgets,MenuButton,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\MenuButton.cs,Construct,The following statement contains a magic number: if (showArrow) {                  box.PackStart (button_widget' true' true' 0);                  alignment = new Alignment (0f' 0.5f' 0f' 0f);                  arrow = new Arrow (ArrowType.Down' ShadowType.None);                  alignment.Add (arrow);                  box.PackStart (alignment' false' false' 5);                  size_widget = box;                  FocusChain = new Widget[] {toggle_button' box};                  alignment.ShowAll ();                  alignment.NoShowAll = true;              } else {                  toggle_button.Add (button_widget);                  size_widget = toggle_button;              }
Magic Number,Hyena.Widgets,WrapLabel,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\WrapLabel.cs,OnExposeEvent,The following statement contains a magic number: if (evnt.Window == GdkWindow) {                  // Center the text vertically                  int lw' lh;                  layout.GetPixelSize (out lw' out lh);                  int y = Allocation.Y + (Allocation.Height - lh) / 2;                    Gtk.Style.PaintLayout (Style' GdkWindow' State' false'                      evnt.Area' this' null' Allocation.X' y' layout);              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width = 200;
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,OnSizeAllocated,The following statement contains a magic number: int _bar_height = reflect ? (int)Math.Ceiling (bar_height * 1.75) : bar_height;
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,OnSizeAllocated,The following statement contains a magic number: if (show_labels) {                  ComputeLayoutSize ();                  HeightRequest = Math.Max (bar_height + bar_label_spacing + layout_height' _bar_height);                  WidthRequest = layout_width + (2 * h_padding);              } else {                  HeightRequest = _bar_height;                  WidthRequest = bar_height + (2 * h_padding);              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,OnSizeAllocated,The following statement contains a magic number: if (show_labels) {                  ComputeLayoutSize ();                  HeightRequest = Math.Max (bar_height + bar_label_spacing + layout_height' _bar_height);                  WidthRequest = layout_width + (2 * h_padding);              } else {                  HeightRequest = _bar_height;                  WidthRequest = bar_height + (2 * h_padding);              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,ComputeLayoutSize,The following statement contains a magic number: for (int i = 0' n = segments.Count; i < n; i++) {                  int aw' ah' bw' bh;                    layout = CreateAdaptLayout (layout' false' true);                  layout.SetText (FormatSegmentText (segments[i]));                  layout.GetPixelSize (out aw' out ah);                    layout = CreateAdaptLayout (layout' true' false);                  layout.SetText (FormatSegmentValue (segments[i]));                  layout.GetPixelSize (out bw' out bh);                    int w = Math.Max (aw' bw);                  int h = ah + bh;                    segments[i].LayoutWidth = w;                  segments[i].LayoutHeight = Math.Max (h' segment_box_size * 2);                    layout_width += segments[i].LayoutWidth + segment_box_size + segment_box_spacing                      + (i < n - 1 ? segment_label_spacing : 0);                  layout_height = Math.Max (layout_height' segments[i].LayoutHeight);              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,OnExposeEvent,The following statement contains a magic number: cr.Rectangle (0' 0' Allocation.Width - h_padding' Math.Max (2 * bar_height'                  bar_height + bar_label_spacing + layout_height));
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,OnExposeEvent,The following statement contains a magic number: Pattern bar = RenderBar (Allocation.Width - 2 * h_padding' bar_height);
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,OnExposeEvent,The following statement contains a magic number: if (reflect) {                  cr.Save ();                    cr.Rectangle (0' bar_height' Allocation.Width - h_padding' bar_height);                  cr.Clip ();                    Matrix matrix = new Matrix ();                  matrix.InitScale (1' -1);                  matrix.Translate (0' -(2 * bar_height) + 1);                  cr.Transform (matrix);    		cr.SetSource (bar);                    LinearGradient mask = new LinearGradient (0' 0' 0' bar_height);                    mask.AddColorStop (0.25' new Color (0' 0' 0' 0));                  mask.AddColorStop (0.5' new Color (0' 0' 0' 0.125));                  mask.AddColorStop (0.75' new Color (0' 0' 0' 0.4));                  mask.AddColorStop (1.0' new Color (0' 0' 0' 0.7));                    cr.Mask (mask);  		mask.Dispose ();                    cr.Restore ();                    CairoExtensions.PopGroupToSource (cr);                  cr.Paint ();              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,OnExposeEvent,The following statement contains a magic number: if (reflect) {                  cr.Save ();                    cr.Rectangle (0' bar_height' Allocation.Width - h_padding' bar_height);                  cr.Clip ();                    Matrix matrix = new Matrix ();                  matrix.InitScale (1' -1);                  matrix.Translate (0' -(2 * bar_height) + 1);                  cr.Transform (matrix);    		cr.SetSource (bar);                    LinearGradient mask = new LinearGradient (0' 0' 0' bar_height);                    mask.AddColorStop (0.25' new Color (0' 0' 0' 0));                  mask.AddColorStop (0.5' new Color (0' 0' 0' 0.125));                  mask.AddColorStop (0.75' new Color (0' 0' 0' 0.4));                  mask.AddColorStop (1.0' new Color (0' 0' 0' 0.7));                    cr.Mask (mask);  		mask.Dispose ();                    cr.Restore ();                    CairoExtensions.PopGroupToSource (cr);                  cr.Paint ();              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,OnExposeEvent,The following statement contains a magic number: if (reflect) {                  cr.Save ();                    cr.Rectangle (0' bar_height' Allocation.Width - h_padding' bar_height);                  cr.Clip ();                    Matrix matrix = new Matrix ();                  matrix.InitScale (1' -1);                  matrix.Translate (0' -(2 * bar_height) + 1);                  cr.Transform (matrix);    		cr.SetSource (bar);                    LinearGradient mask = new LinearGradient (0' 0' 0' bar_height);                    mask.AddColorStop (0.25' new Color (0' 0' 0' 0));                  mask.AddColorStop (0.5' new Color (0' 0' 0' 0.125));                  mask.AddColorStop (0.75' new Color (0' 0' 0' 0.4));                  mask.AddColorStop (1.0' new Color (0' 0' 0' 0.7));                    cr.Mask (mask);  		mask.Dispose ();                    cr.Restore ();                    CairoExtensions.PopGroupToSource (cr);                  cr.Paint ();              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,OnExposeEvent,The following statement contains a magic number: if (reflect) {                  cr.Save ();                    cr.Rectangle (0' bar_height' Allocation.Width - h_padding' bar_height);                  cr.Clip ();                    Matrix matrix = new Matrix ();                  matrix.InitScale (1' -1);                  matrix.Translate (0' -(2 * bar_height) + 1);                  cr.Transform (matrix);    		cr.SetSource (bar);                    LinearGradient mask = new LinearGradient (0' 0' 0' bar_height);                    mask.AddColorStop (0.25' new Color (0' 0' 0' 0));                  mask.AddColorStop (0.5' new Color (0' 0' 0' 0.125));                  mask.AddColorStop (0.75' new Color (0' 0' 0' 0.4));                  mask.AddColorStop (1.0' new Color (0' 0' 0' 0.7));                    cr.Mask (mask);  		mask.Dispose ();                    cr.Restore ();                    CairoExtensions.PopGroupToSource (cr);                  cr.Paint ();              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,OnExposeEvent,The following statement contains a magic number: if (reflect) {                  cr.Save ();                    cr.Rectangle (0' bar_height' Allocation.Width - h_padding' bar_height);                  cr.Clip ();                    Matrix matrix = new Matrix ();                  matrix.InitScale (1' -1);                  matrix.Translate (0' -(2 * bar_height) + 1);                  cr.Transform (matrix);    		cr.SetSource (bar);                    LinearGradient mask = new LinearGradient (0' 0' 0' bar_height);                    mask.AddColorStop (0.25' new Color (0' 0' 0' 0));                  mask.AddColorStop (0.5' new Color (0' 0' 0' 0.125));                  mask.AddColorStop (0.75' new Color (0' 0' 0' 0.4));                  mask.AddColorStop (1.0' new Color (0' 0' 0' 0.7));                    cr.Mask (mask);  		mask.Dispose ();                    cr.Restore ();                    CairoExtensions.PopGroupToSource (cr);                  cr.Paint ();              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,OnExposeEvent,The following statement contains a magic number: if (reflect) {                  cr.Save ();                    cr.Rectangle (0' bar_height' Allocation.Width - h_padding' bar_height);                  cr.Clip ();                    Matrix matrix = new Matrix ();                  matrix.InitScale (1' -1);                  matrix.Translate (0' -(2 * bar_height) + 1);                  cr.Transform (matrix);    		cr.SetSource (bar);                    LinearGradient mask = new LinearGradient (0' 0' 0' bar_height);                    mask.AddColorStop (0.25' new Color (0' 0' 0' 0));                  mask.AddColorStop (0.5' new Color (0' 0' 0' 0.125));                  mask.AddColorStop (0.75' new Color (0' 0' 0' 0.4));                  mask.AddColorStop (1.0' new Color (0' 0' 0' 0.7));                    cr.Mask (mask);  		mask.Dispose ();                    cr.Restore ();                    CairoExtensions.PopGroupToSource (cr);                  cr.Paint ();              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,OnExposeEvent,The following statement contains a magic number: if (reflect) {                  cr.Save ();                    cr.Rectangle (0' bar_height' Allocation.Width - h_padding' bar_height);                  cr.Clip ();                    Matrix matrix = new Matrix ();                  matrix.InitScale (1' -1);                  matrix.Translate (0' -(2 * bar_height) + 1);                  cr.Transform (matrix);    		cr.SetSource (bar);                    LinearGradient mask = new LinearGradient (0' 0' 0' bar_height);                    mask.AddColorStop (0.25' new Color (0' 0' 0' 0));                  mask.AddColorStop (0.5' new Color (0' 0' 0' 0.125));                  mask.AddColorStop (0.75' new Color (0' 0' 0' 0.4));                  mask.AddColorStop (1.0' new Color (0' 0' 0' 0.7));                    cr.Mask (mask);  		mask.Dispose ();                    cr.Restore ();                    CairoExtensions.PopGroupToSource (cr);                  cr.Paint ();              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,OnExposeEvent,The following statement contains a magic number: if (show_labels) {                  cr.Translate ((reflect ? Allocation.X : -h_padding) + (Allocation.Width - layout_width) / 2'                       (reflect ? Allocation.Y : 0) + bar_height + bar_label_spacing);                    RenderLabels (cr);              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderBar,The following statement contains a magic number: RenderBar (cr' w' h' h / 2);
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderBarSegments,The following statement contains a magic number: grad.AddColorStop (0.0' new Color (1' 1' 1' 0.125));
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderBarSegments,The following statement contains a magic number: grad.AddColorStop (0.35' new Color (1' 1' 1' 0.255));
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderBarSegments,The following statement contains a magic number: grad.AddColorStop (0.35' new Color (1' 1' 1' 0.255));
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderBarSegments,The following statement contains a magic number: grad.AddColorStop (1' new Color (0' 0' 0' 0.4));
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderBarStrokes,The following statement contains a magic number: double seg_w = 20;
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderBarStrokes,The following statement contains a magic number: while (x <= w - r) {                  cr.MoveTo (x - 0.5' 1);                  cr.LineTo (x - 0.5' h - 1);  		cr.SetSource (seg_sep_light);                  cr.Stroke ();                    cr.MoveTo (x + 0.5' 1);                  cr.LineTo (x + 0.5' h - 1);  		cr.SetSource (seg_sep_dark);                  cr.Stroke ();                    x += seg_w;              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderBarStrokes,The following statement contains a magic number: while (x <= w - r) {                  cr.MoveTo (x - 0.5' 1);                  cr.LineTo (x - 0.5' h - 1);  		cr.SetSource (seg_sep_light);                  cr.Stroke ();                    cr.MoveTo (x + 0.5' 1);                  cr.LineTo (x + 0.5' h - 1);  		cr.SetSource (seg_sep_dark);                  cr.Stroke ();                    x += seg_w;              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderBarStrokes,The following statement contains a magic number: while (x <= w - r) {                  cr.MoveTo (x - 0.5' 1);                  cr.LineTo (x - 0.5' h - 1);  		cr.SetSource (seg_sep_light);                  cr.Stroke ();                    cr.MoveTo (x + 0.5' 1);                  cr.LineTo (x + 0.5' h - 1);  		cr.SetSource (seg_sep_dark);                  cr.Stroke ();                    x += seg_w;              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderBarStrokes,The following statement contains a magic number: while (x <= w - r) {                  cr.MoveTo (x - 0.5' 1);                  cr.LineTo (x - 0.5' h - 1);  		cr.SetSource (seg_sep_light);                  cr.Stroke ();                    cr.MoveTo (x + 0.5' 1);                  cr.LineTo (x + 0.5' h - 1);  		cr.SetSource (seg_sep_dark);                  cr.Stroke ();                    x += seg_w;              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderBarStrokes,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' 0.5' 0.5' w - 1' h - 1' r);
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderBarStrokes,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' 0.5' 0.5' w - 1' h - 1' r);
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,MakeSegmentGradient,The following statement contains a magic number: grad.AddColorStop (0' CairoExtensions.ColorShade (color' 1.1));
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,MakeSegmentGradient,The following statement contains a magic number: grad.AddColorStop (0.35' CairoExtensions.ColorShade (color' 1.2));
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,MakeSegmentGradient,The following statement contains a magic number: grad.AddColorStop (0.35' CairoExtensions.ColorShade (color' 1.2));
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,MakeSegmentGradient,The following statement contains a magic number: grad.AddColorStop (1' CairoExtensions.ColorShade (color' 0.8));
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderLabels,The following statement contains a magic number: Color box_stroke_color = new Color (0' 0' 0' 0.6);
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderLabels,The following statement contains a magic number: foreach (Segment segment in segments) {                  cr.LineWidth = 1;                  cr.Rectangle (x + 0.5' 2 + 0.5' segment_box_size - 1' segment_box_size - 1);                  LinearGradient grad = MakeSegmentGradient (segment_box_size' segment.Color' true);  		cr.SetSource (grad);                  cr.FillPreserve ();  		cr.SetSourceColor (box_stroke_color);                  cr.Stroke ();  		grad.Dispose ();                    x += segment_box_size + segment_box_spacing;                    int lw' lh;                  layout = CreateAdaptLayout (layout' false' true);                  layout.SetText (FormatSegmentText (segment));                  layout.GetPixelSize (out lw' out lh);                    cr.MoveTo (x' 0);                  text_color.A = 0.9;  		cr.SetSourceColor (text_color);                  PangoCairoHelper.ShowLayout (cr' layout);                  cr.Fill ();                    layout = CreateAdaptLayout (layout' true' false);                  layout.SetText (FormatSegmentValue (segment));                    cr.MoveTo (x' lh);                  text_color.A = 0.75;                  cr.SetSourceColor (text_color);                  PangoCairoHelper.ShowLayout (cr' layout);                  cr.Fill ();                    x += segment.LayoutWidth + segment_label_spacing;              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderLabels,The following statement contains a magic number: foreach (Segment segment in segments) {                  cr.LineWidth = 1;                  cr.Rectangle (x + 0.5' 2 + 0.5' segment_box_size - 1' segment_box_size - 1);                  LinearGradient grad = MakeSegmentGradient (segment_box_size' segment.Color' true);  		cr.SetSource (grad);                  cr.FillPreserve ();  		cr.SetSourceColor (box_stroke_color);                  cr.Stroke ();  		grad.Dispose ();                    x += segment_box_size + segment_box_spacing;                    int lw' lh;                  layout = CreateAdaptLayout (layout' false' true);                  layout.SetText (FormatSegmentText (segment));                  layout.GetPixelSize (out lw' out lh);                    cr.MoveTo (x' 0);                  text_color.A = 0.9;  		cr.SetSourceColor (text_color);                  PangoCairoHelper.ShowLayout (cr' layout);                  cr.Fill ();                    layout = CreateAdaptLayout (layout' true' false);                  layout.SetText (FormatSegmentValue (segment));                    cr.MoveTo (x' lh);                  text_color.A = 0.75;                  cr.SetSourceColor (text_color);                  PangoCairoHelper.ShowLayout (cr' layout);                  cr.Fill ();                    x += segment.LayoutWidth + segment_label_spacing;              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderLabels,The following statement contains a magic number: foreach (Segment segment in segments) {                  cr.LineWidth = 1;                  cr.Rectangle (x + 0.5' 2 + 0.5' segment_box_size - 1' segment_box_size - 1);                  LinearGradient grad = MakeSegmentGradient (segment_box_size' segment.Color' true);  		cr.SetSource (grad);                  cr.FillPreserve ();  		cr.SetSourceColor (box_stroke_color);                  cr.Stroke ();  		grad.Dispose ();                    x += segment_box_size + segment_box_spacing;                    int lw' lh;                  layout = CreateAdaptLayout (layout' false' true);                  layout.SetText (FormatSegmentText (segment));                  layout.GetPixelSize (out lw' out lh);                    cr.MoveTo (x' 0);                  text_color.A = 0.9;  		cr.SetSourceColor (text_color);                  PangoCairoHelper.ShowLayout (cr' layout);                  cr.Fill ();                    layout = CreateAdaptLayout (layout' true' false);                  layout.SetText (FormatSegmentValue (segment));                    cr.MoveTo (x' lh);                  text_color.A = 0.75;                  cr.SetSourceColor (text_color);                  PangoCairoHelper.ShowLayout (cr' layout);                  cr.Fill ();                    x += segment.LayoutWidth + segment_label_spacing;              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderLabels,The following statement contains a magic number: foreach (Segment segment in segments) {                  cr.LineWidth = 1;                  cr.Rectangle (x + 0.5' 2 + 0.5' segment_box_size - 1' segment_box_size - 1);                  LinearGradient grad = MakeSegmentGradient (segment_box_size' segment.Color' true);  		cr.SetSource (grad);                  cr.FillPreserve ();  		cr.SetSourceColor (box_stroke_color);                  cr.Stroke ();  		grad.Dispose ();                    x += segment_box_size + segment_box_spacing;                    int lw' lh;                  layout = CreateAdaptLayout (layout' false' true);                  layout.SetText (FormatSegmentText (segment));                  layout.GetPixelSize (out lw' out lh);                    cr.MoveTo (x' 0);                  text_color.A = 0.9;  		cr.SetSourceColor (text_color);                  PangoCairoHelper.ShowLayout (cr' layout);                  cr.Fill ();                    layout = CreateAdaptLayout (layout' true' false);                  layout.SetText (FormatSegmentValue (segment));                    cr.MoveTo (x' lh);                  text_color.A = 0.75;                  cr.SetSourceColor (text_color);                  PangoCairoHelper.ShowLayout (cr' layout);                  cr.Fill ();                    x += segment.LayoutWidth + segment_label_spacing;              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,RenderLabels,The following statement contains a magic number: foreach (Segment segment in segments) {                  cr.LineWidth = 1;                  cr.Rectangle (x + 0.5' 2 + 0.5' segment_box_size - 1' segment_box_size - 1);                  LinearGradient grad = MakeSegmentGradient (segment_box_size' segment.Color' true);  		cr.SetSource (grad);                  cr.FillPreserve ();  		cr.SetSourceColor (box_stroke_color);                  cr.Stroke ();  		grad.Dispose ();                    x += segment_box_size + segment_box_spacing;                    int lw' lh;                  layout = CreateAdaptLayout (layout' false' true);                  layout.SetText (FormatSegmentText (segment));                  layout.GetPixelSize (out lw' out lh);                    cr.MoveTo (x' 0);                  text_color.A = 0.9;  		cr.SetSourceColor (text_color);                  PangoCairoHelper.ShowLayout (cr' layout);                  cr.Fill ();                    layout = CreateAdaptLayout (layout' true' false);                  layout.SetText (FormatSegmentValue (segment));                    cr.MoveTo (x' lh);                  text_color.A = 0.75;                  cr.SetSourceColor (text_color);                  PangoCairoHelper.ShowLayout (cr' layout);                  cr.Fill ();                    x += segment.LayoutWidth + segment_label_spacing;              }
Magic Number,Hyena.Widgets,SegmentedBar,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,FormatSegmentValue,The following statement contains a magic number: return format_handler == null                  ? String.Format ("{0}%"' segment.Percent * 100.0)                  : format_handler (segment);
Magic Number,Hyena.Widgets,SegmentedBarTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,SegmentedBarTestModule,The following statement contains a magic number: BorderWidth = 10;
Magic Number,Hyena.Widgets,SegmentedBarTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,SegmentedBarTestModule,The following statement contains a magic number: box.Spacing = 10;
Magic Number,Hyena.Widgets,SegmentedBarTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,SegmentedBarTestModule,The following statement contains a magic number: int space = 55;
Magic Number,Hyena.Widgets,SegmentedBarTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,SegmentedBarTestModule,The following statement contains a magic number: bar.HorizontalPadding = bar.BarHeight / 2;
Magic Number,Hyena.Widgets,SegmentedBarTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,SegmentedBarTestModule,The following statement contains a magic number: bar.AddSegmentRgb ("Audio"' 0.00187992456702332' 0x3465a4);
Magic Number,Hyena.Widgets,SegmentedBarTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,SegmentedBarTestModule,The following statement contains a magic number: bar.AddSegmentRgb ("Other"' 0.0788718162651326' 0xf57900);
Magic Number,Hyena.Widgets,SegmentedBarTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,SegmentedBarTestModule,The following statement contains a magic number: bar.AddSegmentRgb ("Video"' 0.0516869922033282' 0x73d216);
Magic Number,Hyena.Widgets,SegmentedBarTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,SegmentedBarTestModule,The following statement contains a magic number: bar.AddSegment ("Free Space"' 0.867561266964516' bar.RemainderColor' false);
Magic Number,Hyena.Widgets,SegmentedBarTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,SegmentedBarTestModule,The following statement contains a magic number: controls.Spacing = 5;
Magic Number,Hyena.Widgets,SegmentedBarTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,SegmentedBarTestModule,The following statement contains a magic number: SpinButton height = new SpinButton (new Adjustment (bar.BarHeight' 5' 100' 1' 1' 1)' 1' 0);
Magic Number,Hyena.Widgets,SegmentedBarTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,SegmentedBarTestModule,The following statement contains a magic number: SpinButton height = new SpinButton (new Adjustment (bar.BarHeight' 5' 100' 1' 1' 1)' 1' 0);
Magic Number,Hyena.Widgets,SegmentedBarTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,SegmentedBarTestModule,The following statement contains a magic number: height.Changed += delegate { bar.BarHeight = height.ValueAsInt; bar.HorizontalPadding = bar.BarHeight / 2; };
Magic Number,Hyena.Widgets,SegmentedBarTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SegmentedBar.cs,SegmentedBarTestModule,The following statement contains a magic number: SetSizeRequest (350' -1);
Magic Number,Hyena.Widgets,RatingEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,OnSizeRequested,The following statement contains a magic number: renderer.Size = ((int)(metrics.Ascent + metrics.Descent) + 512) >> 10;
Magic Number,Hyena.Widgets,RatingEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,OnSizeRequested,The following statement contains a magic number: renderer.Size = ((int)(metrics.Ascent + metrics.Descent) + 512) >> 10;
Magic Number,Hyena.Widgets,RatingEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,OnSizeRequested,The following statement contains a magic number: if (HasFrame) {                  renderer.Xpad = Style.Xthickness + (interior_focus ? focus_width : 0) + 2;                  renderer.Ypad = Style.Ythickness + (interior_focus ? focus_width : 0) + 2;              } else {                  renderer.Xpad = 0;                  renderer.Ypad = 0;              }
Magic Number,Hyena.Widgets,RatingEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,OnSizeRequested,The following statement contains a magic number: if (HasFrame) {                  renderer.Xpad = Style.Xthickness + (interior_focus ? focus_width : 0) + 2;                  renderer.Ypad = Style.Ythickness + (interior_focus ? focus_width : 0) + 2;              } else {                  renderer.Xpad = 0;                  renderer.Ypad = 0;              }
Magic Number,Hyena.Widgets,RatingEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,OnExposeEvent,The following statement contains a magic number: if (HasFrame) {                  int y_mid = (int)Math.Round ((Allocation.Height - renderer.Height) / 2.0);                  Gtk.Style.PaintFlatBox (Style' GdkWindow' State' ShadowType.None' evnt.Area' this' "entry"'                      Allocation.X' Allocation.Y + y_mid' Allocation.Width' renderer.Height);                  Gtk.Style.PaintShadow (Style' GdkWindow' State' ShadowType.In'                      evnt.Area' this' "entry"' Allocation.X' Allocation.Y + y_mid' Allocation.Width' renderer.Height);              }
Magic Number,Hyena.Widgets,RatingEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,OnExposeEvent,The following statement contains a magic number: renderer.Render (cr' Allocation'                  CairoExtensions.GdkColorToCairoColor (HasFrame ? Parent.Style.Text (State) : Parent.Style.Foreground (State))'                  AlwaysShowEmptyStars' PreviewOnHover && hover_value >= renderer.MinRating' hover_value'                  State == StateType.Insensitive ? 1 : 0.90'                  State == StateType.Insensitive ? 1 : 0.55'                  State == StateType.Insensitive ? 1 : 0.45);
Magic Number,Hyena.Widgets,RatingEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,OnExposeEvent,The following statement contains a magic number: renderer.Render (cr' Allocation'                  CairoExtensions.GdkColorToCairoColor (HasFrame ? Parent.Style.Text (State) : Parent.Style.Foreground (State))'                  AlwaysShowEmptyStars' PreviewOnHover && hover_value >= renderer.MinRating' hover_value'                  State == StateType.Insensitive ? 1 : 0.90'                  State == StateType.Insensitive ? 1 : 0.55'                  State == StateType.Insensitive ? 1 : 0.45);
Magic Number,Hyena.Widgets,RatingEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,OnExposeEvent,The following statement contains a magic number: renderer.Render (cr' Allocation'                  CairoExtensions.GdkColorToCairoColor (HasFrame ? Parent.Style.Text (State) : Parent.Style.Foreground (State))'                  AlwaysShowEmptyStars' PreviewOnHover && hover_value >= renderer.MinRating' hover_value'                  State == StateType.Insensitive ? 1 : 0.90'                  State == StateType.Insensitive ? 1 : 0.55'                  State == StateType.Insensitive ? 1 : 0.45);
Magic Number,Hyena.Widgets,RatingEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,OnKeyPressEvent,The following statement contains a magic number: if (evnt.KeyValue >= (48 + MinRating) && evnt.KeyValue <= (48 + MaxRating) && evnt.KeyValue <= 59) {                  Value = (int)evnt.KeyValue - 48;                  return true;              }
Magic Number,Hyena.Widgets,RatingEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,OnKeyPressEvent,The following statement contains a magic number: if (evnt.KeyValue >= (48 + MinRating) && evnt.KeyValue <= (48 + MaxRating) && evnt.KeyValue <= 59) {                  Value = (int)evnt.KeyValue - 48;                  return true;              }
Magic Number,Hyena.Widgets,RatingEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,OnKeyPressEvent,The following statement contains a magic number: if (evnt.KeyValue >= (48 + MinRating) && evnt.KeyValue <= (48 + MaxRating) && evnt.KeyValue <= 59) {                  Value = (int)evnt.KeyValue - 48;                  return true;              }
Magic Number,Hyena.Widgets,RatingEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,OnKeyPressEvent,The following statement contains a magic number: if (evnt.KeyValue >= (48 + MinRating) && evnt.KeyValue <= (48 + MaxRating) && evnt.KeyValue <= 59) {                  Value = (int)evnt.KeyValue - 48;                  return true;              }
Magic Number,Hyena.Widgets,RatingAccessible,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,GetMaximumValue,The following statement contains a magic number: val = new GLib.Value (5);
Magic Number,Hyena.Widgets,RatingAccessible,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,SetCurrentValue,The following statement contains a magic number: if (r <= 0 || r > 5) {                  return false;              }
Magic Number,Hyena.Widgets,RatingEntryTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,RatingEntryTestModule,The following statement contains a magic number: box.BorderWidth = 10;
Magic Number,Hyena.Widgets,RatingEntryTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,RatingEntryTestModule,The following statement contains a magic number: box.Spacing = 10;
Magic Number,Hyena.Widgets,RatingMenuItem,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingMenuItem.cs,RatingMenuItem,The following statement contains a magic number: box.Spacing = 5;
Magic Number,Hyena.Widgets,ImageButton,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\ImageButton.cs,ImageButton,The following statement contains a magic number: hbox.Spacing = 2;
Magic Number,Hyena.Widgets,PulsingButton,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\PulsingButton.cs,OnExposeEvent,The following statement contains a magic number: double x = Allocation.X + Allocation.Width / 2;
Magic Number,Hyena.Widgets,PulsingButton,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\PulsingButton.cs,OnExposeEvent,The following statement contains a magic number: double y = Allocation.Y + Allocation.Height / 2;
Magic Number,Hyena.Widgets,PulsingButton,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\PulsingButton.cs,OnExposeEvent,The following statement contains a magic number: double r = Math.Min (Allocation.Width' Allocation.Height) / 2;
Magic Number,Hyena.Widgets,PulsingButton,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\PulsingButton.cs,OnExposeEvent,The following statement contains a magic number: fill.AddColorStop (0.5' color);
Magic Number,Hyena.Widgets,PulsingButton,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\PulsingButton.cs,OnExposeEvent,The following statement contains a magic number: cr.Arc (x' y' r' 0' 2 * Math.PI);
Magic Number,Hyena.Widgets,HigMessageDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\HigMessageDialog.cs,HigMessageDialog,The following statement contains a magic number: BorderWidth = 5;
Magic Number,Hyena.Widgets,HigMessageDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\HigMessageDialog.cs,HigMessageDialog,The following statement contains a magic number: VBox.Spacing = 12;
Magic Number,Hyena.Widgets,HigMessageDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\HigMessageDialog.cs,HigMessageDialog,The following statement contains a magic number: Gtk.HBox hbox = new Gtk.HBox (false' 12);
Magic Number,Hyena.Widgets,HigMessageDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\HigMessageDialog.cs,HigMessageDialog,The following statement contains a magic number: hbox.BorderWidth = 5;
Magic Number,Hyena.Widgets,HigMessageDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\HigMessageDialog.cs,HigMessageDialog,The following statement contains a magic number: inner_vbox = new Gtk.VBox (false' 12);
Magic Number,Hyena.Widgets,EntryPopup,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\EntryPopup.cs,EntryPopup,The following statement contains a magic number: hbox = new HBox () { Spacing = 6 };
Magic Number,Hyena.Widgets,EntryPopup,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\EntryPopup.cs,EntryPopup,The following statement contains a magic number: hbox.BorderWidth = 3;
Magic Number,Hyena.Widgets,SimpleTable<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SimpleTable.cs,SimpleTable,The following statement contains a magic number: ColumnSpacing = 5;
Magic Number,Hyena.Widgets,SimpleTable<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SimpleTable.cs,SimpleTable,The following statement contains a magic number: RowSpacing = 5;
Magic Number,Hyena.Widgets,SimpleTable<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\SimpleTable.cs,InsertRow,The following statement contains a magic number: for (int y = items.Count - 1; y >= row; y--) {                  for (uint x = 0; x < NColumns; x++) {                      var widget = item_widgets[items[y]][x];                      Remove (widget);                      Attach (widget' x' x + 1' (uint) y + 1' (uint) y + 2' XOptions[x]' default_options' 0' 0);                  }              }
Magic Number,Hyena.Gui.Theatrics,Actor<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Actor.cs,PClamp,The following statement contains a magic number: return Math.Max (0.1' Math.Min (1.0' value));
Magic Number,Hyena.Gui.Theatrics,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Gui.Theatrics,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Gui.Theatrics,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Gui.Theatrics,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Gui.Theatrics,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Gui.Theatrics,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Gui.Theatrics,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Gui.Theatrics,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Gui.Theatrics,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Gui.Theatrics,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Gui.Theatrics,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Gui.Theatrics,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Gui.Theatrics,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Gui.Theatrics,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Gui.Theatrics,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Gui.Theatrics,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Gui.Theatrics,Choreographer,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                  case Easing.QuadraticIn:                      return percent * percent;                    case Easing.QuadraticOut:                      return -1.0 * percent * (percent - 2.0);                    case Easing.QuadraticInOut:                      percent *= 2.0;                      return percent < 1.0                          ? percent * percent * 0.5                          : -0.5 * (--percent * (percent - 2.0) - 1.0);                    case Easing.ExponentialIn:                      return Math.Pow (2.0' 10.0 * (percent - 1.0));                    case Easing.ExponentialOut:                      return -Math.Pow (2.0' -10.0 * percent) + 1.0;                    case Easing.ExponentialInOut:                      percent *= 2.0;                      return percent < 1.0                          ? 0.5 * Math.Pow (2.0' 10.0 * (percent - 1.0))                          : 0.5 * (-Math.Pow (2.0' -10.0 * --percent) + 2.0);                    case Easing.Sine:                      return Math.Sin (percent * Math.PI);                    case Easing.Linear:                  default:                      return percent;              }
Magic Number,Hyena.Query.Gui,DateQueryValueEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\DateQueryValueEntry.cs,DateQueryValueEntry,The following statement contains a magic number: year_entry.MaxLength = year_entry.WidthChars = 4;
Magic Number,Hyena.Query.Gui,DateQueryValueEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\DateQueryValueEntry.cs,DateQueryValueEntry,The following statement contains a magic number: month_entry.MaxLength = month_entry.WidthChars = 2;
Magic Number,Hyena.Query.Gui,DateQueryValueEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\DateQueryValueEntry.cs,DateQueryValueEntry,The following statement contains a magic number: day_entry.MaxLength = day_entry.WidthChars = 2;
Magic Number,Hyena.Query.Gui,IntegerQueryValueEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\IntegerQueryValueEntry.cs,IntegerQueryValueEntry,The following statement contains a magic number: spin_button.WidthChars = 4;
Magic Number,Hyena.Query.Gui,QueryBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryBox.cs,BuildInterface,The following statement contains a magic number: matchesAlignment.SetPadding (5' 5' 5' 5);
Magic Number,Hyena.Query.Gui,QueryBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryBox.cs,BuildInterface,The following statement contains a magic number: matchesAlignment.SetPadding (5' 5' 5' 5);
Magic Number,Hyena.Query.Gui,QueryBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryBox.cs,BuildInterface,The following statement contains a magic number: matchesAlignment.SetPadding (5' 5' 5' 5);
Magic Number,Hyena.Query.Gui,QueryBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryBox.cs,BuildInterface,The following statement contains a magic number: matchesAlignment.SetPadding (5' 5' 5' 5);
Magic Number,Hyena.Query.Gui,QueryBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryBox.cs,BuildInterface,The following statement contains a magic number: terms_entry_box.Spacing = 8;
Magic Number,Hyena.Query.Gui,QueryBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryBox.cs,BuildMatchHeader,The following statement contains a magic number: header.Spacing = 5;
Magic Number,Hyena.Query.Gui,QueryValueEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryValueEntry.cs,QueryValueEntry,The following statement contains a magic number: Spacing = 5;
Magic Number,Hyena.Query.Gui,FileSizeQueryValueEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\FileSizeQueryValueEntry.cs,FileSizeQueryValueEntry,The following statement contains a magic number: spin_button.WidthChars = 4;
Magic Number,Hyena.Query.Gui,FileSizeQueryValueEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\FileSizeQueryValueEntry.cs,FileSizeQueryValueEntry,The following statement contains a magic number: combo.Realized += delegate { if (!combo_set) { combo.Active = 2; } };
Magic Number,Hyena.Query.Gui,QueryLimitBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryLimitBox.cs,QueryLimitBox,The following statement contains a magic number: Spacing = 5;
Magic Number,Hyena.Query.Gui,QueryLimitBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryLimitBox.cs,QueryLimitBox,The following statement contains a magic number: count_spin.Value = 25;
Magic Number,Hyena.Query.Gui,QueryLimitBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryLimitBox.cs,QueryLimitBox,The following statement contains a magic number: count_spin.SetSizeRequest (60' -1);
Magic Number,Hyena.Query.Gui,QueryTermsBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryTermsBox.cs,QueryTermsBox,The following statement contains a magic number: ColumnSpacing = 5;
Magic Number,Hyena.Query.Gui,QueryTermsBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryTermsBox.cs,QueryTermsBox,The following statement contains a magic number: RowSpacing = 5;
Magic Number,Hyena.Query.Gui,QueryTermsBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryTermsBox.cs,CreateRow,The following statement contains a magic number: row.ValueEntry.HeightRequest = 31;
Magic Number,Hyena.Query.Gui,QueryTermsBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryTermsBox.cs,CreateRow,The following statement contains a magic number: row.Buttons.HeightRequest = 31;
Magic Number,Hyena.Query.Gui,QueryTermsBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryTermsBox.cs,CreateRow,The following statement contains a magic number: Attach (row.OpChooser' 1' 2' NRows - 1' NRows);
Magic Number,Hyena.Query.Gui,QueryTermsBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryTermsBox.cs,CreateRow,The following statement contains a magic number: Attach (row.ValueEntry' 2' 3' NRows - 1' NRows);
Magic Number,Hyena.Query.Gui,QueryTermsBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryTermsBox.cs,CreateRow,The following statement contains a magic number: Attach (row.ValueEntry' 2' 3' NRows - 1' NRows);
Magic Number,Hyena.Query.Gui,QueryTermsBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryTermsBox.cs,CreateRow,The following statement contains a magic number: Attach (row.Buttons' 3' 4' NRows - 1' NRows);
Magic Number,Hyena.Query.Gui,QueryTermsBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryTermsBox.cs,CreateRow,The following statement contains a magic number: Attach (row.Buttons' 3' 4' NRows - 1' NRows);
Magic Number,Hyena.Query.Gui,QueryTermsBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryTermsBox.cs,RemoveRow,The following statement contains a magic number: for (int i = index + 1; i < terms.Count; i++) {                  Remove (terms[i].FieldChooser);                  Remove (terms[i].OpChooser);                  Remove (terms[i].ValueEntry);                  Remove (terms[i].Buttons);                    Attach (terms[i].FieldChooser' 0' 1' (uint) i - 1' (uint) i);                  Attach (terms[i].OpChooser' 1' 2' (uint) i - 1' (uint) i);                  Attach (terms[i].ValueEntry' 2' 3' (uint) i - 1' (uint) i);                  Attach (terms[i].Buttons' 3' 4' (uint) i - 1' (uint) i);              }
Magic Number,Hyena.Query.Gui,QueryTermsBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryTermsBox.cs,RemoveRow,The following statement contains a magic number: for (int i = index + 1; i < terms.Count; i++) {                  Remove (terms[i].FieldChooser);                  Remove (terms[i].OpChooser);                  Remove (terms[i].ValueEntry);                  Remove (terms[i].Buttons);                    Attach (terms[i].FieldChooser' 0' 1' (uint) i - 1' (uint) i);                  Attach (terms[i].OpChooser' 1' 2' (uint) i - 1' (uint) i);                  Attach (terms[i].ValueEntry' 2' 3' (uint) i - 1' (uint) i);                  Attach (terms[i].Buttons' 3' 4' (uint) i - 1' (uint) i);              }
Magic Number,Hyena.Query.Gui,QueryTermsBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryTermsBox.cs,RemoveRow,The following statement contains a magic number: for (int i = index + 1; i < terms.Count; i++) {                  Remove (terms[i].FieldChooser);                  Remove (terms[i].OpChooser);                  Remove (terms[i].ValueEntry);                  Remove (terms[i].Buttons);                    Attach (terms[i].FieldChooser' 0' 1' (uint) i - 1' (uint) i);                  Attach (terms[i].OpChooser' 1' 2' (uint) i - 1' (uint) i);                  Attach (terms[i].ValueEntry' 2' 3' (uint) i - 1' (uint) i);                  Attach (terms[i].Buttons' 3' 4' (uint) i - 1' (uint) i);              }
Magic Number,Hyena.Query.Gui,QueryTermsBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryTermsBox.cs,RemoveRow,The following statement contains a magic number: for (int i = index + 1; i < terms.Count; i++) {                  Remove (terms[i].FieldChooser);                  Remove (terms[i].OpChooser);                  Remove (terms[i].ValueEntry);                  Remove (terms[i].Buttons);                    Attach (terms[i].FieldChooser' 0' 1' (uint) i - 1' (uint) i);                  Attach (terms[i].OpChooser' 1' 2' (uint) i - 1' (uint) i);                  Attach (terms[i].ValueEntry' 2' 3' (uint) i - 1' (uint) i);                  Attach (terms[i].Buttons' 3' 4' (uint) i - 1' (uint) i);              }
Magic Number,Hyena.Query.Gui,QueryTermsBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryTermsBox.cs,RemoveRow,The following statement contains a magic number: for (int i = index + 1; i < terms.Count; i++) {                  Remove (terms[i].FieldChooser);                  Remove (terms[i].OpChooser);                  Remove (terms[i].ValueEntry);                  Remove (terms[i].Buttons);                    Attach (terms[i].FieldChooser' 0' 1' (uint) i - 1' (uint) i);                  Attach (terms[i].OpChooser' 1' 2' (uint) i - 1' (uint) i);                  Attach (terms[i].ValueEntry' 2' 3' (uint) i - 1' (uint) i);                  Attach (terms[i].Buttons' 3' 4' (uint) i - 1' (uint) i);              }
Magic Number,Hyena.Query.Gui,TimeSpanQueryValueEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\TimeSpanQueryValueEntry.cs,TimeSpanQueryValueEntry,The following statement contains a magic number: spin_button.WidthChars = 4;
Magic Number,Hyena.Query.Gui,QueryDebugger,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryDebugger.cs,QueryDebugger,The following statement contains a magic number: SetDefaultSize (800' 600);
Magic Number,Hyena.Query.Gui,QueryDebugger,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryDebugger.cs,QueryDebugger,The following statement contains a magic number: SetDefaultSize (800' 600);
Magic Number,Hyena.Query.Gui,QueryDebugger,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryDebugger.cs,QueryDebugger,The following statement contains a magic number: input_box.Spacing = 8;
Magic Number,Hyena.Query.Gui,QueryDebugger,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryDebugger.cs,QueryDebugger,The following statement contains a magic number: output_box.Spacing = 8;
Magic Number,Hyena.Query.Gui,QueryDebugger,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Query.Gui\QueryDebugger.cs,QueryDebugger,The following statement contains a magic number: pane.Position = 100;
Magic Number,Hyena.Gui.Theming,Theme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\Theme.cs,OnColorsRefreshed,The following statement contains a magic number: text_mid = CairoExtensions.AlphaBlend (                  colors.GetWidgetColor (GtkColorClass.Base' StateType.Normal)'                  colors.GetWidgetColor (GtkColorClass.Text' StateType.Normal)'                  0.5);
Magic Number,Hyena.Gui.Theming,Theme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\Theme.cs,DrawArrow,The following statement contains a magic number: DrawArrow (cr' alloc' Math.PI / 2.0 * (type == Hyena.Data.SortType.Ascending ? 1 : -1));
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,GetCairoTextMidColor,The following statement contains a magic number: return CairoExtensions.AlphaBlend (text_color' background_color' 0.5);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,GetGdkTextMidColor,The following statement contains a magic number: Gdk.Color gdk_color = new Gdk.Color ((byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255));
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,GetGdkTextMidColor,The following statement contains a magic number: Gdk.Color gdk_color = new Gdk.Color ((byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255));
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,GetGdkTextMidColor,The following statement contains a magic number: Gdk.Color gdk_color = new Gdk.Color ((byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255));
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,OnColorsRefreshed,The following statement contains a magic number: rule_color = CairoExtensions.ColorShade (ViewFill' 0.95);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawPie,The following statement contains a magic number: double a1 = 3.0 * Math.PI / 2.0;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawPie,The following statement contains a magic number: double a1 = 3.0 * Math.PI / 2.0;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawPie,The following statement contains a magic number: double a2 = a1 + 2.0 * Math.PI * fraction;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawPie,The following statement contains a magic number: Color color_b = CairoExtensions.ColorShade (color_a' 1.4);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawPie,The following statement contains a magic number: RadialGradient fill = new RadialGradient (Context.X' Context.Y' 0'                  Context.X' Context.Y' 2.0 * Context.Radius);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawPie,The following statement contains a magic number: Context.Cairo.SetSourceColor (CairoExtensions.ColorShade (color_a' 0.8));
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawArrow,The following statement contains a magic number: rotation -= Math.PI / 2.0;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawArrow,The following statement contains a magic number: double x3 = alloc.X + alloc.Width / 2.0;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawArrow,The following statement contains a magic number: double cy = alloc.Y + alloc.Height / 2.0;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawArrow,The following statement contains a magic number: bool hz = (rotation % (Math.PI / 2.0)) == 0;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawArrow,The following statement contains a magic number: double dx = hz ? 0 : 0.5;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawArrow,The following statement contains a magic number: double dy = hz ? 0.5 : 0.5;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawArrow,The following statement contains a magic number: double dy = hz ? 0.5 : 0.5;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawFrameBorder,The following statement contains a magic number: if (Widget.HasFocus && !Hyena.PlatformDetection.IsWindows) {                  cr.LineWidth = BorderWidth * 1.5;  		cr.SetSourceColor (CairoExtensions.ColorShade (border_color' 0.8));              } else {                  cr.LineWidth = BorderWidth;  		cr.SetSourceColor (border_color);              }
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawFrameBorder,The following statement contains a magic number: if (Widget.HasFocus && !Hyena.PlatformDetection.IsWindows) {                  cr.LineWidth = BorderWidth * 1.5;  		cr.SetSourceColor (CairoExtensions.ColorShade (border_color' 0.8));              } else {                  cr.LineWidth = BorderWidth;  		cr.SetSourceColor (border_color);              }
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawFrameBorder,The following statement contains a magic number: double offset = (double)cr.LineWidth / 2.0;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHighlight,The following statement contains a magic number: Cairo.Color light_color = CairoExtensions.ColorShade (color' 1.6);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHighlight,The following statement contains a magic number: Cairo.Color dark_color = CairoExtensions.ColorShade (color' 1.3);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHighlight,The following statement contains a magic number: cr.Rectangle (alloc.X + 1.5' alloc.Y + 1.5' alloc.Width - 3' alloc.Height - 2);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHighlight,The following statement contains a magic number: cr.Rectangle (alloc.X + 1.5' alloc.Y + 1.5' alloc.Width - 3' alloc.Height - 2);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHighlight,The following statement contains a magic number: cr.Rectangle (alloc.X + 1.5' alloc.Y + 1.5' alloc.Width - 3' alloc.Height - 2);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHighlight,The following statement contains a magic number: cr.Rectangle (alloc.X + 1.5' alloc.Y + 1.5' alloc.Width - 3' alloc.Height - 2);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawHeaderBackground,The following statement contains a magic number: Cairo.Color light_color = CairoExtensions.ColorShade (gtk_background_color' 1.1);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawHeaderBackground,The following statement contains a magic number: Cairo.Color dark_color = CairoExtensions.ColorShade (gtk_background_color' 0.95);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawHeaderBackground,The following statement contains a magic number: grad.AddColorStop (0.75' dark_color);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: double top_offset = 2.0;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: double right_offset = 2.0;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: double margin = 0.5;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: double line_width = 0.7;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: Cairo.Color stroke_color = CairoExtensions.ColorShade (                  Colors.GetWidgetColor (GtkColorClass.Background' StateType.Selected)' 0.8);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: stroke_color.A = 0.1;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr'                  alloc.X + margin + line_width + right_offset'                  alloc.Y + margin + line_width + top_offset'                  alloc.Width - (margin + line_width)*2.0 - right_offset'                  alloc.Height - (margin + line_width)*2.0 - top_offset'                  Context.Radius/2.0' CairoCorners.None);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr'                  alloc.X + margin + line_width + right_offset'                  alloc.Y + margin + line_width + top_offset'                  alloc.Width - (margin + line_width)*2.0 - right_offset'                  alloc.Height - (margin + line_width)*2.0 - top_offset'                  Context.Radius/2.0' CairoCorners.None);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr'                  alloc.X + margin + line_width + right_offset'                  alloc.Y + margin + line_width + top_offset'                  alloc.Width - (margin + line_width)*2.0 - right_offset'                  alloc.Height - (margin + line_width)*2.0 - top_offset'                  Context.Radius/2.0' CairoCorners.None);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr'                  alloc.X + margin + line_width + right_offset'                  alloc.Y + margin + line_width + top_offset'                  alloc.Width - (line_width + margin)*2.0 - right_offset'                  alloc.Height - (line_width + margin)*2.0 - right_offset'                  Context.Radius/2.0' CairoCorners.All);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr'                  alloc.X + margin + line_width + right_offset'                  alloc.Y + margin + line_width + top_offset'                  alloc.Width - (line_width + margin)*2.0 - right_offset'                  alloc.Height - (line_width + margin)*2.0 - right_offset'                  Context.Radius/2.0' CairoCorners.All);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr'                  alloc.X + margin + line_width + right_offset'                  alloc.Y + margin + line_width + top_offset'                  alloc.Width - (line_width + margin)*2.0 - right_offset'                  alloc.Height - (line_width + margin)*2.0 - right_offset'                  Context.Radius/2.0' CairoCorners.All);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawHeaderSeparator,The following statement contains a magic number: Cairo.Color dark_color = CairoExtensions.ColorShade (gtk_background_color' 0.80);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawHeaderSeparator,The following statement contains a magic number: Cairo.Color light_color = CairoExtensions.ColorShade (gtk_background_color' 1.1);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawHeaderSeparator,The following statement contains a magic number: int y_1 = alloc.Top + 4;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawHeaderSeparator,The following statement contains a magic number: int y_2 = alloc.Bottom - 3;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowCursor,The following statement contains a magic number: cr.LineWidth = 1.25;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowCursor,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' x + cr.LineWidth/2.0' y + cr.LineWidth/2.0'                  width - cr.LineWidth' height - cr.LineWidth' Context.Radius' corners' true);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowCursor,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' x + cr.LineWidth/2.0' y + cr.LineWidth/2.0'                  width - cr.LineWidth' height - cr.LineWidth' Context.Radius' corners' true);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: Cairo.Color selection_highlight = CairoExtensions.ColorShade (selection_color' 1.24);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: Cairo.Color selection_stroke = CairoExtensions.ColorShade (selection_color' 0.85);
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: selection_highlight.A = 0.5;
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: if (filled) {                  if (flat_fill) {  		    cr.SetSourceColor (selection_color);                  } else {                      Cairo.Color selection_fill_light = CairoExtensions.ColorShade (selection_color' 1.12);                      Cairo.Color selection_fill_dark = selection_color;                        selection_fill_light.A = color.A;                      selection_fill_dark.A = color.A;                        grad = new LinearGradient (x' y' x' y + height);                      grad.AddColorStop (0' selection_fill_light);                      grad.AddColorStop (0.4' selection_fill_dark);                      grad.AddColorStop (1' selection_fill_light);    		    cr.SetSource (grad);                  }                    CairoExtensions.RoundedRectangle (cr' x' y' width' height' Context.Radius' corners' true);                  cr.Fill ();                    if (grad != null) {  			grad.Dispose ();                  }              }
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: if (filled) {                  if (flat_fill) {  		    cr.SetSourceColor (selection_color);                  } else {                      Cairo.Color selection_fill_light = CairoExtensions.ColorShade (selection_color' 1.12);                      Cairo.Color selection_fill_dark = selection_color;                        selection_fill_light.A = color.A;                      selection_fill_dark.A = color.A;                        grad = new LinearGradient (x' y' x' y + height);                      grad.AddColorStop (0' selection_fill_light);                      grad.AddColorStop (0.4' selection_fill_dark);                      grad.AddColorStop (1' selection_fill_light);    		    cr.SetSource (grad);                  }                    CairoExtensions.RoundedRectangle (cr' x' y' width' height' Context.Radius' corners' true);                  cr.Fill ();                    if (grad != null) {  			grad.Dispose ();                  }              }
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: if (filled && stroked) {                  cr.LineWidth = 1.0;  		cr.SetSourceColor (selection_highlight);                  CairoExtensions.RoundedRectangle (cr' x + 1.5' y + 1.5' width - 3' height - 3'                      Context.Radius - 1' corners' true);                  cr.Stroke ();              }
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: if (filled && stroked) {                  cr.LineWidth = 1.0;  		cr.SetSourceColor (selection_highlight);                  CairoExtensions.RoundedRectangle (cr' x + 1.5' y + 1.5' width - 3' height - 3'                      Context.Radius - 1' corners' true);                  cr.Stroke ();              }
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: if (filled && stroked) {                  cr.LineWidth = 1.0;  		cr.SetSourceColor (selection_highlight);                  CairoExtensions.RoundedRectangle (cr' x + 1.5' y + 1.5' width - 3' height - 3'                      Context.Radius - 1' corners' true);                  cr.Stroke ();              }
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: if (filled && stroked) {                  cr.LineWidth = 1.0;  		cr.SetSourceColor (selection_highlight);                  CairoExtensions.RoundedRectangle (cr' x + 1.5' y + 1.5' width - 3' height - 3'                      Context.Radius - 1' corners' true);                  cr.Stroke ();              }
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: if (stroked) {                  cr.LineWidth = 1.0;  		cr.SetSourceColor (selection_stroke);                  CairoExtensions.RoundedRectangle (cr' x + 0.5' y + 0.5' width - 1' height - 1'                      Context.Radius' corners' true);                  cr.Stroke ();              }
Magic Number,Hyena.Gui.Theming,GtkTheme,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: if (stroked) {                  cr.LineWidth = 1.0;  		cr.SetSourceColor (selection_stroke);                  CairoExtensions.RoundedRectangle (cr' x + 0.5' y + 0.5' width - 1' height - 1'                      Context.Radius' corners' true);                  cr.Stroke ();              }
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: uint['] borders = {                  {0' 0' 0' 0}'                  {10' 0' 0' 0}'                  {0' 10' 0' 0}'                  {0' 0' 10' 0}'                  {0' 0' 0' 10}'                  {10' 10' 0' 0}'                  {10' 10' 10' 0}'                  {10' 10' 10' 10}'                  {10' 0' 0' 10}'                  {0' 10' 10' 0}              };
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: uint['] borders = {                  {0' 0' 0' 0}'                  {10' 0' 0' 0}'                  {0' 10' 0' 0}'                  {0' 0' 10' 0}'                  {0' 0' 0' 10}'                  {10' 10' 0' 0}'                  {10' 10' 10' 0}'                  {10' 10' 10' 10}'                  {10' 0' 0' 10}'                  {0' 10' 10' 0}              };
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: uint['] borders = {                  {0' 0' 0' 0}'                  {10' 0' 0' 0}'                  {0' 10' 0' 0}'                  {0' 0' 10' 0}'                  {0' 0' 0' 10}'                  {10' 10' 0' 0}'                  {10' 10' 10' 0}'                  {10' 10' 10' 10}'                  {10' 0' 0' 10}'                  {0' 10' 10' 0}              };
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: uint['] borders = {                  {0' 0' 0' 0}'                  {10' 0' 0' 0}'                  {0' 10' 0' 0}'                  {0' 0' 10' 0}'                  {0' 0' 0' 10}'                  {10' 10' 0' 0}'                  {10' 10' 10' 0}'                  {10' 10' 10' 10}'                  {10' 0' 0' 10}'                  {0' 10' 10' 0}              };
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: uint['] borders = {                  {0' 0' 0' 0}'                  {10' 0' 0' 0}'                  {0' 10' 0' 0}'                  {0' 0' 10' 0}'                  {0' 0' 0' 10}'                  {10' 10' 0' 0}'                  {10' 10' 10' 0}'                  {10' 10' 10' 10}'                  {10' 0' 0' 10}'                  {0' 10' 10' 0}              };
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: uint['] borders = {                  {0' 0' 0' 0}'                  {10' 0' 0' 0}'                  {0' 10' 0' 0}'                  {0' 0' 10' 0}'                  {0' 0' 0' 10}'                  {10' 10' 0' 0}'                  {10' 10' 10' 0}'                  {10' 10' 10' 10}'                  {10' 0' 0' 10}'                  {0' 10' 10' 0}              };
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: uint['] borders = {                  {0' 0' 0' 0}'                  {10' 0' 0' 0}'                  {0' 10' 0' 0}'                  {0' 0' 10' 0}'                  {0' 0' 0' 10}'                  {10' 10' 0' 0}'                  {10' 10' 10' 0}'                  {10' 10' 10' 10}'                  {10' 0' 0' 10}'                  {0' 10' 10' 0}              };
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: uint['] borders = {                  {0' 0' 0' 0}'                  {10' 0' 0' 0}'                  {0' 10' 0' 0}'                  {0' 0' 10' 0}'                  {0' 0' 0' 10}'                  {10' 10' 0' 0}'                  {10' 10' 10' 0}'                  {10' 10' 10' 10}'                  {10' 0' 0' 10}'                  {0' 10' 10' 0}              };
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: uint['] borders = {                  {0' 0' 0' 0}'                  {10' 0' 0' 0}'                  {0' 10' 0' 0}'                  {0' 0' 10' 0}'                  {0' 0' 0' 10}'                  {10' 10' 0' 0}'                  {10' 10' 10' 0}'                  {10' 10' 10' 10}'                  {10' 0' 0' 10}'                  {0' 10' 10' 0}              };
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: uint['] borders = {                  {0' 0' 0' 0}'                  {10' 0' 0' 0}'                  {0' 10' 0' 0}'                  {0' 0' 10' 0}'                  {0' 0' 0' 10}'                  {10' 10' 0' 0}'                  {10' 10' 10' 0}'                  {10' 10' 10' 10}'                  {10' 0' 0' 10}'                  {0' 10' 10' 0}              };
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: uint['] borders = {                  {0' 0' 0' 0}'                  {10' 0' 0' 0}'                  {0' 10' 0' 0}'                  {0' 0' 10' 0}'                  {0' 0' 0' 10}'                  {10' 10' 0' 0}'                  {10' 10' 10' 0}'                  {10' 10' 10' 10}'                  {10' 0' 0' 10}'                  {0' 10' 10' 0}              };
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: uint['] borders = {                  {0' 0' 0' 0}'                  {10' 0' 0' 0}'                  {0' 10' 0' 0}'                  {0' 0' 10' 0}'                  {0' 0' 0' 10}'                  {10' 10' 0' 0}'                  {10' 10' 10' 0}'                  {10' 10' 10' 10}'                  {10' 0' 0' 10}'                  {0' 10' 10' 0}              };
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: uint['] borders = {                  {0' 0' 0' 0}'                  {10' 0' 0' 0}'                  {0' 10' 0' 0}'                  {0' 0' 10' 0}'                  {0' 0' 0' 10}'                  {10' 10' 0' 0}'                  {10' 10' 10' 0}'                  {10' 10' 10' 10}'                  {10' 0' 0' 10}'                  {0' 10' 10' 0}              };
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: uint['] borders = {                  {0' 0' 0' 0}'                  {10' 0' 0' 0}'                  {0' 10' 0' 0}'                  {0' 0' 10' 0}'                  {0' 0' 0' 10}'                  {10' 10' 0' 0}'                  {10' 10' 10' 0}'                  {10' 10' 10' 10}'                  {10' 0' 0' 10}'                  {0' 10' 10' 0}              };
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: uint['] borders = {                  {0' 0' 0' 0}'                  {10' 0' 0' 0}'                  {0' 10' 0' 0}'                  {0' 0' 10' 0}'                  {0' 0' 0' 10}'                  {10' 10' 0' 0}'                  {10' 10' 10' 0}'                  {10' 10' 10' 10}'                  {10' 0' 0' 10}'                  {0' 10' 10' 0}              };
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: uint['] borders = {                  {0' 0' 0' 0}'                  {10' 0' 0' 0}'                  {0' 10' 0' 0}'                  {0' 0' 10' 0}'                  {0' 0' 0' 10}'                  {10' 10' 0' 0}'                  {10' 10' 10' 0}'                  {10' 10' 10' 10}'                  {10' 0' 0' 10}'                  {0' 10' 10' 0}              };
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: uint['] borders = {                  {0' 0' 0' 0}'                  {10' 0' 0' 0}'                  {0' 10' 0' 0}'                  {0' 0' 10' 0}'                  {0' 0' 0' 10}'                  {10' 10' 0' 0}'                  {10' 10' 10' 0}'                  {10' 10' 10' 10}'                  {10' 0' 0' 10}'                  {0' 10' 10' 0}              };
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: GLib.Timeout.Add (2000' delegate {                  Console.WriteLine (state);                  align.TopPadding = borders[state' 0];                  align.RightPadding = borders[state' 1];                  align.BottomPadding = borders[state' 2];                  align.LeftPadding = borders[state' 3];                  if (++state % borders.GetLength (0) == 0) {                      state = 0;                  }                  return true;              });
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: GLib.Timeout.Add (2000' delegate {                  Console.WriteLine (state);                  align.TopPadding = borders[state' 0];                  align.RightPadding = borders[state' 1];                  align.BottomPadding = borders[state' 2];                  align.LeftPadding = borders[state' 3];                  if (++state % borders.GetLength (0) == 0) {                      state = 0;                  }                  return true;              });
Magic Number,Hyena.Gui.Theming,ThemeTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,ThemeTestModule,The following statement contains a magic number: GLib.Timeout.Add (2000' delegate {                  Console.WriteLine (state);                  align.TopPadding = borders[state' 0];                  align.RightPadding = borders[state' 1];                  align.BottomPadding = borders[state' 2];                  align.LeftPadding = borders[state' 3];                  if (++state % borders.GetLength (0) == 0) {                      state = 0;                  }                  return true;              });
Magic Number,Hyena.Gui.Theming,ThemeTestWidget,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\ThemeTestModule.cs,OnStyleSet,The following statement contains a magic number: theme.Context.Radius = 10;
Magic Number,Hyena.Data.Gui.Tests,ListViewTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListViewTestModule.cs,ListViewTestModule,The following statement contains a magic number: SetDefaultSize (800' 600);
Magic Number,Hyena.Data.Gui.Tests,ListViewTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListViewTestModule.cs,ListViewTestModule,The following statement contains a magic number: SetDefaultSize (800' 600);
Magic Number,Hyena.Data.Gui.Tests,View,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListViewTestModule.cs,View,The following statement contains a magic number: ViewLayout = new DataViewLayoutGrid () {                      ChildAllocator = () => {                          return new StackPanel () {                              Orientation = Hyena.Gui.Canvas.Orientation.Vertical'                              Width = 400'                              Spacing = 15'                              //Margin = new Thickness (10)'                              Theme = Theme'                              Children = {                                  new Slider ()'                                  new ColumnCellCheckBox ("F"' true)'                                  new TextBlock () { Binder = new ObjectBinder () { Property = "A" } }'                                  new TextBlock () { Binder = new ObjectBinder () { Property = "B" } }'                                  //new ColumnCellText ("B"' true)'                                  //new ColumnCellText ("C"' true)'                                  new ColumnCellRating ("G"' true)'                                  //new ColumnCellText ("D"' true)'                                  new ColumnCellDoodle ("E"' true)'                                  //new ColumnCellText ("A"' true)                              }                          };                          //return new ColumnCellRating ("G"' true);                      }'                      View = this                  };
Magic Number,Hyena.Data.Gui.Tests,View,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListViewTestModule.cs,View,The following statement contains a magic number: ViewLayout = new DataViewLayoutGrid () {                      ChildAllocator = () => {                          return new StackPanel () {                              Orientation = Hyena.Gui.Canvas.Orientation.Vertical'                              Width = 400'                              Spacing = 15'                              //Margin = new Thickness (10)'                              Theme = Theme'                              Children = {                                  new Slider ()'                                  new ColumnCellCheckBox ("F"' true)'                                  new TextBlock () { Binder = new ObjectBinder () { Property = "A" } }'                                  new TextBlock () { Binder = new ObjectBinder () { Property = "B" } }'                                  //new ColumnCellText ("B"' true)'                                  //new ColumnCellText ("C"' true)'                                  new ColumnCellRating ("G"' true)'                                  //new ColumnCellText ("D"' true)'                                  new ColumnCellDoodle ("E"' true)'                                  //new ColumnCellText ("A"' true)                              }                          };                          //return new ColumnCellRating ("G"' true);                      }'                      View = this                  };
Magic Number,Hyena.Data.Gui.Tests,GridViewTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListViewTestModule.cs,GridViewTestModule,The following statement contains a magic number: SetDefaultSize (800' 600);
Magic Number,Hyena.Data.Gui.Tests,GridViewTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListViewTestModule.cs,GridViewTestModule,The following statement contains a magic number: SetDefaultSize (800' 600);
Magic Number,Hyena.Data.Gui.Tests,GridViewTestModule,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListViewTestModule.cs,GridViewTestModule,The following statement contains a magic number: var vbox = new VBox () { Spacing = 12 };
Magic Number,Hyena.Data.Gui.Tests,Model,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListViewTestModule.cs,Model,The following statement contains a magic number: for (int i = 0; i < 1000; i++) {                  store.Add (new ModelItem (i' random));              }
Magic Number,Hyena.Data.Gui.Tests,ModelItem,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListViewTestModule.cs,ModelItem,The following statement contains a magic number: b = rand.Next (0' 255);
Magic Number,Hyena.Data.Gui.Tests,ModelItem,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListViewTestModule.cs,ModelItem,The following statement contains a magic number: g = rand.Next (0' 5);
Magic Number,Hyena.Gui.Canvas,Animation,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\AnimationManager.cs,Animation,The following statement contains a magic number: Duration = 1000;
Magic Number,Hyena.Gui.Canvas,CanvasHost,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\CanvasHost.cs,OnExposeEvent,The following statement contains a magic number: foreach (Gdk.Rectangle damage in evnt.Region.GetRectangles ()) {                  cr.Rectangle (damage.X' damage.Y' damage.Width' damage.Height);                  cr.Clip ();                    cr.Translate (Allocation.X' Allocation.Y);                  canvas_child.Render (context);                  cr.Translate (-Allocation.X' -Allocation.Y);                    if (Debug) {                      cr.LineWidth = 1.0;                      cr.SetSourceColor (CairoExtensions.RgbToColor (  			(uint)(rand = rand ?? new Random ()).Next (0' 0xffffff)));                      cr.Rectangle (damage.X + 0.5' damage.Y + 0.5' damage.Width - 1' damage.Height - 1);                      cr.Stroke ();                  }                    cr.ResetClip ();              }
Magic Number,Hyena.Gui.Canvas,CanvasHost,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\CanvasHost.cs,OnExposeEvent,The following statement contains a magic number: foreach (Gdk.Rectangle damage in evnt.Region.GetRectangles ()) {                  cr.Rectangle (damage.X' damage.Y' damage.Width' damage.Height);                  cr.Clip ();                    cr.Translate (Allocation.X' Allocation.Y);                  canvas_child.Render (context);                  cr.Translate (-Allocation.X' -Allocation.Y);                    if (Debug) {                      cr.LineWidth = 1.0;                      cr.SetSourceColor (CairoExtensions.RgbToColor (  			(uint)(rand = rand ?? new Random ()).Next (0' 0xffffff)));                      cr.Rectangle (damage.X + 0.5' damage.Y + 0.5' damage.Width - 1' damage.Height - 1);                      cr.Stroke ();                  }                    cr.ResetClip ();              }
Magic Number,Hyena.Gui.Canvas,FpsCalculator,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\FpsCalculator.cs,FpsCalculator,The following statement contains a magic number: update_interval = TimeSpan.FromSeconds (0.5);
Magic Number,Hyena.Gui.Canvas,Prelight,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\Prelight.cs,Gradient,The following statement contains a magic number: var x = rect.Width / 2.0;
Magic Number,Hyena.Gui.Canvas,Prelight,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\Prelight.cs,Gradient,The following statement contains a magic number: var y = rect.Height / 2.0;
Magic Number,Hyena.Gui.Canvas,Prelight,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\Prelight.cs,Gradient,The following statement contains a magic number: var grad = new Cairo.RadialGradient (x' y' 0' x' y' rect.Width / 2.0);
Magic Number,Hyena.Gui.Canvas,Prelight,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\Prelight.cs,Gradient,The following statement contains a magic number: grad.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.1 * opacity));
Magic Number,Hyena.Gui.Canvas,Prelight,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\Prelight.cs,Gradient,The following statement contains a magic number: grad.AddColorStop (1' new Cairo.Color (0' 0' 0' 0.35 * opacity));
Magic Number,Hyena.Gui.Canvas,ShadowMarginStyle,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\ShadowMarginStyle.cs,Apply,The following statement contains a magic number: if (Fill != null) {                  cr.Rectangle (shadow_size' shadow_size' width - ShadowSize * 2' height - ShadowSize * 2);                  Fill.Apply (cr);                  cr.Fill ();              }
Magic Number,Hyena.Gui.Canvas,ShadowMarginStyle,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\ShadowMarginStyle.cs,Apply,The following statement contains a magic number: if (Fill != null) {                  cr.Rectangle (shadow_size' shadow_size' width - ShadowSize * 2' height - ShadowSize * 2);                  Fill.Apply (cr);                  cr.Fill ();              }
Magic Number,Hyena.Gui.Canvas,ShadowMarginStyle,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\ShadowMarginStyle.cs,Apply,The following statement contains a magic number: for (int i = 0; i < steps; i++) {                  CairoExtensions.RoundedRectangle (cr'                      i + 0.5'                      i + 0.5'                      (width - 2 * i) - 1'                      (height - 2 * i) - 1'                      steps - i);                    color.A = opacity_step * (i + 1);  		cr.SetSourceColor (color);                  cr.Stroke ();              }
Magic Number,Hyena.Gui.Canvas,ShadowMarginStyle,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\ShadowMarginStyle.cs,Apply,The following statement contains a magic number: for (int i = 0; i < steps; i++) {                  CairoExtensions.RoundedRectangle (cr'                      i + 0.5'                      i + 0.5'                      (width - 2 * i) - 1'                      (height - 2 * i) - 1'                      steps - i);                    color.A = opacity_step * (i + 1);  		cr.SetSourceColor (color);                  cr.Stroke ();              }
Magic Number,Hyena.Gui.Canvas,ShadowMarginStyle,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\ShadowMarginStyle.cs,Apply,The following statement contains a magic number: for (int i = 0; i < steps; i++) {                  CairoExtensions.RoundedRectangle (cr'                      i + 0.5'                      i + 0.5'                      (width - 2 * i) - 1'                      (height - 2 * i) - 1'                      steps - i);                    color.A = opacity_step * (i + 1);  		cr.SetSourceColor (color);                  cr.Stroke ();              }
Magic Number,Hyena.Gui.Canvas,ShadowMarginStyle,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\ShadowMarginStyle.cs,Apply,The following statement contains a magic number: for (int i = 0; i < steps; i++) {                  CairoExtensions.RoundedRectangle (cr'                      i + 0.5'                      i + 0.5'                      (width - 2 * i) - 1'                      (height - 2 * i) - 1'                      steps - i);                    color.A = opacity_step * (i + 1);  		cr.SetSourceColor (color);                  cr.Stroke ();              }
Magic Number,Hyena.Gui.Canvas,Slider,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\Slider.cs,Slider,The following statement contains a magic number: Margin = new Thickness (3);
Magic Number,Hyena.Gui.Canvas,Slider,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\Slider.cs,Slider,The following statement contains a magic number: MarginStyle = new ShadowMarginStyle {                  ShadowSize = 3'                  ShadowOpacity = 0.25              };
Magic Number,Hyena.Gui.Canvas,Slider,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\Slider.cs,Slider,The following statement contains a magic number: MarginStyle = new ShadowMarginStyle {                  ShadowSize = 3'                  ShadowOpacity = 0.25              };
Magic Number,Hyena.Gui.Canvas,Slider,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\Slider.cs,SetPendingValueFromX,The following statement contains a magic number: PendingValue = Math.Max (0' Math.Min ((x - ThrobberSize / 2) / RenderSize.Width' 1));
Magic Number,Hyena.Gui.Canvas,Slider,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\Slider.cs,ClippedRender,The following statement contains a magic number: double throbber_r = ThrobberSize / 2.0;
Magic Number,Hyena.Gui.Canvas,Slider,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\Slider.cs,ClippedRender,The following statement contains a magic number: double throbber_y = (Allocation.Height - ThrobberSize) / 2.0 - Margin.Top + throbber_r;
Magic Number,Hyena.Gui.Canvas,Slider,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\Slider.cs,ClippedRender,The following statement contains a magic number: Color fill_color = CairoExtensions.ColorShade (color' 0.4);
Magic Number,Hyena.Gui.Canvas,Slider,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\Slider.cs,ClippedRender,The following statement contains a magic number: Color light_fill_color = CairoExtensions.ColorShade (color' 0.3);
Magic Number,Hyena.Gui.Canvas,Slider,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\Slider.cs,ClippedRender,The following statement contains a magic number: fill.AddColorStop (0.5' fill_color);
Magic Number,Hyena.Gui.Canvas,Slider,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\Slider.cs,ClippedRender,The following statement contains a magic number: cr.Arc (throbber_x' throbber_y' throbber_r' 0' Math.PI * 2);
Magic Number,Hyena.Gui.Canvas,TestTile,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\TestTile.cs,ClippedRender,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' 0' 0' RenderSize.Width' RenderSize.Height' 5);
Magic Number,Hyena.Gui.Canvas,TextBlock,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\TextBlock.cs,Arrange,The following statement contains a magic number: if (text_alloc.IsEmpty) {                  InvalidateRender (text_alloc);              } else {                  invalidation_rect = text_alloc;                  invalidation_rect.Union (new_alloc);                    // Some padding' likely because of the pen size for                  // showing the actual text layout in the render pass                  invalidation_rect.X -= 2;                  invalidation_rect.Y -= 2;                  invalidation_rect.Width += 4;                  invalidation_rect.Height += 4;                    InvalidateRender (invalidation_rect);              }
Magic Number,Hyena.Gui.Canvas,TextBlock,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\TextBlock.cs,Arrange,The following statement contains a magic number: if (text_alloc.IsEmpty) {                  InvalidateRender (text_alloc);              } else {                  invalidation_rect = text_alloc;                  invalidation_rect.Union (new_alloc);                    // Some padding' likely because of the pen size for                  // showing the actual text layout in the render pass                  invalidation_rect.X -= 2;                  invalidation_rect.Y -= 2;                  invalidation_rect.Width += 4;                  invalidation_rect.Height += 4;                    InvalidateRender (invalidation_rect);              }
Magic Number,Hyena.Gui.Canvas,TextBlock,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\TextBlock.cs,Arrange,The following statement contains a magic number: if (text_alloc.IsEmpty) {                  InvalidateRender (text_alloc);              } else {                  invalidation_rect = text_alloc;                  invalidation_rect.Union (new_alloc);                    // Some padding' likely because of the pen size for                  // showing the actual text layout in the render pass                  invalidation_rect.X -= 2;                  invalidation_rect.Y -= 2;                  invalidation_rect.Width += 4;                  invalidation_rect.Height += 4;                    InvalidateRender (invalidation_rect);              }
Magic Number,Hyena.Gui.Canvas,TextBlock,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\TextBlock.cs,Arrange,The following statement contains a magic number: if (text_alloc.IsEmpty) {                  InvalidateRender (text_alloc);              } else {                  invalidation_rect = text_alloc;                  invalidation_rect.Union (new_alloc);                    // Some padding' likely because of the pen size for                  // showing the actual text layout in the render pass                  invalidation_rect.X -= 2;                  invalidation_rect.Y -= 2;                  invalidation_rect.Width += 4;                  invalidation_rect.Height += 4;                    InvalidateRender (invalidation_rect);              }
Magic Number,Hyena.Gui.Canvas,TextBlock,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Canvas\TextBlock.cs,ClippedRender,The following statement contains a magic number: if (fade) {                  LinearGradient mask = new LinearGradient (RenderSize.Width - 20' 0' RenderSize.Width' 0);                  mask.AddColorStop (0' new Color (0' 0' 0' 1));                  mask.AddColorStop (1' new Color (0' 0' 0' 0));                    cr.PopGroupToSource ();                  cr.Mask (mask);  		mask.Dispose ();              }
Missing Default,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,OnColumnLeftClicked,The following switch statement is missing a default case: switch (sort_column.SortType) {                          case SortType.Ascending:    sort_column.SortType = SortType.Descending; break;                          case SortType.Descending:   sort_column.SortType = SortType.None; break;                          case SortType.None:         sort_column.SortType = SortType.Ascending; break;                      }
Missing Default,Hyena.Data.Gui,ListView<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\ListView\ListView.cs,HandleKeyboardScrollKey,The following switch statement is missing a default case: switch (press.Key) {              case Gdk.Key.k:              case Gdk.Key.K:              case Gdk.Key.Up:              case Gdk.Key.KP_Up:                  if (!HeaderFocused) {                      handled = (direction == KeyDirection.Press)                          ? KeyboardScroll (press.State' -items_per_row' true)                          : UpdateSelectionForKeyboardScroll (press.State' -items_per_row);                  }                  break;                case Gdk.Key.j:              case Gdk.Key.J:              case Gdk.Key.Down:              case Gdk.Key.KP_Down:                  if (direction == KeyDirection.Press) {                      if (!HeaderFocused) {                          handled = KeyboardScroll (press.State' items_per_row' true);                      } else {                          handled = true;                          HeaderFocused = false;                      }                  } else if (!HeaderFocused) {                      handled = UpdateSelectionForKeyboardScroll (press.State' items_per_row);                  }                  break;                case Gdk.Key.l:              case Gdk.Key.L:              case Gdk.Key.Right:              case Gdk.Key.KP_Right:                  handled = true;                  if (direction == KeyDirection.Press) {                      if (grid && !HeaderFocused) {                          handled = KeyboardScroll (press.State' 1' true);                      } else if (ActiveColumn + 1 < column_cache.Length) {                          ActiveColumn++;                          InvalidateHeader ();                      }                  } else if (grid && !HeaderFocused) {                      handled = UpdateSelectionForKeyboardScroll (press.State' 1);                  }                  break;                case Gdk.Key.h:              case Gdk.Key.H:              case Gdk.Key.Left:              case Gdk.Key.KP_Left:                  handled = true;                  if (direction == KeyDirection.Press) {                      if (grid && !HeaderFocused) {                          handled = KeyboardScroll (press.State' -1' true);                      } else if (ActiveColumn - 1 >= 0) {                          ActiveColumn--;                          InvalidateHeader ();                      }                  } else if (grid && !HeaderFocused) {                      handled = UpdateSelectionForKeyboardScroll (press.State' -1);                  }                  break;                case Gdk.Key.Page_Up:              case Gdk.Key.KP_Page_Up:                  if (!HeaderFocused) {                      int relativeRow = (int)(-vadjustment.PageIncrement / (double)ChildSize.Height) * items_per_row;                      handled = vadjustment != null && (direction == KeyDirection.Press                                                        ? KeyboardScroll (press.State' relativeRow' false)                                                        : UpdateSelectionForKeyboardScroll (press.State' relativeRow));                  }                  break;                case Gdk.Key.Page_Down:              case Gdk.Key.KP_Page_Down:                  if (!HeaderFocused) {                      int relativeRow = (int)(vadjustment.PageIncrement / (double)ChildSize.Height) * items_per_row;                      handled = vadjustment != null && (direction == KeyDirection.Press                                                            ? KeyboardScroll (press.State' relativeRow' false)                                                            : UpdateSelectionForKeyboardScroll (press.State' relativeRow));                  }                  break;                case Gdk.Key.Home:              case Gdk.Key.KP_Home:                  if (!HeaderFocused) {                      handled = direction == KeyDirection.Press                          ? KeyboardScroll (press.State' int.MinValue' true)                          : UpdateSelectionForKeyboardScroll (press.State' int.MinValue);                  }                  break;                case Gdk.Key.End:              case Gdk.Key.KP_End:                  if (!HeaderFocused) {                      handled = direction == KeyDirection.Press                          ? KeyboardScroll (press.State' int.MaxValue' true)                          : UpdateSelectionForKeyboardScroll (press.State' int.MaxValue);                  }                  break;              }
Missing Default,Hyena.Gui,EditableUndoAdapter<T>,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui\EditableUndoAdapter.cs,OnKeyPressEvent,The following switch statement is missing a default case: switch (args.Event.Key) {                      case Gdk.Key.z:                          undo_manager.Undo ();                          args.RetVal = true;                          break;                      case Gdk.Key.Z:                      case Gdk.Key.y:                          undo_manager.Redo ();                          args.RetVal = true;                          break;                  }
Missing Default,Hyena.Widgets,AnimatedBox,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\AnimatedBox.cs,OnActorStep,The following switch statement is missing a default case: switch (actor.Target.AnimationState) {              case AnimationState.Coming:                  actor.Target.Percent = actor.Percent;                  if (actor.Expired) {                      actor.Target.AnimationState = AnimationState.Idle;                      return false;                  }                  break;              case AnimationState.IntendingToGo:                  actor.Target.AnimationState = AnimationState.Going;                  actor.Target.Bias = actor.Percent;                  actor.Reset ((uint)(actor.Target.Duration * actor.Percent));                  break;              case AnimationState.Going:                  if (actor.Expired) {                      actor.Target.Unparent ();                      children.Remove (actor.Target.Node);                      return false;                  } else {                      actor.Target.Percent = 1.0 - actor.Percent;                  }                  break;              }
Missing Default,Hyena.Widgets,RatingEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,OnKeyPressEvent,The following switch statement is missing a default case: switch (evnt.Key) {                  case Gdk.Key.Up:                  case Gdk.Key.Right:                  case Gdk.Key.plus:                  case Gdk.Key.equal:                      Value++;                      return true;                    case Gdk.Key.Down:                  case Gdk.Key.Left:                  case Gdk.Key.minus:                      Value--;                      return true;              }
Missing Default,Hyena.Widgets,RatingEntry,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\RatingEntry.cs,HandleScroll,The following switch statement is missing a default case: switch (args.Direction) {                  case Gdk.ScrollDirection.Up:                  case Gdk.ScrollDirection.Right:                      Value++;                      return true;                    case Gdk.ScrollDirection.Down:                  case Gdk.ScrollDirection.Left:                      Value--;                      return true;              }
Missing Default,Hyena.Widgets,ComplexMenuItem,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\ComplexMenuItem.cs,OnKeyPressEventProxy,The following switch statement is missing a default case: switch(args.Event.Key) {                  case Gdk.Key.Up:                  case Gdk.Key.Down:                  case Gdk.Key.Escape:                      return;              }
Missing Default,Hyena.Widgets,HigMessageDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\HigMessageDialog.cs,HigMessageDialog,The following switch statement is missing a default case: switch (type) {              case Gtk.MessageType.Error:                  image = new Gtk.Image (Gtk.Stock.DialogError' Gtk.IconSize.Dialog);                  break;              case Gtk.MessageType.Question:                  image = new Gtk.Image (Gtk.Stock.DialogQuestion' Gtk.IconSize.Dialog);                  break;              case Gtk.MessageType.Info:                  image = new Gtk.Image (Gtk.Stock.DialogInfo' Gtk.IconSize.Dialog);                  break;              case Gtk.MessageType.Warning:                  image = new Gtk.Image (Gtk.Stock.DialogWarning' Gtk.IconSize.Dialog);                  break;              }
Missing Default,Hyena.Widgets,HigMessageDialog,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Widgets\HigMessageDialog.cs,HigMessageDialog,The following switch statement is missing a default case: switch (buttons) {              case Gtk.ButtonsType.None:                  break;              case Gtk.ButtonsType.Ok:                  AddButton (Gtk.Stock.Ok' Gtk.ResponseType.Ok' true);                  break;              case Gtk.ButtonsType.Close:                  AddButton (Gtk.Stock.Close' Gtk.ResponseType.Close' true);                  break;              case Gtk.ButtonsType.Cancel:                  AddButton (Gtk.Stock.Cancel' Gtk.ResponseType.Cancel' true);                  break;              case Gtk.ButtonsType.YesNo:                  AddButton (Gtk.Stock.No' Gtk.ResponseType.No' false);                  AddButton (Gtk.Stock.Yes' Gtk.ResponseType.Yes' true);                  break;              case Gtk.ButtonsType.OkCancel:                  AddButton (Gtk.Stock.Cancel' Gtk.ResponseType.Cancel' false);                  AddButton (Gtk.Stock.Ok' Gtk.ResponseType.Ok' true);                  break;              }
Missing Default,Hyena.Gui.Theming,GtkColors,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Gui.Theming\GtkColors.cs,RefreshColors,The following switch statement is missing a default case: switch ((GtkColorClass)c) {                              case GtkColorClass.Light:      color = widget.Style.LightColors[s]; break;                              case GtkColorClass.Mid:        color = widget.Style.MidColors[s];   break;                              case GtkColorClass.Dark:       color = widget.Style.DarkColors[s];  break;                              case GtkColorClass.Base:       color = widget.Style.BaseColors[s];  break;                              case GtkColorClass.Text:       color = widget.Style.TextColors[s];  break;                              case GtkColorClass.Background: color = widget.Style.Backgrounds[s]; break;                              case GtkColorClass.Foreground: color = widget.Style.Foregrounds[s]; break;                          }
Missing Default,Hyena.Data.Gui.Accessibility,ColumnHeaderCellTextAccessible,C:\repos\mono_f-spot\lib\Hyena\Hyena.Gui\Hyena.Data.Gui\Accessibility\ColumnHeaderCellTextAccessible.cs,DoAction,The following switch statement is missing a default case: switch ((Actions)action) {                  case Actions.Menu: parent.InvokeColumnHeaderMenu (this); break;                  case Actions.Click: parent.ClickColumnHeader (this); break;              }
