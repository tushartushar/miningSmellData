Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,OnButtonPressEvent,Cyclomatic complexity of the method is 8
Complex Method,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,OnMotionNotifyEvent,Cyclomatic complexity of the method is 8
Complex Method,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,PaintRectangle,Cyclomatic complexity of the method is 8
Long Parameter List,FSpot.Widgets,RatingRenderer,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\RatingRenderer.cs,RenderPixbuf,The method has 6 parameters. Parameters: showEmptyStars' isHovering' hoverValue' fillOpacity' hoverFillOpacity' strokeOpacity
Long Parameter List,FSpot.Widgets,RatingRenderer,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\RatingRenderer.cs,Render,The method has 9 parameters. Parameters: cr' area' color' showEmptyStars' isHovering' hoverValue' fillOpacity' hoverFillOpacity' strokeOpacity
Long Parameter List,FSpot.Transitions,CairoTransition,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Transitions\CairoTransition.cs,Draw,The method has 6 parameters. Parameters: d' prev' next' width' height' progress
Long Parameter List,FSpot.Transitions,CairoTransition,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Transitions\CairoTransition.cs,Draw,The method has 6 parameters. Parameters: cr' prev' next' width' height' progress
Long Parameter List,FSpot.Transitions,SlideShowTransition,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Transitions\SlideShowTransition.cs,Draw,The method has 6 parameters. Parameters: d' prev' next' width' height' progress
Long Parameter List,FSpot.Gui,CompositeUtils,C:\repos\mono_f-spot\src\Core\FSpot.Gui\CompositeUtils.cs,gdk_property_change,The method has 7 parameters. Parameters: window' property' type' format' mode' data' nelements
Long Parameter List,FSpot.Gui,CompositeUtils,C:\repos\mono_f-spot\src\Core\FSpot.Gui\CompositeUtils.cs,gdk_property_change,The method has 7 parameters. Parameters: window' property' type' format' mode' data' nelements
Long Parameter List,FSpot.Gui,CompositeUtils,C:\repos\mono_f-spot\src\Core\FSpot.Gui\CompositeUtils.cs,ChangeProperty,The method has 5 parameters. Parameters: win' property' type' mode' data
Long Parameter List,FSpot.Gui,CompositeUtils,C:\repos\mono_f-spot\src\Core\FSpot.Gui\CompositeUtils.cs,ChangeProperty,The method has 5 parameters. Parameters: win' property' type' mode' data
Long Statement,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,Draw,The length of the statement  "			GtkBeans.Style.PaintFlatBox (style' pixmap' StateType.Normal' ShadowType.None' null' this' "curve_bg"' 0' 0' Allocation.Width' Allocation.Height); " is 146.
Long Statement,FSpot.Widgets,DateEdit,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\DateEdit.cs,HandleDateEntryChanged,The length of the statement  "			if (DateTimeOffset.TryParseExact (date_entry.Text' "d"' null' System.Globalization.DateTimeStyles.AssumeLocal | System.Globalization.DateTimeStyles.AllowWhiteSpaces' out new_date)) " is 180.
Long Statement,FSpot.Widgets,DateEdit,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\DateEdit.cs,HandleTimeEntryChanged,The length of the statement  "			if (DateTimeOffset.TryParseExact (string.Format ("{0} {1}"' DateTimeOffset.ToString ("d")' time_entry.Text)' ShowSeconds ? "G" : "g"' null' System.Globalization.DateTimeStyles.AssumeLocal | System.Globalization.DateTimeStyles.AllowWhiteSpaces' out new_date)) { " is 260.
Long Statement,FSpot.Widgets,DateEdit,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\DateEdit.cs,HandleTimeEntryChanged,The length of the statement  "				DateTimeOffset = DateTimeOffset.AddHours (new_date.Hour - DateTimeOffset.Hour).AddMinutes (new_date.Minute - DateTimeOffset.Minute).AddSeconds (new_date.Second - DateTimeOffset.Second); " is 185.
Long Statement,FSpot.Widgets,HighlightedBox,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\HighlightedBox.cs,OnExposeEvent,The length of the statement  "			GdkWindow.DrawRectangle(Style.ForegroundGC(StateType.Normal)' false' 0' 0' Allocation.Width - 1' Allocation.Height - 1); " is 120.
Long Statement,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,WindowCoordsToImage,The length of the statement  "			win = PixbufUtils.TransformOrientation ((int)scaled_width' (int)scaled_height' win' PixbufUtils.ReverseTransformation (pixbuf_orientation)); " is 140.
Long Statement,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,WindowCoordsToImage,The length of the statement  "			return  new Point ((int) Math.Floor (win.X * (double)(((int)PixbufOrientation <= 4 ? Pixbuf.Width : Pixbuf.Height) - 1) / (double)(scaled_width - 1) + .5)' " is 155.
Long Statement,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,WindowCoordsToImage,The length of the statement  "					   (int) Math.Floor (win.Y * (double)(((int)PixbufOrientation <= 4 ? Pixbuf.Height : Pixbuf.Width) - 1) / (double)(scaled_height - 1) + .5)); " is 138.
Long Statement,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The length of the statement  "			return new Point ((int) Math.Floor (image.X * (double) (scaled_width - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Width : Pixbuf.Height) - 1) + 0.5) + x_offset' " is 162.
Long Statement,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The length of the statement  "			                  (int) Math.Floor (image.Y * (double) (scaled_height - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Height : Pixbuf.Width) - 1) + 0.5) + y_offset); " is 146.
Long Statement,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The length of the statement  "			win.X = (int) Math.Floor (image.X * (double) (scaled_width - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Width : Pixbuf.Height) - 1) + 0.5) + x_offset; " is 152.
Long Statement,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The length of the statement  "			win.Y = (int) Math.Floor (image.Y * (double) (scaled_height - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Height : Pixbuf.Width) - 1) + 0.5) + y_offset; " is 153.
Long Statement,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The length of the statement  "			win.Width = (int) Math.Floor ((image.X + image.Width) * (double) (scaled_width - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Width : Pixbuf.Height) - 1) + 0.5) - win.X + x_offset; " is 180.
Long Statement,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The length of the statement  "			win.Height = (int) Math.Floor ((image.Y + image.Height) * (double) (scaled_height - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Height : Pixbuf.Width) - 1) + 0.5) - win.Y + y_offset; " is 183.
Long Statement,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,OnScrollEvent,The length of the statement  "				ZoomAboutPoint ((evnt.Direction == ScrollDirection.Up || evnt.Direction == ScrollDirection.Right) ? ZOOM_FACTOR : 1.0 / ZOOM_FACTOR' " is 132.
Long Statement,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,DoZoom,The length of the statement  "                Hadjustment.Value = XOffset = Clamp ((int)(x_anchor * scaled_width - x)' 0' (int)(Hadjustment.Upper - Hadjustment.PageSize)); " is 125.
Long Statement,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,DoZoom,The length of the statement  "                Vadjustment.Value = YOffset = Clamp ((int)(y_anchor * scaled_height - y)' 0' (int)(Vadjustment.Upper - Vadjustment.PageSize)); " is 126.
Long Statement,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,PaintRectangle,The length of the statement  "				PaintBackground (new Rectangle (x_offset + (int)scaled_width' y_offset' Allocation.Width - x_offset - (int)scaled_width' (int)scaled_height)' area); " is 148.
Long Statement,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,PaintRectangle,The length of the statement  "				PaintBackground (new Rectangle (0' y_offset + (int)scaled_height' Allocation.Width' Allocation.Height - y_offset - (int)scaled_height)' area); " is 142.
Long Statement,FSpot.Widgets,Layout,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Layout.cs,OnRealized,The length of the statement  "						    Gdk.WindowAttributesType.X | Gdk.WindowAttributesType.Y | Gdk.WindowAttributesType.Visual | Gdk.WindowAttributesType.Colormap); " is 127.
Long Statement,FSpot.Widgets,Layout,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Layout.cs,OnRealized,The length of the statement  "						     Gdk.WindowAttributesType.X | Gdk.WindowAttributesType.Y | Gdk.WindowAttributesType.Visual | Gdk.WindowAttributesType.Colormap); " is 127.
Long Statement,FSpot.Widgets,CellGridView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CellGridView.cs,TopLeftVisibleCell,The length of the statement  "            return CellAtPosition (border_size' (int) (Vadjustment.Value + Allocation.Height * (Vadjustment.Value / Vadjustment.Upper)) + border_size + 8); " is 143.
Long Statement,FSpot.Gui,CompositeUtils,C:\repos\mono_f-spot\src\Core\FSpot.Gui\CompositeUtils.cs,InputShapeCombineMask,The length of the statement  "			gtk_widget_input_shape_combine_mask (w.Handle' shape_mask == null ? IntPtr.Zero : shape_mask.Handle' offset_x' offset_y); " is 121.
Complex Conditional,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,PaintRectangle,The conditional expression  "zoom == 1.0 &&  			    !Pixbuf.HasAlpha &&  			    Pixbuf.BitsPerSample == 8 &&  			    pixbuf_orientation == ImageOrientation.TopLeft"  is complex.
Complex Conditional,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ConstrainSelection,The conditional expression  "(double)sel.Width > (double)sel.Height && selection_xy_ratio < 1 ||  			    (double)sel.Width < (double)sel.Height && selection_xy_ratio > 1"  is complex.
Complex Conditional,FSpot.Widgets,SaneTreeView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\SaneTreeView.cs,OnButtonPressEvent,The conditional expression  "(button.Button == 1 || button.Button == 2) &&  						((button.State & ModifierType.ControlMask) != 0 || (button.State & ModifierType.ShiftMask) == 0)"  is complex.
Complex Conditional,FSpot.Widgets,SaneTreeView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\SaneTreeView.cs,DidNotDrag,The conditional expression  "(button.Button == 1 || button.Button == 2)  					&& ((button.State & ModifierType.ControlMask) != 0 ||  					(button.State & ModifierType.ShiftMask) == 0)  					&& row_selected_on_button_down"  is complex.
Complex Conditional,FSpot.Widgets,CellGridView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CellGridView.cs,CellAtPosition,The conditional expression  "crop_visible                  && ((y < (int)Vadjustment.Value || y > (int)Vadjustment.Value + Allocation.Height)                  || (x < (int)Hadjustment.Value || x > (int)Hadjustment.Value + Allocation.Width))"  is complex.
Magic Number,FSpot.Widgets,CheckPattern,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CheckPattern.cs,CheckPattern,The following statement contains a magic number: check_size = 32;
Magic Number,FSpot.Widgets,CheckPattern,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CheckPattern.cs,s_to_h,The following statement contains a magic number: return (uint)(Byte.Parse (color.Substring (1'2)' System.Globalization.NumberStyles.AllowHexSpecifier) << 16) +  			       (uint)(Byte.Parse (color.Substring (3'2)' System.Globalization.NumberStyles.AllowHexSpecifier) << 8) +  			       (uint)(Byte.Parse (color.Substring (5'2)' System.Globalization.NumberStyles.AllowHexSpecifier));
Magic Number,FSpot.Widgets,CheckPattern,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CheckPattern.cs,s_to_h,The following statement contains a magic number: return (uint)(Byte.Parse (color.Substring (1'2)' System.Globalization.NumberStyles.AllowHexSpecifier) << 16) +  			       (uint)(Byte.Parse (color.Substring (3'2)' System.Globalization.NumberStyles.AllowHexSpecifier) << 8) +  			       (uint)(Byte.Parse (color.Substring (5'2)' System.Globalization.NumberStyles.AllowHexSpecifier));
Magic Number,FSpot.Widgets,CheckPattern,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CheckPattern.cs,s_to_h,The following statement contains a magic number: return (uint)(Byte.Parse (color.Substring (1'2)' System.Globalization.NumberStyles.AllowHexSpecifier) << 16) +  			       (uint)(Byte.Parse (color.Substring (3'2)' System.Globalization.NumberStyles.AllowHexSpecifier) << 8) +  			       (uint)(Byte.Parse (color.Substring (5'2)' System.Globalization.NumberStyles.AllowHexSpecifier));
Magic Number,FSpot.Widgets,CheckPattern,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CheckPattern.cs,s_to_h,The following statement contains a magic number: return (uint)(Byte.Parse (color.Substring (1'2)' System.Globalization.NumberStyles.AllowHexSpecifier) << 16) +  			       (uint)(Byte.Parse (color.Substring (3'2)' System.Globalization.NumberStyles.AllowHexSpecifier) << 8) +  			       (uint)(Byte.Parse (color.Substring (5'2)' System.Globalization.NumberStyles.AllowHexSpecifier));
Magic Number,FSpot.Widgets,CheckPattern,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CheckPattern.cs,s_to_h,The following statement contains a magic number: return (uint)(Byte.Parse (color.Substring (1'2)' System.Globalization.NumberStyles.AllowHexSpecifier) << 16) +  			       (uint)(Byte.Parse (color.Substring (3'2)' System.Globalization.NumberStyles.AllowHexSpecifier) << 8) +  			       (uint)(Byte.Parse (color.Substring (5'2)' System.Globalization.NumberStyles.AllowHexSpecifier));
Magic Number,FSpot.Widgets,CheckPattern,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CheckPattern.cs,s_to_h,The following statement contains a magic number: return (uint)(Byte.Parse (color.Substring (1'2)' System.Globalization.NumberStyles.AllowHexSpecifier) << 16) +  			       (uint)(Byte.Parse (color.Substring (3'2)' System.Globalization.NumberStyles.AllowHexSpecifier) << 8) +  			       (uint)(Byte.Parse (color.Substring (5'2)' System.Globalization.NumberStyles.AllowHexSpecifier));
Magic Number,FSpot.Widgets,CheckPattern,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CheckPattern.cs,s_to_h,The following statement contains a magic number: return (uint)(Byte.Parse (color.Substring (1'2)' System.Globalization.NumberStyles.AllowHexSpecifier) << 16) +  			       (uint)(Byte.Parse (color.Substring (3'2)' System.Globalization.NumberStyles.AllowHexSpecifier) << 8) +  			       (uint)(Byte.Parse (color.Substring (5'2)' System.Globalization.NumberStyles.AllowHexSpecifier));
Magic Number,FSpot.Widgets,CheckPattern,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CheckPattern.cs,c_to_h,The following statement contains a magic number: return (((uint)color.Red) << 16) +  			       (((uint)color.Green) << 8) +  			       (((uint)color.Blue));
Magic Number,FSpot.Widgets,CheckPattern,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CheckPattern.cs,c_to_h,The following statement contains a magic number: return (((uint)color.Red) << 16) +  			       (((uint)color.Green) << 8) +  			       (((uint)color.Blue));
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,SplineSolve,The following statement contains a magic number: for (int k = x.Length - 2; k >= 0; --k)  				y2[k] = y2[k] * y2[k + 1] + u[k];
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,SplineEval,The following statement contains a magic number: while (k_hi - k_lo > 1) {  				int k = (k_hi + k_lo) / 2;  				if (x[k] > val)  					k_hi = k;  				else  					k_lo = k;  			}
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,LinearEval,The following statement contains a magic number: while (k_hi - k_lo > 1) {  				int k = (k_hi + k_lo) / 2;  				if (x[k] > val)  					k_hi = k;  				else  					k_lo = k;  			}
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  				pixmap.DrawLine (style.DarkGC (state)'  						 x_offset'  						 i * (int)(height / 4.0) + y_offset'  						 width + x_offset'  						 i * (int)(height / 4.0) + y_offset);  				pixmap.DrawLine (style.DarkGC (state)'  						 i * (int)(width / 4.0) + x_offset'  						 y_offset'  						 i * (int)(width / 4.0) + x_offset'  						 height + y_offset);  			}
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  				pixmap.DrawLine (style.DarkGC (state)'  						 x_offset'  						 i * (int)(height / 4.0) + y_offset'  						 width + x_offset'  						 i * (int)(height / 4.0) + y_offset);  				pixmap.DrawLine (style.DarkGC (state)'  						 i * (int)(width / 4.0) + x_offset'  						 y_offset'  						 i * (int)(width / 4.0) + x_offset'  						 height + y_offset);  			}
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  				pixmap.DrawLine (style.DarkGC (state)'  						 x_offset'  						 i * (int)(height / 4.0) + y_offset'  						 width + x_offset'  						 i * (int)(height / 4.0) + y_offset);  				pixmap.DrawLine (style.DarkGC (state)'  						 i * (int)(width / 4.0) + x_offset'  						 y_offset'  						 i * (int)(width / 4.0) + x_offset'  						 height + y_offset);  			}
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  				pixmap.DrawLine (style.DarkGC (state)'  						 x_offset'  						 i * (int)(height / 4.0) + y_offset'  						 width + x_offset'  						 i * (int)(height / 4.0) + y_offset);  				pixmap.DrawLine (style.DarkGC (state)'  						 i * (int)(width / 4.0) + x_offset'  						 y_offset'  						 i * (int)(width / 4.0) + x_offset'  						 height + y_offset);  			}
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  				pixmap.DrawLine (style.DarkGC (state)'  						 x_offset'  						 i * (int)(height / 4.0) + y_offset'  						 width + x_offset'  						 i * (int)(height / 4.0) + y_offset);  				pixmap.DrawLine (style.DarkGC (state)'  						 i * (int)(width / 4.0) + x_offset'  						 y_offset'  						 i * (int)(width / 4.0) + x_offset'  						 height + y_offset);  			}
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,Draw,The following statement contains a magic number: if (CurveType != CurveType.Free)  				foreach (var keyval in points) {  					if (keyval.Key < MinX)  						continue;  					int x = Project (keyval.Key' MinX' MaxX' width);  					int y = height - Project (keyval.Value' MinY' MaxY' height);  					pixmap.DrawArc (style.ForegroundGC (state)' true' x' y' radius * 2' radius * 2' 0' 360*64);  				}
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,Draw,The following statement contains a magic number: if (CurveType != CurveType.Free)  				foreach (var keyval in points) {  					if (keyval.Key < MinX)  						continue;  					int x = Project (keyval.Key' MinX' MaxX' width);  					int y = height - Project (keyval.Value' MinY' MaxY' height);  					pixmap.DrawArc (style.ForegroundGC (state)' true' x' y' radius * 2' radius * 2' 0' 360*64);  				}
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,Draw,The following statement contains a magic number: if (CurveType != CurveType.Free)  				foreach (var keyval in points) {  					if (keyval.Key < MinX)  						continue;  					int x = Project (keyval.Key' MinX' MaxX' width);  					int y = height - Project (keyval.Value' MinY' MaxY' height);  					pixmap.DrawArc (style.ForegroundGC (state)' true' x' y' radius * 2' radius * 2' 0' 360*64);  				}
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,Draw,The following statement contains a magic number: if (CurveType != CurveType.Free)  				foreach (var keyval in points) {  					if (keyval.Key < MinX)  						continue;  					int x = Project (keyval.Key' MinX' MaxX' width);  					int y = height - Project (keyval.Value' MinY' MaxY' height);  					pixmap.DrawArc (style.ForegroundGC (state)' true' x' y' radius * 2' radius * 2' 0' 360*64);  				}
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,OnSizeAllocated,The following statement contains a magic number: width = allocation.Width - 2 * radius;
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,OnSizeAllocated,The following statement contains a magic number: height = allocation.Height - 2 * radius;
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width = 128 + 2 * x_offset;
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width = 128 + 2 * x_offset;
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,OnSizeRequested,The following statement contains a magic number: requisition.Height = 128 + 2 * y_offset;
Magic Number,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,OnSizeRequested,The following statement contains a magic number: requisition.Height = 128 + 2 * y_offset;
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: Attach (preview_image' 0' 2' 0' 1);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: Attach (page_frame' 1' 2' 3' 4);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: Attach (page_frame' 1' 2' 3' 4);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: Attach (page_frame' 1' 2' 3' 4);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: Table ppp_tbl = new Table(2' 7' false);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: Table ppp_tbl = new Table(2' 7' false);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: ppp_tbl.Attach (ppp1 = new RadioButton ("1")' 0' 1' 1' 2);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: ppp_tbl.Attach (ppp2 = new RadioButton (ppp1' "2")' 0' 1' 2' 3);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: ppp_tbl.Attach (ppp2 = new RadioButton (ppp1' "2")' 0' 1' 2' 3);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: ppp_tbl.Attach (ppp4 = new RadioButton (ppp1' "2 x 2")' 0' 1' 3' 4);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: ppp_tbl.Attach (ppp4 = new RadioButton (ppp1' "2 x 2")' 0' 1' 3' 4);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: ppp_tbl.Attach (ppp9 = new RadioButton (ppp1' "3 x 3")' 0' 1' 4' 5);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: ppp_tbl.Attach (ppp9 = new RadioButton (ppp1' "3 x 3")' 0' 1' 4' 5);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: ppp_tbl.Attach (ppp20 = new RadioButton (ppp1' "4 x 5")' 0' 1' 5' 6);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: ppp_tbl.Attach (ppp20 = new RadioButton (ppp1' "4 x 5")' 0' 1' 5' 6);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: ppp_tbl.Attach (ppp30 = new RadioButton (ppp1' "5 x 6")' 0' 1' 6' 7);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: ppp_tbl.Attach (ppp30 = new RadioButton (ppp1' "5 x 6")' 0' 1' 6' 7);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: ppp_tbl.Attach (repeat = new CheckButton (Catalog.GetString ("Repeat"))' 1' 2' 2' 3);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: ppp_tbl.Attach (repeat = new CheckButton (Catalog.GetString ("Repeat"))' 1' 2' 2' 3);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: ppp_tbl.Attach (repeat = new CheckButton (Catalog.GetString ("Repeat"))' 1' 2' 2' 3);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: ppp_tbl.Attach (crop_marks = new CheckButton (Catalog.GetString ("Print cut marks"))' 1' 2' 3' 4);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: ppp_tbl.Attach (crop_marks = new CheckButton (Catalog.GetString ("Print cut marks"))' 1' 2' 3' 4);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: ppp_tbl.Attach (crop_marks = new CheckButton (Catalog.GetString ("Print cut marks"))' 1' 2' 3' 4);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: Attach (ppp_frame' 0' 1' 1' 2);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: Attach (layout_frame' 1' 2' 1' 2);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: Attach (layout_frame' 1' 2' 1' 2);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: Attach (cmt_frame' 1' 2' 2' 3);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: Attach (cmt_frame' 1' 2' 2' 3);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: Attach (cmt_frame' 1' 2' 2' 3);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: Attach (detail_frame' 0' 1' 2' 4);
Magic Number,FSpot.Widgets,CustomPrintWidget,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CustomPrintWidget.cs,CustomPrintWidget,The following statement contains a magic number: Attach (detail_frame' 0' 1' 2' 4);
Magic Number,FSpot.Widgets,DateEdit,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\DateEdit.cs,CreateWidget,The following statement contains a magic number: Add (date_entry = new Entry () {WidthChars = 10' IsEditable = true});
Magic Number,FSpot.Widgets,DateEdit,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\DateEdit.cs,CreateWidget,The following statement contains a magic number: Add (time_entry = new Entry () {WidthChars = 12' IsEditable = true});
Magic Number,FSpot.Widgets,DateEdit,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\DateEdit.cs,CreateWidget,The following statement contains a magic number: Add (offset_entry = new Entry () {WidthChars = 6' IsEditable = true});
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ZoomFit,The following statement contains a magic number: DoZoom (MIN_ZOOM' Allocation.Width / 2' Allocation.Height / 2);
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ZoomFit,The following statement contains a magic number: DoZoom (MIN_ZOOM' Allocation.Width / 2' Allocation.Height / 2);
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,WindowCoordsToImage,The following statement contains a magic number: int x_offset = scaled_width < Allocation.Width ? (int)(Allocation.Width - scaled_width) / 2 : -XOffset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,WindowCoordsToImage,The following statement contains a magic number: int y_offset = scaled_height < Allocation.Height ? (int)(Allocation.Height - scaled_height) / 2 : -YOffset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,WindowCoordsToImage,The following statement contains a magic number: return  new Point ((int) Math.Floor (win.X * (double)(((int)PixbufOrientation <= 4 ? Pixbuf.Width : Pixbuf.Height) - 1) / (double)(scaled_width - 1) + .5)'  					   (int) Math.Floor (win.Y * (double)(((int)PixbufOrientation <= 4 ? Pixbuf.Height : Pixbuf.Width) - 1) / (double)(scaled_height - 1) + .5));
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,WindowCoordsToImage,The following statement contains a magic number: return  new Point ((int) Math.Floor (win.X * (double)(((int)PixbufOrientation <= 4 ? Pixbuf.Width : Pixbuf.Height) - 1) / (double)(scaled_width - 1) + .5)'  					   (int) Math.Floor (win.Y * (double)(((int)PixbufOrientation <= 4 ? Pixbuf.Height : Pixbuf.Width) - 1) / (double)(scaled_height - 1) + .5));
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,WindowCoordsToImage,The following statement contains a magic number: return  new Point ((int) Math.Floor (win.X * (double)(((int)PixbufOrientation <= 4 ? Pixbuf.Width : Pixbuf.Height) - 1) / (double)(scaled_width - 1) + .5)'  					   (int) Math.Floor (win.Y * (double)(((int)PixbufOrientation <= 4 ? Pixbuf.Height : Pixbuf.Width) - 1) / (double)(scaled_height - 1) + .5));
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,WindowCoordsToImage,The following statement contains a magic number: return  new Point ((int) Math.Floor (win.X * (double)(((int)PixbufOrientation <= 4 ? Pixbuf.Width : Pixbuf.Height) - 1) / (double)(scaled_width - 1) + .5)'  					   (int) Math.Floor (win.Y * (double)(((int)PixbufOrientation <= 4 ? Pixbuf.Height : Pixbuf.Width) - 1) / (double)(scaled_height - 1) + .5));
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The following statement contains a magic number: int x_offset = scaled_width < Allocation.Width ? (int)(Allocation.Width - scaled_width) / 2 : -XOffset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The following statement contains a magic number: int y_offset = scaled_height < Allocation.Height ? (int)(Allocation.Height - scaled_height) / 2 : -YOffset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The following statement contains a magic number: return new Point ((int) Math.Floor (image.X * (double) (scaled_width - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Width : Pixbuf.Height) - 1) + 0.5) + x_offset'  			                  (int) Math.Floor (image.Y * (double) (scaled_height - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Height : Pixbuf.Width) - 1) + 0.5) + y_offset);
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The following statement contains a magic number: return new Point ((int) Math.Floor (image.X * (double) (scaled_width - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Width : Pixbuf.Height) - 1) + 0.5) + x_offset'  			                  (int) Math.Floor (image.Y * (double) (scaled_height - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Height : Pixbuf.Width) - 1) + 0.5) + y_offset);
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The following statement contains a magic number: return new Point ((int) Math.Floor (image.X * (double) (scaled_width - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Width : Pixbuf.Height) - 1) + 0.5) + x_offset'  			                  (int) Math.Floor (image.Y * (double) (scaled_height - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Height : Pixbuf.Width) - 1) + 0.5) + y_offset);
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The following statement contains a magic number: return new Point ((int) Math.Floor (image.X * (double) (scaled_width - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Width : Pixbuf.Height) - 1) + 0.5) + x_offset'  			                  (int) Math.Floor (image.Y * (double) (scaled_height - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Height : Pixbuf.Width) - 1) + 0.5) + y_offset);
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The following statement contains a magic number: int x_offset = scaled_width < Allocation.Width ? (int)(Allocation.Width - scaled_width) / 2 : -XOffset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The following statement contains a magic number: int y_offset = scaled_height < Allocation.Height ? (int)(Allocation.Height - scaled_height) / 2 : -YOffset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The following statement contains a magic number: win.X = (int) Math.Floor (image.X * (double) (scaled_width - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Width : Pixbuf.Height) - 1) + 0.5) + x_offset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The following statement contains a magic number: win.X = (int) Math.Floor (image.X * (double) (scaled_width - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Width : Pixbuf.Height) - 1) + 0.5) + x_offset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The following statement contains a magic number: win.Y = (int) Math.Floor (image.Y * (double) (scaled_height - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Height : Pixbuf.Width) - 1) + 0.5) + y_offset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The following statement contains a magic number: win.Y = (int) Math.Floor (image.Y * (double) (scaled_height - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Height : Pixbuf.Width) - 1) + 0.5) + y_offset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The following statement contains a magic number: win.Width = (int) Math.Floor ((image.X + image.Width) * (double) (scaled_width - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Width : Pixbuf.Height) - 1) + 0.5) - win.X + x_offset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The following statement contains a magic number: win.Width = (int) Math.Floor ((image.X + image.Width) * (double) (scaled_width - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Width : Pixbuf.Height) - 1) + 0.5) - win.X + x_offset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The following statement contains a magic number: win.Height = (int) Math.Floor ((image.Y + image.Height) * (double) (scaled_height - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Height : Pixbuf.Width) - 1) + 0.5) - win.Y + y_offset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ImageCoordsToWindow,The following statement contains a magic number: win.Height = (int) Math.Floor ((image.Y + image.Height) * (double) (scaled_height - 1) / (((int)pixbuf_orientation <= 4 ? Pixbuf.Height : Pixbuf.Width) - 1) + 0.5) - win.Y + y_offset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,OnScrollEvent,The following statement contains a magic number: int x_incr = (int)Hadjustment.PageIncrement / 4;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,OnScrollEvent,The following statement contains a magic number: int y_incr = (int)Vadjustment.PageIncrement / 4;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,OnKeyPressEvent,The following statement contains a magic number: switch(evnt.Key) {  			case Gdk.Key.Up:  			case Gdk.Key.KP_Up:  			case Gdk.Key.k:  			case Gdk.Key.K:  				ScrollBy (0' -Vadjustment.StepIncrement);  				break;  			case Gdk.Key.Down:  			case Gdk.Key.KP_Down:  			case Gdk.Key.j:  			case Gdk.Key.J:  				ScrollBy (0' Vadjustment.StepIncrement);  				break;  			case Gdk.Key.Left:  			case Gdk.Key.KP_Left:  			case Gdk.Key.h:  			case Gdk.Key.H:  				ScrollBy (-Hadjustment.StepIncrement' 0);  				break;  			case Gdk.Key.Right:  			case Gdk.Key.KP_Right:  			case Gdk.Key.l:  			case Gdk.Key.L:  				ScrollBy (Hadjustment.StepIncrement' 0);  				break;  			case Gdk.Key.equal:  			case Gdk.Key.plus:  			case Gdk.Key.KP_Add:  				ZoomIn ();  				break;  			case Gdk.Key.minus:  			case Gdk.Key.KP_Subtract:  				ZoomOut ();  				break;  			case Gdk.Key.Key_0:  			case Gdk.Key.KP_0:  				ZoomFit ();  				break;  			case Gdk.Key.KP_1:  			case Gdk.Key.Key_1:  				GdkWindow.GetPointer (out x' out y' out type);  				DoZoom (1.0' x' y);  				break;  			case Gdk.Key.Key_2:  			case Gdk.Key.KP_2:  				GdkWindow.GetPointer (out x' out y' out type);  				DoZoom (2.0' x' y);  				break;  			default:  				handled = false;  				break;  			}
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,DoZoom,The following statement contains a magic number: int x_offset = scaled_width < Allocation.Width ? (int)(Allocation.Width - scaled_width) / 2 : -XOffset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,DoZoom,The following statement contains a magic number: int y_offset = scaled_height < Allocation.Height ? (int)(Allocation.Height - scaled_height) / 2 : -YOffset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,PaintRectangle,The following statement contains a magic number: int x_offset = scaled_width < Allocation.Width ? (int)(Allocation.Width - scaled_width) / 2 : -XOffset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,PaintRectangle,The following statement contains a magic number: int y_offset = scaled_height < Allocation.Height ? (int)(Allocation.Height - scaled_height) / 2 : -YOffset;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,PaintRectangle,The following statement contains a magic number: if (zoom == 1.0 &&  			    !Pixbuf.HasAlpha &&  			    Pixbuf.BitsPerSample == 8 &&  			    pixbuf_orientation == ImageOrientation.TopLeft) {  				GdkWindow.DrawPixbuf (Style.BlackGC'  						      Pixbuf'  						      area.X - x_offset' area.Y - y_offset'  						      area.X' area.Y'  						      area.Width' area.Height'  						      RgbDither.Max'  						      area.X - x_offset' area.Y - y_offset);  				return;  			}
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,PaintRectangle,The following statement contains a magic number: using (Pixbuf temp_pixbuf = new Pixbuf (Colorspace.Rgb' false' 8' pixbuf_area.Width' pixbuf_area.Height)) {  				if (Pixbuf.HasAlpha)  					temp_pixbuf.Fill (0x00000000);    				Pixbuf.CompositeColor (temp_pixbuf'  						       0' 0'  						       pixbuf_area.Width' pixbuf_area.Height'  						       -pixbuf_area.X' -pixbuf_area.Y'  						       zoom' zoom'  						       zoom == 1.0 ? InterpType.Nearest : interpolation' 255'  						       pixbuf_area.X' pixbuf_area.Y'  						       CheckPattern.CheckSize' CheckPattern.Color1' CheckPattern.Color2);      				ApplyColorTransform (temp_pixbuf);    				using (var dest_pixbuf = PixbufUtils.TransformOrientation (temp_pixbuf' pixbuf_orientation)) {  					GdkWindow.DrawPixbuf (Style.BlackGC'  							      dest_pixbuf'  							      0' 0'  							      area.X' area.Y'  							      area.Width' area.Height'  							      RgbDither.Max'  							      area.X - x_offset' area.Y - y_offset);  				}  			}
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,PaintRectangle,The following statement contains a magic number: using (Pixbuf temp_pixbuf = new Pixbuf (Colorspace.Rgb' false' 8' pixbuf_area.Width' pixbuf_area.Height)) {  				if (Pixbuf.HasAlpha)  					temp_pixbuf.Fill (0x00000000);    				Pixbuf.CompositeColor (temp_pixbuf'  						       0' 0'  						       pixbuf_area.Width' pixbuf_area.Height'  						       -pixbuf_area.X' -pixbuf_area.Y'  						       zoom' zoom'  						       zoom == 1.0 ? InterpType.Nearest : interpolation' 255'  						       pixbuf_area.X' pixbuf_area.Y'  						       CheckPattern.CheckSize' CheckPattern.Color1' CheckPattern.Color2);      				ApplyColorTransform (temp_pixbuf);    				using (var dest_pixbuf = PixbufUtils.TransformOrientation (temp_pixbuf' pixbuf_orientation)) {  					GdkWindow.DrawPixbuf (Style.BlackGC'  							      dest_pixbuf'  							      0' 0'  							      area.X' area.Y'  							      area.Width' area.Height'  							      RgbDither.Max'  							      area.X - x_offset' area.Y - y_offset);  				}  			}
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ComputeScaledSize,The following statement contains a magic number: if (Pixbuf == null)  				scaled_width = scaled_height = 0;  			else {  				double width;  				double height;  				if ((int)pixbuf_orientation <= 4 ) { //TopLeft' TopRight' BottomRight' BottomLeft  					width = Pixbuf.Width;  					height = Pixbuf.Height;  				} else {			//LeftTop' RightTop' RightBottom' LeftBottom  					width = Pixbuf.Height;  					height = Pixbuf.Width;  				}  				scaled_width = (uint)Math.Floor (width * Zoom + .5);  				scaled_height = (uint)Math.Floor (height * Zoom + .5);  			}
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ComputeScaledSize,The following statement contains a magic number: if (Pixbuf == null)  				scaled_width = scaled_height = 0;  			else {  				double width;  				double height;  				if ((int)pixbuf_orientation <= 4 ) { //TopLeft' TopRight' BottomRight' BottomLeft  					width = Pixbuf.Width;  					height = Pixbuf.Height;  				} else {			//LeftTop' RightTop' RightBottom' LeftBottom  					width = Pixbuf.Height;  					height = Pixbuf.Width;  				}  				scaled_width = (uint)Math.Floor (width * Zoom + .5);  				scaled_height = (uint)Math.Floor (height * Zoom + .5);  			}
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ComputeScaledSize,The following statement contains a magic number: if (Pixbuf == null)  				scaled_width = scaled_height = 0;  			else {  				double width;  				double height;  				if ((int)pixbuf_orientation <= 4 ) { //TopLeft' TopRight' BottomRight' BottomLeft  					width = Pixbuf.Width;  					height = Pixbuf.Height;  				} else {			//LeftTop' RightTop' RightBottom' LeftBottom  					width = Pixbuf.Height;  					height = Pixbuf.Width;  				}  				scaled_width = (uint)Math.Floor (width * Zoom + .5);  				scaled_height = (uint)Math.Floor (height * Zoom + .5);  			}
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ComputeScaledSize,The following statement contains a magic number: Hadjustment.PageIncrement = scaled_width * .9;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ComputeScaledSize,The following statement contains a magic number: Hadjustment.StepIncrement = 32;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ComputeScaledSize,The following statement contains a magic number: Vadjustment.PageIncrement = scaled_height * .9;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ComputeScaledSize,The following statement contains a magic number: Vadjustment.StepIncrement = 32;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ComputeMinZoom,The following statement contains a magic number: if (Pixbuf == null)  				return 0.1;
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,ComputeMinZoom,The following statement contains a magic number: if ((int)pixbuf_orientation <= 4 ) { //TopLeft' TopRight' BottomRight' BottomLeft  				width = Pixbuf.Width;  				height = Pixbuf.Height;  			} else {			//LeftTop' RightTop' RightBottom' LeftBottom  				width = Pixbuf.Height;  				height = Pixbuf.Width;  			}
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,OnSelectionExposeEvent,The following statement contains a magic number: using (var evnt_region = evnt.Region.Copy ()) {  				using (Region r = new Region ()) {  					r.UnionWithRect (win_selection);  					evnt_region.Subtract (r);  				}    				using (Cairo.Context ctx = CairoHelper.Create (GdkWindow)) {  					ctx.SetSourceRGBA (.5' .5' .5' .7);  					CairoHelper.Region (ctx' evnt_region);  					ctx.Fill ();  				}  			}
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,OnSelectionExposeEvent,The following statement contains a magic number: using (var evnt_region = evnt.Region.Copy ()) {  				using (Region r = new Region ()) {  					r.UnionWithRect (win_selection);  					evnt_region.Subtract (r);  				}    				using (Cairo.Context ctx = CairoHelper.Create (GdkWindow)) {  					ctx.SetSourceRGBA (.5' .5' .5' .7);  					CairoHelper.Region (ctx' evnt_region);  					ctx.Fill ();  				}  			}
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,OnSelectionExposeEvent,The following statement contains a magic number: using (var evnt_region = evnt.Region.Copy ()) {  				using (Region r = new Region ()) {  					r.UnionWithRect (win_selection);  					evnt_region.Subtract (r);  				}    				using (Cairo.Context ctx = CairoHelper.Create (GdkWindow)) {  					ctx.SetSourceRGBA (.5' .5' .5' .7);  					CairoHelper.Region (ctx' evnt_region);  					ctx.Fill ();  				}  			}
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,OnSelectionExposeEvent,The following statement contains a magic number: using (var evnt_region = evnt.Region.Copy ()) {  				using (Region r = new Region ()) {  					r.UnionWithRect (win_selection);  					evnt_region.Subtract (r);  				}    				using (Cairo.Context ctx = CairoHelper.Create (GdkWindow)) {  					ctx.SetSourceRGBA (.5' .5' .5' .7);  					CairoHelper.Region (ctx' evnt_region);  					ctx.Fill ();  				}  			}
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,OnPanButtonPressEvent,The following statement contains a magic number: if (evnt.Button != 2) {                  // Restrict to middle mouse button.                  return false;              }
Magic Number,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,OnPanButtonReleaseEvent,The following statement contains a magic number: if (evnt.Button != 2) {                  // Restrict to middle mouse button.                  return false;              }
Magic Number,FSpot.Widgets,Layout,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Layout.cs,OnSizeAllocated,The following statement contains a magic number: Hadjustment.PageIncrement = Width * .9;
Magic Number,FSpot.Widgets,Layout,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Layout.cs,OnSizeAllocated,The following statement contains a magic number: Vadjustment.PageIncrement = Height * .9;
Magic Number,FSpot.Widgets,SaneTreeView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\SaneTreeView.cs,OnButtonPressEvent,The following statement contains a magic number: if (path != null) {  				if (button.Type == EventType.TwoButtonPress) {  					ActivateRow(path' Columns[0]);  					base.OnButtonPressEvent (button);  				} else {  					if (button.Button == 3 && Selection.PathIsSelected (path))  						call_parent = false;  					else if ((button.Button == 1 || button.Button == 2) &&  						((button.State & ModifierType.ControlMask) != 0 || (button.State & ModifierType.ShiftMask) == 0)) {  						int expander_size = (int) StyleGetProperty("expander-size");  						int horizontal_separator = (int) StyleGetProperty("horizontal-separator");  						// EXPANDER_EXTRA_PADDING from GtkTreeView  						expander_size += 4;  						on_expander = (button.X <= horizontal_separator / 2 + path.Depth * expander_size);  						row_selected_on_button_down = Selection.PathIsSelected (path);  						if (row_selected_on_button_down) {  							call_parent = on_expander;  							ignore_button_release = call_parent;  						} else if ((button.State & ModifierType.ControlMask) != 0) {  							call_parent = false;  							Selection.SelectPath (path);  						} else {  							ignore_button_release = on_expander;  						}  					}  					  					if (call_parent)  						base.OnButtonPressEvent (button);  					else if (Selection.PathIsSelected (path))  						GrabFocus ();  				}  			} else {  				Selection.UnselectAll ();  				base.OnButtonPressEvent (button);  			}
Magic Number,FSpot.Widgets,SaneTreeView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\SaneTreeView.cs,OnButtonPressEvent,The following statement contains a magic number: if (path != null) {  				if (button.Type == EventType.TwoButtonPress) {  					ActivateRow(path' Columns[0]);  					base.OnButtonPressEvent (button);  				} else {  					if (button.Button == 3 && Selection.PathIsSelected (path))  						call_parent = false;  					else if ((button.Button == 1 || button.Button == 2) &&  						((button.State & ModifierType.ControlMask) != 0 || (button.State & ModifierType.ShiftMask) == 0)) {  						int expander_size = (int) StyleGetProperty("expander-size");  						int horizontal_separator = (int) StyleGetProperty("horizontal-separator");  						// EXPANDER_EXTRA_PADDING from GtkTreeView  						expander_size += 4;  						on_expander = (button.X <= horizontal_separator / 2 + path.Depth * expander_size);  						row_selected_on_button_down = Selection.PathIsSelected (path);  						if (row_selected_on_button_down) {  							call_parent = on_expander;  							ignore_button_release = call_parent;  						} else if ((button.State & ModifierType.ControlMask) != 0) {  							call_parent = false;  							Selection.SelectPath (path);  						} else {  							ignore_button_release = on_expander;  						}  					}  					  					if (call_parent)  						base.OnButtonPressEvent (button);  					else if (Selection.PathIsSelected (path))  						GrabFocus ();  				}  			} else {  				Selection.UnselectAll ();  				base.OnButtonPressEvent (button);  			}
Magic Number,FSpot.Widgets,SaneTreeView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\SaneTreeView.cs,OnButtonPressEvent,The following statement contains a magic number: if (path != null) {  				if (button.Type == EventType.TwoButtonPress) {  					ActivateRow(path' Columns[0]);  					base.OnButtonPressEvent (button);  				} else {  					if (button.Button == 3 && Selection.PathIsSelected (path))  						call_parent = false;  					else if ((button.Button == 1 || button.Button == 2) &&  						((button.State & ModifierType.ControlMask) != 0 || (button.State & ModifierType.ShiftMask) == 0)) {  						int expander_size = (int) StyleGetProperty("expander-size");  						int horizontal_separator = (int) StyleGetProperty("horizontal-separator");  						// EXPANDER_EXTRA_PADDING from GtkTreeView  						expander_size += 4;  						on_expander = (button.X <= horizontal_separator / 2 + path.Depth * expander_size);  						row_selected_on_button_down = Selection.PathIsSelected (path);  						if (row_selected_on_button_down) {  							call_parent = on_expander;  							ignore_button_release = call_parent;  						} else if ((button.State & ModifierType.ControlMask) != 0) {  							call_parent = false;  							Selection.SelectPath (path);  						} else {  							ignore_button_release = on_expander;  						}  					}  					  					if (call_parent)  						base.OnButtonPressEvent (button);  					else if (Selection.PathIsSelected (path))  						GrabFocus ();  				}  			} else {  				Selection.UnselectAll ();  				base.OnButtonPressEvent (button);  			}
Magic Number,FSpot.Widgets,SaneTreeView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\SaneTreeView.cs,OnButtonPressEvent,The following statement contains a magic number: if (path != null) {  				if (button.Type == EventType.TwoButtonPress) {  					ActivateRow(path' Columns[0]);  					base.OnButtonPressEvent (button);  				} else {  					if (button.Button == 3 && Selection.PathIsSelected (path))  						call_parent = false;  					else if ((button.Button == 1 || button.Button == 2) &&  						((button.State & ModifierType.ControlMask) != 0 || (button.State & ModifierType.ShiftMask) == 0)) {  						int expander_size = (int) StyleGetProperty("expander-size");  						int horizontal_separator = (int) StyleGetProperty("horizontal-separator");  						// EXPANDER_EXTRA_PADDING from GtkTreeView  						expander_size += 4;  						on_expander = (button.X <= horizontal_separator / 2 + path.Depth * expander_size);  						row_selected_on_button_down = Selection.PathIsSelected (path);  						if (row_selected_on_button_down) {  							call_parent = on_expander;  							ignore_button_release = call_parent;  						} else if ((button.State & ModifierType.ControlMask) != 0) {  							call_parent = false;  							Selection.SelectPath (path);  						} else {  							ignore_button_release = on_expander;  						}  					}  					  					if (call_parent)  						base.OnButtonPressEvent (button);  					else if (Selection.PathIsSelected (path))  						GrabFocus ();  				}  			} else {  				Selection.UnselectAll ();  				base.OnButtonPressEvent (button);  			}
Magic Number,FSpot.Widgets,SaneTreeView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\SaneTreeView.cs,DidNotDrag,The following statement contains a magic number: if (path != null) {  				if ((button.Button == 1 || button.Button == 2)  					&& ((button.State & ModifierType.ControlMask) != 0 ||  					(button.State & ModifierType.ShiftMask) == 0)  					&& row_selected_on_button_down) {  					if (!ButtonEventModifiesSelection (button)) {  						Selection.UnselectAll ();  						Selection.SelectPath (path);  					} else  						Selection.UnselectPath (path);  				}  			}
Magic Number,FSpot.Widgets,ScrolledView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ScrolledView.cs,ScrolledView,The following statement contains a magic number: hide = new DelayedOperation (2000' new GLib.IdleHandler (HideControls));
Magic Number,FSpot.Widgets,ToolTipWindow,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ToolTipWindow.cs,ToolTipWindow,The following statement contains a magic number: BorderWidth = 4;
Magic Number,FSpot.Widgets,RatingEntry,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\RatingEntry.cs,RatingEntry,The following statement contains a magic number: MaxRating = 5;
Magic Number,FSpot.Widgets,RatingRenderer,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\RatingRenderer.cs,ScaleIcon,The following statement contains a magic number: var scaled_icon = new Pixbuf (Colorspace.Rgb' true' 8' Size' Size);
Magic Number,FSpot.Widgets,RatingRenderer,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\RatingRenderer.cs,ScaleIcon,The following statement contains a magic number: int x_offset = (Size - icon.Width) / 2;
Magic Number,FSpot.Widgets,RatingRenderer,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\RatingRenderer.cs,ScaleIcon,The following statement contains a magic number: int y_offset = (Size - icon.Height) / 2;
Magic Number,FSpot.Widgets,RatingRenderer,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\RatingRenderer.cs,RenderPixbuf,The following statement contains a magic number: var pixbuf = new Pixbuf (Colorspace.Rgb' true' 8' MaxRating * Size' Size);
Magic Number,FSpot.Widgets,RatingRenderer,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\RatingRenderer.cs,Render,The following statement contains a magic number: cr.Translate (0.5' 0.5);
Magic Number,FSpot.Widgets,RatingRenderer,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\RatingRenderer.cs,Render,The following statement contains a magic number: cr.Translate (0.5' 0.5);
Magic Number,FSpot.Widgets,CellGridView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CellGridView.cs,TopLeftVisibleCell,The following statement contains a magic number: return CellAtPosition (border_size' (int) (Vadjustment.Value + Allocation.Height * (Vadjustment.Value / Vadjustment.Upper)) + border_size + 8);
Magic Number,FSpot.Widgets,CellGridView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CellGridView.cs,CellCenter,The following statement contains a magic number: x += cell_width / 2;
Magic Number,FSpot.Widgets,CellGridView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CellGridView.cs,CellCenter,The following statement contains a magic number: y += cell_height / 2;
Magic Number,FSpot.Widgets,CellGridView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CellGridView.cs,ScrollTo,The following statement contains a magic number: if (center)                  y += cell_height / 2 - Allocation.Height / 2;
Magic Number,FSpot.Widgets,CellGridView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CellGridView.cs,ScrollTo,The following statement contains a magic number: if (center)                  y += cell_height / 2 - Allocation.Height / 2;
Magic Number,FSpot.Widgets,CellGridView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CellGridView.cs,UpdateLayout,The following statement contains a magic number: int available_width = allocation.Width - 2 * border_size;
Magic Number,FSpot.Widgets,CellGridView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CellGridView.cs,UpdateLayout,The following statement contains a magic number: int available_height = allocation.Height - 2 * border_size;
Magic Number,FSpot.Widgets,CellGridView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CellGridView.cs,UpdateLayout,The following statement contains a magic number: int height = total_rows * cell_height + 2 * border_size;
Magic Number,FSpot.Widgets,CellGridView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CellGridView.cs,Scroll,The following statement contains a magic number: area = new Gdk.Rectangle (Math.Max ((int) (Hadjustment.Value + 2 * xstep)' 0)'                      Math.Max ((int) (Vadjustment.Value + 2 * ystep)' 0)'                      Allocation.Width'                      Allocation.Height);
Magic Number,FSpot.Widgets,CellGridView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CellGridView.cs,Scroll,The following statement contains a magic number: area = new Gdk.Rectangle (Math.Max ((int) (Hadjustment.Value + 2 * xstep)' 0)'                      Math.Max ((int) (Vadjustment.Value + 2 * ystep)' 0)'                      Allocation.Width'                      Allocation.Height);
Magic Number,FSpot.Widgets,CellGridView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\CellGridView.cs,Preload,The following statement contains a magic number: int mid = (ecell - scell) / 2;
Magic Number,FSpot.Gui,CompositeUtils,C:\repos\mono_f-spot\src\Core\FSpot.Gui\CompositeUtils.cs,GetRgbaColormap,The following statement contains a magic number: try {  				IntPtr raw_ret = gdk_screen_get_rgba_colormap (screen.Handle);  				Gdk.Colormap ret = GLib.Object.GetObject(raw_ret) as Gdk.Colormap;  				return ret;  			} catch {  				Gdk.Visual visual = Gdk.Visual.GetBestWithDepth (32);  				if (visual != null) {  					Gdk.Colormap cmap = new Gdk.Colormap (visual' false);  					Log.Debug ("fallback");  					return cmap;  				}  			}
Magic Number,FSpot.Gui,CompositeUtils,C:\repos\mono_f-spot\src\Core\FSpot.Gui\CompositeUtils.cs,ChangeProperty,The following statement contains a magic number: gdk_property_change (win.Handle' property.Handle' type.Handle' 32' (int)mode'  data' data.Length * 4);
Magic Number,FSpot.Gui,CompositeUtils,C:\repos\mono_f-spot\src\Core\FSpot.Gui\CompositeUtils.cs,ChangeProperty,The following statement contains a magic number: gdk_property_change (win.Handle' property.Handle' type.Handle' 32' (int)mode'  data' data.Length * 4);
Magic Number,FSpot.Gui,CompositeUtils,C:\repos\mono_f-spot\src\Core\FSpot.Gui\CompositeUtils.cs,ChangeProperty,The following statement contains a magic number: gdk_property_change (win.Handle' property.Handle' type.Handle' 8' (int)mode'  data' data.Length);
Magic Number,FSpot.Gui,CompositeUtils,C:\repos\mono_f-spot\src\Core\FSpot.Gui\CompositeUtils.cs,GetRgbaVisual,The following statement contains a magic number: try {  				IntPtr raw_ret = gdk_screen_get_rgba_visual (screen.Handle);  				Gdk.Visual ret = GLib.Object.GetObject(raw_ret) as Gdk.Visual;  				return ret;  			} catch {  				Gdk.Visual visual = Gdk.Visual.GetBestWithDepth (32);  				if (visual != null) {  					return visual;  				}  			}
Missing Default,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,GetVector,The following switch statement is missing a default case: switch (CurveType) {  			case CurveType.Spline:	  				var y2v = SplineSolve (xv' yv);    				for (int x = 0; x < len; x++' rx += dx) {  					float ry = SplineEval (xv' yv' y2v' rx);  					if (ry < MinY)  						ry = MinY;  					if (ry > MaxY)  						ry = MaxY;  					vector[x] = ry;  				}  				break;;  			case CurveType.Linear:  				for (int x = 0; x < len; x++' rx += dx) {  					float ry = LinearEval (xv' yv' rx);  					if (ry < MinY)  						ry = MinY;  					if (ry > MaxY)  						ry = MaxY;  					vector[x] = ry;  				}  				break;  			case CurveType.Free:  				throw new NotImplementedException ();  			}
Missing Default,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,OnButtonPressEvent,The following switch statement is missing a default case: switch (CurveType) {  			case CurveType.Linear:  			case CurveType.Spline:  				if (distance > min_distance) {  					//insert a new control point  					AddPoint ((closest_x = Unproject (px' MinX' MaxX' width))' MaxY - Unproject (py' MinY' MaxY' height));  					QueueDraw ();  				}  				grab_point = closest_x;  				break;  			case CurveType.Free:  				throw new NotImplementedException ();  			}
Missing Default,FSpot.Widgets,Curve,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\Curve.cs,OnMotionNotifyEvent,The following switch statement is missing a default case: switch (CurveType) {  			case CurveType.Spline:  			case CurveType.Linear:  				if (grab_point == null) {		//No grabbed point  					if (distance <= min_distance)  						CursorType = CursorType.Fleur;  					else  						CursorType = CursorType.Tcross;  					return true;  				}    				CursorType = CursorType.Tcross;  				points.Remove (grab_point.Value);  				AddPoint ((closest_x = Unproject (px' MinX' MaxX' width))' MaxY - Unproject (py' MinY' MaxY' height));  				QueueDraw ();  				grab_point = closest_x;    				break;  			case CurveType.Free:  				throw new NotImplementedException ();  			}
Missing Default,FSpot.Widgets,ImageView,C:\repos\mono_f-spot\src\Core\FSpot.Gui\FSpot.Widgets\ImageView.cs,OnSelectionButtonPressEvent,The following switch statement is missing a default case: switch (GetDragMode ((int)evnt.X' (int)evnt.Y)) {  				case DragMode.None:  					is_dragging_selection = true;  					PointerMode = PointerMode.Select;  					Selection = Rectangle.Zero;  					selection_anchor = img;  					break;    				case DragMode.Extend:  					Rectangle win_sel = ImageCoordsToWindow (Selection);  					is_dragging_selection = true;  					if (Math.Abs (win_sel.X - evnt.X) < SELECTION_SNAP_DISTANCE &&  					    Math.Abs (win_sel.Y - evnt.Y) < SELECTION_SNAP_DISTANCE) {	 			//TopLeft  						selection_anchor = new Point (Selection.X + Selection.Width' Selection.Y + Selection.Height);  					} else if (Math.Abs (win_sel.X + win_sel.Width - evnt.X) < SELECTION_SNAP_DISTANCE &&  						   Math.Abs (win_sel.Y - evnt.Y) < SELECTION_SNAP_DISTANCE) { 			//TopRight  						selection_anchor = new Point (Selection.X' Selection.Y + Selection.Height);  					} else if (Math.Abs (win_sel.X - evnt.X) < SELECTION_SNAP_DISTANCE &&  						   Math.Abs (win_sel.Y + win_sel.Height - evnt.Y) < SELECTION_SNAP_DISTANCE) {	//BottomLeft  						selection_anchor = new Point (Selection.X + Selection.Width' Selection.Y);  					} else if (Math.Abs (win_sel.X + win_sel.Width - evnt.X) < SELECTION_SNAP_DISTANCE &&  						   Math.Abs (win_sel.Y + win_sel.Height - evnt.Y) < SELECTION_SNAP_DISTANCE) {	//BottomRight  						selection_anchor = new Point (Selection.X' Selection.Y);  					} else if (Math.Abs (win_sel.X - evnt.X) < SELECTION_SNAP_DISTANCE) {			//Left  						selection_anchor = new Point (Selection.X + Selection.Width' Selection.Y);  						fixed_height = true;  					} else if (Math.Abs (win_sel.X + win_sel.Width - evnt.X) < SELECTION_SNAP_DISTANCE) {	//Right  						selection_anchor = new Point (Selection.X' Selection.Y);  						fixed_height = true;  					} else if (Math.Abs (win_sel.Y - evnt.Y) < SELECTION_SNAP_DISTANCE) {			//Top  						selection_anchor = new Point (Selection.X' Selection.Y + Selection.Height);  						fixed_width = true;  					} else if (Math.Abs (win_sel.Y + win_sel.Height - evnt.Y) < SELECTION_SNAP_DISTANCE) {	//Bottom  						selection_anchor = new Point (Selection.X' Selection.Y);  						fixed_width = true;  					} else {  						fixed_width = fixed_height = false;  						is_dragging_selection = false;  					}  					break;    				case DragMode.Move:  					is_moving_selection = true;  					selection_anchor = img;  					SelectionSetPointer ((int)evnt.X' (int)evnt.Y);  					break;  			}
