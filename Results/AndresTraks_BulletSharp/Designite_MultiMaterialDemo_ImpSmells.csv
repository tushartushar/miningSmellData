Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,CustomMaterialCombinerCallback,The method has 7 parameters. Parameters: cp' colObj0Wrap' partId0' index0' colObj1Wrap' partId1' index1
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,CalculateCombinedFriction,The following statement contains a magic number: const float MAX_FRICTION = 10;
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: Broadphase = new AxisSweep3(new Vector3(-10000' -10000' -10000)' new Vector3(10000' 10000' 10000));
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: Broadphase = new AxisSweep3(new Vector3(-10000' -10000' -10000)' new Vector3(10000' 10000' 10000));
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: Broadphase = new AxisSweep3(new Vector3(-10000' -10000' -10000)' new Vector3(10000' 10000' 10000));
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: Broadphase = new AxisSweep3(new Vector3(-10000' -10000' -10000)' new Vector3(10000' 10000' 10000));
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: Broadphase = new AxisSweep3(new Vector3(-10000' -10000' -10000)' new Vector3(10000' 10000' 10000));
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: Broadphase = new AxisSweep3(new Vector3(-10000' -10000' -10000)' new Vector3(10000' 10000' 10000));
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: World.Gravity = new Vector3(0' -10' 0);
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: const int totalTriangles = 2 * (NumVertsX - 1) * (NumVertsY - 1);
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: int[] gIndices = new int[totalTriangles * 3];
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: BulletMaterial[] gMaterials = new BulletMaterial[2];
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: for (int a = 0; a < totalTriangles; a++)              {                  // This will give the first half of the faces low friction and high restitution                  // and the second half of the faces high friction and low restitution                  if (a > totalTriangles / 2)                      gFaceMaterialIndices[a] = 0;                  else                      gFaceMaterialIndices[a] = 1;              }
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: CollisionObject ground = LocalCreateRigidBody(0' Matrix.Translation(-15' 0' -30)' trimeshShape);
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: CollisionObject ground = LocalCreateRigidBody(0' Matrix.Translation(-15' 0' -30)' trimeshShape);
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: for (int i = 0; i < 12; i++)              {                  RigidBody body = LocalCreateRigidBody(1' Matrix.Translation(10 - i' 10' -20 + i * 3)' colShape);                  body.CollisionFlags |= CollisionFlags.CustomMaterialCallback;                  body.Friction = 0.9f;                  body.Gravity = new Vector3(0' -20' 0);                  body.ApplyCentralImpulse(new Vector3(-7.7f' 0' 0));              }
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: for (int i = 0; i < 12; i++)              {                  RigidBody body = LocalCreateRigidBody(1' Matrix.Translation(10 - i' 10' -20 + i * 3)' colShape);                  body.CollisionFlags |= CollisionFlags.CustomMaterialCallback;                  body.Friction = 0.9f;                  body.Gravity = new Vector3(0' -20' 0);                  body.ApplyCentralImpulse(new Vector3(-7.7f' 0' 0));              }
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: for (int i = 0; i < 12; i++)              {                  RigidBody body = LocalCreateRigidBody(1' Matrix.Translation(10 - i' 10' -20 + i * 3)' colShape);                  body.CollisionFlags |= CollisionFlags.CustomMaterialCallback;                  body.Friction = 0.9f;                  body.Gravity = new Vector3(0' -20' 0);                  body.ApplyCentralImpulse(new Vector3(-7.7f' 0' 0));              }
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: for (int i = 0; i < 12; i++)              {                  RigidBody body = LocalCreateRigidBody(1' Matrix.Translation(10 - i' 10' -20 + i * 3)' colShape);                  body.CollisionFlags |= CollisionFlags.CustomMaterialCallback;                  body.Friction = 0.9f;                  body.Gravity = new Vector3(0' -20' 0);                  body.ApplyCentralImpulse(new Vector3(-7.7f' 0' 0));              }
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: for (int i = 0; i < 12; i++)              {                  RigidBody body = LocalCreateRigidBody(1' Matrix.Translation(10 - i' 10' -20 + i * 3)' colShape);                  body.CollisionFlags |= CollisionFlags.CustomMaterialCallback;                  body.Friction = 0.9f;                  body.Gravity = new Vector3(0' -20' 0);                  body.ApplyCentralImpulse(new Vector3(-7.7f' 0' 0));              }
Magic Number,MultiMaterialDemo,Physics,C:\repos\AndresTraks_BulletSharp\demos\SlimDX\MultiMaterialDemo\Physics.cs,Physics,The following statement contains a magic number: for (int i = 0; i < 12; i++)              {                  RigidBody body = LocalCreateRigidBody(1' Matrix.Translation(10 - i' 10' -20 + i * 3)' colShape);                  body.CollisionFlags |= CollisionFlags.CustomMaterialCallback;                  body.Friction = 0.9f;                  body.Gravity = new Vector3(0' -20' 0);                  body.ApplyCentralImpulse(new Vector3(-7.7f' 0' 0));              }
