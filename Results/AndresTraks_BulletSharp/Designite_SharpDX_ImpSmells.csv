Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DemoFramework.SharpDX,MeshFactory,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\MeshFactory.cs,InitInstancedRender,Cyclomatic complexity of the method is 15
Complex Method,DemoFramework.SharpDX,SharpDXGraphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\SharpDXGraphics.cs,DisposeBuffers,Cyclomatic complexity of the method is 15
Long Statement,DemoFramework.SharpDX,MathHelper,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\MathHelper.cs,Convert,The length of the statement  "	return new Matrix (m.M11' m.M12' m.M13' m.M14' m.M21' m.M22' m.M23' m.M24' m.M31' m.M32' m.M33' m.M34' m.M41' m.M42' m.M43' m.M44); " is 131.
Long Statement,DemoFramework.SharpDX,MeshFactory,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\MeshFactory.cs,InitRigidBodyInstance,The length of the statement  "			Color = "Ground".Equals (colObj.UserObject) ? groundColor : colObj.ActivationState == ActivationState.ActiveTag ? activeColor : passiveColor " is 140.
Magic Number,DemoFramework.SharpDX,InfoText,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\InfoText.cs,InfoText,The following statement contains a magic number: font = new Font (device' 20' 0' FontWeight.Normal' 0' false' FontCharacterSet.Default' FontPrecision.Default' FontQuality.ClearTypeNatural' FontPitchAndFamily.DontCare' "tahoma");  
Magic Number,DemoFramework.SharpDX,ShapeData,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\MeshFactory.cs,ShapeData,The following statement contains a magic number: BufferBindings = new VertexBufferBinding[2];  
Magic Number,DemoFramework.SharpDX,ShapeData,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\MeshFactory.cs,SetVertexBuffer,The following statement contains a magic number: BufferBindings [0] = new VertexBufferBinding (VertexBuffer' 24' 0);  
Magic Number,DemoFramework.SharpDX,ShapeData,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\MeshFactory.cs,SetDynamicVertexBuffer,The following statement contains a magic number: if (VertexBuffer != null && VertexCount * 2 == vectors.Length) {  	// Update existing buffer  	using (var data = VertexBuffer.Map (MapMode.WriteDiscard)) {  		data.WriteRange (vectors' 0' vectors.Length);  		VertexBuffer.Unmap ();  	}  } else {  	// Create new buffer  	if (VertexBuffer != null)  		VertexBuffer.Dispose ();  	BufferDescription vertexBufferDesc = new BufferDescription () {  		SizeInBytes = Vector3.SizeInBytes * vectors.Length'  		Usage = ResourceUsage.Dynamic'  		BindFlags = BindFlags.VertexBuffer'  		CpuAccessFlags = CpuAccessFlags.Write  	};  	using (var data = new DataStream (vertexBufferDesc.SizeInBytes' false' true)) {  		data.WriteRange (vectors);  		data.Position = 0;  		VertexBuffer = new Buffer (device' data' vertexBufferDesc);  	}  	VertexCount = vectors.Length / 2;  	BufferBindings [0] = new VertexBufferBinding (VertexBuffer' 24' 0);  }  
Magic Number,DemoFramework.SharpDX,ShapeData,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\MeshFactory.cs,SetDynamicVertexBuffer,The following statement contains a magic number: if (VertexBuffer != null && VertexCount * 2 == vectors.Length) {  	// Update existing buffer  	using (var data = VertexBuffer.Map (MapMode.WriteDiscard)) {  		data.WriteRange (vectors' 0' vectors.Length);  		VertexBuffer.Unmap ();  	}  } else {  	// Create new buffer  	if (VertexBuffer != null)  		VertexBuffer.Dispose ();  	BufferDescription vertexBufferDesc = new BufferDescription () {  		SizeInBytes = Vector3.SizeInBytes * vectors.Length'  		Usage = ResourceUsage.Dynamic'  		BindFlags = BindFlags.VertexBuffer'  		CpuAccessFlags = CpuAccessFlags.Write  	};  	using (var data = new DataStream (vertexBufferDesc.SizeInBytes' false' true)) {  		data.WriteRange (vectors);  		data.Position = 0;  		VertexBuffer = new Buffer (device' data' vertexBufferDesc);  	}  	VertexCount = vectors.Length / 2;  	BufferBindings [0] = new VertexBufferBinding (VertexBuffer' 24' 0);  }  
Magic Number,DemoFramework.SharpDX,ShapeData,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\MeshFactory.cs,SetDynamicVertexBuffer,The following statement contains a magic number: if (VertexBuffer != null && VertexCount * 2 == vectors.Length) {  	// Update existing buffer  	using (var data = VertexBuffer.Map (MapMode.WriteDiscard)) {  		data.WriteRange (vectors' 0' vectors.Length);  		VertexBuffer.Unmap ();  	}  } else {  	// Create new buffer  	if (VertexBuffer != null)  		VertexBuffer.Dispose ();  	BufferDescription vertexBufferDesc = new BufferDescription () {  		SizeInBytes = Vector3.SizeInBytes * vectors.Length'  		Usage = ResourceUsage.Dynamic'  		BindFlags = BindFlags.VertexBuffer'  		CpuAccessFlags = CpuAccessFlags.Write  	};  	using (var data = new DataStream (vertexBufferDesc.SizeInBytes' false' true)) {  		data.WriteRange (vectors);  		data.Position = 0;  		VertexBuffer = new Buffer (device' data' vertexBufferDesc);  	}  	VertexCount = vectors.Length / 2;  	BufferBindings [0] = new VertexBufferBinding (VertexBuffer' 24' 0);  }  
Magic Number,DemoFramework.SharpDX,ShapeData,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\MeshFactory.cs,SetDynamicVertexBuffer,The following statement contains a magic number: VertexCount = vectors.Length / 2;  
Magic Number,DemoFramework.SharpDX,ShapeData,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\MeshFactory.cs,SetDynamicVertexBuffer,The following statement contains a magic number: BufferBindings [0] = new VertexBufferBinding (VertexBuffer' 24' 0);  
Magic Number,DemoFramework.SharpDX,MeshFactory,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\MeshFactory.cs,ColorToUint,The following statement contains a magic number: return (uint)c.R + ((uint)c.G << 8) + ((uint)c.B << 16) + ((uint)c.A << 24);  
Magic Number,DemoFramework.SharpDX,MeshFactory,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\MeshFactory.cs,ColorToUint,The following statement contains a magic number: return (uint)c.R + ((uint)c.G << 8) + ((uint)c.B << 16) + ((uint)c.A << 24);  
Magic Number,DemoFramework.SharpDX,MeshFactory,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\MeshFactory.cs,ColorToUint,The following statement contains a magic number: return (uint)c.R + ((uint)c.G << 8) + ((uint)c.B << 16) + ((uint)c.A << 24);  
Magic Number,DemoFramework.SharpDX,MeshFactory,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\MeshFactory.cs,CreateShape,The following statement contains a magic number: shapeData.VertexCount = vertices.Length / 2;  
Magic Number,DemoFramework.SharpDX,SharpDXGraphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\SharpDXGraphics.cs,Initialize,The following statement contains a magic number: _width = 1024;  
Magic Number,DemoFramework.SharpDX,SharpDXGraphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\SharpDXGraphics.cs,Initialize,The following statement contains a magic number: _height = 768;  
Magic Number,DemoFramework.SharpDX,SharpDXGraphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\SharpDXGraphics.cs,Render,The following statement contains a magic number: outputMerger.SetRenderTargets (3' gBufferViews' depthView);  
Magic Number,DemoFramework.SharpDX,SharpDXGraphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\SharpDXGraphics.cs,Render,The following statement contains a magic number: _device.Draw (3' 0);  
Magic Number,DemoFramework.SharpDX,SharpDXGraphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX\SharpDXGraphics.cs,Render,The following statement contains a magic number: _device.Draw (4' 0);  
