Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,Cyclomatic complexity of the method is 18
Long Parameter List,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateStack,The method has 8 parameters.
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,OnInitializePhysics,The following statement contains a magic number: using (var cci = new DefaultCollisionConstructionInfo () {  	DefaultMaxPersistentManifoldPoolSize = 32768  }) {  	CollisionConf = new DefaultCollisionConfiguration (cci);  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,OnInitializePhysics,The following statement contains a magic number: Broadphase = new AxisSweep3 (worldAabbMin' worldAabbMax' 3500' pairCache);  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,OnInitializePhysics,The following statement contains a magic number: World.Gravity = new Vector3 (0' -10' 0);  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,OnInitializePhysics,The following statement contains a magic number: World.SolverInfo.NumIterations = 5;  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateStructures,The following statement contains a magic number: CreatePyramid (new Vector3 (-20' 0' 0)' 12' boxSize);  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateStructures,The following statement contains a magic number: CreatePyramid (new Vector3 (-20' 0' 0)' 12' boxSize);  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateStructures,The following statement contains a magic number: CreateWall (new Vector3 (-2' 0' 0)' 12' boxSize);  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateStructures,The following statement contains a magic number: CreateWall (new Vector3 (-2' 0' 0)' 12' boxSize);  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateStructures,The following statement contains a magic number: CreateWall (new Vector3 (4' 0' 0)' 12' boxSize);  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateStructures,The following statement contains a magic number: CreateWall (new Vector3 (4' 0' 0)' 12' boxSize);  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateStructures,The following statement contains a magic number: CreateWall (new Vector3 (10' 0' 0)' 12' boxSize);  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateStructures,The following statement contains a magic number: CreateWall (new Vector3 (10' 0' 0)' 12' boxSize);  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateStructures,The following statement contains a magic number: CreateTowerCircle (new Vector3 (25' 0' 0)' 8' 24' boxSize);  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateStructures,The following statement contains a magic number: CreateTowerCircle (new Vector3 (25' 0' 0)' 8' 24' boxSize);  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateStructures,The following statement contains a magic number: CreateTowerCircle (new Vector3 (25' 0' 0)' 8' 24' boxSize);  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int k = 0; k < stackHeight; k++) {  	for (int j = 0; j < stackSize; j++) {  		position.Z = offset + j * (cubeWidth + spacing);  		for (int i = 0; i < stackSize; i++) {  			position.X = offset + i * (cubeWidth + spacing);  			Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  			int idx = random.Next (10);  			Matrix trans = Matrix.Translation (bpos);  			switch (idx) {  			case 0:  			case 1:  			case 2:  				{  					float r = 0.5f * (idx + 1);  					var boxShape = new BoxShape (boxSize * r);  					LocalCreateRigidBody (boxMass * r' trans' boxShape);  				}  				break;  			case 3:  			case 4:  			case 5:  				{  					float r = 0.5f * (idx - 3 + 1);  					var sphereShape = new SphereShape (sphereRadius * r);  					LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  				}  				break;  			case 6:  			case 7:  			case 8:  				{  					float r = 0.5f * (idx - 6 + 1);  					var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  					LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  				}  				break;  			}  			numBodies++;  		}  	}  	offset -= 0.05f * spacing * (stackSize - 1);  	spacing *= 1.1f;  	position.Y += cubeWidth + spacing;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int k = 0; k < stackHeight; k++) {  	for (int j = 0; j < stackSize; j++) {  		position.Z = offset + j * (cubeWidth + spacing);  		for (int i = 0; i < stackSize; i++) {  			position.X = offset + i * (cubeWidth + spacing);  			Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  			int idx = random.Next (10);  			Matrix trans = Matrix.Translation (bpos);  			switch (idx) {  			case 0:  			case 1:  			case 2:  				{  					float r = 0.5f * (idx + 1);  					var boxShape = new BoxShape (boxSize * r);  					LocalCreateRigidBody (boxMass * r' trans' boxShape);  				}  				break;  			case 3:  			case 4:  			case 5:  				{  					float r = 0.5f * (idx - 3 + 1);  					var sphereShape = new SphereShape (sphereRadius * r);  					LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  				}  				break;  			case 6:  			case 7:  			case 8:  				{  					float r = 0.5f * (idx - 6 + 1);  					var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  					LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  				}  				break;  			}  			numBodies++;  		}  	}  	offset -= 0.05f * spacing * (stackSize - 1);  	spacing *= 1.1f;  	position.Y += cubeWidth + spacing;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int k = 0; k < stackHeight; k++) {  	for (int j = 0; j < stackSize; j++) {  		position.Z = offset + j * (cubeWidth + spacing);  		for (int i = 0; i < stackSize; i++) {  			position.X = offset + i * (cubeWidth + spacing);  			Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  			int idx = random.Next (10);  			Matrix trans = Matrix.Translation (bpos);  			switch (idx) {  			case 0:  			case 1:  			case 2:  				{  					float r = 0.5f * (idx + 1);  					var boxShape = new BoxShape (boxSize * r);  					LocalCreateRigidBody (boxMass * r' trans' boxShape);  				}  				break;  			case 3:  			case 4:  			case 5:  				{  					float r = 0.5f * (idx - 3 + 1);  					var sphereShape = new SphereShape (sphereRadius * r);  					LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  				}  				break;  			case 6:  			case 7:  			case 8:  				{  					float r = 0.5f * (idx - 6 + 1);  					var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  					LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  				}  				break;  			}  			numBodies++;  		}  	}  	offset -= 0.05f * spacing * (stackSize - 1);  	spacing *= 1.1f;  	position.Y += cubeWidth + spacing;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int k = 0; k < stackHeight; k++) {  	for (int j = 0; j < stackSize; j++) {  		position.Z = offset + j * (cubeWidth + spacing);  		for (int i = 0; i < stackSize; i++) {  			position.X = offset + i * (cubeWidth + spacing);  			Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  			int idx = random.Next (10);  			Matrix trans = Matrix.Translation (bpos);  			switch (idx) {  			case 0:  			case 1:  			case 2:  				{  					float r = 0.5f * (idx + 1);  					var boxShape = new BoxShape (boxSize * r);  					LocalCreateRigidBody (boxMass * r' trans' boxShape);  				}  				break;  			case 3:  			case 4:  			case 5:  				{  					float r = 0.5f * (idx - 3 + 1);  					var sphereShape = new SphereShape (sphereRadius * r);  					LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  				}  				break;  			case 6:  			case 7:  			case 8:  				{  					float r = 0.5f * (idx - 6 + 1);  					var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  					LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  				}  				break;  			}  			numBodies++;  		}  	}  	offset -= 0.05f * spacing * (stackSize - 1);  	spacing *= 1.1f;  	position.Y += cubeWidth + spacing;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int k = 0; k < stackHeight; k++) {  	for (int j = 0; j < stackSize; j++) {  		position.Z = offset + j * (cubeWidth + spacing);  		for (int i = 0; i < stackSize; i++) {  			position.X = offset + i * (cubeWidth + spacing);  			Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  			int idx = random.Next (10);  			Matrix trans = Matrix.Translation (bpos);  			switch (idx) {  			case 0:  			case 1:  			case 2:  				{  					float r = 0.5f * (idx + 1);  					var boxShape = new BoxShape (boxSize * r);  					LocalCreateRigidBody (boxMass * r' trans' boxShape);  				}  				break;  			case 3:  			case 4:  			case 5:  				{  					float r = 0.5f * (idx - 3 + 1);  					var sphereShape = new SphereShape (sphereRadius * r);  					LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  				}  				break;  			case 6:  			case 7:  			case 8:  				{  					float r = 0.5f * (idx - 6 + 1);  					var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  					LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  				}  				break;  			}  			numBodies++;  		}  	}  	offset -= 0.05f * spacing * (stackSize - 1);  	spacing *= 1.1f;  	position.Y += cubeWidth + spacing;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int k = 0; k < stackHeight; k++) {  	for (int j = 0; j < stackSize; j++) {  		position.Z = offset + j * (cubeWidth + spacing);  		for (int i = 0; i < stackSize; i++) {  			position.X = offset + i * (cubeWidth + spacing);  			Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  			int idx = random.Next (10);  			Matrix trans = Matrix.Translation (bpos);  			switch (idx) {  			case 0:  			case 1:  			case 2:  				{  					float r = 0.5f * (idx + 1);  					var boxShape = new BoxShape (boxSize * r);  					LocalCreateRigidBody (boxMass * r' trans' boxShape);  				}  				break;  			case 3:  			case 4:  			case 5:  				{  					float r = 0.5f * (idx - 3 + 1);  					var sphereShape = new SphereShape (sphereRadius * r);  					LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  				}  				break;  			case 6:  			case 7:  			case 8:  				{  					float r = 0.5f * (idx - 6 + 1);  					var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  					LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  				}  				break;  			}  			numBodies++;  		}  	}  	offset -= 0.05f * spacing * (stackSize - 1);  	spacing *= 1.1f;  	position.Y += cubeWidth + spacing;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int k = 0; k < stackHeight; k++) {  	for (int j = 0; j < stackSize; j++) {  		position.Z = offset + j * (cubeWidth + spacing);  		for (int i = 0; i < stackSize; i++) {  			position.X = offset + i * (cubeWidth + spacing);  			Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  			int idx = random.Next (10);  			Matrix trans = Matrix.Translation (bpos);  			switch (idx) {  			case 0:  			case 1:  			case 2:  				{  					float r = 0.5f * (idx + 1);  					var boxShape = new BoxShape (boxSize * r);  					LocalCreateRigidBody (boxMass * r' trans' boxShape);  				}  				break;  			case 3:  			case 4:  			case 5:  				{  					float r = 0.5f * (idx - 3 + 1);  					var sphereShape = new SphereShape (sphereRadius * r);  					LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  				}  				break;  			case 6:  			case 7:  			case 8:  				{  					float r = 0.5f * (idx - 6 + 1);  					var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  					LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  				}  				break;  			}  			numBodies++;  		}  	}  	offset -= 0.05f * spacing * (stackSize - 1);  	spacing *= 1.1f;  	position.Y += cubeWidth + spacing;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int k = 0; k < stackHeight; k++) {  	for (int j = 0; j < stackSize; j++) {  		position.Z = offset + j * (cubeWidth + spacing);  		for (int i = 0; i < stackSize; i++) {  			position.X = offset + i * (cubeWidth + spacing);  			Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  			int idx = random.Next (10);  			Matrix trans = Matrix.Translation (bpos);  			switch (idx) {  			case 0:  			case 1:  			case 2:  				{  					float r = 0.5f * (idx + 1);  					var boxShape = new BoxShape (boxSize * r);  					LocalCreateRigidBody (boxMass * r' trans' boxShape);  				}  				break;  			case 3:  			case 4:  			case 5:  				{  					float r = 0.5f * (idx - 3 + 1);  					var sphereShape = new SphereShape (sphereRadius * r);  					LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  				}  				break;  			case 6:  			case 7:  			case 8:  				{  					float r = 0.5f * (idx - 6 + 1);  					var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  					LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  				}  				break;  			}  			numBodies++;  		}  	}  	offset -= 0.05f * spacing * (stackSize - 1);  	spacing *= 1.1f;  	position.Y += cubeWidth + spacing;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int k = 0; k < stackHeight; k++) {  	for (int j = 0; j < stackSize; j++) {  		position.Z = offset + j * (cubeWidth + spacing);  		for (int i = 0; i < stackSize; i++) {  			position.X = offset + i * (cubeWidth + spacing);  			Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  			int idx = random.Next (10);  			Matrix trans = Matrix.Translation (bpos);  			switch (idx) {  			case 0:  			case 1:  			case 2:  				{  					float r = 0.5f * (idx + 1);  					var boxShape = new BoxShape (boxSize * r);  					LocalCreateRigidBody (boxMass * r' trans' boxShape);  				}  				break;  			case 3:  			case 4:  			case 5:  				{  					float r = 0.5f * (idx - 3 + 1);  					var sphereShape = new SphereShape (sphereRadius * r);  					LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  				}  				break;  			case 6:  			case 7:  			case 8:  				{  					float r = 0.5f * (idx - 6 + 1);  					var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  					LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  				}  				break;  			}  			numBodies++;  		}  	}  	offset -= 0.05f * spacing * (stackSize - 1);  	spacing *= 1.1f;  	position.Y += cubeWidth + spacing;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int k = 0; k < stackHeight; k++) {  	for (int j = 0; j < stackSize; j++) {  		position.Z = offset + j * (cubeWidth + spacing);  		for (int i = 0; i < stackSize; i++) {  			position.X = offset + i * (cubeWidth + spacing);  			Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  			int idx = random.Next (10);  			Matrix trans = Matrix.Translation (bpos);  			switch (idx) {  			case 0:  			case 1:  			case 2:  				{  					float r = 0.5f * (idx + 1);  					var boxShape = new BoxShape (boxSize * r);  					LocalCreateRigidBody (boxMass * r' trans' boxShape);  				}  				break;  			case 3:  			case 4:  			case 5:  				{  					float r = 0.5f * (idx - 3 + 1);  					var sphereShape = new SphereShape (sphereRadius * r);  					LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  				}  				break;  			case 6:  			case 7:  			case 8:  				{  					float r = 0.5f * (idx - 6 + 1);  					var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  					LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  				}  				break;  			}  			numBodies++;  		}  	}  	offset -= 0.05f * spacing * (stackSize - 1);  	spacing *= 1.1f;  	position.Y += cubeWidth + spacing;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int k = 0; k < stackHeight; k++) {  	for (int j = 0; j < stackSize; j++) {  		position.Z = offset + j * (cubeWidth + spacing);  		for (int i = 0; i < stackSize; i++) {  			position.X = offset + i * (cubeWidth + spacing);  			Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  			int idx = random.Next (10);  			Matrix trans = Matrix.Translation (bpos);  			switch (idx) {  			case 0:  			case 1:  			case 2:  				{  					float r = 0.5f * (idx + 1);  					var boxShape = new BoxShape (boxSize * r);  					LocalCreateRigidBody (boxMass * r' trans' boxShape);  				}  				break;  			case 3:  			case 4:  			case 5:  				{  					float r = 0.5f * (idx - 3 + 1);  					var sphereShape = new SphereShape (sphereRadius * r);  					LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  				}  				break;  			case 6:  			case 7:  			case 8:  				{  					float r = 0.5f * (idx - 6 + 1);  					var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  					LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  				}  				break;  			}  			numBodies++;  		}  	}  	offset -= 0.05f * spacing * (stackSize - 1);  	spacing *= 1.1f;  	position.Y += cubeWidth + spacing;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int j = 0; j < stackSize; j++) {  	position.Z = offset + j * (cubeWidth + spacing);  	for (int i = 0; i < stackSize; i++) {  		position.X = offset + i * (cubeWidth + spacing);  		Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  		int idx = random.Next (10);  		Matrix trans = Matrix.Translation (bpos);  		switch (idx) {  		case 0:  		case 1:  		case 2:  			{  				float r = 0.5f * (idx + 1);  				var boxShape = new BoxShape (boxSize * r);  				LocalCreateRigidBody (boxMass * r' trans' boxShape);  			}  			break;  		case 3:  		case 4:  		case 5:  			{  				float r = 0.5f * (idx - 3 + 1);  				var sphereShape = new SphereShape (sphereRadius * r);  				LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  			}  			break;  		case 6:  		case 7:  		case 8:  			{  				float r = 0.5f * (idx - 6 + 1);  				var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  				LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  			}  			break;  		}  		numBodies++;  	}  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int j = 0; j < stackSize; j++) {  	position.Z = offset + j * (cubeWidth + spacing);  	for (int i = 0; i < stackSize; i++) {  		position.X = offset + i * (cubeWidth + spacing);  		Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  		int idx = random.Next (10);  		Matrix trans = Matrix.Translation (bpos);  		switch (idx) {  		case 0:  		case 1:  		case 2:  			{  				float r = 0.5f * (idx + 1);  				var boxShape = new BoxShape (boxSize * r);  				LocalCreateRigidBody (boxMass * r' trans' boxShape);  			}  			break;  		case 3:  		case 4:  		case 5:  			{  				float r = 0.5f * (idx - 3 + 1);  				var sphereShape = new SphereShape (sphereRadius * r);  				LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  			}  			break;  		case 6:  		case 7:  		case 8:  			{  				float r = 0.5f * (idx - 6 + 1);  				var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  				LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  			}  			break;  		}  		numBodies++;  	}  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int j = 0; j < stackSize; j++) {  	position.Z = offset + j * (cubeWidth + spacing);  	for (int i = 0; i < stackSize; i++) {  		position.X = offset + i * (cubeWidth + spacing);  		Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  		int idx = random.Next (10);  		Matrix trans = Matrix.Translation (bpos);  		switch (idx) {  		case 0:  		case 1:  		case 2:  			{  				float r = 0.5f * (idx + 1);  				var boxShape = new BoxShape (boxSize * r);  				LocalCreateRigidBody (boxMass * r' trans' boxShape);  			}  			break;  		case 3:  		case 4:  		case 5:  			{  				float r = 0.5f * (idx - 3 + 1);  				var sphereShape = new SphereShape (sphereRadius * r);  				LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  			}  			break;  		case 6:  		case 7:  		case 8:  			{  				float r = 0.5f * (idx - 6 + 1);  				var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  				LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  			}  			break;  		}  		numBodies++;  	}  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int j = 0; j < stackSize; j++) {  	position.Z = offset + j * (cubeWidth + spacing);  	for (int i = 0; i < stackSize; i++) {  		position.X = offset + i * (cubeWidth + spacing);  		Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  		int idx = random.Next (10);  		Matrix trans = Matrix.Translation (bpos);  		switch (idx) {  		case 0:  		case 1:  		case 2:  			{  				float r = 0.5f * (idx + 1);  				var boxShape = new BoxShape (boxSize * r);  				LocalCreateRigidBody (boxMass * r' trans' boxShape);  			}  			break;  		case 3:  		case 4:  		case 5:  			{  				float r = 0.5f * (idx - 3 + 1);  				var sphereShape = new SphereShape (sphereRadius * r);  				LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  			}  			break;  		case 6:  		case 7:  		case 8:  			{  				float r = 0.5f * (idx - 6 + 1);  				var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  				LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  			}  			break;  		}  		numBodies++;  	}  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int j = 0; j < stackSize; j++) {  	position.Z = offset + j * (cubeWidth + spacing);  	for (int i = 0; i < stackSize; i++) {  		position.X = offset + i * (cubeWidth + spacing);  		Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  		int idx = random.Next (10);  		Matrix trans = Matrix.Translation (bpos);  		switch (idx) {  		case 0:  		case 1:  		case 2:  			{  				float r = 0.5f * (idx + 1);  				var boxShape = new BoxShape (boxSize * r);  				LocalCreateRigidBody (boxMass * r' trans' boxShape);  			}  			break;  		case 3:  		case 4:  		case 5:  			{  				float r = 0.5f * (idx - 3 + 1);  				var sphereShape = new SphereShape (sphereRadius * r);  				LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  			}  			break;  		case 6:  		case 7:  		case 8:  			{  				float r = 0.5f * (idx - 6 + 1);  				var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  				LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  			}  			break;  		}  		numBodies++;  	}  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int j = 0; j < stackSize; j++) {  	position.Z = offset + j * (cubeWidth + spacing);  	for (int i = 0; i < stackSize; i++) {  		position.X = offset + i * (cubeWidth + spacing);  		Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  		int idx = random.Next (10);  		Matrix trans = Matrix.Translation (bpos);  		switch (idx) {  		case 0:  		case 1:  		case 2:  			{  				float r = 0.5f * (idx + 1);  				var boxShape = new BoxShape (boxSize * r);  				LocalCreateRigidBody (boxMass * r' trans' boxShape);  			}  			break;  		case 3:  		case 4:  		case 5:  			{  				float r = 0.5f * (idx - 3 + 1);  				var sphereShape = new SphereShape (sphereRadius * r);  				LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  			}  			break;  		case 6:  		case 7:  		case 8:  			{  				float r = 0.5f * (idx - 6 + 1);  				var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  				LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  			}  			break;  		}  		numBodies++;  	}  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int j = 0; j < stackSize; j++) {  	position.Z = offset + j * (cubeWidth + spacing);  	for (int i = 0; i < stackSize; i++) {  		position.X = offset + i * (cubeWidth + spacing);  		Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  		int idx = random.Next (10);  		Matrix trans = Matrix.Translation (bpos);  		switch (idx) {  		case 0:  		case 1:  		case 2:  			{  				float r = 0.5f * (idx + 1);  				var boxShape = new BoxShape (boxSize * r);  				LocalCreateRigidBody (boxMass * r' trans' boxShape);  			}  			break;  		case 3:  		case 4:  		case 5:  			{  				float r = 0.5f * (idx - 3 + 1);  				var sphereShape = new SphereShape (sphereRadius * r);  				LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  			}  			break;  		case 6:  		case 7:  		case 8:  			{  				float r = 0.5f * (idx - 6 + 1);  				var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  				LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  			}  			break;  		}  		numBodies++;  	}  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int j = 0; j < stackSize; j++) {  	position.Z = offset + j * (cubeWidth + spacing);  	for (int i = 0; i < stackSize; i++) {  		position.X = offset + i * (cubeWidth + spacing);  		Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  		int idx = random.Next (10);  		Matrix trans = Matrix.Translation (bpos);  		switch (idx) {  		case 0:  		case 1:  		case 2:  			{  				float r = 0.5f * (idx + 1);  				var boxShape = new BoxShape (boxSize * r);  				LocalCreateRigidBody (boxMass * r' trans' boxShape);  			}  			break;  		case 3:  		case 4:  		case 5:  			{  				float r = 0.5f * (idx - 3 + 1);  				var sphereShape = new SphereShape (sphereRadius * r);  				LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  			}  			break;  		case 6:  		case 7:  		case 8:  			{  				float r = 0.5f * (idx - 6 + 1);  				var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  				LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  			}  			break;  		}  		numBodies++;  	}  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int j = 0; j < stackSize; j++) {  	position.Z = offset + j * (cubeWidth + spacing);  	for (int i = 0; i < stackSize; i++) {  		position.X = offset + i * (cubeWidth + spacing);  		Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  		int idx = random.Next (10);  		Matrix trans = Matrix.Translation (bpos);  		switch (idx) {  		case 0:  		case 1:  		case 2:  			{  				float r = 0.5f * (idx + 1);  				var boxShape = new BoxShape (boxSize * r);  				LocalCreateRigidBody (boxMass * r' trans' boxShape);  			}  			break;  		case 3:  		case 4:  		case 5:  			{  				float r = 0.5f * (idx - 3 + 1);  				var sphereShape = new SphereShape (sphereRadius * r);  				LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  			}  			break;  		case 6:  		case 7:  		case 8:  			{  				float r = 0.5f * (idx - 6 + 1);  				var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  				LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  			}  			break;  		}  		numBodies++;  	}  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int j = 0; j < stackSize; j++) {  	position.Z = offset + j * (cubeWidth + spacing);  	for (int i = 0; i < stackSize; i++) {  		position.X = offset + i * (cubeWidth + spacing);  		Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  		int idx = random.Next (10);  		Matrix trans = Matrix.Translation (bpos);  		switch (idx) {  		case 0:  		case 1:  		case 2:  			{  				float r = 0.5f * (idx + 1);  				var boxShape = new BoxShape (boxSize * r);  				LocalCreateRigidBody (boxMass * r' trans' boxShape);  			}  			break;  		case 3:  		case 4:  		case 5:  			{  				float r = 0.5f * (idx - 3 + 1);  				var sphereShape = new SphereShape (sphereRadius * r);  				LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  			}  			break;  		case 6:  		case 7:  		case 8:  			{  				float r = 0.5f * (idx - 6 + 1);  				var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  				LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  			}  			break;  		}  		numBodies++;  	}  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int j = 0; j < stackSize; j++) {  	position.Z = offset + j * (cubeWidth + spacing);  	for (int i = 0; i < stackSize; i++) {  		position.X = offset + i * (cubeWidth + spacing);  		Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  		int idx = random.Next (10);  		Matrix trans = Matrix.Translation (bpos);  		switch (idx) {  		case 0:  		case 1:  		case 2:  			{  				float r = 0.5f * (idx + 1);  				var boxShape = new BoxShape (boxSize * r);  				LocalCreateRigidBody (boxMass * r' trans' boxShape);  			}  			break;  		case 3:  		case 4:  		case 5:  			{  				float r = 0.5f * (idx - 3 + 1);  				var sphereShape = new SphereShape (sphereRadius * r);  				LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  			}  			break;  		case 6:  		case 7:  		case 8:  			{  				float r = 0.5f * (idx - 6 + 1);  				var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  				LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  			}  			break;  		}  		numBodies++;  	}  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int i = 0; i < stackSize; i++) {  	position.X = offset + i * (cubeWidth + spacing);  	Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  	int idx = random.Next (10);  	Matrix trans = Matrix.Translation (bpos);  	switch (idx) {  	case 0:  	case 1:  	case 2:  		{  			float r = 0.5f * (idx + 1);  			var boxShape = new BoxShape (boxSize * r);  			LocalCreateRigidBody (boxMass * r' trans' boxShape);  		}  		break;  	case 3:  	case 4:  	case 5:  		{  			float r = 0.5f * (idx - 3 + 1);  			var sphereShape = new SphereShape (sphereRadius * r);  			LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  		}  		break;  	case 6:  	case 7:  	case 8:  		{  			float r = 0.5f * (idx - 6 + 1);  			var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  			LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  		}  		break;  	}  	numBodies++;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int i = 0; i < stackSize; i++) {  	position.X = offset + i * (cubeWidth + spacing);  	Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  	int idx = random.Next (10);  	Matrix trans = Matrix.Translation (bpos);  	switch (idx) {  	case 0:  	case 1:  	case 2:  		{  			float r = 0.5f * (idx + 1);  			var boxShape = new BoxShape (boxSize * r);  			LocalCreateRigidBody (boxMass * r' trans' boxShape);  		}  		break;  	case 3:  	case 4:  	case 5:  		{  			float r = 0.5f * (idx - 3 + 1);  			var sphereShape = new SphereShape (sphereRadius * r);  			LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  		}  		break;  	case 6:  	case 7:  	case 8:  		{  			float r = 0.5f * (idx - 6 + 1);  			var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  			LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  		}  		break;  	}  	numBodies++;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int i = 0; i < stackSize; i++) {  	position.X = offset + i * (cubeWidth + spacing);  	Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  	int idx = random.Next (10);  	Matrix trans = Matrix.Translation (bpos);  	switch (idx) {  	case 0:  	case 1:  	case 2:  		{  			float r = 0.5f * (idx + 1);  			var boxShape = new BoxShape (boxSize * r);  			LocalCreateRigidBody (boxMass * r' trans' boxShape);  		}  		break;  	case 3:  	case 4:  	case 5:  		{  			float r = 0.5f * (idx - 3 + 1);  			var sphereShape = new SphereShape (sphereRadius * r);  			LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  		}  		break;  	case 6:  	case 7:  	case 8:  		{  			float r = 0.5f * (idx - 6 + 1);  			var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  			LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  		}  		break;  	}  	numBodies++;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int i = 0; i < stackSize; i++) {  	position.X = offset + i * (cubeWidth + spacing);  	Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  	int idx = random.Next (10);  	Matrix trans = Matrix.Translation (bpos);  	switch (idx) {  	case 0:  	case 1:  	case 2:  		{  			float r = 0.5f * (idx + 1);  			var boxShape = new BoxShape (boxSize * r);  			LocalCreateRigidBody (boxMass * r' trans' boxShape);  		}  		break;  	case 3:  	case 4:  	case 5:  		{  			float r = 0.5f * (idx - 3 + 1);  			var sphereShape = new SphereShape (sphereRadius * r);  			LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  		}  		break;  	case 6:  	case 7:  	case 8:  		{  			float r = 0.5f * (idx - 6 + 1);  			var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  			LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  		}  		break;  	}  	numBodies++;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int i = 0; i < stackSize; i++) {  	position.X = offset + i * (cubeWidth + spacing);  	Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  	int idx = random.Next (10);  	Matrix trans = Matrix.Translation (bpos);  	switch (idx) {  	case 0:  	case 1:  	case 2:  		{  			float r = 0.5f * (idx + 1);  			var boxShape = new BoxShape (boxSize * r);  			LocalCreateRigidBody (boxMass * r' trans' boxShape);  		}  		break;  	case 3:  	case 4:  	case 5:  		{  			float r = 0.5f * (idx - 3 + 1);  			var sphereShape = new SphereShape (sphereRadius * r);  			LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  		}  		break;  	case 6:  	case 7:  	case 8:  		{  			float r = 0.5f * (idx - 6 + 1);  			var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  			LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  		}  		break;  	}  	numBodies++;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int i = 0; i < stackSize; i++) {  	position.X = offset + i * (cubeWidth + spacing);  	Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  	int idx = random.Next (10);  	Matrix trans = Matrix.Translation (bpos);  	switch (idx) {  	case 0:  	case 1:  	case 2:  		{  			float r = 0.5f * (idx + 1);  			var boxShape = new BoxShape (boxSize * r);  			LocalCreateRigidBody (boxMass * r' trans' boxShape);  		}  		break;  	case 3:  	case 4:  	case 5:  		{  			float r = 0.5f * (idx - 3 + 1);  			var sphereShape = new SphereShape (sphereRadius * r);  			LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  		}  		break;  	case 6:  	case 7:  	case 8:  		{  			float r = 0.5f * (idx - 6 + 1);  			var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  			LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  		}  		break;  	}  	numBodies++;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int i = 0; i < stackSize; i++) {  	position.X = offset + i * (cubeWidth + spacing);  	Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  	int idx = random.Next (10);  	Matrix trans = Matrix.Translation (bpos);  	switch (idx) {  	case 0:  	case 1:  	case 2:  		{  			float r = 0.5f * (idx + 1);  			var boxShape = new BoxShape (boxSize * r);  			LocalCreateRigidBody (boxMass * r' trans' boxShape);  		}  		break;  	case 3:  	case 4:  	case 5:  		{  			float r = 0.5f * (idx - 3 + 1);  			var sphereShape = new SphereShape (sphereRadius * r);  			LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  		}  		break;  	case 6:  	case 7:  	case 8:  		{  			float r = 0.5f * (idx - 6 + 1);  			var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  			LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  		}  		break;  	}  	numBodies++;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int i = 0; i < stackSize; i++) {  	position.X = offset + i * (cubeWidth + spacing);  	Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  	int idx = random.Next (10);  	Matrix trans = Matrix.Translation (bpos);  	switch (idx) {  	case 0:  	case 1:  	case 2:  		{  			float r = 0.5f * (idx + 1);  			var boxShape = new BoxShape (boxSize * r);  			LocalCreateRigidBody (boxMass * r' trans' boxShape);  		}  		break;  	case 3:  	case 4:  	case 5:  		{  			float r = 0.5f * (idx - 3 + 1);  			var sphereShape = new SphereShape (sphereRadius * r);  			LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  		}  		break;  	case 6:  	case 7:  	case 8:  		{  			float r = 0.5f * (idx - 6 + 1);  			var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  			LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  		}  		break;  	}  	numBodies++;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int i = 0; i < stackSize; i++) {  	position.X = offset + i * (cubeWidth + spacing);  	Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  	int idx = random.Next (10);  	Matrix trans = Matrix.Translation (bpos);  	switch (idx) {  	case 0:  	case 1:  	case 2:  		{  			float r = 0.5f * (idx + 1);  			var boxShape = new BoxShape (boxSize * r);  			LocalCreateRigidBody (boxMass * r' trans' boxShape);  		}  		break;  	case 3:  	case 4:  	case 5:  		{  			float r = 0.5f * (idx - 3 + 1);  			var sphereShape = new SphereShape (sphereRadius * r);  			LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  		}  		break;  	case 6:  	case 7:  	case 8:  		{  			float r = 0.5f * (idx - 6 + 1);  			var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  			LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  		}  		break;  	}  	numBodies++;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int i = 0; i < stackSize; i++) {  	position.X = offset + i * (cubeWidth + spacing);  	Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  	int idx = random.Next (10);  	Matrix trans = Matrix.Translation (bpos);  	switch (idx) {  	case 0:  	case 1:  	case 2:  		{  			float r = 0.5f * (idx + 1);  			var boxShape = new BoxShape (boxSize * r);  			LocalCreateRigidBody (boxMass * r' trans' boxShape);  		}  		break;  	case 3:  	case 4:  	case 5:  		{  			float r = 0.5f * (idx - 3 + 1);  			var sphereShape = new SphereShape (sphereRadius * r);  			LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  		}  		break;  	case 6:  	case 7:  	case 8:  		{  			float r = 0.5f * (idx - 6 + 1);  			var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  			LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  		}  		break;  	}  	numBodies++;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: for (int i = 0; i < stackSize; i++) {  	position.X = offset + i * (cubeWidth + spacing);  	Vector3 bpos = new Vector3 (0' 25' 0) + new Vector3 (5.0f * position.X' position.Y' 5.0f * position.Z);  	int idx = random.Next (10);  	Matrix trans = Matrix.Translation (bpos);  	switch (idx) {  	case 0:  	case 1:  	case 2:  		{  			float r = 0.5f * (idx + 1);  			var boxShape = new BoxShape (boxSize * r);  			LocalCreateRigidBody (boxMass * r' trans' boxShape);  		}  		break;  	case 3:  	case 4:  	case 5:  		{  			float r = 0.5f * (idx - 3 + 1);  			var sphereShape = new SphereShape (sphereRadius * r);  			LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  		}  		break;  	case 6:  	case 7:  	case 8:  		{  			float r = 0.5f * (idx - 6 + 1);  			var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  			LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  		}  		break;  	}  	numBodies++;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: switch (idx) {  case 0:  case 1:  case 2:  	{  		float r = 0.5f * (idx + 1);  		var boxShape = new BoxShape (boxSize * r);  		LocalCreateRigidBody (boxMass * r' trans' boxShape);  	}  	break;  case 3:  case 4:  case 5:  	{  		float r = 0.5f * (idx - 3 + 1);  		var sphereShape = new SphereShape (sphereRadius * r);  		LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  	}  	break;  case 6:  case 7:  case 8:  	{  		float r = 0.5f * (idx - 6 + 1);  		var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  		LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  	}  	break;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: switch (idx) {  case 0:  case 1:  case 2:  	{  		float r = 0.5f * (idx + 1);  		var boxShape = new BoxShape (boxSize * r);  		LocalCreateRigidBody (boxMass * r' trans' boxShape);  	}  	break;  case 3:  case 4:  case 5:  	{  		float r = 0.5f * (idx - 3 + 1);  		var sphereShape = new SphereShape (sphereRadius * r);  		LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  	}  	break;  case 6:  case 7:  case 8:  	{  		float r = 0.5f * (idx - 6 + 1);  		var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  		LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  	}  	break;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: switch (idx) {  case 0:  case 1:  case 2:  	{  		float r = 0.5f * (idx + 1);  		var boxShape = new BoxShape (boxSize * r);  		LocalCreateRigidBody (boxMass * r' trans' boxShape);  	}  	break;  case 3:  case 4:  case 5:  	{  		float r = 0.5f * (idx - 3 + 1);  		var sphereShape = new SphereShape (sphereRadius * r);  		LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  	}  	break;  case 6:  case 7:  case 8:  	{  		float r = 0.5f * (idx - 6 + 1);  		var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  		LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  	}  	break;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: switch (idx) {  case 0:  case 1:  case 2:  	{  		float r = 0.5f * (idx + 1);  		var boxShape = new BoxShape (boxSize * r);  		LocalCreateRigidBody (boxMass * r' trans' boxShape);  	}  	break;  case 3:  case 4:  case 5:  	{  		float r = 0.5f * (idx - 3 + 1);  		var sphereShape = new SphereShape (sphereRadius * r);  		LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  	}  	break;  case 6:  case 7:  case 8:  	{  		float r = 0.5f * (idx - 6 + 1);  		var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  		LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  	}  	break;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: switch (idx) {  case 0:  case 1:  case 2:  	{  		float r = 0.5f * (idx + 1);  		var boxShape = new BoxShape (boxSize * r);  		LocalCreateRigidBody (boxMass * r' trans' boxShape);  	}  	break;  case 3:  case 4:  case 5:  	{  		float r = 0.5f * (idx - 3 + 1);  		var sphereShape = new SphereShape (sphereRadius * r);  		LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  	}  	break;  case 6:  case 7:  case 8:  	{  		float r = 0.5f * (idx - 6 + 1);  		var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  		LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  	}  	break;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: switch (idx) {  case 0:  case 1:  case 2:  	{  		float r = 0.5f * (idx + 1);  		var boxShape = new BoxShape (boxSize * r);  		LocalCreateRigidBody (boxMass * r' trans' boxShape);  	}  	break;  case 3:  case 4:  case 5:  	{  		float r = 0.5f * (idx - 3 + 1);  		var sphereShape = new SphereShape (sphereRadius * r);  		LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  	}  	break;  case 6:  case 7:  case 8:  	{  		float r = 0.5f * (idx - 6 + 1);  		var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  		LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  	}  	break;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: switch (idx) {  case 0:  case 1:  case 2:  	{  		float r = 0.5f * (idx + 1);  		var boxShape = new BoxShape (boxSize * r);  		LocalCreateRigidBody (boxMass * r' trans' boxShape);  	}  	break;  case 3:  case 4:  case 5:  	{  		float r = 0.5f * (idx - 3 + 1);  		var sphereShape = new SphereShape (sphereRadius * r);  		LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  	}  	break;  case 6:  case 7:  case 8:  	{  		float r = 0.5f * (idx - 6 + 1);  		var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  		LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  	}  	break;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: switch (idx) {  case 0:  case 1:  case 2:  	{  		float r = 0.5f * (idx + 1);  		var boxShape = new BoxShape (boxSize * r);  		LocalCreateRigidBody (boxMass * r' trans' boxShape);  	}  	break;  case 3:  case 4:  case 5:  	{  		float r = 0.5f * (idx - 3 + 1);  		var sphereShape = new SphereShape (sphereRadius * r);  		LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  	}  	break;  case 6:  case 7:  case 8:  	{  		float r = 0.5f * (idx - 6 + 1);  		var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  		LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  	}  	break;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following statement contains a magic number: switch (idx) {  case 0:  case 1:  case 2:  	{  		float r = 0.5f * (idx + 1);  		var boxShape = new BoxShape (boxSize * r);  		LocalCreateRigidBody (boxMass * r' trans' boxShape);  	}  	break;  case 3:  case 4:  case 5:  	{  		float r = 0.5f * (idx - 3 + 1);  		var sphereShape = new SphereShape (sphereRadius * r);  		LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  	}  	break;  case 6:  case 7:  case 8:  	{  		float r = 0.5f * (idx - 6 + 1);  		var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  		LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  	}  	break;  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateTaruShape,The following statement contains a magic number: for (int i = 0; i < Taru.Vertices.Length / 3; i++) {  	Vector3 vertex = new Vector3 (Taru.Vertices [i * 3]' Taru.Vertices [i * 3 + 1]' Taru.Vertices [i * 3 + 2]);  	shape.AddPoint (vertex);  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateTaruShape,The following statement contains a magic number: for (int i = 0; i < Taru.Vertices.Length / 3; i++) {  	Vector3 vertex = new Vector3 (Taru.Vertices [i * 3]' Taru.Vertices [i * 3 + 1]' Taru.Vertices [i * 3 + 2]);  	shape.AddPoint (vertex);  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateTaruShape,The following statement contains a magic number: for (int i = 0; i < Taru.Vertices.Length / 3; i++) {  	Vector3 vertex = new Vector3 (Taru.Vertices [i * 3]' Taru.Vertices [i * 3 + 1]' Taru.Vertices [i * 3 + 2]);  	shape.AddPoint (vertex);  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateTaruShape,The following statement contains a magic number: for (int i = 0; i < Taru.Vertices.Length / 3; i++) {  	Vector3 vertex = new Vector3 (Taru.Vertices [i * 3]' Taru.Vertices [i * 3 + 1]' Taru.Vertices [i * 3 + 2]);  	shape.AddPoint (vertex);  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateTaruShape,The following statement contains a magic number: for (int i = 0; i < Taru.Vertices.Length / 3; i++) {  	Vector3 vertex = new Vector3 (Taru.Vertices [i * 3]' Taru.Vertices [i * 3 + 1]' Taru.Vertices [i * 3 + 2]);  	shape.AddPoint (vertex);  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateWall,The following statement contains a magic number: for (int y = 0; y < stackSize; y++) {  	float offset = 1 - y;  	float height = ((stackSize - y) * 2 - 1) * boxSize.Y;  	for (int i = 0; i < y; i++) {  		transform.Origin = offsetPosition + new Vector3 (0' height' (offset + i * 2) * boxSize.Z);  		LocalCreateRigidBody (mass' transform' blockShape);  	}  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateWall,The following statement contains a magic number: for (int y = 0; y < stackSize; y++) {  	float offset = 1 - y;  	float height = ((stackSize - y) * 2 - 1) * boxSize.Y;  	for (int i = 0; i < y; i++) {  		transform.Origin = offsetPosition + new Vector3 (0' height' (offset + i * 2) * boxSize.Z);  		LocalCreateRigidBody (mass' transform' blockShape);  	}  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateWall,The following statement contains a magic number: for (int i = 0; i < y; i++) {  	transform.Origin = offsetPosition + new Vector3 (0' height' (offset + i * 2) * boxSize.Z);  	LocalCreateRigidBody (mass' transform' blockShape);  }  
Magic Number,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateWall,The following statement contains a magic number: transform.Origin = offsetPosition + new Vector3 (0' height' (offset + i * 2) * boxSize.Z);  
Missing Default,BenchmarkDemo,BenchmarkDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\BenchmarkDemo\BenchmarkDemo.cs,CreateShapesGravity,The following switch statement is missing a default case: switch (idx) {  case 0:  case 1:  case 2:  	{  		float r = 0.5f * (idx + 1);  		var boxShape = new BoxShape (boxSize * r);  		LocalCreateRigidBody (boxMass * r' trans' boxShape);  	}  	break;  case 3:  case 4:  case 5:  	{  		float r = 0.5f * (idx - 3 + 1);  		var sphereShape = new SphereShape (sphereRadius * r);  		LocalCreateRigidBody (sphereMass * r' trans' sphereShape);  	}  	break;  case 6:  case 7:  case 8:  	{  		float r = 0.5f * (idx - 6 + 1);  		var capsuleShape = new CapsuleShape (capsuleRadius * r' capsuleHalf * r);  		LocalCreateRigidBody (capsuleMass * r' trans' capsuleShape);  	}  	break;  }  
