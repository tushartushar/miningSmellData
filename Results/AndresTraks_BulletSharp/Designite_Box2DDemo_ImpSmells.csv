Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Box2DDemo,Physics,F:\newReposMay17\AndresTraks_BulletSharp\demos\SlimDX\Box2dDemo\Physics.cs,Physics,Cyclomatic complexity of the method is 11
Long Statement,Box2DDemo,Box2DDemo,F:\newReposMay17\AndresTraks_BulletSharp\demos\SlimDX\Box2dDemo\Box2dDemo.cs,OnInitialize,The length of the statement  "	Fps.Text = "Move using mouse and WASD+shift\n" + "F3 - Toggle debug\n" + "F11 - Toggle fullscreen\n" + "Space - Shoot box"; " is 123.
Magic Number,Box2DDemo,Physics,F:\newReposMay17\AndresTraks_BulletSharp\demos\SlimDX\Box2dDemo\Physics.cs,Physics,The following statement contains a magic number: World.Gravity = new Vector3 (0' -10' 0);  
Magic Number,Box2DDemo,Physics,F:\newReposMay17\AndresTraks_BulletSharp\demos\SlimDX\Box2dDemo\Physics.cs,Physics,The following statement contains a magic number: for (int i = 0; i < ArraySizeY; i++) {  	y = x;  	for (int j = 0; j < ArraySizeX; j++) {  		startTransform = Matrix.Translation (y - new Vector3 (-10' 0' 0));  		//using motionstate is recommended' it provides interpolation capabilities' and only synchronizes 'active' objects  		DefaultMotionState myMotionState = new DefaultMotionState (startTransform);  		RigidBodyConstructionInfo rbInfo;  		switch (j % 3) {  		case 0:  			rbInfo = new RigidBodyConstructionInfo (mass' myMotionState' colShape' localInertia);  			break;  		case 1:  			rbInfo = new RigidBodyConstructionInfo (mass' myMotionState' colShape3' localInertia);  			break;  		default:  			rbInfo = new RigidBodyConstructionInfo (mass' myMotionState' colShape2' localInertia);  			break;  		}  		RigidBody body = new RigidBody (rbInfo);  		rbInfo.Dispose ();  		//body.ActivationState = ActivationState.IslandSleeping;  		body.LinearFactor = new Vector3 (1' 1' 0);  		body.AngularFactor = new Vector3 (0' 0' 1);  		World.AddRigidBody (body);  		y += deltaY;  	}  	x += deltaX;  }  
Magic Number,Box2DDemo,Physics,F:\newReposMay17\AndresTraks_BulletSharp\demos\SlimDX\Box2dDemo\Physics.cs,Physics,The following statement contains a magic number: for (int i = 0; i < ArraySizeY; i++) {  	y = x;  	for (int j = 0; j < ArraySizeX; j++) {  		startTransform = Matrix.Translation (y - new Vector3 (-10' 0' 0));  		//using motionstate is recommended' it provides interpolation capabilities' and only synchronizes 'active' objects  		DefaultMotionState myMotionState = new DefaultMotionState (startTransform);  		RigidBodyConstructionInfo rbInfo;  		switch (j % 3) {  		case 0:  			rbInfo = new RigidBodyConstructionInfo (mass' myMotionState' colShape' localInertia);  			break;  		case 1:  			rbInfo = new RigidBodyConstructionInfo (mass' myMotionState' colShape3' localInertia);  			break;  		default:  			rbInfo = new RigidBodyConstructionInfo (mass' myMotionState' colShape2' localInertia);  			break;  		}  		RigidBody body = new RigidBody (rbInfo);  		rbInfo.Dispose ();  		//body.ActivationState = ActivationState.IslandSleeping;  		body.LinearFactor = new Vector3 (1' 1' 0);  		body.AngularFactor = new Vector3 (0' 0' 1);  		World.AddRigidBody (body);  		y += deltaY;  	}  	x += deltaX;  }  
Magic Number,Box2DDemo,Physics,F:\newReposMay17\AndresTraks_BulletSharp\demos\SlimDX\Box2dDemo\Physics.cs,Physics,The following statement contains a magic number: for (int j = 0; j < ArraySizeX; j++) {  	startTransform = Matrix.Translation (y - new Vector3 (-10' 0' 0));  	//using motionstate is recommended' it provides interpolation capabilities' and only synchronizes 'active' objects  	DefaultMotionState myMotionState = new DefaultMotionState (startTransform);  	RigidBodyConstructionInfo rbInfo;  	switch (j % 3) {  	case 0:  		rbInfo = new RigidBodyConstructionInfo (mass' myMotionState' colShape' localInertia);  		break;  	case 1:  		rbInfo = new RigidBodyConstructionInfo (mass' myMotionState' colShape3' localInertia);  		break;  	default:  		rbInfo = new RigidBodyConstructionInfo (mass' myMotionState' colShape2' localInertia);  		break;  	}  	RigidBody body = new RigidBody (rbInfo);  	rbInfo.Dispose ();  	//body.ActivationState = ActivationState.IslandSleeping;  	body.LinearFactor = new Vector3 (1' 1' 0);  	body.AngularFactor = new Vector3 (0' 0' 1);  	World.AddRigidBody (body);  	y += deltaY;  }  
Magic Number,Box2DDemo,Physics,F:\newReposMay17\AndresTraks_BulletSharp\demos\SlimDX\Box2dDemo\Physics.cs,Physics,The following statement contains a magic number: for (int j = 0; j < ArraySizeX; j++) {  	startTransform = Matrix.Translation (y - new Vector3 (-10' 0' 0));  	//using motionstate is recommended' it provides interpolation capabilities' and only synchronizes 'active' objects  	DefaultMotionState myMotionState = new DefaultMotionState (startTransform);  	RigidBodyConstructionInfo rbInfo;  	switch (j % 3) {  	case 0:  		rbInfo = new RigidBodyConstructionInfo (mass' myMotionState' colShape' localInertia);  		break;  	case 1:  		rbInfo = new RigidBodyConstructionInfo (mass' myMotionState' colShape3' localInertia);  		break;  	default:  		rbInfo = new RigidBodyConstructionInfo (mass' myMotionState' colShape2' localInertia);  		break;  	}  	RigidBody body = new RigidBody (rbInfo);  	rbInfo.Dispose ();  	//body.ActivationState = ActivationState.IslandSleeping;  	body.LinearFactor = new Vector3 (1' 1' 0);  	body.AngularFactor = new Vector3 (0' 0' 1);  	World.AddRigidBody (body);  	y += deltaY;  }  
Magic Number,Box2DDemo,Physics,F:\newReposMay17\AndresTraks_BulletSharp\demos\SlimDX\Box2dDemo\Physics.cs,Physics,The following statement contains a magic number: startTransform = Matrix.Translation (y - new Vector3 (-10' 0' 0));  
Magic Number,Box2DDemo,Physics,F:\newReposMay17\AndresTraks_BulletSharp\demos\SlimDX\Box2dDemo\Physics.cs,Physics,The following statement contains a magic number: switch (j % 3) {  case 0:  	rbInfo = new RigidBodyConstructionInfo (mass' myMotionState' colShape' localInertia);  	break;  case 1:  	rbInfo = new RigidBodyConstructionInfo (mass' myMotionState' colShape3' localInertia);  	break;  default:  	rbInfo = new RigidBodyConstructionInfo (mass' myMotionState' colShape2' localInertia);  	break;  }  
