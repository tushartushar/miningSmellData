Implementation smell,Namespace,Class,File,Method,Description
Long Method,VehicleDemo,CustomVehicle,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\CustomVehicle.cs,UpdateFriction,The method has 129 lines of code.
Long Method,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The method has 213 lines of code.
Complex Method,VehicleDemo,CustomVehicle,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\CustomVehicle.cs,UpdateFriction,Cyclomatic complexity of the method is 18
Complex Method,VehicleDemo,CustomVehicle,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\CustomVehicle.cs,UpdateVehicle,Cyclomatic complexity of the method is 8
Complex Method,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnHandleInput,Cyclomatic complexity of the method is 9
Long Parameter List,VehicleDemo,CustomVehicle,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\CustomVehicle.cs,AddWheel,The method has 7 parameters. Parameters: connectionPointCS' wheelDirectionCS0' wheelAxleCS' suspensionRestLength' wheelRadius' tuning' isFrontWheel
Long Parameter List,VehicleDemo,CustomVehicle,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\CustomVehicle.cs,CalcRollingFriction,The method has 5 parameters. Parameters: body0' body1' contactPosWorld' frictionDirectionWorld' maxImpulse
Long Parameter List,VehicleDemo,CustomVehicle,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\CustomVehicle.cs,ResolveSingleBilateral,The method has 8 parameters. Parameters: body1' pos1' body2' pos2' distance' normal' impulse' timeStep
Long Identifier,VehicleDemo,CustomVehicle,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\CustomVehicle.cs,RayCast,The length of the parameter chassis_velocity_at_contactPoint is 32.
Long Statement,VehicleDemo,CustomVehicle,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\CustomVehicle.cs,UpdateFriction,The length of the statement  "                        rollingFriction = CalcRollingFriction(chassisBody' groundObject' wheel.RaycastInfo.ContactPointWS' forwardWS[i]' maxImpulse); " is 125.
Long Statement,VehicleDemo,CustomVehicle,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\CustomVehicle.cs,UpdateWheelTransform,The length of the statement  "            transform.Origin = wheel.RaycastInfo.HardPointWS + wheel.RaycastInfo.WheelDirectionWS * wheel.RaycastInfo.SuspensionLength; " is 123.
Long Statement,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The length of the statement  "            Vector3 connectionPointCS0 = new Vector3(CUBE_HALF_EXTENTS - (0.3f * wheelWidth)' connectionHeight' 2 * CUBE_HALF_EXTENTS - wheelRadius); " is 137.
Long Statement,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The length of the statement  "            vehicle.AddWheel(connectionPointCS0' wheelDirectionCS0' wheelAxleCS' suspensionRestLength' wheelRadius' tuning' isFrontWheel); " is 126.
Long Statement,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The length of the statement  "            connectionPointCS0 = new Vector3(-CUBE_HALF_EXTENTS + (0.3f * wheelWidth)' connectionHeight' 2 * CUBE_HALF_EXTENTS - wheelRadius); " is 130.
Long Statement,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The length of the statement  "            vehicle.AddWheel(connectionPointCS0' wheelDirectionCS0' wheelAxleCS' suspensionRestLength' wheelRadius' tuning' isFrontWheel); " is 126.
Long Statement,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The length of the statement  "            connectionPointCS0 = new Vector3(-CUBE_HALF_EXTENTS + (0.3f * wheelWidth)' connectionHeight' -2 * CUBE_HALF_EXTENTS + wheelRadius); " is 131.
Long Statement,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The length of the statement  "            vehicle.AddWheel(connectionPointCS0' wheelDirectionCS0' wheelAxleCS' suspensionRestLength' wheelRadius' tuning' isFrontWheel); " is 126.
Long Statement,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The length of the statement  "            connectionPointCS0 = new Vector3(CUBE_HALF_EXTENTS - (0.3f * wheelWidth)' connectionHeight' -2 * CUBE_HALF_EXTENTS + wheelRadius); " is 130.
Long Statement,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The length of the statement  "            vehicle.AddWheel(connectionPointCS0' wheelDirectionCS0' wheelAxleCS' suspensionRestLength' wheelRadius' tuning' isFrontWheel); " is 126.
Magic Number,VehicleDemo,CustomVehicle,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\CustomVehicle.cs,DebugDraw,The following statement contains a magic number: for (int v = 0; v < NumWheels; v++)              {                  WheelInfo wheelInfo = GetWheelInfo(v);                    Color wheelColor;                  if (wheelInfo.RaycastInfo.IsInContact)                  {                      wheelColor = Color.Blue;                  }                  else                  {                      wheelColor = Color.Magenta;                  }                    Matrix transform = wheelInfo.WorldTransform;                  Vector3 wheelPosWS = transform.Origin;                    Vector3 axle = new Vector3(                      transform[0' RightAxis]'                      transform[1' RightAxis]'                      transform[2' RightAxis]);                    Vector3 to1 = wheelPosWS + axle;                  Vector3 to2 = GetWheelInfo(v).RaycastInfo.ContactPointWS;                    //debug wheels (cylinders)                  debugDrawer.DrawLine(ref wheelPosWS' ref to1' wheelColor);                  debugDrawer.DrawLine(ref wheelPosWS' ref to2' wheelColor);                }
Magic Number,VehicleDemo,CustomVehicle,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\CustomVehicle.cs,UpdateFriction,The following statement contains a magic number: for (int i = 0; i < NumWheels; i++)              {                  WheelInfo wheel = wheelInfo[i];                    RigidBody groundObject = wheel.RaycastInfo.GroundObject as RigidBody;                  if (groundObject != null)                  {                      Matrix wheelTrans = GetWheelTransformWS(i);                        axle[i] = new Vector3(                          wheelTrans[0' indexRightAxis]'                          wheelTrans[1' indexRightAxis]'                          wheelTrans[2' indexRightAxis]);                        Vector3 surfNormalWS = wheel.RaycastInfo.ContactNormalWS;                      float proj = Vector3.Dot(axle[i]' surfNormalWS);                      axle[i] -= surfNormalWS * proj;                      axle[i].Normalize();                        forwardWS[i] = Vector3.Cross(surfNormalWS' axle[i]);                      forwardWS[i].Normalize();                        ResolveSingleBilateral(chassisBody' wheel.RaycastInfo.ContactPointWS'                                groundObject' wheel.RaycastInfo.ContactPointWS'                                0' axle[i]' out sideImpulse[i]' timeStep);                        sideImpulse[i] *= sideFrictionStiffness2;                  }              }
Magic Number,VehicleDemo,CustomVehicle,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\CustomVehicle.cs,UpdateVehicle,The following statement contains a magic number: Vector3 forwardW = new Vector3(                  chassisTrans[0' indexForwardAxis]'                  chassisTrans[1' indexForwardAxis]'                  chassisTrans[2' indexForwardAxis]);
Magic Number,VehicleDemo,CustomVehicle,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\CustomVehicle.cs,UpdateVehicle,The following statement contains a magic number: for (int i = 0; i < wheelInfo.Count; i++)              {                  WheelInfo wheel = wheelInfo[i];                  Vector3 relpos = wheel.RaycastInfo.HardPointWS - RigidBody.CenterOfMassPosition;                  Vector3 vel = RigidBody.GetVelocityInLocalPoint(relpos);                    if (wheel.RaycastInfo.IsInContact)                  {                      Matrix chassisWorldTransform = ChassisWorldTransform;                        Vector3 fwd = new Vector3(                          chassisWorldTransform[0' indexForwardAxis]'                          chassisWorldTransform[1' indexForwardAxis]'                          chassisWorldTransform[2' indexForwardAxis]);                        float proj = Vector3.Dot(fwd' wheel.RaycastInfo.ContactNormalWS);                      fwd -= wheel.RaycastInfo.ContactNormalWS * proj;                        float proj2 = Vector3.Dot(fwd' vel);                        wheel.DeltaRotation = (proj2 * step) / (wheel.WheelsRadius);                      wheel.Rotation += wheel.DeltaRotation;                  }                  else                  {                      wheel.Rotation += wheel.DeltaRotation;                  }                    wheel.DeltaRotation *= 0.99f;//damping of rotation when not in contact              }
Magic Number,VehicleDemo,CustomVehicle,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\CustomVehicle.cs,UpdateWheelTransform,The following statement contains a magic number: basis2.M31 = right[2];
Magic Number,VehicleDemo,CustomVehicle,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\CustomVehicle.cs,UpdateWheelTransform,The following statement contains a magic number: basis2.M32 = fwd[2];
Magic Number,VehicleDemo,CustomVehicle,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\CustomVehicle.cs,UpdateWheelTransform,The following statement contains a magic number: basis2.M13 = up[2];
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitialize,The following statement contains a magic number: Freelook.Eye = new Vector3(35' 45' -55);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitialize,The following statement contains a magic number: Freelook.Eye = new Vector3(35' 45' -55);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitialize,The following statement contains a magic number: Freelook.Eye = new Vector3(35' 45' -55);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: CollisionShape groundShape = new BoxShape(50' 3' 50);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: CollisionShape groundShape = new BoxShape(50' 3' 50);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: CollisionShape groundShape = new BoxShape(50' 3' 50);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: Vector3 worldMin = new Vector3(-10000' -10000' -10000);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: Vector3 worldMin = new Vector3(-10000' -10000' -10000);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: Vector3 worldMin = new Vector3(-10000' -10000' -10000);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: Vector3 worldMax = new Vector3(10000' 10000' 10000);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: Vector3 worldMax = new Vector3(10000' 10000' 10000);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: Vector3 worldMax = new Vector3(10000' 10000' 10000);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: int indexStride = 3 * sizeof(int);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: const int NUM_VERTS_X = 20;
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: const int NUM_VERTS_Y = 20;
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: const int totalTriangles = 2 * (NUM_VERTS_X - 1) * (NUM_VERTS_Y - 1);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: vehicleTr = Matrix.Translation(0' -2' 0);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: RigidBody carChassis = LocalCreateRigidBody(800' Matrix.Identity' compound);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: Vector3 connectionPointCS0 = new Vector3(CUBE_HALF_EXTENTS - (0.3f * wheelWidth)' connectionHeight' 2 * CUBE_HALF_EXTENTS - wheelRadius);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: connectionPointCS0 = new Vector3(-CUBE_HALF_EXTENTS + (0.3f * wheelWidth)' connectionHeight' 2 * CUBE_HALF_EXTENTS - wheelRadius);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: connectionPointCS0 = new Vector3(-CUBE_HALF_EXTENTS + (0.3f * wheelWidth)' connectionHeight' -2 * CUBE_HALF_EXTENTS + wheelRadius);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnInitializePhysics,The following statement contains a magic number: connectionPointCS0 = new Vector3(CUBE_HALF_EXTENTS - (0.3f * wheelWidth)' connectionHeight' -2 * CUBE_HALF_EXTENTS + wheelRadius);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnUpdate,The following statement contains a magic number: vehicle.ApplyEngineForce(gEngineForce' 2);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnUpdate,The following statement contains a magic number: vehicle.SetBrake(gBreakingForce' 2);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnUpdate,The following statement contains a magic number: vehicle.ApplyEngineForce(gEngineForce' 3);
Magic Number,VehicleDemo,VehicleDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\VehicleDemo\VehicleDemo.cs,OnUpdate,The following statement contains a magic number: vehicle.SetBrake(gBreakingForce' 3);
