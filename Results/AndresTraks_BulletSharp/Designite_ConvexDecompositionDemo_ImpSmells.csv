Implementation smell,Namespace,Class,File,Method,Description
Long Method,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitializePhysics,The method has 113 lines of code.
Long Parameter List,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,MyContactCallback,The method has 7 parameters. Parameters: cp' colObj0Wrap' partId0' index0' colObj1Wrap' partId1' index1
Long Identifier,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,,The length of the parameter convexDecompositionObjectOffset is 31.
Long Statement,ConvexDecompositionDemo,ConvexDecomposition,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecomposition.cs,ConvexDecompResult,The length of the statement  "            output.WriteLine("## Hull Piece {0} with {1} vertices and {2} triangles."' convexShapes.Count' hullVertices.Length' hullIndices.Length / 3); " is 140.
Magic Number,ConvexDecompositionDemo,ConvexDecomposition,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecomposition.cs,ConvexDecompResult,The following statement contains a magic number: output.WriteLine("## Hull Piece {0} with {1} vertices and {2} triangles."' convexShapes.Count' hullVertices.Length' hullIndices.Length / 3);
Magic Number,ConvexDecompositionDemo,ConvexDecomposition,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecomposition.cs,ConvexDecompResult,The following statement contains a magic number: for (int i = 0; i < hullIndices.Length; i += 3)              {                  int index0 = hullIndices[i];                  int index1 = hullIndices[i + 1];                  int index2 = hullIndices[i + 2];                    Vector3 vertex0 = hullVertices[index0] * LocalScaling - centroid;                  Vector3 vertex1 = hullVertices[index1] * LocalScaling - centroid;                  Vector3 vertex2 = hullVertices[index2] * LocalScaling - centroid;                    index0 += mBaseCount;                  index1 += mBaseCount;                  index2 += mBaseCount;                    output.WriteLine("f {0} {1} {2}"' index0 + 1' index1 + 1' index2 + 1);              }
Magic Number,ConvexDecompositionDemo,ConvexDecomposition,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecomposition.cs,ConvexDecompResult,The following statement contains a magic number: for (int i = 0; i < hullIndices.Length; i += 3)              {                  int index0 = hullIndices[i];                  int index1 = hullIndices[i + 1];                  int index2 = hullIndices[i + 2];                    Vector3 vertex0 = hullVertices[index0] * LocalScaling - centroid;                  Vector3 vertex1 = hullVertices[index1] * LocalScaling - centroid;                  Vector3 vertex2 = hullVertices[index2] * LocalScaling - centroid;                    index0 += mBaseCount;                  index1 += mBaseCount;                  index2 += mBaseCount;                    output.WriteLine("f {0} {1} {2}"' index0 + 1' index1 + 1' index2 + 1);              }
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitialize,The following statement contains a magic number: Freelook.Eye = new Vector3(35' 10' 35);
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitialize,The following statement contains a magic number: Freelook.Eye = new Vector3(35' 10' 35);
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitialize,The following statement contains a magic number: Freelook.Eye = new Vector3(35' 10' 35);
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitialize,The following statement contains a magic number: Freelook.Target = new Vector3(0' 5' 0);
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,SetupEmptyDynamicsWorld,The following statement contains a magic number: Broadphase = new AxisSweep3(new Vector3(-10000' -10000' -10000)' new Vector3(10000' 10000' 10000));
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,SetupEmptyDynamicsWorld,The following statement contains a magic number: Broadphase = new AxisSweep3(new Vector3(-10000' -10000' -10000)' new Vector3(10000' 10000' 10000));
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,SetupEmptyDynamicsWorld,The following statement contains a magic number: Broadphase = new AxisSweep3(new Vector3(-10000' -10000' -10000)' new Vector3(10000' 10000' 10000));
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,SetupEmptyDynamicsWorld,The following statement contains a magic number: Broadphase = new AxisSweep3(new Vector3(-10000' -10000' -10000)' new Vector3(10000' 10000' 10000));
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,SetupEmptyDynamicsWorld,The following statement contains a magic number: Broadphase = new AxisSweep3(new Vector3(-10000' -10000' -10000)' new Vector3(10000' 10000' 10000));
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,SetupEmptyDynamicsWorld,The following statement contains a magic number: Broadphase = new AxisSweep3(new Vector3(-10000' -10000' -10000)' new Vector3(10000' 10000' 10000));
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,SetupEmptyDynamicsWorld,The following statement contains a magic number: CollisionShape groundShape = new BoxShape(30' 2' 30);
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,SetupEmptyDynamicsWorld,The following statement contains a magic number: CollisionShape groundShape = new BoxShape(30' 2' 30);
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,SetupEmptyDynamicsWorld,The following statement contains a magic number: CollisionShape groundShape = new BoxShape(30' 2' 30);
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitializePhysics,The following statement contains a magic number: convexDecompositionObjectOffset = new Vector3(10' 0' 0);
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitializePhysics,The following statement contains a magic number: Vector3 localScaling = new Vector3(6' 6' 6);
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitializePhysics,The following statement contains a magic number: Vector3 localScaling = new Vector3(6' 6' 6);
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitializePhysics,The following statement contains a magic number: Vector3 localScaling = new Vector3(6' 6' 6);
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitializePhysics,The following statement contains a magic number: for (i = 0; i < tcount; i++)              {                  int index0 = indices[i * 3];                  int index1 = indices[i * 3 + 1];                  int index2 = indices[i * 3 + 2];                    Vector3 vertex0 = vertices[index0] * localScaling;                  Vector3 vertex1 = vertices[index1] * localScaling;                  Vector3 vertex2 = vertices[index2] * localScaling;                    trimesh.AddTriangleRef(ref vertex0' ref vertex1' ref vertex2);              }
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitializePhysics,The following statement contains a magic number: for (i = 0; i < tcount; i++)              {                  int index0 = indices[i * 3];                  int index1 = indices[i * 3 + 1];                  int index2 = indices[i * 3 + 2];                    Vector3 vertex0 = vertices[index0] * localScaling;                  Vector3 vertex1 = vertices[index1] * localScaling;                  Vector3 vertex2 = vertices[index2] * localScaling;                    trimesh.AddTriangleRef(ref vertex0' ref vertex1' ref vertex2);              }
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitializePhysics,The following statement contains a magic number: for (i = 0; i < tcount; i++)              {                  int index0 = indices[i * 3];                  int index1 = indices[i * 3 + 1];                  int index2 = indices[i * 3 + 2];                    Vector3 vertex0 = vertices[index0] * localScaling;                  Vector3 vertex1 = vertices[index1] * localScaling;                  Vector3 vertex2 = vertices[index2] * localScaling;                    trimesh.AddTriangleRef(ref vertex0' ref vertex1' ref vertex2);              }
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitializePhysics,The following statement contains a magic number: for (i = 0; i < tcount; i++)              {                  int index0 = indices[i * 3];                  int index1 = indices[i * 3 + 1];                  int index2 = indices[i * 3 + 2];                    Vector3 vertex0 = vertices[index0] * localScaling;                  Vector3 vertex1 = vertices[index1] * localScaling;                  Vector3 vertex2 = vertices[index2] * localScaling;                    trimesh.AddTriangleRef(ref vertex0' ref vertex1' ref vertex2);              }
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitializePhysics,The following statement contains a magic number: LocalCreateRigidBody(mass' Matrix.Translation(0' 2' 14)' convexShape);
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitializePhysics,The following statement contains a magic number: LocalCreateRigidBody(mass' Matrix.Translation(0' 2' 14)' convexShape);
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitializePhysics,The following statement contains a magic number: hacd.CompacityWeight = 0.1;
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitializePhysics,The following statement contains a magic number: hacd.NClusters = 2;
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitializePhysics,The following statement contains a magic number: hacd.Concavity = 100;
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitializePhysics,The following statement contains a magic number: hacd.NumVerticesPerConvexHull = 100;
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitializePhysics,The following statement contains a magic number: convexDecompositionObjectOffset.Z = 6;
Magic Number,ConvexDecompositionDemo,ConvexDecompositionDemo,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\ConvexDecompositionDemo.cs,OnInitializePhysics,The following statement contains a magic number: convexDecompositionObjectOffset.Z = -6;
Magic Number,ConvexDecompositionDemo,WavefrontObj,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (cmd)              {                  case "v":                      vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int[] face = new int[parts.Length - 1];                        face[0] = GetVertex(parts[1].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                        if (face.Length == 4)                      {                          indices.Add(face[0]);                          indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,ConvexDecompositionDemo,WavefrontObj,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (cmd)              {                  case "v":                      vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int[] face = new int[parts.Length - 1];                        face[0] = GetVertex(parts[1].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                        if (face.Length == 4)                      {                          indices.Add(face[0]);                          indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,ConvexDecompositionDemo,WavefrontObj,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (cmd)              {                  case "v":                      vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int[] face = new int[parts.Length - 1];                        face[0] = GetVertex(parts[1].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                        if (face.Length == 4)                      {                          indices.Add(face[0]);                          indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,ConvexDecompositionDemo,WavefrontObj,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (cmd)              {                  case "v":                      vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int[] face = new int[parts.Length - 1];                        face[0] = GetVertex(parts[1].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                        if (face.Length == 4)                      {                          indices.Add(face[0]);                          indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,ConvexDecompositionDemo,WavefrontObj,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (cmd)              {                  case "v":                      vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int[] face = new int[parts.Length - 1];                        face[0] = GetVertex(parts[1].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                        if (face.Length == 4)                      {                          indices.Add(face[0]);                          indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,ConvexDecompositionDemo,WavefrontObj,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (cmd)              {                  case "v":                      vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int[] face = new int[parts.Length - 1];                        face[0] = GetVertex(parts[1].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                        if (face.Length == 4)                      {                          indices.Add(face[0]);                          indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,ConvexDecompositionDemo,WavefrontObj,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (cmd)              {                  case "v":                      vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int[] face = new int[parts.Length - 1];                        face[0] = GetVertex(parts[1].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                        if (face.Length == 4)                      {                          indices.Add(face[0]);                          indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,ConvexDecompositionDemo,WavefrontObj,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (cmd)              {                  case "v":                      vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int[] face = new int[parts.Length - 1];                        face[0] = GetVertex(parts[1].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                        if (face.Length == 4)                      {                          indices.Add(face[0]);                          indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,ConvexDecompositionDemo,WavefrontObj,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (cmd)              {                  case "v":                      vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int[] face = new int[parts.Length - 1];                        face[0] = GetVertex(parts[1].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                        if (face.Length == 4)                      {                          indices.Add(face[0]);                          indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,ConvexDecompositionDemo,WavefrontObj,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (cmd)              {                  case "v":                      vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int[] face = new int[parts.Length - 1];                        face[0] = GetVertex(parts[1].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                        if (face.Length == 4)                      {                          indices.Add(face[0]);                          indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,ConvexDecompositionDemo,WavefrontObj,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (cmd)              {                  case "v":                      vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int[] face = new int[parts.Length - 1];                        face[0] = GetVertex(parts[1].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                        if (face.Length == 4)                      {                          indices.Add(face[0]);                          indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,ConvexDecompositionDemo,WavefrontObj,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\Wavefront.cs,LoadObj,The following statement contains a magic number: return indices.Count / 3;
Missing Default,ConvexDecompositionDemo,WavefrontObj,C:\repos\AndresTraks_BulletSharp\demos\Generic\ConvexDecompositionDemo\Wavefront.cs,ProcessLine,The following switch statement is missing a default case: switch (cmd)              {                  case "v":                      vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int[] face = new int[parts.Length - 1];                        face[0] = GetVertex(parts[1].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                        if (face.Length == 4)                      {                          indices.Add(face[0]);                          indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(faceSplitSchars' System.StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
