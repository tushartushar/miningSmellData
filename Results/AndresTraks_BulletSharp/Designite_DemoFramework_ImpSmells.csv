Implementation smell,Namespace,Class,File,Method,Description
Long Method,DemoFramework.FileLoaders,BspLoader,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\BspLoader.cs,LoadBspFile,The method has 227 lines of code.
Complex Method,DemoFramework,FreeLook,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Controller\FreeLook.cs,Update,Cyclomatic complexity of the method is 8
Complex Method,DemoFramework,Demo,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Demo.cs,Run,Cyclomatic complexity of the method is 8
Complex Method,DemoFramework,Demo,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Demo.cs,OnHandleInput,Cyclomatic complexity of the method is 10
Complex Method,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateShape,Cyclomatic complexity of the method is 16
Complex Method,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,Cyclomatic complexity of the method is 9
Complex Method,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,Cyclomatic complexity of the method is 8
Complex Method,DemoFramework.FileLoaders,BspLoader,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\BspLoader.cs,LoadBspFile,Cyclomatic complexity of the method is 26
Long Parameter List,DemoFramework,BufferedDebugDraw,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\BufferedDebugDraw.cs,DrawTriangle,The method has 5 parameters. Parameters: v0' v1' v2' color' __unnamed004
Long Parameter List,DemoFramework,BufferedDebugDraw,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\BufferedDebugDraw.cs,DrawArc,The method has 9 parameters. Parameters: center' normal' axis' radiusA' radiusB' minAngle' maxAngle' color' drawSect
Long Parameter List,DemoFramework,BufferedDebugDraw,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\BufferedDebugDraw.cs,DrawArc,The method has 10 parameters. Parameters: center' normal' axis' radiusA' radiusB' minAngle' maxAngle' color' drawSect' stepDegrees
Long Parameter List,DemoFramework,BufferedDebugDraw,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\BufferedDebugDraw.cs,DrawContactPoint,The method has 5 parameters. Parameters: pointOnB' normalOnB' distance' lifeTime' color
Long Statement,DemoFramework,GraphicsLibraryManager,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\GraphicsLibraryManager.cs,IsLibraryAvailable,The length of the statement  "                    assemblyNames = new[] { "DemoFramework.SharpDX11"' "SharpDX"' "SharpDX.Direct3D11"' "SharpDX.Direct3D11.Effects"' "SharpDX.DXGI"' "SharpDX.D3DCompiler" }; " is 154.
Long Statement,DemoFramework,GraphicsLibraryManager,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\GraphicsLibraryManager.cs,IsLibraryAvailable,The length of the statement  "                    assemblyNames = new[] { "DemoFramework.SharpDX"' "SharpDX"' "SharpDX.Direct3D10"' "SharpDX.DXGI"' "SharpDX.D3DCompiler" }; " is 122.
Long Statement,DemoFramework,GraphicsLibraryManager,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\GraphicsLibraryManager.cs,IsLibraryAvailable,The length of the statement  "                    assemblyNames = new[] { "DemoFramework.SlimDX"' "SlimDX' Version=4.0.13.43' Culture=neutral' PublicKeyToken=b1b0c32fd1ffe4f9" }; " is 128.
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopCfm' 0.8f' 0);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopCfm' 0.8f' 1);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopCfm' 0.8f' 2);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopCfm' 0.8f' 2);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopCfm' 0.8f' 3);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopCfm' 0.8f' 3);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopCfm' 0.8f' 4);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopCfm' 0.8f' 4);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopCfm' 0.8f' 5);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopCfm' 0.8f' 5);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopErp' 0.1f' 0);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopErp' 0.1f' 1);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopErp' 0.1f' 2);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopErp' 0.1f' 2);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopErp' 0.1f' 3);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopErp' 0.1f' 3);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopErp' 0.1f' 4);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopErp' 0.1f' 4);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopErp' 0.1f' 5);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickRigidBody,The following statement contains a magic number: dof6.SetParam(ConstraintParam.StopErp' 0.1f' 5);
Magic Number,DemoFramework,BodyPicker,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\BodyPicker.cs,PickMultiBody,The following statement contains a magic number: var p2p = new MultiBodyPoint2Point(multiBody' collider.Link' null' pivotInA' pickPosition)              {                  MaxAppliedImpulse = 2              };
Magic Number,DemoFramework,FreeLook,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Controller\FreeLook.cs,Update,The following statement contains a magic number: float flySpeed = _input.KeysDown.Contains(Keys.ShiftKey) ? 15 : 5;
Magic Number,DemoFramework,FreeLook,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Controller\FreeLook.cs,Update,The following statement contains a magic number: float flySpeed = _input.KeysDown.Contains(Keys.ShiftKey) ? 15 : 5;
Magic Number,DemoFramework,MouseController,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Controller\MouseController.cs,MouseController,The following statement contains a magic number: Sensitivity = 0.005f;
Magic Number,DemoFramework,Demo,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Demo.cs,OnHandleInput,The following statement contains a magic number: switch (Input.KeysPressed[0])                  {                      case Keys.Escape:                      case Keys.Q:                          Graphics.Form.Close();                          return;                      case Keys.F1:                          MessageBox.Show(                              "Move using WASD + shift\n" +                              "Left click - point camera\n" +                              "Right click - pick up an object using a Point2PointConstraint\n" +                              "Right click + shift - pick up an object using a fixed Generic6DofConstraint\n" +                              "Space - shoot box\n" +                              "Q - quit\n" +                              Graphics.InfoText'                              "Help");                          // Key release won't be captured                          Input.KeysDown.Remove(Keys.F1);                          break;                      case Keys.F3:                          IsDebugDrawEnabled = !IsDebugDrawEnabled;                          break;                      case Keys.F8:                          Input.ClearKeyCache();                          GraphicsLibraryManager.ExitWithReload = true;                          Graphics.Form.Close();                          break;                      case Keys.F11:                          Graphics.IsFullScreen = !Graphics.IsFullScreen;                          break;                      case (Keys.Control | Keys.F):                          const int maxSerializeBufferSize = 1024 * 1024 * 5;                          using (var serializer = new DefaultSerializer(maxSerializeBufferSize))                          {                              World.Serialize(serializer);                              byte[] dataBytes = new byte[serializer.CurrentBufferSize];                              System.Runtime.InteropServices.Marshal.Copy(serializer.BufferPointer' dataBytes' 0'                                  dataBytes.Length);                              using (var file = new System.IO.FileStream("world.bullet"' System.IO.FileMode.Create))                              {                                  file.Write(dataBytes' 0' dataBytes.Length);                              }                          }                          break;                      case Keys.G:                          //shadowsEnabled = !shadowsEnabled;                          break;                      case Keys.Space:                          ShootBox(Freelook.Eye' GetCameraRayTo());                          break;                      case Keys.Return:                          ClientResetScene();                          break;                  }
Magic Number,DemoFramework,Demo,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Demo.cs,OnHandleInput,The following statement contains a magic number: switch (Input.KeysPressed[0])                  {                      case Keys.Escape:                      case Keys.Q:                          Graphics.Form.Close();                          return;                      case Keys.F1:                          MessageBox.Show(                              "Move using WASD + shift\n" +                              "Left click - point camera\n" +                              "Right click - pick up an object using a Point2PointConstraint\n" +                              "Right click + shift - pick up an object using a fixed Generic6DofConstraint\n" +                              "Space - shoot box\n" +                              "Q - quit\n" +                              Graphics.InfoText'                              "Help");                          // Key release won't be captured                          Input.KeysDown.Remove(Keys.F1);                          break;                      case Keys.F3:                          IsDebugDrawEnabled = !IsDebugDrawEnabled;                          break;                      case Keys.F8:                          Input.ClearKeyCache();                          GraphicsLibraryManager.ExitWithReload = true;                          Graphics.Form.Close();                          break;                      case Keys.F11:                          Graphics.IsFullScreen = !Graphics.IsFullScreen;                          break;                      case (Keys.Control | Keys.F):                          const int maxSerializeBufferSize = 1024 * 1024 * 5;                          using (var serializer = new DefaultSerializer(maxSerializeBufferSize))                          {                              World.Serialize(serializer);                              byte[] dataBytes = new byte[serializer.CurrentBufferSize];                              System.Runtime.InteropServices.Marshal.Copy(serializer.BufferPointer' dataBytes' 0'                                  dataBytes.Length);                              using (var file = new System.IO.FileStream("world.bullet"' System.IO.FileMode.Create))                              {                                  file.Write(dataBytes' 0' dataBytes.Length);                              }                          }                          break;                      case Keys.G:                          //shadowsEnabled = !shadowsEnabled;                          break;                      case Keys.Space:                          ShootBox(Freelook.Eye' GetCameraRayTo());                          break;                      case Keys.Return:                          ClientResetScene();                          break;                  }
Magic Number,DemoFramework,Demo,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Demo.cs,OnHandleInput,The following statement contains a magic number: switch (Input.KeysPressed[0])                  {                      case Keys.Escape:                      case Keys.Q:                          Graphics.Form.Close();                          return;                      case Keys.F1:                          MessageBox.Show(                              "Move using WASD + shift\n" +                              "Left click - point camera\n" +                              "Right click - pick up an object using a Point2PointConstraint\n" +                              "Right click + shift - pick up an object using a fixed Generic6DofConstraint\n" +                              "Space - shoot box\n" +                              "Q - quit\n" +                              Graphics.InfoText'                              "Help");                          // Key release won't be captured                          Input.KeysDown.Remove(Keys.F1);                          break;                      case Keys.F3:                          IsDebugDrawEnabled = !IsDebugDrawEnabled;                          break;                      case Keys.F8:                          Input.ClearKeyCache();                          GraphicsLibraryManager.ExitWithReload = true;                          Graphics.Form.Close();                          break;                      case Keys.F11:                          Graphics.IsFullScreen = !Graphics.IsFullScreen;                          break;                      case (Keys.Control | Keys.F):                          const int maxSerializeBufferSize = 1024 * 1024 * 5;                          using (var serializer = new DefaultSerializer(maxSerializeBufferSize))                          {                              World.Serialize(serializer);                              byte[] dataBytes = new byte[serializer.CurrentBufferSize];                              System.Runtime.InteropServices.Marshal.Copy(serializer.BufferPointer' dataBytes' 0'                                  dataBytes.Length);                              using (var file = new System.IO.FileStream("world.bullet"' System.IO.FileMode.Create))                              {                                  file.Write(dataBytes' 0' dataBytes.Length);                              }                          }                          break;                      case Keys.G:                          //shadowsEnabled = !shadowsEnabled;                          break;                      case Keys.Space:                          ShootBox(Freelook.Eye' GetCameraRayTo());                          break;                      case Keys.Return:                          ClientResetScene();                          break;                  }
Magic Number,DemoFramework,Demo,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Demo.cs,GetRayTo,The following statement contains a magic number: const float farPlane = 10000.0f;
Magic Number,DemoFramework,Demo,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Demo.cs,GetRayTo,The following statement contains a magic number: float tanFov = (float)Math.Tan(fov / 2);
Magic Number,DemoFramework,Demo,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Demo.cs,GetRayTo,The following statement contains a magic number: hor *= 2.0f * farPlane * tanFov;
Magic Number,DemoFramework,Demo,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Demo.cs,GetRayTo,The following statement contains a magic number: vertical *= 2.0f * farPlane * tanFov;
Magic Number,DemoFramework,Demo,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Demo.cs,GetRayTo,The following statement contains a magic number: Vector3 rayTo = rayToCenter - 0.5f * hor + 0.5f * vertical;
Magic Number,DemoFramework,Demo,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Demo.cs,GetRayTo,The following statement contains a magic number: Vector3 rayTo = rayToCenter - 0.5f * hor + 0.5f * vertical;
Magic Number,DemoFramework,Demo,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Demo.cs,ShootBox,The following statement contains a magic number: body.CcdMotionThreshold = 0.5f;
Magic Number,DemoFramework,Demo,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Demo.cs,ShootBox,The following statement contains a magic number: body.CcdSweptSphereRadius = 0.9f;
Magic Number,DemoFramework,BufferedDebugDraw,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\BufferedDebugDraw.cs,ColorToInt,The following statement contains a magic number: return (ci & 0xff0000) >> 16 | (ci & 0xff00) | (ci & 0xff) << 16;
Magic Number,DemoFramework,BufferedDebugDraw,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\BufferedDebugDraw.cs,ColorToInt,The following statement contains a magic number: return (ci & 0xff0000) >> 16 | (ci & 0xff00) | (ci & 0xff) << 16;
Magic Number,DemoFramework,BufferedDebugDraw,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\BufferedDebugDraw.cs,DrawArc,The following statement contains a magic number: DrawArc(ref center' ref normal' ref axis' radiusA' radiusB' minAngle' maxAngle' color' drawSect' 10.0f);
Magic Number,DemoFramework,BufferedDebugDraw,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\BufferedDebugDraw.cs,DrawArc,The following statement contains a magic number: float step = stepDegrees * ((float)Math.PI / 180.0f);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.libraryList.Location = new System.Drawing.Point(13' 13);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.libraryList.Location = new System.Drawing.Point(13' 13);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.libraryList.Size = new System.Drawing.Size(266' 160);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.libraryList.Size = new System.Drawing.Size(266' 160);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.runButton.Location = new System.Drawing.Point(13' 244);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.runButton.Location = new System.Drawing.Point(13' 244);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.runButton.Size = new System.Drawing.Size(87' 43);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.runButton.Size = new System.Drawing.Size(87' 43);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Location = new System.Drawing.Point(204' 244);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Location = new System.Drawing.Point(204' 244);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Size = new System.Drawing.Size(75' 43);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Size = new System.Drawing.Size(75' 43);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.TabIndex = 2;
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.logText.Location = new System.Drawing.Point(13' 180);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.logText.Location = new System.Drawing.Point(13' 180);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.logText.Size = new System.Drawing.Size(266' 58);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.logText.Size = new System.Drawing.Size(266' 58);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.logText.TabIndex = 3;
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(291' 293);
Magic Number,DemoFramework,LibrarySelection,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\LibrarySelection.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(291' 293);
Magic Number,DemoFramework,Graphics,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\Graphics.cs,Graphics,The following statement contains a magic number: FarPlane = 400.0f;
Magic Number,DemoFramework,Graphics,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\Graphics.cs,Graphics,The following statement contains a magic number: FieldOfView = (float)Math.PI / 4;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CompactIndexBuffer,The following statement contains a magic number: indices.Length > 65535
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateBox,The following statement contains a magic number: Vector3[] vertices = new Vector3[36 * 2];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateBox,The following statement contains a magic number: Vector3[] vertices = new Vector3[36 * 2];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateBox,The following statement contains a magic number: i != -3
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateBox,The following statement contains a magic number: j < 3
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateBox2DShape,The following statement contains a magic number: return new Vector3[12]              {                  v[0]' Vector3.UnitZ'                  v[1]' Vector3.UnitZ'                  v[2]' Vector3.UnitZ'                  v[0]' Vector3.UnitZ'                  v[2]' Vector3.UnitZ'                  v[3]' Vector3.UnitZ'              };
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateBox2DShape,The following statement contains a magic number: return new Vector3[12]              {                  v[0]' Vector3.UnitZ'                  v[1]' Vector3.UnitZ'                  v[2]' Vector3.UnitZ'                  v[0]' Vector3.UnitZ'                  v[2]' Vector3.UnitZ'                  v[3]' Vector3.UnitZ'              };
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateBox2DShape,The following statement contains a magic number: return new Vector3[12]              {                  v[0]' Vector3.UnitZ'                  v[1]' Vector3.UnitZ'                  v[2]' Vector3.UnitZ'                  v[0]' Vector3.UnitZ'                  v[2]' Vector3.UnitZ'                  v[3]' Vector3.UnitZ'              };
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateBox2DShape,The following statement contains a magic number: return new Vector3[12]              {                  v[0]' Vector3.UnitZ'                  v[1]' Vector3.UnitZ'                  v[2]' Vector3.UnitZ'                  v[0]' Vector3.UnitZ'                  v[2]' Vector3.UnitZ'                  v[3]' Vector3.UnitZ'              };
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: int slices = (int)(radius * 5.0f);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: int stacks = (int)(radius * 5.0f);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: slices = 2 * MinMax(slices' 3' 16);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: slices = 2 * MinMax(slices' 3' 16);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: slices = 2 * MinMax(slices' 3' 16);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: stacks = 2 * MinMax(stacks' 2' 16) + 1;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: stacks = 2 * MinMax(stacks' 2' 16) + 1;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: stacks = 2 * MinMax(stacks' 2' 16) + 1;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: int vertexCount = 2 + slices * (stacks - 1);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: int indexCount = 6 * slices * (stacks - 1);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: var vertices = new Vector3[vertexCount * 2];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: vertices[2] = RotateYAxisUp(0' apex' 0' up);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: vertices[3] = RotateYAxisUp(Vector3.UnitY' up);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: int v = 4;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: float vAngle = -(float)Math.PI / 2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: float hAngleStep = (float)Math.PI * 2 / slices;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: uint index = 2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: indices[i - 1] = 2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: int sliceDiff = slices * 3;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: indices[i] = indices[i - sliceDiff + 2];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: indices[i + 2] = indices[i - sliceDiff];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: i += 3;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: indices[i + 2] = indices[i - sliceDiff + 4];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: indices[i + 2] = indices[i - sliceDiff + 4];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: i += 3;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCapsule,The following statement contains a magic number: j < stacks - 2
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCone,The following statement contains a magic number: float halfHeight = shape.Height / 2 + shape.Margin;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCone,The following statement contains a magic number: const int numSteps = 10;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCone,The following statement contains a magic number: const float angleStep = (2 * (float)Math.PI) / numSteps;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCone,The following statement contains a magic number: const int vertexCount = 2 + 6 * numSteps;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCone,The following statement contains a magic number: const int vertexCount = 2 + 6 * numSteps;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCone,The following statement contains a magic number: const int indexCount = (4 * numSteps + 2) * 3;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCone,The following statement contains a magic number: const int indexCount = (4 * numSteps + 2) * 3;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCone,The following statement contains a magic number: const int indexCount = (4 * numSteps + 2) * 3;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCone,The following statement contains a magic number: var vertices = new Vector3[vertexCount * 2];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCone,The following statement contains a magic number: index += 2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCone,The following statement contains a magic number: index += 2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCone,The following statement contains a magic number: indices[i++] = index - 2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCone,The following statement contains a magic number: index += 2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCone,The following statement contains a magic number: indices[i++] = index - 2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCylinder,The following statement contains a magic number: const int numSteps = 10;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCylinder,The following statement contains a magic number: const float angleStep = (2 * (float)Math.PI) / numSteps;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCylinder,The following statement contains a magic number: const int vertexCount = 2 + 6 * numSteps;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCylinder,The following statement contains a magic number: const int vertexCount = 2 + 6 * numSteps;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCylinder,The following statement contains a magic number: const int indexCount = (4 * numSteps + 2) * 3;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCylinder,The following statement contains a magic number: const int indexCount = (4 * numSteps + 2) * 3;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCylinder,The following statement contains a magic number: const int indexCount = (4 * numSteps + 2) * 3;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCylinder,The following statement contains a magic number: var vertices = new Vector3[vertexCount * 2];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCylinder,The following statement contains a magic number: index += 2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCylinder,The following statement contains a magic number: side != -3
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCylinder,The following statement contains a magic number: index += 2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCylinder,The following statement contains a magic number: indices[i++] = index - 2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCylinder,The following statement contains a magic number: index += 2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateCylinder,The following statement contains a magic number: indices[i++] = index - 2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateConvexHull,The following statement contains a magic number: var vertices = new Vector3[vertexCount * 2];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateConvexHull,The following statement contains a magic number: Vector3 v2 = points[(int)indices[i + 2]];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateMultiSphere,The following statement contains a magic number: int indexOffset = vertexCount / 2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreatePolyhedralConvexShape,The following statement contains a magic number: Vector3[] vertices = new Vector3[numVertices * 3];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreatePolyhedralConvexShape,The following statement contains a magic number: polyhedralConvexShape.GetVertex(i + 2' out v2);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreatePolyhedralConvexShape,The following statement contains a magic number: polyhedralConvexShape.GetVertex(i + 3' out v3);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreatePolyhedralConvexShape,The following statement contains a magic number: int i3 = i * 3;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreatePolyhedralConvexShape,The following statement contains a magic number: vertices[i3 + 2] = v1;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreatePolyhedralConvexShape,The following statement contains a magic number: vertices[i3 + 3] = normal;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreatePolyhedralConvexShape,The following statement contains a magic number: vertices[i3 + 4] = v2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreatePolyhedralConvexShape,The following statement contains a magic number: vertices[i3 + 5] = normal;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreatePolyhedralConvexShape,The following statement contains a magic number: vertices[i3 + 6] = v0;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreatePolyhedralConvexShape,The following statement contains a magic number: vertices[i3 + 7] = normal;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreatePolyhedralConvexShape,The following statement contains a magic number: vertices[i3 + 8] = v2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreatePolyhedralConvexShape,The following statement contains a magic number: vertices[i3 + 9] = normal;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreatePolyhedralConvexShape,The following statement contains a magic number: vertices[i3 + 10] = v3;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: int slices = (int)(radius * 10.0f);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: int stacks = (int)(radius * 10.0f);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: slices = MinMax(slices' 6' 16);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: slices = MinMax(slices' 6' 16);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: stacks = MinMax(stacks' 6' 16);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: stacks = MinMax(stacks' 6' 16);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: int vertexCount = 2 + slices * (stacks - 1);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: int indexCount = 6 * slices * (stacks - 1);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: var vertices = new Vector3[vertexCount * 2];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: float vAngle = -(float)Math.PI / 2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: float horAngleStep = (float)Math.PI * 2 / slices;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: ushort index = 2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: indices[i - 1] = 2;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: int sliceDiff = slices * 3;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: indices[i] = indices[i - sliceDiff + 2];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: indices[i + 2] = indices[i - sliceDiff];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: i += 3;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: indices[i + 2] = indices[i - sliceDiff + 4];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: indices[i + 2] = indices[i - sliceDiff + 4];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: i += 3;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateSphere,The following statement contains a magic number: j < stacks - 2
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,PlaneSpace1,The following statement contains a magic number: float a = n[1] * n[1] + n[2] * n[2];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,PlaneSpace1,The following statement contains a magic number: float a = n[1] * n[1] + n[2] * n[2];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,PlaneSpace1,The following statement contains a magic number: p = new Vector3(0' -n[2] * k' n[1] * k);
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,PlaneSpace1,The following statement contains a magic number: Math.Abs(n[2]) > (Math.Sqrt(2) / 2)
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,PlaneSpace1,The following statement contains a magic number: Math.Abs(n[2]) > (Math.Sqrt(2) / 2)
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,PlaneSpace1,The following statement contains a magic number: Math.Abs(n[2]) > (Math.Sqrt(2) / 2)
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateStaticPlane,The following statement contains a magic number: const float size = 1000;
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateStaticPlane,The following statement contains a magic number: indices = new uint[] { 0' 2' 1' 0' 1' 3 };
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateStaticPlane,The following statement contains a magic number: indices = new uint[] { 0' 2' 1' 0' 1' 3 };
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateTriangleMesh,The following statement contains a magic number: Vector3[] vertices = new Vector3[numFaces * 3 * 2];
Magic Number,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateTriangleMesh,The following statement contains a magic number: Vector3[] vertices = new Vector3[numFaces * 3 * 2];
Magic Number,DemoFramework.FileLoaders,BspConverter,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\BspConverter.cs,ConvertBsp,The following statement contains a magic number: playerStart.Z += 20.0f;
Magic Number,DemoFramework.FileLoaders,BspConverter,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\BspConverter.cs,GetPlayerPosition,The following statement contains a magic number: return new Vector3(0' 0' 100);
Magic Number,DemoFramework.FileLoaders,BspLoader,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\BspLoader.cs,LoadBspFile,The following statement contains a magic number: string id = Encoding.ASCII.GetString(reader.ReadBytes(4)' 0' 4);
Magic Number,DemoFramework.FileLoaders,BspLoader,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\BspLoader.cs,LoadBspFile,The following statement contains a magic number: string id = Encoding.ASCII.GetString(reader.ReadBytes(4)' 0' 4);
Magic Number,DemoFramework.FileLoaders,BspLoader,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\BspLoader.cs,LoadBspFile,The following statement contains a magic number: nHeaderLumps = 17;
Magic Number,DemoFramework.FileLoaders,BspLoader,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\BspLoader.cs,LoadBspFile,The following statement contains a magic number: switch (entity)                  {                      case "\0":                          continue;                        case "{":                          bspEntity = new BspEntity();                          break;                        case "}":                          Entities.Add(bspEntity.ClassName' bspEntity);                          break;                        default:                          string[] keyValue = entity.Trim('\"').Split(new[] { "\" \"" }' 2' 0);                          switch (keyValue[0])                          {                              case "classname":                                  bspEntity.ClassName = keyValue[1];                                  break;                              case "origin":                                  string[] originStrings = keyValue[1].Split(' ');                                  bspEntity.Origin = new Vector3(                                      float.Parse(originStrings[0]' CultureInfo.InvariantCulture)'                                      float.Parse(originStrings[1]' CultureInfo.InvariantCulture)'                                      float.Parse(originStrings[2]' CultureInfo.InvariantCulture));                                  break;                              default:                                  if (!bspEntity.KeyValues.ContainsKey(keyValue[0]))                                  {                                      if (keyValue.Length == 1)                                      {                                          bspEntity.KeyValues.Add(keyValue[0]' "");                                      }                                      else                                      {                                          bspEntity.KeyValues.Add(keyValue[0]' keyValue[1]);                                      }                                  }                                  break;                          }                          break;                  }
Magic Number,DemoFramework.FileLoaders,BspLoader,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\BspLoader.cs,LoadBspFile,The following statement contains a magic number: switch (entity)                  {                      case "\0":                          continue;                        case "{":                          bspEntity = new BspEntity();                          break;                        case "}":                          Entities.Add(bspEntity.ClassName' bspEntity);                          break;                        default:                          string[] keyValue = entity.Trim('\"').Split(new[] { "\" \"" }' 2' 0);                          switch (keyValue[0])                          {                              case "classname":                                  bspEntity.ClassName = keyValue[1];                                  break;                              case "origin":                                  string[] originStrings = keyValue[1].Split(' ');                                  bspEntity.Origin = new Vector3(                                      float.Parse(originStrings[0]' CultureInfo.InvariantCulture)'                                      float.Parse(originStrings[1]' CultureInfo.InvariantCulture)'                                      float.Parse(originStrings[2]' CultureInfo.InvariantCulture));                                  break;                              default:                                  if (!bspEntity.KeyValues.ContainsKey(keyValue[0]))                                  {                                      if (keyValue.Length == 1)                                      {                                          bspEntity.KeyValues.Add(keyValue[0]' "");                                      }                                      else                                      {                                          bspEntity.KeyValues.Add(keyValue[0]' keyValue[1]);                                      }                                  }                                  break;                          }                          break;                  }
Magic Number,DemoFramework.FileLoaders,BspLoader,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\BspLoader.cs,LoadBspFile,The following statement contains a magic number: length /= IsVbsp ? 32 : Marshal.SizeOf(typeof(BspLeaf));
Magic Number,DemoFramework.FileLoaders,BspLoader,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\BspLoader.cs,LoadBspFile,The following statement contains a magic number: length = lumps[(int)IBspLumpType.Shaders].Length / (64 + 2 * sizeof(int));
Magic Number,DemoFramework.FileLoaders,BspLoader,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\BspLoader.cs,LoadBspFile,The following statement contains a magic number: length = lumps[(int)IBspLumpType.Shaders].Length / (64 + 2 * sizeof(int));
Magic Number,DemoFramework.FileLoaders,BspLoader,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\BspLoader.cs,LoadBspFile,The following statement contains a magic number: byte[] shaderBytes = new byte[64];
Magic Number,DemoFramework.FileLoaders,BspLoader,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\BspLoader.cs,LoadBspFile,The following statement contains a magic number: reader.Read(shaderBytes' 0' 64);
Magic Number,DemoFramework.FileLoaders,WavefrontObj,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (command)              {                  case "v":                      _vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      Normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //Texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int numVertices = parts.Length - 1;                      int[] face = new int[numVertices];                        face[0] = GetVertex(parts[1].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                        if (numVertices == 4)                      {                          Indices.Add(face[0]);                          Indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,DemoFramework.FileLoaders,WavefrontObj,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (command)              {                  case "v":                      _vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      Normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //Texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int numVertices = parts.Length - 1;                      int[] face = new int[numVertices];                        face[0] = GetVertex(parts[1].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                        if (numVertices == 4)                      {                          Indices.Add(face[0]);                          Indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,DemoFramework.FileLoaders,WavefrontObj,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (command)              {                  case "v":                      _vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      Normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //Texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int numVertices = parts.Length - 1;                      int[] face = new int[numVertices];                        face[0] = GetVertex(parts[1].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                        if (numVertices == 4)                      {                          Indices.Add(face[0]);                          Indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,DemoFramework.FileLoaders,WavefrontObj,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (command)              {                  case "v":                      _vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      Normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //Texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int numVertices = parts.Length - 1;                      int[] face = new int[numVertices];                        face[0] = GetVertex(parts[1].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                        if (numVertices == 4)                      {                          Indices.Add(face[0]);                          Indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,DemoFramework.FileLoaders,WavefrontObj,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (command)              {                  case "v":                      _vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      Normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //Texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int numVertices = parts.Length - 1;                      int[] face = new int[numVertices];                        face[0] = GetVertex(parts[1].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                        if (numVertices == 4)                      {                          Indices.Add(face[0]);                          Indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,DemoFramework.FileLoaders,WavefrontObj,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (command)              {                  case "v":                      _vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      Normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //Texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int numVertices = parts.Length - 1;                      int[] face = new int[numVertices];                        face[0] = GetVertex(parts[1].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                        if (numVertices == 4)                      {                          Indices.Add(face[0]);                          Indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,DemoFramework.FileLoaders,WavefrontObj,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (command)              {                  case "v":                      _vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      Normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //Texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int numVertices = parts.Length - 1;                      int[] face = new int[numVertices];                        face[0] = GetVertex(parts[1].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                        if (numVertices == 4)                      {                          Indices.Add(face[0]);                          Indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,DemoFramework.FileLoaders,WavefrontObj,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (command)              {                  case "v":                      _vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      Normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //Texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int numVertices = parts.Length - 1;                      int[] face = new int[numVertices];                        face[0] = GetVertex(parts[1].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                        if (numVertices == 4)                      {                          Indices.Add(face[0]);                          Indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,DemoFramework.FileLoaders,WavefrontObj,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (command)              {                  case "v":                      _vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      Normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //Texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int numVertices = parts.Length - 1;                      int[] face = new int[numVertices];                        face[0] = GetVertex(parts[1].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                        if (numVertices == 4)                      {                          Indices.Add(face[0]);                          Indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,DemoFramework.FileLoaders,WavefrontObj,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (command)              {                  case "v":                      _vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      Normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //Texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int numVertices = parts.Length - 1;                      int[] face = new int[numVertices];                        face[0] = GetVertex(parts[1].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                        if (numVertices == 4)                      {                          Indices.Add(face[0]);                          Indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Magic Number,DemoFramework.FileLoaders,WavefrontObj,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\Wavefront.cs,ProcessLine,The following statement contains a magic number: switch (command)              {                  case "v":                      _vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      Normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //Texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int numVertices = parts.Length - 1;                      int[] face = new int[numVertices];                        face[0] = GetVertex(parts[1].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                        if (numVertices == 4)                      {                          Indices.Add(face[0]);                          Indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
Missing Default,DemoFramework,Demo,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Demo.cs,OnHandleInput,The following switch statement is missing a default case: switch (Input.KeysPressed[0])                  {                      case Keys.Escape:                      case Keys.Q:                          Graphics.Form.Close();                          return;                      case Keys.F1:                          MessageBox.Show(                              "Move using WASD + shift\n" +                              "Left click - point camera\n" +                              "Right click - pick up an object using a Point2PointConstraint\n" +                              "Right click + shift - pick up an object using a fixed Generic6DofConstraint\n" +                              "Space - shoot box\n" +                              "Q - quit\n" +                              Graphics.InfoText'                              "Help");                          // Key release won't be captured                          Input.KeysDown.Remove(Keys.F1);                          break;                      case Keys.F3:                          IsDebugDrawEnabled = !IsDebugDrawEnabled;                          break;                      case Keys.F8:                          Input.ClearKeyCache();                          GraphicsLibraryManager.ExitWithReload = true;                          Graphics.Form.Close();                          break;                      case Keys.F11:                          Graphics.IsFullScreen = !Graphics.IsFullScreen;                          break;                      case (Keys.Control | Keys.F):                          const int maxSerializeBufferSize = 1024 * 1024 * 5;                          using (var serializer = new DefaultSerializer(maxSerializeBufferSize))                          {                              World.Serialize(serializer);                              byte[] dataBytes = new byte[serializer.CurrentBufferSize];                              System.Runtime.InteropServices.Marshal.Copy(serializer.BufferPointer' dataBytes' 0'                                  dataBytes.Length);                              using (var file = new System.IO.FileStream("world.bullet"' System.IO.FileMode.Create))                              {                                  file.Write(dataBytes' 0' dataBytes.Length);                              }                          }                          break;                      case Keys.G:                          //shadowsEnabled = !shadowsEnabled;                          break;                      case Keys.Space:                          ShootBox(Freelook.Eye' GetCameraRayTo());                          break;                      case Keys.Return:                          ClientResetScene();                          break;                  }
Missing Default,DemoFramework,MeshFactory,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\MeshFactory.cs,CreateShape,The following switch statement is missing a default case: switch (shape.ShapeType)              {                  case BroadphaseNativeType.BoxShape:                      indices = null;                      return CreateBox(shape as BoxShape);                  case BroadphaseNativeType.Box2DShape:                      indices = null;                      return CreateBox2DShape(shape as Box2DShape);                  case BroadphaseNativeType.CapsuleShape:                      return CreateCapsule(shape as CapsuleShape' out indices);                  case BroadphaseNativeType.Convex2DShape:                      return CreateShape((shape as Convex2DShape).ChildShape' out indices);                  case BroadphaseNativeType.ConvexHullShape:                      indices = null;                      return CreateConvexHull(shape as ConvexHullShape);                  case BroadphaseNativeType.ConeShape:                      return CreateCone(shape as ConeShape' out indices);                  case BroadphaseNativeType.CylinderShape:                      return CreateCylinder(shape as CylinderShape' out indices);                  case BroadphaseNativeType.GImpactShape:                      indices = null;                      return CreateTriangleMesh((shape as GImpactMeshShape).MeshInterface);                  case BroadphaseNativeType.MultiSphereShape:                      return CreateMultiSphere(shape as MultiSphereShape' out indices);                  case BroadphaseNativeType.SphereShape:                      return CreateSphere(shape as SphereShape' out indices);                  case BroadphaseNativeType.StaticPlaneShape:                      return CreateStaticPlane(shape as StaticPlaneShape' out indices);                  case BroadphaseNativeType.TerrainShape:                      return CreateHeightFieldTerrainShape(shape as HeightfieldTerrainShape' out indices);                  case BroadphaseNativeType.TriangleMeshShape:                      indices = null;                      return CreateTriangleMesh((shape as TriangleMeshShape).MeshInterface);                  case BroadphaseNativeType.UniformScalingShape:                      indices = null;                      return CreateUniformScalingShape(shape as UniformScalingShape' out indices);                  case BroadphaseNativeType.ScaledTriangleMeshShape:                      indices = null;                      return CreateScaledBvhTriangleMeshShape(shape as ScaledBvhTriangleMeshShape' out indices);                }
Missing Default,DemoFramework.FileLoaders,WavefrontObj,D:\research\architectureSmells\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\FileLoaders\Wavefront.cs,ProcessLine,The following switch statement is missing a default case: switch (command)              {                  case "v":                      _vertices.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vn":                      Normals.Add(ToVector3(parts[1]' parts[2]' parts[3]));                      break;                  case "vt":                      //Texels.Add(ToVector2(parts[1]' parts[2]));                      break;                  case "f":                      int numVertices = parts.Length - 1;                      int[] face = new int[numVertices];                        face[0] = GetVertex(parts[1].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[1] = GetVertex(parts[2].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      face[2] = GetVertex(parts[3].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                        if (numVertices == 4)                      {                          Indices.Add(face[0]);                          Indices.Add(face[2]);                          face[3] = GetVertex(parts[4].Split(_faceSplitSchars' StringSplitOptions.RemoveEmptyEntries));                      }                      break;              }
