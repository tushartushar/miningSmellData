Implementation smell,Namespace,Class,File,Method,Description
Long Method,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Initialize,The method has 151 lines of code.
Complex Method,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,Cyclomatic complexity of the method is 8
Complex Method,DemoFramework.SharpDX11,MeshFactory,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,InitInstancedRender,Cyclomatic complexity of the method is 12
Complex Method,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,DisposeBuffers,Cyclomatic complexity of the method is 22
Complex Method,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Initialize,Cyclomatic complexity of the method is 10
Long Statement,DemoFramework.SharpDX11,InfoText,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\InfoText.cs,Render,The length of the statement  "	_immediateContext.MapSubresource (_renderTexture' 0' 0' MapMode.WriteDiscard' SharpDX.Direct3D11.MapFlags.None' out stream); " is 124.
Long Statement,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The length of the statement  "			vTemp = new Vector3 ((float)Math.Cos (vAngle) * (float)Math.Sin (angle)' (float)Math.Sin (vAngle)' (float)Math.Cos (vAngle) * (float)Math.Cos (angle)); " is 151.
Long Statement,DemoFramework.SharpDX11,MathHelper,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MathHelper.cs,Convert,The length of the statement  "	return new Matrix (m.M11' m.M12' m.M13' m.M14' m.M21' m.M22' m.M23' m.M24' m.M31' m.M32' m.M33' m.M34' m.M41' m.M42' m.M43' m.M44); " is 131.
Long Statement,DemoFramework.SharpDX11,ShapeData,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,SetDynamicVertexBuffer,The length of the statement  "		DataBox db = device.ImmediateContext.MapSubresource (VertexBuffer' 0' MapMode.WriteDiscard' SharpDX.Direct3D11.MapFlags.None); " is 126.
Long Statement,DemoFramework.SharpDX11,MeshFactory,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,InitRigidBodyInstance,The length of the statement  "			Color = "Ground".Equals (colObj.UserObject) ? groundColor : colObj.ActivationState == ActivationState.ActiveTag ? activeColor : passiveColor " is 140.
Long Statement,DemoFramework.SharpDX11,MeshFactory,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,InitInstancedRender,The length of the statement  "		DataBox db = device.ImmediateContext.MapSubresource (s.InstanceDataBuffer' 0' MapMode.WriteDiscard' SharpDX.Direct3D11.MapFlags.None); " is 134.
Long Statement,DemoFramework.SharpDX11,PhysicsDebugDraw,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\PhysicsDebugDraw.cs,DrawDebugWorld,The length of the statement  "		device.ImmediateContext.MapSubresource (vertexBuffer' MapMode.WriteDiscard' SharpDX.Direct3D11.MapFlags.None' out data); " is 120.
Long Statement,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,OnInitializeDevice,The length of the statement  "	SharpDX.Direct3D11.Device.CreateWithSwapChain (DriverType.Hardware' DeviceCreationFlags.None' desc' out _device' out _swapChain); " is 129.
Long Statement,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Initialize,The length of the statement  "	lightVolumeInputLayout = new InputLayout (Device' lightShader.GetTechniqueByIndex (0).GetPassByName ("Light").Description.Signature' elements); " is 143.
Long Statement,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,SetSceneConstants,The length of the statement  "	Matrix lightProjection = Matrix.PerspectiveFovLH (FieldOfView' (float)depthBuffer.Width / (float)depthBuffer.Height' _nearPlane' FarPlane); " is 139.
Long Statement,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,SetSceneConstants,The length of the statement  "	_immediateContext.MapSubresource (sceneConstantsBuffer' MapMode.WriteDiscard' SharpDX.Direct3D11.MapFlags.None' out data); " is 122.
Long Statement,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,RenderLights,The length of the statement  "		if ((light.Position - MathHelper.Convert (Demo.Freelook.Eye)).LengthSquared () < (light.Radius * light.Radius) + bias) { " is 120.
Magic Number,DemoFramework.SharpDX11,InfoText,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\InfoText.cs,InfoText,The following statement contains a magic number: _bitmapSize = width * height * 4;  
Magic Number,DemoFramework.SharpDX11,InfoText,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\InfoText.cs,InfoText,The following statement contains a magic number: using (var factoryDWrite = new SharpDX.DirectWrite.Factory (SharpDX.DirectWrite.FactoryType.Shared)) {  	_textFormat = new TextFormat (factoryDWrite' "Tahoma"' 20);  }  
Magic Number,DemoFramework.SharpDX11,InfoText,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\InfoText.cs,InfoText,The following statement contains a magic number: _textFormat = new TextFormat (factoryDWrite' "Tahoma"' 20);  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: slices = (slices > 16) ? 16 : (slices < 3) ? 3 : slices;  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: slices = (slices > 16) ? 16 : (slices < 3) ? 3 : slices;  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: slices = (slices > 16) ? 16 : (slices < 3) ? 3 : slices;  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: slices = (slices > 16) ? 16 : (slices < 3) ? 3 : slices;  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: stacks = (stacks > 16) ? 16 : (stacks < 2) ? 2 : stacks;  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: stacks = (stacks > 16) ? 16 : (stacks < 2) ? 2 : stacks;  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: stacks = (stacks > 16) ? 16 : (stacks < 2) ? 2 : stacks;  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: stacks = (stacks > 16) ? 16 : (stacks < 2) ? 2 : stacks;  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: indices [i - 1] = 2;  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (j = 0; j < stacks - 2; j++) {  	for (k = 0; k < slices; k++) {  		indices [i] = indices [i - sliceDiff + 2];  		indices [i + 1] = index++;  		indices [i + 2] = indices [i - sliceDiff];  		i += 3;  	}  	for (k = 0; k < slices; k++) {  		indices [i] = indices [i - sliceDiff + 1];  		indices [i + 1] = indices [i - sliceDiff];  		indices [i + 2] = indices [i - sliceDiff + 4];  		i += 3;  	}  	indices [i - 1] = indices [i - sliceDiff];  }  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (j = 0; j < stacks - 2; j++) {  	for (k = 0; k < slices; k++) {  		indices [i] = indices [i - sliceDiff + 2];  		indices [i + 1] = index++;  		indices [i + 2] = indices [i - sliceDiff];  		i += 3;  	}  	for (k = 0; k < slices; k++) {  		indices [i] = indices [i - sliceDiff + 1];  		indices [i + 1] = indices [i - sliceDiff];  		indices [i + 2] = indices [i - sliceDiff + 4];  		i += 3;  	}  	indices [i - 1] = indices [i - sliceDiff];  }  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (j = 0; j < stacks - 2; j++) {  	for (k = 0; k < slices; k++) {  		indices [i] = indices [i - sliceDiff + 2];  		indices [i + 1] = index++;  		indices [i + 2] = indices [i - sliceDiff];  		i += 3;  	}  	for (k = 0; k < slices; k++) {  		indices [i] = indices [i - sliceDiff + 1];  		indices [i + 1] = indices [i - sliceDiff];  		indices [i + 2] = indices [i - sliceDiff + 4];  		i += 3;  	}  	indices [i - 1] = indices [i - sliceDiff];  }  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (j = 0; j < stacks - 2; j++) {  	for (k = 0; k < slices; k++) {  		indices [i] = indices [i - sliceDiff + 2];  		indices [i + 1] = index++;  		indices [i + 2] = indices [i - sliceDiff];  		i += 3;  	}  	for (k = 0; k < slices; k++) {  		indices [i] = indices [i - sliceDiff + 1];  		indices [i + 1] = indices [i - sliceDiff];  		indices [i + 2] = indices [i - sliceDiff + 4];  		i += 3;  	}  	indices [i - 1] = indices [i - sliceDiff];  }  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (j = 0; j < stacks - 2; j++) {  	for (k = 0; k < slices; k++) {  		indices [i] = indices [i - sliceDiff + 2];  		indices [i + 1] = index++;  		indices [i + 2] = indices [i - sliceDiff];  		i += 3;  	}  	for (k = 0; k < slices; k++) {  		indices [i] = indices [i - sliceDiff + 1];  		indices [i + 1] = indices [i - sliceDiff];  		indices [i + 2] = indices [i - sliceDiff + 4];  		i += 3;  	}  	indices [i - 1] = indices [i - sliceDiff];  }  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (j = 0; j < stacks - 2; j++) {  	for (k = 0; k < slices; k++) {  		indices [i] = indices [i - sliceDiff + 2];  		indices [i + 1] = index++;  		indices [i + 2] = indices [i - sliceDiff];  		i += 3;  	}  	for (k = 0; k < slices; k++) {  		indices [i] = indices [i - sliceDiff + 1];  		indices [i + 1] = indices [i - sliceDiff];  		indices [i + 2] = indices [i - sliceDiff + 4];  		i += 3;  	}  	indices [i - 1] = indices [i - sliceDiff];  }  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (j = 0; j < stacks - 2; j++) {  	for (k = 0; k < slices; k++) {  		indices [i] = indices [i - sliceDiff + 2];  		indices [i + 1] = index++;  		indices [i + 2] = indices [i - sliceDiff];  		i += 3;  	}  	for (k = 0; k < slices; k++) {  		indices [i] = indices [i - sliceDiff + 1];  		indices [i + 1] = indices [i - sliceDiff];  		indices [i + 2] = indices [i - sliceDiff + 4];  		i += 3;  	}  	indices [i - 1] = indices [i - sliceDiff];  }  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (k = 0; k < slices; k++) {  	indices [i] = indices [i - sliceDiff + 2];  	indices [i + 1] = index++;  	indices [i + 2] = indices [i - sliceDiff];  	i += 3;  }  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (k = 0; k < slices; k++) {  	indices [i] = indices [i - sliceDiff + 2];  	indices [i + 1] = index++;  	indices [i + 2] = indices [i - sliceDiff];  	i += 3;  }  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (k = 0; k < slices; k++) {  	indices [i] = indices [i - sliceDiff + 2];  	indices [i + 1] = index++;  	indices [i + 2] = indices [i - sliceDiff];  	i += 3;  }  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: indices [i] = indices [i - sliceDiff + 2];  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: indices [i + 2] = indices [i - sliceDiff];  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: i += 3;  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (k = 0; k < slices; k++) {  	indices [i] = indices [i - sliceDiff + 1];  	indices [i + 1] = indices [i - sliceDiff];  	indices [i + 2] = indices [i - sliceDiff + 4];  	i += 3;  }  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (k = 0; k < slices; k++) {  	indices [i] = indices [i - sliceDiff + 1];  	indices [i + 1] = indices [i - sliceDiff];  	indices [i + 2] = indices [i - sliceDiff + 4];  	i += 3;  }  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (k = 0; k < slices; k++) {  	indices [i] = indices [i - sliceDiff + 1];  	indices [i + 1] = indices [i - sliceDiff];  	indices [i + 2] = indices [i - sliceDiff + 4];  	i += 3;  }  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: indices [i + 2] = indices [i - sliceDiff + 4];  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: indices [i + 2] = indices [i - sliceDiff + 4];  
Magic Number,DemoFramework.SharpDX11,Light,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: i += 3;  
Magic Number,DemoFramework.SharpDX11,ShapeData,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,ShapeData,The following statement contains a magic number: BufferBindings = new VertexBufferBinding[2];  
Magic Number,DemoFramework.SharpDX11,ShapeData,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,SetVertexBuffer,The following statement contains a magic number: BufferBindings [0] = new VertexBufferBinding (VertexBuffer' 24' 0);  
Magic Number,DemoFramework.SharpDX11,ShapeData,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,SetDynamicVertexBuffer,The following statement contains a magic number: if (VertexBuffer != null && VertexCount * 2 == vectors.Length) {  	DataBox db = device.ImmediateContext.MapSubresource (VertexBuffer' 0' MapMode.WriteDiscard' SharpDX.Direct3D11.MapFlags.None);  	SharpDX.Utilities.Write (db.DataPointer' vectors' 0' vectors.Length);  	device.ImmediateContext.UnmapSubresource (VertexBuffer' 0);  } else {  	// Create new buffer  	if (VertexBuffer != null)  		VertexBuffer.Dispose ();  	BufferDescription vertexBufferDesc = new BufferDescription () {  		SizeInBytes = Vector3.SizeInBytes * vectors.Length'  		Usage = ResourceUsage.Dynamic'  		BindFlags = BindFlags.VertexBuffer'  		CpuAccessFlags = CpuAccessFlags.Write  	};  	using (var data = new DataStream (vertexBufferDesc.SizeInBytes' false' true)) {  		data.WriteRange (vectors);  		data.Position = 0;  		VertexBuffer = new Buffer (device' data' vertexBufferDesc);  	}  	VertexCount = vectors.Length / 2;  	BufferBindings [0] = new VertexBufferBinding (VertexBuffer' 24' 0);  }  
Magic Number,DemoFramework.SharpDX11,ShapeData,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,SetDynamicVertexBuffer,The following statement contains a magic number: if (VertexBuffer != null && VertexCount * 2 == vectors.Length) {  	DataBox db = device.ImmediateContext.MapSubresource (VertexBuffer' 0' MapMode.WriteDiscard' SharpDX.Direct3D11.MapFlags.None);  	SharpDX.Utilities.Write (db.DataPointer' vectors' 0' vectors.Length);  	device.ImmediateContext.UnmapSubresource (VertexBuffer' 0);  } else {  	// Create new buffer  	if (VertexBuffer != null)  		VertexBuffer.Dispose ();  	BufferDescription vertexBufferDesc = new BufferDescription () {  		SizeInBytes = Vector3.SizeInBytes * vectors.Length'  		Usage = ResourceUsage.Dynamic'  		BindFlags = BindFlags.VertexBuffer'  		CpuAccessFlags = CpuAccessFlags.Write  	};  	using (var data = new DataStream (vertexBufferDesc.SizeInBytes' false' true)) {  		data.WriteRange (vectors);  		data.Position = 0;  		VertexBuffer = new Buffer (device' data' vertexBufferDesc);  	}  	VertexCount = vectors.Length / 2;  	BufferBindings [0] = new VertexBufferBinding (VertexBuffer' 24' 0);  }  
Magic Number,DemoFramework.SharpDX11,ShapeData,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,SetDynamicVertexBuffer,The following statement contains a magic number: if (VertexBuffer != null && VertexCount * 2 == vectors.Length) {  	DataBox db = device.ImmediateContext.MapSubresource (VertexBuffer' 0' MapMode.WriteDiscard' SharpDX.Direct3D11.MapFlags.None);  	SharpDX.Utilities.Write (db.DataPointer' vectors' 0' vectors.Length);  	device.ImmediateContext.UnmapSubresource (VertexBuffer' 0);  } else {  	// Create new buffer  	if (VertexBuffer != null)  		VertexBuffer.Dispose ();  	BufferDescription vertexBufferDesc = new BufferDescription () {  		SizeInBytes = Vector3.SizeInBytes * vectors.Length'  		Usage = ResourceUsage.Dynamic'  		BindFlags = BindFlags.VertexBuffer'  		CpuAccessFlags = CpuAccessFlags.Write  	};  	using (var data = new DataStream (vertexBufferDesc.SizeInBytes' false' true)) {  		data.WriteRange (vectors);  		data.Position = 0;  		VertexBuffer = new Buffer (device' data' vertexBufferDesc);  	}  	VertexCount = vectors.Length / 2;  	BufferBindings [0] = new VertexBufferBinding (VertexBuffer' 24' 0);  }  
Magic Number,DemoFramework.SharpDX11,ShapeData,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,SetDynamicVertexBuffer,The following statement contains a magic number: VertexCount = vectors.Length / 2;  
Magic Number,DemoFramework.SharpDX11,ShapeData,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,SetDynamicVertexBuffer,The following statement contains a magic number: BufferBindings [0] = new VertexBufferBinding (VertexBuffer' 24' 0);  
Magic Number,DemoFramework.SharpDX11,MeshFactory,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,ColorToUint,The following statement contains a magic number: return (uint)c.R + ((uint)c.G << 8) + ((uint)c.B << 16) + ((uint)c.A << 24);  
Magic Number,DemoFramework.SharpDX11,MeshFactory,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,ColorToUint,The following statement contains a magic number: return (uint)c.R + ((uint)c.G << 8) + ((uint)c.B << 16) + ((uint)c.A << 24);  
Magic Number,DemoFramework.SharpDX11,MeshFactory,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,ColorToUint,The following statement contains a magic number: return (uint)c.R + ((uint)c.G << 8) + ((uint)c.B << 16) + ((uint)c.A << 24);  
Magic Number,DemoFramework.SharpDX11,MeshFactory,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,CreateShape,The following statement contains a magic number: shapeData.VertexCount = vertices.Length / 2;  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Initialize,The following statement contains a magic number: _width = 1024;  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Initialize,The following statement contains a magic number: _height = 768;  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Initialize,The following statement contains a magic number: pointLightVolumeVertexBufferBinding = new VertexBufferBinding (pointLightVolumeVertexBuffer' 12' 0);  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Initialize,The following statement contains a magic number: lights.Add (new Light (pointLightPosition' 60' new Vector4 (1' 0.95f' 0.9f' 1)));  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Initialize,The following statement contains a magic number: info = new InfoText (_device' 256' 256);  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Initialize,The following statement contains a magic number: info = new InfoText (_device' 256' 256);  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,RenderLights,The following statement contains a magic number: foreach (var light in lights) {  	float radius = light.Radius;  	float bias = radius * 2;  	if ((light.Position - MathHelper.Convert (Demo.Freelook.Eye)).LengthSquared () >= (radius * radius) + bias) {  		RenderLight (light);  	}  }  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,RenderLights,The following statement contains a magic number: foreach (var light in lights) {  	float bias = light.Radius * 2;  	if ((light.Position - MathHelper.Convert (Demo.Freelook.Eye)).LengthSquared () < (light.Radius * light.Radius) + bias) {  		RenderLight (light);  	}  }  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Render,The following statement contains a magic number: _immediateContext.Draw (3' 0);  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Render,The following statement contains a magic number: if (depthOfFieldEnabled) {  	diffuseBufferVar.SetResource (postProcessBufferRes);  	outputMerger.SetTargets (gBufferPostProcessViewBlur1);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferBlur1Res);  	outputMerger.SetTargets (gBufferPostProcessViewBlur2);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferBlur2Res);  	outputMerger.SetTargets (gBufferPostProcessViewBlur1);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferBlur1Res);  	outputMerger.SetTargets (gBufferPostProcessViewBlur2);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferRes);  	normalBufferVar.SetResource (postProcessBufferBlur2Res);  	outputMerger.SetTargets (renderView);  	gBufferPostProcessPass2.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  }  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Render,The following statement contains a magic number: if (depthOfFieldEnabled) {  	diffuseBufferVar.SetResource (postProcessBufferRes);  	outputMerger.SetTargets (gBufferPostProcessViewBlur1);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferBlur1Res);  	outputMerger.SetTargets (gBufferPostProcessViewBlur2);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferBlur2Res);  	outputMerger.SetTargets (gBufferPostProcessViewBlur1);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferBlur1Res);  	outputMerger.SetTargets (gBufferPostProcessViewBlur2);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferRes);  	normalBufferVar.SetResource (postProcessBufferBlur2Res);  	outputMerger.SetTargets (renderView);  	gBufferPostProcessPass2.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  }  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Render,The following statement contains a magic number: if (depthOfFieldEnabled) {  	diffuseBufferVar.SetResource (postProcessBufferRes);  	outputMerger.SetTargets (gBufferPostProcessViewBlur1);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferBlur1Res);  	outputMerger.SetTargets (gBufferPostProcessViewBlur2);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferBlur2Res);  	outputMerger.SetTargets (gBufferPostProcessViewBlur1);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferBlur1Res);  	outputMerger.SetTargets (gBufferPostProcessViewBlur2);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferRes);  	normalBufferVar.SetResource (postProcessBufferBlur2Res);  	outputMerger.SetTargets (renderView);  	gBufferPostProcessPass2.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  }  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Render,The following statement contains a magic number: if (depthOfFieldEnabled) {  	diffuseBufferVar.SetResource (postProcessBufferRes);  	outputMerger.SetTargets (gBufferPostProcessViewBlur1);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferBlur1Res);  	outputMerger.SetTargets (gBufferPostProcessViewBlur2);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferBlur2Res);  	outputMerger.SetTargets (gBufferPostProcessViewBlur1);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferBlur1Res);  	outputMerger.SetTargets (gBufferPostProcessViewBlur2);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferRes);  	normalBufferVar.SetResource (postProcessBufferBlur2Res);  	outputMerger.SetTargets (renderView);  	gBufferPostProcessPass2.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  }  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Render,The following statement contains a magic number: if (depthOfFieldEnabled) {  	diffuseBufferVar.SetResource (postProcessBufferRes);  	outputMerger.SetTargets (gBufferPostProcessViewBlur1);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferBlur1Res);  	outputMerger.SetTargets (gBufferPostProcessViewBlur2);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferBlur2Res);  	outputMerger.SetTargets (gBufferPostProcessViewBlur1);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferBlur1Res);  	outputMerger.SetTargets (gBufferPostProcessViewBlur2);  	gBufferPostProcessPass.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  	diffuseBufferVar.SetResource (postProcessBufferRes);  	normalBufferVar.SetResource (postProcessBufferBlur2Res);  	outputMerger.SetTargets (renderView);  	gBufferPostProcessPass2.Apply (_immediateContext);  	_immediateContext.Draw (3' 0);  }  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Render,The following statement contains a magic number: _immediateContext.Draw (3' 0);  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Render,The following statement contains a magic number: _immediateContext.Draw (3' 0);  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Render,The following statement contains a magic number: _immediateContext.Draw (3' 0);  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Render,The following statement contains a magic number: _immediateContext.Draw (3' 0);  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Render,The following statement contains a magic number: _immediateContext.Draw (3' 0);  
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,F:\newReposMay17\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Render,The following statement contains a magic number: _immediateContext.Draw (4' 0);  
