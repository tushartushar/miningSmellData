Implementation smell,Namespace,Class,File,Method,Description
Long Method,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Initialize,The method has 167 lines of code.
Complex Method,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,Cyclomatic complexity of the method is 8
Complex Method,DemoFramework.SharpDX11,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,InitInstancedRender,Cyclomatic complexity of the method is 11
Complex Method,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,DisposeBuffers,Cyclomatic complexity of the method is 22
Long Identifier,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,,The length of the parameter pointLightVolumeVertexBufferBinding is 35.
Long Statement,DemoFramework.SharpDX11,InfoText,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\InfoText.cs,Render,The length of the statement  "            _immediateContext.MapSubresource(_renderTexture' 0' 0' MapMode.WriteDiscard' SharpDX.Direct3D11.MapFlags.None' out stream); " is 123.
Long Statement,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The length of the statement  "                    vTemp = new Vector3((float)Math.Cos(vAngle) * (float)Math.Sin(angle)' (float)Math.Sin(vAngle)' (float)Math.Cos(vAngle) * (float)Math.Cos(angle)); " is 145.
Long Statement,DemoFramework.SharpDX11,ShapeData,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,SetDynamicVertexBuffer,The length of the statement  "                DataBox db = device.ImmediateContext.MapSubresource(VertexBuffer' 0' MapMode.WriteDiscard' SharpDX.Direct3D11.MapFlags.None); " is 125.
Long Statement,DemoFramework.SharpDX11,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,InitInstancedRender,The length of the statement  "                DataBox db = device.ImmediateContext.MapSubresource(shapeData.InstanceDataBuffer' 0' MapMode.WriteDiscard' SharpDX.Direct3D11.MapFlags.None); " is 141.
Long Statement,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Initialize,The length of the statement  "            lightVolumeInputLayout = new InputLayout(Device' lightShader.GetTechniqueByIndex(0).GetPassByName("Light").Description.Signature' elements); " is 140.
Long Statement,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,SetSceneConstants,The length of the statement  "            Matrix lightProjection = Matrix.PerspectiveFovLH(FieldOfView' (float)depthBuffer.Width / (float)depthBuffer.Height' _nearPlane' FarPlane); " is 138.
Long Statement,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,SetSceneConstants,The length of the statement  "            _immediateContext.MapSubresource(sceneConstantsBuffer' MapMode.WriteDiscard' SharpDX.Direct3D11.MapFlags.None' out data); " is 121.
Magic Number,DemoFramework.SharpDX11,InfoText,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\InfoText.cs,InfoText,The following statement contains a magic number: _bitmapSize = width * height * 4;
Magic Number,DemoFramework.SharpDX11,InfoText,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\InfoText.cs,InfoText,The following statement contains a magic number: using (var factoryDWrite = new SharpDX.DirectWrite.Factory(SharpDX.DirectWrite.FactoryType.Shared))              {                  _textFormat = new TextFormat(factoryDWrite' "Tahoma"' 20);              }
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: slices = (slices > 16) ? 16 : (slices < 3) ? 3 : slices;
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: slices = (slices > 16) ? 16 : (slices < 3) ? 3 : slices;
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: slices = (slices > 16) ? 16 : (slices < 3) ? 3 : slices;
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: slices = (slices > 16) ? 16 : (slices < 3) ? 3 : slices;
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: stacks = (stacks > 16) ? 16 : (stacks < 2) ? 2 : stacks;
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: stacks = (stacks > 16) ? 16 : (stacks < 2) ? 2 : stacks;
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: stacks = (stacks > 16) ? 16 : (stacks < 2) ? 2 : stacks;
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: stacks = (stacks > 16) ? 16 : (stacks < 2) ? 2 : stacks;
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: float hAngleStep = (float)Math.PI * 2 / slices;
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: int vertexCount = 2 + slices * (stacks - 1);
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: int indexCount = 6 * slices * (stacks - 1);
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: float vAngle = -(float)Math.PI / 2;
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: ushort index = 2;
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: indices[i - 1] = 2;
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: int sliceDiff = slices * 3;
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (j = 0; j < stacks - 2; j++)              {                  for (k = 0; k < slices; k++)                  {                      indices[i] = indices[i - sliceDiff + 2];                      indices[i + 1] = index++;                      indices[i + 2] = indices[i - sliceDiff];                      i += 3;                  }                    for (k = 0; k < slices; k++)                  {                      indices[i] = indices[i - sliceDiff + 1];                      indices[i + 1] = indices[i - sliceDiff];                      indices[i + 2] = indices[i - sliceDiff + 4];                      i += 3;                  }                  indices[i - 1] = indices[i - sliceDiff];              }
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (j = 0; j < stacks - 2; j++)              {                  for (k = 0; k < slices; k++)                  {                      indices[i] = indices[i - sliceDiff + 2];                      indices[i + 1] = index++;                      indices[i + 2] = indices[i - sliceDiff];                      i += 3;                  }                    for (k = 0; k < slices; k++)                  {                      indices[i] = indices[i - sliceDiff + 1];                      indices[i + 1] = indices[i - sliceDiff];                      indices[i + 2] = indices[i - sliceDiff + 4];                      i += 3;                  }                  indices[i - 1] = indices[i - sliceDiff];              }
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (j = 0; j < stacks - 2; j++)              {                  for (k = 0; k < slices; k++)                  {                      indices[i] = indices[i - sliceDiff + 2];                      indices[i + 1] = index++;                      indices[i + 2] = indices[i - sliceDiff];                      i += 3;                  }                    for (k = 0; k < slices; k++)                  {                      indices[i] = indices[i - sliceDiff + 1];                      indices[i + 1] = indices[i - sliceDiff];                      indices[i + 2] = indices[i - sliceDiff + 4];                      i += 3;                  }                  indices[i - 1] = indices[i - sliceDiff];              }
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (j = 0; j < stacks - 2; j++)              {                  for (k = 0; k < slices; k++)                  {                      indices[i] = indices[i - sliceDiff + 2];                      indices[i + 1] = index++;                      indices[i + 2] = indices[i - sliceDiff];                      i += 3;                  }                    for (k = 0; k < slices; k++)                  {                      indices[i] = indices[i - sliceDiff + 1];                      indices[i + 1] = indices[i - sliceDiff];                      indices[i + 2] = indices[i - sliceDiff + 4];                      i += 3;                  }                  indices[i - 1] = indices[i - sliceDiff];              }
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (j = 0; j < stacks - 2; j++)              {                  for (k = 0; k < slices; k++)                  {                      indices[i] = indices[i - sliceDiff + 2];                      indices[i + 1] = index++;                      indices[i + 2] = indices[i - sliceDiff];                      i += 3;                  }                    for (k = 0; k < slices; k++)                  {                      indices[i] = indices[i - sliceDiff + 1];                      indices[i + 1] = indices[i - sliceDiff];                      indices[i + 2] = indices[i - sliceDiff + 4];                      i += 3;                  }                  indices[i - 1] = indices[i - sliceDiff];              }
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (j = 0; j < stacks - 2; j++)              {                  for (k = 0; k < slices; k++)                  {                      indices[i] = indices[i - sliceDiff + 2];                      indices[i + 1] = index++;                      indices[i + 2] = indices[i - sliceDiff];                      i += 3;                  }                    for (k = 0; k < slices; k++)                  {                      indices[i] = indices[i - sliceDiff + 1];                      indices[i + 1] = indices[i - sliceDiff];                      indices[i + 2] = indices[i - sliceDiff + 4];                      i += 3;                  }                  indices[i - 1] = indices[i - sliceDiff];              }
Magic Number,DemoFramework.SharpDX11,Light,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\Light.cs,CreatePointLightVolume,The following statement contains a magic number: for (j = 0; j < stacks - 2; j++)              {                  for (k = 0; k < slices; k++)                  {                      indices[i] = indices[i - sliceDiff + 2];                      indices[i + 1] = index++;                      indices[i + 2] = indices[i - sliceDiff];                      i += 3;                  }                    for (k = 0; k < slices; k++)                  {                      indices[i] = indices[i - sliceDiff + 1];                      indices[i + 1] = indices[i - sliceDiff];                      indices[i + 2] = indices[i - sliceDiff + 4];                      i += 3;                  }                  indices[i - 1] = indices[i - sliceDiff];              }
Magic Number,DemoFramework.SharpDX11,ShapeData,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,SetVertexBuffer,The following statement contains a magic number: BufferBindings[0] = new VertexBufferBinding(VertexBuffer' 24' 0);
Magic Number,DemoFramework.SharpDX11,ShapeData,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,SetDynamicVertexBuffer,The following statement contains a magic number: if (VertexBuffer != null && VertexCount * 2 == vectors.Length)              {                  DataBox db = device.ImmediateContext.MapSubresource(VertexBuffer' 0' MapMode.WriteDiscard' SharpDX.Direct3D11.MapFlags.None);                  SharpDX.Utilities.Write(db.DataPointer' vectors' 0' vectors.Length);                  device.ImmediateContext.UnmapSubresource(VertexBuffer' 0);              }              else              {                  // Create new buffer                  if (VertexBuffer != null)                      VertexBuffer.Dispose();                    var vertexBufferDesc = new BufferDescription                  {                      SizeInBytes = Vector3.SizeInBytes * vectors.Length'                      Usage = ResourceUsage.Dynamic'                      BindFlags = BindFlags.VertexBuffer'                      CpuAccessFlags = CpuAccessFlags.Write                  };                    using (var data = new DataStream(vertexBufferDesc.SizeInBytes' false' true))                  {                      data.WriteRange(vectors);                      data.Position = 0;                      VertexBuffer = new Buffer(device' data' vertexBufferDesc);                  }                    VertexCount = vectors.Length / 2;                  BufferBindings[0] = new VertexBufferBinding(VertexBuffer' 24' 0);              }
Magic Number,DemoFramework.SharpDX11,ShapeData,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,SetDynamicVertexBuffer,The following statement contains a magic number: if (VertexBuffer != null && VertexCount * 2 == vectors.Length)              {                  DataBox db = device.ImmediateContext.MapSubresource(VertexBuffer' 0' MapMode.WriteDiscard' SharpDX.Direct3D11.MapFlags.None);                  SharpDX.Utilities.Write(db.DataPointer' vectors' 0' vectors.Length);                  device.ImmediateContext.UnmapSubresource(VertexBuffer' 0);              }              else              {                  // Create new buffer                  if (VertexBuffer != null)                      VertexBuffer.Dispose();                    var vertexBufferDesc = new BufferDescription                  {                      SizeInBytes = Vector3.SizeInBytes * vectors.Length'                      Usage = ResourceUsage.Dynamic'                      BindFlags = BindFlags.VertexBuffer'                      CpuAccessFlags = CpuAccessFlags.Write                  };                    using (var data = new DataStream(vertexBufferDesc.SizeInBytes' false' true))                  {                      data.WriteRange(vectors);                      data.Position = 0;                      VertexBuffer = new Buffer(device' data' vertexBufferDesc);                  }                    VertexCount = vectors.Length / 2;                  BufferBindings[0] = new VertexBufferBinding(VertexBuffer' 24' 0);              }
Magic Number,DemoFramework.SharpDX11,ShapeData,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,SetDynamicVertexBuffer,The following statement contains a magic number: if (VertexBuffer != null && VertexCount * 2 == vectors.Length)              {                  DataBox db = device.ImmediateContext.MapSubresource(VertexBuffer' 0' MapMode.WriteDiscard' SharpDX.Direct3D11.MapFlags.None);                  SharpDX.Utilities.Write(db.DataPointer' vectors' 0' vectors.Length);                  device.ImmediateContext.UnmapSubresource(VertexBuffer' 0);              }              else              {                  // Create new buffer                  if (VertexBuffer != null)                      VertexBuffer.Dispose();                    var vertexBufferDesc = new BufferDescription                  {                      SizeInBytes = Vector3.SizeInBytes * vectors.Length'                      Usage = ResourceUsage.Dynamic'                      BindFlags = BindFlags.VertexBuffer'                      CpuAccessFlags = CpuAccessFlags.Write                  };                    using (var data = new DataStream(vertexBufferDesc.SizeInBytes' false' true))                  {                      data.WriteRange(vectors);                      data.Position = 0;                      VertexBuffer = new Buffer(device' data' vertexBufferDesc);                  }                    VertexCount = vectors.Length / 2;                  BufferBindings[0] = new VertexBufferBinding(VertexBuffer' 24' 0);              }
Magic Number,DemoFramework.SharpDX11,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,ColorToUint,The following statement contains a magic number: return (uint)c.R + ((uint)c.G << 8) + ((uint)c.B << 16) + ((uint)c.A << 24);
Magic Number,DemoFramework.SharpDX11,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,ColorToUint,The following statement contains a magic number: return (uint)c.R + ((uint)c.G << 8) + ((uint)c.B << 16) + ((uint)c.A << 24);
Magic Number,DemoFramework.SharpDX11,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,ColorToUint,The following statement contains a magic number: return (uint)c.R + ((uint)c.G << 8) + ((uint)c.B << 16) + ((uint)c.A << 24);
Magic Number,DemoFramework.SharpDX11,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,MeshFactory,The following statement contains a magic number: var elements = new InputElement[]              {                  new InputElement("POSITION"' 0' Format.R32G32B32_Float' 0' 0' InputClassification.PerVertexData' 0)'                  new InputElement("NORMAL"' 0' Format.R32G32B32_Float' 12' 0' InputClassification.PerVertexData' 0)'                  new InputElement("WORLD"' 0' Format.R32G32B32A32_Float' 0' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 1' Format.R32G32B32A32_Float' 16' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 2' Format.R32G32B32A32_Float' 32' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 3' Format.R32G32B32A32_Float' 48' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("COLOR"' 0' Format.R8G8B8A8_UNorm' 64' 1' InputClassification.PerInstanceData' 1)              };
Magic Number,DemoFramework.SharpDX11,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,MeshFactory,The following statement contains a magic number: var elements = new InputElement[]              {                  new InputElement("POSITION"' 0' Format.R32G32B32_Float' 0' 0' InputClassification.PerVertexData' 0)'                  new InputElement("NORMAL"' 0' Format.R32G32B32_Float' 12' 0' InputClassification.PerVertexData' 0)'                  new InputElement("WORLD"' 0' Format.R32G32B32A32_Float' 0' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 1' Format.R32G32B32A32_Float' 16' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 2' Format.R32G32B32A32_Float' 32' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 3' Format.R32G32B32A32_Float' 48' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("COLOR"' 0' Format.R8G8B8A8_UNorm' 64' 1' InputClassification.PerInstanceData' 1)              };
Magic Number,DemoFramework.SharpDX11,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,MeshFactory,The following statement contains a magic number: var elements = new InputElement[]              {                  new InputElement("POSITION"' 0' Format.R32G32B32_Float' 0' 0' InputClassification.PerVertexData' 0)'                  new InputElement("NORMAL"' 0' Format.R32G32B32_Float' 12' 0' InputClassification.PerVertexData' 0)'                  new InputElement("WORLD"' 0' Format.R32G32B32A32_Float' 0' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 1' Format.R32G32B32A32_Float' 16' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 2' Format.R32G32B32A32_Float' 32' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 3' Format.R32G32B32A32_Float' 48' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("COLOR"' 0' Format.R8G8B8A8_UNorm' 64' 1' InputClassification.PerInstanceData' 1)              };
Magic Number,DemoFramework.SharpDX11,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,MeshFactory,The following statement contains a magic number: var elements = new InputElement[]              {                  new InputElement("POSITION"' 0' Format.R32G32B32_Float' 0' 0' InputClassification.PerVertexData' 0)'                  new InputElement("NORMAL"' 0' Format.R32G32B32_Float' 12' 0' InputClassification.PerVertexData' 0)'                  new InputElement("WORLD"' 0' Format.R32G32B32A32_Float' 0' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 1' Format.R32G32B32A32_Float' 16' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 2' Format.R32G32B32A32_Float' 32' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 3' Format.R32G32B32A32_Float' 48' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("COLOR"' 0' Format.R8G8B8A8_UNorm' 64' 1' InputClassification.PerInstanceData' 1)              };
Magic Number,DemoFramework.SharpDX11,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,MeshFactory,The following statement contains a magic number: var elements = new InputElement[]              {                  new InputElement("POSITION"' 0' Format.R32G32B32_Float' 0' 0' InputClassification.PerVertexData' 0)'                  new InputElement("NORMAL"' 0' Format.R32G32B32_Float' 12' 0' InputClassification.PerVertexData' 0)'                  new InputElement("WORLD"' 0' Format.R32G32B32A32_Float' 0' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 1' Format.R32G32B32A32_Float' 16' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 2' Format.R32G32B32A32_Float' 32' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 3' Format.R32G32B32A32_Float' 48' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("COLOR"' 0' Format.R8G8B8A8_UNorm' 64' 1' InputClassification.PerInstanceData' 1)              };
Magic Number,DemoFramework.SharpDX11,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,MeshFactory,The following statement contains a magic number: var elements = new InputElement[]              {                  new InputElement("POSITION"' 0' Format.R32G32B32_Float' 0' 0' InputClassification.PerVertexData' 0)'                  new InputElement("NORMAL"' 0' Format.R32G32B32_Float' 12' 0' InputClassification.PerVertexData' 0)'                  new InputElement("WORLD"' 0' Format.R32G32B32A32_Float' 0' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 1' Format.R32G32B32A32_Float' 16' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 2' Format.R32G32B32A32_Float' 32' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 3' Format.R32G32B32A32_Float' 48' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("COLOR"' 0' Format.R8G8B8A8_UNorm' 64' 1' InputClassification.PerInstanceData' 1)              };
Magic Number,DemoFramework.SharpDX11,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,MeshFactory,The following statement contains a magic number: var elements = new InputElement[]              {                  new InputElement("POSITION"' 0' Format.R32G32B32_Float' 0' 0' InputClassification.PerVertexData' 0)'                  new InputElement("NORMAL"' 0' Format.R32G32B32_Float' 12' 0' InputClassification.PerVertexData' 0)'                  new InputElement("WORLD"' 0' Format.R32G32B32A32_Float' 0' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 1' Format.R32G32B32A32_Float' 16' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 2' Format.R32G32B32A32_Float' 32' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("WORLD"' 3' Format.R32G32B32A32_Float' 48' 1' InputClassification.PerInstanceData' 1)'                  new InputElement("COLOR"' 0' Format.R8G8B8A8_UNorm' 64' 1' InputClassification.PerInstanceData' 1)              };
Magic Number,DemoFramework.SharpDX11,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\MeshFactory.cs,CreateShape,The following statement contains a magic number: shapeData.VertexCount = vertices.Length / 2;
Magic Number,DemoFramework.SharpDX11,PhysicsDebugDraw,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\PhysicsDebugDraw.cs,PhysicsDebugDraw,The following statement contains a magic number: InputElement[] elements = {                  new InputElement("POSITION"' 0' Format.R32G32B32_Float' 0' 0' InputClassification.PerVertexData' 0)'                  new InputElement("COLOR"' 0' Format.R8G8B8A8_UNorm' 12' 0' InputClassification.PerVertexData' 0)              };
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,CreateDeviceAndSwapChain,The following statement contains a magic number: var desc = new SwapChainDescription              {                  BufferCount = 1'                  ModeDescription = new ModeDescription(_width' _height' new Rational(60' 1)' Format.R8G8B8A8_UNorm)'                  IsWindowed = true'                  OutputHandle = Form.Handle'                  SampleDescription = new SampleDescription(1' 0)'                  SwapEffect = SwapEffect.Discard'                  Usage = Usage.RenderTargetOutput'                  Flags = SwapChainFlags.AllowModeSwitch              };
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Initialize,The following statement contains a magic number: _width = 1024;
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Initialize,The following statement contains a magic number: _height = 768;
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Initialize,The following statement contains a magic number: pointLightVolumeVertexBufferBinding = new VertexBufferBinding(pointLightVolumeVertexBuffer' 12' 0);
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Initialize,The following statement contains a magic number: lights.Add(new Light(pointLightPosition' 60' new Vector4(1' 0.95f' 0.9f' 1)));
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Initialize,The following statement contains a magic number: info = new InfoText(Device' 256' 256);
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,Initialize,The following statement contains a magic number: info = new InfoText(Device' 256' 256);
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,SetSceneConstants,The following statement contains a magic number: Vector3 lightPosition = sunLightDirection * -60;
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,RenderLights,The following statement contains a magic number: foreach (var light in lights)              {                  float radius = light.Radius;                  float bias = radius * 2;                  if ((light.Position - MathHelper.Convert(Demo.Freelook.Eye)).LengthSquared() >= (radius * radius) + bias)                  {                      RenderLight(light);                  }              }
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,RenderLights,The following statement contains a magic number: foreach (var light in lights)              {                  float bias = light.Radius * 2;                  if ((light.Position - MathHelper.Convert(Demo.Freelook.Eye)).LengthSquared() < (light.Radius * light.Radius) + bias)                  {                      RenderLight(light);                  }              }
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,RenderFinal,The following statement contains a magic number: _immediateContext.Draw(3' 0);
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,RenderOverlay,The following statement contains a magic number: _immediateContext.Draw(4' 0);
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,RenderDepthOfFieldBlurPasses,The following statement contains a magic number: _immediateContext.Draw(3' 0);
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,RenderDepthOfFieldBlurPasses,The following statement contains a magic number: _immediateContext.Draw(3' 0);
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,RenderDepthOfFieldBlurPasses,The following statement contains a magic number: _immediateContext.Draw(3' 0);
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,RenderDepthOfFieldBlurPasses,The following statement contains a magic number: _immediateContext.Draw(3' 0);
Magic Number,DemoFramework.SharpDX11,SharpDX11Graphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\SharpDX11\SharpDX11Graphics.cs,RenderDepthOfFieldBlurPasses,The following statement contains a magic number: _immediateContext.Draw(3' 0);
