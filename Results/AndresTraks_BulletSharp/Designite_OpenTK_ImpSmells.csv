Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DemoFramework.OpenTK,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\MeshFactory.cs,InitInstancedRender,Cyclomatic complexity of the method is 9
Complex Method,DemoFramework.OpenTK,OpenTKGraphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\OpenTKGraphics.cs,InitializeDevice,Cyclomatic complexity of the method is 8
Long Statement,DemoFramework.OpenTK,ShapeData,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\MeshFactory.cs,UpdateBuffer,The length of the statement  "            GL.BufferData(BufferTarget.ArrayBuffer' (IntPtr)(vertices.Length * Vector3.SizeInBytes)' vertices' BufferUsageHint.DynamicDraw); " is 128.
Long Statement,DemoFramework.OpenTK,ShapeData,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\MeshFactory.cs,SetIndexBuffer,The length of the statement  "            GL.BufferData(BufferTarget.ElementArrayBuffer' (IntPtr)(indices.Length * sizeof(uint))' indices' BufferUsageHint.StaticDraw); " is 125.
Long Statement,DemoFramework.OpenTK,ShapeData,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\MeshFactory.cs,SetIndexBuffer,The length of the statement  "            GL.BufferData(BufferTarget.ElementArrayBuffer' (IntPtr)(indices.Length * sizeof(ushort))' indices' BufferUsageHint.StaticDraw); " is 127.
Long Statement,DemoFramework.OpenTK,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\MeshFactory.cs,RenderInstanced,The length of the statement  "                    GL.VertexAttribPointer(vertexNormalLocation' 3' VertexAttribPointerType.Float' false' Vector3.SizeInBytes' IntPtr.Zero); " is 120.
Long Statement,DemoFramework.OpenTK,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\MeshFactory.cs,RenderInstanced,The length of the statement  "                GL.VertexAttribPointer(vertexPositionLocation' 3' VertexAttribPointerType.Float' false' Vector3.SizeInBytes' IntPtr.Zero); " is 122.
Long Statement,DemoFramework.OpenTK,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\MeshFactory.cs,UpdateSoftBody,The length of the statement  "                shapeData.SetDynamicNormalBuffer(new Vector3[shapeData.VertexCount]); // hack' should use a different shader that doesn't process normals " is 137.
Long Statement,DemoFramework.OpenTK,OpenTKGraphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\OpenTKGraphics.cs,Render,The length of the statement  "                lookat = Matrix4.LookAt(MathHelper.Convert(freelook.Eye)' MathHelper.Convert(freelook.Target)' MathHelper.Convert(freelook.Up)); " is 128.
Complex Conditional,DemoFramework.OpenTK,GLForm,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\GLForm.cs,glControl_PreviewKeyDown,The conditional expression  "e.KeyCode == Keys.Left || e.KeyCode == Keys.Right || e.KeyCode == Keys.Up || e.KeyCode == Keys.Down"  is complex.
Magic Number,DemoFramework.OpenTK,GLForm,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\GLForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1008' 730);
Magic Number,DemoFramework.OpenTK,GLForm,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\GLForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1008' 730);
Magic Number,DemoFramework.OpenTK,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\MeshFactory.cs,CreateShape,The following statement contains a magic number: if (vertexBuffer != null)              {                  shapeData.VertexCount = vertexBuffer.Length / 2;                    Vector3[] vertices = new Vector3[shapeData.VertexCount];                  Vector3[] normals = new Vector3[shapeData.VertexCount];                    int i;                  for (i = 0; i < shapeData.VertexCount; i++)                  {                      vertices[i] = vertexBuffer[i * 2];                      normals[i] = vertexBuffer[i * 2 + 1];                  }                    shapeData.SetVertexBuffer(vertices);                  shapeData.SetNormalBuffer(normals);              }
Magic Number,DemoFramework.OpenTK,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\MeshFactory.cs,CreateShape,The following statement contains a magic number: if (vertexBuffer != null)              {                  shapeData.VertexCount = vertexBuffer.Length / 2;                    Vector3[] vertices = new Vector3[shapeData.VertexCount];                  Vector3[] normals = new Vector3[shapeData.VertexCount];                    int i;                  for (i = 0; i < shapeData.VertexCount; i++)                  {                      vertices[i] = vertexBuffer[i * 2];                      normals[i] = vertexBuffer[i * 2 + 1];                  }                    shapeData.SetVertexBuffer(vertices);                  shapeData.SetNormalBuffer(normals);              }
Magic Number,DemoFramework.OpenTK,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\MeshFactory.cs,CreateShape,The following statement contains a magic number: if (vertexBuffer != null)              {                  shapeData.VertexCount = vertexBuffer.Length / 2;                    Vector3[] vertices = new Vector3[shapeData.VertexCount];                  Vector3[] normals = new Vector3[shapeData.VertexCount];                    int i;                  for (i = 0; i < shapeData.VertexCount; i++)                  {                      vertices[i] = vertexBuffer[i * 2];                      normals[i] = vertexBuffer[i * 2 + 1];                  }                    shapeData.SetVertexBuffer(vertices);                  shapeData.SetNormalBuffer(normals);              }
Magic Number,DemoFramework.OpenTK,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\MeshFactory.cs,RenderInstanced,The following statement contains a magic number: foreach (ShapeData s in shapes.Values)              {                  // Normal buffer                  if (s.NormalBufferID != 0)                  {                      GL.EnableVertexAttribArray(vertexNormalLocation);                      GL.BindBuffer(BufferTarget.ArrayBuffer' s.NormalBufferID);                      GL.VertexAttribPointer(vertexNormalLocation' 3' VertexAttribPointerType.Float' false' Vector3.SizeInBytes' IntPtr.Zero);                  }                    // Vertex buffer                  GL.BindBuffer(BufferTarget.ArrayBuffer' s.VertexBufferID);                  GL.VertexAttribPointer(vertexPositionLocation' 3' VertexAttribPointerType.Float' false' Vector3.SizeInBytes' IntPtr.Zero);                    Matrix4 worldMatrix;                    // Index (element) buffer                  if (s.ElementCount != 0)                  {                      GL.BindBuffer(BufferTarget.ElementArrayBuffer' s.ElementBufferID);                        foreach (InstanceData instance in s.Instances)                      {                          worldMatrix = instance.WorldTransform;                          GL.UniformMatrix4(worldMatrixLocation' false' ref worldMatrix);                          GL.Uniform4(vertexColorLocation' instance.Color);                          GL.DrawElements(s.PrimitiveType' s.ElementCount' s.ElementsType' IntPtr.Zero);                      }                        GL.BindBuffer(BufferTarget.ElementArrayBuffer' 0);                  }                  else                  {                      foreach (InstanceData instance in s.Instances)                      {                          worldMatrix = instance.WorldTransform;                          GL.UniformMatrix4(worldMatrixLocation' false' ref worldMatrix);                          GL.Uniform4(vertexColorLocation' instance.Color);                          GL.DrawArrays(s.PrimitiveType' 0' s.VertexCount);                      }                  }                    if (s.NormalBufferID != 0)                  {                      GL.DisableVertexAttribArray(vertexNormalLocation);                  }              }
Magic Number,DemoFramework.OpenTK,MeshFactory,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\MeshFactory.cs,RenderInstanced,The following statement contains a magic number: foreach (ShapeData s in shapes.Values)              {                  // Normal buffer                  if (s.NormalBufferID != 0)                  {                      GL.EnableVertexAttribArray(vertexNormalLocation);                      GL.BindBuffer(BufferTarget.ArrayBuffer' s.NormalBufferID);                      GL.VertexAttribPointer(vertexNormalLocation' 3' VertexAttribPointerType.Float' false' Vector3.SizeInBytes' IntPtr.Zero);                  }                    // Vertex buffer                  GL.BindBuffer(BufferTarget.ArrayBuffer' s.VertexBufferID);                  GL.VertexAttribPointer(vertexPositionLocation' 3' VertexAttribPointerType.Float' false' Vector3.SizeInBytes' IntPtr.Zero);                    Matrix4 worldMatrix;                    // Index (element) buffer                  if (s.ElementCount != 0)                  {                      GL.BindBuffer(BufferTarget.ElementArrayBuffer' s.ElementBufferID);                        foreach (InstanceData instance in s.Instances)                      {                          worldMatrix = instance.WorldTransform;                          GL.UniformMatrix4(worldMatrixLocation' false' ref worldMatrix);                          GL.Uniform4(vertexColorLocation' instance.Color);                          GL.DrawElements(s.PrimitiveType' s.ElementCount' s.ElementsType' IntPtr.Zero);                      }                        GL.BindBuffer(BufferTarget.ElementArrayBuffer' 0);                  }                  else                  {                      foreach (InstanceData instance in s.Instances)                      {                          worldMatrix = instance.WorldTransform;                          GL.UniformMatrix4(worldMatrixLocation' false' ref worldMatrix);                          GL.Uniform4(vertexColorLocation' instance.Color);                          GL.DrawArrays(s.PrimitiveType' 0' s.VertexCount);                      }                  }                    if (s.NormalBufferID != 0)                  {                      GL.DisableVertexAttribArray(vertexNormalLocation);                  }              }
Magic Number,DemoFramework.OpenTK,OpenTKGraphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\OpenTKGraphics.cs,InitializeDevice,The following statement contains a magic number: Version req = new Version(2' 1);
Magic Number,DemoFramework.OpenTK,OpenTKGraphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\OpenTKGraphics.cs,Render,The following statement contains a magic number: if (viewChanged)              {                  GL.Viewport(0' 0' glControl.Width' glControl.Height);                    FreeLook freelook = Demo.Freelook;                  lookat = Matrix4.LookAt(MathHelper.Convert(freelook.Eye)' MathHelper.Convert(freelook.Target)' MathHelper.Convert(freelook.Up));                  GL.UniformMatrix4(viewMatrixLocation' false' ref lookat);                    Matrix4.CreatePerspectiveFieldOfView(FieldOfView' AspectRatio' 0.1f' FarPlane' out perspective);                  perspective *= Matrix4.CreateScale(-1.0f' 1.0f' 1.0f);                  GL.UniformMatrix4(projectionMatrixLocation' false' ref perspective);                    Vector3 lightPosition = new Vector3(30' 20' 10);                  GL.Uniform3(lightPositionVectorLocation' lightPosition);                  GL.Uniform3(eyePositionVectorLocation' MathHelper.Convert(freelook.Eye));                    if (CullingEnabled)                  {                      GL.Enable(EnableCap.CullFace);                  }                  else                  {                      GL.Disable(EnableCap.CullFace);                  }                    viewChanged = false;              }
Magic Number,DemoFramework.OpenTK,OpenTKGraphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\OpenTKGraphics.cs,Render,The following statement contains a magic number: if (viewChanged)              {                  GL.Viewport(0' 0' glControl.Width' glControl.Height);                    FreeLook freelook = Demo.Freelook;                  lookat = Matrix4.LookAt(MathHelper.Convert(freelook.Eye)' MathHelper.Convert(freelook.Target)' MathHelper.Convert(freelook.Up));                  GL.UniformMatrix4(viewMatrixLocation' false' ref lookat);                    Matrix4.CreatePerspectiveFieldOfView(FieldOfView' AspectRatio' 0.1f' FarPlane' out perspective);                  perspective *= Matrix4.CreateScale(-1.0f' 1.0f' 1.0f);                  GL.UniformMatrix4(projectionMatrixLocation' false' ref perspective);                    Vector3 lightPosition = new Vector3(30' 20' 10);                  GL.Uniform3(lightPositionVectorLocation' lightPosition);                  GL.Uniform3(eyePositionVectorLocation' MathHelper.Convert(freelook.Eye));                    if (CullingEnabled)                  {                      GL.Enable(EnableCap.CullFace);                  }                  else                  {                      GL.Disable(EnableCap.CullFace);                  }                    viewChanged = false;              }
Magic Number,DemoFramework.OpenTK,OpenTKGraphics,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\OpenTKGraphics.cs,Render,The following statement contains a magic number: if (viewChanged)              {                  GL.Viewport(0' 0' glControl.Width' glControl.Height);                    FreeLook freelook = Demo.Freelook;                  lookat = Matrix4.LookAt(MathHelper.Convert(freelook.Eye)' MathHelper.Convert(freelook.Target)' MathHelper.Convert(freelook.Up));                  GL.UniformMatrix4(viewMatrixLocation' false' ref lookat);                    Matrix4.CreatePerspectiveFieldOfView(FieldOfView' AspectRatio' 0.1f' FarPlane' out perspective);                  perspective *= Matrix4.CreateScale(-1.0f' 1.0f' 1.0f);                  GL.UniformMatrix4(projectionMatrixLocation' false' ref perspective);                    Vector3 lightPosition = new Vector3(30' 20' 10);                  GL.Uniform3(lightPositionVectorLocation' lightPosition);                  GL.Uniform3(eyePositionVectorLocation' MathHelper.Convert(freelook.Eye));                    if (CullingEnabled)                  {                      GL.Enable(EnableCap.CullFace);                  }                  else                  {                      GL.Disable(EnableCap.CullFace);                  }                    viewChanged = false;              }
Magic Number,DemoFramework.OpenTK,PhysicsDebugDraw,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\PhysicsDebugDraw.cs,DrawDebugWorld,The following statement contains a magic number: GL.VertexPointer(3' VertexPointerType.Float' 0' positionArray);
Magic Number,DemoFramework.OpenTK,PhysicsDebugDraw,C:\repos\AndresTraks_BulletSharp\demos\Generic\DemoFramework\Graphics\OpenTK\PhysicsDebugDraw.cs,DrawDebugWorld,The following statement contains a magic number: GL.ColorPointer(3' ColorPointerType.UnsignedByte' sizeof(int)' colorArray);
