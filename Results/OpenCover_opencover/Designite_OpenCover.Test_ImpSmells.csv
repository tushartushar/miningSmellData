Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,OpenCover.Test.Framework.Utility,SequencePointComparerTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\SequencePointComparerTest.cs,DoesNotEqualDisimilar,The method has 5 parameters. Parameters: fileId' startLine' startColumn' endLine' endColumn
Long Statement,OpenCover.Test.ConsoleEx,OutputTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Console\OutputTests.cs,OutputHasPreferred32BitDisabled,The length of the statement  "                FileName = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86)' @"Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.7.2 Tools\corflags.exe")'" is 163.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_AllocateMemoryBuffer,The length of the statement  "            Instance.StandardMessage(MSG_Type.MSG_AllocateMemoryBuffer' _mockCommunicationBlock.Object' (i' block) => { }' block => { });" is 125.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_AllocateMemoryBuffer_WithMismatchedVersion,The length of the statement  "            Instance.StandardMessage(MSG_Type.MSG_AllocateMemoryBuffer' _mockCommunicationBlock.Object' (i' block) => { }' block => { });" is 125.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetSequencePoints,The length of the statement  "            Instance.StandardMessage(MSG_Type.MSG_GetSequencePoints' _mockCommunicationBlock.Object' (i' block) => { }' block => { });" is 122.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetSequencePoints,The length of the statement  "                .Verify(x => x.GetSequencePoints(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<string>()' It.IsAny<int>()' out points)' Times.Once());" is 137.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetSequencePoints_Small,The length of the statement  "                .Setup(x => x.GetSequencePoints(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<string>()' It.IsAny<int>()' out points));" is 122.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetSequencePoints_Small,The length of the statement  "            Instance.StandardMessage(MSG_Type.MSG_GetSequencePoints' _mockCommunicationBlock.Object' (i' block) => { chunked = true; }' block => { });" is 138.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetSequencePoints_Large_StartsToChunk,The length of the statement  "            //var points = new[] { new SequencePoint()' new SequencePoint()' new SequencePoint()' new SequencePoint()' new SequencePoint()' new SequencePoint() };" is 150.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetSequencePoints_Large_StartsToChunk,The length of the statement  "                .Setup(x => x.GetSequencePoints(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<string>()' It.IsAny<int>()' out points));" is 122.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetSequencePoints_Large_StartsToChunk,The length of the statement  "            Instance.StandardMessage(MSG_Type.MSG_GetSequencePoints' _mockCommunicationBlock.Object' (i' block) => { chunked = true; }' block => { });" is 138.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetSequencePoints_Large_StartsToChunk,The length of the statement  "                .Verify(x => x.StructureToPtr(It.IsAny<MSG_SequencePoint>()' It.IsAny<IntPtr>()' It.IsAny<bool>())' Times.Exactly(10000));" is 122.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetBranchPoints,The length of the statement  "            Instance.StandardMessage(MSG_Type.MSG_GetBranchPoints' _mockCommunicationBlock.Object' (i' block) => { }' block => { });" is 120.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetBranchPoints,The length of the statement  "                .Verify(x => x.GetBranchPoints(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<string>()' It.IsAny<int>()' out points)' Times.Once());" is 135.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetBranchPoints_Small,The length of the statement  "                .Setup(x => x.GetBranchPoints(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<string>()' It.IsAny<int>()' out points));" is 120.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetBranchPoints_Small,The length of the statement  "            Instance.StandardMessage(MSG_Type.MSG_GetBranchPoints' _mockCommunicationBlock.Object' (i' block) => { chunked = true; }' block => { });" is 136.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetBranchPoints_Large_StartsToChunk,The length of the statement  "                .Setup(x => x.GetBranchPoints(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<string>()' It.IsAny<int>()' out points));" is 120.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetBranchPoints_Large_StartsToChunk,The length of the statement  "            Instance.StandardMessage(MSG_Type.MSG_GetBranchPoints' _mockCommunicationBlock.Object' (i' block) => { chunked = true; }' block => { });" is 136.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetBranchPoints_Large_StartsToChunk,The length of the statement  "                .Verify(x => x.StructureToPtr(It.IsAny<MSG_BranchPoint>()' It.IsAny<IntPtr>()' It.IsAny<bool>())' Times.Exactly(10000));" is 120.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,ExceptionDuring_MSG_GetSequencePoints_ReturnsLastBlockAsEmpty,The length of the statement  "                .Setup(x => x.GetSequencePoints(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<string>()' It.IsAny<int>()' out points))" is 121.
Long Statement,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Unsupported_MSG_Type_Throws_Exception,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Instance.StandardMessage(MSG_Type.MSG_Unknown' _mockCommunicationBlock.Object' (i' block) => { }' block => { }));" is 160.
Long Statement,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,HandlesTheExcludeDirsArgumentWithSuppliedValue,The length of the statement  "                $"-excludedirs:{Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86)};{Environment.GetFolderPath(Environment.SpecialFolder.CommonProgramFiles)}"' RequiredArgs }); " is 178.
Long Statement,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,HandlesTheExcludeDirsArgumentWithSuppliedValueRemovesDuplicates,The length of the statement  "                $"-excludedirs:{Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86)};{Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86)}"' RequiredArgs }); " is 175.
Long Statement,OpenCover.Test.Framework,FilterTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\FilterTests.cs,Can_Identify_Excluded_Methods_UsingRegularExpressions,The length of the statement  "            foreach (var methodDefinition in type.Methods.Where(methodDefinition => !methodDefinition.IsSetter && !methodDefinition.IsGetter)) " is 130.
Long Statement,OpenCover.Test.Framework,FilterTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\FilterTests.cs,CanFilterByProcessName,The length of the statement  "            var filter = Filter.BuildFilter(new CommandLineParser(GetFilter(filterArg' false).ToArray()).Do(_ => _.ExtractAndValidateArguments())); " is 135.
Long Statement,OpenCover.Test.Framework,FilterTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\FilterTests.cs,CanFilterByProcessName,The length of the statement  "            filter = Filter.BuildFilter(new CommandLineParser(GetFilter(filterArg' true).ToArray()).Do(_ => _.ExtractAndValidateArguments())); " is 130.
Long Statement,OpenCover.Test.Framework.Manager,ProfilerManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\ProfilerManagerTests.cs,Manager_Sets_Service_ACLs_On_Events,The length of the statement  "                var priRules = mcb.ProfilerRequestsInformation.GetAccessControl().GetAccessRules(true' false' typeof(SecurityIdentifier));" is 122.
Long Statement,OpenCover.Test.Framework.Manager,ProfilerManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\ProfilerManagerTests.cs,Manager_Sets_Service_ACLs_On_Events,The length of the statement  "                var irfpRules = mcb.InformationReadyForProfiler.GetAccessControl().GetAccessRules(true' false' typeof(SecurityIdentifier));" is 123.
Long Statement,OpenCover.Test.Framework.Manager,ProfilerManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\ProfilerManagerTests.cs,Manager_Sets_Service_ACLs_On_Events,The length of the statement  "                var irbpRules = mcb.InformationReadByProfiler.GetAccessControl().GetAccessRules(true' false' typeof(SecurityIdentifier));" is 121.
Long Statement,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,TrackedMethodCountIsLimitedToMax,The length of the statement  "            Assert.AreEqual(100' list.First(x => x.UniqueSequencePoint == 1).TrackedMethodRefs.First(x => x.UniqueId == 1).VisitCount);" is 123.
Long Statement,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,TrackedMethodCountIsLimitedToMax,The length of the statement  "            Assert.AreEqual(int.MaxValue' list.First(x => x.UniqueSequencePoint == 1).TrackedMethodRefs.First(x => x.UniqueId == 1).VisitCount);" is 132.
Long Statement,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,TrackedMethodCountIsLimitedToMax,The length of the statement  "            Assert.AreEqual(int.MaxValue' list.First(x => x.UniqueSequencePoint == 1).TrackedMethodRefs.First(x => x.UniqueId == 1).VisitCount);" is 132.
Long Statement,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,CanDetermineSingleCharSequencePoint,The length of the statement  "            Assert.IsTrue(new SequencePoint { FileId = 1' StartLine = 1' StartColumn = 1' EndLine = 1' EndColumn = 2 }.IsSingleCharSequencePoint);" is 134.
Long Statement,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,CanDetermineSingleCharSequencePoint,The length of the statement  "            Assert.IsFalse(new SequencePoint { FileId = 1' StartLine = 1' StartColumn = 1' EndLine = 1' EndColumn = 3 }.IsSingleCharSequencePoint);" is 135.
Long Statement,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,CanDetermineSingleCharSequencePoint,The length of the statement  "            Assert.IsFalse(new SequencePoint { FileId = 1' StartLine = 1' StartColumn = 1' EndLine = 2' EndColumn = 2 }.IsSingleCharSequencePoint);" is 135.
Long Statement,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,SaveVisitPoints_DoesNotProcessBufferWhenCountExceedsAvailableBufferSize,The length of the statement  "            var points = new[] { pt1.UniqueSequencePoint' pt2.UniqueSequencePoint' pt2.UniqueSequencePoint' pt2.UniqueSequencePoint };" is 122.
Long Statement,OpenCover.Test.Framework.Persistance,FilePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\FilePersistenceTests.cs,CanLoadExistingFileWhenInitialising,The length of the statement  "            Assert.AreEqual(point.UniqueSequencePoint' persistence2.CoverageSession.Modules[0].Classes[0].Methods[0].SequencePoints[0].UniqueSequencePoint);" is 144.
Long Statement,OpenCover.Test.Framework.Persistance,FilePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\FilePersistenceTests.cs,CanLoadExistingFileWhenInitialising,The length of the statement  "            Assert.AreEqual(point.UniqueSequencePoint' persistence2.CoverageSession.Modules[0].Classes[0].Methods[0].MethodPoint.UniqueSequencePoint);" is 138.
Long Statement,OpenCover.Test.Extensions.Strategy,TrackXUnitTestMethodsTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Extensions\Strategy\TrackXUnitTestMethodsTests.cs,Can_Identify_Methods,The length of the statement  "            Assert.True(methods.Any(x => x.FullName.EndsWith("SimpleXUnit::AddAttributeExclusionFilters_Handles_Null_Elements()")));" is 120.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerMdbTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerMdbTests.cs,Setup,The length of the statement  "            _reader = new CecilSymbolManager(_mockCommandLine.Object' _mockFilter.Object' _mockLogger.Object' null' _mockSymbolFileHelper.Object); " is 134.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,Setup,The length of the statement  "            _reader = new CecilSymbolManager(_mockCommandLine.Object' _mockFilter.Object' _mockLogger.Object' null' _mockSymbolFileHelper.Object); " is 134.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_OneBranch,The length of the statement  "            var points = _reader.GetBranchPointsForToken(methods.First(x => x.FullName.Contains("::HasSingleDecision")).MetadataToken); " is 123.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_Using_Where_GeneratedBranchesIgnored,The length of the statement  "            var points = _reader.GetBranchPointsForToken(methods.First(x => x.FullName.Contains("::HasSimpleUsingStatement")).MetadataToken); " is 129.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_TwoBranch,The length of the statement  "            var points = _reader.GetBranchPointsForToken(methods.First(x => x.FullName.Contains("::HasTwoDecisions")).MetadataToken); " is 121.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithDefault,The length of the statement  "            var points = _reader.GetBranchPointsForToken(methods.First(x => x.FullName.Contains("::HasSwitchWithDefault")).MetadataToken); " is 126.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithBreaks,The length of the statement  "            var points = _reader.GetBranchPointsForToken(methods.First(x => x.FullName.Contains("::HasSwitchWithBreaks")).MetadataToken); " is 125.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithMultipleCases,The length of the statement  "            var points = _reader.GetBranchPointsForToken(methods.First(x => x.FullName.Contains("::HasSwitchWithMultipleCases")).MetadataToken); " is 132.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetComplexityForMethodToken_TwoBranch,The length of the statement  "            var complexity = _reader.GetCyclomaticComplexityForToken(methods.First(x => x.FullName.Contains("::HasTwoDecisions")).MetadataToken); " is 133.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,Can_Exclude_A_Ctor_By_An_Attribute,The length of the statement  "            var token = typeof(Concrete).GetConstructor(BindingFlags.Public | BindingFlags.Instance' null' new Type[0]' null).MetadataToken; " is 128.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,Can_Exclude_AutoImplmentedProperties,The length of the statement  "            Assert.AreEqual(SkippedMethod.AutoImplementedProperty' methods.First(y => y.FullName.EndsWith("AutoProperty()")).SkippedDueTo); " is 127.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetTrackedMethods_NoTrackedMethods_When_NoStrategies,The length of the statement  "            _reader = new CecilSymbolManager(_mockCommandLine.Object' _mockFilter.Object' _mockLogger.Object' _mockManager.Object' _mockSymbolFileHelper.Object); " is 149.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetTrackedMethods_NoTrackedMethods_When_StrategiesFindNothing,The length of the statement  "            _reader = new CecilSymbolManager(_mockCommandLine.Object' _mockFilter.Object' _mockLogger.Object' _mockManager.Object' _mockSymbolFileHelper.Object); " is 149.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetTrackedMethods_TrackedMethods_When_StrategiesMatch,The length of the statement  "            _reader = new CecilSymbolManager(_mockCommandLine.Object' _mockFilter.Object' _mockLogger.Object' _mockManager.Object' _mockSymbolFileHelper.Object); " is 149.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetTrackedMethods_NoTrackedMethods_When_NoPDBFound,The length of the statement  "            _reader = new CecilSymbolManager(_mockCommandLine.Object' _mockFilter.Object' _mockLogger.Object' _mockManager.Object' _mockSymbolFileHelper.Object); " is 149.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,SourceAssembly_DisplaysMessage_When_NoPDBFound,The length of the statement  "            _reader = new CecilSymbolManager(_mockCommandLine.Object' _mockFilter.Object' _mockLogger.Object' null' _mockSymbolFileHelper.Object); " is 134.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_UsingWithException_Issue243_IgnoresBranchInFinallyBlock,The length of the statement  "            Assert.AreEqual(1' md.Body.Instructions.Count(i => i.OpCode.FlowControl == FlowControl.Cond_Branch)' "There should only be one branch and that should be in the finally block"); " is 176.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_UsingWithException_Issue243_IgnoresBranchInFinallyBlock,The length of the statement  "            Assert.IsTrue(md.Body.Instructions.First(i => i.OpCode.FlowControl == FlowControl.Cond_Branch).Offset > md.Body.ExceptionHandlers[0].HandlerStart.Offset' "There should only be one branch and that should be in the finally block"); " is 229.
Long Statement,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_Issue881_IgnoresGeneratedBranch,The length of the statement  "                var method = methods.FirstOrDefault(x => x.FullName.Contains("<HasSimpleAsyncAwait_Issue881>") && x.FullName.Contains("MoveNext")); " is 131.
Long Statement,OpenCover.Test.Support,FakesHelperTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Support\FakesHelperTests.cs,LoadOpenCoverProfilerInstead_SwapsOutOriginalProfilerForOpenCover,The length of the statement  "                {"COR_PROFILER"' "{0000002F-0000-0000-C000-000000000046}"} // not a real profiler just a COM object that should exist on every box" is 130.
Long Statement,OpenCover.Test.Support,FakesHelperTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Support\FakesHelperTests.cs,LoadOpenCoverProfilerInstead_SwapsOutOriginalProfilerForOpenCover,The length of the statement  "            Assert.IsTrue(dict["CHAIN_EXTERNAL_PROFILER_LOCATION"].EndsWith("oleaut32.dll"' StringComparison.InvariantCultureIgnoreCase));" is 126.
Long Statement,OpenCover.Test.Support,FakesHelperTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Support\FakesHelperTests.cs,LoadOpenCoverProfilerInstead_DoesNotAlterProfilerIfNotEnabled,The length of the statement  "                {"COR_PROFILER"' "{0000002F-0000-0000-C000-000000000046}"} // not a real profiler just a COM object that should exist on every box" is 130.
Long Statement,OpenCover.Test.Support,FakesHelperTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Support\FakesHelperTests.cs,LoadOpenCoverProfilerInstead_DoesNotAlterProfilerIfCurrentProfilerIsOpenCover,The length of the statement  "                {"COR_PROFILER"' "{1542C21D-80C3-45E6-A56C-A9C1E4BEB7B8}"} // not a real profiler just a COM object that should exist on every box" is 130.
Magic Number,OpenCover.Test.Framework.Communication,CommunicationManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\CommunicationManagerTests.cs,HandleMemoryBlock_Returns_Block_Informs_Profiler_When_Read,The following statement contains a magic number: mcb.StreamAccessorResults.Write(BitConverter.GetBytes(24)' 0' 4);
Magic Number,OpenCover.Test.Framework.Communication,CommunicationManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\CommunicationManagerTests.cs,HandleMemoryBlock_Returns_Block_Informs_Profiler_When_Read,The following statement contains a magic number: mcb.StreamAccessorResults.Write(BitConverter.GetBytes(24)' 0' 4);
Magic Number,OpenCover.Test.Framework.Communication,CommunicationManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\CommunicationManagerTests.cs,HandleMemoryBlock_Returns_Block_Informs_Profiler_When_Read,The following statement contains a magic number: Assert.IsTrue(mcb.ResultsHaveBeenReceived.WaitOne(new TimeSpan(0' 0' 0' 4))' "Profiler wasn't signalled");
Magic Number,OpenCover.Test.Framework.Communication,CommunicationManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\CommunicationManagerTests.cs,HandleMemoryBlock_Returns_Block_Informs_Profiler_When_Read,The following statement contains a magic number: Assert.AreEqual(100' data.Length);
Magic Number,OpenCover.Test.Framework.Communication,CommunicationManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\CommunicationManagerTests.cs,HandleCommunicationBlock_Informs_Profiler_When_Data_Is_Ready,The following statement contains a magic number: Assert.IsTrue(mcb.InformationReadyForProfiler.WaitOne(new TimeSpan(0' 0' 0' 4))'                         "Profiler wasn't signalled");
Magic Number,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_AllocateMemoryBuffer,The following statement contains a magic number: Container.GetMock<IMarshalWrapper>()                 .Setup(x => x.PtrToStructure<MSG_AllocateBuffer_Request>(It.IsAny<IntPtr>()))                 .Returns(new MSG_AllocateBuffer_Request()                 {                     version_high = ((uint)version.Major << 16) + (uint)version.Minor'                     version_low = ((uint)version.Build << 16) + (uint)version.Revision                 });
Magic Number,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_AllocateMemoryBuffer,The following statement contains a magic number: Container.GetMock<IMarshalWrapper>()                 .Setup(x => x.PtrToStructure<MSG_AllocateBuffer_Request>(It.IsAny<IntPtr>()))                 .Returns(new MSG_AllocateBuffer_Request()                 {                     version_high = ((uint)version.Major << 16) + (uint)version.Minor'                     version_low = ((uint)version.Build << 16) + (uint)version.Revision                 });
Magic Number,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetSequencePoints_Small,The following statement contains a magic number: var points = Enumerable.Repeat(new InstrumentationPoint()' 2).ToArray();
Magic Number,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetSequencePoints_Small,The following statement contains a magic number: Container.GetMock<IMarshalWrapper>()                 .Verify(x=>x.StructureToPtr(It.IsAny<MSG_SequencePoint>()' It.IsAny<IntPtr>()' It.IsAny<bool>())' Times.Exactly(2));
Magic Number,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetSequencePoints_Large_StartsToChunk,The following statement contains a magic number: var points = Enumerable.Repeat(new InstrumentationPoint()' 10000).ToArray();
Magic Number,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetSequencePoints_Large_StartsToChunk,The following statement contains a magic number: Container.GetMock<IMarshalWrapper>()                 .Verify(x => x.StructureToPtr(It.IsAny<MSG_SequencePoint>()' It.IsAny<IntPtr>()' It.IsAny<bool>())' Times.Exactly(10000));
Magic Number,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetBranchPoints_Small,The following statement contains a magic number: var points = Enumerable.Repeat(new BranchPoint()' 2).ToArray();
Magic Number,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetBranchPoints_Small,The following statement contains a magic number: Container.GetMock<IMarshalWrapper>()                 .Verify(x => x.StructureToPtr(It.IsAny<MSG_BranchPoint>()' It.IsAny<IntPtr>()' It.IsAny<bool>())' Times.Exactly(2));
Magic Number,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetBranchPoints_Large_StartsToChunk,The following statement contains a magic number: var points = Enumerable.Repeat(new BranchPoint()' 10000).ToArray();
Magic Number,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,Handles_MSG_GetBranchPoints_Large_StartsToChunk,The following statement contains a magic number: Container.GetMock<IMarshalWrapper>()                 .Verify(x => x.StructureToPtr(It.IsAny<MSG_BranchPoint>()' It.IsAny<IntPtr>()' It.IsAny<bool>())' Times.Exactly(10000));
Magic Number,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,ExceptionDuring_MSG_GetSequencePoints_ReturnsLastBlockAsEmpty,The following statement contains a magic number: var points = Enumerable.Repeat(new SequencePoint()' 100).ToArray<InstrumentationPoint>();
Magic Number,OpenCover.Test.Framework.Communication,MessageHandlerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Communication\MessageHandlerTests.cs,ExceptionDuring_MSG_GetBranchPoints_ReturnsLastBlockAsEmpty,The following statement contains a magic number: var points = Enumerable.Repeat(new BranchPoint()' 100).ToArray();
Magic Number,OpenCover.Test.Framework,CommandLineParserBaseTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserBaseTests.cs,CanParseManyArguments,The following statement contains a magic number: Assert.AreEqual(2' parser.ArgumentCount);
Magic Number,OpenCover.Test.Framework,CommandLineParserBaseTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserBaseTests.cs,CanParseManyArgumentsWithValue,The following statement contains a magic number: Assert.AreEqual(2' parser.ArgumentCount);
Magic Number,OpenCover.Test.Framework,CommandLineParserBaseTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserBaseTests.cs,CanParseMultipleArgumentsWithValues,The following statement contains a magic number: Assert.AreEqual(3' parser.ArgumentCount);
Magic Number,OpenCover.Test.Framework,CommandLineParserBaseTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserBaseTests.cs,CanParseManyArgumentsWithSamekey,The following statement contains a magic number: Assert.AreEqual(3' parser.ArgumentCount);
Magic Number,OpenCover.Test.Framework,CommandLineParserBaseTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserBaseTests.cs,CanParseManyArgumentsWithValueWithSamekey,The following statement contains a magic number: Assert.AreEqual(2' parser.ArgumentCount);
Magic Number,OpenCover.Test.Framework,CommandLineParserBaseTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserBaseTests.cs,CanParseMultipleArgumentsWithValuesWithSamekey,The following statement contains a magic number: Assert.AreEqual(3' parser.ArgumentCount);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,ParserHasKnownDefaultArguments,The following statement contains a magic number: Assert.AreEqual(new TimeSpan(0' 0' 30)' parser.ServiceStartTimeout);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,HandlesTheSearchDirsArgumentWithSuppliedValue,The following statement contains a magic number: Assert.AreEqual(2' parser.SearchDirs.Length);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,HandlesTheExcludeDirsArgumentWithSuppliedValue,The following statement contains a magic number: Assert.AreEqual(2' parser.ExcludeDirs.Length);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,HandlesFilterArgument,The following statement contains a magic number: Assert.AreEqual(2' parser.Filters.Count);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,HandlesFilterArgumentsWithSpacesInNamespace,The following statement contains a magic number: Assert.AreEqual(2' parser.Filters.Count);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,HandlesReturnTargetCodeArgument_WithValue,The following statement contains a magic number: Assert.AreEqual(100' parser.ReturnCodeOffset);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,HandlesThresholdArgument_WithValue,The following statement contains a magic number: Assert.AreEqual(127' parser.Threshold);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,HandlesExcludeByAttributeArgument_WithMultipleValues,The following statement contains a magic number: Assert.AreEqual(3' parser.AttributeExclusionFilters.Count);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,HandlesExcludeByAttributeArgument_WithMultipleValues,The following statement contains a magic number: Assert.AreEqual("woop"' parser.AttributeExclusionFilters[2]);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,HandlesExcludeByFileArgument_WithMultipleValues,The following statement contains a magic number: Assert.AreEqual(3' parser.FileExclusionFilters.Count);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,HandlesExcludeByFileArgument_WithMultipleValues,The following statement contains a magic number: Assert.AreEqual("woop"' parser.FileExclusionFilters[2]);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,HandlesCoverByTestArgument_WithMultipleValues,The following statement contains a magic number: Assert.AreEqual(3' parser.TestFilters.Count);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,HandlesCoverByTestArgument_WithMultipleValues,The following statement contains a magic number: Assert.AreEqual("woop"' parser.TestFilters[2]);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,ExtractsHideSkipped_Handles_Multiple_Arg,The following statement contains a magic number: Assert.AreEqual(4' parser.HideSkipped.Distinct().Count());
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,ExtractsHideSkipped_Handles_Multiple_Arg,The following statement contains a magic number: Assert.AreEqual(SkippedMethod.MissingPdb' parser.HideSkipped[2]);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,ExtractsHideSkipped_Handles_Multiple_Arg,The following statement contains a magic number: Assert.AreEqual(SkippedMethod.Attribute' parser.HideSkipped[3]);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,HandlesFilterArgumentWithMultipleTimes,The following statement contains a magic number: Assert.AreEqual(2' parser.Filters.Count);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,HandlesFilterArgumentsWithSpacesInNamespaceWithMultipleTimes,The following statement contains a magic number: Assert.AreEqual(2' parser.Filters.Count);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,FilterParsing_NonGreedy,The following statement contains a magic number: Assert.AreEqual(3' parser.Filters.Count' filterArg);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,FilterParsing_NonGreedy,The following statement contains a magic number: Assert.AreEqual (filter2' parser.Filters[2]' parser.Filters[2]);
Magic Number,OpenCover.Test.Framework,CommandLineParserTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\CommandLineParserTests.cs,FilterParsing_NonGreedy,The following statement contains a magic number: Assert.AreEqual (filter2' parser.Filters[2]' parser.Filters[2]);
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,DeactivateMemoryBuffer_SetsActive_ForBlock_False,The following statement contains a magic number: _manager.AllocateMemoryBuffer(100' out var bufferId);
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,RemoveDeactivatedBlocs_RemovesNonActiveBlock,The following statement contains a magic number: _manager.AllocateMemoryBuffer(100' out var bufferId);
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,RemoveDeactivatedBlocs_RemovesNonActiveBlock,The following statement contains a magic number: _manager.AllocateMemoryBuffer(100' out bufferId);
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,RemoveDeactivatedBlocs_RemovesNonActiveBlock,The following statement contains a magic number: Assert.AreEqual(2' _manager.GetBlocks.Count);
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,RemoveDeactivatedBlocs_RemovesNonActiveBlock,The following statement contains a magic number: Assert.AreEqual(2' _manager.GetBlocks.Count(b => b.Active));
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,RemoveDeactivatedBlocs_RemovesNonActiveBlock,The following statement contains a magic number: Assert.AreEqual(2' _manager.GetBlocks.Count);
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,Cannot_RemoveDeactivatedBlock_OnActiveBlock,The following statement contains a magic number: _manager.AllocateMemoryBuffer(100' out _);
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,AllocateMemoryBuffer_WhenManagerNotInitialised_Ignored_OK,The following statement contains a magic number: Assert.That(() => manager.AllocateMemoryBuffer(100' out _)' Throws.Nothing);
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,AllocateMemoryBufferTwice_NewBufferAllocated_OK,The following statement contains a magic number: _manager.AllocateMemoryBuffer(100' out _);
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,AllocateMemoryBufferTwice_NewBufferAllocated_OK,The following statement contains a magic number: _manager.AllocateMemoryBuffer(100' out _);
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,AllocateMemoryBufferTwice_NewBufferAllocated_OK,The following statement contains a magic number: Assert.AreEqual(2' _manager.GetBlocks.Count);
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,DeactivateMemoryBufferTwice_Ignored_OK,The following statement contains a magic number: _manager.AllocateMemoryBuffer(100' out var bufferId);
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,DeactivateMemoryBufferAfterDisposed_Ignored_OK,The following statement contains a magic number: _manager.AllocateMemoryBuffer(100' out var bufferId);
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,WaitForBlocksToClose_WaitsUntilBufferWaitCountExceededIfAnyActiveBlocks,The following statement contains a magic number: _manager.AllocateMemoryBuffer(100' out _);
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,WaitForBlocksToClose_WaitsUntilBufferWaitCountExceededIfAnyActiveBlocks,The following statement contains a magic number: Assert.That(timeAction(() => _manager.WaitForBlocksToClose(0))' Is.LessThan(500));
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,WaitForBlocksToClose_WaitsUntilBufferWaitCountExceededIfAnyActiveBlocks,The following statement contains a magic number: Assert.That(timeAction(() => _manager.WaitForBlocksToClose(1))' Is.GreaterThanOrEqualTo(500).And.LessThan(1000));
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,WaitForBlocksToClose_WaitsUntilBufferWaitCountExceededIfAnyActiveBlocks,The following statement contains a magic number: Assert.That(timeAction(() => _manager.WaitForBlocksToClose(1))' Is.GreaterThanOrEqualTo(500).And.LessThan(1000));
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,WaitForBlocksToClose_WaitsUntilBufferWaitCountExceededIfAnyActiveBlocks,The following statement contains a magic number: Assert.That(timeAction(() => _manager.WaitForBlocksToClose(2))' Is.GreaterThanOrEqualTo(1000).And.LessThan(1500));
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,WaitForBlocksToClose_WaitsUntilBufferWaitCountExceededIfAnyActiveBlocks,The following statement contains a magic number: Assert.That(timeAction(() => _manager.WaitForBlocksToClose(2))' Is.GreaterThanOrEqualTo(1000).And.LessThan(1500));
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,WaitForBlocksToClose_WaitsUntilBufferWaitCountExceededIfAnyActiveBlocks,The following statement contains a magic number: Assert.That(timeAction(() => _manager.WaitForBlocksToClose(2))' Is.GreaterThanOrEqualTo(1000).And.LessThan(1500));
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,WaitForBlocksToClose_StopsWaitingWhenNoActiveBlocks,The following statement contains a magic number: _manager.AllocateMemoryBuffer(100' out _);
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,WaitForBlocksToClose_StopsWaitingWhenNoActiveBlocks,The following statement contains a magic number: Assert.That(timeAction(() => _manager.WaitForBlocksToClose(1))' Is.GreaterThanOrEqualTo(500).And.LessThan(1000));
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,WaitForBlocksToClose_StopsWaitingWhenNoActiveBlocks,The following statement contains a magic number: Assert.That(timeAction(() => _manager.WaitForBlocksToClose(1))' Is.GreaterThanOrEqualTo(500).And.LessThan(1000));
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,WaitForBlocksToClose_StopsWaitingWhenNoActiveBlocks,The following statement contains a magic number: Assert.That(timeAction(() => _manager.WaitForBlocksToClose(1))' Is.LessThan(500));
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,FetchRemainingBufferData_CallsActionForEachActiveBlock,The following statement contains a magic number: _manager.AllocateMemoryBuffer(100' out _);
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,FetchRemainingBufferData_CallsActionForEachActiveBlock,The following statement contains a magic number: _manager.AllocateMemoryBuffer(100' out _);
Magic Number,OpenCover.Test.Framework.Manager,MemoryManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\MemoryManagerTests.cs,FetchRemainingBufferData_CallsActionForEachActiveBlock,The following statement contains a magic number: Assert.That(count' Is.EqualTo(2));
Magic Number,OpenCover.Test.Framework.Manager,ProfilerManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\ProfilerManagerTests.cs,OnSetup,The following statement contains a magic number: _manager.AllocateMemoryBuffer(65536' out _);
Magic Number,OpenCover.Test.Framework.Manager,ProfilerManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\ProfilerManagerTests.cs,Manager_Adds_Supplied_Threshold_EnvironmentVariable,The following statement contains a magic number: Container.GetMock<ICommandLine>().SetupGet(x => x.Threshold).Returns(500);
Magic Number,OpenCover.Test.Framework.Manager,ProfilerManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\ProfilerManagerTests.cs,Manager_Adds_Supplied_ShortWait_EnvironmentVariable,The following statement contains a magic number: Container.GetMock<ICommandLine>().SetupGet(x => x.CommunicationTimeout).Returns(10000);
Magic Number,OpenCover.Test.Framework.Manager,ProfilerManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\ProfilerManagerTests.cs,Manager_Handles_Profiler_StandardMessageEvent,The following statement contains a magic number: Container.GetMock<ICommunicationManager>()                     .Setup(x => x.HandleMemoryBlock(It.IsAny<IManagedMemoryBlock>()))                     .Returns<IManagedMemoryBlock>(mmb =>                     {                         mmb.ProfilerHasResults.Reset();                         blockHandled.Set();                         return new byte[4];                     });
Magic Number,OpenCover.Test.Framework.Manager,ProfilerManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\ProfilerManagerTests.cs,Manager_Handles_Profiler_ResultsReady,The following statement contains a magic number: Container.GetMock<ICommunicationManager>()                 .Verify(x => x.HandleCommunicationBlock(It.IsAny<IManagedCommunicationBlock>()'                     It.IsAny<Action<ManagedBufferBlock>>())' Times.Exactly(2));
Magic Number,OpenCover.Test.Framework.Manager,ProfilerManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\ProfilerManagerTests.cs,Manager_Sets_Service_ACLs_On_Events,The following statement contains a magic number: Assert.That(ruleset.Count' Is.EqualTo(2));
Magic Number,OpenCover.Test.Framework.Manager,ProfilerManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Manager\ProfilerManagerTests.cs,Manager_Sets_Service_ACLs_On_Memory,The following statement contains a magic number: Assert.That(ruleset.Count' Is.EqualTo(2));
Magic Number,OpenCover.Test.Framework.Model,InstrumentationPointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\InstrumentationPointTests.cs,CanRetrieveSavedTrackedRefs,The following statement contains a magic number: var point = new InstrumentationPoint             {                 TrackedMethodRefs = new[] {new TrackedMethodRef() {UniqueId = 12345}}             };
Magic Number,OpenCover.Test.Framework.Model,InstrumentationPointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\InstrumentationPointTests.cs,CanRetrieveSavedTrackedRefs,The following statement contains a magic number: Assert.AreEqual(12345' point.TrackedMethodRefs[0].UniqueId);
Magic Number,OpenCover.Test.Framework.Model,InstrumentationPointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\InstrumentationPointTests.cs,CanClearSavedTrackedRefs,The following statement contains a magic number: var point = new InstrumentationPoint             {                 TrackedMethodRefs = new[] {new TrackedMethodRef() {UniqueId = 12345}}             };
Magic Number,OpenCover.Test.Framework.Model,InstrumentationModelBuilderTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\InstrumentationModelBuilderTests.cs,BuildModuleModel_Gets_SequencePoints_From_SymbolReader,The following statement contains a magic number: var method = new Method{MetadataToken = 101};
Magic Number,OpenCover.Test.Framework.Model,InstrumentationModelBuilderTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\InstrumentationModelBuilderTests.cs,BuildModuleModel_Gets_SequencePoints_From_SymbolReader,The following statement contains a magic number: Container.GetMock<ISymbolManager>()                  .Setup(x => x.GetSequencePointsForToken(101))                  .Returns(new[] { seqPoint });
Magic Number,OpenCover.Test.Framework.Model,InstrumentationModelBuilderTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\InstrumentationModelBuilderTests.cs,BuildModuleModel_MethodPoint_WhenOffsetZero,The following statement contains a magic number: var method = new Method { MetadataToken = 101 };
Magic Number,OpenCover.Test.Framework.Model,InstrumentationModelBuilderTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\InstrumentationModelBuilderTests.cs,BuildModuleModel_MethodPoint_WhenOffsetZero,The following statement contains a magic number: Container.GetMock<ISymbolManager>()                  .Setup(x => x.GetSequencePointsForToken(101))                  .Returns(new[] { seqPoint });
Magic Number,OpenCover.Test.Framework.Model,InstrumentationModelBuilderTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\InstrumentationModelBuilderTests.cs,BuildModuleModel_MethodPoint_WhenOffsetGreaterThanZero,The following statement contains a magic number: var method = new Method { MetadataToken = 101 };
Magic Number,OpenCover.Test.Framework.Model,InstrumentationModelBuilderTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\InstrumentationModelBuilderTests.cs,BuildModuleModel_MethodPoint_WhenOffsetGreaterThanZero,The following statement contains a magic number: Container.GetMock<ISymbolManager>()                  .Setup(x => x.GetSequencePointsForToken(101))                  .Returns(new[] { seqPoint });
Magic Number,OpenCover.Test.Framework.Model,InstrumentationModelBuilderTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\InstrumentationModelBuilderTests.cs,BuildModuleModel_Gets_BranchPoints_WhenHaveSequencePoints,The following statement contains a magic number: var @method = new Method { MetadataToken = 101 };
Magic Number,OpenCover.Test.Framework.Model,InstrumentationModelBuilderTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\InstrumentationModelBuilderTests.cs,BuildModuleModel_Gets_BranchPoints_WhenHaveSequencePoints,The following statement contains a magic number: Container.GetMock<ISymbolManager>()                  .Setup(x => x.GetSequencePointsForToken(101))                  .Returns(new[] { seqPoint });
Magic Number,OpenCover.Test.Framework.Model,InstrumentationModelBuilderTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\InstrumentationModelBuilderTests.cs,BuildModuleModel_Gets_BranchPoints_WhenHaveSequencePoints,The following statement contains a magic number: Container.GetMock<ISymbolManager>()                  .Setup(x => x.GetBranchPointsForToken(101))                  .Returns(new[] { brPoint });
Magic Number,OpenCover.Test.Framework.Model,InstrumentationModelBuilderTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\InstrumentationModelBuilderTests.cs,BuildModuleModel_Gets_NoBranchPoints_WhenNoSequencePoints,The following statement contains a magic number: var @method = new Method { MetadataToken = 101 };
Magic Number,OpenCover.Test.Framework.Model,InstrumentationModelBuilderTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\InstrumentationModelBuilderTests.cs,BuildModuleModel_Gets_NoBranchPoints_WhenNoSequencePoints,The following statement contains a magic number: Container.GetMock<ISymbolManager>()                  .Setup(x => x.GetBranchPointsForToken(101))                  .Returns(new[] { brPoint });
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,When_AddingLotsOfSequencePoints_Array_GrowsAutomatically,The following statement contains a magic number: i < 10000
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,When_AddingLotsOfSequencePoints_Array_GrowsAutomatically,The following statement contains a magic number: Assert.IsTrue(InstrumentationPoint.AddVisitCount(10000' 0' 100));
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,When_AddingLotsOfSequencePoints_Array_GrowsAutomatically,The following statement contains a magic number: Assert.IsTrue(InstrumentationPoint.AddVisitCount(10000' 0' 100));
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,When_AddingLotsOfSequencePoints_Array_GrowsAutomatically,The following statement contains a magic number: Assert.AreEqual(100' InstrumentationPoint.GetVisitCount(10000));
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,When_AddingLotsOfSequencePoints_Array_GrowsAutomatically,The following statement contains a magic number: Assert.AreEqual(100' InstrumentationPoint.GetVisitCount(10000));
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,When_AccessingInstrumentationPoints_OutsideAllowedRange,The following statement contains a magic number: i < 10
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,When_AccessingInstrumentationPoints_OutsideAllowedRange,The following statement contains a magic number: Assert.IsFalse(InstrumentationPoint.AddVisitCount(0' 0' 100));
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,When_AccessingInstrumentationPoints_OutsideAllowedRange,The following statement contains a magic number: Assert.IsFalse(InstrumentationPoint.AddVisitCount(1000000' 0' 100));
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,When_AccessingInstrumentationPoints_OutsideAllowedRange,The following statement contains a magic number: Assert.IsFalse(InstrumentationPoint.AddVisitCount(1000000' 0' 100));
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,VisitCountIsLimitedToMax,The following statement contains a magic number: i < 10
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,VisitCountIsLimitedToMax,The following statement contains a magic number: Assert.IsTrue(InstrumentationPoint.AddVisitCount(1' 0' 100));
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,VisitCountIsLimitedToMax,The following statement contains a magic number: Assert.AreEqual(100' InstrumentationPoint.GetVisitCount(1));
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,VisitCountIsLimitedToMax,The following statement contains a magic number: Assert.IsTrue(InstrumentationPoint.AddVisitCount(1' 0' 300));
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,TrackedMethodCountIsLimitedToMax,The following statement contains a magic number: i < 10
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,TrackedMethodCountIsLimitedToMax,The following statement contains a magic number: Assert.IsTrue(InstrumentationPoint.AddVisitCount(1' 1' 100));
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,TrackedMethodCountIsLimitedToMax,The following statement contains a magic number: Assert.AreEqual(100' list.First(x => x.UniqueSequencePoint == 1).TrackedMethodRefs.First(x => x.UniqueId == 1).VisitCount);
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,TrackedMethodCountIsLimitedToMax,The following statement contains a magic number: Assert.IsTrue(InstrumentationPoint.AddVisitCount(1' 1' 200));
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,CanDetermineSingleCharSequencePoint,The following statement contains a magic number: Assert.IsTrue(new SequencePoint { FileId = 1' StartLine = 1' StartColumn = 1' EndLine = 1' EndColumn = 2 }.IsSingleCharSequencePoint);
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,CanDetermineSingleCharSequencePoint,The following statement contains a magic number: Assert.IsFalse(new SequencePoint { FileId = 1' StartLine = 1' StartColumn = 1' EndLine = 1' EndColumn = 3 }.IsSingleCharSequencePoint);
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,CanDetermineSingleCharSequencePoint,The following statement contains a magic number: Assert.IsFalse(new SequencePoint { FileId = 1' StartLine = 1' StartColumn = 1' EndLine = 2' EndColumn = 2 }.IsSingleCharSequencePoint);
Magic Number,OpenCover.Test.Framework.Model,SequencePointTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Model\SequencePointTests.cs,CanDetermineSingleCharSequencePoint,The following statement contains a magic number: Assert.IsFalse(new SequencePoint { FileId = 1' StartLine = 1' StartColumn = 1' EndLine = 2' EndColumn = 2 }.IsSingleCharSequencePoint);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Can_Add_SeveralModules_To_Session,The following statement contains a magic number: Assert.AreEqual(2' Instance.CoverageSession.Modules.Length);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Can_Add_Valid_Module_To_Session,The following statement contains a magic number: Assert.AreEqual(2' Instance.CoverageSession.Modules.Length);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Can_GetBranchPoints_Of_MethodByToken,The following statement contains a magic number: var module = new Module             {                 ModulePath = "ModulePath"'                 Classes = new[]                 {                     new Class                     {                         FullName = "namespace.class"'                         Methods = new[]                         {                             new Method                             {                                 MetadataToken = 1001'                                 BranchPoints = new[] {target}                             }                         }                     }                 }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Can_GetBranchPoints_Of_MethodByToken,The following statement contains a magic number: Instance.GetBranchPointsForFunction("ModulePath"' 1001' out var pts);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Can_GetFullClassName_Of_MethodByToken,The following statement contains a magic number: var module = new Module             {                 ModulePath = "ModulePath"'                 Classes = new[]                 {                     new Class {FullName = "namespace.class"' Methods = new[] {new Method {MetadataToken = 1001}}}                 }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Can_GetFullClassName_Of_MethodByToken,The following statement contains a magic number: string name = Instance.GetClassFullName("ModulePath"' 1001);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Can_GetSequencePoints_Of_MethodByToken,The following statement contains a magic number: var module = new Module             {                 ModulePath = "ModulePath"'                 Classes = new[]                 {                     new Class                     {                         FullName = "namespace.class"'                         Methods = new[]                         {                             new Method                             {                                 MethodPoint = target'                                 MetadataToken = 1001'                                 SequencePoints = new[] {target}                             }                         }                     }                 }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Can_GetSequencePoints_Of_MethodByToken,The following statement contains a magic number: Instance.GetSequencePointsForFunction("ModulePath"' 1001' out var pts);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Class_Summary_Aggregates_Methods,The following statement contains a magic number: Instance.CoverageSession.Modules = new[]             {                 new Module                 {                     Classes =                         new[]                         {                             new Class                             {                                 Methods =                                     new[]                                     {                                         new Method                                         {                                             SequencePoints = new[] {new SequencePoint {VisitCount = 1}}'                                             CyclomaticComplexity = 1'                                             Visited = true'                                             FileRef = new FileRef()                                         }'                                         new Method                                         {                                             SequencePoints =                                                 new[]                                                 {new SequencePoint {VisitCount = 1}' new SequencePoint {VisitCount = 0}}'                                             CyclomaticComplexity = 10'                                             FileRef = new FileRef()                                         }'                                         new Method                                         {                                             SequencePoints = new[] {new SequencePoint {VisitCount = 0}}'                                             CyclomaticComplexity = 3                                         }                                     }                             }                         }                 }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Class_Summary_Aggregates_Methods,The following statement contains a magic number: Instance.CoverageSession.Modules = new[]             {                 new Module                 {                     Classes =                         new[]                         {                             new Class                             {                                 Methods =                                     new[]                                     {                                         new Method                                         {                                             SequencePoints = new[] {new SequencePoint {VisitCount = 1}}'                                             CyclomaticComplexity = 1'                                             Visited = true'                                             FileRef = new FileRef()                                         }'                                         new Method                                         {                                             SequencePoints =                                                 new[]                                                 {new SequencePoint {VisitCount = 1}' new SequencePoint {VisitCount = 0}}'                                             CyclomaticComplexity = 10'                                             FileRef = new FileRef()                                         }'                                         new Method                                         {                                             SequencePoints = new[] {new SequencePoint {VisitCount = 0}}'                                             CyclomaticComplexity = 3                                         }                                     }                             }                         }                 }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Class_Summary_Aggregates_Methods,The following statement contains a magic number: Assert.AreEqual(4' Instance.CoverageSession.Modules[0].Classes[0].Summary.NumSequencePoints);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Class_Summary_Aggregates_Methods,The following statement contains a magic number: Assert.AreEqual(2' Instance.CoverageSession.Modules[0].Classes[0].Summary.VisitedSequencePoints);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Class_Summary_Aggregates_Methods,The following statement contains a magic number: Assert.AreEqual(50' Instance.CoverageSession.Modules[0].Classes[0].Summary.SequenceCoverage);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Class_Summary_Aggregates_Methods,The following statement contains a magic number: Assert.AreEqual(3' Instance.CoverageSession.Modules[0].Classes[0].Summary.NumBranchPoints);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Class_Summary_Aggregates_Methods,The following statement contains a magic number: Assert.AreEqual(2' Instance.CoverageSession.Modules[0].Classes[0].Summary.VisitedBranchPoints);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Class_Summary_Aggregates_Methods,The following statement contains a magic number: Assert.AreEqual(66.67m' Instance.CoverageSession.Modules[0].Classes[0].Summary.BranchCoverage);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Class_Summary_Aggregates_Methods,The following statement contains a magic number: Assert.AreEqual(10' Instance.CoverageSession.Modules[0].Classes[0].Summary.MaxCyclomaticComplexity);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Class_Summary_Aggregates_Methods,The following statement contains a magic number: Assert.AreEqual(2' Instance.CoverageSession.Modules[0].Classes[0].Summary.NumMethods);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Class_Summary_Aggregates_Methods,The following statement contains a magic number: Assert.AreEqual(22.5m' Instance.CoverageSession.Modules[0].Classes[0].Summary.MaxCrapScore);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Commit_With_WithBranchPointsOnly,The following statement contains a magic number: InstrumentationPoint.AddVisitCount(point.UniqueSequencePoint' 0' 42);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Commit_With_WithBranchPointsOnly,The following statement contains a magic number: Assert.AreEqual(42' point.VisitCount);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Commit_With_WithMethodPointsOnly_GetsValue,The following statement contains a magic number: InstrumentationPoint.AddVisitCount(point.UniqueSequencePoint' 0' 25);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Commit_With_WithMethodPointsOnly_GetsValue,The following statement contains a magic number: Assert.AreEqual(25' point.VisitCount);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Commit_With_WithSequencePointsOnly,The following statement contains a magic number: InstrumentationPoint.AddVisitCount(point.UniqueSequencePoint' 0' 37);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Commit_With_WithSequencePointsOnly,The following statement contains a magic number: Assert.AreEqual(37' point.VisitCount);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GeBranchPoints_GetsZeroPoints_When_FunctionNotKnown,The following statement contains a magic number: var module = new Module             {                 ModulePath = "ModuleName"'                 Classes = new[]                 {                     new Class                     {                         Methods = new[]                         {new Method {MetadataToken = 1' BranchPoints = new[] {new BranchPoint {VisitCount = 1000}}}}                     }                 }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GeBranchPoints_GetsZeroPoints_When_FunctionNotKnown,The following statement contains a magic number: Instance.GetBranchPointsForFunction("ModuleName"' 2' out var points);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GetSequencePoints_GetsPoints_When_ModuleAndFunctionKnown_FirstPointIsNotSequence,The following statement contains a magic number: var methodPoint = new InstrumentationPoint {VisitCount = 2000};
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GetSequencePoints_GetsPoints_When_ModuleAndFunctionKnown_FirstPointIsNotSequence,The following statement contains a magic number: var module = new Module             {                 ModulePath = "ModulePath"'                 Classes =                     new[]                     {                         new Class                         {                             Methods =                                 new[]                                 {                                     new Method                                     {                                         MethodPoint = methodPoint'                                         MetadataToken = 1'                                         SequencePoints = new[] {new SequencePoint {VisitCount = 1000}}                                     }                                 }                         }                     }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GetSequencePoints_GetsPoints_When_ModuleAndFunctionKnown_FirstPointIsNotSequence,The following statement contains a magic number: Assert.AreEqual(2' points.Length);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GetSequencePoints_GetsPoints_When_ModuleAndFunctionKnown_FirstPointIsNotSequence,The following statement contains a magic number: Assert.AreEqual(2000' points[0].VisitCount);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GetSequencePoints_GetsPoints_When_ModuleAndFunctionKnown_FirstPointIsNotSequence,The following statement contains a magic number: Assert.AreEqual(1000' points[1].VisitCount);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GetSequencePoints_GetsPoints_When_ModuleAndFunctionKnown_FirstPointIsSequence,The following statement contains a magic number: var seqPoint = new SequencePoint {VisitCount = 1000};
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GetSequencePoints_GetsPoints_When_ModuleAndFunctionKnown_FirstPointIsSequence,The following statement contains a magic number: Assert.AreEqual(1000' points[0].VisitCount);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GetSequencePoints_GetsZeroPoints_When_FunctionNotKnown,The following statement contains a magic number: var module = new Module             {                 ModulePath = "ModuleName"'                 Classes = new[]                 {                     new Class                     {                         Methods = new[]                         {new Method {MetadataToken = 1' SequencePoints = new[] {new SequencePoint {VisitCount = 1000}}}}                     }                 }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GetSequencePoints_GetsZeroPoints_When_FunctionNotKnown,The following statement contains a magic number: Instance.GetSequencePointsForFunction("ModuleName"' 2' out var points);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GetSequencePoints_GetsZeroPoints_When_ModuleNotKnown,The following statement contains a magic number: Instance.PersistModule(new Module             {                 ModulePath = "ModuleName"'                 Classes =                     new[]                     {                         new Class                         {                             Methods =                                 new[]                                 {                                     new Method                                     {                                         MetadataToken = 1'                                         SequencePoints = new[] {new SequencePoint {VisitCount = 1000}}                                     }                                 }                         }                     }             });
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GetTrackingMethod_RetrievesId_For_TrackedMethod,The following statement contains a magic number: var module = new Module             {                 TrackedMethods =                     new[]                     {                         new TrackedMethod {MetadataToken = 1234' FullName = "MethodName"' UniqueId = 5678}                     }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GetTrackingMethod_RetrievesId_For_TrackedMethod,The following statement contains a magic number: var module = new Module             {                 TrackedMethods =                     new[]                     {                         new TrackedMethod {MetadataToken = 1234' FullName = "MethodName"' UniqueId = 5678}                     }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GetTrackingMethod_RetrievesId_For_TrackedMethod,The following statement contains a magic number: var result = Instance.GetTrackingMethod("ModulePath"' "AssemblyName"' 1234' out var trackedId);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GetTrackingMethod_RetrievesId_For_TrackedMethod,The following statement contains a magic number: Assert.AreEqual(5678' trackedId);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GetTrackingMethod_ReturnsFase_For_UnTrackedMethod,The following statement contains a magic number: var module = new Module             {                 TrackedMethods =                     new[]                     {                         new TrackedMethod {MetadataToken = 1234' FullName = "MethodName"' UniqueId = 5678}                     }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GetTrackingMethod_ReturnsFase_For_UnTrackedMethod,The following statement contains a magic number: var module = new Module             {                 TrackedMethods =                     new[]                     {                         new TrackedMethod {MetadataToken = 1234' FullName = "MethodName"' UniqueId = 5678}                     }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,GetTrackingMethod_ReturnsFase_For_UnTrackedMethod,The following statement contains a magic number: var result = Instance.GetTrackingMethod("ModulePath"' "AssemblyName"' 2222' out var trackedId);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,HideSkipped_With_File_Removes_EmptyClasses,The following statement contains a magic number: module.Classes[2].Methods[0].MarkAsSkipped(SkippedMethod.File);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,HideSkipped_With_File_Removes_EmptyClasses,The following statement contains a magic number: Assert.AreEqual(2' Instance.CoverageSession.Modules[0].Classes.Length);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,HideSkipped_With_File_Removes_UnreferencedFiles,The following statement contains a magic number: var method = new Method {FullName = "SkippedMethod"' FileRef = new FileRef {UniqueId = 2}};
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,HideSkipped_With_File_Removes_UnreferencedFiles,The following statement contains a magic number: Instance.PersistModule(new Module             {                 ModulePath = "Keep"'                 Files = new[] {new File {UniqueId = 1' FullPath = "KeepFile"}' new File {UniqueId = 2}}'                 Classes = new[]                 {                     new Class                     {                         FullName = "KeepClass"'                         Methods =                             new[]                             {                                 method'                                 new Method {FullName = "KeepMethod"' FileRef = new FileRef {UniqueId = 1}}                             }                     }                 }             });
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,HideSkipped_With_File_Removes_UnreferencedFiles,The following statement contains a magic number: Assert.AreEqual(2' Instance.CoverageSession.Modules[0].Files.Length);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Instance.CoverageSession.Modules = new[]             {                 new Module                 {                     Classes =                         new[]                         {                             new Class                             {                                 Methods =                                     new[]                                     {                                         new Method                                         {                                             SequencePoints = new[] {new SequencePoint {VisitCount = 1}}'                                             CyclomaticComplexity = 4'                                             Visited = true'                                             FileRef = new FileRef()                                         }                                     }                             }'                             new Class                             {                                 Methods =                                     new[]                                     {                                         new Method                                         {                                             SequencePoints =                                                 new[]                                                 {new SequencePoint {VisitCount = 1}' new SequencePoint {VisitCount = 0}}'                                             CyclomaticComplexity = 17'                                             Visited = true'                                             FileRef = new FileRef()                                         }'                                         new Method                                         {                                             SequencePoints = new[] {new SequencePoint {VisitCount = 0}}'                                             CyclomaticComplexity = 6'                                             Visited = true'                                             FileRef = new FileRef()                                         }                                     }                             }                         }                 }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Instance.CoverageSession.Modules = new[]             {                 new Module                 {                     Classes =                         new[]                         {                             new Class                             {                                 Methods =                                     new[]                                     {                                         new Method                                         {                                             SequencePoints = new[] {new SequencePoint {VisitCount = 1}}'                                             CyclomaticComplexity = 4'                                             Visited = true'                                             FileRef = new FileRef()                                         }                                     }                             }'                             new Class                             {                                 Methods =                                     new[]                                     {                                         new Method                                         {                                             SequencePoints =                                                 new[]                                                 {new SequencePoint {VisitCount = 1}' new SequencePoint {VisitCount = 0}}'                                             CyclomaticComplexity = 17'                                             Visited = true'                                             FileRef = new FileRef()                                         }'                                         new Method                                         {                                             SequencePoints = new[] {new SequencePoint {VisitCount = 0}}'                                             CyclomaticComplexity = 6'                                             Visited = true'                                             FileRef = new FileRef()                                         }                                     }                             }                         }                 }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Instance.CoverageSession.Modules = new[]             {                 new Module                 {                     Classes =                         new[]                         {                             new Class                             {                                 Methods =                                     new[]                                     {                                         new Method                                         {                                             SequencePoints = new[] {new SequencePoint {VisitCount = 1}}'                                             CyclomaticComplexity = 4'                                             Visited = true'                                             FileRef = new FileRef()                                         }                                     }                             }'                             new Class                             {                                 Methods =                                     new[]                                     {                                         new Method                                         {                                             SequencePoints =                                                 new[]                                                 {new SequencePoint {VisitCount = 1}' new SequencePoint {VisitCount = 0}}'                                             CyclomaticComplexity = 17'                                             Visited = true'                                             FileRef = new FileRef()                                         }'                                         new Method                                         {                                             SequencePoints = new[] {new SequencePoint {VisitCount = 0}}'                                             CyclomaticComplexity = 6'                                             Visited = true'                                             FileRef = new FileRef()                                         }                                     }                             }                         }                 }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(4' Instance.CoverageSession.Modules[0].Summary.NumSequencePoints);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(2' Instance.CoverageSession.Modules[0].Summary.VisitedSequencePoints);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(50' Instance.CoverageSession.Modules[0].Summary.SequenceCoverage);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(3' Instance.CoverageSession.Modules[0].Summary.NumBranchPoints);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(2' Instance.CoverageSession.Modules[0].Summary.VisitedBranchPoints);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(66.67m' Instance.CoverageSession.Modules[0].Summary.BranchCoverage);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(4' Instance.CoverageSession.Modules[0].Classes[0].Summary.MaxCyclomaticComplexity);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(4' Instance.CoverageSession.Modules[0].Classes[0].Summary.MinCyclomaticComplexity);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(17' Instance.CoverageSession.Modules[0].Classes[1].Summary.MaxCyclomaticComplexity);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(6' Instance.CoverageSession.Modules[0].Classes[1].Summary.MinCyclomaticComplexity);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(42m' Instance.CoverageSession.Modules[0].Classes[1].Summary.MinCrapScore);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(53.12m' Instance.CoverageSession.Modules[0].Classes[1].Summary.MaxCrapScore);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(17' Instance.CoverageSession.Modules[0].Summary.MaxCyclomaticComplexity);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(4' Instance.CoverageSession.Modules[0].Summary.MinCyclomaticComplexity);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(4m' Instance.CoverageSession.Modules[0].Summary.MinCrapScore);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(53.12m' Instance.CoverageSession.Modules[0].Summary.MaxCrapScore);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(2' Instance.CoverageSession.Modules[0].Classes[1].Summary.NumMethods);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(2' Instance.CoverageSession.Modules[0].Classes[1].Summary.VisitedMethods);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(3' Instance.CoverageSession.Modules[0].Summary.NumMethods);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(3' Instance.CoverageSession.Modules[0].Summary.VisitedMethods);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(2' Instance.CoverageSession.Modules[0].Summary.NumClasses);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Module_Summary_Aggregates_Classes,The following statement contains a magic number: Assert.AreEqual(2' Instance.CoverageSession.Modules[0].Summary.VisitedClasses);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,SaveVisitPoints_Aggregates_Visits,The following statement contains a magic number: Assert.AreEqual(3' InstrumentationPoint.GetVisitCount(pt2.UniqueSequencePoint));
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,SaveVisitPoints_Aggregates_Visits_ForTrackedMethods,The following statement contains a magic number: var points = new[]             {                 1 | (uint) MSG_IdType.IT_MethodEnter' pt1.UniqueSequencePoint' pt2.UniqueSequencePoint'                 1 | (uint) MSG_IdType.IT_MethodLeave'                 2 | (uint) MSG_IdType.IT_MethodEnter' pt2.UniqueSequencePoint' pt2.UniqueSequencePoint'                 2 | (uint) MSG_IdType.IT_MethodLeave             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,SaveVisitPoints_Aggregates_Visits_ForTrackedMethods,The following statement contains a magic number: var points = new[]             {                 1 | (uint) MSG_IdType.IT_MethodEnter' pt1.UniqueSequencePoint' pt2.UniqueSequencePoint'                 1 | (uint) MSG_IdType.IT_MethodLeave'                 2 | (uint) MSG_IdType.IT_MethodEnter' pt2.UniqueSequencePoint' pt2.UniqueSequencePoint'                 2 | (uint) MSG_IdType.IT_MethodLeave             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,SaveVisitPoints_Aggregates_Visits_ForTrackedMethods,The following statement contains a magic number: Assert.AreEqual(3' InstrumentationPoint.GetVisitCount(pt2.UniqueSequencePoint));
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,SaveVisitPoints_Aggregates_Visits_ForTrackedMethods,The following statement contains a magic number: Assert.AreEqual(2' pt2.TrackedMethodRefs.Length);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,SaveVisitPoints_Aggregates_Visits_ForTrackedMethods,The following statement contains a magic number: Assert.AreEqual(2' pt2.TrackedMethodRefs[1].VisitCount);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,SaveVisitPoints_Warns_WhenPointID_IsOutOfRange_High,The following statement contains a magic number: data.AddRange(BitConverter.GetBytes((UInt32) 1000000));
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Instance.CoverageSession.Modules = new[]             {                 new Module                 {                     Classes =                         new[]                         {                             new Class                             {                                 Methods =                                     new[]                                     {                                         new Method                                         {                                             SequencePoints = new[] {new SequencePoint {VisitCount = 1}}'                                             CyclomaticComplexity = 7                                         }                                     }                             }                         }                 }'                 new Module                 {                     Classes =                         new[]                         {                             new Class                             {                                 Methods =                                     new[]                                     {                                         new Method                                         {                                             SequencePoints =                                                 new[]                                                 {new SequencePoint {VisitCount = 1}' new SequencePoint {VisitCount = 0}}'                                             CyclomaticComplexity = 3                                         }'                                         new Method                                         {                                             SequencePoints = new[] {new SequencePoint {VisitCount = 0}}'                                             CyclomaticComplexity = 6                                         }                                     }                             }                         }                 }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Instance.CoverageSession.Modules = new[]             {                 new Module                 {                     Classes =                         new[]                         {                             new Class                             {                                 Methods =                                     new[]                                     {                                         new Method                                         {                                             SequencePoints = new[] {new SequencePoint {VisitCount = 1}}'                                             CyclomaticComplexity = 7                                         }                                     }                             }                         }                 }'                 new Module                 {                     Classes =                         new[]                         {                             new Class                             {                                 Methods =                                     new[]                                     {                                         new Method                                         {                                             SequencePoints =                                                 new[]                                                 {new SequencePoint {VisitCount = 1}' new SequencePoint {VisitCount = 0}}'                                             CyclomaticComplexity = 3                                         }'                                         new Method                                         {                                             SequencePoints = new[] {new SequencePoint {VisitCount = 0}}'                                             CyclomaticComplexity = 6                                         }                                     }                             }                         }                 }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Instance.CoverageSession.Modules = new[]             {                 new Module                 {                     Classes =                         new[]                         {                             new Class                             {                                 Methods =                                     new[]                                     {                                         new Method                                         {                                             SequencePoints = new[] {new SequencePoint {VisitCount = 1}}'                                             CyclomaticComplexity = 7                                         }                                     }                             }                         }                 }'                 new Module                 {                     Classes =                         new[]                         {                             new Class                             {                                 Methods =                                     new[]                                     {                                         new Method                                         {                                             SequencePoints =                                                 new[]                                                 {new SequencePoint {VisitCount = 1}' new SequencePoint {VisitCount = 0}}'                                             CyclomaticComplexity = 3                                         }'                                         new Method                                         {                                             SequencePoints = new[] {new SequencePoint {VisitCount = 0}}'                                             CyclomaticComplexity = 6                                         }                                     }                             }                         }                 }             };
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(4' Instance.CoverageSession.Summary.NumSequencePoints);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(2' Instance.CoverageSession.Summary.VisitedSequencePoints);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(50' Instance.CoverageSession.Summary.SequenceCoverage);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(3' Instance.CoverageSession.Summary.NumBranchPoints);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(2' Instance.CoverageSession.Summary.VisitedBranchPoints);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(66.67m' Instance.CoverageSession.Summary.BranchCoverage);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(7' Instance.CoverageSession.Modules[0].Summary.MaxCyclomaticComplexity);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(7' Instance.CoverageSession.Modules[0].Summary.MinCyclomaticComplexity);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(7m' Instance.CoverageSession.Modules[0].Summary.MinCrapScore);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(7m' Instance.CoverageSession.Modules[0].Summary.MaxCrapScore);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(6' Instance.CoverageSession.Modules[1].Summary.MaxCyclomaticComplexity);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(3' Instance.CoverageSession.Modules[1].Summary.MinCyclomaticComplexity);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(4.12m' Instance.CoverageSession.Modules[1].Summary.MinCrapScore);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(42m' Instance.CoverageSession.Modules[1].Summary.MaxCrapScore);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(7' Instance.CoverageSession.Summary.MaxCyclomaticComplexity);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(3' Instance.CoverageSession.Summary.MinCyclomaticComplexity);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(4.12m' Instance.CoverageSession.Summary.MinCrapScore);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Session_Summary_Aggregates_Modules,The following statement contains a magic number: Assert.AreEqual(42m' Instance.CoverageSession.Summary.MaxCrapScore);
Magic Number,OpenCover.Test.Framework.Persistance,BasePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\BasePersistenceTests.cs,Method_NPath_IsCalculated,The following statement contains a magic number: Assert.AreEqual(2' methodSingleBranch.NPathComplexity);
Magic Number,OpenCover.Test.Framework.Persistance,FilePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\FilePersistenceTests.cs,CanLoadExistingFileWhenInitialising,The following statement contains a magic number: var point = new SequencePoint()                 // BranchPoints within SequencePoint shorther than 3 characters will be removed                 {StartLine = 1' EndLine = 1' StartColumn = 1' EndColumn = 4};
Magic Number,OpenCover.Test.Framework.Persistance,FilePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\FilePersistenceTests.cs,CanLoadExistingFileWhenInitialising,The following statement contains a magic number: var branchPoint2 = new BranchPoint { Path = 1' OffsetPoints = new List<int>{1'2}};
Magic Number,OpenCover.Test.Framework.Persistance,FilePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\FilePersistenceTests.cs,CanLoadExistingFileWhenInitialising,The following statement contains a magic number: persistence.PersistModule(new Module             {                 Summary = new Summary {NumSequencePoints = 1}'                 Files = new[] {file}'                 ModuleHash = moduleHash'                 Classes = new[]                 {                     new Class                     {                         Summary = new Summary {NumSequencePoints = 1}'                         Files = new[] {file}'                         Methods = new[]                         {                             new Method                             {                                 FileRef = filref'                                 MetadataToken = 1234'                                 Summary = new Summary {NumSequencePoints = 1}'                                 MethodPoint = point'                                 SequencePoints = new[] {point}'                                 BranchPoints = new[] {branchPoint' branchPoint2}                             }                         }                     }                 }             });
Magic Number,OpenCover.Test.Framework.Persistance,FilePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\FilePersistenceTests.cs,CanLoadExistingFileWhenInitialising,The following statement contains a magic number: Assert.AreEqual(2' br2.OffsetPoints.Count);
Magic Number,OpenCover.Test.Framework.Persistance,FilePersistenceTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Persistance\FilePersistenceTests.cs,CanLoadExistingFileWhenInitialising,The following statement contains a magic number: Assert.AreEqual(2' br2.OffsetPoints[1]);
Magic Number,OpenCover.Test.Framework.Service,ProfilerCommunicationTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Service\ProfilerCommunicationTests.cs,TrackMethod_True_WhenMethodIsTracked,The following statement contains a magic number: uint trackid = 123;
Magic Number,OpenCover.Test.Framework.Strategy,TrackedMethodStrategyManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Strategy\TrackedMethodStrategyManagerTests.cs,GetTrackedMethods_Assigns_UniqueIds_To_TrackedMethods,The following statement contains a magic number: Assert.AreEqual(2' methods[1].UniqueId);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_OneBranch,The following statement contains a magic number: Assert.AreEqual(2' points.Length);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_OneBranch,The following statement contains a magic number: Assert.AreEqual(19' points[0].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_OneBranch,The following statement contains a magic number: Assert.AreEqual(19' points[1].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_Using_Where_GeneratedBranchesIgnored,The following statement contains a magic number: Assert.AreEqual(2' points.Length);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_TwoBranch,The following statement contains a magic number: Assert.AreEqual(4' points.Length);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_TwoBranch,The following statement contains a magic number: Assert.AreEqual(points[2].Offset' points[3].Offset);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_TwoBranch,The following statement contains a magic number: Assert.AreEqual(points[2].Offset' points[3].Offset);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_TwoBranch,The following statement contains a magic number: Assert.AreEqual(25' points[0].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_TwoBranch,The following statement contains a magic number: Assert.AreEqual(26' points[2].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_TwoBranch,The following statement contains a magic number: Assert.AreEqual(26' points[2].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_CompleteIf,The following statement contains a magic number: Assert.AreEqual(2' points.Length);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_CompleteIf,The following statement contains a magic number: Assert.AreEqual(32' points[0].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_CompleteIf,The following statement contains a magic number: Assert.AreEqual(32' points[1].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_Switch,The following statement contains a magic number: Assert.AreEqual(4' points.Length);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_Switch,The following statement contains a magic number: Assert.AreEqual(points[0].Offset' points[2].Offset);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_Switch,The following statement contains a magic number: Assert.AreEqual(3' points[3].Path);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_Switch,The following statement contains a magic number: Assert.AreEqual(3' points[3].Path);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_Switch,The following statement contains a magic number: Assert.AreEqual(44' points[0].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_Switch,The following statement contains a magic number: Assert.AreEqual(44' points[1].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_Switch,The following statement contains a magic number: Assert.AreEqual(44' points[2].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_Switch,The following statement contains a magic number: Assert.AreEqual(44' points[2].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_Switch,The following statement contains a magic number: Assert.AreEqual(44' points[3].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_Switch,The following statement contains a magic number: Assert.AreEqual(44' points[3].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithDefault,The following statement contains a magic number: Assert.AreEqual(4' points.Length);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithDefault,The following statement contains a magic number: Assert.AreEqual(points[0].Offset' points[2].Offset);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithDefault,The following statement contains a magic number: Assert.AreEqual(3' points[3].Path);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithDefault,The following statement contains a magic number: Assert.AreEqual(3' points[3].Path);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithDefault,The following statement contains a magic number: Assert.AreEqual(58' points[0].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithDefault,The following statement contains a magic number: Assert.AreEqual(58' points[1].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithDefault,The following statement contains a magic number: Assert.AreEqual(58' points[2].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithDefault,The following statement contains a magic number: Assert.AreEqual(58' points[2].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithDefault,The following statement contains a magic number: Assert.AreEqual(58' points[3].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithDefault,The following statement contains a magic number: Assert.AreEqual(58' points[3].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithBreaks,The following statement contains a magic number: Assert.AreEqual(4' points.Length);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithBreaks,The following statement contains a magic number: Assert.AreEqual(points[0].Offset' points[2].Offset);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithBreaks,The following statement contains a magic number: Assert.AreEqual(3' points[3].Path);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithBreaks,The following statement contains a magic number: Assert.AreEqual(3' points[3].Path);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithBreaks,The following statement contains a magic number: Assert.AreEqual(74' points[0].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithBreaks,The following statement contains a magic number: Assert.AreEqual(74' points[1].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithBreaks,The following statement contains a magic number: Assert.AreEqual(74' points[2].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithBreaks,The following statement contains a magic number: Assert.AreEqual(74' points[2].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithBreaks,The following statement contains a magic number: Assert.AreEqual(74' points[3].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithBreaks,The following statement contains a magic number: Assert.AreEqual(74' points[3].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithMultipleCases,The following statement contains a magic number: Assert.AreEqual(4' points.Length);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithMultipleCases,The following statement contains a magic number: Assert.AreEqual(points[0].Offset' points[2].Offset);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithMultipleCases,The following statement contains a magic number: Assert.AreEqual(points[0].Offset' points[3].Offset);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithMultipleCases,The following statement contains a magic number: Assert.AreEqual(3' points[3].Path);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithMultipleCases,The following statement contains a magic number: Assert.AreEqual(3' points[3].Path);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithMultipleCases,The following statement contains a magic number: Assert.AreEqual(92' points[0].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithMultipleCases,The following statement contains a magic number: Assert.AreEqual(92' points[1].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithMultipleCases,The following statement contains a magic number: Assert.AreEqual(92' points[2].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithMultipleCases,The following statement contains a magic number: Assert.AreEqual(92' points[2].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithMultipleCases,The following statement contains a magic number: Assert.AreEqual(92' points[3].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetBranchPointsForMethodToken_SwitchWithMultipleCases,The following statement contains a magic number: Assert.AreEqual(92' points[3].StartLine);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetComplexityForMethodToken_TwoBranch,The following statement contains a magic number: Assert.AreEqual(3' complexity);
Magic Number,OpenCover.Test.Framework.Symbols,CecilSymbolManagerTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Symbols\CecilSymbolManagerTests.cs,GetSequencePointsFor_OverridePropertyGetter,The following statement contains a magic number: Assert.AreEqual(3' points.Length);
Magic Number,OpenCover.Test.Framework.Utility,PerfCountersTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\PerfCountersTests.cs,CanSetAndReset_QueueCounter,The following statement contains a magic number: _counters.CurrentMemoryQueueSize = 10;
Magic Number,OpenCover.Test.Framework.Utility,PerfCountersTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\PerfCountersTests.cs,CanSetAndReset_QueueCounter,The following statement contains a magic number: Assert.AreEqual(10' counter.RawValue);
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithEmptyString,The following statement contains a magic number: var sp = new SequencePoint { StartLine = 1' StartColumn = 1' EndLine = 1' EndColumn = 6};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithEmptyString,The following statement contains a magic number: sp = new SequencePoint { StartLine = -1' StartColumn = -1' EndLine = -2' EndColumn = 6};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithEmptyString,The following statement contains a magic number: sp = new SequencePoint { StartLine = -1' StartColumn = -1' EndLine = -2' EndColumn = 6};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithSingleLine,The following statement contains a magic number: var sp = new SequencePoint { StartLine = 1' StartColumn = 1' EndLine = 1' EndColumn = 7};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithSingleLine,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = -1' EndLine = 1' EndColumn = 7};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithSingleLine,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 19' EndLine = 1' EndColumn = 20};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithSingleLine,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 19' EndLine = 1' EndColumn = 20};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithSingleLine,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 1' EndLine = 1' EndColumn = 20};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLines,The following statement contains a magic number: Assert.True (source.LinesCount == 2);
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLines,The following statement contains a magic number: result = source.GetLine(2);
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLines,The following statement contains a magic number: var sp = new SequencePoint { StartLine = 2' StartColumn = 9' EndLine = 2' EndColumn = 13};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLines,The following statement contains a magic number: var sp = new SequencePoint { StartLine = 2' StartColumn = 9' EndLine = 2' EndColumn = 13};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLines,The following statement contains a magic number: var sp = new SequencePoint { StartLine = 2' StartColumn = 9' EndLine = 2' EndColumn = 13};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLines,The following statement contains a magic number: var sp = new SequencePoint { StartLine = 2' StartColumn = 9' EndLine = 2' EndColumn = 13};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 8' EndLine = 2' EndColumn = 13};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 8' EndLine = 2' EndColumn = 13};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 8' EndLine = 2' EndColumn = 13};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = -8' EndLine = 2' EndColumn = 30};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = -8' EndLine = 2' EndColumn = 30};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = -8' EndLine = 2' EndColumn = 30};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 28' EndLine = 2' EndColumn = 30};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 28' EndLine = 2' EndColumn = 30};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 28' EndLine = 2' EndColumn = 30};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 28' EndLine = 2' EndColumn = 0};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 28' EndLine = 2' EndColumn = 0};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLinesNoCrLfAtEof,The following statement contains a magic number: Assert.True (source.LinesCount == 2);
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLinesNoCrLfAtEof,The following statement contains a magic number: result = source.GetLine(2);
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLinesNoCrLfAtEof,The following statement contains a magic number: var sp = new SequencePoint { StartLine = 1' StartColumn = 8' EndLine = 1' EndColumn = 12};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLinesNoCrLfAtEof,The following statement contains a magic number: var sp = new SequencePoint { StartLine = 1' StartColumn = 8' EndLine = 1' EndColumn = 12};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLinesNoCrLfAtEof,The following statement contains a magic number: sp = new SequencePoint { StartLine = 2' StartColumn = 9' EndLine = 2' EndColumn = 13};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLinesNoCrLfAtEof,The following statement contains a magic number: sp = new SequencePoint { StartLine = 2' StartColumn = 9' EndLine = 2' EndColumn = 13};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLinesNoCrLfAtEof,The following statement contains a magic number: sp = new SequencePoint { StartLine = 2' StartColumn = 9' EndLine = 2' EndColumn = 13};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithTwoLinesNoCrLfAtEof,The following statement contains a magic number: sp = new SequencePoint { StartLine = 2' StartColumn = 9' EndLine = 2' EndColumn = 13};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: Assert.True (source.LinesCount == 5);
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: result = source.GetLine(2);
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: result = source.GetLine(3);
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: result = source.GetLine(4);
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: result = source.GetLine(5);
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: result = source.GetLine(9);
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: var sp = new SequencePoint { StartLine = 3' StartColumn = 8' EndLine = 3' EndColumn = 12};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: var sp = new SequencePoint { StartLine = 3' StartColumn = 8' EndLine = 3' EndColumn = 12};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: var sp = new SequencePoint { StartLine = 3' StartColumn = 8' EndLine = 3' EndColumn = 12};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: var sp = new SequencePoint { StartLine = 3' StartColumn = 8' EndLine = 3' EndColumn = 12};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 8' EndLine = 2' EndColumn = 13};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 8' EndLine = 2' EndColumn = 13};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 8' EndLine = 2' EndColumn = 13};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 8' EndLine = 2' EndColumn = 2};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 8' EndLine = 2' EndColumn = 2};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 8' EndLine = 2' EndColumn = 2};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 8' EndLine = 3' EndColumn = 12};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 8' EndLine = 3' EndColumn = 12};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,ConstructWithFiveLines,The following statement contains a magic number: sp = new SequencePoint { StartLine = 1' StartColumn = 8' EndLine = 3' EndColumn = 12};
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,CountLinesWithLineFeed,The following statement contains a magic number: Assert.True (source.LinesCount == 7);
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,CountLinesWithCrLf,The following statement contains a magic number: Assert.True (source.LinesCount == 4);
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,CountLinesWithMixedLineEnd,The following statement contains a magic number: Assert.True (source.LinesCount == 12);
Magic Number,OpenCover.Test.Framework.Utility,CodeCoverageStringTextSourceTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\CodeCoverageStringTextSourceTest.cs,GetSource,The following statement contains a magic number: System.Threading.Thread.Sleep(100);
Magic Number,OpenCover.Test.Framework.Utility,SequencePointComparerTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\SequencePointComparerTest.cs,UsageThatCoversGetHashCode,The following statement contains a magic number: var point3 = new SequencePoint {FileId = 2' StartLine = 1' StartColumn = 1' EndLine = 1' EndColumn = 1};
Magic Number,OpenCover.Test.Framework.Utility,SourceRepositoryTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\SourceRepositoryTest.cs,CreateGetKeysValuesCopyEnumerate,The following statement contains a magic number: const uint fileId2 = 2;
Magic Number,OpenCover.Test.Framework.Utility,SourceRepositoryTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\SourceRepositoryTest.cs,CreateGetKeysValuesCopyEnumerate,The following statement contains a magic number: Assert.True (sRepo.Count == 2);
Magic Number,OpenCover.Test.Framework.Utility,SourceRepositoryTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\SourceRepositoryTest.cs,CreateGetKeysValuesCopyEnumerate,The following statement contains a magic number: var array = new KeyValuePair<uint' CodeCoverageStringTextSource>[2];
Magic Number,OpenCover.Test.Framework.Utility,SourceRepositoryTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\SourceRepositoryTest.cs,CreateGetKeysValuesCopyEnumerate,The following statement contains a magic number: Assert.True (count == 2);
Magic Number,OpenCover.Test.Framework.Utility,SourceRepositoryTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\SourceRepositoryTest.cs,CreateGetKeysValuesCopyEnumerate,The following statement contains a magic number: Assert.True (count == 2);
Magic Number,OpenCover.Test.Framework.Utility,SourceRepositoryTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\SourceRepositoryTest.cs,CreateGetSourceAndSequencePoints,The following statement contains a magic number: var spLeft = new SequencePoint() {                 FileId = 1'                 StartLine = 1'                 EndLine = 1'                 StartColumn = 5'                 EndColumn = 6             };
Magic Number,OpenCover.Test.Framework.Utility,SourceRepositoryTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\SourceRepositoryTest.cs,CreateGetSourceAndSequencePoints,The following statement contains a magic number: var spLeft = new SequencePoint() {                 FileId = 1'                 StartLine = 1'                 EndLine = 1'                 StartColumn = 5'                 EndColumn = 6             };
Magic Number,OpenCover.Test.Framework.Utility,SourceRepositoryTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\SourceRepositoryTest.cs,CreateGetSourceAndSequencePoints,The following statement contains a magic number: var spRight = new SequencePoint() {                 FileId = 1'                 StartLine = 1'                 EndLine = 1'                 StartColumn = 11'                 EndColumn = 12             };
Magic Number,OpenCover.Test.Framework.Utility,SourceRepositoryTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\SourceRepositoryTest.cs,CreateGetSourceAndSequencePoints,The following statement contains a magic number: var spRight = new SequencePoint() {                 FileId = 1'                 StartLine = 1'                 EndLine = 1'                 StartColumn = 11'                 EndColumn = 12             };
Magic Number,OpenCover.Test.Framework.Utility,SourceRepositoryTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\SourceRepositoryTest.cs,CreateGetSourceAndSequencePoints,The following statement contains a magic number: var spInvalid = new SequencePoint() {                 FileId = 2'                 StartLine = 1'                 EndLine = 1'                 StartColumn = 11'                 EndColumn = 12             };
Magic Number,OpenCover.Test.Framework.Utility,SourceRepositoryTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\SourceRepositoryTest.cs,CreateGetSourceAndSequencePoints,The following statement contains a magic number: var spInvalid = new SequencePoint() {                 FileId = 2'                 StartLine = 1'                 EndLine = 1'                 StartColumn = 11'                 EndColumn = 12             };
Magic Number,OpenCover.Test.Framework.Utility,SourceRepositoryTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\SourceRepositoryTest.cs,CreateGetSourceAndSequencePoints,The following statement contains a magic number: var spInvalid = new SequencePoint() {                 FileId = 2'                 StartLine = 1'                 EndLine = 1'                 StartColumn = 11'                 EndColumn = 12             };
Magic Number,OpenCover.Test.Framework.Utility,SourceRepositoryTest,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Framework\Utility\SourceRepositoryTest.cs,CreateGetSourceAndSequencePoints,The following statement contains a magic number: Assert.True (sRepo.GetCodeCoverageStringTextSource(2) == null);
Magic Number,OpenCover.Test.Integration,ThreadingTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Integration\ThreadingTests.cs,RunManyThreads,The following statement contains a magic number: ++n % 200 == 0
Magic Number,OpenCover.Test.Integration,ThreadingTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Integration\ThreadingTests.cs,RunManyThreads,The following statement contains a magic number: n < 2000
Magic Number,OpenCover.Test.Integration,ThreadingTests,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Integration\ThreadingTests.cs,DoWork,The following statement contains a magic number: resetEvent.Do(re =>             {                 var rnd = new Random();                 double res = 0;                 for (var i = 0; i < 10000; i++)                     res += rnd.NextDouble();                 re.Set();             });
Magic Number,OpenCover.Test.Samples,DeclaredConstructorClass,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\Samples.cs,HasSwitch,The following statement contains a magic number: switch (input)              {                  case 0:                      return true;                  case 1:                      return false;                  case 2:                      return true;              }
Magic Number,OpenCover.Test.Samples,DeclaredConstructorClass,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\Samples.cs,HasSwitchWithDefault,The following statement contains a magic number: switch (input)              {                  case 1:                      return true;                  case 2:                      return false;                  case 3:                      return true;                  default:                      return false;              }
Magic Number,OpenCover.Test.Samples,DeclaredConstructorClass,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\Samples.cs,HasSwitchWithDefault,The following statement contains a magic number: switch (input)              {                  case 1:                      return true;                  case 2:                      return false;                  case 3:                      return true;                  default:                      return false;              }
Magic Number,OpenCover.Test.Samples,DeclaredConstructorClass,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\Samples.cs,HasSwitchWithBreaks,The following statement contains a magic number: switch (input)              {                  case 1:                      ret = true;                      break;                  case 2:                      ret = false;                      break;                  case 3:                      ret = true;                      break;              }
Magic Number,OpenCover.Test.Samples,DeclaredConstructorClass,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\Samples.cs,HasSwitchWithBreaks,The following statement contains a magic number: switch (input)              {                  case 1:                      ret = true;                      break;                  case 2:                      ret = false;                      break;                  case 3:                      ret = true;                      break;              }
Magic Number,OpenCover.Test.Samples,DeclaredConstructorClass,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\Samples.cs,HasSwitchWithMultipleCases,The following statement contains a magic number: switch (input)              {                  case 1:                      return -1;                  case 2:                      return 2001;                  case 3:                      return -5001;                  default:                      return 7;              }
Magic Number,OpenCover.Test.Samples,DeclaredConstructorClass,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\Samples.cs,HasSwitchWithMultipleCases,The following statement contains a magic number: switch (input)              {                  case 1:                      return -1;                  case 2:                      return 2001;                  case 3:                      return -5001;                  default:                      return 7;              }
Magic Number,OpenCover.Test.Samples,DeclaredConstructorClass,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\Samples.cs,HasSwitchWithMultipleCases,The following statement contains a magic number: switch (input)              {                  case 1:                      return -1;                  case 2:                      return 2001;                  case 3:                      return -5001;                  default:                      return 7;              }
Magic Number,OpenCover.Test.Samples,DeclaredConstructorClass,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\Samples.cs,HasSwitchWithMultipleCases,The following statement contains a magic number: switch (input)              {                  case 1:                      return -1;                  case 2:                      return 2001;                  case 3:                      return -5001;                  default:                      return 7;              }
Magic Number,OpenCover.Test.Samples,DeclaredConstructorClass,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\Samples.cs,HasSwitchWithMultipleCases,The following statement contains a magic number: switch (input)              {                  case 1:                      return -1;                  case 2:                      return 2001;                  case 3:                      return -5001;                  default:                      return 7;              }
Magic Number,OpenCover.Test.Samples,DeclaredConstructorClass,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\Samples.cs,HasSimpleAsyncAwait_Issue881,The following statement contains a magic number: await Task.Delay(100);
Magic Number,OpenCover.Test.Samples,DeclaredConstructorClass,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\Samples.cs,HasSimpleAsyncAwait_Issue881,The following statement contains a magic number: await Task.Delay(100);
Magic Number,OpenCover.Test.Samples,DeclaredConstructorClass,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\Samples.cs,HasSimpleAsyncAwait_Issue881,The following statement contains a magic number: await Task.Delay(100);
Magic Number,OpenCover.Test.Samples,DeclaredConstructorClass,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\Samples.cs,HasSimpleAsyncAwait_Issue881,The following statement contains a magic number: await Task.Delay(100);
Magic Number,OpenCover.Test.Samples,DeclaredConstructorClass,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\Samples.cs,HasCachedDelegateDueToFunctionWithArgs,The following statement contains a magic number: var func = new Func<int' int>(z => z > 1000 ? 1 : 0);
Magic Number,OpenCover.Test.Samples,SimpleXUnit,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\SimpleXUnit.cs,Test_Data_Is_Even,The following statement contains a magic number: Assert.Equal(0' i % 2);
Missing Default,OpenCover.Test.Samples,DeclaredConstructorClass,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\Samples.cs,HasSwitch,The following switch statement is missing a default case: switch (input)              {                  case 0:                      return true;                  case 1:                      return false;                  case 2:                      return true;              }
Missing Default,OpenCover.Test.Samples,DeclaredConstructorClass,C:\research\architectureSmells\repos\OpenCover_opencover\main\OpenCover.Test\Samples\Samples.cs,HasSwitchWithBreaks,The following switch statement is missing a default case: switch (input)              {                  case 1:                      ret = true;                      break;                  case 2:                      ret = false;                      break;                  case 3:                      ret = true;                      break;              }
