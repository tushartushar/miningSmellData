Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mono.Options,Option,C:\repos\cadenza_cadenza\tools\Options.cs,ParsePrototype,Cyclomatic complexity of the method is 9
Complex Method,Mono.Options,OptionSet,C:\repos\cadenza_cadenza\tools\Options.cs,WriteOptionPrototype,Cyclomatic complexity of the method is 8
Long Parameter List,Mono.Options,OptionSet,C:\repos\cadenza_cadenza\tools\Options.cs,GetOptionParts,The method has 5 parameters. Parameters: argument' flag' name' sep' value
Complex Conditional,Mono.Options,Option,C:\repos\cadenza_cadenza\tools\Options.cs,Option,The conditional expression  "Array.IndexOf (names' "<>") >= 0 &&   					((names.Length == 1 && this.type != OptionValueType.None) ||  					 (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,Mono.Options,OptionSet,C:\repos\cadenza_cadenza\tools\Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n [n.Length-1] == '+' || n [n.Length-1] == '-') &&  					Contains ((rn = n.Substring (0' n.Length-1)))"  is complex.
Magic Number,Mono.Options,OptionSet,C:\repos\cadenza_cadenza\tools\Options.cs,Add,The following statement contains a magic number: Option p = new ActionOption (prototype' description' 2'   					delegate (OptionValueCollection v) {action (v [0]' v [1]);});
Magic Number,Mono.Options,OptionSet,C:\repos\cadenza_cadenza\tools\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: foreach (Option p in this) {  				int written = 0;  				if (!WriteOptionPrototype (o' p' ref written))  					continue;    				if (written < OptionWidth)  					o.Write (new string (' '' OptionWidth - written));  				else {  					o.WriteLine ();  					o.Write (new string (' '' OptionWidth));  				}    				bool indent = false;  				string prefix = new string (' '' OptionWidth+2);  				foreach (string line in GetLines (localizer (GetDescription (p.Description)))) {  					if (indent)   						o.Write (prefix);  					o.WriteLine (line);  					indent = true;  				}  			}
Magic Number,Mono.Options,OptionSet,C:\repos\cadenza_cadenza\tools\Options.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 1;
Magic Number,Mono.Options,OptionSet,C:\repos\cadenza_cadenza\tools\Options.cs,GetLines,The following statement contains a magic number: do {  				end = GetLineEnd (start' length' description);  				char c = description [end-1];  				if (char.IsWhiteSpace (c))  					--end;  				bool writeContinuation = end != description.Length && !IsEolChar (c);  				string line = description.Substring (start' end - start) +  						(writeContinuation ? "-" : "");  				yield return line;  				start = end;  				if (char.IsWhiteSpace (c))  					++start;  				length = 80 - OptionWidth - 2 - 1;  			} while (end < description.Length);
Magic Number,Mono.Options,OptionSet,C:\repos\cadenza_cadenza\tools\Options.cs,GetLines,The following statement contains a magic number: do {  				end = GetLineEnd (start' length' description);  				char c = description [end-1];  				if (char.IsWhiteSpace (c))  					--end;  				bool writeContinuation = end != description.Length && !IsEolChar (c);  				string line = description.Substring (start' end - start) +  						(writeContinuation ? "-" : "");  				yield return line;  				start = end;  				if (char.IsWhiteSpace (c))  					++start;  				length = 80 - OptionWidth - 2 - 1;  			} while (end < description.Length);
Magic Number,Cadenza.Tools,XmlDocs,C:\repos\cadenza_cadenza\tools\XmlDocs.cs,GetIndex,The following statement contains a magic number: switch (index+1) {  				case 1: return "first";  				case 2: return "second";  				case 3: return "third";  				case 4: return "fourth";  			}
Magic Number,Cadenza.Tools,XmlDocs,C:\repos\cadenza_cadenza\tools\XmlDocs.cs,GetIndex,The following statement contains a magic number: switch (index+1) {  				case 1: return "first";  				case 2: return "second";  				case 3: return "third";  				case 4: return "fourth";  			}
Magic Number,Cadenza.Tools,XmlDocs,C:\repos\cadenza_cadenza\tools\XmlDocs.cs,GetIndex,The following statement contains a magic number: switch (index+1) {  				case 1: return "first";  				case 2: return "second";  				case 3: return "third";  				case 4: return "fourth";  			}
Missing Default,Mono.Options,OptionSet,C:\repos\cadenza_cadenza\tools\Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType) {  					case OptionValueType.None:  						c.OptionValues.Add (n);  						c.Option.Invoke (c);  						break;  					case OptionValueType.Optional:  					case OptionValueType.Required:   						ParseValue (v' c);  						break;  				}
Missing Default,Cadenza.Tools,XmlDocs,C:\repos\cadenza_cadenza\tools\XmlDocs.cs,GetIndex,The following switch statement is missing a default case: switch (name) {  				case "1": return "first";  				case "2": return "second";  				case "3": return "third";  				case "4": return "fourth";  				case "Result":  					return "return";  			}
Missing Default,Cadenza.Tools,XmlDocs,C:\repos\cadenza_cadenza\tools\XmlDocs.cs,GetIndex,The following switch statement is missing a default case: switch (index+1) {  				case 1: return "first";  				case 2: return "second";  				case 3: return "third";  				case 4: return "fourth";  			}
