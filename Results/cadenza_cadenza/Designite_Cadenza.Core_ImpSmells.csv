Implementation smell,Namespace,Class,File,Method,Description
Empty Catch Block,Cadenza.Numerics,ExpressionMath<T>,C:\repos\cadenza_cadenza\src\Cadenza.Core\Cadenza.Numerics\ExpressionMath.cs,ExpressionMath,The method has an empty catch block.
Empty Catch Block,Cadenza.Numerics,ExpressionMath<T>,C:\repos\cadenza_cadenza\src\Cadenza.Core\Cadenza.Numerics\ExpressionMath.cs,ExpressionMath,The method has an empty catch block.
Empty Catch Block,Cadenza.Numerics,ExpressionMath<T>,C:\repos\cadenza_cadenza\src\Cadenza.Core\Cadenza.Numerics\ExpressionMath.cs,GetMemberValue,The method has an empty catch block.
Empty Catch Block,Cadenza.Numerics,ExpressionMath<T>,C:\repos\cadenza_cadenza\src\Cadenza.Core\Cadenza.Numerics\ExpressionMath.cs,GetMemberValue,The method has an empty catch block.
Magic Number,Cadenza.Numerics,ExpressionMath<T>,C:\repos\cadenza_cadenza\src\Cadenza.Core\Cadenza.Numerics\ExpressionMath.cs,ExpressionMath,The following statement contains a magic number: if (divide != null) {  				try {  					T zero = FromInt32 (0);  					T one  = FromInt32 (1);  					T two  = FromInt32 (2);    					// (1/2) == 0.5; if 0.5 == 0' then it's an integral type  					if (!EqualityComparer<T>.Default.Equals (zero' divide (one' two)))  						isFractional = true;  				}  				catch {  					// ignore  				}  			}
Missing Default,Cadenza.Threading,LockHandle,C:\repos\cadenza_cadenza\src\Cadenza.Core\Cadenza.Threading\ReaderWriterLockSlimCoda.cs,Dispose,The following switch statement is missing a default case: switch (type)  				{  					case LockType.Read:  						copy.ExitReadLock ();  						break;    					case LockType.UpgradeableRead:  						copy.ExitUpgradeableReadLock ();  						break;    					case LockType.Write:  						copy.ExitWriteLock ();  						break;  				}
