Implementation smell,Namespace,Class,File,Method,Description
Long Statement,XmcdParser,Parser,C:\repos\ayende_XmcdParser\XmcdParser\Parser.cs,Add,The length of the statement  "			var key = new Regex(regex' RegexOptions.Compiled | RegexOptions.IgnoreCase | RegexOptions.IgnorePatternWhitespace|RegexOptions.Multiline); " is 138.
Long Statement,XmcdIndexer,Program,C:\repos\ayende_XmcdParser\XmcdIndexer\Program.cs,Main,The length of the statement  "			_indexWriter = new IndexWriter(FSDirectory.Open(new DirectoryInfo(_indexPath))' new StandardAnalyzer(Lucene.Net.Util.Version.LUCENE_30)' true' IndexWriter.MaxFieldLength.UNLIMITED);			 " is 181.
Magic Number,XmcdParser,Parser,C:\repos\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: Add(@"^\# \s* Track \s+ frame \s+ offsets \s*: \s* \n (^\# \s* (\d+) \s* \n)+"' (disk' collection) =>  			{  				foreach (Capture capture in collection[0].Groups[2].Captures)  				{  					disk.TrackFramesOffsets.Add(int.Parse(capture.Value));  				}  			});
Magic Number,XmcdParser,Parser,C:\repos\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: Add("DTITLE=(.+)"' (disk' collection) =>  			{  				var parts = collection[0].Groups[1].Value.Split(new[] {"/"}' 2' StringSplitOptions.RemoveEmptyEntries);  				if (parts.Length == 2)  				{  					disk.Artist = parts[0].Trim();  					disk.Title = parts[1].Trim();  				}  				else  				{  					disk.Title = parts[0].Trim();  				}  			});
Magic Number,XmcdParser,Parser,C:\repos\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: Add("DTITLE=(.+)"' (disk' collection) =>  			{  				var parts = collection[0].Groups[1].Value.Split(new[] {"/"}' 2' StringSplitOptions.RemoveEmptyEntries);  				if (parts.Length == 2)  				{  					disk.Artist = parts[0].Trim();  					disk.Title = parts[1].Trim();  				}  				else  				{  					disk.Title = parts[0].Trim();  				}  			});
Magic Number,XmcdParser,Parser,C:\repos\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: Add(@"DYEAR=(\d+)"' (disk' collection) =>  			{  				if (collection.Count == 0)  					return;  				var value = collection[0].Groups[1].Value;  				if(value.Length > 4) // there is data like this  				{  					value = value.Substring(value.Length - 4);  				}  				disk.Year = int.Parse(value);  			}  			);
Magic Number,XmcdParser,Parser,C:\repos\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: Add(@"DYEAR=(\d+)"' (disk' collection) =>  			{  				if (collection.Count == 0)  					return;  				var value = collection[0].Groups[1].Value;  				if(value.Length > 4) // there is data like this  				{  					value = value.Substring(value.Length - 4);  				}  				disk.Year = int.Parse(value);  			}  			);
Magic Number,XmcdParser,Parser,C:\repos\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: Add(@"(EXTD\d*)=(.+)"' (disk' collection) =>  			{  				foreach (Match match in collection)  				{  					var key = match.Groups[1].Value;  					string value;  					if (disk.Attributes.TryGetValue(key' out value))  					{  						disk.Attributes[key] = value + match.Groups[2].Value.Trim();  					}  					else  					{  						disk.Attributes[key] = match.Groups[2].Value.Trim();  					}  				}  			});
Magic Number,XmcdParser,Parser,C:\repos\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: Add(@"(EXTD\d*)=(.+)"' (disk' collection) =>  			{  				foreach (Match match in collection)  				{  					var key = match.Groups[1].Value;  					string value;  					if (disk.Attributes.TryGetValue(key' out value))  					{  						disk.Attributes[key] = value + match.Groups[2].Value.Trim();  					}  					else  					{  						disk.Attributes[key] = match.Groups[2].Value.Trim();  					}  				}  			});
Magic Number,XmcdIndexer,Program,C:\repos\ayende_XmcdParser\XmcdIndexer\Program.cs,ParseDisks,The following statement contains a magic number: var buffer = new byte[1024 * 1024];
Magic Number,XmcdIndexer,Program,C:\repos\ayende_XmcdParser\XmcdIndexer\Program.cs,ParseDisks,The following statement contains a magic number: var buffer = new byte[1024 * 1024];
Magic Number,XmcdIndexer,Program,C:\repos\ayende_XmcdParser\XmcdIndexer\Program.cs,ParseDisks,The following statement contains a magic number: using (var bz2 = new BZip2InputStream(File.Open(@"D:\Data\freedb-complete-20120101.tar.bz2"' FileMode.Open)))  			using (var tar = new TarInputStream(bz2))  			{  				TarEntry entry;  				while ((entry = tar.GetNextEntry()) != null)  				{  					if (entry.Size == 0 || entry.Name == "README" || entry.Name == "COPYING")  						continue;  					var readSoFar = 0;  					while (true)  					{  						var read = tar.Read(buffer' readSoFar' ((int)entry.Size) - readSoFar);  						if (read == 0)  							break;    						readSoFar += read;  					}  					// we do it in this fashion to have the stream reader detect the BOM / unicode / other stuff  					// so we can read the values properly  					var fileText = new StreamReader(new MemoryStream(buffer' 0' readSoFar)).ReadToEnd();  					try  					{  						var disk = parser.Parse(fileText);  						addToBatch(disk);  						if (i++ % 1000 == 0)  							Console.Write("\r{0} {1:#'#}  {2}         "' entry.Name' i' sp.Elapsed);    						if (i % 50000 == 0)  							return sp;  					}  					catch (Exception e)  					{  						Console.WriteLine();  						Console.WriteLine(entry.Name);  						Console.WriteLine(e);  						return sp;  					}  				}  			}
Magic Number,XmcdIndexer,Program,C:\repos\ayende_XmcdParser\XmcdIndexer\Program.cs,ParseDisks,The following statement contains a magic number: using (var bz2 = new BZip2InputStream(File.Open(@"D:\Data\freedb-complete-20120101.tar.bz2"' FileMode.Open)))  			using (var tar = new TarInputStream(bz2))  			{  				TarEntry entry;  				while ((entry = tar.GetNextEntry()) != null)  				{  					if (entry.Size == 0 || entry.Name == "README" || entry.Name == "COPYING")  						continue;  					var readSoFar = 0;  					while (true)  					{  						var read = tar.Read(buffer' readSoFar' ((int)entry.Size) - readSoFar);  						if (read == 0)  							break;    						readSoFar += read;  					}  					// we do it in this fashion to have the stream reader detect the BOM / unicode / other stuff  					// so we can read the values properly  					var fileText = new StreamReader(new MemoryStream(buffer' 0' readSoFar)).ReadToEnd();  					try  					{  						var disk = parser.Parse(fileText);  						addToBatch(disk);  						if (i++ % 1000 == 0)  							Console.Write("\r{0} {1:#'#}  {2}         "' entry.Name' i' sp.Elapsed);    						if (i % 50000 == 0)  							return sp;  					}  					catch (Exception e)  					{  						Console.WriteLine();  						Console.WriteLine(entry.Name);  						Console.WriteLine(e);  						return sp;  					}  				}  			}
Magic Number,XmcdIndexer,Program,C:\repos\ayende_XmcdParser\XmcdIndexer\Program.cs,AddDocShortVersion,The following statement contains a magic number: fields[2].SetValue(disk.DiskIds.FirstOrDefault() ?? Guid.NewGuid().ToString());
Magic Number,XmcdIndexer,Program,C:\repos\ayende_XmcdParser\XmcdIndexer\Program.cs,AddDocShortVersion,The following statement contains a magic number: ReusableDoc.Add(fields[2]);
