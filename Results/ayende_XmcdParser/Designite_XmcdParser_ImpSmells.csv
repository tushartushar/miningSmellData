Implementation smell,Namespace,Class,File,Method,Description
Complex Method,XmcdParser,Program,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Program.cs,ParseDisks,Cyclomatic complexity of the method is 9
Long Statement,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Add,The length of the statement  "	var key = new Regex (regex' RegexOptions.Compiled | RegexOptions.IgnoreCase | RegexOptions.IgnorePatternWhitespace | RegexOptions.Multiline); " is 141.
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: Add (@"^\# \s* Track \s+ frame \s+ offsets \s*: \s* \n (^\# \s* (\d+) \s* \n)+"' (disk' collection) => {  	foreach (Capture capture in collection [0].Groups [2].Captures) {  		disk.TrackFramesOffsets.Add (int.Parse (capture.Value));  	}  });  
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: foreach (Capture capture in collection [0].Groups [2].Captures) {  	disk.TrackFramesOffsets.Add (int.Parse (capture.Value));  }  
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: Add ("DTITLE=(.+)"' (disk' collection) => {  	var parts = collection [0].Groups [1].Value.Split (new[] {  		"/"  	}' 2' StringSplitOptions.RemoveEmptyEntries);  	if (parts.Length == 2) {  		disk.Artist = parts [0].Trim ();  		disk.Title = parts [1].Trim ();  	} else {  		disk.Title = parts [0].Trim ();  	}  });  
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: Add ("DTITLE=(.+)"' (disk' collection) => {  	var parts = collection [0].Groups [1].Value.Split (new[] {  		"/"  	}' 2' StringSplitOptions.RemoveEmptyEntries);  	if (parts.Length == 2) {  		disk.Artist = parts [0].Trim ();  		disk.Title = parts [1].Trim ();  	} else {  		disk.Title = parts [0].Trim ();  	}  });  
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: if (parts.Length == 2) {  	disk.Artist = parts [0].Trim ();  	disk.Title = parts [1].Trim ();  } else {  	disk.Title = parts [0].Trim ();  }  
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: Add (@"DYEAR=(\d+)"' (disk' collection) => {  	if (collection.Count == 0)  		return;  	var value = collection [0].Groups [1].Value;  	if (value.Length > 4)// there is data like this  	 {  		value = value.Substring (value.Length - 4);  	}  	disk.Year = int.Parse (value);  });  
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: Add (@"DYEAR=(\d+)"' (disk' collection) => {  	if (collection.Count == 0)  		return;  	var value = collection [0].Groups [1].Value;  	if (value.Length > 4)// there is data like this  	 {  		value = value.Substring (value.Length - 4);  	}  	disk.Year = int.Parse (value);  });  
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: if (value.Length > 4)// there is data like this   {  	value = value.Substring (value.Length - 4);  }  
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: if (value.Length > 4)// there is data like this   {  	value = value.Substring (value.Length - 4);  }  
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: value = value.Substring (value.Length - 4);  
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: Add (@"(EXTD\d*)=(.+)"' (disk' collection) => {  	foreach (Match match in collection) {  		var key = match.Groups [1].Value;  		string value;  		if (disk.Attributes.TryGetValue (key' out value)) {  			disk.Attributes [key] = value + match.Groups [2].Value.Trim ();  		} else {  			disk.Attributes [key] = match.Groups [2].Value.Trim ();  		}  	}  });  
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: Add (@"(EXTD\d*)=(.+)"' (disk' collection) => {  	foreach (Match match in collection) {  		var key = match.Groups [1].Value;  		string value;  		if (disk.Attributes.TryGetValue (key' out value)) {  			disk.Attributes [key] = value + match.Groups [2].Value.Trim ();  		} else {  			disk.Attributes [key] = match.Groups [2].Value.Trim ();  		}  	}  });  
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: foreach (Match match in collection) {  	var key = match.Groups [1].Value;  	string value;  	if (disk.Attributes.TryGetValue (key' out value)) {  		disk.Attributes [key] = value + match.Groups [2].Value.Trim ();  	} else {  		disk.Attributes [key] = match.Groups [2].Value.Trim ();  	}  }  
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: foreach (Match match in collection) {  	var key = match.Groups [1].Value;  	string value;  	if (disk.Attributes.TryGetValue (key' out value)) {  		disk.Attributes [key] = value + match.Groups [2].Value.Trim ();  	} else {  		disk.Attributes [key] = match.Groups [2].Value.Trim ();  	}  }  
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: if (disk.Attributes.TryGetValue (key' out value)) {  	disk.Attributes [key] = value + match.Groups [2].Value.Trim ();  } else {  	disk.Attributes [key] = match.Groups [2].Value.Trim ();  }  
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: if (disk.Attributes.TryGetValue (key' out value)) {  	disk.Attributes [key] = value + match.Groups [2].Value.Trim ();  } else {  	disk.Attributes [key] = match.Groups [2].Value.Trim ();  }  
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: disk.Attributes [key] = value + match.Groups [2].Value.Trim ();  
Magic Number,XmcdParser,Parser,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Parser.cs,Parser,The following statement contains a magic number: disk.Attributes [key] = match.Groups [2].Value.Trim ();  
Magic Number,XmcdParser,Program,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Program.cs,Main,The following statement contains a magic number: using (var store = new DocumentStore {  	Url = "http://localhost:8080"'  	DefaultDatabase = "freedb"'  }.Initialize (true)) {  	var sp = Stopwatch.StartNew ();  	using (var insert = store.BulkInsert ()) {  		insert.Report += Console.WriteLine;  		ParseDisks (insert);  	}  	while (store.DatabaseCommands.GetStatistics ().StaleIndexes.Length != 0)  		Thread.Sleep (500);  	Console.WriteLine ();  	Console.WriteLine ("Done in {0}"' sp.Elapsed);  }  
Magic Number,XmcdParser,Program,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Program.cs,Main,The following statement contains a magic number: while (store.DatabaseCommands.GetStatistics ().StaleIndexes.Length != 0)  	Thread.Sleep (500);  
Magic Number,XmcdParser,Program,F:\newReposMay17\ayende_XmcdParser\XmcdParser\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (500);  
