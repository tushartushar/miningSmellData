Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,NewsBoard.Indexer,WordsDecorator,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\WordsDecorator.cs,GetTopWordsFilter,The method has 7 parameters.
Long Parameter List,NewsBoard.Indexer,WordsDecorator,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\WordsDecorator.cs,GetTopWordsPerNewsLink,The method has 5 parameters.
Long Parameter List,NewsBoard.Indexer,WordsDecorator,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\WordsDecorator.cs,GetTopWordsPerNews,The method has 5 parameters.
Long Statement,NewsBoard.Indexer,Indexer,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\Indexer.cs,UpdateDocField,The length of the statement  "	doc.Add (new Field (Constants.Constants.MANUAL_CATEGORY_FIELD' manualCategoryValue' Field.Store.YES' Field.Index.NOT_ANALYZED' Field.TermVector.YES)); " is 150.
Long Statement,NewsBoard.Indexer,NewsRelationshipDecorator,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\NewsRelationshipDecorator.cs,GetNewsRelated,The length of the statement  "	return scoreDocs.Where (item => item.Doc != docId && item.Score > MINSIMILARITY).ToDictionary (item => reader.Document (item.Doc).GetField (Constants.Constants.LINK_FIELD).StringValue' item => item.Score); " is 205.
Long Statement,NewsBoard.Indexer,WordsDecorator,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\WordsDecorator.cs,GetTopWordsFilter,The length of the statement  "	IOrderedEnumerable<KeyValuePair<string' FrequencyAndDocsCount>> ordered = frequencyDic.OrderByDescending (pair => pair.Value.GetDocFreq ()).OrderByDescending (pair => pair.Value.GetDocCount ()); " is 194.
Long Statement,NewsBoard.Indexer,ManualWordsIndexer,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\ManualWordsIndexer.cs,Index,The length of the statement  "		doc.Add (new Field (Constants.Constants.MANUAL_CATEGORY_FIELD' item.Category' Field.Store.YES' Field.Index.NOT_ANALYZED' Field.TermVector.YES)); " is 144.
Long Statement,NewsBoard.Indexer,ManualWordsIndexer,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\ManualWordsIndexer.cs,Index,The length of the statement  "		doc.Add (new Field (Constants.Constants.ADMINSUBJECTS_FIELD' new StringReader (item.TopSubjectsWords)' Field.TermVector.WITH_POSITIONS)); " is 137.
Long Statement,NewsBoard.Indexer,NewsIndexer,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\NewsIndexer.cs,Index,The length of the statement  "	var category = new Field (Constants.Constants.CATEGORY_FIELD' rssFeed.RssCategory' Field.Store.YES' Field.Index.NOT_ANALYZED' Field.TermVector.YES); " is 148.
Long Statement,NewsBoard.Indexer,NewsIndexer,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\NewsIndexer.cs,Index,The length of the statement  "	var manualCategory = new Field (Constants.Constants.MANUAL_CATEGORY_FIELD' rssFeed.CategoryName' Field.Store.YES' Field.Index.NOT_ANALYZED' Field.TermVector.YES); " is 162.
Long Statement,NewsBoard.Indexer,NewsIndexer,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\NewsIndexer.cs,Index,The length of the statement  "	var title = new Field (Constants.Constants.TITLE_FIELD' titleAux' Field.Store.YES' Field.Index.ANALYZED' Field.TermVector.WITH_POSITIONS); " is 138.
Long Statement,NewsBoard.Indexer,NewsIndexer,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\NewsIndexer.cs,Index,The length of the statement  "	var article = new Field (Constants.Constants.ARTICLE_FIELD' articleAux' Field.Store.YES' Field.Index.ANALYZED' Field.TermVector.WITH_POSITIONS); " is 144.
Long Statement,NewsBoard.Indexer,NewsIndexer,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\NewsIndexer.cs,Index,The length of the statement  "	var contentToSearch = new Field (Constants.Constants.CONTENT_TO_SEARCH_FIELD' titleAux + " " + articleAux' Field.Store.YES' Field.Index.ANALYZED' Field.TermVector.WITH_POSITIONS); " is 179.
Long Statement,NewsBoard.Indexer,SearchDecorator,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\SearchDecorator.cs,Search,The length of the statement  "			fuzzyTermEnum = new FuzzyTermEnum (reader' new Term (Constants.Constants.CONTENT_TO_SEARCH_FIELD' word)' MINSIMILARITY' PREFIXLENGHT); " is 134.
Long Statement,NewsBoard.Indexer,SearchDecorator,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\SearchDecorator.cs,Search,The length of the statement  "		return collector.DocumentIds.Select (documentId => reader.Document (documentId).GetField (Constants.Constants.LINK_FIELD).StringValue); " is 135.
Long Statement,NewsBoard.Indexer.Utils,OntoPtService,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\Utils\Custom Lucene\OntoPtService.cs,GetSynonymsAndHypernyms,The length of the statement  "	Object results = ontoPtGraph.ExecuteQuery (@"PREFIX OntoPT: <http://ontopt.dei.uc.pt/OntoPT.owl#>" + " SELECT DISTINCT ?word " + "WHERE " + "{ ?x OntoPT:formaLexical \"" + currTerm + "\" ; OntoPT:formaLexical ?word " + "}"); " is 224.
Magic Number,NewsBoard.Indexer,NewsRelationshipDecorator,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\NewsRelationshipDecorator.cs,GetNewsRelated,The following statement contains a magic number: mlt.MinTermFreq = 2;  
Magic Number,NewsBoard.Indexer,SearchDecorator,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\SearchDecorator.cs,Search,The following statement contains a magic number: try {  	var query = new MultiPhraseQuery ();  	FuzzyTermEnum fuzzyTermEnum = null;  	FuzzyTermEnum titleFuzzyTermEnum = null;  	Term auxTerm;  	foreach (String word in words) {  		double lengthDiv2 = Math.Ceiling (word.Length / 2.0);  		fuzzyTermEnum = new FuzzyTermEnum (reader' new Term (Constants.Constants.CONTENT_TO_SEARCH_FIELD' word)' MINSIMILARITY' PREFIXLENGHT);  		do {  			auxTerm = fuzzyTermEnum.Term;  			if (auxTerm != null && lengthDiv2 < auxTerm.Text.Length && word.Contains (auxTerm.Text))  				break;  			auxTerm = null;  		}  		while (fuzzyTermEnum.Next ());  		if (auxTerm != null)  			query.Add (auxTerm);  	}  	if (fuzzyTermEnum != null)  		fuzzyTermEnum.Dispose ();  	var collector = new WithoutScoreCollector ();  	searcher.Search (query' collector);  	return collector.DocumentIds.Select (documentId => reader.Document (documentId).GetField (Constants.Constants.LINK_FIELD).StringValue);  }  finally {  	searcher.Dispose ();  }  
Magic Number,NewsBoard.Indexer,SearchDecorator,C:\repos\tiagoalmeidagit_newsboard\NewsBoard.Indexer\SearchDecorator.cs,Search,The following statement contains a magic number: foreach (String word in words) {  	double lengthDiv2 = Math.Ceiling (word.Length / 2.0);  	fuzzyTermEnum = new FuzzyTermEnum (reader' new Term (Constants.Constants.CONTENT_TO_SEARCH_FIELD' word)' MINSIMILARITY' PREFIXLENGHT);  	do {  		auxTerm = fuzzyTermEnum.Term;  		if (auxTerm != null && lengthDiv2 < auxTerm.Text.Length && word.Contains (auxTerm.Text))  			break;  		auxTerm = null;  	}  	while (fuzzyTermEnum.Next ());  	if (auxTerm != null)  		query.Add (auxTerm);  }  
