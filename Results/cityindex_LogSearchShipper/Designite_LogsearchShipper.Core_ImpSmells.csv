Implementation smell,Namespace,Class,File,Method,Description
Complex Method,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,ExtractNXLog,Cyclomatic complexity of the method is 8
Long Parameter List,LogSearchShipper.Core,EDBFileWatchParser,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\EDBFileWatchParser.cs,AddFileWatchElementForLogFile,The method has 7 parameters.
Long Parameter List,LogSearchShipper.Core.NxLog,NativeMethods,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NativeMethods.cs,CreateService,The method has 13 parameters.
Long Statement,LogSearchShipper.Core,JSONFragmentPatternConverter,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\CustomPatternLayoutConverter.cs,Convert,The length of the statement  "	} else if (loggingEvent.MessageObject.GetType () != typeof(string) && loggingEvent.MessageObject.GetType () != typeof(SystemStringFormat)) { " is 140.
Long Statement,LogSearchShipper.Core,LogSearchShipperProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\LogsearchShipperProcessManager.cs,RegisterService,The length of the statement  "	NxLogProcessManager = new NxLogProcessManager (LogSearchShipperConfig.DataFolder' ServiceName' LogSearchShipperConfig.ShipperServiceUsername' LogSearchShipperConfig.ShipperServicePassword) { " is 190.
Long Statement,LogSearchShipper.Core,LogSearchShipperProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\LogsearchShipperProcessManager.cs,Start,The length of the statement  "	NxLogProcessManager.OutputSyslog = new SyslogEndpoint (LogSearchShipperConfig.IngestorHost' LogSearchShipperConfig.IngestorPort); " is 129.
Long Statement,LogSearchShipper.Core,LogSearchShipperProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\LogsearchShipperProcessManager.cs,SetupInputFiles,The length of the statement  "	NxLogProcessManager.WinEventLogs = new List<WinEventWatchElement> (LogSearchShipperConfig.WinEventWatchers.Cast<WinEventWatchElement> ()); " is 138.
Long Statement,LogSearchShipper.Core,LogSearchShipperProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\LogsearchShipperProcessManager.cs,StartLoggingEnvironmentData,The length of the statement  "	var period = Convert.ToInt64 (TimeSpan.FromMinutes (envWatchElement.LogEnvironmentDiagramDataEveryMinutes).TotalMilliseconds); " is 126.
Long Statement,LogSearchShipper.Core,LogSearchShipperProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\LogsearchShipperProcessManager.cs,LogEnvironmentData,The length of the statement  "		_log.Info (string.Format ("Logged environment diagram data for {0}"' string.Join ("'"' environments.Select (e => e.Name)))); " is 124.
Long Statement,LogSearchShipper.Core,EDBFileWatchParser,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\EDBFileWatchParser.cs,ToFileWatchCollection,The length of the statement  "		return serverName.RegExMatches (_environmentWatchElement.ServerNames) && !serverName.RegExMatches (_environmentWatchElement.ServerNamesNotMatch) && networkArea.RegExMatches (_environmentWatchElement.NetworkAreas) && !networkArea.RegExMatches (_environmentWatchElement.NetworkAreasNotMatch); " is 290.
Long Statement,LogSearchShipper.Core,EDBFileWatchParser,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\EDBFileWatchParser.cs,ToFileWatchCollection,The length of the statement  "			if (!serviceName.RegExMatches (_environmentWatchElement.ServiceNames) || serviceName.RegExMatches (_environmentWatchElement.ServiceNamesNotMatch)) " is 146.
Long Statement,LogSearchShipper.Core,EDBFileWatchParser,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\EDBFileWatchParser.cs,ToFileWatchCollection,The length of the statement  "			AddFileWatchElementForLogFile (serviceLogFile' serviceLogType' watches' fields' serverNetworkArea' serverName' serviceName); " is 124.
Long Statement,LogSearchShipper.Core,EDBFileWatchParser,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\EDBFileWatchParser.cs,ToFileWatchCollection,The length of the statement  "			AddFileWatchElementForLogFile (serviceLogFile1' serviceLogType1' watches' fields' serverNetworkArea' serverName' serviceName); " is 126.
Long Statement,LogSearchShipper.Core,EDBFileWatchParser,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\EDBFileWatchParser.cs,ToFileWatchCollection,The length of the statement  "			AddFileWatchElementForLogFile (serviceLogFile2' serviceLogType2' watches' fields' serverNetworkArea' serverName' serviceName); " is 126.
Long Statement,LogSearchShipper.Core,EDBFileWatchParser,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\EDBFileWatchParser.cs,AddFileWatchElementForLogFile,The length of the statement  "		_log.DebugFormat ("Added file watch from EDB: {0} ({1}) => Matched NetworkArea:{2} ~= {3}' ServerName:{4} ~= {5}' ServiceName:{6} ~= {7}"' logFile' logType' serverNetworkArea' _environmentWatchElement.NetworkAreas' serverName' _environmentWatchElement.ServerNames' serviceName' _environmentWatchElement.ServiceNames); " is 317.
Long Statement,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,_processorUsageReportingTimer_Elapsed,The length of the statement  "			ReportCpuUsage (Process.GetCurrentProcess ()' "ProcessorUsage"' ref _lastProcessorSecondsUsed' _lastProcessorUsageSentTime); " is 124.
Long Statement,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,SetupConfigFile,The length of the statement  ""' _log.IsDebugEnabled ? "DEBUG" : "INFO"' NxLogFile' RotateNxLogFileEvery' MaxNxLogFileSize' Path.GetFullPath (BinFolder)' Path.GetFullPath (DataFolder)' Path.GetDirectoryName (Assembly.GetAssembly (typeof(NxLogProcessManager)).Location)' GenerateOutputSyslogConfig ()' GenerateOutputFileConfig ()' GenerateInputSyslogConfig ()' GenerateInputFilesConfig ()' GenerateInternalLoggingConfig ()' GenerateWinEventWatchersConfig ()' GenerateRoutes ()); " is 447.
Long Statement,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,ExtractNXLog,The length of the statement  "	var zipProperty = typeof(Resource).GetProperties (BindingFlags.Static | BindingFlags.NonPublic).First (property => property.Name.StartsWith ("nxlog_ce_")); " is 155.
Long Statement,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,GenerateInputFilesConfig,The length of the statement  "		filesSection += (inputFile.SourceTailer == TailerType.MT) ? GenerateMtFileWatchConfig (inputFile' i) : GenerateNormalFileWatchConfig (inputFile' i); " is 148.
Long Statement,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,GenerateNormalFileWatchConfig,The length of the statement  ""' i' inputFileEscaped' inputFile.ReadFromLast.ToString ().ToUpper ()' inputFile.Files' inputFile.Type' FilePollIntervalSeconds' FilePollIntervalSeconds * 2' inputFile.CloseWhenIdle.ToString ().ToUpper ()' inputFile.MultilineRule); " is 231.
Long Statement,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,AppendCustomFields,The length of the statement  "			var message = string.Format ("fileWatch: '{0}' contains invalid field name '{1}' (must contain letters' digits' slashes and underscores only)"' watchElement.Key' field.Key); " is 173.
Long Statement,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,GenerateMtFileWatchConfig,The length of the statement  ""' i' exePathEscaped' inputFileEscaped' inputFile.Files' inputFile.Type' inputFile.ReadFromLast.ToString ().ToLower ()); " is 120.
Long Statement,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,GenerateWinEventWatcherConfig,The length of the statement  "	Exec delete ($EventID); delete ($EventType); delete ($Keywords); delete ($Task); delete ($RecordNumber); delete ($ProcessID); " is 125.
Long Statement,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,InitTimeZoneOffset,The length of the statement  "	// nxlog doesn't handle time zone correctly' so we need to set the correct time zone variable to be used in the nxlog config file " is 129.
Long Statement,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,ListFileShares,The length of the statement  "	var shares = worker.Get ().Cast<ManagementObject> ().ToDictionary (share => share ["Name"].ToString ()' share => share ["Path"].ToString ()); " is 141.
Long Statement,LogSearchShipper.Core.NxLog,ServiceControllerEx,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\ServiceControllerEx.cs,CreateService,The length of the statement  "		serviceHandle = NativeMethods.CreateService (scmHandle' name' name' NativeMethods.ServiceAccessRights.AllAccess' NativeMethods.SERVICE_WIN32_OWN_PROCESS' NativeMethods.ServiceBootFlag.DemandStart' NativeMethods.ServiceError.Normal' filePath' null' IntPtr.Zero' null' userName' password); " is 287.
Magic Number,LogSearchShipper.Core,JSONFragmentPatternConverter,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\CustomPatternLayoutConverter.cs,Convert,The following statement contains a magic number: if (json.StartsWith ("{") && json.EndsWith ("}"))  	json = json.Substring (1' json.Length - 2);  
Magic Number,LogSearchShipper.Core,JSONFragmentPatternConverter,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\CustomPatternLayoutConverter.cs,Convert,The following statement contains a magic number: json = json.Substring (1' json.Length - 2);  
Magic Number,LogSearchShipper.Core,ProcessUtils,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\ProcessUtils.cs,Execute,The following statement contains a magic number: if (!process.WaitForExit (10 * 1000) || process.ExitCode != 0)  	throw new ApplicationException (buf.ToString ());  
Magic Number,LogSearchShipper.Core,ProcessUtils,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\ProcessUtils.cs,Execute,The following statement contains a magic number: if (!process.WaitForExit (10 * 1000) || process.ExitCode != 0)  	throw new ApplicationException (buf.ToString ());  
Magic Number,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,NxLogProcessManager,The following statement contains a magic number: if (_serviceName.Length > 80)  	_serviceName = _serviceName.Substring (0' 80);  
Magic Number,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,NxLogProcessManager,The following statement contains a magic number: if (_serviceName.Length > 80)  	_serviceName = _serviceName.Substring (0' 80);  
Magic Number,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,NxLogProcessManager,The following statement contains a magic number: _serviceName = _serviceName.Substring (0' 80);  
Magic Number,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,StartNxLogProcess,The following statement contains a magic number: lock (_sync) {  	_lastProcessorUsageSentTime = DateTime.UtcNow;  	_lastProcessorSecondsUsed = 0;  	_lastNxlogProcessorSecondsUsed = 0;  	_processorUsageReportingTimer = new System.Timers.Timer {  		AutoReset = false'  		Interval = ProcessorUsageReportingIntervalSeconds * 1000  	};  	_processorUsageReportingTimer.Elapsed += _processorUsageReportingTimer_Elapsed;  	_processorUsageReportingTimer.Start ();  }  
Magic Number,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,StartNxLogProcess,The following statement contains a magic number: _processorUsageReportingTimer = new System.Timers.Timer {  	AutoReset = false'  	Interval = ProcessorUsageReportingIntervalSeconds * 1000  };  
Magic Number,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,ReportCpuUsage,The following statement contains a magic number: if (lastProcessorSecondsUsed > 0) {  	var secondsPassed = (DateTime.UtcNow - lastSentTime).TotalSeconds;  	var averageProcessorUsage = ((processorSecondsUsed - lastProcessorSecondsUsed) / secondsPassed) * 100;  	var message = new Dictionary<string' object> {  		{  			name'  			averageProcessorUsage  		}  	};  	_log.Info (message);  	var messageNormalized = new Dictionary<string' object> {  		{  			name + "Normalized"'  			averageProcessorUsage / Environment.ProcessorCount  		}  	};  	_log.Info (messageNormalized);  }  
Magic Number,LogSearchShipper.Core.NxLog,NxLogProcessManager,F:\newReposMay17\cityindex_LogSearchShipper\src\LogsearchShipper.Core\NxLog\NxLogProcessManager.cs,GenerateNormalFileWatchConfig,The following statement contains a magic number: res += string.Format (@"  <Input in_file{0}>  	Module	im_file  	InputType	{8}  	File	""{1}""  	ReadFromLast {2}  	SavePos	TRUE  	CloseWhenIdle {7}  	PollInterval {5}  	DirCheckInterval {6}  	Exec	$path = ""{3}""; $type = ""{4}"";  "' i' inputFileEscaped' inputFile.ReadFromLast.ToString ().ToUpper ()' inputFile.Files' inputFile.Type' FilePollIntervalSeconds' FilePollIntervalSeconds * 2' inputFile.CloseWhenIdle.ToString ().ToUpper ()' inputFile.MultilineRule);  
