Implementation smell,Namespace,Class,File,Method,Description
Complex Method,RiotSharp,RiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\RiotApi.cs,CreateArgumentsListForMatchListRequest,Cyclomatic complexity of the method is 11
Long Parameter List,RiotSharp,RiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\RiotApi.cs,GetMatchList,The method has 9 parameters. Parameters: region' accountId' championIds' queues' seasons' beginTime' endTime' beginIndex' endIndex
Long Parameter List,RiotSharp,RiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\RiotApi.cs,GetMatchListAsync,The method has 9 parameters. Parameters: region' accountId' championIds' queues' seasons' beginTime' endTime' beginIndex' endIndex
Long Parameter List,RiotSharp,RiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\RiotApi.cs,CreateArgumentsListForMatchListRequest,The method has 7 parameters. Parameters: championIds' queues' seasons' beginTime' endTime' beginIndex' endIndex
Long Parameter List,RiotSharp,TournamentRiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\TournamentRiotApi.cs,CreateTournamentCodes,The method has 8 parameters. Parameters: tournamentId' count' teamSize' spectatorType' pickType' mapType' allowedParticipantIds' metadata
Long Parameter List,RiotSharp,TournamentRiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\TournamentRiotApi.cs,CreateTournamentCodesAsync,The method has 8 parameters. Parameters: tournamentId' count' teamSize' spectatorType' pickType' mapType' allowedParticipantIds' metadata
Long Parameter List,RiotSharp,TournamentRiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\TournamentRiotApi.cs,UpdateTournamentCode,The method has 5 parameters. Parameters: tournamentCode' allowedParticipantIds' spectatorType' pickType' mapType
Long Parameter List,RiotSharp,TournamentRiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\TournamentRiotApi.cs,UpdateTournamentCodeAsync,The method has 5 parameters. Parameters: tournamentCode' allowedParticipantIds' spectatorType' pickType' mapType
Long Parameter List,RiotSharp.Http.Interfaces,IRateLimitedRequester,C:\repos\BenFradet_RiotSharp\RiotSharp\Http\Interfaces\IRateLimitedRequester.cs,CreatePostRequest,The method has 5 parameters. Parameters: relativeUrl' region' body' addedArguments' useHttps
Long Parameter List,RiotSharp.Http.Interfaces,IRateLimitedRequester,C:\repos\BenFradet_RiotSharp\RiotSharp\Http\Interfaces\IRateLimitedRequester.cs,CreatePostRequestAsync,The method has 5 parameters. Parameters: relativeUrl' region' body' addedArguments' useHttps
Long Parameter List,RiotSharp.Http.Interfaces,IRateLimitedRequester,C:\repos\BenFradet_RiotSharp\RiotSharp\Http\Interfaces\IRateLimitedRequester.cs,CreatePutRequest,The method has 5 parameters. Parameters: relativeUrl' region' body' addedArguments' useHttps
Long Parameter List,RiotSharp.Http.Interfaces,IRateLimitedRequester,C:\repos\BenFradet_RiotSharp\RiotSharp\Http\Interfaces\IRateLimitedRequester.cs,CreatePutRequestAsync,The method has 5 parameters. Parameters: relativeUrl' region' body' addedArguments' useHttps
Long Parameter List,RiotSharp.Http,RateLimitedRequester,C:\repos\BenFradet_RiotSharp\RiotSharp\Http\RateLimitedRequester.cs,CreatePostRequest,The method has 5 parameters. Parameters: relativeUrl' region' body' addedArguments' useHttps
Long Parameter List,RiotSharp.Http,RateLimitedRequester,C:\repos\BenFradet_RiotSharp\RiotSharp\Http\RateLimitedRequester.cs,CreatePostRequestAsync,The method has 5 parameters. Parameters: relativeUrl' region' body' addedArguments' useHttps
Long Parameter List,RiotSharp.Http,RateLimitedRequester,C:\repos\BenFradet_RiotSharp\RiotSharp\Http\RateLimitedRequester.cs,CreatePutRequest,The method has 5 parameters. Parameters: relativeUrl' region' body' addedArguments' useHttps
Long Parameter List,RiotSharp.Http,RateLimitedRequester,C:\repos\BenFradet_RiotSharp\RiotSharp\Http\RateLimitedRequester.cs,CreatePutRequestAsync,The method has 5 parameters. Parameters: relativeUrl' region' body' addedArguments' useHttps
Long Parameter List,RiotSharp.Interfaces,IRiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\Interfaces\IRiotApi.cs,GetMatchList,The method has 9 parameters. Parameters: region' accountId' championIds' queues' seasons' beginTime' endTime' beginIndex' endIndex
Long Parameter List,RiotSharp.Interfaces,IRiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\Interfaces\IRiotApi.cs,GetMatchListAsync,The method has 9 parameters. Parameters: region' accountId' championIds' queues' seasons' beginTime' endTime' beginIndex' endIndex
Long Parameter List,RiotSharp.Interfaces,ITournamentRiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\Interfaces\ITournamentRiotApi.cs,CreateTournamentCodes,The method has 8 parameters. Parameters: tournamentId' count' teamSize' spectatorType' pickType' mapType' allowedParticipantIds' metadata
Long Parameter List,RiotSharp.Interfaces,ITournamentRiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\Interfaces\ITournamentRiotApi.cs,CreateTournamentCodesAsync,The method has 8 parameters. Parameters: tournamentId' count' teamSize' spectatorType' pickType' mapType' allowedParticipantIds' metadata
Long Parameter List,RiotSharp.Interfaces,ITournamentRiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\Interfaces\ITournamentRiotApi.cs,UpdateTournamentCode,The method has 5 parameters. Parameters: tournamentCode' allowedSummonerIds' spectatorType' pickType' mapType
Long Parameter List,RiotSharp.Interfaces,ITournamentRiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\Interfaces\ITournamentRiotApi.cs,UpdateTournamentCodeAsync,The method has 5 parameters. Parameters: tournamentCode' allowedSummonerIds' spectatorType' pickType' mapType
Long Identifier,RiotSharp,RiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\RiotApi.cs,,The length of the parameter ChampionMasteriesBySummonerUrl is 30.
Long Identifier,RiotSharp,RiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\RiotApi.cs,,The length of the parameter ChampionMasteryTotalScoreBySummonerUrl is 38.
Complex Conditional,RiotSharp,RiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\RiotApi.cs,GetInstance,The conditional expression  "instance == null || Requesters.RiotApiRequester == null ||                  apiKey != Requesters.RiotApiRequester.ApiKey ||                  !rateLimits.Equals(Requesters.RiotApiRequester.RateLimits)"  is complex.
Complex Conditional,RiotSharp,TournamentRiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\TournamentRiotApi.cs,GetInstance,The conditional expression  "instance == null ||                  Requesters.TournamentApiRequester == null ||                  apiKey != Requesters.TournamentApiRequester.ApiKey ||                  !rateLimits.Equals(Requesters.TournamentApiRequester.RateLimits)"  is complex.
Magic Number,RiotSharp,RiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\RiotApi.cs,GetDevelopmentInstance,The following statement contains a magic number: return GetInstance(apiKey' new Dictionary<TimeSpan' int>              {                  [TimeSpan.FromSeconds(1)] = rateLimitPer1s'                  [TimeSpan.FromMinutes(2)] = rateLimitPer2m              });
Magic Number,RiotSharp,RiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\RiotApi.cs,GetInstance,The following statement contains a magic number: return GetInstance(apiKey' new Dictionary<TimeSpan' int>              {                  [TimeSpan.FromMinutes(10)] = rateLimitPer10m'                  [TimeSpan.FromSeconds(10)] = rateLimitPer10s              });
Magic Number,RiotSharp,RiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\RiotApi.cs,GetInstance,The following statement contains a magic number: return GetInstance(apiKey' new Dictionary<TimeSpan' int>              {                  [TimeSpan.FromMinutes(10)] = rateLimitPer10m'                  [TimeSpan.FromSeconds(10)] = rateLimitPer10s              });
Magic Number,RiotSharp,StaticRiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\StaticRiotApi.cs,StaticRiotApi,The following statement contains a magic number: Requesters.StaticApiRequester = new RateLimitedRequester(apiKey' new Dictionary<TimeSpan' int>              {                  { new TimeSpan(1' 0' 0)' 10 }              });
Magic Number,RiotSharp,TournamentRiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\TournamentRiotApi.cs,GetInstance,The following statement contains a magic number: return GetInstance(apiKey' new Dictionary<TimeSpan' int>              {                  [TimeSpan.FromSeconds(10)] = rateLimitPer10s'                  [TimeSpan.FromMinutes(10)] = rateLimitPer10m              }' useStub);
Magic Number,RiotSharp,TournamentRiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\TournamentRiotApi.cs,GetInstance,The following statement contains a magic number: return GetInstance(apiKey' new Dictionary<TimeSpan' int>              {                  [TimeSpan.FromSeconds(10)] = rateLimitPer10s'                  [TimeSpan.FromMinutes(10)] = rateLimitPer10m              }' useStub);
Magic Number,RiotSharp,TournamentRiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\TournamentRiotApi.cs,ValidateTeamSize,The following statement contains a magic number: if (teamSize < 1 || teamSize > 5)                  throw new ArgumentException("Invalid team size. Valid values are 1-5."' nameof(teamSize));
Magic Number,RiotSharp,TournamentRiotApi,C:\repos\BenFradet_RiotSharp\RiotSharp\TournamentRiotApi.cs,ValidateTournamentCodeCount,The following statement contains a magic number: if (count > 1000)                  throw new ArgumentException("Invalid count. You cannot create more than 1000 codes at once."' nameof(count));
Magic Number,RiotSharp.Http,RateLimitedRequester,C:\repos\BenFradet_RiotSharp\RiotSharp\Http\RateLimitedRequester.cs,CreatePutRequest,The following statement contains a magic number: using (var response = Put(request))              {                  return (int)response.StatusCode >= 200 && (int)response.StatusCode < 300;              }
Magic Number,RiotSharp.Http,RateLimitedRequester,C:\repos\BenFradet_RiotSharp\RiotSharp\Http\RateLimitedRequester.cs,CreatePutRequest,The following statement contains a magic number: using (var response = Put(request))              {                  return (int)response.StatusCode >= 200 && (int)response.StatusCode < 300;              }
Magic Number,RiotSharp.Http,RateLimitedRequester,C:\repos\BenFradet_RiotSharp\RiotSharp\Http\RateLimitedRequester.cs,CreatePutRequestAsync,The following statement contains a magic number: using (var response = await PutAsync(request))              {                  return (int)response.StatusCode >= 200 && (int)response.StatusCode < 300;              }
Magic Number,RiotSharp.Http,RateLimitedRequester,C:\repos\BenFradet_RiotSharp\RiotSharp\Http\RateLimitedRequester.cs,CreatePutRequestAsync,The following statement contains a magic number: using (var response = await PutAsync(request))              {                  return (int)response.StatusCode >= 200 && (int)response.StatusCode < 300;              }
Magic Number,RiotSharp.Http,RequesterBase,C:\repos\BenFradet_RiotSharp\RiotSharp\Http\RequesterBase.cs,HandleRequestFailure,The following statement contains a magic number: switch (statusCode)              {                  case HttpStatusCode.ServiceUnavailable:                      throw new RiotSharpException("503' Service unavailable"' statusCode);                  case HttpStatusCode.InternalServerError:                      throw new RiotSharpException("500' Internal server error"' statusCode);                  case HttpStatusCode.Unauthorized:                      throw new RiotSharpException("401' Unauthorized"' statusCode);                  case HttpStatusCode.BadRequest:                      throw new RiotSharpException("400' Bad request"' statusCode);                  case HttpStatusCode.NotFound:                      throw new RiotSharpException("404' Resource not found"' statusCode);                  case HttpStatusCode.Forbidden:                      throw new RiotSharpException("403' Forbidden"' statusCode);                  case (HttpStatusCode)429:                      throw new RiotSharpException("429' Rate Limit Exceeded"' statusCode);                  default:                      throw new RiotSharpException("Unexpeced failure"' statusCode);              }
Magic Number,RiotSharp.MatchEndpoint.Enums.Converters,SeasonConverter,C:\repos\BenFradet_RiotSharp\RiotSharp\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  default:                      return null;              }
Magic Number,RiotSharp.MatchEndpoint.Enums.Converters,SeasonConverter,C:\repos\BenFradet_RiotSharp\RiotSharp\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  default:                      return null;              }
Magic Number,RiotSharp.MatchEndpoint.Enums.Converters,SeasonConverter,C:\repos\BenFradet_RiotSharp\RiotSharp\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  default:                      return null;              }
Magic Number,RiotSharp.MatchEndpoint.Enums.Converters,SeasonConverter,C:\repos\BenFradet_RiotSharp\RiotSharp\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  default:                      return null;              }
Magic Number,RiotSharp.MatchEndpoint.Enums.Converters,SeasonConverter,C:\repos\BenFradet_RiotSharp\RiotSharp\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  default:                      return null;              }
Magic Number,RiotSharp.MatchEndpoint.Enums.Converters,SeasonConverter,C:\repos\BenFradet_RiotSharp\RiotSharp\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  default:                      return null;              }
Magic Number,RiotSharp.MatchEndpoint.Enums.Converters,SeasonConverter,C:\repos\BenFradet_RiotSharp\RiotSharp\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  default:                      return null;              }
Magic Number,RiotSharp.MatchEndpoint.Enums.Converters,SeasonConverter,C:\repos\BenFradet_RiotSharp\RiotSharp\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  default:                      return null;              }
Missing Default,RiotSharp.StaticDataEndpoint.Champion.Enums.Converters,TagStaticListConverter,C:\repos\BenFradet_RiotSharp\RiotSharp\StaticDataEndpoint\Champion\Enums\Converters\TagStaticListConverter.cs,ReadJson,The following switch statement is missing a default case: switch (str)                  {                      case "Fighter":                          tags.Add(TagStatic.Fighter);                          break;                      case "Tank":                          tags.Add(TagStatic.Tank);                          break;                      case "Mage":                          tags.Add(TagStatic.Mage);                          break;                      case "Assassin":                          tags.Add(TagStatic.Assassin);                          break;                      case "Support":                          tags.Add(TagStatic.Support);                          break;                      case "Marksman":                          tags.Add(TagStatic.Marksman);                          break;                  }
