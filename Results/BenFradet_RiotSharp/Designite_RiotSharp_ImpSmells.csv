Implementation smell,Namespace,Class,File,Method,Description
Complex Method,RiotSharp.Endpoints.MatchEndpoint,MatchEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\MatchEndpoint.cs,CreateArgumentsListForMatchListRequest,Cyclomatic complexity of the method is 11
Complex Method,RiotSharp.Endpoints.MatchEndpoint.Enums,EventTypeExtension,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\MatchEventType.cs,ToCustomString,Cyclomatic complexity of the method is 13
Complex Method,RiotSharp.Endpoints.MatchEndpoint.Enums,SeasonExtension,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\Season.cs,ToCustomString,Cyclomatic complexity of the method is 15
Complex Method,RiotSharp.Endpoints.MatchEndpoint.Enums,WardTypeExtension,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\WardType.cs,ToCustomString,Cyclomatic complexity of the method is 8
Complex Method,RiotSharp.Endpoints.MatchEndpoint.Enums.Converters,MatchEventTypeConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\Converters\MatchEventTypeConverter.cs,ReadJson,Cyclomatic complexity of the method is 14
Complex Method,RiotSharp.Endpoints.MatchEndpoint.Enums.Converters,MonsterTypeConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\Converters\MonsterTypeConverter.cs,ReadJson,Cyclomatic complexity of the method is 8
Complex Method,RiotSharp.Endpoints.MatchEndpoint.Enums.Converters,SeasonConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,Cyclomatic complexity of the method is 16
Complex Method,RiotSharp.Endpoints.MatchEndpoint.Enums.Converters,WardTypeConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\Converters\WardTypeConverter.cs,ReadJson,Cyclomatic complexity of the method is 9
Complex Method,RiotSharp.Endpoints.StaticDataEndpoint.Champion.Enums.Converters,TagStaticListConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\StaticDataEndpoint\Champion\Enums\Converters\TagStaticListConverter.cs,ReadJson,Cyclomatic complexity of the method is 9
Complex Method,RiotSharp.Http,RequesterBase,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Http\RequesterBase.cs,HandleRequestFailure,Cyclomatic complexity of the method is 11
Complex Method,RiotSharp.Http,RequesterBase,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Http\RequesterBase.cs,GetPlatform,Cyclomatic complexity of the method is 16
Complex Method,RiotSharp.Misc.Converters,LaneConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Misc\Converters\LaneConverter.cs,ReadJson,Cyclomatic complexity of the method is 9
Complex Method,RiotSharp.Misc.Converters,PlatformConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Misc\Converters\PlatformConverter.cs,ReadJson,Cyclomatic complexity of the method is 15
Complex Method,RiotSharp.Misc.Converters,PlatformToRegionConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Misc\Converters\PlatformConverter.cs,ConvertToRegion,Cyclomatic complexity of the method is 13
Complex Method,RiotSharp.Misc.Converters,RegionConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Misc\Converters\RegionConverter.cs,ReadJson,Cyclomatic complexity of the method is 13
Complex Method,RiotSharp.Misc,CultureInfoExtensions,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Misc\CultureInfoExtensions.cs,ParseNeutralCulture,Cyclomatic complexity of the method is 21
Complex Method,RiotSharp.Misc,LaneExtension,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Misc\Lane.cs,ToCustomString,Cyclomatic complexity of the method is 8
Long Parameter List,RiotSharp.Endpoints.Interfaces,ILeagueEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\Interfaces\ILeagueEndpoint.cs,GetLeagueEntriesAsync,The method has 5 parameters. Parameters: region' division' tier' rankedQueue' page
Long Parameter List,RiotSharp.Endpoints.Interfaces,IMatchEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\Interfaces\IMatchEndpoint.cs,GetMatchListAsync,The method has 9 parameters. Parameters: region' accountId' championIds' queues' seasons' beginTime' endTime' beginIndex' endIndex
Long Parameter List,RiotSharp.Endpoints.LeagueEndpoint,LeagueEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\LeagueEndpoint\LeagueEndpoint.cs,GetLeagueEntriesAsync,The method has 5 parameters. Parameters: region' division' tier' rankedQueue' page
Long Parameter List,RiotSharp.Endpoints.MatchEndpoint,MatchEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\MatchEndpoint.cs,GetMatchListAsync,The method has 9 parameters. Parameters: region' accountId' championIds' queues' seasons' beginTime' endTime' beginIndex' endIndex
Long Parameter List,RiotSharp.Endpoints.MatchEndpoint,MatchEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\MatchEndpoint.cs,CreateArgumentsListForMatchListRequest,The method has 7 parameters. Parameters: championIds' queues' seasons' beginTime' endTime' beginIndex' endIndex
Long Parameter List,RiotSharp.Http.Interfaces,IRateLimitedRequester,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Http\Interfaces\IRateLimitedRequester.cs,CreatePostRequestAsync,The method has 5 parameters. Parameters: relativeUrl' region' body' queryParameters' useHttps
Long Parameter List,RiotSharp.Http.Interfaces,IRateLimitedRequester,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Http\Interfaces\IRateLimitedRequester.cs,CreatePutRequestAsync,The method has 5 parameters. Parameters: relativeUrl' region' body' queryParameters' useHttps
Long Parameter List,RiotSharp.Http,RateLimitedRequester,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Http\RateLimitedRequester.cs,CreatePostRequestAsync,The method has 5 parameters. Parameters: relativeUrl' region' body' queryParameters' useHttps
Long Parameter List,RiotSharp.Http,RateLimitedRequester,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Http\RateLimitedRequester.cs,CreatePutRequestAsync,The method has 5 parameters. Parameters: relativeUrl' region' body' queryParameters' useHttps
Long Parameter List,RiotSharp.Http,RequesterBase,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Http\RequesterBase.cs,PrepareRequest,The method has 5 parameters. Parameters: host' relativeUrl' queryParameters' useHttps' httpMethod
Long Parameter List,RiotSharp.Interfaces,ITournamentRiotApi,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Interfaces\ITournamentRiotApi.cs,CreateTournamentCodesAsync,The method has 8 parameters. Parameters: tournamentId' count' teamSize' spectatorType' pickType' mapType' allowedEncryptedSummonerIds' metadata
Long Parameter List,RiotSharp.Interfaces,ITournamentRiotApi,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Interfaces\ITournamentRiotApi.cs,UpdateTournamentCodeAsync,The method has 5 parameters. Parameters: tournamentCode' allowedEncryptedSummonerIds' spectatorType' pickType' mapType
Long Parameter List,RiotSharp,TournamentRiotApi,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\TournamentRiotApi.cs,CreateTournamentCodesAsync,The method has 8 parameters. Parameters: tournamentId' count' teamSize' spectatorType' pickType' mapType' allowedEncryptedSummonerIds' metadata
Long Parameter List,RiotSharp,TournamentRiotApi,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\TournamentRiotApi.cs,UpdateTournamentCodeAsync,The method has 5 parameters. Parameters: tournamentCode' allowedEncryptedSummonerIds' spectatorType' pickType' mapType
Long Identifier,RiotSharp.Endpoints.ChampionMasteryEndpoint,ChampionMasteryEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\ChampionMasteryEndpoint\ChampionMasteryEndpoint.cs,,The length of the parameter ChampionMasteriesBySummonerUrl is 30.
Long Identifier,RiotSharp.Endpoints.ChampionMasteryEndpoint,ChampionMasteryEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\ChampionMasteryEndpoint\ChampionMasteryEndpoint.cs,,The length of the parameter ChampionMasteryTotalScoreBySummonerUrl is 38.
Long Statement,RiotSharp.Endpoints.StaticDataEndpoint.Champion,StaticChampionEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\StaticDataEndpoint\Champion\StaticChampionEndpoint.cs,GetAllAsync,The length of the statement  "            var json = await requester.CreateGetRequestAsync(Host' CreateUrl(version' language' fullData ? ChampionsFullDataKey : ChampionsDataKey)).ConfigureAwait(false); " is 159.
Long Statement,RiotSharp.Endpoints.StaticDataEndpoint.Champion,StaticChampionEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\StaticDataEndpoint\Champion\StaticChampionEndpoint.cs,GetByKeyAsync,The length of the statement  "            var json = await requester.CreateGetRequestAsync(Host' string.Format(ChampionByKeyUrl' version' language' key)).ConfigureAwait(false); " is 134.
Long Statement,RiotSharp.Endpoints.StaticDataEndpoint.Champion,StaticChampionEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\StaticDataEndpoint\Champion\StaticChampionEndpoint.cs,GetByKeyAsync,The length of the statement  "            cache.Add(cacheKey' new ChampionStaticWrapper(championStandAlone.Data.First().Value' language' version)' SlidingExpirationTime); " is 128.
Long Statement,RiotSharp.Endpoints.StaticDataEndpoint.Item,StaticItemEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\StaticDataEndpoint\Item\StaticItemEndpoint.cs,GetAllAsync,The length of the statement  "            var json = await requester.CreateGetRequestAsync(Host' CreateUrl(version' language' ItemsDataKey)).ConfigureAwait(false); " is 121.
Long Statement,RiotSharp.Endpoints.StaticDataEndpoint.LanguageStrings,StaticLanguageEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\StaticDataEndpoint\LanguageStrings\StaticLanguageEndpoint.cs,GetLanguageStringsAsync,The length of the statement  "            var json = await requester.CreateGetRequestAsync(Host' CreateUrl(version' language' LanguageStringsDataKey)).ConfigureAwait(false); " is 131.
Long Statement,RiotSharp.Endpoints.StaticDataEndpoint.Map,StaticMapEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\StaticDataEndpoint\Map\StaticMapEndpoint.cs,GetAllAsync,The length of the statement  "            var json = await requester.CreateGetRequestAsync(Host' CreateUrl(version' language' MapsDataKey)).ConfigureAwait(false); " is 120.
Long Statement,RiotSharp.Endpoints.StaticDataEndpoint.Mastery,StaticMasteryEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\StaticDataEndpoint\Mastery\StaticMasteryEndpoint.cs,GetAllAsync,The length of the statement  "            var json = await requester.CreateGetRequestAsync(Host' CreateUrl(version' language' MasteriesDataKey)).ConfigureAwait(false); " is 125.
Long Statement,RiotSharp.Endpoints.StaticDataEndpoint.ProfileIcons,StaticProfileIconEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\StaticDataEndpoint\ProfileIcons\StaticProfileIconEndpoint.cs,GetAllAsync,The length of the statement  "            var json = await requester.CreateGetRequestAsync(Host' CreateUrl(version' language' ProfileIconsDataKey)).ConfigureAwait(false); " is 128.
Long Statement,RiotSharp.Endpoints.StaticDataEndpoint.Realm,StaticRealmEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\StaticDataEndpoint\Realm\StaticRealmEndpoint.cs,GetAllAsync,The length of the statement  "            var json = await requester.CreateGetRequestAsync(Host' string.Format(RealmsUrl' region.ToString().ToLower())).ConfigureAwait(false); " is 132.
Long Statement,RiotSharp.Endpoints.StaticDataEndpoint.ReforgedRune,StaticReforgedRuneEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\StaticDataEndpoint\ReforgedRune\StaticReforgedRuneEndpoint.cs,GetAllAsync,The length of the statement  "            var json = await requester.CreateGetRequestAsync(Host' CreateUrl(version' language' ReforgedRunesDataKey)).ConfigureAwait(false); " is 129.
Long Statement,RiotSharp.Endpoints.StaticDataEndpoint.Rune,StaticRuneEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\StaticDataEndpoint\Rune\StaticRuneEndpoint.cs,GetAllAsync,The length of the statement  "            var json = await requester.CreateGetRequestAsync(Host' CreateUrl(version' language' RunesDataKey)).ConfigureAwait(false); " is 121.
Long Statement,RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell,StaticSummonerSpellEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\StaticDataEndpoint\SummonerSpell\StaticSummonerSpellEndpoint.cs,GetAllAsync,The length of the statement  "            var json = await requester.CreateGetRequestAsync(Host' CreateUrl(version' language' SummonerSpellsDataKey)).ConfigureAwait(false); " is 130.
Long Statement,RiotSharp.Endpoints.SummonerEndpoint,SummonerEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\SummonerEndpoint\SummonerEndpoint.cs,GetSummonerByPuuidAsync,The length of the statement  "            var jsonResponse = await _requester.CreateGetRequestAsync(string.Format(SummonerRootUrl + SummonerByPuuid' puuid)' region).ConfigureAwait(false); " is 145.
Complex Conditional,RiotSharp,RiotApi,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\RiotApi.cs,GetInstance,The conditional expression  "_instance == null || Requesters.RiotApiRequester == null ||                  apiKey != Requesters.RiotApiRequester.ApiKey ||                  !rateLimits.Equals(Requesters.RiotApiRequester.RateLimits)"  is complex.
Complex Conditional,RiotSharp,TournamentRiotApi,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\TournamentRiotApi.cs,GetInstance,The conditional expression  "_instance == null ||                  Requesters.TournamentApiRequester == null ||                  apiKey != Requesters.TournamentApiRequester.ApiKey ||                  !rateLimits.Equals(Requesters.TournamentApiRequester.RateLimits)"  is complex.
Magic Number,RiotSharp.Endpoints.MatchEndpoint.Enums.Converters,SeasonConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  case 10:                      return Season.PreSeason2018;                  case 11:                      return Season.Season2018;                  case 12:                      return Season.PreSeason2019;                  case 13:                      return Season.Season2019;                  default:                      return null;              }
Magic Number,RiotSharp.Endpoints.MatchEndpoint.Enums.Converters,SeasonConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  case 10:                      return Season.PreSeason2018;                  case 11:                      return Season.Season2018;                  case 12:                      return Season.PreSeason2019;                  case 13:                      return Season.Season2019;                  default:                      return null;              }
Magic Number,RiotSharp.Endpoints.MatchEndpoint.Enums.Converters,SeasonConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  case 10:                      return Season.PreSeason2018;                  case 11:                      return Season.Season2018;                  case 12:                      return Season.PreSeason2019;                  case 13:                      return Season.Season2019;                  default:                      return null;              }
Magic Number,RiotSharp.Endpoints.MatchEndpoint.Enums.Converters,SeasonConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  case 10:                      return Season.PreSeason2018;                  case 11:                      return Season.Season2018;                  case 12:                      return Season.PreSeason2019;                  case 13:                      return Season.Season2019;                  default:                      return null;              }
Magic Number,RiotSharp.Endpoints.MatchEndpoint.Enums.Converters,SeasonConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  case 10:                      return Season.PreSeason2018;                  case 11:                      return Season.Season2018;                  case 12:                      return Season.PreSeason2019;                  case 13:                      return Season.Season2019;                  default:                      return null;              }
Magic Number,RiotSharp.Endpoints.MatchEndpoint.Enums.Converters,SeasonConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  case 10:                      return Season.PreSeason2018;                  case 11:                      return Season.Season2018;                  case 12:                      return Season.PreSeason2019;                  case 13:                      return Season.Season2019;                  default:                      return null;              }
Magic Number,RiotSharp.Endpoints.MatchEndpoint.Enums.Converters,SeasonConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  case 10:                      return Season.PreSeason2018;                  case 11:                      return Season.Season2018;                  case 12:                      return Season.PreSeason2019;                  case 13:                      return Season.Season2019;                  default:                      return null;              }
Magic Number,RiotSharp.Endpoints.MatchEndpoint.Enums.Converters,SeasonConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  case 10:                      return Season.PreSeason2018;                  case 11:                      return Season.Season2018;                  case 12:                      return Season.PreSeason2019;                  case 13:                      return Season.Season2019;                  default:                      return null;              }
Magic Number,RiotSharp.Endpoints.MatchEndpoint.Enums.Converters,SeasonConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  case 10:                      return Season.PreSeason2018;                  case 11:                      return Season.Season2018;                  case 12:                      return Season.PreSeason2019;                  case 13:                      return Season.Season2019;                  default:                      return null;              }
Magic Number,RiotSharp.Endpoints.MatchEndpoint.Enums.Converters,SeasonConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  case 10:                      return Season.PreSeason2018;                  case 11:                      return Season.Season2018;                  case 12:                      return Season.PreSeason2019;                  case 13:                      return Season.Season2019;                  default:                      return null;              }
Magic Number,RiotSharp.Endpoints.MatchEndpoint.Enums.Converters,SeasonConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  case 10:                      return Season.PreSeason2018;                  case 11:                      return Season.Season2018;                  case 12:                      return Season.PreSeason2019;                  case 13:                      return Season.Season2019;                  default:                      return null;              }
Magic Number,RiotSharp.Endpoints.MatchEndpoint.Enums.Converters,SeasonConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\MatchEndpoint\Enums\Converters\SeasonConverter.cs,ReadJson,The following statement contains a magic number: switch (nbr)              {                  case 0:                      return Season.PreSeason3;                  case 1:                      return Season.Season3;                  case 2:                      return Season.PreSeason2014;                  case 3:                      return Season.Season2014;                  case 4:                      return Season.PreSeason2015;                  case 5:                      return Season.Season2015;                  case 6:                      return Season.PreSeason2016;                  case 7:                      return Season.Season2016;                  case 8:                      return Season.PreSeason2017;                  case 9:                      return Season.Season2017;                  case 10:                      return Season.PreSeason2018;                  case 11:                      return Season.Season2018;                  case 12:                      return Season.PreSeason2019;                  case 13:                      return Season.Season2019;                  default:                      return null;              }
Magic Number,RiotSharp.Endpoints.ThirdPartyEndpoint,ThirdPartyEndpoint,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\ThirdPartyEndpoint\ThirdPartyEndpoint.cs,GetThirdPartyCodeBySummonerIdAsync,The following statement contains a magic number: return response.Substring(1' response.Length - 2);
Magic Number,RiotSharp.Http,RateLimiter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Http\RateLimiter.cs,HandleRateLimitAsync,The following statement contains a magic number: throw new RiotSharpException("Rate limit reached."' (System.Net.HttpStatusCode)429);
Magic Number,RiotSharp.Http,RequesterBase,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Http\RequesterBase.cs,HandleRequestFailure,The following statement contains a magic number: switch (statusCode)                  {                      case HttpStatusCode.ServiceUnavailable:                          throw new RiotSharpException("503' Service unavailable"' statusCode);                      case HttpStatusCode.InternalServerError:                          throw new RiotSharpException("500' Internal server error"' statusCode);                      case HttpStatusCode.Unauthorized:                          throw new RiotSharpException("401' Unauthorized"' statusCode);                      case HttpStatusCode.BadRequest:                          throw new RiotSharpException("400' Bad request"' statusCode);                      case HttpStatusCode.NotFound:                          throw new RiotSharpException("404' Resource not found"' statusCode);                      case HttpStatusCode.Forbidden:                          throw new RiotSharpException("403' Forbidden"' statusCode);                      case (HttpStatusCode)429:                          var retryAfter = TimeSpan.Zero;                          if (response.Headers.TryGetValues("Retry-After"' out var retryAfterHeaderValues))                          {                              if (int.TryParse(retryAfterHeaderValues.FirstOrDefault()' out var seconds))                              {                                  retryAfter = TimeSpan.FromSeconds(seconds);                              }                          }                            string rateLimitType = null;                          if(response.Headers.TryGetValues("X-Rate-Limit-Type"' out var rateLimitTypeHeaderValues))                          {                              rateLimitType = rateLimitTypeHeaderValues.FirstOrDefault();                          }                          throw new RiotSharpRateLimitException("429' Rate Limit Exceeded"' statusCode' retryAfter' rateLimitType);                      default:                          throw new RiotSharpException("Unexpeced failure"' statusCode);                  }
Magic Number,RiotSharp,RiotApi,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\RiotApi.cs,GetDevelopmentInstance,The following statement contains a magic number: return GetInstance(apiKey' new Dictionary<TimeSpan' int>              {                  [TimeSpan.FromSeconds(1)] = rateLimitPer1s'                  [TimeSpan.FromMinutes(2)] = rateLimitPer2m              }' cache ?? new PassThroughCache());
Magic Number,RiotSharp,RiotApi,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\RiotApi.cs,GetInstance,The following statement contains a magic number: return GetInstance(apiKey' new Dictionary<TimeSpan' int>              {                  [TimeSpan.FromMinutes(10)] = rateLimitPer10m'                  [TimeSpan.FromSeconds(10)] = rateLimitPer10s              }' cache ?? new PassThroughCache());
Magic Number,RiotSharp,RiotApi,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\RiotApi.cs,GetInstance,The following statement contains a magic number: return GetInstance(apiKey' new Dictionary<TimeSpan' int>              {                  [TimeSpan.FromMinutes(10)] = rateLimitPer10m'                  [TimeSpan.FromSeconds(10)] = rateLimitPer10s              }' cache ?? new PassThroughCache());
Magic Number,RiotSharp,TournamentRiotApi,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\TournamentRiotApi.cs,GetInstance,The following statement contains a magic number: return GetInstance(apiKey' new Dictionary<TimeSpan' int>              {                  [TimeSpan.FromSeconds(10)] = rateLimitPer10S'                  [TimeSpan.FromMinutes(10)] = rateLimitPer10M              }' useStub);
Magic Number,RiotSharp,TournamentRiotApi,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\TournamentRiotApi.cs,GetInstance,The following statement contains a magic number: return GetInstance(apiKey' new Dictionary<TimeSpan' int>              {                  [TimeSpan.FromSeconds(10)] = rateLimitPer10S'                  [TimeSpan.FromMinutes(10)] = rateLimitPer10M              }' useStub);
Magic Number,RiotSharp,TournamentRiotApi,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\TournamentRiotApi.cs,ValidateTeamSize,The following statement contains a magic number: teamSize < 1 || teamSize > 5
Magic Number,RiotSharp,TournamentRiotApi,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\TournamentRiotApi.cs,ValidateTournamentCodeCount,The following statement contains a magic number: count > 1000
Missing Default,RiotSharp.Endpoints.StaticDataEndpoint.Champion.Enums.Converters,TagStaticListConverter,D:\research\architectureSmells\repos\BenFradet_RiotSharp\RiotSharp\Endpoints\StaticDataEndpoint\Champion\Enums\Converters\TagStaticListConverter.cs,ReadJson,The following switch statement is missing a default case: switch (str)                  {                      case "Fighter":                          tags.Add(TagStatic.Fighter);                          break;                      case "Tank":                          tags.Add(TagStatic.Tank);                          break;                      case "Mage":                          tags.Add(TagStatic.Mage);                          break;                      case "Assassin":                          tags.Add(TagStatic.Assassin);                          break;                      case "Support":                          tags.Add(TagStatic.Support);                          break;                      case "Marksman":                          tags.Add(TagStatic.Marksman);                          break;                  }
