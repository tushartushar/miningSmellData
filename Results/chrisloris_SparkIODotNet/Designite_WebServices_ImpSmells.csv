Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SparkIO.WebServices.Internal,EventStreamEmitter,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\Internal\EventStreamEmitter.cs,DoWork,Cyclomatic complexity of the method is 8
Complex Method,SparkIO.WebServices.Internal,EventStreamReader,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\Internal\EventStreamReader.cs,DoWork,Cyclomatic complexity of the method is 9
Long Parameter List,SparkIO.WebServices,BaseAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\BaseAPI.cs,BaseAPI,The method has 5 parameters.
Long Parameter List,SparkIO.WebServices,BaseAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\BaseAPI.cs,BaseAPI,The method has 6 parameters.
Long Parameter List,SparkIO.WebServices,BaseAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\BaseAPI.cs,shadowBaseAPI,The method has 5 parameters.
Long Parameter List,SparkIO.WebServices,BaseAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\BaseAPI.cs,GetHttpWebRequest,The method has 5 parameters.
Long Parameter List,SparkIO.WebServices,CoreAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\CoreAPI.cs,CoreAPI,The method has 5 parameters.
Long Parameter List,SparkIO.WebServices,CoreAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\CoreAPI.cs,CoreAPI,The method has 6 parameters.
Long Parameter List,SparkIO.WebServices,EventsAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\EventsAPI.cs,EventsAPI,The method has 5 parameters.
Long Parameter List,SparkIO.WebServices,EventsAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\EventsAPI.cs,EventsAPI,The method has 6 parameters.
Long Parameter List,SparkIO.WebServices,TinkerAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\TinkerAPI.cs,TinkerAPI,The method has 5 parameters.
Long Parameter List,SparkIO.WebServices,TinkerAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\TinkerAPI.cs,TinkerAPI,The method has 6 parameters.
Long Parameter List,SparkIO.WebServices.Internal,EventStreamEmitter,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\Internal\EventStreamEmitter.cs,EventStreamEmitter,The method has 5 parameters.
Long Parameter List,SparkIO.WebServices.CustomEventArgs,SSEEventArgs,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\CustomEventArgs\SSEEventArgs.cs,SSEEventArgs,The method has 5 parameters.
Long Statement,SparkIO.WebServices,BaseAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\BaseAPI.cs,shadowBaseAPI,The length of the statement  "		ServicePointManager.ServerCertificateValidationCallback = new System.Net.Security.RemoteCertificateValidationCallback (AcceptAllCertifications); " is 144.
Long Statement,SparkIO.WebServices,BaseAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\BaseAPI.cs,GetHttpWebResponseAsJSONData,The length of the statement  "				// DateTime parsing issue http://stackoverflow.com/questions/9266435/datacontractjsonserializer-deserializing-datetime-within-listobject " is 136.
Long Statement,SparkIO.WebServices,BaseAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\BaseAPI.cs,GetCoreList,The length of the statement  "	HttpWebRequest request = GetHttpWebRequest (webMethod.GET' string.Format (addrBaseAPIListDevices' HttpUtility.UrlEncode (this.AccessToken))' string.Empty); " is 155.
Long Statement,SparkIO.WebServices,BaseAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\BaseAPI.cs,GetCoreInfo,The length of the statement  "	HttpWebRequest request = GetHttpWebRequest (webMethod.GET' string.Format (addrBaseAPIGetDeviceInfo' HttpUtility.UrlEncode (this.CoreID)' HttpUtility.UrlEncode (this.AccessToken))' string.Empty); " is 194.
Long Statement,SparkIO.WebServices,BaseAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\BaseAPI.cs,CreateToken,The length of the statement  "	HttpWebRequest request = GetHttpWebRequest (webMethod.POST' addrBaseAPICreateToken' String.Format (payloadBaseAPICreateToken' userName' password)' sparkClientId' sparkClientId); " is 177.
Long Statement,SparkIO.WebServices,BaseAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\BaseAPI.cs,DeleteToken,The length of the statement  "	HttpWebRequest request = GetHttpWebRequest (webMethod.DELETE' String.Format (addrBaseAPIDeleteToken' token)' null' userName' password); " is 135.
Long Statement,SparkIO.WebServices,CoreAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\CoreAPI.cs,GetVariableRaw,The length of the statement  "	HttpWebRequest request = GetHttpWebRequest (webMethod.GET' String.Format (addrCoreAPIGetVariable' this.CoreID' varName' AccessToken)' string.Empty); " is 148.
Long Statement,SparkIO.WebServices,CoreAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\CoreAPI.cs,GetVariableInt,The length of the statement  "		String message = String.Format ("Request for variable {0} failed to convert value '{1}' to int."' varName' resultString); " is 121.
Long Statement,SparkIO.WebServices,CoreAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\CoreAPI.cs,GetVariableDouble,The length of the statement  "		String message = String.Format ("Request for variable {0} failed to convert value '{1}' to double."' varName' resultString); " is 124.
Long Statement,SparkIO.WebServices,CoreAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\CoreAPI.cs,GetVariableBoolean,The length of the statement  "		String message = String.Format ("Request for variable {0} failed to convert value '{1}' to boolean."' varName' resultString); " is 125.
Long Statement,SparkIO.WebServices,CoreAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\CoreAPI.cs,CallFunctionRaw,The length of the statement  "	String payload = String.Format (payloadCoreAPICallFunction' HttpUtility.UrlEncode (AccessToken)' HttpUtility.UrlEncode (args)); " is 127.
Long Statement,SparkIO.WebServices,CoreAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\CoreAPI.cs,CallFunctionRaw,The length of the statement  "	HttpWebRequest request = GetHttpWebRequest (webMethod.POST' String.Format (addrCoreAPICallFunction' this.CoreID' funcName)' payload); " is 133.
Long Statement,SparkIO.WebServices,CoreAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\CoreAPI.cs,CallFunctionInt,The length of the statement  "		String message = String.Format ("Request for function {0} failed to convert value '{1}' to int."' funcName' resultString); " is 122.
Long Statement,SparkIO.WebServices,TinkerAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\TinkerAPI.cs,DigitalWrite,The length of the statement  "	Response result = Post (Functions.digitalwrite' String.Format (payloadWrite' HttpUtility.UrlEncode (AccessToken)' HttpUtility.UrlEncode (pin.ToString ())' HttpUtility.UrlEncode (state.ToString ()))); " is 199.
Long Statement,SparkIO.WebServices,TinkerAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\TinkerAPI.cs,DigitalRead,The length of the statement  "	Response result = Post (Functions.digitalread' String.Format (payloadRead' HttpUtility.UrlEncode (AccessToken)' HttpUtility.UrlEncode (pin.ToString ()))); " is 154.
Long Statement,SparkIO.WebServices,TinkerAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\TinkerAPI.cs,AnalogWrite,The length of the statement  "	Response result = Post (Functions.analogwrite' String.Format (payloadWrite' HttpUtility.UrlEncode (AccessToken)' HttpUtility.UrlEncode (pin.ToString ())' HttpUtility.UrlEncode (val.ToString ()))); " is 196.
Long Statement,SparkIO.WebServices,TinkerAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\TinkerAPI.cs,AnalogRead,The length of the statement  "	Response result = Post (Functions.analogread' String.Format (payloadRead' HttpUtility.UrlEncode (AccessToken)' HttpUtility.UrlEncode (pin.ToString ()))); " is 153.
Long Statement,SparkIO.WebServices,TinkerAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\TinkerAPI.cs,Post,The length of the statement  "	HttpWebRequest request = GetHttpWebRequest (webMethod.POST' String.Format (addrTinkerAPICallFunction' this.CoreID' function.ToString ())' payload); " is 147.
Long Statement,SparkIO.WebServices.Internal,EventStreamEmitter,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\Internal\EventStreamEmitter.cs,DoWork,The length of the statement  "						raiseEvent (new SSEEventArgs (eventName' eventData.Data' eventData.TTL' DateTime.Parse (eventData.PublishedAt)' eventData.CoreID)); " is 131.
Magic Number,SparkIO.WebServices,BaseAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\BaseAPI.cs,GetAccessToken,The following statement contains a magic number: foreach (TokenInfo token in deviceList) {  	if ((token.Client == sparkClientId) && (DateTime.Parse (token.ExpiresAt) - DateTime.Now).TotalMinutes > 60) {  		curToken = token.Token;  		break;  	}  }  
Magic Number,SparkIO.WebServices,BaseAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\BaseAPI.cs,GetAccessToken,The following statement contains a magic number: if ((token.Client == sparkClientId) && (DateTime.Parse (token.ExpiresAt) - DateTime.Now).TotalMinutes > 60) {  	curToken = token.Token;  	break;  }  
Magic Number,SparkIO.WebServices,TinkerAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\TinkerAPI.cs,AnalogWrite,The following statement contains a magic number: if (val > 255)  	val = 255;  
Magic Number,SparkIO.WebServices,TinkerAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\TinkerAPI.cs,AnalogWrite,The following statement contains a magic number: if (val > 255)  	val = 255;  
Magic Number,SparkIO.WebServices,TinkerAPI,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\TinkerAPI.cs,AnalogWrite,The following statement contains a magic number: val = 255;  
Magic Number,SparkIO.WebServices.Internal,EventStreamEmitter,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\Internal\EventStreamEmitter.cs,DoWork,The following statement contains a magic number: while (!_shouldStop) {  	// wait for signal  	emitterWaitHandle.WaitOne ();  	if (queue.TryDequeue (out line))// we have lines of events  	 {  		if (line.Length >= 6)// valid data line is atleast 6 long  		 {  			type = line.Substring (0' line.IndexOf (' '));  			// what type of line is it?  			line = line.Substring (line.IndexOf (' ') + 1);  			if (type == "data:" && eventName != string.Empty) {  				if (filter && filterEventName != eventName) {  				}  				else {  					// Get the data from the line  					MemoryStream ms = new MemoryStream (Encoding.UTF8.GetBytes (line));  					objResponse = jsonSerializerData.ReadObject (ms);  					eventData = objResponse as EventDataVar;  					// raise the event  					//if (!_shouldStop)  					//{  					raiseEvent (new SSEEventArgs (eventName' eventData.Data' eventData.TTL' DateTime.Parse (eventData.PublishedAt)' eventData.CoreID));  					//}  					// reset the event name  					eventName = string.Empty;  				}  			}  			else if (type == "event:" && eventName == string.Empty) {  				eventName = line;  			}  			else {  				eventName = string.Empty;  			}  		}  	}  }  
Magic Number,SparkIO.WebServices.Internal,EventStreamEmitter,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\Internal\EventStreamEmitter.cs,DoWork,The following statement contains a magic number: if (queue.TryDequeue (out line))// we have lines of events   {  	if (line.Length >= 6)// valid data line is atleast 6 long  	 {  		type = line.Substring (0' line.IndexOf (' '));  		// what type of line is it?  		line = line.Substring (line.IndexOf (' ') + 1);  		if (type == "data:" && eventName != string.Empty) {  			if (filter && filterEventName != eventName) {  			}  			else {  				// Get the data from the line  				MemoryStream ms = new MemoryStream (Encoding.UTF8.GetBytes (line));  				objResponse = jsonSerializerData.ReadObject (ms);  				eventData = objResponse as EventDataVar;  				// raise the event  				//if (!_shouldStop)  				//{  				raiseEvent (new SSEEventArgs (eventName' eventData.Data' eventData.TTL' DateTime.Parse (eventData.PublishedAt)' eventData.CoreID));  				//}  				// reset the event name  				eventName = string.Empty;  			}  		}  		else if (type == "event:" && eventName == string.Empty) {  			eventName = line;  		}  		else {  			eventName = string.Empty;  		}  	}  }  
Magic Number,SparkIO.WebServices.Internal,EventStreamEmitter,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\Internal\EventStreamEmitter.cs,DoWork,The following statement contains a magic number: if (line.Length >= 6)// valid data line is atleast 6 long   {  	type = line.Substring (0' line.IndexOf (' '));  	// what type of line is it?  	line = line.Substring (line.IndexOf (' ') + 1);  	if (type == "data:" && eventName != string.Empty) {  		if (filter && filterEventName != eventName) {  		}  		else {  			// Get the data from the line  			MemoryStream ms = new MemoryStream (Encoding.UTF8.GetBytes (line));  			objResponse = jsonSerializerData.ReadObject (ms);  			eventData = objResponse as EventDataVar;  			// raise the event  			//if (!_shouldStop)  			//{  			raiseEvent (new SSEEventArgs (eventName' eventData.Data' eventData.TTL' DateTime.Parse (eventData.PublishedAt)' eventData.CoreID));  			//}  			// reset the event name  			eventName = string.Empty;  		}  	}  	else if (type == "event:" && eventName == string.Empty) {  		eventName = line;  	}  	else {  		eventName = string.Empty;  	}  }  
Magic Number,SparkIO.WebServices.Internal,EventStreamReader,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\Internal\EventStreamReader.cs,DoWork,The following statement contains a magic number: while (!_shouldStop & stream.CanRead) {  	len = stream.Read (buffer' 0' 50);  	if (len > 0) {  		var text = encoder.GetString (buffer' 0' len);  		endingN = text.Substring (text.Length - 1' 1) == "\n";  		string[] lines = text.Trim ().Split ('\n');  		for (i = 1; i <= lines.Length; i++) {  			if (i == 1)// special handling for first line  			 {  				if (lines.Length == 1 && !endingN)// single line read with no /n - orphan  				 {  					// store for later sending  					orphanLine.Append (lines [i - 1]);  				}  				else {  					// 1st of many lines so we are sending it  					if (orphanLine.Length > 0) {  						// if we have an oprhan from previous reads - prepend it to current line and send  						queue.Enqueue (orphanLine.Append (lines [i - 1]).ToString ());  						orphanLine.Clear ();  						emitterWaitHandle.Set ();  					}  					else// no previous orphans so just send the current line  					 {  						queue.Enqueue (lines [i - 1]);  						emitterWaitHandle.Set ();  					}  				}  			}  			else if (i == lines.Length)// special handling for last line when at last one line prior  			 {  				if (!endingN) {  					// orphan last line - save it for the next lines  					orphanLine.Append (lines [i - 1]);  				}  				else// complete last line - send and signal  				 {  					queue.Enqueue (lines [i - 1]);  					emitterWaitHandle.Set ();  				}  			}  			else {  				// not the first or last line - just send and signal  				queue.Enqueue (lines [i - 1]);  				emitterWaitHandle.Set ();  			}  		}  	}  	else// nothing in the stream  	 {  		// let's sleep a bit to give the CPU a break  		Thread.Sleep (sleepTimeMs);  	}  }  
Magic Number,SparkIO.WebServices.Internal,EventStreamReader,C:\repos\chrisloris_SparkIODotNet\SparkIODotNet Solution\WebServices\Internal\EventStreamReader.cs,DoWork,The following statement contains a magic number: len = stream.Read (buffer' 0' 50);  
