Implementation smell,Namespace,Class,File,Method,Description
Complex Method,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,AnalyseRecentGames,Cyclomatic complexity of the method is 14
Complex Method,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,RankedStatistics,Cyclomatic complexity of the method is 8
Complex Method,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,AnalyseEnvironmentalRating,Cyclomatic complexity of the method is 19
Long Statement,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,InitialiseCommandDictionary,The length of the statement  "				{"profile"' new CommandInformation(1' AnalyseSummonerProfile' "<name>"' "Retrieve general information about the summoner with the specified name")}' " is 148.
Long Statement,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,InitialiseCommandDictionary,The length of the statement  "				{"ranked-all"' new CommandInformation(1' (List<string> arguments) => RankedStatistics(arguments' false' false)' "<name>"' "Analyse the ranked statistics of the summoner given")}' " is 178.
Long Statement,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,InitialiseCommandDictionary,The length of the statement  "				{"ranked-all-games"' new CommandInformation(1' (List<string> arguments) => RankedStatistics(arguments' true' false)' "<name>"' "Analyse the ranked statistics of the summoner given' sort by win/loss differnece")}' " is 212.
Long Statement,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,InitialiseCommandDictionary,The length of the statement  "				{"current"' new CommandInformation(1' (List<string> arguments) => RankedStatistics(arguments' false' true)' "<name>"' "Analyse the current ranked statistics of the summoner given")}' " is 182.
Long Statement,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,InitialiseCommandDictionary,The length of the statement  "				{"current-games"' new CommandInformation(1' (List<string> arguments) => RankedStatistics(arguments' true' true)' "<name>"' "Analyse the current ranked statistics of the summoner given' sort by win/loss differnece")}' " is 216.
Long Statement,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,InitialiseCommandDictionary,The length of the statement  "				{"normals"' new CommandInformation(-1' (List<string> arguments) => AnalyseEnvironmentalRating(arguments' false' "CURRENT"' false)' "<name> <summoners names to exclude due to premades>"' "Analyse the ranked leagues of other players in normal games in the recent match history of the summoner given")}' " is 300.
Long Statement,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,InitialiseCommandDictionary,The length of the statement  "				{"ranked"' new CommandInformation(-1' (List<string> arguments) => AnalyseEnvironmentalRating(arguments' true' "CURRENT"' false)' "<name> <summoners names to exclude due to premades>"' "Analyse the ranked leagues of other players in ranked games in the recent match history of the summoner given")}' " is 298.
Long Statement,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,InitialiseCommandDictionary,The length of the statement  "				{"last-normal"' new CommandInformation(-1' (List<string> arguments) => AnalyseEnvironmentalRating(arguments' false' "CURRENT"' true)' "<name> <summoners names to exclude due to premades>"' "Analyse the ranked leagues of other players in the last normal game in the recent match history of the summoner given")}' " is 311.
Long Statement,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,InitialiseCommandDictionary,The length of the statement  "				{"last-ranked"' new CommandInformation(-1' (List<string> arguments) => AnalyseEnvironmentalRating(arguments' true' "CURRENT"' true)' "<name> <summoners names to exclude due to premades>"' "Analyse the ranked leagues of other players in the last ranked game in the recent match history of the summoner given")}' " is 310.
Long Statement,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,InitialiseCommandDictionary,The length of the statement  "				{"summoner-id"' new CommandInformation(1' AnalyseSummonerId' "<ID>"' "Retrieve the name and the account ID of a summoner based on their summoner ID")}' " is 151.
Long Statement,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,AnalyseSummonerProfile,The length of the statement  "				Output.WriteLine("League ({0}): {1} {2}' {3} LP ({4})"' league.queue' league.tier' league.requestorsRank' leaguePoints == null ? "?" : leaguePoints.Value.ToString()' league.name); " is 179.
Long Statement,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,AnalyseRecentGames,The length of the statement  "				Console.WriteLine("' {0}' {1}/{2}/{3}"' GetChampionName(stats.championId)' result.Kills' result.Deaths' result.Assists); " is 120.
Long Statement,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,RankedStatistics,The length of the statement  "					Output.WriteLine("{0}: {1} {2}' {3}/{4}/{5} ({6})"' entry.Name' entry.Games' entry.Games == 1 ? "game" : "games"' Round(entry.KillsPerGame())' Round(entry.DeathsPerGame())' Round(entry.AssistsPerGame())' Round(entry.KillsAndAssistsPerDeath())); " is 244.
Long Statement,LibOfLegendsExample,Program,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\Program.cs,Main,The length of the statement  "			ConnectionProfile connectionData = new ConnectionProfile(configuration.Authentication' regionData' configuration.Proxy' user' password); " is 136.
Complex Conditional,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,AnalyseEnvironmentalRating,The conditional expression  "(stats.gameType == "PRACTICE_GAME") ||  					(!ranked && stats.queueType != "NORMAL") ||  					(ranked && stats.queueType != "RANKED_SOLO_5x5")"  is complex.
Magic Number,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,AnalayseStatistics,The following statement contains a magic number: foreach (var summary in summaries)  			{  				if (summary.playerStatSummaryType == target)  				{  					int games = summary.wins + summary.losses;  					if (games == 0)  						continue;  					Output.Write("{0}: "' description);  					//Check for the unranked/Dominion bogus value signature  					if (summary.rating != 400 && summary.maxRating != 0)  						Output.Write("{0} (top {1})' "' summary.rating' summary.maxRating);  					Output.Write("{0} wins"' summary.wins);  					if (summary.leaves > 0)  						Output.Write("' left {0} {1}"' summary.leaves' (summary.leaves > 1 ? "games" : "game"));  					Output.WriteLine("");  					return;  				}  			}
Magic Number,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,AnalyseEnvironmentalRating,The following statement contains a magic number: LeagueRating median = ratings[ratings.Count / 2 + ratings.Count % 2];
Magic Number,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,AnalyseEnvironmentalRating,The following statement contains a magic number: LeagueRating median = ratings[ratings.Count / 2 + ratings.Count % 2];
Magic Number,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,AnalyseEnvironmentalRating,The following statement contains a magic number: int playerCount = 9 * gameCount;
Magic Number,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,AnalyseEnvironmentalRating,The following statement contains a magic number: Console.WriteLine("Ranked players: {0}/{1} ({2:F1}%)"' rankedPlayers' playerCount' rankedRatio * 100);
Magic Number,LibOfLegendsExample,LegendaryPrompt,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,PrintRatings,The following statement contains a magic number: int median = ratings[ratings.Count / 2];
Magic Number,LibOfLegendsExample,LeagueRating,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,LeagueRating,The following statement contains a magic number: switch (tierString)  				{  					case "BRONZE":  						Tier = 1;  						Colour = ConsoleColor.Gray;  						break;    					case "SILVER":  						Tier = 2;  						Colour = ConsoleColor.DarkGray;  						break;    					case "GOLD":  						Tier = 3;  						Colour = ConsoleColor.DarkYellow;  						break;    					case "PLATINUM":  						Tier = 4;  						Colour = ConsoleColor.DarkCyan;  						break;    					case "DIAMOND":  						Tier = 5;  						Colour = ConsoleColor.White;  						break;    					case "CHALLENGER":  						Tier = 6;  						Colour = ConsoleColor.Yellow;  						break;    					default:  						throw new Exception(string.Format("Unknown tier: {0}"' tierString));  				}
Magic Number,LibOfLegendsExample,LeagueRating,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,LeagueRating,The following statement contains a magic number: switch (tierString)  				{  					case "BRONZE":  						Tier = 1;  						Colour = ConsoleColor.Gray;  						break;    					case "SILVER":  						Tier = 2;  						Colour = ConsoleColor.DarkGray;  						break;    					case "GOLD":  						Tier = 3;  						Colour = ConsoleColor.DarkYellow;  						break;    					case "PLATINUM":  						Tier = 4;  						Colour = ConsoleColor.DarkCyan;  						break;    					case "DIAMOND":  						Tier = 5;  						Colour = ConsoleColor.White;  						break;    					case "CHALLENGER":  						Tier = 6;  						Colour = ConsoleColor.Yellow;  						break;    					default:  						throw new Exception(string.Format("Unknown tier: {0}"' tierString));  				}
Magic Number,LibOfLegendsExample,LeagueRating,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,LeagueRating,The following statement contains a magic number: switch (tierString)  				{  					case "BRONZE":  						Tier = 1;  						Colour = ConsoleColor.Gray;  						break;    					case "SILVER":  						Tier = 2;  						Colour = ConsoleColor.DarkGray;  						break;    					case "GOLD":  						Tier = 3;  						Colour = ConsoleColor.DarkYellow;  						break;    					case "PLATINUM":  						Tier = 4;  						Colour = ConsoleColor.DarkCyan;  						break;    					case "DIAMOND":  						Tier = 5;  						Colour = ConsoleColor.White;  						break;    					case "CHALLENGER":  						Tier = 6;  						Colour = ConsoleColor.Yellow;  						break;    					default:  						throw new Exception(string.Format("Unknown tier: {0}"' tierString));  				}
Magic Number,LibOfLegendsExample,LeagueRating,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,LeagueRating,The following statement contains a magic number: switch (tierString)  				{  					case "BRONZE":  						Tier = 1;  						Colour = ConsoleColor.Gray;  						break;    					case "SILVER":  						Tier = 2;  						Colour = ConsoleColor.DarkGray;  						break;    					case "GOLD":  						Tier = 3;  						Colour = ConsoleColor.DarkYellow;  						break;    					case "PLATINUM":  						Tier = 4;  						Colour = ConsoleColor.DarkCyan;  						break;    					case "DIAMOND":  						Tier = 5;  						Colour = ConsoleColor.White;  						break;    					case "CHALLENGER":  						Tier = 6;  						Colour = ConsoleColor.Yellow;  						break;    					default:  						throw new Exception(string.Format("Unknown tier: {0}"' tierString));  				}
Magic Number,LibOfLegendsExample,LeagueRating,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,LeagueRating,The following statement contains a magic number: switch (tierString)  				{  					case "BRONZE":  						Tier = 1;  						Colour = ConsoleColor.Gray;  						break;    					case "SILVER":  						Tier = 2;  						Colour = ConsoleColor.DarkGray;  						break;    					case "GOLD":  						Tier = 3;  						Colour = ConsoleColor.DarkYellow;  						break;    					case "PLATINUM":  						Tier = 4;  						Colour = ConsoleColor.DarkCyan;  						break;    					case "DIAMOND":  						Tier = 5;  						Colour = ConsoleColor.White;  						break;    					case "CHALLENGER":  						Tier = 6;  						Colour = ConsoleColor.Yellow;  						break;    					default:  						throw new Exception(string.Format("Unknown tier: {0}"' tierString));  				}
Magic Number,LibOfLegendsExample,LeagueRating,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,LeagueRating,The following statement contains a magic number: switch (rankString)  				{  					case "I":  						Rank = 1;  						break;    					case "II":  						Rank = 2;  						break;    					case "III":  						Rank = 3;  						break;    					case "IV":  						Rank = 4;  						break;    					case "V":  						Rank = 5;  						break;    					default:  						throw new Exception(string.Format("Unknown rank: {0}"' rankString));  				}
Magic Number,LibOfLegendsExample,LeagueRating,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,LeagueRating,The following statement contains a magic number: switch (rankString)  				{  					case "I":  						Rank = 1;  						break;    					case "II":  						Rank = 2;  						break;    					case "III":  						Rank = 3;  						break;    					case "IV":  						Rank = 4;  						break;    					case "V":  						Rank = 5;  						break;    					default:  						throw new Exception(string.Format("Unknown rank: {0}"' rankString));  				}
Magic Number,LibOfLegendsExample,LeagueRating,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,LeagueRating,The following statement contains a magic number: switch (rankString)  				{  					case "I":  						Rank = 1;  						break;    					case "II":  						Rank = 2;  						break;    					case "III":  						Rank = 3;  						break;    					case "IV":  						Rank = 4;  						break;    					case "V":  						Rank = 5;  						break;    					default:  						throw new Exception(string.Format("Unknown rank: {0}"' rankString));  				}
Magic Number,LibOfLegendsExample,LeagueRating,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,LeagueRating,The following statement contains a magic number: switch (rankString)  				{  					case "I":  						Rank = 1;  						break;    					case "II":  						Rank = 2;  						break;    					case "III":  						Rank = 3;  						break;    					case "IV":  						Rank = 4;  						break;    					case "V":  						Rank = 5;  						break;    					default:  						throw new Exception(string.Format("Unknown rank: {0}"' rankString));  				}
Magic Number,LibOfLegendsExample,LeagueRating,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,GetRating,The following statement contains a magic number: return Tier * 5 + 5 - Rank;
Magic Number,LibOfLegendsExample,LeagueRating,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\LegendaryPrompt.cs,GetRating,The following statement contains a magic number: return Tier * 5 + 5 - Rank;
Magic Number,LibOfLegendsExample,Program,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\Program.cs,Main,The following statement contains a magic number: if (arguments.Length != 3)  			{  				Console.WriteLine("Usage:");  				Console.WriteLine(Environment.GetCommandLineArgs()[0] + " <server> <user> <password>");  				Console.Write("Servers available:");  				foreach (ServerProfile profile in configuration.ServerProfiles)  					Console.Write(" " + profile.Abbreviation);  				Console.WriteLine("");  				return;  			}
Magic Number,LibOfLegendsExample,Program,C:\repos\epicvrvs_LibOfLegends\LibOfLegendsExample\Program.cs,Main,The following statement contains a magic number: string password = arguments[2];
