Implementation smell,Namespace,Class,File,Method,Description
Long Method,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The method has 217 lines of code.
Long Method,EventStore.Projections.Core.Services.Processing,CheckpointTag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The method has 140 lines of code.
Long Method,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,PublishCommand,The method has 124 lines of code.
Complex Method,EventStore.Projections.Core.Services.Management,ManagedProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,SetState,Cyclomatic complexity of the method is 14
Complex Method,EventStore.Projections.Core.Services.Management,ProjectionManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,OnProjectionsListReadCompleted,Cyclomatic complexity of the method is 10
Complex Method,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,Cyclomatic complexity of the method is 25
Complex Method,EventStore.Projections.Core.Services.Processing,AllStreamsCatalogEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\AllStreamsCatalogEventReader.cs,Handle,Cyclomatic complexity of the method is 10
Complex Method,EventStore.Projections.Core.Services.Processing,ByStreamCatalogEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ByStreamCatalogEventReader.cs,ReadDataStreamCompleted,Cyclomatic complexity of the method is 9
Complex Method,EventStore.Projections.Core.Services.Processing,CheckpointTag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,Equals,Cyclomatic complexity of the method is 11
Complex Method,EventStore.Projections.Core.Services.Processing,CheckpointTag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,ToString,Cyclomatic complexity of the method is 10
Complex Method,EventStore.Projections.Core.Services.Processing,CheckpointTag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,WriteTo,Cyclomatic complexity of the method is 12
Complex Method,EventStore.Projections.Core.Services.Processing,CheckpointTag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,Cyclomatic complexity of the method is 21
Complex Method,EventStore.Projections.Core.Services.Processing,CheckpointTagExtensions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTagExtensions.cs,ParseCheckpointTagCorrelationId,Cyclomatic complexity of the method is 9
Complex Method,EventStore.Projections.Core.Services.Processing,CoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,GoToState,Cyclomatic complexity of the method is 26
Complex Method,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointWriter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointWriter.cs,WriteCheckpointEventCompleted,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,EmittedStream,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,EmitEvents,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,HandleWriteEventsCompleted,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,ReadStreamEventsBackwardCompleted,Cyclomatic complexity of the method is 10
Complex Method,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,HandleMetadataWriteCompleted,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,SubmitWriteEvents,Cyclomatic complexity of the method is 9
Complex Method,EventStore.Projections.Core.Services.Processing,IndexBased,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,Handle,Cyclomatic complexity of the method is 12
Complex Method,EventStore.Projections.Core.Services.Processing,IndexBased,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,ReadIndexCheckpointStreamCompleted,Cyclomatic complexity of the method is 11
Complex Method,EventStore.Projections.Core.Services.Processing,IndexBased,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,ProcessBuffers,Cyclomatic complexity of the method is 10
Complex Method,EventStore.Projections.Core.Services.Processing,TfBased,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,Handle,Cyclomatic complexity of the method is 14
Complex Method,EventStore.Projections.Core.Services.Processing,EventByTypeIndexPositionTagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexPositionTagger.cs,AdjustTag,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Projections.Core.Services.Processing,ExternallyFedByStreamEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ExternallyFedByStreamEventReader.cs,ReadDataStreamCompleted,Cyclomatic complexity of the method is 9
Complex Method,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,Handle,Cyclomatic complexity of the method is 12
Complex Method,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,ProcessBuffers,Cyclomatic complexity of the method is 13
Complex Method,EventStore.Projections.Core.Services.Processing,MultiStreamPositionTagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamPositionTagger.cs,AdjustTag,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Projections.Core.Services.Processing,PreparePositionTagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PreparePositionTagger.cs,AdjustTag,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,PublishCommand,Cyclomatic complexity of the method is 14
Complex Method,EventStore.Projections.Core.Services.Processing,ReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,Create,Cyclomatic complexity of the method is 16
Complex Method,EventStore.Projections.Core.Services.Processing,ReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreateEventFilter,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Projections.Core.Services.Processing,ReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePositionTagger,Cyclomatic complexity of the method is 9
Complex Method,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,ProcessOne,Cyclomatic complexity of the method is 11
Complex Method,EventStore.Projections.Core.Services.Processing,StreamEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,Handle,Cyclomatic complexity of the method is 14
Complex Method,EventStore.Projections.Core.Services.Processing,StreamPositionTagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamPositionTagger.cs,AdjustTag,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Projections.Core.Services.Processing,TransactionFileEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFileEventReader.cs,Handle,Cyclomatic complexity of the method is 10
Complex Method,EventStore.Projections.Core.Services.Processing,TransactionFilePositionTagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFilePositionTagger.cs,AdjustTag,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Projections.Core.Services.Processing,WorkItem,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WorkItem.cs,Process,Cyclomatic complexity of the method is 9
Complex Method,EventStore.Projections.Core.Services.Processing,WriteQueryResultProjectionProcessingPhaseBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WriteQueryResultProjectionProcessingPhaseBase.cs,WriteQueryResultProjectionProcessingPhaseBase,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Projections.Core.Standard,StreamCategoryExtractor,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Standard\StreamCategoryExtractor.cs,GetExtractor,Cyclomatic complexity of the method is 9
Complex Method,EventStore.Projections.Core.v8,QueryScript,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\v8\QueryScript.cs,CommandHandlerRegisteredCallback,Cyclomatic complexity of the method is 14
Long Parameter List,EventStore.Projections.Core.EventReaders.Feeds,FeedReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\EventReaders\Feeds\FeedReader.cs,FeedReader,The method has 8 parameters. Parameters: subscriptionDispatcher' user' querySource' fromPosition' maxEvents' requestCorrelationId' replyEnvelope' timeProvider
Long Parameter List,EventStore.Projections.Core.Messages,CreateAndPrepare,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\CoreProjectionManagementMessage.cs,CreateAndPrepare,The method has 7 parameters. Parameters: projectionId' workerId' name' version' config' handlerType' query
Long Parameter List,EventStore.Projections.Core.Messages,CreateAndPrepareSlave,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\CoreProjectionManagementMessage.cs,CreateAndPrepareSlave,The method has 9 parameters. Parameters: projectionId' workerId' name' version' config' masterMasterWorkerId' masterCoreProjectionId' handlerType' query
Long Parameter List,EventStore.Projections.Core.Messages,CreatePrepared,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\CoreProjectionManagementMessage.cs,CreatePrepared,The method has 8 parameters. Parameters: projectionId' workerId' name' version' config' sourceDefinition' handlerType' query
Long Parameter List,EventStore.Projections.Core.Messages,StateReport,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\CoreProjectionStatusMessage.cs,StateReport,The method has 5 parameters. Parameters: correlationId' projectionId' partition' state' position
Long Parameter List,EventStore.Projections.Core.Messages,ResultReport,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\CoreProjectionStatusMessage.cs,ResultReport,The method has 5 parameters. Parameters: correlationId' projectionId' partition' result' position
Long Parameter List,EventStore.Projections.Core.Messages,CheckpointSuggested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,CheckpointSuggested,The method has 5 parameters. Parameters: subscriptionId' checkpointTag' progress' subscriptionMessageSequenceNumber' source
Long Parameter List,EventStore.Projections.Core.Messages,ProgressChanged,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,ProgressChanged,The method has 5 parameters. Parameters: subscriptionId' checkpointTag' progress' subscriptionMessageSequenceNumber' source
Long Parameter List,EventStore.Projections.Core.Messages,SubscriptionStarted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,SubscriptionStarted,The method has 5 parameters. Parameters: subscriptionId' checkpointTag' startingLastCommitPosition' subscriptionMessageSequenceNumber' source
Long Parameter List,EventStore.Projections.Core.Messages,NotAuthorized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,NotAuthorized,The method has 5 parameters. Parameters: subscriptionId' checkpointTag' progress' subscriptionMessageSequenceNumber' source
Long Parameter List,EventStore.Projections.Core.Messages,PartitionEofReached,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,PartitionEofReached,The method has 5 parameters. Parameters: subscriptionId' checkpointTag' partition' subscriptionMessageSequenceNumber' source
Long Parameter List,EventStore.Projections.Core.Messages,PartitionMeasured,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,PartitionMeasured,The method has 5 parameters. Parameters: subscriptionId' partition' size' subscriptionMessageSequenceNumber' source
Long Parameter List,EventStore.Projections.Core.Messages,PartitionMeasured,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,PartitionMeasured,The method has 5 parameters. Parameters: workerId' masterProjectionId' subscriptionId' partition' size
Long Parameter List,EventStore.Projections.Core.Messages,PartitionDeleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,PartitionDeleted,The method has 5 parameters. Parameters: subscriptionId' checkpointTag' partition' subscriptionMessageSequenceNumber' source
Long Parameter List,EventStore.Projections.Core.Messages,CommittedEventReceived,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,CommittedEventReceived,The method has 7 parameters. Parameters: subscriptionId' checkpointTag' eventCategory' data' progress' subscriptionMessageSequenceNumber' source
Long Parameter List,EventStore.Projections.Core.Messages,CommittedEventReceived,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,CommittedEventReceived,The method has 6 parameters. Parameters: subscriptionId' phase' eventCategory' data' progress' subscriptionMessageSequenceNumber
Long Parameter List,EventStore.Projections.Core.Messages,CommittedEventReceived,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,FromCommittedEventDistributed,The method has 5 parameters. Parameters: message' checkpointTag' eventCategory' subscriptionId' subscriptionMessageSequenceNumber
Long Parameter List,EventStore.Projections.Core.Messages,EventReaderSubscriptionMessageBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,EventReaderSubscriptionMessageBase,The method has 5 parameters. Parameters: subscriptionId' checkpointTag' progress' subscriptionMessageSequenceNumber' source
Long Parameter List,EventStore.Projections.Core.Messages,Post,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ProjectionManagementMessage.cs,Post,The method has 11 parameters. Parameters: envelope' mode' name' runAs' handlerType' query' enabled' checkpointsEnabled' emitEnabled' trackEmittedStreams' enableRunAs
Long Parameter List,EventStore.Projections.Core.Messages,Post,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ProjectionManagementMessage.cs,Post,The method has 11 parameters. Parameters: envelope' mode' name' runAs' handlerType' query' enabled' checkpointsEnabled' emitEnabled' trackEmittedStreams' enableRunAs
Long Parameter List,EventStore.Projections.Core.Messages,UpdateQuery,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ProjectionManagementMessage.cs,UpdateQuery,The method has 6 parameters. Parameters: envelope' name' runAs' handlerType' query' emitEnabled
Long Parameter List,EventStore.Projections.Core.Messages,Delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ProjectionManagementMessage.cs,Delete,The method has 6 parameters. Parameters: envelope' name' runAs' deleteCheckpointStream' deleteStateStream' deleteEmittedStreams
Long Parameter List,EventStore.Projections.Core.Messages,UpdateConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ProjectionManagementMessage.cs,UpdateConfig,The method has 11 parameters. Parameters: envelope' name' emitEnabled' trackEmittedStreams' checkpointAfterMs' checkpointHandledThreshold' checkpointUnhandledBytesThreshold' pendingEventsThreshold' maxWriteBatchLength' maxAllowedWritesInFlight' runAs
Long Parameter List,EventStore.Projections.Core.Messages,StartSlaveProjections,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ProjectionManagementMessage.cs,StartSlaveProjections,The method has 6 parameters. Parameters: envelope' runAs' name' slaveProjections' masterWorkerId' masterCorrelationId
Long Parameter List,EventStore.Projections.Core.Messages,RunAs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ProjectionManagementMessage.cs,ValidateRunAs,The method has 5 parameters. Parameters: mode' readWrite' existingRunAs' message' replace
Long Parameter List,EventStore.Projections.Core.Messages,ProjectionState,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ProjectionManagementMessage.cs,ProjectionState,The method has 5 parameters. Parameters: name' partition' state' position' exception
Long Parameter List,EventStore.Projections.Core.Messages,ProjectionResult,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ProjectionManagementMessage.cs,ProjectionResult,The method has 5 parameters. Parameters: name' partition' result' position' exception
Long Parameter List,EventStore.Projections.Core.Messages,ProjectionQuery,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ProjectionManagementMessage.cs,ProjectionQuery,The method has 5 parameters. Parameters: name' query' emitEnabled' definition' outputConfig
Long Parameter List,EventStore.Projections.Core.Messages,ProjectionConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ProjectionManagementMessage.cs,ProjectionConfig,The method has 8 parameters. Parameters: emitEnabled' trackEmittedStreams' checkpointAfterMs' checkpointHandledThreshold' checkpointUnhandledBytesThreshold' pendingEventsThreshold' maxWriteBatchLength' maxAllowedWritesInFlight
Long Parameter List,EventStore.Projections.Core.Messages,SpoolStreamReading,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ReaderSubscriptionManagement.cs,SpoolStreamReading,The method has 5 parameters. Parameters: workerId' subscriptionId' streamId' catalogSequenceNumber' limitingCommitPosition
Long Parameter List,EventStore.Projections.Core.Messages,EventReaderPartitionDeleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ReaderSubscriptionMessage.cs,EventReaderPartitionDeleted,The method has 9 parameters. Parameters: correlationId' partition' lastEventNumber' deleteLinkOrEventPosition' deleteEventOrLinkTargetPosition' positionStreamId' positionEventNumber' preTagged' source
Long Parameter List,EventStore.Projections.Core.Messages,CommittedEventDistributed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ReaderSubscriptionMessage.cs,Sample,The method has 15 parameters. Parameters: correlationId' position' originalPosition' positionStreamId' positionSequenceNumber' eventStreamId' eventSequenceNumber' resolvedLinkTo' eventId' eventType' isJson' data' metadata' safeTransactionFileReaderJoinPosition' progress
Long Parameter List,EventStore.Projections.Core.Messages,CommittedEventDistributed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ReaderSubscriptionMessage.cs,Sample,The method has 11 parameters. Parameters: correlationId' position' eventStreamId' eventSequenceNumber' resolvedLinkTo' eventId' eventType' isJson' data' metadata' timestamp
Long Parameter List,EventStore.Projections.Core.Messages,CommittedEventDistributed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ReaderSubscriptionMessage.cs,CommittedEventDistributed,The method has 6 parameters. Parameters: correlationId' data' safeTransactionFileReaderJoinPosition' progress' source' preTagged
Long Parameter List,EventStore.Projections.Core.Messages,Definition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\SlaveProjectionDefinitions.cs,Definition,The method has 10 parameters. Parameters: name' handlerType' query' requestedNumber' mode' emitEnabled' checkpointsEnabled' enableRunAs' trackEmittedStreams' runAs1
Long Parameter List,EventStore.Projections.Core.Messages.EventReaders.Feeds,ReadPage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaders\Feeds\FeedReaderMessage.cs,ReadPage,The method has 6 parameters. Parameters: correlationId' envelope' user' querySource' fromPosition' maxEvents
Long Parameter List,ParallelQueryProcessingMessages,PartitionProcessingResult,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ParallelQueryProcessingMessages.cs,PartitionProcessingResult,The method has 7 parameters. Parameters: workerId' masterProjectionId' subscriptionId' partition' causedByGuid' position' result
Long Parameter List,ParallelQueryProcessingMessages,PartitionMeasured,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ParallelQueryProcessingMessages.cs,PartitionMeasured,The method has 5 parameters. Parameters: workerId' masterProjectionId' subscriptionId' partition' size
Long Parameter List,ParallelQueryProcessingMessages,PartitionProcessingResultOutput,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ParallelQueryProcessingOutputMessages.cs,PartitionProcessingResultOutput,The method has 7 parameters. Parameters: workerId' masterProjectionId' subscriptionId' partition' causedByGuid' position' result
Long Parameter List,ParallelQueryProcessingMessages,PartitionMeasuredOutput,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ParallelQueryProcessingOutputMessages.cs,PartitionMeasuredOutput,The method has 5 parameters. Parameters: workerId' masterProjectionId' subscriptionId' partition' size
Long Parameter List,EventStore.Projections.Core,ProjectionManagerNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionManagerNode.cs,SubscribeMainBus,The method has 6 parameters. Parameters: mainBus' projectionManager' runProjections' projectionManagerResponseReader' ioDispatcher' projectionManagerCommandWriter
Long Parameter List,EventStore.Projections.Core,ProjectionsStandardComponents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionsStandardComponents.cs,ProjectionsStandardComponents,The method has 6 parameters. Parameters: projectionWorkerThreadCount' runProjections' masterOutputBus' masterInputQueue' masterMainBus' faultOutOfOrderProjections
Long Parameter List,EventStore.Projections.Core,ProjectionsSubsystem,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionsSubsystem.cs,ProjectionsSubsystem,The method has 5 parameters. Parameters: projectionWorkerThreadCount' runProjections' startStandardProjections' projectionQueryExpiry' faultOutOfOrderProjections
Long Parameter List,EventStore.Projections.Core,ProjectionWorkerNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionWorkerNode.cs,ProjectionWorkerNode,The method has 7 parameters. Parameters: workerId' db' inputQueue' timeProvider' timeoutScheduler' runProjections' faultOutOfOrderProjections
Long Parameter List,EventStore.Projections.Core.Services,IProjectionStateHandler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\IProjectionStateHandler.cs,ProcessEvent,The method has 7 parameters. Parameters: partition' eventPosition' category' data' newState' newSharedState' emittedEvents
Long Parameter List,EventStore.Projections.Core.Services,ProjectionStateHandlerTestExtensions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\IProjectionStateHandler.cs,ProcessEvent,The method has 13 parameters. Parameters: self' partition' eventPosition' streamId' eventType' category' eventId' eventSequenceNumber' metadata' data' state' emittedEvents' isJson
Long Parameter List,EventStore.Projections.Core.Services,ProjectionStateHandlerTestExtensions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\IProjectionStateHandler.cs,ProcessEvent,The method has 14 parameters. Parameters: self' partition' eventPosition' streamId' eventType' category' eventId' eventSequenceNumber' metadata' data' state' sharedState' emittedEvents' isJson
Long Parameter List,EventStore.Projections.Core.Services,ProjectionConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionConfig.cs,ProjectionConfig,The method has 13 parameters. Parameters: runAs' checkpointHandledThreshold' checkpointUnhandledBytesThreshold' pendingEventsThreshold' maxWriteBatchLength' emitEventEnabled' checkpointsEnabled' createTempStreams' stopOnEof' isSlaveProjection' trackEmittedStreams' checkpointAfterMs' maximumAllowedWritesInFlight
Long Parameter List,EventStore.Projections.Core.Services.Management,ManagedProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,ManagedProjection,The method has 18 parameters. Parameters: workerId' id' projectionId' name' enabledToRun' logger' streamDispatcher' writeDispatcher' readDispatcher' output' timeProvider' getStateDispatcher' getResultDispatcher' ioDispatcher' projectionQueryExpiry' isSlave' slaveMasterWorkerId' slaveMasterCorrelationId
Long Parameter List,EventStore.Projections.Core.Services.Management,ProjectionCoreCoordinator,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionCoreCoordinator.cs,ProjectionCoreCoordinator,The method has 5 parameters. Parameters: runProjections' timeoutSchedulers' queues' publisher' publishEnvelope
Long Parameter List,EventStore.Projections.Core.Services.Management,ProjectionManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,ProjectionManager,The method has 8 parameters. Parameters: inputQueue' publisher' queueMap' timeProvider' runProjections' ioDispatcher' projectionQueryExpiry' initializeSystemProjections
Long Parameter List,EventStore.Projections.Core.Services.Management,ProjectionManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,CreateManagedProjectionInstance,The method has 7 parameters. Parameters: name' projectionId' projectionCorrelationId' workerID' isSlave' slaveMasterWorkerId' slaveMasterCorrelationId
Long Parameter List,EventStore.Projections.Core.Services.Management,ProjectionManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,BeginWriteProjectionRegistration,The method has 5 parameters. Parameters: name' eventId' completed' envelope' retryCount
Long Parameter List,EventStore.Projections.Core.Services.Management,ProjectionManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,WriteProjectionRegistrationCompleted,The method has 7 parameters. Parameters: message' eventId' completed' name' eventStreamId' replyEnvelope' retryCount
Long Parameter List,EventStore.Projections.Core.Services.Management,ProjectionManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,CINP,The method has 6 parameters. Parameters: message' group' resultArray' queueIndex' arrayIndex' completed
Long Parameter List,EventStore.Projections.Core.Services.Management,NewProjectionInitializer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,NewProjectionInitializer,The method has 12 parameters. Parameters: projectionId' name' projectionMode' handlerType' query' enabled' emitEnabled' checkpointsEnabled' enableRunAs' trackEmittedStreams' runAs' replyEnvelope
Long Parameter List,EventStore.Projections.Core.Services.Management,NewProjectionInitializer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,CreateAndInitializeNewProjection,The method has 7 parameters. Parameters: projectionManager' projectionCorrelationId' workerId' isSlave' slaveMasterWorkerId' slaveMasterCorrelationId' version
Long Parameter List,EventStore.Projections.Core.Services.Processing,AllStreamsCatalogEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\AllStreamsCatalogEventReader.cs,AllStreamsCatalogEventReader,The method has 7 parameters. Parameters: ioDispatcher' publisher' eventReaderCorrelationId' readAs' fromSequenceNumber' timeProvider' stopOnEof
Long Parameter List,EventStore.Projections.Core.Services.Processing,ByStreamCatalogEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ByStreamCatalogEventReader.cs,ByStreamCatalogEventReader,The method has 10 parameters. Parameters: publisher' eventReaderCorrelationId' readAs' ioDispatcher' catalogCatalogStreamName' catalogNextSequenceNumber' dataStreamName' dataNextSequenceNumber' limitingCommitPosition' resolveLinkTos
Long Parameter List,EventStore.Projections.Core.Services.Processing,CheckpointTag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,CheckpointTag,The method has 6 parameters. Parameters: phase' catalogStream' catalogPosition' dataStream' dataPosition' commitPosition
Long Parameter List,EventStore.Projections.Core.Services.Processing,CheckpointTag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromByStreamPosition,The method has 6 parameters. Parameters: phase' catalogStream' catalogPosition' dataStream' dataPosition' commitPosition
Long Parameter List,EventStore.Projections.Core.Services.Processing,ContinuousProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ContinuousProjectionProcessingStrategy.cs,ContinuousProjectionProcessingStrategy,The method has 7 parameters. Parameters: name' projectionVersion' stateHandler' projectionConfig' sourceDefinition' logger' subscriptionDispatcher
Long Parameter List,EventStore.Projections.Core.Services.Processing,ContinuousProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ContinuousProjectionProcessingStrategy.cs,CreateProjectionProcessingPhases,The method has 8 parameters. Parameters: publisher' inputQueue' projectionCorrelationId' namingBuilder' partitionStateCache' coreProjection' ioDispatcher' firstPhase
Long Parameter List,EventStore.Projections.Core.Services.Processing,CoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,CoreProjection,The method has 15 parameters. Parameters: projectionProcessingStrategy' version' projectionCorrelationId' inputQueue' workerId' runAs' publisher' ioDispatcher' subscriptionDispatcher' logger' namingBuilder' coreProjectionCheckpointWriter' partitionStateCache' effectiveProjectionName' timeProvider
Long Parameter List,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,CoreProjectionCheckpointManager,The method has 7 parameters. Parameters: publisher' projectionCorrelationId' projectionConfig' name' positionTagger' namingBuilder' usePersistentCheckpoints
Long Parameter List,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointReader.cs,CoreProjectionCheckpointReader,The method has 6 parameters. Parameters: publisher' projectionCorrelationId' ioDispatcher' projectionCheckpointStreamId' projectionVersion' useCheckpoints
Long Parameter List,EventStore.Projections.Core.Services.Processing,DefaultCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultCheckpointManager.cs,DefaultCheckpointManager,The method has 13 parameters. Parameters: publisher' projectionCorrelationId' projectionVersion' runAs' ioDispatcher' projectionConfig' name' positionTagger' namingBuilder' usePersistentCheckpoints' producesRunningResults' definesFold' coreProjectionCheckpointWriter
Long Parameter List,EventStore.Projections.Core.Services.Processing,DefaultCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultCheckpointManager.cs,ReadPartitionStream,The method has 5 parameters. Parameters: partitionStreamName' eventNumber' requestedStateCheckpointTag' loadCompleted' stateEventType
Long Parameter List,EventStore.Projections.Core.Services.Processing,DefaultCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultCheckpointManager.cs,OnLoadPartitionStateReadStreamEventsBackwardCompleted,The method has 5 parameters. Parameters: message' requestedStateCheckpointTag' loadCompleted' partitionStreamName' stateEventType
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,EventReaderBasedProjectionProcessingStrategy,The method has 6 parameters. Parameters: name' projectionVersion' projectionConfig' sourceDefinition' logger' subscriptionDispatcher
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateProcessingPhases,The method has 10 parameters. Parameters: publisher' inputQueue' projectionCorrelationId' partitionStateCache' updateStatistics' coreProjection' namingBuilder' timeProvider' ioDispatcher' coreProjectionCheckpointWriter
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateFirstProcessingPhase,The method has 12 parameters. Parameters: publisher' inputQueue' projectionCorrelationId' partitionStateCache' updateStatistics' coreProjection' subscriptionDispatcher' zeroCheckpointTag' checkpointManager' readerStrategy' resultWriter' emittedStreamsTracker
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateProjectionProcessingPhases,The method has 8 parameters. Parameters: publisher' inputQueue' projectionCorrelationId' namingBuilder' partitionStateCache' coreProjection' ioDispatcher' firstPhase
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateCheckpointManager,The method has 7 parameters. Parameters: projectionCorrelationId' publisher' ioDispatcher' namingBuilder' coreProjectionCheckpointWriter' definesFold' readerStrategy
Long Parameter List,EventStore.Projections.Core.Services.Processing,DefaultProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,DefaultProjectionProcessingStrategy,The method has 7 parameters. Parameters: name' projectionVersion' stateHandler' projectionConfig' sourceDefinition' logger' subscriptionDispatcher
Long Parameter List,EventStore.Projections.Core.Services.Processing,DefaultProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateFirstProcessingPhase,The method has 12 parameters. Parameters: publisher' inputQueue' projectionCorrelationId' partitionStateCache' updateStatistics' coreProjection' subscriptionDispatcher' zeroCheckpointTag' checkpointManager' readerStrategy' resultWriter' emittedStreamsTracker
Long Parameter List,EventStore.Projections.Core.Services.Processing,EmittedDataEvent,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedDataEvent.cs,EmittedDataEvent,The method has 9 parameters. Parameters: streamId' eventId' eventType' isJson' data' metadata' causedByTag' expectedTag' onCommitted
Long Parameter List,EventStore.Projections.Core.Services.Processing,EmittedEvent,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedEvent.cs,EmittedEvent,The method has 6 parameters. Parameters: streamId' eventId' eventType' causedByTag' expectedTag' onCommitted
Long Parameter List,EventStore.Projections.Core.Services.Processing,EmittedLinkTo,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedLinkTo.cs,EmittedLinkTo,The method has 6 parameters. Parameters: streamId' eventId' targetStreamId' causedByTag' expectedTag' onCommitted
Long Parameter List,EventStore.Projections.Core.Services.Processing,EmittedLinkTo,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedLinkTo.cs,EmittedLinkTo,The method has 7 parameters. Parameters: streamId' eventId' targetStreamId' targetEventNumber' causedByTag' expectedTag' originalStreamId
Long Parameter List,EventStore.Projections.Core.Services.Processing,EmittedLinkToWithRecategorization,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedLinkToWithRecategorization.cs,EmittedLinkToWithRecategorization,The method has 7 parameters. Parameters: streamId' eventId' target' causedByTag' expectedTag' originalStreamId' streamDeletedAt
Long Parameter List,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,EmittedStream,The method has 9 parameters. Parameters: streamId' writerConfiguration' projectionVersion' positionTagger' fromCheckpointPosition' publisher' ioDispatcher' readyHandler' noCheckpoints
Long Parameter List,EventStore.Projections.Core.Services.Processing,WriterConfiguration,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,WriterConfiguration,The method has 5 parameters. Parameters: writer' streamMetadata' writeAs' maxWriteBatchLength' logger
Long Parameter List,EventStore.Projections.Core.Services.Processing,EmittedStreamsWriter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsWriter.cs,WriteEvents,The method has 5 parameters. Parameters: streamId' expectedVersion' events' writeAs' complete
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventByTypeIndexEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,EventByTypeIndexEventReader,The method has 10 parameters. Parameters: publisher' eventReaderCorrelationId' readAs' eventTypes' includeDeletedStreamNotification' fromTfPosition' fromPositions' resolveLinkTos' timeProvider' stopOnEof
Long Parameter List,EventStore.Projections.Core.Services.Processing,TfBased,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,TfBased,The method has 5 parameters. Parameters: timeProvider' reader' fromTfPosition' publisher' readAs
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventProcessedResult,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessedResult.cs,EventProcessedResult,The method has 10 parameters. Parameters: partition' checkpointTag' oldState' newState' oldSharedState' newSharedState' emittedEvents' causedBy' correlationId' isPartitionTombstone
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,EventProcessingProjectionProcessingPhase,The method has 22 parameters. Parameters: coreProjection' projectionCorrelationId' publisher' inputQueue' projectionConfig' updateStatistics' projectionStateHandler' partitionStateCache' definesStateTransform' projectionName' logger' zeroCheckpointTag' coreProjectionCheckpointManager' statePartitionSelector' subscriptionDispatcher' readerStrategy' resultWriter' useCheckpoints' stopOnEof' isBiState' orderedPartitionProcessing' emittedStreamsTracker
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,SafeProcessEventByHandler,The method has 6 parameters. Parameters: partition' message' newState' newSharedState' projectionResult' emittedEvents
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,ProcessEventByHandler,The method has 6 parameters. Parameters: partition' message' newState' newSharedState' projectionResult' emittedEvents
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReader.cs,SendPartitionDeleted_WhenReadingDataStream,The method has 7 parameters. Parameters: partition' lastEventNumber' deletedLinkOrEventPosition' deletedEventPosition' positionStreamId' positionEventNumber' preTagged
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventReaderCoreService,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReaderCoreService.cs,EventReaderCoreService,The method has 6 parameters. Parameters: publisher' ioDispatcher' eventCacheSize' writerCheckpoint' runHeadingReader' faultOutOfOrderProjections
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventReorderingReaderSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReorderingReaderSubscription.cs,EventReorderingReaderSubscription,The method has 11 parameters. Parameters: publisher' subscriptionId' from' readerStrategy' timeProvider' checkpointUnhandledBytesThreshold' checkpointProcessedEventsThreshold' checkpointAfterMs' processingLagMs' stopOnEof' stopAfterNEvents
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,EventSubscriptionBasedProjectionProcessingPhase,The method has 19 parameters. Parameters: publisher' inputQueue' coreProjection' projectionCorrelationId' checkpointManager' projectionConfig' projectionName' logger' zeroCheckpointTag' partitionStateCache' resultWriter' updateStatistics' subscriptionDispatcher' readerStrategy' useCheckpoints' stopOnEof' orderedPartitionProcessing' isBiState' emittedStreamsTracker
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,InternalCommittedEventProcessed,The method has 5 parameters. Parameters: partition' message' emittedEvents' newPartitionState' newSharedPartitionState
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,EmitEofResult,The method has 5 parameters. Parameters: partition' resultBody' causedBy' causedByGuid' correlationId
Long Parameter List,EventStore.Projections.Core.Services.Processing,ExternallyFedByStreamEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ExternallyFedByStreamEventReader.cs,ExternallyFedByStreamEventReader,The method has 7 parameters. Parameters: publisher' eventReaderCorrelationId' readAs' ioDispatcher' limitingCommitPosition' timeProvider' resolveLinkTos
Long Parameter List,EventStore.Projections.Core.Services.Processing,ExternallyFedReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ExternallyFedReaderStrategy.cs,CreatePausedEventReader,The method has 6 parameters. Parameters: eventReaderId' publisher' ioDispatcher' checkpointTag' stopOnEof' stopAfterNEvents
Long Parameter List,EventStore.Projections.Core.Services.Processing,GetDataWorkItemBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\GetDataWorkItemBase.cs,GetDataWorkItemBase,The method has 5 parameters. Parameters: publisher' correlationId' projectionId' projection' partition
Long Parameter List,EventStore.Projections.Core.Services.Processing,GetResultWorkItem,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\GetResultWorkItem.cs,GetResultWorkItem,The method has 5 parameters. Parameters: publisher' correlationId' projectionId' projection' partition
Long Parameter List,EventStore.Projections.Core.Services.Processing,GetStateWorkItem,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\GetStateWorkItem.cs,GetStateWorkItem,The method has 5 parameters. Parameters: publisher' correlationId' projectionId' projection' partition
Long Parameter List,EventStore.Projections.Core.Services.Processing,IEmittedStreamsWriter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\IEmittedStreamsWriter.cs,WriteEvents,The method has 5 parameters. Parameters: streamId' expectedVersion' events' writeAs' complete
Long Parameter List,EventStore.Projections.Core.Services.Processing,IEventProcessingProjectionPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\IEventProcessingPhase.cs,EmitEofResult,The method has 5 parameters. Parameters: partition' resultBody' causedBy' causedByGuid' correlationId
Long Parameter List,EventStore.Projections.Core.Services.Processing,IReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\IReaderStrategy.cs,CreatePausedEventReader,The method has 6 parameters. Parameters: eventReaderId' publisher' ioDispatcher' checkpointTag' stopOnEof' stopAfterNEvents
Long Parameter List,EventStore.Projections.Core.Services.Processing,IResultWriter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\IResultWriter.cs,WriteEofResult,The method has 6 parameters. Parameters: subscriptionId' partition' resultBody' causedBy' causedByGuid' correlationId
Long Parameter List,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,MultiStreamEventReader,The method has 11 parameters. Parameters: ioDispatcher' publisher' eventReaderCorrelationId' readAs' phase' streams' fromPositions' resolveLinkTos' timeProvider' stopOnEof' stopAfterNEvents
Long Parameter List,EventStore.Projections.Core.Services.Processing,MultiStreamMultiOutputCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamMultiOutputCheckpointManager.cs,MultiStreamMultiOutputCheckpointManager,The method has 13 parameters. Parameters: publisher' projectionCorrelationId' projectionVersion' runAs' ioDispatcher' projectionConfig' name' positionTagger' namingBuilder' usePersistentCheckpoints' producesRunningResults' definesFold' coreProjectionCheckpointWriter
Long Parameter List,EventStore.Projections.Core.Services.Processing,NoopCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\NoopCheckpointManager.cs,NoopCheckpointManager,The method has 6 parameters. Parameters: publisher' projectionCorrelationId' projectionConfig' name' positionTagger' namingBuilder
Long Parameter List,EventStore.Projections.Core.Services.Processing,ParallelQueryAllStreamsMasterReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryAllStreamsMasterReaderStrategy.cs,CreatePausedEventReader,The method has 6 parameters. Parameters: eventReaderId' publisher' ioDispatcher' checkpointTag' stopOnEof' stopAfterNEvents
Long Parameter List,EventStore.Projections.Core.Services.Processing,ParallelQueryMasterProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryMasterProjectionProcessingPhase.cs,ParallelQueryMasterProjectionProcessingPhase,The method has 19 parameters. Parameters: coreProjection' projectionCorrelationId' publisher' inputQueue' projectionConfig' updateStatistics' stateHandler' partitionStateCache' name' logger' zeroCheckpointTag' checkpointManager' subscriptionDispatcher' readerStrategy' resultWriter' checkpointsEnabled' stopOnEof' spoolProcessingResponseDispatcher' emittedStreamsTracker
Long Parameter List,EventStore.Projections.Core.Services.Processing,ParallelQueryMasterReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryMasterReaderStrategy.cs,ParallelQueryMasterReaderStrategy,The method has 5 parameters. Parameters: tag' phase' runAs' timeProvider' catalogStream
Long Parameter List,EventStore.Projections.Core.Services.Processing,ParallelQueryMasterReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryMasterReaderStrategy.cs,CreatePausedEventReader,The method has 6 parameters. Parameters: eventReaderId' publisher' ioDispatcher' checkpointTag' stopOnEof' stopAfterNEvents
Long Parameter List,EventStore.Projections.Core.Services.Processing,ParallelQueryProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryProcessingStrategy.cs,ParallelQueryProcessingStrategy,The method has 11 parameters. Parameters: name' projectionVersion' stateHandler' projectionConfig' sourceDefinition' handlerType' query' namesBuilder' logger' spoolProcessingResponseDispatcher' subscriptionDispatcher
Long Parameter List,EventStore.Projections.Core.Services.Processing,ParallelQueryProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The method has 8 parameters. Parameters: publisher' inputQueue' projectionCorrelationId' namingBuilder' partitionStateCache' coreProjection' ioDispatcher' firstPhase
Long Parameter List,EventStore.Projections.Core.Services.Processing,ParallelQueryProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryProcessingStrategy.cs,CreateFirstProcessingPhase,The method has 12 parameters. Parameters: publisher' inputQueue' projectionCorrelationId' partitionStateCache' updateStatistics' coreProjection' subscriptionDispatcher' zeroCheckpointTag' checkpointManager' readerStrategy' resultWriter' emittedStreamsTracker
Long Parameter List,EventStore.Projections.Core.Services.Processing,ProcessingStrategySelector,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProcessingStrategySelector.cs,CreateProjectionProcessingStrategy,The method has 8 parameters. Parameters: name' projectionVersion' namesBuilder' sourceDefinition' projectionConfig' stateHandler' handlerType' query
Long Parameter List,EventStore.Projections.Core.Services.Processing,ProcessingStrategySelector,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProcessingStrategySelector.cs,CreateSlaveProjectionProcessingStrategy,The method has 9 parameters. Parameters: name' projectionVersion' sourceDefinition' projectionConfig' stateHandler' workerId' publisher' masterCoreProjectionId' projectionCoreService
Long Parameter List,EventStore.Projections.Core.Services.Processing,ProjectionCheckpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCheckpoint.cs,ProjectionCheckpoint,The method has 10 parameters. Parameters: publisher' ioDispatcher' projectionVersion' runAs' readyHandler' from' positionTagger' maxWriteBatchLength' maximumAllowedWritesInFlight' logger
Long Parameter List,EventStore.Projections.Core.Services.Processing,ProjectionCoreService,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreService.cs,ProjectionCoreService,The method has 8 parameters. Parameters: workerId' inputQueue' publisher' subscriptionDispatcher' timeProvider' ioDispatcher' spoolProcessingResponseDispatcher' timeoutScheduler
Long Parameter List,EventStore.Projections.Core.Services.Processing,ProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionProcessingStrategy.cs,Create,The method has 8 parameters. Parameters: projectionCorrelationId' inputQueue' workerId' runAs' publisher' ioDispatcher' subscriptionDispatcher' timeProvider
Long Parameter List,EventStore.Projections.Core.Services.Processing,ProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionProcessingStrategy.cs,CreateProcessingPhases,The method has 10 parameters. Parameters: publisher' inputQueue' projectionCorrelationId' partitionStateCache' updateStatistics' coreProjection' namingBuilder' timeProvider' ioDispatcher' coreProjectionCheckpointWriter
Long Parameter List,EventStore.Projections.Core.Services.Processing,QueryProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\QueryProcessingStrategy.cs,QueryProcessingStrategy,The method has 7 parameters. Parameters: name' projectionVersion' stateHandler' projectionConfig' sourceDefinition' logger' subscriptionDispatcher
Long Parameter List,EventStore.Projections.Core.Services.Processing,QueryProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\QueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The method has 8 parameters. Parameters: publisher' inputQueue' projectionCorrelationId' namingBuilder' partitionStateCache' coreProjection' ioDispatcher' firstPhase
Long Parameter List,EventStore.Projections.Core.Services.Processing,QueuedEmittedStreamsWriter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\QueuedEmittedStreamsWriter.cs,WriteEvents,The method has 5 parameters. Parameters: streamId' expectedVersion' events' writeAs' complete
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreateExternallyFedReaderStrategy,The method has 5 parameters. Parameters: tag' phase' timeProvider' runAs' limitingCommitPosition
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,Create,The method has 6 parameters. Parameters: tag' phase' sources' timeProvider' stopOnEof' runAs
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,ReaderStrategy,The method has 14 parameters. Parameters: tag' phase' allStreams' categories' streams' allEvents' includeLinks' events' includeStreamDeletedNotification' catalogStream' processingLag' reorderEvents' runAs' timeProvider
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedEventReader,The method has 6 parameters. Parameters: eventReaderId' publisher' ioDispatcher' checkpointTag' stopOnEof' stopAfterNEvents
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedStreamEventReader,The method has 9 parameters. Parameters: eventReaderId' ioDispatcher' publisher' checkpointTag' streamName' stopOnEof' stopAfterNEvents' resolveLinkTos' produceStreamDeletes
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedEventIndexEventReader,The method has 9 parameters. Parameters: eventReaderId' ioDispatcher' publisher' checkpointTag' stopOnEof' stopAfterNEvents' resolveLinkTos' eventTypes' includeStreamDeletedNotification
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedMultiStreamEventReader,The method has 8 parameters. Parameters: eventReaderId' ioDispatcher' publisher' checkpointTag' stopOnEof' stopAfterNEvents' resolveLinkTos' streams
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedCatalogReader,The method has 8 parameters. Parameters: eventReaderId' publisher' ioDispatcher' checkpointTag' stopOnEof' stopAfterNEvents' resolveLinkTos' catalogStream
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscription.cs,ReaderSubscription,The method has 11 parameters. Parameters: tag' publisher' subscriptionId' from' readerStrategy' timeProvider' checkpointUnhandledBytesThreshold' checkpointProcessedEventsThreshold' checkpointAfterMs' stopOnEof' stopAfterNEvents
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,ReaderSubscriptionBase,The method has 10 parameters. Parameters: publisher' subscriptionId' from' readerStrategy' timeProvider' checkpointUnhandledBytesThreshold' checkpointProcessedEventsThreshold' checkpointAfterMs' stopOnEof' stopAfterNEvents
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionOptions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionOptions.cs,ReaderSubscriptionOptions,The method has 5 parameters. Parameters: checkpointUnhandledBytesThreshold' checkpointProcessedEventsThreshold' checkpointAfterMs' stopOnEof' stopAfterNEvents
Long Parameter List,EventStore.Projections.Core.Services.Processing,ResolvedEvent,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ResolvedEvent.cs,ResolvedEvent,The method has 15 parameters. Parameters: positionStreamId' positionSequenceNumber' eventStreamId' eventSequenceNumber' resolvedLinkTo' position' eventOrLinkTargetPosition' eventId' eventType' isJson' data' metadata' positionMetadata' streamMetadata' timestamp
Long Parameter List,EventStore.Projections.Core.Services.Processing,ResolvedEvent,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ResolvedEvent.cs,ResolvedEvent,The method has 13 parameters. Parameters: positionStreamId' positionSequenceNumber' eventStreamId' eventSequenceNumber' resolvedLinkTo' position' eventId' eventType' isJson' data' metadata' positionMetadata' streamMetadata
Long Parameter List,EventStore.Projections.Core.Services.Processing,ResultWriter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ResultWriter.cs,ResultWriter,The method has 5 parameters. Parameters: resultEventEmitter' coreProjectionCheckpointManager' producesRunningResults' zeroCheckpointTag' partitionCatalogStreamName
Long Parameter List,EventStore.Projections.Core.Services.Processing,ResultWriter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ResultWriter.cs,WriteEofResult,The method has 6 parameters. Parameters: subscriptionId' partition' resultBody' causedBy' causedByGuid' correlationId
Long Parameter List,EventStore.Projections.Core.Services.Processing,ResultWriter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ResultWriter.cs,WriteResult,The method has 5 parameters. Parameters: partition' resultBody' causedBy' causedByGuid' correlationId
Long Parameter List,EventStore.Projections.Core.Services.Processing,SlaveQueryProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SlaveQueryProcessingStrategy.cs,SlaveQueryProcessingStrategy,The method has 10 parameters. Parameters: name' projectionVersion' stateHandler' projectionConfig' sourceDefinition' logger' workerId' publisher' masterCoreProjectionId' subscriptionDispatcher
Long Parameter List,EventStore.Projections.Core.Services.Processing,SlaveQueryProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SlaveQueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The method has 8 parameters. Parameters: publisher' inputQueue' projectionCorrelationId' namingBuilder' partitionStateCache' coreProjection' ioDispatcher' firstPhase
Long Parameter List,EventStore.Projections.Core.Services.Processing,SlaveQueryProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SlaveQueryProcessingStrategy.cs,CreateCheckpointManager,The method has 7 parameters. Parameters: projectionCorrelationId' publisher' ioDispatcher' namingBuilder' coreProjectionCheckpointWriter' definesFold' readerStrategy
Long Parameter List,EventStore.Projections.Core.Services.Processing,SlaveResultWriter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SlaveResultWriter.cs,WriteEofResult,The method has 6 parameters. Parameters: subscriptionId' partition' resultBody' causedBy' causedByGuid' correlationId
Long Parameter List,EventStore.Projections.Core.Services.Processing,SpoolStreamProcessingWorkItem,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SpoolStreamProcessingWorkItem.cs,SpoolStreamProcessingWorkItem,The method has 10 parameters. Parameters: container' publisher' resultWriter' loadBalancer' message' slaves' spoolProcessingResponseDispatcher' limitingCommitPosition' subscriptionId' definesCatalogTransform
Long Parameter List,EventStore.Projections.Core.Services.Processing,StreamEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,StreamEventReader,The method has 9 parameters. Parameters: publisher' eventReaderCorrelationId' readAs' streamName' fromSequenceNumber' timeProvider' resolveLinkTos' produceStreamDeletes' stopOnEof
Long Parameter List,EventStore.Projections.Core.Services.Processing,TransactionFileEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFileEventReader.cs,TransactionFileEventReader,The method has 8 parameters. Parameters: publisher' eventReaderCorrelationId' readAs' from' timeProvider' stopOnEof' deliverEndOfTFPosition' resolveLinkTos
Long Parameter List,EventStore.Projections.Core.Services.Processing,WriteQueryEofProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WriteQueryEofProjectionProcessingPhase.cs,WriteQueryEofProjectionProcessingPhase,The method has 8 parameters. Parameters: publisher' phase' resultStream' coreProjection' stateCache' checkpointManager' emittedEventWriter' emittedStreamsTracker
Long Parameter List,EventStore.Projections.Core.Services.Processing,WriteQueryResultProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WriteQueryResultProjectionProcessingPhase.cs,WriteQueryResultProjectionProcessingPhase,The method has 8 parameters. Parameters: publisher' phase' resultStream' coreProjection' stateCache' checkpointManager' emittedEventWriter' emittedStreamsTracker
Long Parameter List,EventStore.Projections.Core.Services.Processing,WriteQueryResultProjectionProcessingPhaseBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WriteQueryResultProjectionProcessingPhaseBase.cs,WriteQueryResultProjectionProcessingPhaseBase,The method has 8 parameters. Parameters: publisher' phase' resultStream' coreProjection' stateCache' checkpointManager' emittedEventWriter' emittedStreamsTracker
Long Parameter List,EventStore.Projections.Core.Services.v8,V8ProjectionStateHandler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\v8\V8ProjectionStateHandler.cs,V8ProjectionStateHandler,The method has 5 parameters. Parameters: preludeName' querySource' getModuleSource' logger' cancelCallbackFactory
Long Parameter List,EventStore.Projections.Core.Services.v8,V8ProjectionStateHandler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\v8\V8ProjectionStateHandler.cs,ProcessEvent,The method has 7 parameters. Parameters: partition' eventPosition' category' data' newState' newSharedState' emittedEvents
Long Parameter List,EventStore.Projections.Core.Standard,ByCorrelationId,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Standard\ByCorrelationId.cs,ProcessEvent,The method has 7 parameters. Parameters: partition' eventPosition' category1' data' newState' newSharedState' emittedEvents
Long Parameter List,EventStore.Projections.Core.Standard,CategorizeEventsByStreamPath,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Standard\CategorizeEventsByStreamPath.cs,ProcessEvent,The method has 7 parameters. Parameters: partition' eventPosition' category1' data' newState' newSharedState' emittedEvents
Long Parameter List,EventStore.Projections.Core.Standard,CategorizeStreamByPath,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Standard\CategorizeStreamByPath.cs,ProcessEvent,The method has 7 parameters. Parameters: partition' eventPosition' category1' data' newState' newSharedState' emittedEvents
Long Parameter List,EventStore.Projections.Core.Standard,IndexEventsByEventType,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Standard\IndexEventsByEventType.cs,ProcessEvent,The method has 7 parameters. Parameters: partition' eventPosition' category1' data' newState' newSharedState' emittedEvents
Long Parameter List,EventStore.Projections.Core.Standard,IndexStreams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Standard\IndexStreams.cs,ProcessEvent,The method has 7 parameters. Parameters: partition' eventPosition' category1' data' newState' newSharedState' emittedEvents
Long Parameter List,EventStore.Projections.Core.Standard,StubHandler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Standard\StubHandler.cs,ProcessEvent,The method has 7 parameters. Parameters: partition' eventPosition' category1' data' newState' newSharedState' emittedEvents
Long Parameter List,EventStore.Projections.Core.v8,Js1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\v8\js1.cs,CompilePrelude,The method has 6 parameters. Parameters: prelude' fileName' loadModuleHandler' enterCancellableRegionHandler' exitCancellableRegionHandler' logHandler
Long Parameter List,EventStore.Projections.Core.v8,Js1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\v8\js1.cs,CompileQuery,The method has 5 parameters. Parameters: prelude' script' fileName' commandHandlerRegisteredCallback' reverseCommandHandler
Long Parameter List,EventStore.Projections.Core.v8,Js1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\v8\js1.cs,ExecuteCommandHandler,The method has 8 parameters. Parameters: scriptHandle' eventHandlerHandle' dataJson' dataOther' otherLength' resultJson' result2Json' memoryHandle
Long Parameter List,EventStore.Projections.Core.v8,PreludeScript,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\v8\PreludeScript.cs,PreludeScript,The method has 5 parameters. Parameters: script' fileName' getModuleSourceAndFileName' cancelCallbackFactory' logger
Long Identifier,EventStore.Projections.Core.Common,ProjectionConsts,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Common\ProjectionConsts.cs,,The length of the parameter CheckpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.Projections.Core.Messages,CheckpointSuggested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,CheckpointSuggested,The length of the parameter subscriptionMessageSequenceNumber is 33.
Long Identifier,EventStore.Projections.Core.Messages,ProgressChanged,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,ProgressChanged,The length of the parameter subscriptionMessageSequenceNumber is 33.
Long Identifier,EventStore.Projections.Core.Messages,SubscriptionStarted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,SubscriptionStarted,The length of the parameter subscriptionMessageSequenceNumber is 33.
Long Identifier,EventStore.Projections.Core.Messages,NotAuthorized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,NotAuthorized,The length of the parameter subscriptionMessageSequenceNumber is 33.
Long Identifier,EventStore.Projections.Core.Messages,EofReached,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,EofReached,The length of the parameter subscriptionMessageSequenceNumber is 33.
Long Identifier,EventStore.Projections.Core.Messages,PartitionEofReached,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,PartitionEofReached,The length of the parameter subscriptionMessageSequenceNumber is 33.
Long Identifier,EventStore.Projections.Core.Messages,PartitionMeasured,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,PartitionMeasured,The length of the parameter subscriptionMessageSequenceNumber is 33.
Long Identifier,EventStore.Projections.Core.Messages,PartitionDeleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,PartitionDeleted,The length of the parameter subscriptionMessageSequenceNumber is 33.
Long Identifier,EventStore.Projections.Core.Messages,CommittedEventReceived,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,Sample,The length of the parameter subscriptionMessageSequenceNumber is 33.
Long Identifier,EventStore.Projections.Core.Messages,CommittedEventReceived,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,Sample,The length of the parameter subscriptionMessageSequenceNumber is 33.
Long Identifier,EventStore.Projections.Core.Messages,CommittedEventReceived,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,CommittedEventReceived,The length of the parameter subscriptionMessageSequenceNumber is 33.
Long Identifier,EventStore.Projections.Core.Messages,CommittedEventReceived,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,CommittedEventReceived,The length of the parameter subscriptionMessageSequenceNumber is 33.
Long Identifier,EventStore.Projections.Core.Messages,CommittedEventReceived,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,FromCommittedEventDistributed,The length of the parameter subscriptionMessageSequenceNumber is 33.
Long Identifier,EventStore.Projections.Core.Messages,EventReaderSubscriptionMessageBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,EventReaderSubscriptionMessageBase,The length of the parameter subscriptionMessageSequenceNumber is 33.
Long Identifier,EventStore.Projections.Core.Messages,EventReaderSubscriptionMessageBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,,The length of the parameter _subscriptionMessageSequenceNumber is 34.
Long Identifier,EventStore.Projections.Core.Messages,UpdateConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ProjectionManagementMessage.cs,UpdateConfig,The length of the parameter checkpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.Projections.Core.Messages,UpdateConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ProjectionManagementMessage.cs,,The length of the parameter _checkpointUnhandledBytesThreshold is 34.
Long Identifier,EventStore.Projections.Core.Messages,ProjectionConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ProjectionManagementMessage.cs,ProjectionConfig,The length of the parameter checkpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.Projections.Core.Messages,ProjectionConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ProjectionManagementMessage.cs,,The length of the parameter _checkpointUnhandledBytesThreshold is 34.
Long Identifier,EventStore.Projections.Core.Messages,EventReaderPartitionDeleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ReaderSubscriptionMessage.cs,EventReaderPartitionDeleted,The length of the parameter deleteEventOrLinkTargetPosition is 31.
Long Identifier,EventStore.Projections.Core.Messages,EventReaderPartitionDeleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ReaderSubscriptionMessage.cs,,The length of the parameter _deleteEventOrLinkTargetPosition is 32.
Long Identifier,EventStore.Projections.Core.Messages,CommittedEventDistributed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ReaderSubscriptionMessage.cs,Sample,The length of the parameter safeTransactionFileReaderJoinPosition is 37.
Long Identifier,EventStore.Projections.Core.Messages,CommittedEventDistributed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ReaderSubscriptionMessage.cs,CommittedEventDistributed,The length of the parameter safeTransactionFileReaderJoinPosition is 37.
Long Identifier,EventStore.Projections.Core.Messages,CommittedEventDistributed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ReaderSubscriptionMessage.cs,,The length of the parameter _safeTransactionFileReaderJoinPosition is 38.
Long Identifier,EventStore.Projections.Core.Messages.Persisted.Commands,PersistedProjectionConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\Persisted\Commands\PersistedProjectionConfig.cs,,The length of the parameter CheckpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.Projections.Core,ProjectionManagerNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionManagerNode.cs,CreateManagerService,The length of the parameter projectionManagerCommandWriter is 30.
Long Identifier,EventStore.Projections.Core,ProjectionManagerNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionManagerNode.cs,CreateManagerService,The length of the parameter projectionManagerResponseReader is 31.
Long Identifier,EventStore.Projections.Core,ProjectionManagerNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionManagerNode.cs,SubscribeMainBus,The length of the parameter projectionManagerResponseReader is 31.
Long Identifier,EventStore.Projections.Core,ProjectionManagerNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionManagerNode.cs,SubscribeMainBus,The length of the parameter projectionManagerCommandWriter is 30.
Long Identifier,EventStore.Projections.Core,ProjectionWorkerNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionWorkerNode.cs,,The length of the parameter _projectionCoreServiceCommandReader is 35.
Long Identifier,EventStore.Projections.Core,ProjectionWorkerNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionWorkerNode.cs,,The length of the parameter _spoolProcessingResponseDispatcher is 34.
Long Identifier,EventStore.Projections.Core,ProjectionWorkerNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionWorkerNode.cs,,The length of the parameter _slaveProjectionResponseWriter is 30.
Long Identifier,EventStore.Projections.Core.Services,ProjectionConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionConfig.cs,ProjectionConfig,The length of the parameter checkpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.Projections.Core.Services,ProjectionConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionConfig.cs,,The length of the parameter _checkpointUnhandledBytesThreshold is 34.
Long Identifier,EventStore.Projections.Core.Services.Management,ManagedProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,CreateDefaultProjectionConfiguration,The length of the parameter checkpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.Projections.Core.Services.Management,PersistedState,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,,The length of the parameter NumberOfPrequisitesMetForDeletion is 33.
Long Identifier,EventStore.Projections.Core.Services.Management,ProjectionManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,ReadProjectionsList,The length of the parameter projectionsRegistrationStreamId is 31.
Long Identifier,EventStore.Projections.Core.Services.Processing,CoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,CoreProjection,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,CoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,CheckpointCompleted,The length of the parameter lastCompletedCheckpointPosition is 31.
Long Identifier,EventStore.Projections.Core.Services.Processing,CoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,,The length of the parameter _coreProjectionCheckpointWriter is 31.
Long Identifier,EventStore.Projections.Core.Services.Processing,CoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,,The length of the parameter _masterProjectionResponseReader is 31.
Long Identifier,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,SendPrerecordedEvent,The length of the parameter prerecordedEventMessageSequenceNumber is 37.
Long Identifier,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,CheckpointWritten,The length of the parameter lastCompletedCheckpointPosition is 31.
Long Identifier,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,,The length of the parameter _lastCompletedCheckpointPosition is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointReader.cs,,The length of the parameter _lastWrittenCheckpointEventNumber is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointWriter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointWriter.cs,,The length of the parameter _lastWrittenCheckpointEventNumber is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,DefaultCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultCheckpointManager.cs,DefaultCheckpointManager,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,DefaultCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultCheckpointManager.cs,,The length of the parameter _coreProjectionCheckpointWriter is 31.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateProcessingPhases,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateCheckpointManager,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,,The length of the parameter _awaitingMetadataWriteCompleted is 31.
Long Identifier,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,,The length of the parameter _lastCommittedOrSubmittedEventPosition is 38.
Long Identifier,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,,The length of the parameter _submittedToWriteEmittedEvents is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,,The length of the parameter _submittedWriteMetaStreamEvent is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,EmittedStreamsDeleter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsDeleter.cs,EmittedStreamsDeleter,The length of the parameter emittedStreamsCheckpointStreamId is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,EmittedStreamsDeleter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsDeleter.cs,,The length of the parameter _emittedStreamsCheckpointStreamId is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventByTypeIndexEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,EventByTypeIndexEventReader,The length of the parameter includeDeletedStreamNotification is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventByTypeIndexEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,DoSwitch,The length of the parameter lastKnownIndexCheckpointPosition is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventByTypeIndexEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,,The length of the parameter _includeDeletedStreamNotification is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,IndexBased,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,,The length of the parameter _indexCheckpointStreamRequested is 31.
Long Identifier,EventStore.Projections.Core.Services.Processing,IndexBased,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,,The length of the parameter _lastKnownIndexCheckpointEventNumber is 36.
Long Identifier,EventStore.Projections.Core.Services.Processing,IndexBased,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,,The length of the parameter _lastKnownIndexCheckpointPosition is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventByTypeIndexPositionTagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexPositionTagger.cs,EventByTypeIndexPositionTagger,The length of the parameter includeStreamDeletedNotification is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,EventProcessingProjectionProcessingPhase,The length of the parameter coreProjectionCheckpointManager is 31.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventReaderCoreService,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReaderCoreService.cs,StartReaders,The length of the parameter distributionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventReorderingReaderSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReorderingReaderSubscription.cs,EventReorderingReaderSubscription,The length of the parameter checkpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventReorderingReaderSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReorderingReaderSubscription.cs,EventReorderingReaderSubscription,The length of the parameter checkpointProcessedEventsThreshold is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,,The length of the parameter _expectedSubscriptionMessageSequenceNumber is 42.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,,The length of the parameter _subscriptionStartedAtLastCommitPosition is 40.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,,The length of the parameter _updateStatisticsTicketPending is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,MultiStreamMultiOutputCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamMultiOutputCheckpointManager.cs,MultiStreamMultiOutputCheckpointManager,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,NoopCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\NoopCheckpointManager.cs,,The length of the parameter _lastCompletedCheckpointPosition is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,ParallelQueryMasterProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryMasterProjectionProcessingPhase.cs,ParallelQueryMasterProjectionProcessingPhase,The length of the parameter spoolProcessingResponseDispatcher is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,ParallelQueryMasterProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryMasterProjectionProcessingPhase.cs,,The length of the parameter _spoolProcessingResponseDispatcher is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,ParallelQueryProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryProcessingStrategy.cs,ParallelQueryProcessingStrategy,The length of the parameter spoolProcessingResponseDispatcher is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,ParallelQueryProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,ParallelQueryProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryProcessingStrategy.cs,,The length of the parameter _spoolProcessingResponseDispatcher is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,PartitionStateUpdateManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PartitionStateUpdateManager.cs,,The length of the parameter _partitionCheckpointStreamMetadata is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,ProcessingStrategySelector,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProcessingStrategySelector.cs,ProcessingStrategySelector,The length of the parameter spoolProcessingResponseDispatcher is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,ProcessingStrategySelector,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProcessingStrategySelector.cs,,The length of the parameter _spoolProcessingResponseDispatcher is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,ProjectionCoreService,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreService.cs,ProjectionCoreService,The length of the parameter spoolProcessingResponseDispatcher is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,ProjectionCoreService,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreService.cs,,The length of the parameter _spoolProcessingResponseDispatcher is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,ProjectionNamesBuilder,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionNamesBuilder.cs,,The length of the parameter SlaveProjectionControlStreamMaxAge is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,ProjectionNamesBuilder,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionNamesBuilder.cs,,The length of the parameter ProjectionsControlStreamPrefix is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,ProjectionNamesBuilder,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionNamesBuilder.cs,,The length of the parameter ProjectionCheckpointStreamSuffix is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,ProjectionNamesBuilder,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionNamesBuilder.cs,,The length of the parameter ProjectionPartitionCatalogStreamSuffix is 38.
Long Identifier,EventStore.Projections.Core.Services.Processing,ProjectionNamesBuilder,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionNamesBuilder.cs,,The length of the parameter CategoryCatalogStreamNamePrefix is 31.
Long Identifier,EventStore.Projections.Core.Services.Processing,StandardProjections,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionNamesBuilder.cs,,The length of the parameter StreamByCategoryStandardProjection is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,StandardProjections,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionNamesBuilder.cs,,The length of the parameter EventByCategoryStandardProjection is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,StandardProjections,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionNamesBuilder.cs,,The length of the parameter EventByCorrIdStandardProjection is 31.
Long Identifier,EventStore.Projections.Core.Services.Processing,ProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionProcessingStrategy.cs,Create,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,ProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionProcessingStrategy.cs,CreateProcessingPhases,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,QueryProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\QueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,ReaderStrategy,The length of the parameter includeStreamDeletedNotification is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedEventIndexEventReader,The length of the parameter includeStreamDeletedNotification is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedCatalogReader,The length of the parameter startFromDataStreamEventNumber is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,,The length of the parameter _includeStreamDeletedNotification is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscription.cs,ReaderSubscription,The length of the parameter checkpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscription.cs,ReaderSubscription,The length of the parameter checkpointProcessedEventsThreshold is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,ReaderSubscriptionBase,The length of the parameter checkpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,ReaderSubscriptionBase,The length of the parameter checkpointProcessedEventsThreshold is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,,The length of the parameter _checkpointUnhandledBytesThreshold is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,,The length of the parameter _checkpointProcessedEventsThreshold is 35.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,,The length of the parameter _lastPassedOrCheckpointedEventPosition is 38.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,,The length of the parameter _subscriptionMessageSequenceNumber is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,,The length of the parameter _eventsSinceLastCheckpointSuggestedOrStart is 42.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionOptions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionOptions.cs,ReaderSubscriptionOptions,The length of the parameter checkpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionOptions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionOptions.cs,ReaderSubscriptionOptions,The length of the parameter checkpointProcessedEventsThreshold is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionOptions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionOptions.cs,,The length of the parameter _checkpointUnhandledBytesThreshold is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionOptions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionOptions.cs,,The length of the parameter _checkpointProcessedEventsThreshold is 35.
Long Identifier,EventStore.Projections.Core.Services.Processing,ResolvedEvent,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ResolvedEvent.cs,,The length of the parameter IsLinkToDeletedStreamTombstone is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,ResultWriter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ResultWriter.cs,ResultWriter,The length of the parameter coreProjectionCheckpointManager is 31.
Long Identifier,EventStore.Projections.Core.Services.Processing,ResultWriter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ResultWriter.cs,,The length of the parameter _coreProjectionCheckpointManager is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,SlaveQueryProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SlaveQueryProcessingStrategy.cs,CreateCheckpointManager,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,SourceDefinitionBuilder,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,SetPartitionResultStreamNamePatternOption,The length of the parameter partitionResultStreamNamePattern is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,SpoolStreamProcessingWorkItem,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SpoolStreamProcessingWorkItem.cs,SpoolStreamProcessingWorkItem,The length of the parameter spoolProcessingResponseDispatcher is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,SpoolStreamProcessingWorkItem,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SpoolStreamProcessingWorkItem.cs,,The length of the parameter _spoolProcessingResponseDispatcher is 34.
Long Identifier,EventStore.Projections.Core.v8,Js1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\v8\js1.cs,CompileQuery,The length of the parameter commandHandlerRegisteredCallback is 32.
Long Identifier,EventStore.Projections.Core.v8,QueryScript,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\v8\QueryScript.cs,,The length of the parameter _commandHandlerRegisteredCallback is 33.
Long Identifier,EventStore.Projections.Core.v8,QueryScript,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\v8\QueryScript.cs,,The length of the parameter _reverseCommandHandlerDelegate is 30.
Long Identifier,EventStore.Projections.Core.v8,QueryScript,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\v8\QueryScript.cs,,The length of the parameter _reverseCommandHandlerException is 31.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "				HttpMethod.Post' OnProjectionsPostTransient' new ICodec[] {Codec.ManualEncoding}' SupportedCodecs' AuthorizationLevel.User); " is 124.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "				"/projections/onetime?name={name}&type={type}&enabled={enabled}&checkpoints={checkpoints}&emit={emit}&trackemittedstreams={trackemittedstreams}"' " is 145.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "				HttpMethod.Post' OnProjectionsPostOneTime' new ICodec[] {Codec.ManualEncoding}' SupportedCodecs' AuthorizationLevel.Ops); " is 121.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "				"/projections/continuous?name={name}&type={type}&enabled={enabled}&emit={emit}&trackemittedstreams={trackemittedstreams}"' " is 122.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "				HttpMethod.Post' OnProjectionsPostContinuous' new ICodec[] {Codec.ManualEncoding}' SupportedCodecs' AuthorizationLevel.Ops); " is 124.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "				HttpMethod.Put' OnProjectionQueryPut' new ICodec[] {Codec.ManualEncoding}' SupportedCodecs' AuthorizationLevel.User); /* source of transient projections can be set by a normal user. Authorization checks are done internally for non-transient projections. */ " is 256.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "				"/projection/{name}?deleteStateStream={deleteStateStream}&deleteCheckpointStream={deleteCheckpointStream}&deleteEmittedStreams={deleteEmittedStreams}"' " is 151.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "				HttpMethod.Post' OnProjectionCommandDisable' Codec.NoCodecs' SupportedCodecs' AuthorizationLevel.User); /* transient projections can be stopped by a normal user. Authorization checks are done internally for non-transient projections.*/ " is 235.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "				HttpMethod.Post' OnProjectionCommandEnable' Codec.NoCodecs' SupportedCodecs' AuthorizationLevel.User); /* transient projections can be enabled by a normal user. Authorization checks are done internally for non-transient projections.*/ " is 234.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "				HttpMethod.Post' OnProjectionCommandReset' Codec.NoCodecs' SupportedCodecs' AuthorizationLevel.User); /* transient projections can be reset by a normal user (when debugging). Authorization checks are done internally for non-transient projections.*/ " is 248.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "				HttpMethod.Post' OnProjectionCommandAbort' Codec.NoCodecs' SupportedCodecs' AuthorizationLevel.User); /* transient projections can be aborted by a normal user. Authorization checks are done internally for non-transient projections.*/ " is 233.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,PersistedStateReadCompleted,The length of the statement  "				"Projection manager did not find any projection configuration records in the {stream} stream.  Projection stays in CREATING state"' " is 131.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,CreatePreparedMessage,The length of the statement  "					"The projection cannot be loaded as stopped as it was stored in the old format.  Update the projection query text to force prepare"); " is 133.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,OnProjectionsListReadCompleted,The length of the statement  "									"PROJECTIONS: The following projection: {projection} has a duplicate created event. Using projection Id {projectionId}"' " is 120.
Long Statement,EventStore.Projections.Core.Services.Processing,AllStreamsCatalogEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\AllStreamsCatalogEventReader.cs,EnqueueDeliverEvent,The length of the statement  "					"Event number {0} was expected in the stream {1}' but event number {2} was received. This may happen if events have been deleted from the beginning of your stream' please reset your projection."' " is 195.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,Handle,The length of the statement  "				//TODO: write test to ensure projection state is correctly loaded from a checkpoint and posted back when enough empty records processed " is 135.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,Handle,The length of the statement  "						"A concurrency violation was detected' but the projection is not running. Current state is: {0}.  The reason for the restart is: '{1}' "' " is 137.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,CheckpointWritten,The length of the statement  "				// ignore any writes pending in the current checkpoint (this is not the best' but they will never hit the storage' so it is safe) " is 129.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointWriter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointWriter.cs,WriteCheckpointEventCompleted,The length of the statement  "							//The first parameter is not needed in this case as the CoreProjectionCheckpointManager takes care of filling in the projection id when it reconstructs the message " is 163.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointWriter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointWriter.cs,PublishWriteStreamMetadataAndCheckpointEvent,The length of the statement  "					"Writing checkpoint for {projection} at {requestedCheckpointPosition} with expected version number {lastWrittenCheckpointEventNumber}"' " is 135.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,ReadStreamEventsBackwardCompleted,The length of the statement  "								"Multiple projections emitting to the same stream detected.  Stream: '{0}'. Last event projection: '{1}'.  Emitting projection: '{2}'"' " is 135.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,SubmitWriteEvents,The length of the statement  "								"Wrong expected tag while submitting write event request to the '{0}' stream.  The last known stream tag is: '{1}'  the expected tag is: '{2}'"' " is 144.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,ValidateEmittedEventInRecoveryMode,The length of the statement  "						"An event emitted in recovery for stream {0} differs from the originally emitted event. Existing('{1}'' '{2}'). New('{3}'' '{4}')"' " is 131.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStreamsDeleter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsDeleter.cs,DeleteStreamCompleted,The length of the statement  "						"PROJECTIONS: Retry limit reached' could not delete stream: {stream}. Manual intervention is required and you may need to delete this stream manually"' " is 151.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStreamsTracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsTracker.cs,OnWriteComplete,The length of the statement  "						"PROJECTIONS: Failed to write a tracked stream id of {stream} to the {emittedStream} stream. Retry limit of {maxRetryCount} reached. Reason: {e}"' " is 146.
Long Statement,EventStore.Projections.Core.Services.Processing,EventByTypeIndexPositionTagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexPositionTagger.cs,AdjustTag,The length of the statement  "						"The given checkpoint is invalid. Possible causes might include having written an event to the projection's managed stream. The bad checkpoint: {0}"' " is 149.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,SafeProcessPartitionDeletedByHandler,The length of the statement  "						"The {0} projection failed to process a delete partition notification.\r\nHandler: {1}\r\nEvent Position: {2}\r\n\r\nMessage:\r\n\r\n{3}"' " is 138.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,SafeTransformCatalogEventByHandler,The length of the statement  "						"The {0} projection failed to transform a catalog event.\r\nHandler: {1}\r\nEvent Position: {2}\r\n\r\nMessage:\r\n\r\n{3}"' " is 124.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,ProcessEventByHandler,The length of the statement  "				//TODO: depending on query processing final state to result transformation should happen either here (if EOF) on while writing results " is 134.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,ProcessPartitionDeletedByHandler,The length of the statement  "				//TODO: depending on query processing final state to result transformation should happen either here (if EOF) on while writing results " is 134.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,NewCheckpointStarted,The length of the statement  "							"The {0} projection failed to process a checkpoint start.\r\nHandler: {1}\r\nEvent Position: {2}\r\n\r\nMessage:\r\n\r\n{3}"' " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReader.cs,Resume,The length of the statement  "//            _logger.Trace("Resuming event distribution {eventReaderCorrelationId} at '{at}'"' EventReaderCorrelationId' FromAsText()); " is 136.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReader.cs,Pause,The length of the statement  "//            _logger.Trace("Pausing event distribution {eventReaderCorrelationId} at '{at}'"' EventReaderCorrelationId' FromAsText()); " is 135.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReaderCoreService,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReaderCoreService.cs,Handle,The length of the statement  "//                "The '{subscriptionId}' projection subscribed to the '{distibutionPointCorrelationId}' distribution point"' subscriptionId' " is 141.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,DeliverEvent,The length of the statement  "					"Event number {0} was expected in the stream {1}' but event number {2} was received. This may happen if events have been deleted from the beginning of your stream' please reset your projection."' " is 195.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamPositionTagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamPositionTagger.cs,AdjustTag,The length of the statement  "						"The given checkpoint is invalid. Possible causes might include having written an event to the projection's managed stream. The bad checkpoint: {0}"' " is 149.
Long Statement,EventStore.Projections.Core.Services.Processing,PreparePositionTagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PreparePositionTagger.cs,AdjustTag,The length of the statement  "						"The given checkpoint is invalid. Possible causes might include having written an event to the projection's managed stream. The bad checkpoint: {0}"' " is 149.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,ProcessOne,The length of the statement  "                    "Skipping replayed event {positionSequenceNumber}@{positionStreamId} at position {position}. the last processed event checkpoint tag is: {lastTag}"' " is 148.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,DeliverEvent,The length of the statement  "					"Event number {0} was expected in the stream {1}' but event number {2} was received. This may happen if events have been deleted from the beginning of your stream' please reset your projection."' " is 195.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamPositionTagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamPositionTagger.cs,AdjustTag,The length of the statement  "						"The given checkpoint is invalid. Possible causes might include having written an event to the projection's managed stream. The bad checkpoint: {0}"' " is 149.
Long Statement,EventStore.Projections.Core.Services.Processing,TransactionFilePositionTagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFilePositionTagger.cs,AdjustTag,The length of the statement  "						"The given checkpoint is invalid. Possible causes might include having written an event to the projection's managed stream. The bad checkpoint: {0}"' " is 149.
Long Statement,EventStore.Projections.Core.Standard,CategorizeEventsByStreamPath,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Standard\CategorizeEventsByStreamPath.cs,ProcessEvent,The length of the statement  "			var category = _streamCategoryExtractor.GetCategoryByStreamId(isStreamDeletedEvent?deletedStreamId:data.PositionStreamId); " is 122.
Long Statement,EventStore.Projections.Core.Standard,CategorizeEventsByStreamPath,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Standard\CategorizeEventsByStreamPath.cs,ProcessEvent,The length of the statement  "						originalStreamId: isStreamDeletedEvent?deletedStreamId:data.PositionStreamId' streamDeletedAt: isStreamDeletedEvent ? -1 : (int?)null)) " is 135.
Long Statement,EventStore.Projections.Core.Standard,StreamDeletedHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Standard\StreamDeletedHelper.cs,IsStreamDeletedEvent,The length of the statement  "					//NOTE: we do not ignore JSON deserialization exceptions here assuming that metadata stream events must be deserializable " is 121.
Long Statement,EventStore.Projections.Core.Standard,StreamDeletedHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Standard\StreamDeletedHelper.cs,IsStreamDeletedEvent,The length of the statement  "					//NOTE: we do not ignore JSON deserialization exceptions here assuming that metadata stream events must be deserializable " is 121.
Long Statement,EventStore.Projections.Core.v8,PreludeScript,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\v8\PreludeScript.cs,CompileScript,The length of the statement  "					"The projection subsystem failed to load a libjs1.so/js1.dll/... or one of its dependencies.  The original error message is: " " is 126.
Complex Conditional,EventStore.Projections.Core.Messages,RunAs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ProjectionManagementMessage.cs,ValidateRunAs,The conditional expression  "mode > ProjectionMode.Transient && readWrite == ReadWrite.Write  				                                    && (message.RunAs == null || message.RunAs.Principal == null  				                                                              || !(  																					   message.RunAs.Principal.IsInRole(SystemRoles.Admins)  																			  		|| message.RunAs.Principal.IsInRole(SystemRoles.Operations)  																				  ))"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Management,ManagedProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,Handle,The conditional expression  "Enabled  			    && !(_state == ManagedProjectionState.Completed || _state == ManagedProjectionState.Faulted  			                                                    || _state == ManagedProjectionState.Aborted ||  			                                                    _state == ManagedProjectionState.Loaded  			                                                    || _state == ManagedProjectionState.Prepared ||  			                                                    _state == ManagedProjectionState.Stopped)"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Management,ManagedProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,WritePersistedStateCompleted,The conditional expression  "message.Result == OperationResult.CommitTimeout || message.Result == OperationResult.ForwardTimeout  			                                                    || message.Result == OperationResult.PrepareTimeout  			                                                    || message.Result ==  			                                                    OperationResult.WrongExpectedVersion"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Management,ManagedProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,StartOrLoadStopped,The conditional expression  "_state == ManagedProjectionState.Aborted || _state == ManagedProjectionState.Completed  			                                                    || _state == ManagedProjectionState.Faulted ||  			                                                    _state == ManagedProjectionState.Stopped  			                                                    || _state == ManagedProjectionState.Deleting"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Management,ManagedProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,PrepareOrWriteStartOrLoadStopped,The conditional expression  "Prepared && Created && !(Enabled && _enabledToRun)"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Management,ProjectionManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,WriteProjectionRegistrationCompleted,The conditional expression  "message.Result == OperationResult.CommitTimeout || message.Result == OperationResult.ForwardTimeout  			                                                    || message.Result == OperationResult.PrepareTimeout  			                                                    || message.Result ==  			                                                    OperationResult.WrongExpectedVersion"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Processing,CoreProjectionQueue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionQueue.cs,ValidateQueueingOrder,The conditional expression  "eventTag < _lastEnqueuedEventTag ||  			    (!(allowCurrentPosition || _justInitialized) && eventTag <= _lastEnqueuedEventTag)"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,EmitEvents,The conditional expression  "!(_lastQueuedEventPosition != null && groupCausedBy > _lastQueuedEventPosition) &&  					    !(_lastQueuedEventPosition == null && groupCausedBy >= _fromCheckpointPosition)"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,ProcessWrites,The conditional expression  "_started && !_awaitingListEventsCompleted && !_awaitingWriteCompleted  			    && !_awaitingMetadataWriteCompleted && _pendingWrites.Count > 0"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,ProcessRequestedCheckpoint,The conditional expression  "_checkpointRequested && !_awaitingWriteCompleted && !_awaitingMetadataWriteCompleted  			    && _pendingWrites.Count == 0"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Processing,ProcessingStrategySelector,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProcessingStrategySelector.cs,CreateProjectionProcessingStrategy,The conditional expression  "!sourceDefinition.DisableParallelismOption && projectionConfig.StopOnEof && sourceDefinition.ByStreams  			    && sourceDefinition.DefinesFold && !string.IsNullOrEmpty(sourceDefinition.CatalogStream)"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Processing,ProcessingStrategySelector,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProcessingStrategySelector.cs,CreateProjectionProcessingStrategy,The conditional expression  "!sourceDefinition.DisableParallelismOption && projectionConfig.StopOnEof && sourceDefinition.ByStreams  			    && sourceDefinition.DefinesFold && sourceDefinition.HasCategories()"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Processing,ReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,Create,The conditional expression  "!sources.AllStreams && !sources.HasCategories() && !sources.HasStreams()  			    && string.IsNullOrEmpty(sources.CatalogStream)"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,ProcessOne,The conditional expression  "_checkpointUnhandledBytesThreshold > 0  				    && timeDifference > _checkpointAfter  				    && (_lastPassedOrCheckpointedEventPosition != null  				        && message.Data.Position.PreparePosition - _lastPassedOrCheckpointedEventPosition.Value  				        > _checkpointUnhandledBytesThreshold)"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Processing,StagedProcessingQueue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StagedProcessingQueue.cs,GetEntryToProcess,The conditional expression  "taskEntry != null && taskEntry.ReadForStage == stageIndex && !taskEntry.Busy  					    && !taskEntry.Completed && taskEntry.PreviousByCorrelation == null"  is complex.
Virtual Method Call from Constructor,EventStore.Projections.Core.Services.Processing,CoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,CoreProjection,The constructor "CoreProjection" calls a virtual method "GetStopOnEof".
Virtual Method Call from Constructor,EventStore.Projections.Core.Services.Processing,CoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,CoreProjection,The constructor "CoreProjection" calls a virtual method "GetRequiresRootPartition".
Virtual Method Call from Constructor,EventStore.Projections.Core.Services.Processing,CoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,CoreProjection,The constructor "CoreProjection" calls a virtual method "GetUseCheckpoints".
Virtual Method Call from Constructor,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,CoreProjectionCheckpointManager,The constructor "CoreProjectionCheckpointManager" calls a virtual method "MakeZeroCheckpointTag".
Virtual Method Call from Constructor,EventStore.Projections.Core.Services.Processing,DefaultCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultCheckpointManager.cs,DefaultCheckpointManager,The constructor "DefaultCheckpointManager" calls a virtual method "MakeZeroCheckpointTag".
Virtual Method Call from Constructor,EventStore.Projections.Core.Services.Processing,EmittedStream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,EmittedStream,The constructor "EmittedStream" calls a virtual method "MakeZeroCheckpointTag".
Magic Number,EventStore.Projections.Core.EventReaders.Feeds,FeedReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\EventReaders\Feeds\FeedReader.cs,Start,The following statement contains a magic number: var readerOptions = new ReaderSubscriptionOptions(  				1024 * 1024'  				checkpointAfterMs: 10000'  				checkpointProcessedEventsThreshold: null'  				stopOnEof: true'  				stopAfterNEvents: _maxEvents);
Magic Number,EventStore.Projections.Core.EventReaders.Feeds,FeedReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\EventReaders\Feeds\FeedReader.cs,Start,The following statement contains a magic number: var readerOptions = new ReaderSubscriptionOptions(  				1024 * 1024'  				checkpointAfterMs: 10000'  				checkpointProcessedEventsThreshold: null'  				stopOnEof: true'  				stopAfterNEvents: _maxEvents);
Magic Number,EventStore.Projections.Core.EventReaders.Feeds,FeedReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\EventReaders\Feeds\FeedReader.cs,Start,The following statement contains a magic number: var readerOptions = new ReaderSubscriptionOptions(  				1024 * 1024'  				checkpointAfterMs: 10000'  				checkpointProcessedEventsThreshold: null'  				stopOnEof: true'  				stopAfterNEvents: _maxEvents);
Magic Number,EventStore.Projections.Core.Messages,CommittedEventReceived,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,Sample,The following statement contains a magic number: return new CommittedEventReceived(  					subscriptionId' 0' null' data' 77.7f' subscriptionMessageSequenceNumber);
Magic Number,EventStore.Projections.Core.Messages,CommittedEventReceived,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,Sample,The following statement contains a magic number: return new CommittedEventReceived(  					subscriptionId' checkpointTag' null' data' 77.7f' subscriptionMessageSequenceNumber' null);
Magic Number,EventStore.Projections.Core.Messages,CommittedEventDistributed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ReaderSubscriptionMessage.cs,Sample,The following statement contains a magic number: return new CommittedEventDistributed(  					correlationId'  					new ResolvedEvent(  						eventStreamId' eventSequenceNumber' eventStreamId' eventSequenceNumber' resolvedLinkTo'  						position'  						position' eventId' eventType' isJson' data' metadata' null' null'  						timestamp.GetValueOrDefault())'  					position.PreparePosition' 11.1f);
Magic Number,EventStore.Projections.Core,ProjectionWorkerNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionWorkerNode.cs,ProjectionWorkerNode,The following statement contains a magic number: _eventReaderCoreService = new EventReaderCoreService(  				publisher'  				_ioDispatcher'  				10'  				db.Config.WriterCheckpoint'  				runHeadingReader: runProjections >= ProjectionType.System'  				faultOutOfOrderProjections: faultOutOfOrderProjections);
Magic Number,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjections,The following statement contains a magic number: http.ReplyTextContent(  				"Moved"' 302' "Found"' "text/plain"'  				new[] {  					new KeyValuePair<string' string>(  						"Location"' new Uri(match.BaseUri' "/web/projections.htm").AbsoluteUri)  				}' x => Log.DebugException(x' "Reply Text Content Failed."));
Magic Number,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionsReadEvents,The following statement contains a magic number: http.ReadTextRequestAsync(  				(o' body) => {  					var bodyParsed = body.ParseJson<ReadEventsBody>();  					var fromPosition = CheckpointTag.FromJson(  						new JTokenReader(bodyParsed.Position)' new ProjectionVersion(0' 0' 0));      					Publish(  						new FeedReaderMessage.ReadPage(  							Guid.NewGuid()'  							envelope'  							http.User'  							bodyParsed.Query'  							fromPosition.Tag'  							bodyParsed.MaxEvents ?? 10));  				}'  				x => Log.DebugException(x' "Read Request Body Failed."));
Magic Number,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,ProjectionsPost,The following statement contains a magic number: var envelope = new SendToHttpEnvelope<ProjectionManagementMessage.Updated>(  				_networkSendQueue' http' DefaultFormatter' (codec' message) => {  					var localPath = string.Format("/projection/{0}"' message.Name);  					var url = MakeUrl(http' localPath);  					return new ResponseConfiguration(  						201' "Created"' codec.ContentType' codec.Encoding'  						new KeyValuePair<string' string>("Location"' url));  				}' ErrorsEnvelope(http));
Magic Number,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OkResponseConfigurator,The following statement contains a magic number: return new ResponseConfiguration(200' "OK"' codec.ContentType' Helper.UTF8NoBom);
Magic Number,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,NotFoundConfigurator,The following statement contains a magic number: return new ResponseConfiguration(404' "Not Found"' "text/plain"' Helper.UTF8NoBom);
Magic Number,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,NotAuthorizedConfigurator,The following statement contains a magic number: return new ResponseConfiguration(401' "Not Authorized"' "text/plain"' Encoding.UTF8);
Magic Number,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OperationFailedConfigurator,The following statement contains a magic number: return new ResponseConfiguration(500' "Failed"' "text/plain"' Helper.UTF8NoBom);
Magic Number,EventStore.Projections.Core.Services.Http,ProjectionsController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,ConflictConfigurator,The following statement contains a magic number: return new ResponseConfiguration(409' "Conflict"' "text/plain"' Helper.UTF8NoBom);
Magic Number,EventStore.Projections.Core.Services,ProjectionConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionConfig.cs,GetTest,The following statement contains a magic number: return new ProjectionConfig(null' 1000' 1000 * 1000' 100' 500' true' true' false' false' false' true' 10000'  				1);
Magic Number,EventStore.Projections.Core.Services,ProjectionConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionConfig.cs,GetTest,The following statement contains a magic number: return new ProjectionConfig(null' 1000' 1000 * 1000' 100' 500' true' true' false' false' false' true' 10000'  				1);
Magic Number,EventStore.Projections.Core.Services,ProjectionConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionConfig.cs,GetTest,The following statement contains a magic number: return new ProjectionConfig(null' 1000' 1000 * 1000' 100' 500' true' true' false' false' false' true' 10000'  				1);
Magic Number,EventStore.Projections.Core.Services,ProjectionConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionConfig.cs,GetTest,The following statement contains a magic number: return new ProjectionConfig(null' 1000' 1000 * 1000' 100' 500' true' true' false' false' false' true' 10000'  				1);
Magic Number,EventStore.Projections.Core.Services,ProjectionConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionConfig.cs,GetTest,The following statement contains a magic number: return new ProjectionConfig(null' 1000' 1000 * 1000' 100' 500' true' true' false' false' false' true' 10000'  				1);
Magic Number,EventStore.Projections.Core.Services,ProjectionConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionConfig.cs,GetTest,The following statement contains a magic number: return new ProjectionConfig(null' 1000' 1000 * 1000' 100' 500' true' true' false' false' false' true' 10000'  				1);
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Enabled.GetHashCode();
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (int)MasterStatus;
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode() : 0);
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode() : 0);
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode();
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Epoch.GetHashCode();
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Version.GetHashCode();
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (int)Mode;
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode() : 0);
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Progress.GetHashCode();
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode() : 0);
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ BufferedEvents;
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode() : 0);
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ PartitionsCached;
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ReadsInProgress;
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ WritesInProgress;
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode() : 0);
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode() : 0);
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode();
Magic Number,EventStore.Projections.Core.Services.Management,ManagedProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,FixupOldProjectionModes,The following statement contains a magic number: switch ((int)persistedState.Mode) {  				case 2: // old continuous  					persistedState.Mode = ProjectionMode.Continuous;  					break;  				case 3: // old persistent  					persistedState.Mode = ProjectionMode.Continuous;  					persistedState.EmitEnabled = persistedState.EmitEnabled ?? true;  					break;  			}
Magic Number,EventStore.Projections.Core.Services.Management,ManagedProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,FixupOldProjectionModes,The following statement contains a magic number: switch ((int)persistedState.Mode) {  				case 2: // old continuous  					persistedState.Mode = ProjectionMode.Continuous;  					break;  				case 3: // old persistent  					persistedState.Mode = ProjectionMode.Continuous;  					persistedState.EmitEnabled = persistedState.EmitEnabled ?? true;  					break;  			}
Magic Number,EventStore.Projections.Core.Services.Management,MasterCoreProjectionResponseReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\MasterCoreProjectionResponseReader.cs,StartReaderSteps,The following statement contains a magic number: yield return  						_ioDispatcher.BeginReadForward(  							_cancellationScope'  							_streamId'  							@from'  							10'  							false'  							SystemAccount.Principal'  							completed => {  								if (completed.Result == ReadStreamResult.Success  								    || completed.Result == ReadStreamResult.NoStream) {  									@from = completed.NextEventNumber == -1 ? 0 : completed.NextEventNumber;  									eof = completed.IsEndOfStream;  									// subscribeFrom is only used if eof  									subscribeFrom = new TFPos(  										completed.TfLastCommitPosition'  										completed.TfLastCommitPosition);  									if (completed.Result == ReadStreamResult.Success) {  										foreach (var e in completed.Events)  											PublishCommand(e);  									}  								}  							}'  							() => Log.Warn("Read forward of stream {stream} timed out. Retrying"' _streamId));
Magic Number,EventStore.Projections.Core.Services.Management,ProjectionCoreCoordinator,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionCoreCoordinator.cs,ScheduleRegularTimeout,The following statement contains a magic number: _publisher.Publish(  				TimerMessage.Schedule.Create(  					TimeSpan.FromMilliseconds(100)'  					_publishEnvelope'  					new ProjectionManagementMessage.Internal.RegularTimeout()));
Magic Number,EventStore.Projections.Core.Services.Management,ProjectionManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,ScheduleExpire,The following statement contains a magic number: _publisher.Publish(  				TimerMessage.Schedule.Create(  					TimeSpan.FromSeconds(60)'  					_publishEnvelope'  					new ProjectionManagementMessage.Internal.CleanupExpired()));
Magic Number,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,ReadForward,The following statement contains a magic number: _cancellationScope.Register(  				_ioDispatcher.ReadForward(  					ProjectionNamesBuilder._projectionsMasterStream'  					_readFrom'  					10'  					false'  					SystemAccount.Principal'  					ReadForwardCompleted'  					() => {  						Log.Warn("Read forward of stream {stream} timed out. Retrying"'  							ProjectionNamesBuilder._projectionsMasterStream);  						ReadForward();  					}'  					_correlationId)  			);
Magic Number,EventStore.Projections.Core.Services.Management,TimeoutScheduler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\TimeoutScheduler.cs,Tick,The following statement contains a magic number: entry.Timeout -= 100;
Magic Number,EventStore.Projections.Core.Services.Processing,AllStreamsCatalogEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\AllStreamsCatalogEventReader.cs,Handle,The following statement contains a magic number: switch (message.Result) {  				case ReadStreamResult.NoStream:  					_eof = true;  					EnqueueDeliverSafeJoinPosition(  						GetLastCommitPositionFrom(message)); // allow joining heading distribution  					PauseOrContinueProcessing();  					EnqueueIdle();  					EnqueueEof();  					break;  				case ReadStreamResult.Success:  					var oldFromSequenceNumber = _fromSequenceNumber;  					_fromSequenceNumber = message.NextEventNumber;  					var eof = message.Events.Length == 0;  					var willDispose = eof && _stopOnEof;    					if (eof) {  						// the end  						_eof = true;  						EnqueueDeliverSafeJoinPosition(GetLastCommitPositionFrom(message));  						EnqueueIdle();  						EnqueueEof();  					} else {  						_eof = false;  						for (int index = 0; index < message.Events.Length; index++) {  							var @event = message.Events[index].Event;  							var @link = message.Events[index].Link;  							EnqueueDeliverEvent(  								@event' @link' 100.0f * (link ?? @event).EventNumber / message.LastEventNumber'  								ref oldFromSequenceNumber);  						}  					}    					//NOTE: unlike other readers all stream reader requests new reads after processing  					// read results.  This is due to other potential reads generated by the results itself.   					// i.e. reading metastreams for each stream mentioned  					if (!willDispose) {  						PauseOrContinueProcessing();  					}    					break;  				case ReadStreamResult.AccessDenied:  					_eof = true;  					EnqueueNotAuthorized();  					return;  				default:  					throw new NotSupportedException(  						string.Format("ReadEvents result code was not recognized. Code: {0}"' message.Result));  			}
Magic Number,EventStore.Projections.Core.Services.Processing,AllStreamsCatalogEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\AllStreamsCatalogEventReader.cs,DeliverSafeJoinPosition,The following statement contains a magic number: _publisher.Publish(  				new ReaderSubscriptionMessage.CommittedEventDistributed(  					EventReaderCorrelationId' null' safeJoinPosition' 100.0f' source: GetType()));
Magic Number,EventStore.Projections.Core.Services.Processing,ByStreamCatalogEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ByStreamCatalogEventReader.cs,RequestEvents,The following statement contains a magic number: _pendingStreams.Count < 10 && !_catalogEof
Magic Number,EventStore.Projections.Core.Services.Processing,ByStreamCatalogEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ByStreamCatalogEventReader.cs,ReadDataStreamCompleted,The following statement contains a magic number: switch (completed.Result) {  				case ReadStreamResult.AccessDenied:  					SendNotAuthorized();  					return;  				case ReadStreamResult.NoStream:  					_dataNextSequenceNumber = EventNumber.DeletedStream;  					if (completed.LastEventNumber >= 0)  						SendPartitionDeleted_WhenReadingDataStream(_dataStreamName' -1' null' null' null' null);  					PauseOrContinueProcessing();  					break;  				case ReadStreamResult.StreamDeleted:  					_dataNextSequenceNumber = EventNumber.DeletedStream;  					SendPartitionDeleted_WhenReadingDataStream(_dataStreamName' -1' null' null' null' null);  					PauseOrContinueProcessing();  					break;  				case ReadStreamResult.Success:  					foreach (var e in completed.Events)  						DeliverEvent(e' 17.7f);  					if (completed.IsEndOfStream)  						_dataNextSequenceNumber = EventNumber.DeletedStream;  					PauseOrContinueProcessing();  					break;  				default:  					throw new NotSupportedException();  			}
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: switch (name) {  					case "$cp":  						Check(reader.Read()' reader);  						var completed = (bool)reader.Value;  						commitPosition = completed ? Int64.MaxValue : Int64.MinValue;  						preparePosition = completed ? Int64.MaxValue : Int64.MinValue;  						break;  					case "$v":  					case "v":  						Check(reader.Read()' reader);  						if (reader.ValueType == typeof(long)) {  							var v = (int)(long)reader.Value;  							if (v > 0) // TODO: remove this if with time  								projectionVersion = v;  						} else {  							//TODO: better handle errors  							var v = (string)reader.Value;  							string[] parts = v.Split(':');  							if (parts.Length == 2) {  								projectionVersion = Int32.Parse(parts[1]);  							} else {  								projectionId = Int32.Parse(parts[0]);  								projectionEpoch = Int32.Parse(parts[1]);  								projectionVersion = Int32.Parse(parts[2]);  								if (parts.Length >= 4)  									projectionSystemVersion = Int32.Parse(parts[3]);  							}  						}    						break;  					case "$c":  					case "c":  					case "commitPosition":  						Check(reader.Read()' reader);  						commitPosition = (long)reader.Value;  						break;  					case "$p":  					case "p":  					case "preparePosition":  						Check(reader.Read()' reader);  						preparePosition = (long)reader.Value;  						break;  					case "$s":  					case "s":  					case "streams":  						Check(reader.Read()' reader);  						if (reader.TokenType == JsonToken.StartArray) {  							Check(reader.Read()' reader);  							Check(JsonToken.StartObject' reader);  							Check(reader.Read()' reader);  							Check(JsonToken.PropertyName' reader);  							catalogStream = (string)reader.Value;  							Check(reader.Read()' reader);  							catalogPosition = (int)(long)reader.Value;  							Check(reader.Read()' reader);  							Check(JsonToken.EndObject' reader);    							Check(reader.Read()' reader);  							if (reader.TokenType == JsonToken.StartObject) {  								Check(reader.Read()' reader);  								Check(JsonToken.PropertyName' reader);  								dataStream = (string)reader.Value;  								Check(reader.Read()' reader);  								dataPosition = (int)(long)reader.Value;  								Check(reader.Read()' reader);  								Check(JsonToken.EndObject' reader);  								Check(reader.Read()' reader);  							}    							Check(JsonToken.EndArray' reader);  						} else {  							Check(JsonToken.StartObject' reader);  							streams = new Dictionary<string' long>();  							while (true) {  								Check(reader.Read()' reader);  								if (reader.TokenType == JsonToken.EndObject)  									break;  								Check(JsonToken.PropertyName' reader);  								var streamName = (string)reader.Value;  								Check(reader.Read()' reader);  								var position = (int)(long)reader.Value;  								streams.Add(streamName' position);  							}  						}    						break;  					case "$ph":  						Check(reader.Read()' reader);  						projectionPhase = (int)(long)reader.Value;  						break;  					case "$m":  						Check(reader.Read()' reader);  						var readMode = (string)reader.Value;  						if (readMode != "bs")  							throw new ApplicationException("Unknown checkpoint tag mode: " + readMode);  						byStreamMode = true;  						break;  					default:  						if (extra == null)  							extra = new Dictionary<string' JToken>();  						Check(reader.Read()' reader);  						var jToken = JToken.ReadFrom(reader);  						extra.Add(name' jToken);  						break;  				}
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: switch (name) {  					case "$cp":  						Check(reader.Read()' reader);  						var completed = (bool)reader.Value;  						commitPosition = completed ? Int64.MaxValue : Int64.MinValue;  						preparePosition = completed ? Int64.MaxValue : Int64.MinValue;  						break;  					case "$v":  					case "v":  						Check(reader.Read()' reader);  						if (reader.ValueType == typeof(long)) {  							var v = (int)(long)reader.Value;  							if (v > 0) // TODO: remove this if with time  								projectionVersion = v;  						} else {  							//TODO: better handle errors  							var v = (string)reader.Value;  							string[] parts = v.Split(':');  							if (parts.Length == 2) {  								projectionVersion = Int32.Parse(parts[1]);  							} else {  								projectionId = Int32.Parse(parts[0]);  								projectionEpoch = Int32.Parse(parts[1]);  								projectionVersion = Int32.Parse(parts[2]);  								if (parts.Length >= 4)  									projectionSystemVersion = Int32.Parse(parts[3]);  							}  						}    						break;  					case "$c":  					case "c":  					case "commitPosition":  						Check(reader.Read()' reader);  						commitPosition = (long)reader.Value;  						break;  					case "$p":  					case "p":  					case "preparePosition":  						Check(reader.Read()' reader);  						preparePosition = (long)reader.Value;  						break;  					case "$s":  					case "s":  					case "streams":  						Check(reader.Read()' reader);  						if (reader.TokenType == JsonToken.StartArray) {  							Check(reader.Read()' reader);  							Check(JsonToken.StartObject' reader);  							Check(reader.Read()' reader);  							Check(JsonToken.PropertyName' reader);  							catalogStream = (string)reader.Value;  							Check(reader.Read()' reader);  							catalogPosition = (int)(long)reader.Value;  							Check(reader.Read()' reader);  							Check(JsonToken.EndObject' reader);    							Check(reader.Read()' reader);  							if (reader.TokenType == JsonToken.StartObject) {  								Check(reader.Read()' reader);  								Check(JsonToken.PropertyName' reader);  								dataStream = (string)reader.Value;  								Check(reader.Read()' reader);  								dataPosition = (int)(long)reader.Value;  								Check(reader.Read()' reader);  								Check(JsonToken.EndObject' reader);  								Check(reader.Read()' reader);  							}    							Check(JsonToken.EndArray' reader);  						} else {  							Check(JsonToken.StartObject' reader);  							streams = new Dictionary<string' long>();  							while (true) {  								Check(reader.Read()' reader);  								if (reader.TokenType == JsonToken.EndObject)  									break;  								Check(JsonToken.PropertyName' reader);  								var streamName = (string)reader.Value;  								Check(reader.Read()' reader);  								var position = (int)(long)reader.Value;  								streams.Add(streamName' position);  							}  						}    						break;  					case "$ph":  						Check(reader.Read()' reader);  						projectionPhase = (int)(long)reader.Value;  						break;  					case "$m":  						Check(reader.Read()' reader);  						var readMode = (string)reader.Value;  						if (readMode != "bs")  							throw new ApplicationException("Unknown checkpoint tag mode: " + readMode);  						byStreamMode = true;  						break;  					default:  						if (extra == null)  							extra = new Dictionary<string' JToken>();  						Check(reader.Read()' reader);  						var jToken = JToken.ReadFrom(reader);  						extra.Add(name' jToken);  						break;  				}
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: switch (name) {  					case "$cp":  						Check(reader.Read()' reader);  						var completed = (bool)reader.Value;  						commitPosition = completed ? Int64.MaxValue : Int64.MinValue;  						preparePosition = completed ? Int64.MaxValue : Int64.MinValue;  						break;  					case "$v":  					case "v":  						Check(reader.Read()' reader);  						if (reader.ValueType == typeof(long)) {  							var v = (int)(long)reader.Value;  							if (v > 0) // TODO: remove this if with time  								projectionVersion = v;  						} else {  							//TODO: better handle errors  							var v = (string)reader.Value;  							string[] parts = v.Split(':');  							if (parts.Length == 2) {  								projectionVersion = Int32.Parse(parts[1]);  							} else {  								projectionId = Int32.Parse(parts[0]);  								projectionEpoch = Int32.Parse(parts[1]);  								projectionVersion = Int32.Parse(parts[2]);  								if (parts.Length >= 4)  									projectionSystemVersion = Int32.Parse(parts[3]);  							}  						}    						break;  					case "$c":  					case "c":  					case "commitPosition":  						Check(reader.Read()' reader);  						commitPosition = (long)reader.Value;  						break;  					case "$p":  					case "p":  					case "preparePosition":  						Check(reader.Read()' reader);  						preparePosition = (long)reader.Value;  						break;  					case "$s":  					case "s":  					case "streams":  						Check(reader.Read()' reader);  						if (reader.TokenType == JsonToken.StartArray) {  							Check(reader.Read()' reader);  							Check(JsonToken.StartObject' reader);  							Check(reader.Read()' reader);  							Check(JsonToken.PropertyName' reader);  							catalogStream = (string)reader.Value;  							Check(reader.Read()' reader);  							catalogPosition = (int)(long)reader.Value;  							Check(reader.Read()' reader);  							Check(JsonToken.EndObject' reader);    							Check(reader.Read()' reader);  							if (reader.TokenType == JsonToken.StartObject) {  								Check(reader.Read()' reader);  								Check(JsonToken.PropertyName' reader);  								dataStream = (string)reader.Value;  								Check(reader.Read()' reader);  								dataPosition = (int)(long)reader.Value;  								Check(reader.Read()' reader);  								Check(JsonToken.EndObject' reader);  								Check(reader.Read()' reader);  							}    							Check(JsonToken.EndArray' reader);  						} else {  							Check(JsonToken.StartObject' reader);  							streams = new Dictionary<string' long>();  							while (true) {  								Check(reader.Read()' reader);  								if (reader.TokenType == JsonToken.EndObject)  									break;  								Check(JsonToken.PropertyName' reader);  								var streamName = (string)reader.Value;  								Check(reader.Read()' reader);  								var position = (int)(long)reader.Value;  								streams.Add(streamName' position);  							}  						}    						break;  					case "$ph":  						Check(reader.Read()' reader);  						projectionPhase = (int)(long)reader.Value;  						break;  					case "$m":  						Check(reader.Read()' reader);  						var readMode = (string)reader.Value;  						if (readMode != "bs")  							throw new ApplicationException("Unknown checkpoint tag mode: " + readMode);  						byStreamMode = true;  						break;  					default:  						if (extra == null)  							extra = new Dictionary<string' JToken>();  						Check(reader.Read()' reader);  						var jToken = JToken.ReadFrom(reader);  						extra.Add(name' jToken);  						break;  				}
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: switch (name) {  					case "$cp":  						Check(reader.Read()' reader);  						var completed = (bool)reader.Value;  						commitPosition = completed ? Int64.MaxValue : Int64.MinValue;  						preparePosition = completed ? Int64.MaxValue : Int64.MinValue;  						break;  					case "$v":  					case "v":  						Check(reader.Read()' reader);  						if (reader.ValueType == typeof(long)) {  							var v = (int)(long)reader.Value;  							if (v > 0) // TODO: remove this if with time  								projectionVersion = v;  						} else {  							//TODO: better handle errors  							var v = (string)reader.Value;  							string[] parts = v.Split(':');  							if (parts.Length == 2) {  								projectionVersion = Int32.Parse(parts[1]);  							} else {  								projectionId = Int32.Parse(parts[0]);  								projectionEpoch = Int32.Parse(parts[1]);  								projectionVersion = Int32.Parse(parts[2]);  								if (parts.Length >= 4)  									projectionSystemVersion = Int32.Parse(parts[3]);  							}  						}    						break;  					case "$c":  					case "c":  					case "commitPosition":  						Check(reader.Read()' reader);  						commitPosition = (long)reader.Value;  						break;  					case "$p":  					case "p":  					case "preparePosition":  						Check(reader.Read()' reader);  						preparePosition = (long)reader.Value;  						break;  					case "$s":  					case "s":  					case "streams":  						Check(reader.Read()' reader);  						if (reader.TokenType == JsonToken.StartArray) {  							Check(reader.Read()' reader);  							Check(JsonToken.StartObject' reader);  							Check(reader.Read()' reader);  							Check(JsonToken.PropertyName' reader);  							catalogStream = (string)reader.Value;  							Check(reader.Read()' reader);  							catalogPosition = (int)(long)reader.Value;  							Check(reader.Read()' reader);  							Check(JsonToken.EndObject' reader);    							Check(reader.Read()' reader);  							if (reader.TokenType == JsonToken.StartObject) {  								Check(reader.Read()' reader);  								Check(JsonToken.PropertyName' reader);  								dataStream = (string)reader.Value;  								Check(reader.Read()' reader);  								dataPosition = (int)(long)reader.Value;  								Check(reader.Read()' reader);  								Check(JsonToken.EndObject' reader);  								Check(reader.Read()' reader);  							}    							Check(JsonToken.EndArray' reader);  						} else {  							Check(JsonToken.StartObject' reader);  							streams = new Dictionary<string' long>();  							while (true) {  								Check(reader.Read()' reader);  								if (reader.TokenType == JsonToken.EndObject)  									break;  								Check(JsonToken.PropertyName' reader);  								var streamName = (string)reader.Value;  								Check(reader.Read()' reader);  								var position = (int)(long)reader.Value;  								streams.Add(streamName' position);  							}  						}    						break;  					case "$ph":  						Check(reader.Read()' reader);  						projectionPhase = (int)(long)reader.Value;  						break;  					case "$m":  						Check(reader.Read()' reader);  						var readMode = (string)reader.Value;  						if (readMode != "bs")  							throw new ApplicationException("Unknown checkpoint tag mode: " + readMode);  						byStreamMode = true;  						break;  					default:  						if (extra == null)  							extra = new Dictionary<string' JToken>();  						Check(reader.Read()' reader);  						var jToken = JToken.ReadFrom(reader);  						extra.Add(name' jToken);  						break;  				}
Magic Number,EventStore.Projections.Core.Services.Processing,CoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,GetStatistics,The following statement contains a magic number: info.Progress = -2.0f;
Magic Number,EventStore.Projections.Core.Services.Processing,CoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,CompletePhase,The following statement contains a magic number: _checkpointManager.Progress(100.0f);
Magic Number,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointReader.cs,RequestLoadState,The following statement contains a magic number: const int recordsToRequest = 10;
Magic Number,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointWriter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointWriter.cs,CreateStreamMetadataEvent,The following statement contains a magic number: var metadata = new StreamMetadata(maxCount: 2' maxAge: null' cacheControl: null' acl: acl);
Magic Number,EventStore.Projections.Core.Services.Processing,CoreProjectionQueue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionQueue.cs,ProcessOneEventBatch,The following statement contains a magic number: var processed = _queuePendingEvents.Process(max: 30);
Magic Number,EventStore.Projections.Core.Services.Processing,CoreProjectionQueue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionQueue.cs,ProcessOneEventBatch,The following statement contains a magic number: _subscriptionPaused && _queuePendingEvents.Count < _pendingEventsThreshold / 2
Magic Number,EventStore.Projections.Core.Services.Processing,IndexBased,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,EnqueueEvents,The following statement contains a magic number: var progress = 100.0f * (link ?? @event).EventNumber / message.LastEventNumber;
Magic Number,EventStore.Projections.Core.Services.Processing,TfBased,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,Handle,The following statement contains a magic number: switch (message.Result) {  					case ReadAllResult.Success:  						var eof = message.Events.Length == 0;  						_eof = eof;  						var willDispose = _reader._stopOnEof && eof;  						_fromTfPosition = message.NextPos;    						if (!willDispose) {  							_reader.PauseOrContinueProcessing();  						}    						if (eof) {  							// the end  							//TODO: is it safe to pass NEXT as last commit position here  							DeliverLastCommitPosition(message.NextPos);  							// allow joining heading distribution  							SendIdle();  							_reader.SendEof();  						} else {  							foreach (var @event in message.Events) {  								var link = @event.Link;  								var data = @event.Event;  								var byStream = link != null && _streamToEventType.ContainsKey(link.EventStreamId);  								string adjustedPositionStreamId;  								var isDeleteStreamEvent =  									StreamDeletedHelper.IsStreamDeletedEvent(  										@event.OriginalStreamId' @event.OriginalEvent.EventType'  										@event.OriginalEvent.Data' out adjustedPositionStreamId);  								if (data == null)  									continue;  								var eventType = isDeleteStreamEvent ? "$deleted" : data.EventType;  								var byEvent = link == null && _eventTypes.Contains(eventType);  								var originalTfPosition = @event.OriginalPosition.Value;  								if (byStream) {  									// ignore data just update positions  									_reader.UpdateNextStreamPosition(link.EventStreamId' link.EventNumber + 1);  									// recover unresolved link event  									var unresolvedLinkEvent =  										EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(link'  											originalTfPosition.CommitPosition);  									DeliverEventRetrievedFromTf(  										unresolvedLinkEvent' 100.0f * link.LogPosition / message.TfLastCommitPosition'  										originalTfPosition);  								} else if (byEvent) {  									DeliverEventRetrievedFromTf(  										@event' 100.0f * data.LogPosition / message.TfLastCommitPosition'  										originalTfPosition);  								}  							}  						}    						if (_disposed)  							return;    						break;  					default:  						throw new NotSupportedException(  							String.Format("ReadEvents result code was not recognized. Code: {0}"' message.Result));  				}
Magic Number,EventStore.Projections.Core.Services.Processing,TfBased,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,Handle,The following statement contains a magic number: switch (message.Result) {  					case ReadAllResult.Success:  						var eof = message.Events.Length == 0;  						_eof = eof;  						var willDispose = _reader._stopOnEof && eof;  						_fromTfPosition = message.NextPos;    						if (!willDispose) {  							_reader.PauseOrContinueProcessing();  						}    						if (eof) {  							// the end  							//TODO: is it safe to pass NEXT as last commit position here  							DeliverLastCommitPosition(message.NextPos);  							// allow joining heading distribution  							SendIdle();  							_reader.SendEof();  						} else {  							foreach (var @event in message.Events) {  								var link = @event.Link;  								var data = @event.Event;  								var byStream = link != null && _streamToEventType.ContainsKey(link.EventStreamId);  								string adjustedPositionStreamId;  								var isDeleteStreamEvent =  									StreamDeletedHelper.IsStreamDeletedEvent(  										@event.OriginalStreamId' @event.OriginalEvent.EventType'  										@event.OriginalEvent.Data' out adjustedPositionStreamId);  								if (data == null)  									continue;  								var eventType = isDeleteStreamEvent ? "$deleted" : data.EventType;  								var byEvent = link == null && _eventTypes.Contains(eventType);  								var originalTfPosition = @event.OriginalPosition.Value;  								if (byStream) {  									// ignore data just update positions  									_reader.UpdateNextStreamPosition(link.EventStreamId' link.EventNumber + 1);  									// recover unresolved link event  									var unresolvedLinkEvent =  										EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(link'  											originalTfPosition.CommitPosition);  									DeliverEventRetrievedFromTf(  										unresolvedLinkEvent' 100.0f * link.LogPosition / message.TfLastCommitPosition'  										originalTfPosition);  								} else if (byEvent) {  									DeliverEventRetrievedFromTf(  										@event' 100.0f * data.LogPosition / message.TfLastCommitPosition'  										originalTfPosition);  								}  							}  						}    						if (_disposed)  							return;    						break;  					default:  						throw new NotSupportedException(  							String.Format("ReadEvents result code was not recognized. Code: {0}"' message.Result));  				}
Magic Number,EventStore.Projections.Core.Services.Processing,TfBased,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,DeliverLastCommitPosition,The following statement contains a magic number: _publisher.Publish(  					new ReaderSubscriptionMessage.CommittedEventDistributed(  						_reader.EventReaderCorrelationId' null' lastPosition.PreparePosition' 100.0f'  						source: this.GetType()));
Magic Number,EventStore.Projections.Core.Services.Processing,ExternallyFedByStreamEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ExternallyFedByStreamEventReader.cs,ReadDataStreamCompleted,The following statement contains a magic number: switch (completed.Result) {  				case ReadStreamResult.AccessDenied:  					SendNotAuthorized();  					return;  				case ReadStreamResult.NoStream:  					_dataNextSequenceNumber = EventNumber.DeletedStream;  					if (completed.LastEventNumber >= 0)  						SendPartitionDeleted_WhenReadingDataStream(_dataStreamName' -1' null' null' null' null);  					PauseOrContinueProcessing();  					break;  				case ReadStreamResult.StreamDeleted:  					_dataNextSequenceNumber = EventNumber.DeletedStream;  					SendPartitionDeleted_WhenReadingDataStream(_dataStreamName' -1' null' null' null' null);  					PauseOrContinueProcessing();  					break;  				case ReadStreamResult.Success:  					foreach (var e in completed.Events)  						DeliverEvent(e' 19.9f);  					if (completed.IsEndOfStream)  						_dataNextSequenceNumber = EventNumber.DeletedStream;  					else  						_dataNextSequenceNumber = completed.NextEventNumber;  					PauseOrContinueProcessing();  					break;  				default:  					throw new NotSupportedException();  			}
Magic Number,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,RequestEvents,The following statement contains a magic number: _publisher.Publish(  					TimerMessage.Schedule.Create(  						TimeSpan.FromMilliseconds(250)' new PublishEnvelope(_publisher' crossThread: true)'  						new UnwrapEnvelopeMessage(ProcessBuffers2)));
Magic Number,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,Handle,The following statement contains a magic number: switch (message.Result) {  				case ReadStreamResult.StreamDeleted:  				case ReadStreamResult.NoStream:  					_eofs[message.EventStreamId] = true;  					UpdateSafePositionToJoin(message.EventStreamId' MessageToLastCommitPosition(message));  					if (message.Result == ReadStreamResult.StreamDeleted  					    || (message.Result == ReadStreamResult.NoStream && message.LastEventNumber >= 0))  						EnqueueItem(null' message.EventStreamId);  					ProcessBuffers();  					_eventsRequested.Remove(message.EventStreamId);  					PauseOrContinueProcessing();  					CheckIdle();  					CheckEof();  					break;  				case ReadStreamResult.Success:  					if (message.Events.Length == 0) {  						// the end  						_eofs[message.EventStreamId] = true;  						UpdateSafePositionToJoin(message.EventStreamId' MessageToLastCommitPosition(message));  						CheckIdle();  						CheckEof();  					} else {  						_eofs[message.EventStreamId] = false;  						for (int index = 0; index < message.Events.Length; index++) {  							var @event = message.Events[index].Event;  							var @link = message.Events[index].Link;  							EventRecord positionEvent = (link ?? @event);  							UpdateSafePositionToJoin(  								positionEvent.EventStreamId' EventPairToPosition(message.Events[index]));  							Tuple<EventStore.Core.Data.ResolvedEvent' float> itemToEnqueue = Tuple.Create(  								message.Events[index]'  								100.0f * (link ?? @event).EventNumber / message.LastEventNumber);  							EnqueueItem(itemToEnqueue' positionEvent.EventStreamId);  						}  					}    					ProcessBuffers();  					_eventsRequested.Remove(message.EventStreamId);  					PauseOrContinueProcessing();  					break;  				case ReadStreamResult.AccessDenied:  					SendNotAuthorized();  					return;  				default:  					throw new NotSupportedException(  						string.Format("ReadEvents result code was not recognized. Code: {0}"' message.Result));  			}
Magic Number,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,DeliverSafePositionToJoin,The following statement contains a magic number: _publisher.Publish(  				new ReaderSubscriptionMessage.CommittedEventDistributed(  					EventReaderCorrelationId' null' PositionToSafeJoinPosition(_safePositionToJoin)' 100.0f'  					source: this.GetType()));
Magic Number,EventStore.Projections.Core.Services.Processing,MultiStreamMultiOutputCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamMultiOutputCheckpointManager.cs,CreateOrderStream,The following statement contains a magic number: return new EmittedStream(  				/* MUST NEVER SEND READY MESSAGE */  				_namingBuilder.GetOrderStreamName()'  				new EmittedStream.WriterConfiguration(  					new EmittedStreamsWriter(_ioDispatcher)' new EmittedStream.WriterConfiguration.StreamMetadata()'  					SystemAccount.Principal' 100' _logger)'  				_projectionVersion' _positionTagger' @from' _publisher' _ioDispatcher' this' noCheckpoints: true);
Magic Number,EventStore.Projections.Core.Services.Processing,MultiStreamMultiOutputCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamMultiOutputCheckpointManager.cs,BeginLoadPrerecordedEventsChunk,The following statement contains a magic number: _ioDispatcher.ReadBackward(  				_namingBuilder.GetOrderStreamName()' fromEventNumber' 100' false' SystemAccount.Principal'  				completed => {  					switch (completed.Result) {  						case ReadStreamResult.NoStream:  							_lastOrderCheckpointTag = _positionTagger.MakeZeroCheckpointTag();  							PrerecordedEventsLoaded(checkpointTag);  							break;  						case ReadStreamResult.Success:  							var epochEnded = false;  							foreach (var @event in completed.Events) {  								var parsed = @event.Event.Metadata.ParseCheckpointTagVersionExtraJson(  									_projectionVersion);  								//TODO: throw exception if different projectionID?  								if (_projectionVersion.ProjectionId != parsed.Version.ProjectionId  								    || _projectionVersion.Epoch > parsed.Version.Version) {  									epochEnded = true;  									break;  								}    								var tag = parsed.AdjustBy(_positionTagger' _projectionVersion);  								//NOTE: even if this tag <= checkpointTag we set last tag  								// this is to know the exact last tag to request when writing  								if (_lastOrderCheckpointTag == null)  									_lastOrderCheckpointTag = tag;    								if (tag <= checkpointTag) {  									SetOrderStreamReadCompleted();  									return;  								}    								EnqueuePrerecordedEvent(@event.Event' tag);  							}    							if (epochEnded || completed.IsEndOfStream)  								SetOrderStreamReadCompleted();  							else  								BeginLoadPrerecordedEventsChunk(checkpointTag' completed.NextEventNumber);  							break;  						default:  							throw new Exception("Cannot read order stream");  					}  				}' () => {  					_logger.Warn("Read backward of stream {stream} timed out. Retrying"'  						_namingBuilder.GetOrderStreamName());  					BeginLoadPrerecordedEventsChunk(checkpointTag' fromEventNumber);  				}' Guid.NewGuid());
Magic Number,EventStore.Projections.Core.Services.Processing,MultiStreamMultiOutputCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamMultiOutputCheckpointManager.cs,EnqueuePrerecordedEvent,The following statement contains a magic number: string[] parts = linkTo.Split(_linkToSeparator' 2);
Magic Number,EventStore.Projections.Core.Services.Processing,ParallelQueryMasterProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryMasterProjectionProcessingPhase.cs,CompleteSpoolProcessingWorkItem,The following statement contains a magic number: _checkpointManager.EventProcessed(position' 18.8f);
Magic Number,EventStore.Projections.Core.Services.Processing,PartitionState,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PartitionState.cs,Deserialize,The following statement contains a magic number: array.Count == 2
Magic Number,EventStore.Projections.Core.Services.Processing,PartitionStateCache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PartitionStateCache.cs,CleanUp,The following statement contains a magic number: removeAllUnlocked || _cacheOrder.Count > _maxCachedPartitions * 5  			                         || CachedItemCount > _maxCachedPartitions
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,StartCoreSteps,The following statement contains a magic number: yield return  						_ioDispatcher.BeginReadForward(  							_cancellationScope'  							coreControlStreamID'  							@from'  							10'  							false'  							SystemAccount.Principal'  							completed => {  								@from = completed.NextEventNumber == -1 ? 0 : completed.NextEventNumber;  								eof = completed.IsEndOfStream;  								// subscribeFrom is only used if eof  								subscribeFrom = new TFPos(  									completed.TfLastCommitPosition'  									completed.TfLastCommitPosition);  								foreach (var e in completed.Events)  									PublishCommand(e);  							}'  							() => Log.Warn("Read forward of stream {stream} timed out. Retrying"' coreControlStreamID));
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ AllStreams.GetHashCode();
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ByStream.GetHashCode();
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ByCustomPartitions.GetHashCode();
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (CatalogStream != null ? CatalogStream.GetHashCode() : 0);
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ LimitingCommitPosition.GetHashCode();
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Options != null ? Options.GetHashCode() : 0);
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionVersion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionVersion.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Epoch.GetHashCode();
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionVersion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionVersion.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Version.GetHashCode();
Magic Number,EventStore.Projections.Core.Services.Processing,ReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,Create,The following statement contains a magic number: sources.ProcessingLagOption < 50
Magic Number,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,PublishProgress,The following statement contains a magic number: now - _lastProgressPublished > TimeSpan.FromMilliseconds(500)
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (PartitionResultStreamNamePattern != null  					           ? PartitionResultStreamNamePattern.GetHashCode()  					           : 0);
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ReorderEvents.GetHashCode();
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ProcessingLag;
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ IsBiState.GetHashCode();
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ DefinesStateTransform.GetHashCode();
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ DefinesCatalogTransform.GetHashCode();
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ProducesResults.GetHashCode();
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ DefinesFold.GetHashCode();
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ HandlesDeletedNotifications.GetHashCode();
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ IncludeLinks.GetHashCode();
Magic Number,EventStore.Projections.Core.Services.Processing,StreamEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,Handle,The following statement contains a magic number: switch (message.Result) {  				case ReadStreamResult.StreamDeleted:  					_eof = true;  					DeliverSafeJoinPosition(GetLastCommitPositionFrom(message)); // allow joining heading distribution  					PauseOrContinueProcessing();  					SendIdle();  					SendPartitionDeleted_WhenReadingDataStream(_streamName' -1' null' null' null' null);  					SendEof();  					break;  				case ReadStreamResult.NoStream:  					_eof = true;  					DeliverSafeJoinPosition(GetLastCommitPositionFrom(message)); // allow joining heading distribution  					PauseOrContinueProcessing();  					SendIdle();  					if (message.LastEventNumber >= 0)  						SendPartitionDeleted_WhenReadingDataStream(_streamName' message.LastEventNumber' null' null'  							null' null);  					SendEof();  					break;  				case ReadStreamResult.Success:  					var oldFromSequenceNumber = StartFrom(message' _fromSequenceNumber);  					_fromSequenceNumber = message.NextEventNumber;  					var eof = message.Events.Length == 0;  					_eof = eof;  					var willDispose = eof && _stopOnEof;    					if (!willDispose) {  						PauseOrContinueProcessing();  					}    					if (eof) {  						// the end  						DeliverSafeJoinPosition(GetLastCommitPositionFrom(message));  						SendIdle();  						SendEof();  					} else {  						for (int index = 0; index < message.Events.Length; index++) {  							var @event = message.Events[index].Event;  							var @link = message.Events[index].Link;  							DeliverEvent(message.Events[index]'  								100.0f * (link ?? @event).EventNumber / message.LastEventNumber'  								ref oldFromSequenceNumber);  						}  					}    					break;  				case ReadStreamResult.AccessDenied:  					SendNotAuthorized();  					return;  				default:  					throw new NotSupportedException(  						string.Format("ReadEvents result code was not recognized. Code: {0}"' message.Result));  			}
Magic Number,EventStore.Projections.Core.Services.Processing,StreamEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,DeliverSafeJoinPosition,The following statement contains a magic number: _publisher.Publish(  				new ReaderSubscriptionMessage.CommittedEventDistributed(  					EventReaderCorrelationId' null' safeJoinPosition' 100.0f' source: this.GetType()));
Magic Number,EventStore.Projections.Core.Services.Processing,TransactionFileEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFileEventReader.cs,DeliverLastCommitPosition,The following statement contains a magic number: _publisher.Publish(  				new ReaderSubscriptionMessage.CommittedEventDistributed(  					EventReaderCorrelationId' null' lastPosition.PreparePosition' 100.0f' source: this.GetType()));
Magic Number,EventStore.Projections.Core.Services.Processing,TransactionFileEventReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFileEventReader.cs,DeliverEvent,The following statement contains a magic number: _publisher.Publish(  				new ReaderSubscriptionMessage.CommittedEventDistributed(  					EventReaderCorrelationId'  					resolvedEvent'  					_stopOnEof ? (long?)null : receivedPosition.PreparePosition'  					100.0f * positionEvent.LogPosition / lastCommitPosition'  					source: this.GetType()));
Magic Number,EventStore.Projections.Core.Services.Processing,WorkItem,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WorkItem.cs,WorkItem,The following statement contains a magic number: _lastStage = 5;
Magic Number,EventStore.Projections.Core.Services.Processing,WorkLoadEstimationStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WorkLoadEstimationStrategy.cs,EstimateWorkerLoad,The following statement contains a magic number: return workerState.UnmeasuredTasksScheduled * 10 + workerState.ScheduledSize;
Magic Number,EventStore.Projections.Core.Services.Processing,WriteQueryResultProjectionProcessingPhaseBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WriteQueryResultProjectionProcessingPhaseBase.cs,ProcessEvent,The following statement contains a magic number: _checkpointManager.EventProcessed(phaseCheckpointTag' 100.0f);
Magic Number,EventStore.Projections.Core.Standard,StreamCategoryExtractor,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Standard\StreamCategoryExtractor.cs,GetExtractor,The following statement contains a magic number: parts.Length != 2
Magic Number,EventStore.Projections.Core.v8,CompiledScript,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\v8\CompiledScript.cs,CheckResult,The following statement contains a magic number: throw new Js1Exception(  					-2' "Failed to compile script. Script execution terminated.  Timeout expired. (1)");
Magic Number,EventStore.Projections.Core.v8,CompiledScript,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\v8\CompiledScript.cs,CheckResult,The following statement contains a magic number: errorCode == 2
Missing Default,EventStore.Projections.Core.Services.Management,ManagedProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,FixupOldProjectionModes,The following switch statement is missing a default case: switch ((int)persistedState.Mode) {  				case 2: // old continuous  					persistedState.Mode = ProjectionMode.Continuous;  					break;  				case 3: // old persistent  					persistedState.Mode = ProjectionMode.Continuous;  					persistedState.EmitEnabled = persistedState.EmitEnabled ?? true;  					break;  			}
Missing Default,EventStore.Projections.Core.Services.Management,ProjectionManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,OnProjectionsListReadCompleted,The following switch statement is missing a default case: switch (msg.Result) {  				case ReadStreamResult.Success:  					foreach (var evnt in msg.Events) {  						var projectionId = evnt.Event.EventNumber;  						if (projectionId == 0)  							projectionId = Int32.MaxValue - 1;  						if (evnt.Event.EventType == ProjectionEventTypes.ProjectionsInitialized) {  							registeredProjections.Add(ProjectionEventTypes.ProjectionsInitialized' projectionId);  							continue;  						}    						var projectionName = Helper.UTF8NoBom.GetString(evnt.Event.Data);  						if (string.IsNullOrEmpty(projectionName)  						    || _projections.ContainsKey(projectionName)) {  							_logger.Warn(  								"PROJECTIONS: The following projection: {projection} has a duplicate registration event."'  								projectionName);  							continue;  						}    						if (evnt.Event.EventType == ProjectionEventTypes.ProjectionCreated) {  							if (registeredProjections.ContainsKey(projectionName)) {  								registeredProjections[projectionName] = projectionId;  								_logger.Warn(  									"PROJECTIONS: The following projection: {projection} has a duplicate created event. Using projection Id {projectionId}"'  									projectionName' projectionId);  								continue;  							}    							registeredProjections.Add(projectionName' projectionId);  						} else if (evnt.Event.EventType == ProjectionEventTypes.ProjectionDeleted) {  							registeredProjections.Remove(projectionName);  						}  					}    					if (!msg.IsEndOfStream) {  						ReadProjectionsList(msg.EventStreamId' registeredProjections' completedAction'  							@from: msg.NextEventNumber);  						return;  					}    					break;  				case ReadStreamResult.StreamDeleted:  				case ReadStreamResult.Error:  				case ReadStreamResult.AccessDenied:  					_logger.Fatal(  						"There was an error reading the projections list due to {e}. Projections could not be loaded."'  						msg.Result);  					return;  			}
Missing Default,EventStore.Projections.Core.Services.Processing,DeliverEventOutItem,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\AllStreamsCatalogEventReader.cs,ReadCompleted,The following switch statement is missing a default case: switch (completed.Result) {  					case ReadStreamResult.NoStream:  					case ReadStreamResult.AccessDenied:  					case ReadStreamResult.StreamDeleted:  						_ready = true;  						Reader.MetaStreamReadCompleted();  						break;  					case ReadStreamResult.Success:  						_ready = true;  						if (completed.Events.Length > 0)  							_metadata = completed.Events[0].Event;  						Reader.MetaStreamReadCompleted();  						break;  				}
Missing Default,EventStore.Projections.Core.Services.Processing,CheckpointTag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,WriteTo,The following switch statement is missing a default case: switch (Mode_) {  				case Mode.Phase:  					jsonWriter.WritePropertyName("$cp");  					jsonWriter.WriteValue(Completed);  					break;  				case Mode.Position:  				case Mode.EventTypeIndex:  					jsonWriter.WritePropertyName("$c");  					jsonWriter.WriteValue(CommitPosition.GetValueOrDefault());  					jsonWriter.WritePropertyName("$p");  					jsonWriter.WriteValue(PreparePosition.GetValueOrDefault());  					if (Mode_ == Mode.EventTypeIndex)  						goto case Mode.MultiStream;  					break;  				case Mode.PreparePosition:  					jsonWriter.WritePropertyName("$p");  					jsonWriter.WriteValue(PreparePosition.GetValueOrDefault());  					break;  				case Mode.Stream:  				case Mode.MultiStream:  					jsonWriter.WritePropertyName("$s");  					jsonWriter.WriteStartObject();  					foreach (var stream in Streams) {  						jsonWriter.WritePropertyName(stream.Key);  						jsonWriter.WriteValue(stream.Value);  					}    					jsonWriter.WriteEndObject();  					break;  				case Mode.ByStream:  					jsonWriter.WritePropertyName("$m");  					jsonWriter.WriteValue("bs");  					jsonWriter.WritePropertyName("$c");  					jsonWriter.WriteValue(CommitPosition.GetValueOrDefault());  					jsonWriter.WritePropertyName("$s");  					jsonWriter.WriteStartArray();  					jsonWriter.WriteStartObject();  					jsonWriter.WritePropertyName(CatalogStream);  					jsonWriter.WriteValue(CatalogPosition);  					jsonWriter.WriteEndObject();  					if (!string.IsNullOrEmpty(DataStream)) {  						jsonWriter.WriteStartObject();  						jsonWriter.WritePropertyName(DataStream);  						jsonWriter.WriteValue(DataPosition);  						jsonWriter.WriteEndObject();  					}    					jsonWriter.WriteEndArray();  					break;  			}
Missing Default,EventStore.Projections.Core.Services.Processing,CoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,GoToState,The following switch statement is missing a default case: switch (state) {  				case State.Stopped:  				case State.Faulted:  				case State.PhaseCompleted:  					if (wasStarted && !wasStopped)  						_checkpointManager.Stopped();  					break;  				case State.Stopping:  				case State.FaultedStopping:  				case State.CompletingPhase:  					if (wasStarted && !wasStopping)  						_checkpointManager.Stopping();  					break;  			}
Missing Default,EventStore.Projections.Core.Services.Processing,CoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,CheckpointCompleted,The following switch statement is missing a default case: switch (_state) {  				case State.Stopping:  					GoToState(State.Stopped);  					break;  				case State.FaultedStopping:  					GoToState(State.Faulted);  					break;  				case State.CompletingPhase:  					GoToState(State.PhaseCompleted);  					break;  			}
Missing Default,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,RecordEventOrder,The following switch statement is missing a default case: switch (_state) {  				case PhaseState.Running:  					_checkpointManager.RecordEventOrder(  						resolvedEvent' orderCheckpointTag' completed);  					break;  				case PhaseState.Stopped:  					_logger.Error("Should not receive events in stopped state anymore");  					completed(); // allow collecting events for debugging  					break;  			}
