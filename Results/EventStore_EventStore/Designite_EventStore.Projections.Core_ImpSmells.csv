Implementation smell,Namespace,Class,File,Method,Description
Long Method,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The method has 122 lines of code.
Long Method,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The method has 134 lines of code.
Complex Method,EventStore.Projections.Core.Services.Management,MasterCoreProjectionResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\MasterCoreProjectionResponseReader.cs,PublishCommand,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,SetState,Cyclomatic complexity of the method is 43
Complex Method,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,StopUnlessPreparedOrLoaded,Cyclomatic complexity of the method is 25
Complex Method,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,Abort,Cyclomatic complexity of the method is 20
Complex Method,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,Cyclomatic complexity of the method is 48
Complex Method,EventStore.Projections.Core.Services.Management,ProjectionStateHandlerFactory,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionStateHandlerFactory.cs,Create,Cyclomatic complexity of the method is 13
Complex Method,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,LoadProjectionListCompleted,Cyclomatic complexity of the method is 10
Complex Method,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,WriteFakeProjectionCompleted,Cyclomatic complexity of the method is 11
Complex Method,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,Handle,Cyclomatic complexity of the method is 9
Complex Method,EventStore.Projections.Core.Services.Processing,AllStreamsCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\AllStreamsCatalogEventReader.cs,Handle,Cyclomatic complexity of the method is 25
Complex Method,EventStore.Projections.Core.Services.Processing,ByStreamCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ByStreamCatalogEventReader.cs,ReadDataStreamCompleted,Cyclomatic complexity of the method is 24
Complex Method,EventStore.Projections.Core.Services.Processing,ByStreamCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ByStreamCatalogEventReader.cs,ReadCatalogCompleted,Cyclomatic complexity of the method is 18
Complex Method,EventStore.Projections.Core.Services.Processing,CheckpointTagExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTagExtensions.cs,ParseCheckpointTagCorrelationId,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointWriter.cs,WriteCheckpointEventCompleted,Cyclomatic complexity of the method is 19
Complex Method,EventStore.Projections.Core.Services.Processing,EventByTypeIndexPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexPositionTagger.cs,AdjustTag,Cyclomatic complexity of the method is 11
Complex Method,EventStore.Projections.Core.Services.Processing,ExternallyFedByStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ExternallyFedByStreamEventReader.cs,ReadDataStreamCompleted,Cyclomatic complexity of the method is 24
Complex Method,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,Handle,Cyclomatic complexity of the method is 27
Complex Method,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,ProcessBuffers,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Projections.Core.Services.Processing,MultiStreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamPositionTagger.cs,AdjustTag,Cyclomatic complexity of the method is 12
Complex Method,EventStore.Projections.Core.Services.Processing,PreparePositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PreparePositionTagger.cs,AdjustTag,Cyclomatic complexity of the method is 11
Complex Method,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,ControlSteps,Cyclomatic complexity of the method is 9
Complex Method,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,PublishCommand,Cyclomatic complexity of the method is 27
Complex Method,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,ProcessOne,Cyclomatic complexity of the method is 10
Complex Method,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,Equals,Cyclomatic complexity of the method is 13
Complex Method,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,ToString,Cyclomatic complexity of the method is 23
Complex Method,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,WriteTo,Cyclomatic complexity of the method is 44
Complex Method,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,Cyclomatic complexity of the method is 58
Complex Method,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,EmitEvents,Cyclomatic complexity of the method is 9
Complex Method,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,HandleWriteEventsCompleted,Cyclomatic complexity of the method is 15
Complex Method,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,ReadStreamEventsBackwardCompleted,Cyclomatic complexity of the method is 10
Complex Method,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,HandleMetadataWriteCompleted,Cyclomatic complexity of the method is 15
Complex Method,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,SubmitWriteEvents,Cyclomatic complexity of the method is 10
Complex Method,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,Create,Cyclomatic complexity of the method is 16
Complex Method,EventStore.Projections.Core.Services.Processing,StreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,Handle,Cyclomatic complexity of the method is 37
Complex Method,EventStore.Projections.Core.Services.Processing,StreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamPositionTagger.cs,AdjustTag,Cyclomatic complexity of the method is 12
Complex Method,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,GoToState,Cyclomatic complexity of the method is 51
Complex Method,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,CheckpointCompleted,Cyclomatic complexity of the method is 9
Complex Method,EventStore.Projections.Core.Services.Processing,TransactionFilePositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFilePositionTagger.cs,AdjustTag,Cyclomatic complexity of the method is 10
Complex Method,EventStore.Projections.Core.Services.Processing,TransactionFileEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFileEventReader.cs,Handle,Cyclomatic complexity of the method is 9
Complex Method,EventStore.Projections.Core.Services.Processing,WorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WorkItem.cs,Process,Cyclomatic complexity of the method is 22
Complex Method,EventStore.Projections.Core.Services.Processing,WriteQueryResultProjectionProcessingPhaseBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WriteQueryResultProjectionProcessingPhaseBase.cs,WriteQueryResultProjectionProcessingPhaseBase,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Projections.Core.Standard,StreamCategoryExtractor,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\StreamCategoryExtractor.cs,GetExtractor,Cyclomatic complexity of the method is 10
Complex Method,EventStore.Projections.Core.v8,QueryScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\QueryScript.cs,CommandHandlerRegisteredCallback,Cyclomatic complexity of the method is 42
Long Parameter List,EventStore.Projections.Core.EventReaders.Feeds,FeedReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\EventReaders\Feeds\FeedReader.cs,FeedReader,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.Messages,EventReaderSubscriptionMessageBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,EventReaderSubscriptionMessageBase,The method has 5 parameters.
Long Parameter List,ParallelQueryProcessingMessages,PartitionProcessingResultOutput,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ParallelQueryProcessingOutputMessages.cs,PartitionProcessingResultOutput,The method has 7 parameters.
Long Parameter List,ParallelQueryProcessingMessages,PartitionMeasuredOutput,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ParallelQueryProcessingOutputMessages.cs,PartitionMeasuredOutput,The method has 5 parameters.
Long Parameter List,ParallelQueryProcessingMessages,PartitionProcessingResult,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ParallelQueryProcessingMessages.cs,PartitionProcessingResult,The method has 7 parameters.
Long Parameter List,ParallelQueryProcessingMessages,PartitionMeasured,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ParallelQueryProcessingMessages.cs,PartitionMeasured,The method has 5 parameters.
Long Parameter List,EventStore.Projections.Core,ProjectionManagerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionManagerNode.cs,SubscribeMainBus,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core,ProjectionsStandardComponents,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionsStandardComponents.cs,ProjectionsStandardComponents,The method has 5 parameters.
Long Parameter List,EventStore.Projections.Core,ProjectionWorkerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionWorkerNode.cs,ProjectionWorkerNode,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services,IProjectionStateHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\IProjectionStateHandler.cs,ProcessEvent,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Services,ProjectionStateHandlerTestExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\IProjectionStateHandler.cs,ProcessEvent,The method has 13 parameters.
Long Parameter List,EventStore.Projections.Core.Services,ProjectionStateHandlerTestExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\IProjectionStateHandler.cs,ProcessEvent,The method has 14 parameters.
Long Parameter List,EventStore.Projections.Core.Services,ProjectionConfig,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionConfig.cs,ProjectionConfig,The method has 11 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,ManagedProjection,The method has 17 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Management,ProjectionCoreCoordinator,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionCoreCoordinator.cs,ProjectionCoreCoordinator,The method has 5 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,ProjectionManager,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,CreateManagedProjectionInstance,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,WriteProjectionRegistrationCompleted,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,CINP,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,AllStreamsCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\AllStreamsCatalogEventReader.cs,AllStreamsCatalogEventReader,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ByStreamCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ByStreamCatalogEventReader.cs,ByStreamCatalogEventReader,The method has 10 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ContinuousProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ContinuousProjectionProcessingStrategy.cs,ContinuousProjectionProcessingStrategy,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ContinuousProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ContinuousProjectionProcessingStrategy.cs,CreateProjectionProcessingPhases,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,CoreProjectionCheckpointManager,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointReader.cs,CoreProjectionCheckpointReader,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,DefaultCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultCheckpointManager.cs,DefaultCheckpointManager,The method has 13 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,DefaultCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultCheckpointManager.cs,OnLoadPartitionStateReadStreamEventsBackwardCompleted,The method has 5 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,EventReaderBasedProjectionProcessingStrategy,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateProcessingPhases,The method has 10 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateFirstProcessingPhase,The method has 12 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateProjectionProcessingPhases,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateCheckpointManager,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,DefaultProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,DefaultProjectionProcessingStrategy,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,DefaultProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateFirstProcessingPhase,The method has 12 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EmittedDataEvent,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedDataEvent.cs,EmittedDataEvent,The method has 9 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EmittedLinkTo,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedLinkTo.cs,EmittedLinkTo,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EmittedLinkTo,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedLinkTo.cs,EmittedLinkTo,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventByTypeIndexEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,EventByTypeIndexEventReader,The method has 10 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventProcessedResult,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessedResult.cs,EventProcessedResult,The method has 10 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventReorderingReaderSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReorderingReaderSubscription.cs,EventReorderingReaderSubscription,The method has 10 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ExternallyFedByStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ExternallyFedByStreamEventReader.cs,ExternallyFedByStreamEventReader,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ExternallyFedReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ExternallyFedReaderStrategy.cs,CreatePausedEventReader,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,GetDataWorkItemBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\GetDataWorkItemBase.cs,GetDataWorkItemBase,The method has 5 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,GetResultWorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\GetResultWorkItem.cs,GetResultWorkItem,The method has 5 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,GetStateWorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\GetStateWorkItem.cs,GetStateWorkItem,The method has 5 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,IEventProcessingProjectionPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\IEventProcessingPhase.cs,EmitEofResult,The method has 5 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,IReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\IReaderStrategy.cs,CreatePausedEventReader,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,IResultWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\IResultWriter.cs,WriteEofResult,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,MultiStreamEventReader,The method has 11 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,MultiStreamMultiOutputCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamMultiOutputCheckpointManager.cs,MultiStreamMultiOutputCheckpointManager,The method has 13 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReader.cs,SendPartitionDeleted_WhenReadingDataStream,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,NoopCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\NoopCheckpointManager.cs,NoopCheckpointManager,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ParallelQueryAllStreamsMasterReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryAllStreamsMasterReaderStrategy.cs,CreatePausedEventReader,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ParallelQueryMasterProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryMasterProjectionProcessingPhase.cs,ParallelQueryMasterProjectionProcessingPhase,The method has 19 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ParallelQueryMasterReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryMasterReaderStrategy.cs,ParallelQueryMasterReaderStrategy,The method has 5 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ParallelQueryMasterReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryMasterReaderStrategy.cs,CreatePausedEventReader,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ParallelQueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryProcessingStrategy.cs,ParallelQueryProcessingStrategy,The method has 11 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ParallelQueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ParallelQueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryProcessingStrategy.cs,CreateFirstProcessingPhase,The method has 12 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ProcessingStrategySelector,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProcessingStrategySelector.cs,CreateProjectionProcessingStrategy,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ProcessingStrategySelector,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProcessingStrategySelector.cs,CreateSlaveProjectionProcessingStrategy,The method has 9 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventReaderCoreService,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReaderCoreService.cs,EventReaderCoreService,The method has 5 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,EventProcessingProjectionProcessingPhase,The method has 22 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,SafeProcessEventByHandler,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,ProcessEventByHandler,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,EventSubscriptionBasedProjectionProcessingPhase,The method has 19 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,InternalCommittedEventProcessed,The method has 5 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,EmitEofResult,The method has 5 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionProcessingStrategy.cs,Create,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionProcessingStrategy.cs,CreateProcessingPhases,The method has 10 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,ReaderSubscriptionBase,The method has 9 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,QueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\QueryProcessingStrategy.cs,QueryProcessingStrategy,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,QueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\QueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ResultWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ResultWriter.cs,ResultWriter,The method has 5 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ResultWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ResultWriter.cs,WriteEofResult,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ResultWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ResultWriter.cs,WriteResult,The method has 5 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,SlaveQueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SlaveQueryProcessingStrategy.cs,SlaveQueryProcessingStrategy,The method has 10 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,SlaveQueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SlaveQueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,SlaveQueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SlaveQueryProcessingStrategy.cs,CreateCheckpointManager,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,SlaveResultWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SlaveResultWriter.cs,WriteEofResult,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,CheckpointTag,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromByStreamPosition,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EmittedEvent,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedEvent.cs,EmittedEvent,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,EmittedStream,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreateExternallyFedReaderStrategy,The method has 5 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,Create,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,ReaderStrategy,The method has 14 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedEventReader,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedStreamEventReader,The method has 9 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedEventIndexEventReader,The method has 9 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedMultiStreamEventReader,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedCatalogReader,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ResolvedEvent,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ResolvedEvent.cs,ResolvedEvent,The method has 15 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ResolvedEvent,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ResolvedEvent.cs,ResolvedEvent,The method has 13 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,EmittedLinkToWithRecategorization,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedLinkToWithRecategorization.cs,EmittedLinkToWithRecategorization,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,SpoolStreamProcessingWorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SpoolStreamProcessingWorkItem.cs,SpoolStreamProcessingWorkItem,The method has 10 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,StreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,StreamEventReader,The method has 9 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,CoreProjection,The method has 15 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ProjectionCheckpoint,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCheckpoint.cs,ProjectionCheckpoint,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ReaderSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscription.cs,ReaderSubscription,The method has 10 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,TransactionFileEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFileEventReader.cs,TransactionFileEventReader,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,WriteQueryEofProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WriteQueryEofProjectionProcessingPhase.cs,WriteQueryEofProjectionProcessingPhase,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,WriteQueryResultProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WriteQueryResultProjectionProcessingPhase.cs,WriteQueryResultProjectionProcessingPhase,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,WriteQueryResultProjectionProcessingPhaseBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WriteQueryResultProjectionProcessingPhaseBase.cs,WriteQueryResultProjectionProcessingPhaseBase,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.Services.Processing,ProjectionCoreService,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreService.cs,ProjectionCoreService,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.Services.v8,V8ProjectionStateHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\v8\V8ProjectionStateHandler.cs,V8ProjectionStateHandler,The method has 5 parameters.
Long Parameter List,EventStore.Projections.Core.Services.v8,V8ProjectionStateHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\v8\V8ProjectionStateHandler.cs,ProcessEvent,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Standard,CategorizeEventsByStreamPath,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\CategorizeEventsByStreamPath.cs,ProcessEvent,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Standard,CategorizeStreamByPath,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\CategorizeStreamByPath.cs,ProcessEvent,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Standard,IndexEventsByEventType,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\IndexEventsByEventType.cs,ProcessEvent,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Standard,IndexStreams,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\IndexStreams.cs,ProcessEvent,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.Standard,StubHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\StubHandler.cs,ProcessEvent,The method has 7 parameters.
Long Parameter List,EventStore.Projections.Core.v8,Js1,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\js1.cs,CompilePrelude,The method has 6 parameters.
Long Parameter List,EventStore.Projections.Core.v8,Js1,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\js1.cs,CompileQuery,The method has 5 parameters.
Long Parameter List,EventStore.Projections.Core.v8,Js1,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\js1.cs,ExecuteCommandHandler,The method has 8 parameters.
Long Parameter List,EventStore.Projections.Core.v8,PreludeScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\PreludeScript.cs,PreludeScript,The method has 5 parameters.
Long Identifier,EventStore.Projections.Core.Messages,EventReaderSubscriptionMessageBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Messages\EventReaderSubscriptionMessageBase.cs,EventReaderSubscriptionMessageBase,The length of the parameter subscriptionMessageSequenceNumber is 33.
Long Identifier,EventStore.Projections.Core,ProjectionManagerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionManagerNode.cs,CreateManagerService,The length of the parameter projectionManagerCommandWriter is 30.
Long Identifier,EventStore.Projections.Core,ProjectionManagerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionManagerNode.cs,CreateManagerService,The length of the parameter projectionManagerResponseReader is 31.
Long Identifier,EventStore.Projections.Core,ProjectionManagerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionManagerNode.cs,SubscribeMainBus,The length of the parameter projectionManagerResponseReader is 31.
Long Identifier,EventStore.Projections.Core,ProjectionManagerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionManagerNode.cs,SubscribeMainBus,The length of the parameter projectionManagerCommandWriter is 30.
Long Identifier,EventStore.Projections.Core.Services,ProjectionConfig,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionConfig.cs,ProjectionConfig,The length of the parameter checkpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,WritePersistedState,The length of the parameter managedProjectionSerializedState is 32.
Long Identifier,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,CreateDefaultProjectionConfiguration,The length of the parameter checkpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,SendPrerecordedEvent,The length of the parameter prerecordedEventMessageSequenceNumber is 37.
Long Identifier,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,CheckpointWritten,The length of the parameter lastCompletedCheckpointPosition is 31.
Long Identifier,EventStore.Projections.Core.Services.Processing,DefaultCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultCheckpointManager.cs,DefaultCheckpointManager,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateProcessingPhases,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateCheckpointManager,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,EmittedStreamsDeleter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsDeleter.cs,EmittedStreamsDeleter,The length of the parameter emittedStreamsCheckpointStreamId is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventByTypeIndexEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,EventByTypeIndexEventReader,The length of the parameter includeDeletedStreamNotification is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventByTypeIndexEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,DoSwitch,The length of the parameter lastKnownIndexCheckpointPosition is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventByTypeIndexPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexPositionTagger.cs,EventByTypeIndexPositionTagger,The length of the parameter includeStreamDeletedNotification is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventReorderingReaderSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReorderingReaderSubscription.cs,EventReorderingReaderSubscription,The length of the parameter checkpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventReorderingReaderSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReorderingReaderSubscription.cs,EventReorderingReaderSubscription,The length of the parameter checkpointProcessedEventsThreshold is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,MultiStreamMultiOutputCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamMultiOutputCheckpointManager.cs,MultiStreamMultiOutputCheckpointManager,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,ParallelQueryMasterProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryMasterProjectionProcessingPhase.cs,ParallelQueryMasterProjectionProcessingPhase,The length of the parameter spoolProcessingResponseDispatcher is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,ParallelQueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryProcessingStrategy.cs,ParallelQueryProcessingStrategy,The length of the parameter spoolProcessingResponseDispatcher is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,ParallelQueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,ProcessingStrategySelector,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProcessingStrategySelector.cs,ProcessingStrategySelector,The length of the parameter spoolProcessingResponseDispatcher is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventReaderCoreService,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReaderCoreService.cs,StartReaders,The length of the parameter distributionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,EventProcessingProjectionProcessingPhase,The length of the parameter coreProjectionCheckpointManager is 31.
Long Identifier,EventStore.Projections.Core.Services.Processing,ProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionProcessingStrategy.cs,Create,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,ProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionProcessingStrategy.cs,CreateProcessingPhases,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,ReaderSubscriptionBase,The length of the parameter checkpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,ReaderSubscriptionBase,The length of the parameter checkpointProcessedEventsThreshold is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,QueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\QueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,ResultWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ResultWriter.cs,ResultWriter,The length of the parameter coreProjectionCheckpointManager is 31.
Long Identifier,EventStore.Projections.Core.Services.Processing,SlaveQueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SlaveQueryProcessingStrategy.cs,CreateCheckpointManager,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,SourceDefinitionBuilder,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,SetPartitionResultStreamNamePatternOption,The length of the parameter partitionResultStreamNamePattern is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,ReaderStrategy,The length of the parameter includeStreamDeletedNotification is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedEventIndexEventReader,The length of the parameter includeStreamDeletedNotification is 32.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedCatalogReader,The length of the parameter startFromDataStreamEventNumber is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionOptions.cs,ReaderSubscriptionOptions,The length of the parameter checkpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionOptions.cs,ReaderSubscriptionOptions,The length of the parameter checkpointProcessedEventsThreshold is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,SpoolStreamProcessingWorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SpoolStreamProcessingWorkItem.cs,SpoolStreamProcessingWorkItem,The length of the parameter spoolProcessingResponseDispatcher is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,CoreProjection,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,CheckpointCompleted,The length of the parameter lastCompletedCheckpointPosition is 31.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscription.cs,ReaderSubscription,The length of the parameter checkpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.Projections.Core.Services.Processing,ReaderSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscription.cs,ReaderSubscription,The length of the parameter checkpointProcessedEventsThreshold is 34.
Long Identifier,EventStore.Projections.Core.Services.Processing,ProjectionCoreService,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreService.cs,ProjectionCoreService,The length of the parameter spoolProcessingResponseDispatcher is 33.
Long Identifier,EventStore.Projections.Core.v8,Js1,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\js1.cs,CompileQuery,The length of the parameter commandHandlerRegisteredCallback is 32.
Long Statement,EventStore.Projections.Core.EventReaders.Feeds,FeedReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\EventReaders\Feeds\FeedReader.cs,Create,The length of the statement  "	return new FeedReader (publishSubscribeDispatcher' message.User' message.QuerySource' message.FromPosition' message.MaxEvents' message.CorrelationId' message.Envelope' timeProvider); " is 182.
Long Statement,EventStore.Projections.Core.EventReaders.Feeds,FeedReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\EventReaders\Feeds\FeedReader.cs,Start,The length of the statement  "	var readerOptions = new ReaderSubscriptionOptions (1024 * 1024' checkpointProcessedEventsThreshold: null' stopOnEof: true' stopAfterNEvents: _maxEvents); " is 153.
Long Statement,EventStore.Projections.Core.EventReaders.Feeds,FeedReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\EventReaders\Feeds\FeedReader.cs,Start,The length of the statement  "	_subscriptionId = _subscriptionDispatcher.PublishSubscribe (new ReaderSubscriptionManagement.Subscribe (Guid.NewGuid ()' _fromPosition' readerStrategy' readerOptions)' this); " is 174.
Long Statement,EventStore.Projections.Core.EventReaders.Feeds,FeedReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\EventReaders\Feeds\FeedReader.cs,Reply,The length of the statement  "	_replyEnvelope.ReplyWith (new FeedReaderMessage.FeedPage (_requestCorrelationId' FeedReaderMessage.FeedPage.ErrorStatus.Success' _batch.ToArray ()' _lastReaderPosition)); " is 170.
Long Statement,EventStore.Projections.Core.EventReaders.Feeds,FeedReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\EventReaders\Feeds\FeedReader.cs,ReplyNotAuthorized,The length of the statement  "	_replyEnvelope.ReplyWith (new FeedReaderMessage.FeedPage (_requestCorrelationId' FeedReaderMessage.FeedPage.ErrorStatus.NotAuthorized' null' _lastReaderPosition)); " is 163.
Long Statement,ParallelQueryProcessingMessages,PartitionProcessingResultOutput,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Messages\ParallelQueryProcessingOutputMessages.cs,AsInput,The length of the statement  "	return new PartitionProcessingResult (WorkerId' MasterProjectionId' SubscriptionId' Partition' CausedByGuid' Position' Result); " is 127.
Long Statement,EventStore.Projections.Core.Messages.Persisted.Commands,PersistedProjectionConfig,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Messages\Persisted\Commands\PersistedProjectionConfig.cs,ToConfig,The length of the statement  "	return new ProjectionConfig ((RunAs == SystemAccount.Principal.Identity.Name) ? (IPrincipal)SystemAccount.Principal : new OpenGenericPrincipal (RunAs' RunAsRoles)' CheckpointHandledThreshold' CheckpointUnhandledBytesThreshold' PendingEventsThreshold' MaxWriteBatchLength' EmitEventEnabled' CheckpointsEnabled' CreateTempStreams' StopOnEof' IsSlaveProjection' TrackEmittedStreams); " is 380.
Long Statement,EventStore.Projections.Core,ProjectionCoreWorkersNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionCoreWorkersNode.cs,CreateCoreWorkers,The length of the statement  "		var coreQueue = QueuedHandler.CreateQueuedHandler (coreInputBus' "Projection Core #" + coreQueues.Count' groupName: "Projection Core"); " is 135.
Long Statement,EventStore.Projections.Core,ProjectionCoreWorkersNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionCoreWorkersNode.cs,CreateCoreWorkers,The length of the statement  "		var projectionNode = new ProjectionWorkerNode (workerId' standardComponents.Db' coreQueue' standardComponents.TimeProvider' coreTimeoutSchedulers [coreQueues.Count]' projectionsStandardComponents.RunProjections); " is 212.
Long Statement,EventStore.Projections.Core,ProjectionCoreWorkersNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionCoreWorkersNode.cs,CreateCoreWorkers,The length of the statement  "		var forwarder = new RequestResponseQueueForwarder (inputQueue: coreQueue' externalRequestQueue: standardComponents.MainQueue); " is 126.
Long Statement,EventStore.Projections.Core,ProjectionCoreWorkersNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionCoreWorkersNode.cs,CreateCoreWorkers,The length of the statement  "	var coordinator = new ProjectionCoreCoordinator (projectionsStandardComponents.RunProjections' coreTimeoutSchedulers' queues' projectionsStandardComponents.MasterOutputBus' new PublishEnvelope (projectionsStandardComponents.MasterInputQueue' crossThread: true)); " is 262.
Long Statement,EventStore.Projections.Core,ProjectionCoreWorkersNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionCoreWorkersNode.cs,CreateCoreWorkers,The length of the statement  "	projectionsStandardComponents.MasterMainBus.Subscribe (Forwarder.CreateBalancing<FeedReaderMessage.ReadPage> (coreQueues.Values.Cast<IPublisher> ().ToArray ())); " is 161.
Long Statement,EventStore.Projections.Core,ProjectionManagerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionManagerNode.cs,CreateManagerService,The length of the statement  "	var projectionsController = new ProjectionsController (standardComponents.HttpForwarder' inputQueue' standardComponents.NetworkSendService); " is 140.
Long Statement,EventStore.Projections.Core,ProjectionManagerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionManagerNode.cs,CreateManagerService,The length of the statement  "	var forwarder = new RequestResponseQueueForwarder (inputQueue: projectionsStandardComponents.MasterInputQueue' externalRequestQueue: standardComponents.MainQueue); " is 163.
Long Statement,EventStore.Projections.Core,ProjectionManagerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionManagerNode.cs,CreateManagerService,The length of the statement  "	var projectionManager = new ProjectionManager (inputQueue' outputBus' queues' new RealTimeProvider ()' projectionsStandardComponents.RunProjections' ioDispatcher); " is 163.
Long Statement,EventStore.Projections.Core,ProjectionManagerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionManagerNode.cs,CreateManagerService,The length of the statement  "	SubscribeMainBus (projectionsStandardComponents.MasterMainBus' projectionManager' projectionsStandardComponents.RunProjections' projectionManagerResponseReader' ioDispatcher' projectionManagerCommandWriter); " is 207.
Long Statement,EventStore.Projections.Core,ProjectionManagerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionManagerNode.cs,SubscribeOutputBus,The length of the statement  "	managerOutput.Subscribe (Forwarder.Create<ProjectionManagementMessage.RequestSystemProjections> (standardComponents.MainQueue)); " is 128.
Long Statement,EventStore.Projections.Core,ProjectionManagerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionManagerNode.cs,SubscribeOutputBus,The length of the statement  "	standardComponents.MainBus.Subscribe (Forwarder.Create<SystemMessage.StateChangeMessage> (projectionsStandardComponents.MasterInputQueue)); " is 139.
Long Statement,EventStore.Projections.Core,ProjectionManagerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionManagerNode.cs,SubscribeOutputBus,The length of the statement  "	standardComponents.MainBus.Subscribe (Forwarder.Create<SystemMessage.SystemCoreReady> (projectionsStandardComponents.MasterInputQueue)); " is 136.
Long Statement,EventStore.Projections.Core,ProjectionsSubsystem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionsSubsystem.cs,Register,The length of the statement  "	var projectionsStandardComponents = new ProjectionsStandardComponents (_projectionWorkerThreadCount' _runProjections' _masterOutputBus' _masterInputQueue' _masterMainBus); " is 171.
Long Statement,EventStore.Projections.Core,ProjectionsSubsystem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionsSubsystem.cs,Handle,The length of the statement  "			_masterMainBus.Publish (new ProjectionManagementMessage.Command.Enable (envelope' message.Name' ProjectionManagementMessage.RunAs.System)); " is 139.
Long Statement,EventStore.Projections.Core,ProjectionWorkerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionWorkerNode.cs,SetupMessaging,The length of the statement  "	coreInputBus.Subscribe (_subscriptionDispatcher.CreateSubscriber<EventReaderSubscriptionMessage.CheckpointSuggested> ()); " is 121.
Long Statement,EventStore.Projections.Core,ProjectionWorkerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionWorkerNode.cs,SetupMessaging,The length of the statement  "	coreInputBus.Subscribe (_subscriptionDispatcher.CreateSubscriber<EventReaderSubscriptionMessage.CommittedEventReceived> ()); " is 124.
Long Statement,EventStore.Projections.Core,ProjectionWorkerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionWorkerNode.cs,SetupMessaging,The length of the statement  "	coreInputBus.Subscribe (_subscriptionDispatcher.CreateSubscriber<EventReaderSubscriptionMessage.PartitionEofReached> ()); " is 121.
Long Statement,EventStore.Projections.Core,ProjectionWorkerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionWorkerNode.cs,SetupMessaging,The length of the statement  "	coreInputBus.Subscribe (_subscriptionDispatcher.CreateSubscriber<EventReaderSubscriptionMessage.SubscriptionStarted> ()); " is 121.
Long Statement,EventStore.Projections.Core,ProjectionWorkerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionWorkerNode.cs,SetupMessaging,The length of the statement  "	coreInputBus.Subscribe (_subscriptionDispatcher.CreateSubscriber<EventReaderSubscriptionMessage.ReaderAssignedReader> ()); " is 122.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "	Register (service' "/projections/all-non-transient"' HttpMethod.Get' OnProjectionsGetAllNonTransient' Codec.NoCodecs' SupportedCodecs); " is 135.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "	Register (service' "/projections/transient"' HttpMethod.Get' OnProjectionsGetTransient' Codec.NoCodecs' SupportedCodecs); " is 121.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "	Register (service' "/projections/continuous"' HttpMethod.Get' OnProjectionsGetContinuous' Codec.NoCodecs' SupportedCodecs); " is 123.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "	Register (service' "/projections/transient?name={name}&type={type}&enabled={enabled}"' HttpMethod.Post' OnProjectionsPostTransient' new ICodec[] { " is 146.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "	Register (service' "/projections/onetime?name={name}&type={type}&enabled={enabled}&checkpoints={checkpoints}&emit={emit}&trackemittedstreams={trackemittedstreams}"' HttpMethod.Post' OnProjectionsPostOneTime' new ICodec[] { " is 222.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "	Register (service' "/projections/continuous?name={name}&type={type}&enabled={enabled}&emit={emit}&trackemittedstreams={trackemittedstreams}"' HttpMethod.Post' OnProjectionsPostContinuous' new ICodec[] { " is 202.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "	Register (service' "/projection/{name}/query?config={config}"' HttpMethod.Get' OnProjectionQueryGet' Codec.NoCodecs' new ICodec[] { " is 131.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "	Register (service' "/projection/{name}/query?type={type}&emit={emit}"' HttpMethod.Put' OnProjectionQueryPut' new ICodec[] { " is 123.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "	Register (service' "/projection/{name}?deleteStateStream={deleteStateStream}&deleteCheckpointStream={deleteCheckpointStream}&deleteEmittedStreams={deleteEmittedStreams}"' HttpMethod.Delete' OnProjectionDelete' Codec.NoCodecs' SupportedCodecs); " is 243.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "	Register (service' "/projection/{name}/statistics"' HttpMethod.Get' OnProjectionStatisticsGet' Codec.NoCodecs' SupportedCodecs); " is 128.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "	Register (service' "/projections/read-events"' HttpMethod.Post' OnProjectionsReadEvents' SupportedCodecs' SupportedCodecs); " is 123.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "	Register (service' "/projection/{name}/state?partition={partition}"' HttpMethod.Get' OnProjectionStateGet' Codec.NoCodecs' SupportedCodecs); " is 140.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "	Register (service' "/projection/{name}/result?partition={partition}"' HttpMethod.Get' OnProjectionResultGet' Codec.NoCodecs' SupportedCodecs); " is 142.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "	Register (service' "/projection/{name}/command/disable?enableRunAs={enableRunAs}"' HttpMethod.Post' OnProjectionCommandDisable' Codec.NoCodecs' SupportedCodecs); " is 161.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "	Register (service' "/projection/{name}/command/enable?enableRunAs={enableRunAs}"' HttpMethod.Post' OnProjectionCommandEnable' Codec.NoCodecs' SupportedCodecs); " is 159.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "	Register (service' "/projection/{name}/command/reset?enableRunAs={enableRunAs}"' HttpMethod.Post' OnProjectionCommandReset' Codec.NoCodecs' SupportedCodecs); " is 157.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,SubscribeCore,The length of the statement  "	Register (service' "/projection/{name}/command/abort?enableRunAs={enableRunAs}"' HttpMethod.Post' OnProjectionCommandAbort' Codec.NoCodecs' SupportedCodecs); " is 157.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionQueryGet,The length of the statement  "		envelope = new SendToHttpEnvelope<ProjectionManagementMessage.ProjectionQuery> (_networkSendQueue' http' QueryConfigFormatter' QueryConfigConfigurator' ErrorsEnvelope (http)); " is 175.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionQueryGet,The length of the statement  "		envelope = new SendToHttpEnvelope<ProjectionManagementMessage.ProjectionQuery> (_networkSendQueue' http' QueryFormatter' QueryConfigurator' ErrorsEnvelope (http)); " is 163.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionQueryGet,The length of the statement  "	Publish (new ProjectionManagementMessage.Command.GetQuery (envelope' match.BoundVariables ["name"]' GetRunAs (http' match))); " is 125.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionQueryPut,The length of the statement  "	var envelope = new SendToHttpEnvelope<ProjectionManagementMessage.Updated> (_networkSendQueue' http' DefaultFormatter' OkResponseConfigurator' ErrorsEnvelope (http)); " is 166.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionQueryPut,The length of the statement  "	http.ReadTextRequestAsync ((o' s) => Publish (new ProjectionManagementMessage.Command.UpdateQuery (envelope' match.BoundVariables ["name"]' GetRunAs (http' match)' match.BoundVariables ["type"]' s' emitEnabled: emitEnabled))' Console.WriteLine); " is 245.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionCommandDisable,The length of the statement  "	var envelope = new SendToHttpEnvelope<ProjectionManagementMessage.Updated> (_networkSendQueue' http' DefaultFormatter' OkResponseConfigurator' ErrorsEnvelope (http)); " is 166.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionCommandDisable,The length of the statement  "	Publish (new ProjectionManagementMessage.Command.Disable (envelope' match.BoundVariables ["name"]' GetRunAs (http' match))); " is 124.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionCommandEnable,The length of the statement  "	var envelope = new SendToHttpEnvelope<ProjectionManagementMessage.Updated> (_networkSendQueue' http' DefaultFormatter' OkResponseConfigurator' ErrorsEnvelope (http)); " is 166.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionCommandReset,The length of the statement  "	var envelope = new SendToHttpEnvelope<ProjectionManagementMessage.Updated> (_networkSendQueue' http' DefaultFormatter' OkResponseConfigurator' ErrorsEnvelope (http)); " is 166.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionCommandReset,The length of the statement  "	Publish (new ProjectionManagementMessage.Command.Reset (envelope' match.BoundVariables ["name"]' GetRunAs (http' match))); " is 122.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionCommandAbort,The length of the statement  "	var envelope = new SendToHttpEnvelope<ProjectionManagementMessage.Updated> (_networkSendQueue' http' DefaultFormatter' OkResponseConfigurator' ErrorsEnvelope (http)); " is 166.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionCommandAbort,The length of the statement  "	Publish (new ProjectionManagementMessage.Command.Abort (envelope' match.BoundVariables ["name"]' GetRunAs (http' match))); " is 122.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionStatusGet,The length of the statement  "	var envelope = new SendToHttpWithConversionEnvelope<ProjectionManagementMessage.Statistics' ProjectionStatisticsHttpFormatted> (_networkSendQueue' http' DefaultFormatter' OkNoCacheResponseConfigurator' status => new ProjectionStatisticsHttpFormatted (status.Projections [0]' s => MakeUrl (http' s))' ErrorsEnvelope (http)); " is 323.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionDelete,The length of the statement  "	var envelope = new SendToHttpEnvelope<ProjectionManagementMessage.Updated> (_networkSendQueue' http' DefaultFormatter' OkResponseConfigurator' ErrorsEnvelope (http)); " is 166.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionDelete,The length of the statement  "	Publish (new ProjectionManagementMessage.Command.Delete (envelope' match.BoundVariables ["name"]' GetRunAs (http' match)' IsOn (match' "deleteCheckpointStream"' false)' IsOn (match' "deleteStateStream"' false)' IsOn (match' "deleteEmittedStreams"' false))); " is 257.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionStatisticsGet,The length of the statement  "	var envelope = new SendToHttpWithConversionEnvelope<ProjectionManagementMessage.Statistics' ProjectionsStatisticsHttpFormatted> (_networkSendQueue' http' DefaultFormatter' OkNoCacheResponseConfigurator' status => new ProjectionsStatisticsHttpFormatted (status' s => MakeUrl (http' s))' ErrorsEnvelope (http)); " is 309.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionStateGet,The length of the statement  "	var envelope = new SendToHttpEnvelope<ProjectionManagementMessage.ProjectionState> (_networkSendQueue' http' StateFormatter' StateConfigurator' ErrorsEnvelope (http)); " is 167.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionStateGet,The length of the statement  "	Publish (new ProjectionManagementMessage.Command.GetState (envelope' match.BoundVariables ["name"]' match.BoundVariables ["partition"] ?? "")); " is 143.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionResultGet,The length of the statement  "	var envelope = new SendToHttpEnvelope<ProjectionManagementMessage.ProjectionResult> (_networkSendQueue' http' ResultFormatter' ResultConfigurator' ErrorsEnvelope (http)); " is 170.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionResultGet,The length of the statement  "	Publish (new ProjectionManagementMessage.Command.GetResult (envelope' match.BoundVariables ["name"]' match.BoundVariables ["partition"] ?? "")); " is 144.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionsReadEvents,The length of the statement  "	var envelope = new SendToHttpEnvelope<FeedReaderMessage.FeedPage> (_networkSendQueue' http' FeedPageFormatter' FeedPageConfigurator' ErrorsEnvelope (http)); " is 156.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionsReadEvents,The length of the statement  "		Publish (new FeedReaderMessage.ReadPage (Guid.NewGuid ()' envelope' http.User' bodyParsed.Query' fromPosition.Tag' bodyParsed.MaxEvents ?? 10)); " is 144.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,ProjectionsGet,The length of the statement  "	var envelope = new SendToHttpWithConversionEnvelope<ProjectionManagementMessage.Statistics' ProjectionsStatisticsHttpFormatted> (_networkSendQueue' http' DefaultFormatter' OkNoCacheResponseConfigurator' status => new ProjectionsStatisticsHttpFormatted (status' s => MakeUrl (http' s))' ErrorsEnvelope (http)); " is 309.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,ProjectionsPost,The length of the statement  "	var envelope = new SendToHttpEnvelope<ProjectionManagementMessage.Updated> (_networkSendQueue' http' DefaultFormatter' (codec' message) => { " is 140.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,ProjectionsPost,The length of the statement  "		return new ResponseConfiguration (201' "Created"' codec.ContentType' codec.Encoding' new KeyValuePair<string' string> ("Location"' url)); " is 137.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,ProjectionsPost,The length of the statement  "			postMessage = new ProjectionManagementMessage.Command.Post (envelope' mode' Guid.NewGuid ().ToString ("D")' runAs' handlerType' s' enabled: enabled' checkpointsEnabled: checkpointsEnabled' emitEnabled: emitEnabled' trackEmittedStreams: trackEmittedStreams' enableRunAs: true); " is 276.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,ProjectionsPost,The length of the statement  "			postMessage = new ProjectionManagementMessage.Command.Post (envelope' mode' name' runAs' handlerType' s' enabled: enabled' checkpointsEnabled: checkpointsEnabled' emitEnabled: emitEnabled' trackEmittedStreams: trackEmittedStreams' enableRunAs: true); " is 250.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,StateConfigurator,The length of the statement  "		return state.Position != null ? Configure.Ok ("application/json"' Helper.UTF8NoBom' null' null' false' new KeyValuePair<string' string> (SystemHeaders.ProjectionPosition' state.Position.ToJsonString ())) : Configure.Ok ("application/json"' Helper.UTF8NoBom' null' null' false); " is 277.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,ResultConfigurator,The length of the statement  "		return state.Position != null ? Configure.Ok ("application/json"' Helper.UTF8NoBom' null' null' false' new KeyValuePair<string' string> (SystemHeaders.ProjectionPosition' state.Position.ToJsonString ())) : Configure.Ok ("application/json"' Helper.UTF8NoBom' null' null' false); " is 277.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,FeedPageFormatter,The length of the statement  "		let data = isJson ? EatException (() => (object)(resolvedEvent.Data.ParseJson<JObject> ())' resolvedEvent.Data) : resolvedEvent.Data " is 132.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,FeedPageFormatter,The length of the statement  "		let metadata = isJson ? EatException (() => (object)(resolvedEvent.Metadata.ParseJson<JObject> ())' resolvedEvent.Metadata) : resolvedEvent.Metadata " is 148.
Long Statement,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,ErrorsEnvelope,The length of the statement  "	return new SendToHttpEnvelope<ProjectionManagementMessage.NotFound> (_networkSendQueue' http' NotFoundFormatter' NotFoundConfigurator' new SendToHttpEnvelope<ProjectionManagementMessage.NotAuthorized> (_networkSendQueue' http' NotAuthorizedFormatter' NotAuthorizedConfigurator' new SendToHttpEnvelope<ProjectionManagementMessage.Conflict> (_networkSendQueue' http' ConflictFormatter' ConflictConfigurator' new SendToHttpEnvelope<ProjectionManagementMessage.OperationFailed> (_networkSendQueue' http' OperationFailedFormatter' OperationFailedConfigurator' null)))); " is 564.
Long Statement,EventStore.Projections.Core.Services,ProjectionStateHandlerTestExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\IProjectionStateHandler.cs,ProcessEvent,The length of the statement  "	return self.ProcessEvent (partition' eventPosition' category' new ResolvedEvent (streamId' eventSequenceNumber' streamId' eventSequenceNumber' false' new TFPos (0' -1)' eventId' eventType' isJson' data' metadata)' out state' out ignoredSharedState' out emittedEvents); " is 268.
Long Statement,EventStore.Projections.Core.Services,ProjectionStateHandlerTestExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\IProjectionStateHandler.cs,ProcessEvent,The length of the statement  "	return self.ProcessEvent (partition' eventPosition' category' new ResolvedEvent (streamId' eventSequenceNumber' streamId' eventSequenceNumber' false' new TFPos (0' -1)' eventId' eventType' isJson' data' metadata)' out state' out sharedState' out emittedEvents); " is 261.
Long Statement,EventStore.Projections.Core.Services,ProjectionConfig,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionConfig.cs,SetIsSlave,The length of the statement  "	return new ProjectionConfig (_runAs' CheckpointHandledThreshold' CheckpointUnhandledBytesThreshold' PendingEventsThreshold' MaxWriteBatchLength' EmitEventEnabled' _checkpointsEnabled' CreateTempStreams' StopOnEof' true' true); " is 226.
Long Statement,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,Equals,The length of the statement  "	return string.Equals (Status' other.Status) && Enabled.Equals (other.Enabled) && MasterStatus == other.MasterStatus && string.Equals (StateReason' other.StateReason) && string.Equals (Name' other.Name) && ProjectionId == other.ProjectionId && Epoch == other.Epoch && Version == other.Version && Mode == other.Mode && Equals (Position' other.Position) && Progress.Equals (other.Progress) && string.Equals (LastCheckpoint' other.LastCheckpoint) && EventsProcessedAfterRestart == other.EventsProcessedAfterRestart && BufferedEvents == other.BufferedEvents && string.Equals (CheckpointStatus' other.CheckpointStatus) && WritePendingEventsBeforeCheckpoint == other.WritePendingEventsBeforeCheckpoint && WritePendingEventsAfterCheckpoint == other.WritePendingEventsAfterCheckpoint && PartitionsCached == other.PartitionsCached && ReadsInProgress == other.ReadsInProgress && WritesInProgress == other.WritesInProgress && string.Equals (EffectiveName' other.EffectiveName) && string.Equals (ResultStreamName' other.ResultStreamName) && CoreProcessingTime == other.CoreProcessingTime; " is 1075.
Long Statement,EventStore.Projections.Core.Services.Management,MasterCoreProjectionResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\MasterCoreProjectionResponseReader.cs,StartReaderSteps,The length of the statement  "	yield return _ioDispatcher.BeginUpdateStreamAcl (_cancellationScope' _streamId' ExpectedVersion.Any' SystemAccount.Principal' new StreamMetadata (maxAge: ProjectionNamesBuilder.SlaveProjectionControlStreamMaxAge)' completed => { " is 228.
Long Statement,EventStore.Projections.Core.Services.Management,MasterCoreProjectionResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\MasterCoreProjectionResponseReader.cs,StartReaderSteps,The length of the statement  "			yield return _ioDispatcher.BeginReadForward (_cancellationScope' _streamId' @from' 10' false' SystemAccount.Principal' completed => { " is 133.
Long Statement,EventStore.Projections.Core.Services.Management,MasterCoreProjectionResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\MasterCoreProjectionResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new PartitionMeasured (_workerId' _masterProjectionId' Guid.ParseExact (body.SubscriptionId' "N")' body.Partition' body.Size)); " is 147.
Long Statement,EventStore.Projections.Core.Services.Management,MasterCoreProjectionResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\MasterCoreProjectionResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new PartitionProcessingProgress (_workerId' _masterProjectionId' Guid.ParseExact (body.SubscriptionId' "N")' body.Progress)); " is 145.
Long Statement,EventStore.Projections.Core.Services.Management,MasterCoreProjectionResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\MasterCoreProjectionResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new PartitionProcessingResult (_workerId' _masterProjectionId' Guid.ParseExact (body.SubscriptionId' "N")' body.Partition' Guid.ParseExact (body.CausedBy' "N")' body.Position' body.Result)); " is 210.
Long Statement,EventStore.Projections.Core.Services.Management,MultiStreamMessageWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\MultiStreamMessageWriter.cs,PublishResponse,The length of the statement  "		Log.Debug ("PROJECTIONS: Scheduling the writing of {0} to {1}. Current status of Writer: Busy: {2}"' command' "$projections-$" + workerId' queue.Busy); " is 151.
Long Statement,EventStore.Projections.Core.Services.Management,MultiStreamMessageWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\MultiStreamMessageWriter.cs,EmitEvents,The length of the statement  "	_ioDispatcher.BeginWriteEvents (_cancellationScope' streamId' ExpectedVersion.Any' SystemAccount.Principal' events' completed => { " is 130.
Long Statement,EventStore.Projections.Core.Services.Management,MultiStreamMessageWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\MultiStreamMessageWriter.cs,EmitEvents,The length of the statement  "			var message = String.Format ("PROJECTIONS: Failed writing events to {0} because of {1}: {2}"' streamId' completed.Result' String.Join ("'"' events.Select (x => String.Format ("{0}"' x.EventType)))); " is 198.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,GetStatistics,The length of the statement  "		var enabledSuffix = ((_state == ManagedProjectionState.Stopped || _state == ManagedProjectionState.Faulted) && Enabled ? " (Enabled)" : ""); " is 140.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,GetStatistics,The length of the statement  "		status.Status = (status.Status == "Stopped" && _state == ManagedProjectionState.Completed ? _state.EnumValueName () : (!status.Status.StartsWith (_state.EnumValueName ()) ? _state.EnumValueName () + "/" + status.Status : status.Status)) + enabledSuffix; " is 253.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,Handle,The length of the statement  "		_getStateDispatcher.Publish (new CoreProjectionManagementMessage.GetState (Guid.NewGuid ()' Id' message.Partition' _workerId)' m => message.Envelope.ReplyWith (new ProjectionManagementMessage.ProjectionState (_name' m.Partition' m.State' m.Position))); " is 252.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,Handle,The length of the statement  "		message.Envelope.ReplyWith (new ProjectionManagementMessage.ProjectionState (message.Name' message.Partition' ""' position: null)); " is 131.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,Handle,The length of the statement  "		_getResultDispatcher.Publish (new CoreProjectionManagementMessage.GetResult (Guid.NewGuid ()' Id' message.Partition' _workerId)' m => message.Envelope.ReplyWith (new ProjectionManagementMessage.ProjectionResult (_name' m.Partition' m.Result' m.Position))); " is 256.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,Handle,The length of the statement  "		message.Envelope.ReplyWith (new ProjectionManagementMessage.ProjectionResult (message.Name' message.Partition' ""' position: null)); " is 132.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,Handle,The length of the statement  "		ResultStreamName = PersistedProjectionState.SourceDefinition == null ? "" : new ProjectionNamesBuilder (_name' PersistedProjectionState.SourceDefinition).GetResultStreamName () " is 176.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,Handle,The length of the statement  "	message.Envelope.ReplyWith (new ProjectionManagementMessage.ProjectionQuery (_name' Query' emitEnabled' PersistedProjectionState.SourceDefinition' projectionOutputConfig)); " is 172.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,Handle,The length of the statement  "	if (Enabled && !(_state == ManagedProjectionState.Completed || _state == ManagedProjectionState.Faulted || _state == ManagedProjectionState.Aborted || _state == ManagedProjectionState.Loaded || _state == ManagedProjectionState.Prepared || _state == ManagedProjectionState.Stopped)) { " is 283.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,Handle,The length of the statement  "	if ((_state != ManagedProjectionState.Stopped && _state != ManagedProjectionState.Faulted) && Mode != ProjectionMode.Transient) " is 127.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,Handle,The length of the statement  "	if ((PersistedProjectionState.EmitEnabled ?? false) && ((PersistedProjectionState.TrackEmittedStreams ?? false) && PersistedProjectionState.DeleteEmittedStreams)) { " is 164.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,DeleteProjectionStreams,The length of the statement  "			_emittedStreamsDeleter = new EmittedStreamsDeleter (_ioDispatcher' projectionNamesBuilder.GetEmittedStreamsName ()' projectionNamesBuilder.GetEmittedStreamsCheckpointName ()); " is 175.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,Handle,The length of the statement  "		Handle (new ProjectionManagementMessage.Command.Delete (new NoopEnvelope ()' _name' ProjectionManagementMessage.RunAs.System' false' false' false)); " is 148.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,SetRunAs,The length of the statement  "	PersistedProjectionState.RunAs = message.Action == ProjectionManagementMessage.Command.SetRunAs.SetRemove.Set ? SerializedRunAs.SerializePrincipal (message.RunAs) : null; " is 170.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,ReadPersistedState,The length of the statement  "	_readDispatcher.Publish (new ClientMessage.ReadStreamEventsBackward (corrId' corrId' _readDispatcher.Envelope' "$projections-" + name' -1' 1' resolveLinkTos: false' requireMaster: false' validationStreamVersion: null' user: SystemAccount.Principal)' PersistedStateReadCompleted); " is 279.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,PersistedStateReadCompleted,The length of the statement  "	_logger.Trace ("Projection manager did not find any projection configuration records in the {0} stream.  Projection stays in CREATING state"' completed.EventStreamId); " is 167.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,WritePersistedState,The length of the statement  "	_writeDispatcher.Publish (new ClientMessage.WriteEvents (corrId' corrId' _writeDispatcher.Envelope' true' eventStreamId' ExpectedVersion.Any' new Event (Guid.NewGuid ()' "$ProjectionUpdated"' true' managedProjectionSerializedState' Empty.ByteArray)' SystemAccount.Principal)' m => WritePersistedStateCompleted (m' eventStreamId)); " is 330.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,WritePersistedStateCompleted,The length of the statement  "	_logger.Info ("Projection '{0}' source has not been written to {1}. Error: {2}"' _name' eventStreamId' Enum.GetName (typeof(OperationResult)' message.Result)); " is 159.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,WritePersistedStateCompleted,The length of the statement  "	if (message.Result == OperationResult.CommitTimeout || message.Result == OperationResult.ForwardTimeout || message.Result == OperationResult.PrepareTimeout || message.Result == OperationResult.WrongExpectedVersion) { " is 216.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,DeleteStream,The length of the statement  "	_streamDispatcher.Publish (new ClientMessage.DeleteStream (correlationId' correlationId' _writeDispatcher.Envelope' true' streamId' ExpectedVersion.Any' false' SystemAccount.Principal)' m => DeleteStreamCompleted (m' streamId' completed)); " is 239.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,DeleteStreamCompleted,The length of the statement  "	_logger.Info ("PROJECTIONS: Projection stream '{0}' could not be deleted. Error: {1}"' streamId' Enum.GetName (typeof(OperationResult)' message.Result)); " is 153.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,CreateCreateAndPrepareMessage,The length of the statement  "	var createProjectionMessage = _isSlave ? (Message)new CoreProjectionManagementMessage.CreateAndPrepareSlave (Id' _workerId' _name' new ProjectionVersion (_projectionId' PersistedProjectionState.Epoch ?? 0' PersistedProjectionState.Version ?? 0)' config' _slaveMasterWorkerId' _slaveMasterCorrelationId' HandlerType' Query) : new CoreProjectionManagementMessage.CreateAndPrepare (Id' _workerId' _name' new ProjectionVersion (_projectionId' PersistedProjectionState.Epoch ?? 0' PersistedProjectionState.Version ?? 0)' config' HandlerType' Query); " is 544.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,CreatePreparedMessage,The length of the statement  "		throw new Exception ("The projection cannot be loaded as stopped as it was stored in the old format.  Update the projection query text to force prepare"); " is 154.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,CreatePreparedMessage,The length of the statement  "	var createProjectionMessage = new CoreProjectionManagementMessage.CreatePrepared (Id' _workerId' _name' new ProjectionVersion (_projectionId' PersistedProjectionState.Epoch ?? 0' PersistedProjectionState.Version ?? 1)' config' QuerySourcesDefinition.From (PersistedProjectionState.SourceDefinition)' HandlerType' Query); " is 320.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,StopUnlessPreparedOrLoaded,The length of the statement  "		throw new InvalidOperationException (string.Format ("Cannot stop a projection in the '{0}' state"' Enum.GetName (typeof(ManagedProjectionState)' _state))); " is 155.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,Abort,The length of the statement  "		throw new InvalidOperationException (string.Format ("Cannot stop a projection in the '{0}' state"' Enum.GetName (typeof(ManagedProjectionState)' _state))); " is 155.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,CreateDefaultProjectionConfiguration,The length of the statement  "	var projectionConfig = new ProjectionConfig (_runAs' checkpointHandledThreshold' checkpointUnhandledBytesThreshold' pendingEventsThreshold' maxWriteBatchLength' emitEventEnabled' checkpointsEnabled' createTempStreams' stopOnEof' false' trackEmittedStreams); " is 257.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,StartOrLoadStopped,The length of the statement  "	} else if (_state == ManagedProjectionState.Aborted || _state == ManagedProjectionState.Completed || _state == ManagedProjectionState.Faulted || _state == ManagedProjectionState.Stopped || _state == ManagedProjectionState.Deleting) " is 231.
Long Statement,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,PrepareOrWriteStartOrLoadStopped,The length of the statement  "	var prepareMessage = !(Enabled && _enabledToRun) && !_pendingWritePersistedState ? CreatePreparedMessage (_projectionConfig) : CreateCreateAndPrepareMessage (_projectionConfig); " is 177.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionCoreCoordinator,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionCoreCoordinator.cs,ScheduleRegularTimeout,The length of the statement  "	_publisher.Publish (TimerMessage.Schedule.Create (TimeSpan.FromMilliseconds (100)' _publishEnvelope' new ProjectionManagementMessage.Internal.RegularTimeout ())); " is 162.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PerformStartReader,The length of the statement  "	yield return _ioDispatcher.BeginUpdateStreamAcl (_cancellationScope' ProjectionNamesBuilder._projectionsControlStream' ExpectedVersion.Any' SystemAccount.Principal' new StreamMetadata (maxAge: ProjectionNamesBuilder.ControlStreamMaxAge)' completed => { " is 252.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PerformStartReader,The length of the statement  "	yield return _ioDispatcher.BeginUpdateStreamAcl (_cancellationScope' ProjectionNamesBuilder._projectionsMasterStream' ExpectedVersion.Any' SystemAccount.Principal' new StreamMetadata (maxAge: ProjectionNamesBuilder.MasterStreamMaxAge)' completed => { " is 250.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PerformStartReader,The length of the statement  "	yield return _ioDispatcher.BeginWriteEvents (_cancellationScope' ProjectionNamesBuilder._projectionsMasterStream' ExpectedVersion.Any' SystemAccount.Principal' new[] { " is 167.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PerformStartReader,The length of the statement  "	yield return _ioDispatcher.BeginWriteEvents (_cancellationScope' ProjectionNamesBuilder._projectionsControlStream' ExpectedVersion.Any' SystemAccount.Principal' new[] { " is 168.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PerformStartReader,The length of the statement  "			yield return _ioDispatcher.BeginReadForward (_cancellationScope' ProjectionNamesBuilder._projectionsMasterStream' @from' 10' false' SystemAccount.Principal' completed => { " is 171.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PerformStartReader,The length of the statement  "		yield return _ioDispatcher.BeginSubscribeAwake (_cancellationScope' ProjectionNamesBuilder._projectionsMasterStream' subscribeFrom' message => { " is 144.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new CoreProjectionStatusMessage.Prepared (Guid.ParseExact (commandBody.Id' "N")' commandBody.SourceDefinition)); " is 132.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new CoreProjectionStatusMessage.Faulted (Guid.ParseExact (commandBody.Id' "N")' commandBody.FaultedReason)); " is 128.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new CoreProjectionStatusMessage.StatisticsReport (Guid.ParseExact (commandBody.Id' "N")' commandBody.Statistics' -1)); " is 138.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new CoreProjectionStatusMessage.Stopped (Guid.ParseExact (commandBody.Id' "N")' commandBody.Name' commandBody.Completed)); " is 142.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new CoreProjectionStatusMessage.StateReport (Guid.ParseExact (commandBody.CorrelationId' "N")' Guid.ParseExact (commandBody.Id' "N")' commandBody.Partition' commandBody.State' commandBody.Position)); " is 219.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new CoreProjectionStatusMessage.ResultReport (Guid.ParseExact (commandBody.CorrelationId' "N")' Guid.ParseExact (commandBody.Id' "N")' commandBody.Partition' commandBody.Result' commandBody.Position)); " is 221.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new CoreProjectionManagementMessage.SlaveProjectionReaderAssigned (Guid.ParseExact (commandBody.Id' "N")' Guid.ParseExact (commandBody.SubscriptionId' "N"))); " is 178.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new ProjectionManagementMessage.Command.Abort (new NoopEnvelope ()' commandBody.Name' commandBody.RunAs)); " is 126.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new ProjectionManagementMessage.Command.Disable (new NoopEnvelope ()' commandBody.Name' commandBody.RunAs)); " is 128.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new ProjectionManagementMessage.Command.Enable (new NoopEnvelope ()' commandBody.Name' commandBody.RunAs)); " is 127.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new ProjectionManagementMessage.Command.GetQuery (new NoopEnvelope ()' commandBody.Name' commandBody.RunAs)); " is 129.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new ProjectionManagementMessage.Command.GetResult (new NoopEnvelope ()' commandBody.Name' commandBody.Partition)); " is 134.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new ProjectionManagementMessage.Command.GetState (new NoopEnvelope ()' commandBody.Name' commandBody.Partition)); " is 133.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new ProjectionManagementMessage.Command.GetStatistics (new NoopEnvelope ()' commandBody.Mode' commandBody.Name' commandBody.IncludeDeleted)); " is 161.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new ProjectionManagementMessage.Command.Post (new NoopEnvelope ()' commandBody.Mode' commandBody.Name' commandBody.RunAs' commandBody.HandlerType' commandBody.Query' commandBody.Enabled' commandBody.CheckpointsEnabled' commandBody.EmitEnabled' commandBody.TrackEmittedStreams' commandBody.EnableRunAs)); " is 323.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new ProjectionManagementMessage.Command.Reset (new NoopEnvelope ()' commandBody.Name' commandBody.RunAs)); " is 126.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new ProjectionManagementMessage.Command.SetRunAs (new NoopEnvelope ()' commandBody.Name' commandBody.RunAs' commandBody.SetRemove)); " is 152.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new ProjectionManagementMessage.Command.StartSlaveProjections (new PublishEnvelope (_publisher)' commandBody.RunAs' commandBody.Name' commandBody.SlaveProjections' Guid.ParseExact (commandBody.MasterWorkerId' "N")' Guid.ParseExact (commandBody.MasterCorrelationId' "N"))); " is 292.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new ProjectionManagementMessage.Command.Delete (new NoopEnvelope ()' commandBody.Name' commandBody.RunAs' commandBody.DeleteCheckpointStream' commandBody.DeleteStateStream' commandBody.DeleteEmittedStreams)); " is 228.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManagerMessageDispatcher,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerMessageDispatcher.cs,Handle,The length of the statement  "	DispatchWorkerMessage (new ReaderSubscriptionManagement.SpoolStreamReadingCore (message.SubscriptionId' message.StreamId' message.CatalogSequenceNumber' message.LimitingCommitPosition)' message.WorkerId); " is 204.
Long Statement,EventStore.Projections.Core.Services.Management,ResponseWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ResponseWriter.cs,PublishCommand,The length of the statement  "		_logger.Debug ("PROJECTIONS: Scheduling the writing of {0} to {1}. Current status of Writer: Busy: {2}"' command' ProjectionNamesBuilder._projectionsMasterStream' Busy); " is 169.
Long Statement,EventStore.Projections.Core.Services.Management,ResponseWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ResponseWriter.cs,EmitEvents,The length of the statement  "	_ioDispatcher.BeginWriteEvents (_cancellationScope' ProjectionNamesBuilder._projectionsMasterStream' ExpectedVersion.Any' SystemAccount.Principal' events' completed => { " is 169.
Long Statement,EventStore.Projections.Core.Services.Management,ResponseWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ResponseWriter.cs,EmitEvents,The length of the statement  "					_logger.Debug ("PROJECTIONS: Finished writing events to {0}: {1}"' ProjectionNamesBuilder._projectionsMasterStream' evt.EventType); " is 131.
Long Statement,EventStore.Projections.Core.Services.Management,ResponseWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ResponseWriter.cs,EmitEvents,The length of the statement  "			var message = String.Format ("PROJECTIONS: Failed writing events to {0} because of {1}: {2}"' ProjectionNamesBuilder._projectionsMasterStream' completed.Result' String.Join ("'"' events.Select (x => String.Format ("{0}-{1}"' x.EventType' Helper.UTF8NoBom.GetString (x.Data))))); " is 278.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,ScheduleExpire,The length of the statement  "	_publisher.Publish (TimerMessage.Schedule.Create (TimeSpan.FromSeconds (60)' _publishEnvelope' new ProjectionManagementMessage.Internal.CleanupExpired ())); " is 156.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,Handle,The length of the statement  "	if (!ProjectionManagementMessage.RunAs.ValidateRunAs (message.Mode' ReadWrite.Write' null' message' replace: message.EnableRunAs)) " is 130.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,Handle,The length of the statement  "		message.Envelope.ReplyWith (new ProjectionManagementMessage.OperationFailed ("We currently don't allow for the deletion of System Projections.")); " is 146.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,IsSystemProjection,The length of the statement  "	return name == ProjectionNamesBuilder.StandardProjections.EventByCategoryStandardProjection || name == ProjectionNamesBuilder.StandardProjections.EventByTypeStandardProjection || name == ProjectionNamesBuilder.StandardProjections.StreamByCategoryStandardProjection || name == ProjectionNamesBuilder.StandardProjections.StreamsStandardProjection; " is 345.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,Handle,The length of the statement  "	_logger.Info ("Updating '{0}' projection source to '{1}' (Requested type is: '{2}')"' message.Name' message.Query' message.HandlerType); " is 136.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,Handle,The length of the statement  "		if (!ProjectionManagementMessage.RunAs.ValidateRunAs (projection.Mode' ReadWrite.Write' projection.RunAs' message' message.Action == ProjectionManagementMessage.Command.SetRunAs.SetRemove.Set)) " is 193.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,Handle,The length of the statement  "		where message.Mode == null || message.Mode == projection.Mode || (message.Mode.GetValueOrDefault () == ProjectionMode.AllNonTransient && projection.Mode != ProjectionMode.Transient) " is 181.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,Handle,The length of the statement  "	_writeDispatcher.Publish (new ClientMessage.WriteEvents (corrId' corrId' _writeDispatcher.Envelope' true' eventStreamId' ExpectedVersion.Any' new Event (Guid.NewGuid ()' "$ProjectionDeleted"' false' Helper.UTF8NoBom.GetBytes (message.Name)' Empty.ByteArray)' SystemAccount.Principal)' m => { " is 291.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,Handle,The length of the statement  "		Handle (new ProjectionManagementMessage.Command.Post (new PublishEnvelope (_inputQueue)' ProjectionMode.Continuous' message.Name' ProjectionManagementMessage.RunAs.System' message.Handler' message.Query' true' true' true' true' enableRunAs: true)); " is 248.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,BeginLoadProjectionList,The length of the statement  "	_readDispatcher.Publish (new ClientMessage.ReadStreamEventsBackward (corrId' corrId' _readDispatcher.Envelope' "$projections-$all"' from' _readEventsBatchSize' resolveLinkTos: false' requireMaster: false' validationStreamVersion: null' user: SystemAccount.Principal)' m => LoadProjectionListCompleted (m' from' completedAction)); " is 329.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,ResolveState,The length of the statement  "	return eventToReturn.Event.EventType == "$ProjectionCreated" ? eventToReturn : EventStore.Core.Data.ResolvedEvent.EmptyEvent; " is 125.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,LoadProjectionListCompleted,The length of the statement  "		var projectionRegistrations = completed.Events.Where (e => e.Event.EventType == "$ProjectionCreated" || e.Event.EventType == "$ProjectionDeleted").ToArray (); " is 158.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,LoadProjectionListCompleted,The length of the statement  "		var grouped = projectionRegistrations.ToLookup (x => Helper.UTF8NoBom.GetString (x.Event.Data)).Select (ResolveState).Where (x => x.Event != null).ToArray (); " is 158.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,LoadProjectionListCompleted,The length of the statement  "		_logger.Debug ("PROJECTIONS: Found the following projections in {0}. {1}"' completed.EventStreamId' String.Join ("'"' grouped.Select (x => Helper.UTF8NoBom.GetString (x.Event.Data)))); " is 184.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,LoadProjectionListCompleted,The length of the statement  "				var managedProjection = CreateManagedProjectionInstance (projectionName' projectionId' Guid.NewGuid ()' _workers [queueIndex]); " is 127.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,LoadProjectionListCompleted,The length of the statement  "			if ((completed.Result == ReadStreamResult.Success || completed.Result == ReadStreamResult.NoStream) && completed.Events.Length == 0) { " is 134.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,IsProjectionEnabledToRunByMode,The length of the statement  "	return _runProjections >= ProjectionType.All || _runProjections == ProjectionType.System && projectionName.StartsWith ("$"); " is 124.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,CreateFakeProjection,The length of the statement  "	_writeDispatcher.Publish (new ClientMessage.WriteEvents (corrId' corrId' _writeDispatcher.Envelope' true' "$projections-$all"' ExpectedVersion.NoStream' new Event (Guid.NewGuid ()' "$ProjectionsInitialized"' false' Empty.ByteArray' Empty.ByteArray)' SystemAccount.Principal)' completed => WriteFakeProjectionCompleted (completed' action)); " is 339.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,CreateSystemProjections,The length of the statement  "		CreateSystemProjection (ProjectionNamesBuilder.StandardProjections.StreamsStandardProjection' typeof(IndexStreams)' ""); " is 120.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,CreateSystemProjections,The length of the statement  "		CreateSystemProjection (ProjectionNamesBuilder.StandardProjections.StreamByCategoryStandardProjection' typeof(CategorizeStreamByPath)' "first\r\n-"); " is 149.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,CreateSystemProjections,The length of the statement  "		CreateSystemProjection (ProjectionNamesBuilder.StandardProjections.EventByCategoryStandardProjection' typeof(CategorizeEventsByStreamPath)' "first\r\n-"); " is 154.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,CreateSystemProjections,The length of the statement  "		CreateSystemProjection (ProjectionNamesBuilder.StandardProjections.EventByTypeStandardProjection' typeof(IndexEventsByEventType)' ""); " is 134.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,CreateSystemProjection,The length of the statement  "	var postMessage = new ProjectionManagementMessage.Command.Post (envelope' ProjectionMode.Continuous' name' ProjectionManagementMessage.RunAs.System' "native:" + handlerType.Namespace + "." + handlerType.Name' config' enabled: false' checkpointsEnabled: true' emitEnabled: true' trackEmittedStreams: false' enableRunAs: true); " is 325.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,InitializeNewProjection,The length of the statement  "		var initializer = new NewProjectionInitializer (projectionId' message.Name' message.Mode' message.HandlerType' message.Query' message.Enabled' message.EmitEnabled' message.CheckpointsEnabled' message.EnableRunAs' message.TrackEmittedStreams' message.RunAs' replyEnvelope); " is 272.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,PostNewProjection,The length of the statement  "	_readDispatcher.Publish (new ClientMessage.ReadStreamEventsBackward (corrId' corrId' _readDispatcher.Envelope' "$projections-" + message.Name' 0' _readEventsBatchSize' resolveLinkTos: false' requireMaster: false' validationStreamVersion: null' user: SystemAccount.Principal)' m => CompletedReadingPossibleStream (m' message' replyEnvelope)); " is 341.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,CreateManagedProjectionInstance,The length of the statement  "	var managedProjectionInstance = new ManagedProjection (workerId' projectionCorrelationId' projectionId' name' enabledToRun' _logger' _streamDispatcher' _writeDispatcher' _readDispatcher' _publisher' _timeProvider' _getStateDispatcher' _getResultDispatcher' _ioDispatcher' isSlave' slaveMasterWorkerId' slaveMasterCorrelationId); " is 328.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,BeginWriteProjectionRegistration,The length of the statement  "	_writeDispatcher.Publish (new ClientMessage.WriteEvents (corrId' corrId' _writeDispatcher.Envelope' true' eventStreamId' ExpectedVersion.Any' new Event (Guid.NewGuid ()' "$ProjectionCreated"' false' Helper.UTF8NoBom.GetBytes (name)' Empty.ByteArray)' SystemAccount.Principal)' m => WriteProjectionRegistrationCompleted (m' completed' name' eventStreamId' envelope' retryCount)); " is 378.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,WriteProjectionRegistrationCompleted,The length of the statement  "	_logger.Info ("Projection '{0}' registration has not been written to {1}. Error: {2}"' name' eventStreamId' Enum.GetName (typeof(OperationResult)' message.Result)); " is 164.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,WriteProjectionRegistrationCompleted,The length of the statement  "	if (message.Result == OperationResult.CommitTimeout || message.Result == OperationResult.ForwardTimeout || message.Result == OperationResult.PrepareTimeout || message.Result == OperationResult.WrongExpectedVersion) { " is 216.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,WriteProjectionRegistrationCompleted,The length of the statement  "	replyEnvelope.ReplyWith (new ProjectionManagementMessage.OperationFailed (string.Format ("The projection '{0}' could not be created because the registration could not be written due to {1}"' name' message.Result))); " is 215.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,CheckSlaveProjectionsStarted,The length of the statement  "		message.Envelope.ReplyWith (new ProjectionManagementMessage.SlaveProjectionsStarted (message.MasterCorrelationId' message.MasterWorkerId' new SlaveProjectionCommunicationChannels (result))); " is 190.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,CINP,The length of the statement  "		resultArray [arrayIndex] = new SlaveProjectionCommunicationChannel (slaveProjectionName' queueWorkerId' assigned.SubscriptionId); " is 129.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,CINP,The length of the statement  "	var initializer = new NewProjectionInitializer (ProjectionQueryId' slaveProjectionName' @group.Mode' @group.HandlerType' @group.Query' true' @group.EmitEnabled' @group.CheckpointsEnabled' @group.EnableRunAs' @group.TrackEmittedStreams' @group.RunAs1' replyEnvelope: null); " is 272.
Long Statement,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,CINP,The length of the statement  "	initializer.CreateAndInitializeNewProjection (this' projectionCorrelationId' _workers [queueIndex]' true' message.MasterWorkerId' message.MasterCorrelationId); " is 159.
Long Statement,EventStore.Projections.Core.Services.Processing,AllStreamsCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\AllStreamsCatalogEventReader.cs,Handle,The length of the statement  "				EnqueueDeliverEvent (@event' @link' 100.0f * (link ?? @event).EventNumber / message.LastEventNumber' ref oldFromSequenceNumber); " is 128.
Long Statement,EventStore.Projections.Core.Services.Processing,AllStreamsCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\AllStreamsCatalogEventReader.cs,Handle,The length of the statement  "		throw new NotSupportedException (string.Format ("ReadEvents result code was not recognized. Code: {0}"' message.Result)); " is 121.
Long Statement,EventStore.Projections.Core.Services.Processing,AllStreamsCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\AllStreamsCatalogEventReader.cs,RequestEvents,The length of the statement  "			_publisher.Publish (new AwakeServiceMessage.SubscribeAwake (new PublishEnvelope (_publisher' crossThread: true)' Guid.NewGuid ()' null' new TFPos (_lastPosition' _lastPosition)' readEventsForward)); " is 198.
Long Statement,EventStore.Projections.Core.Services.Processing,AllStreamsCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\AllStreamsCatalogEventReader.cs,CreateReadEventsMessage,The length of the statement  "	return new ClientMessage.ReadStreamEventsForward (Guid.NewGuid ()' EventReaderCorrelationId' new SendToThisEnvelope (this)' SystemStreams.StreamsStream' _fromSequenceNumber' _maxReadCount' resolveLinkTos: false' requireMaster: false' validationStreamVersion: null' user: ReadAs); " is 279.
Long Statement,EventStore.Projections.Core.Services.Processing,AllStreamsCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\AllStreamsCatalogEventReader.cs,DeliverSafeJoinPosition,The length of the statement  "	_publisher.Publish (new ReaderSubscriptionMessage.CommittedEventDistributed (EventReaderCorrelationId' null' safeJoinPosition' 100.0f' source: GetType ())); " is 156.
Long Statement,EventStore.Projections.Core.Services.Processing,AllStreamsCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\AllStreamsCatalogEventReader.cs,EnqueueDeliverEvent,The length of the statement  "		throw new InvalidOperationException (string.Format ("Event number {0} was expected in the stream {1}' but event number {2} was received"' sequenceNumber' SystemStreams.StreamsStream' positionEvent.EventNumber)); " is 211.
Long Statement,EventStore.Projections.Core.Services.Processing,AllStreamsCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\AllStreamsCatalogEventReader.cs,DeliverEvent,The length of the statement  "	var data = new ResolvedEvent (link.EventStreamId' link.EventNumber' streamId' -1' resolvedLinkTo' new TFPos (-1' -1)' new TFPos (-1' link.LogPosition)' Guid.Empty' ""' true' null' null' positionMetadataData' streamMetadataData' link.TimeStamp); " is 244.
Long Statement,EventStore.Projections.Core.Services.Processing,AllStreamsCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\AllStreamsCatalogEventReader.cs,DeliverEvent,The length of the statement  "	new ReaderSubscriptionMessage.CommittedEventDistributed (EventReaderCorrelationId' data' _stopOnEof ? (long?)null : link.LogPosition' progress' source: GetType ())); " is 165.
Long Statement,EventStore.Projections.Core.Services.Processing,ByStreamCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ByStreamCatalogEventReader.cs,RequestEvents,The length of the statement  "		_catalogReadRequestId = _ioDispatcher.ReadForward (_catalogStreamName' _catalogNextSequenceNumber' _maxReadCount' false' ReadAs' ReadCatalogCompleted); " is 151.
Long Statement,EventStore.Projections.Core.Services.Processing,ByStreamCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ByStreamCatalogEventReader.cs,RequestEvents,The length of the statement  "			_dataReadRequestId = _ioDispatcher.ReadForward (_dataStreamName' _dataNextSequenceNumber' _maxReadCount' _resolveLinkTos' ReadAs' ReadDataStreamCompleted); " is 155.
Long Statement,EventStore.Projections.Core.Services.Processing,ByStreamCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ByStreamCatalogEventReader.cs,TakeNextStreamIfRequired,The length of the statement  "			SendPartitionEof (_dataStreamName' CheckpointTag.FromByStreamPosition (0' _catalogStreamName' _catalogCurrentSequenceNumber' _dataStreamName' EventNumber.DeletedStream' _limitingCommitPosition.Value)); " is 201.
Long Statement,EventStore.Projections.Core.Services.Processing,ByStreamCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ByStreamCatalogEventReader.cs,EnqueueStreamForProcessing,The length of the statement  "	var streamId = SystemEventTypes.StreamReferenceEventToStreamId (resolvedEvent.Event.EventType' resolvedEvent.Event.Data); " is 121.
Long Statement,EventStore.Projections.Core.Services.Processing,ByStreamCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ByStreamCatalogEventReader.cs,DeliverEvent,The length of the statement  "	new ReaderSubscriptionMessage.CommittedEventDistributed (EventReaderCorrelationId' resolvedEvent' _stopOnEof ? (long?)null : positionEvent.LogPosition' progress' source: GetType ()' preTagged: CheckpointTag.FromByStreamPosition (0' _catalogStreamName' _catalogCurrentSequenceNumber' positionEvent.EventStreamId' positionEvent.EventNumber' _limitingCommitPosition.Value))); " is 372.
Long Statement,EventStore.Projections.Core.Services.Processing,CatalogStreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CatalogStreamPositionTagger.cs,IsMessageAfterCheckpointTag,The length of the statement  "	return committedEvent.Data.PositionStreamId == _catalogStream && committedEvent.Data.PositionSequenceNumber > previous.CatalogPosition; " is 135.
Long Statement,EventStore.Projections.Core.Services.Processing,CatalogStreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CatalogStreamPositionTagger.cs,MakeCheckpointTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected: {0} Was: {1}"' Phase' previous.Phase)); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,CatalogStreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CatalogStreamPositionTagger.cs,MakeCheckpointTag,The length of the statement  "		throw new InvalidOperationException (string.Format ("Invalid catalog stream '{0}'.  Expected catalog stream is '{1}'"' committedEvent.Data.EventStreamId' _catalogStream)); " is 171.
Long Statement,EventStore.Projections.Core.Services.Processing,CatalogStreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CatalogStreamPositionTagger.cs,MakeCheckpointTag,The length of the statement  "	return CheckpointTag.FromByStreamPosition (previous.Phase' ""' committedEvent.Data.PositionSequenceNumber' null' -1' previous.CommitPosition.GetValueOrDefault ()); " is 163.
Long Statement,EventStore.Projections.Core.Services.Processing,CatalogStreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CatalogStreamPositionTagger.cs,AdjustTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected less or equal to: {0} Was: {1}"' Phase' tag.Phase)' "tag"); " is 144.
Long Statement,EventStore.Projections.Core.Services.Processing,CheckpointTagVersion,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTagExtensions.cs,AdjustBy,The length of the statement  "	if (SystemVersion == ProjectionsSubsystem.VERSION && Version.Version == version.Version && Version.ProjectionId == version.ProjectionId) " is 136.
Long Statement,EventStore.Projections.Core.Services.Processing,ContinuousProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ContinuousProjectionProcessingStrategy.cs,CreateFirstPhaseResultEmitter,The length of the statement  "	return _sourceDefinition.ProducesResults ? new ResultEventEmitter (namingBuilder) : (IResultEventEmitter)new NoopResultEventEmitter (); " is 135.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,GetStatistics,The length of the statement  "	info.WritePendingEventsAfterCheckpoint = (_currentCheckpoint != null ? _currentCheckpoint.GetWritePendingEvents () : 0); " is 120.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,GetStatistics,The length of the statement  "	info.ReadsInProgress = /*_readDispatcher.ActiveRequestCount*/+ +(_closingCheckpoint != null ? _closingCheckpoint.GetReadsInProgress () : 0) + (_currentCheckpoint != null ? _currentCheckpoint.GetReadsInProgress () : 0); " is 218.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,GetStatistics,The length of the statement  "	info.WritesInProgress = (_closingCheckpoint != null ? _closingCheckpoint.GetWritesInProgress () : 0) + (_currentCheckpoint != null ? _currentCheckpoint.GetWritesInProgress () : 0); " is 180.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,PrerecordedEventsLoaded,The length of the statement  "	_publisher.Publish (new CoreProjectionProcessingMessage.PrerecordedEventsLoaded (_projectionCorrelationId' checkpointTag)); " is 123.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,RequestCheckpointToStop,The length of the statement  "	_publisher.Publish (new CoreProjectionProcessingMessage.CheckpointCompleted (_projectionCorrelationId' _lastCompletedCheckpointPosition)); " is 138.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,SendPrerecordedEvent,The length of the statement  "	var committedEvent = new ReaderSubscriptionMessage.CommittedEventDistributed (Guid.Empty' new ResolvedEvent (pair' null)' null' -1' source: this.GetType ()); " is 157.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,SendPrerecordedEvent,The length of the statement  "	_publisher.Publish (EventReaderSubscriptionMessage.CommittedEventReceived.FromCommittedEventDistributed (committedEvent' positionTag' null' _projectionCorrelationId' prerecordedEventMessageSequenceNumber)); " is 206.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,CheckpointWritten,The length of the statement  "		// ignore any writes pending in the current checkpoint (this is not the best' but they will never hit the storage' so it is safe) " is 129.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,CheckpointWritten,The length of the statement  "	_publisher.Publish (new CoreProjectionProcessingMessage.CheckpointCompleted (_projectionCorrelationId' _lastCompletedCheckpointPosition)); " is 138.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointReader.cs,RequestLoadState,The length of the statement  "	_readRequestId = _ioDispatcher.ReadBackward (_projectionCheckpointStreamId' _nextStateIndexToRequest' recordsToRequest' false' SystemAccount.Principal' OnLoadStateReadRequestCompleted); " is 185.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointReader.cs,OnLoadStateReadRequestCompleted,The length of the statement  "		var checkpoint = message.Events.Where (v => v.Event.EventType == ProjectionEventTypes.ProjectionCheckpoint).Select (x => x.Event).FirstOrDefault (); " is 148.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointReader.cs,OnLoadStateReadRequestCompleted,The length of the statement  "			if (parsed.Version.ProjectionId != _projectionVersion.ProjectionId || _projectionVersion.Epoch > parsed.Version.Version) { " is 122.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointReader.cs,CheckpointLoaded,The length of the statement  "	_publisher.Publish (new CoreProjectionProcessingMessage.CheckpointLoaded (_projectionCorrelationId' checkpointTag' checkpointData' _lastWrittenCheckpointEventNumber)); " is 167.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointWriter.cs,BeginWriteCheckpoint,The length of the statement  "	_checkpointEventToBePublished = new Event (Guid.NewGuid ()' ProjectionEventTypes.ProjectionCheckpoint' true' requestedCheckpointState == null ? null : Helper.UTF8NoBom.GetBytes (requestedCheckpointState)' requestedCheckpointPosition.ToJsonBytes (projectionVersion: _projectionVersion)); " is 286.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointWriter.cs,WriteCheckpointEventCompleted,The length of the statement  "			_logger.Trace ("Checkpoint has been written for projection {0} at sequence number {1} (current)"' _name' firstWrittenEventNumber); " is 130.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointWriter.cs,WriteCheckpointEventCompleted,The length of the statement  "			_logger.Info ("Failed to write projection checkpoint to stream {0}. Error: {1}"' eventStreamId' Enum.GetName (typeof(OperationResult)' operationResult)); " is 153.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointWriter.cs,WriteCheckpointEventCompleted,The length of the statement  "			_envelope.ReplyWith (new CoreProjectionCheckpointWriterMessage.RestartRequested ("Checkpoint stream has been written to from the outside")); " is 140.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointWriter.cs,WriteCheckpointEventCompleted,The length of the statement  "				//The first parameter is not needed in this case as the CoreProjectionCheckpointManager takes care of filling in the projection id when it reconstructs the message " is 163.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointWriter.cs,WriteCheckpointEventCompleted,The length of the statement  "				_envelope.ReplyWith (new CoreProjectionProcessingMessage.Failed (Guid.Empty' string.Format ("After retrying {0} times' we failed to write the checkpoint for {1} to {2} due to a {3}"' MaxNumberOfRetries' _name' eventStreamId' Enum.GetName (typeof(OperationResult)' operationResult)))); " is 284.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointWriter.cs,PublishWriteStreamMetadataAndCheckpointEvent,The length of the statement  "		_logger.Trace ("Writing checkpoint for {0} at {1} with expected version number {2}"' _name' _requestedCheckpointPosition' _lastWrittenCheckpointEventNumber); " is 157.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointWriter.cs,PublishWriteStreamMetadata,The length of the statement  "	_writeRequestId = _ioDispatcher.WriteEvent (metaStreamId' ExpectedVersion.Any' CreateStreamMetadataEvent ()' SystemAccount.Principal' msg => { " is 142.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointWriter.cs,CreateStreamMetadataEvent,The length of the statement  "	var acl = new StreamAcl (readRole: SystemRoles.Admins' writeRole: SystemRoles.Admins' deleteRole: SystemRoles.Admins' metaReadRole: SystemRoles.All' metaWriteRole: SystemRoles.Admins); " is 184.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointWriter.cs,PublishWriteCheckpointEvent,The length of the statement  "	_writeRequestId = _ioDispatcher.WriteEvent (_projectionCheckpointStreamId' _lastWrittenCheckpointEventNumber' _checkpointEventToBePublished' SystemAccount.Principal' msg => WriteCheckpointEventCompleted (_projectionCheckpointStreamId' msg.Result' msg.FirstEventNumber)); " is 270.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointWriter.cs,GetStatistics,The length of the statement  "	info.CheckpointStatus = _inCheckpointWriteAttempt > 0 ? "Writing (" + _inCheckpointWriteAttempt + ")" : info.CheckpointStatus; " is 126.
Long Statement,EventStore.Projections.Core.Services.Processing,DefaultCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultCheckpointManager.cs,BeginWriteCheckpoint,The length of the statement  "	_coreProjectionCheckpointWriter.BeginWriteCheckpoint (new SendToThisEnvelope (this)' requestedCheckpointPosition' requestedCheckpointState); " is 140.
Long Statement,EventStore.Projections.Core.Services.Processing,DefaultCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultCheckpointManager.cs,BeginLoadPartitionStateAt,The length of the statement  "	var requestId = _ioDispatcher.ReadBackward (partitionCheckpointStreamName' -1' 1' false' SystemAccount.Principal' m => OnLoadPartitionStateReadStreamEventsBackwardCompleted (m' requestedStateCheckpointTag' loadCompleted' partitionCheckpointStreamName' stateEventType)); " is 269.
Long Statement,EventStore.Projections.Core.Services.Processing,DefaultCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultCheckpointManager.cs,OnLoadPartitionStateReadStreamEventsBackwardCompleted,The length of the statement  "			if (parsed.Version.ProjectionId != _projectionVersion.ProjectionId || _projectionVersion.Epoch > parsed.Version.Version) { " is 122.
Long Statement,EventStore.Projections.Core.Services.Processing,DefaultCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultCheckpointManager.cs,OnLoadPartitionStateReadStreamEventsBackwardCompleted,The length of the statement  "	var requestId = _ioDispatcher.ReadBackward (partitionStreamName' message.NextEventNumber' 1' false' SystemAccount.Principal' m => OnLoadPartitionStateReadStreamEventsBackwardCompleted (m' requestedStateCheckpointTag' loadCompleted' partitionStreamName' stateEventType)); " is 270.
Long Statement,EventStore.Projections.Core.Services.Processing,DefaultCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultCheckpointManager.cs,CreateProjectionCheckpoint,The length of the statement  "	return new ProjectionCheckpoint (_ioDispatcher' _projectionVersion' _runAs' this' checkpointPosition' _positionTagger' _projectionConfig.MaxWriteBatchLength' _logger); " is 167.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateProcessingPhases,The length of the statement  "	var checkpointManager = CreateCheckpointManager (projectionCorrelationId' publisher' ioDispatcher' namingBuilder' coreProjectionCheckpointWriter' definesFold' readerStrategy); " is 175.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateProcessingPhases,The length of the statement  "	var resultWriter = CreateFirstPhaseResultWriter (checkpointManager as IEmittedEventWriter' zeroCheckpointTag' namingBuilder); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateProcessingPhases,The length of the statement  "	var firstPhase = CreateFirstProcessingPhase (publisher' inputQueue' projectionCorrelationId' partitionStateCache' updateStatistics' coreProjection' _subscriptionDispatcher' zeroCheckpointTag' checkpointManager' readerStrategy' resultWriter' emittedStreamsTracker); " is 264.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateProcessingPhases,The length of the statement  "	return CreateProjectionProcessingPhases (publisher' inputQueue' projectionCorrelationId' namingBuilder' partitionStateCache' coreProjection' ioDispatcher' firstPhase); " is 167.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateReaderStrategy,The length of the statement  "	return ReaderStrategy.Create (_name' 0' _sourceDefinition' timeProvider' _projectionConfig.StopOnEof' _projectionConfig.RunAs); " is 127.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateCheckpointManager,The length of the statement  "		return new MultiStreamMultiOutputCheckpointManager (publisher' projectionCorrelationId' _projectionVersion' _projectionConfig.RunAs' ioDispatcher' _projectionConfig' _name' readerStrategy.PositionTagger' namingBuilder' _projectionConfig.CheckpointsEnabled' GetProducesRunningResults ()' definesFold' coreProjectionCheckpointWriter); " is 332.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateCheckpointManager,The length of the statement  "		return new DefaultCheckpointManager (publisher' projectionCorrelationId' _projectionVersion' _projectionConfig.RunAs' ioDispatcher' _projectionConfig' _name' readerStrategy.PositionTagger' namingBuilder' _projectionConfig.CheckpointsEnabled' GetProducesRunningResults ()' definesFold' coreProjectionCheckpointWriter); " is 317.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReaderBasedProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateFirstPhaseResultWriter,The length of the statement  "	return new ResultWriter (CreateFirstPhaseResultEmitter (namingBuilder)' emittedEventWriter' GetProducesRunningResults ()' zeroCheckpointTag' namingBuilder.GetPartitionCatalogStreamName ()); " is 189.
Long Statement,EventStore.Projections.Core.Services.Processing,DefaultProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateFirstProcessingPhase,The length of the statement  "	return new EventProcessingProjectionProcessingPhase (coreProjection' projectionCorrelationId' publisher' inputQueue' _projectionConfig' updateStatistics' _stateHandler' partitionStateCache' _sourceDefinition.DefinesStateTransform' _name' _logger' zeroCheckpointTag' checkpointManager' statePartitionSelector' subscriptionDispatcher' readerStrategy' resultWriter' _projectionConfig.CheckpointsEnabled' this.GetStopOnEof ()' _sourceDefinition.IsBiState' orderedPartitionProcessing: orderedPartitionProcessing' emittedStreamsTracker: emittedStreamsTracker); " is 554.
Long Statement,EventStore.Projections.Core.Services.Processing,DefaultProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultProjectionProcessingStrategy.cs,CreateStatePartitionSelector,The length of the statement  "	return _sourceDefinition.ByCustomPartitions ? new ByHandleStatePartitionSelector (_stateHandler) : (_sourceDefinition.ByStreams ? (StatePartitionSelector)new ByStreamStatePartitionSelector () : new NoopStatePartitionSelector ()); " is 229.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStreamsDeleter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsDeleter.cs,GetPositionToDeleteFrom,The length of the statement  "			var checkpoint = onReadCompleted.Events.Where (v => v.Event.EventType == ProjectionEventTypes.ProjectionCheckpoint).Select (x => x.Event).FirstOrDefault (); " is 156.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStreamsDeleter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsDeleter.cs,DeleteEmittedStreamsFrom,The length of the statement  "	_ioDispatcher.ReadForward (_emittedStreamsId' fromPosition' 1' false' SystemAccount.Principal' x => ReadCompleted (x' onEmittedStreamsDeleted)); " is 144.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStreamsDeleter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsDeleter.cs,ReadCompleted,The length of the statement  "			_ioDispatcher.DeleteStream (_emittedStreamsCheckpointStreamId' ExpectedVersion.Any' false' SystemAccount.Principal' x => { " is 122.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStreamsDeleter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsDeleter.cs,ReadCompleted,The length of the statement  "					Log.Error ("PROJECTIONS: Failed to delete projection stream '{0}'. Reason: {1}"' _emittedStreamsCheckpointStreamId' x.Result); " is 126.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStreamsDeleter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsDeleter.cs,ReadCompleted,The length of the statement  "			_ioDispatcher.DeleteStream (streamId' ExpectedVersion.Any' false' SystemAccount.Principal' x => DeleteStreamCompleted (x' onEmittedStreamsDeleted' streamId' onReadCompleted.Events [0].OriginalEventNumber)); " is 206.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStreamsDeleter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsDeleter.cs,DeleteStreamCompleted,The length of the statement  "	if (deleteStreamCompleted.Result == OperationResult.Success || deleteStreamCompleted.Result == OperationResult.StreamDeleted) { " is 127.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStreamsDeleter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsDeleter.cs,DeleteStreamCompleted,The length of the statement  "			Log.Error ("PROJECTIONS: Retry limit reached' could not delete stream: {0}. Manual intervention is required and you may need to delete this stream manually"' streamId); " is 168.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStreamsDeleter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsDeleter.cs,DeleteStreamCompleted,The length of the statement  "		Log.Error ("PROJECTIONS: Failed to delete emitted stream {0}' Retrying ({1}/{2}). Reason: {3}"' streamId' (RetryLimit - _retryCount) + 1' RetryLimit' deleteStreamCompleted.Result); " is 180.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStreamsDeleter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsDeleter.cs,TryMarkCheckpoint,The length of the statement  "	_ioDispatcher.WriteEvent (_emittedStreamsCheckpointStreamId' ExpectedVersion.Any' new Event (Guid.NewGuid ()' "$Checkpoint"' true' eventNumber.ToJson ()' null)' SystemAccount.Principal' x => { " is 192.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStreamsTracker,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsTracker.cs,ReadEmittedStreamStreamIdsIntoCache,The length of the statement  "	_ioDispatcher.ReadForward (_projectionNamesBuilder.GetEmittedStreamsName ()' position' 1' false' SystemAccount.Principal' x => { " is 128.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStreamsTracker,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsTracker.cs,TrackEmittedStream,The length of the statement  "			var trackEvent = new Event (Guid.NewGuid ()' ProjectionEventTypes.StreamTracked' false' Helper.UTF8NoBom.GetBytes (emittedEvent.StreamId)' null); " is 145.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStreamsTracker,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsTracker.cs,WriteEvent,The length of the statement  "	_ioDispatcher.WriteEvent (_projectionNamesBuilder.GetEmittedStreamsName ()' ExpectedVersion.Any' evnt' SystemAccount.Principal' x => OnWriteComplete (x' evnt' Helper.UTF8NoBom.GetString (evnt.Data)' retryCount)); " is 212.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStreamsTracker,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsTracker.cs,OnWriteComplete,The length of the statement  "			Log.Error ("PROJECTIONS: Failed to write a tracked stream id of {0} to the {1} stream. Retrying {2}/{3}. Reason: {4}"' streamId' _projectionNamesBuilder.GetEmittedStreamsName ()' (MaxRetryCount - retryCount) + 1' MaxRetryCount' completed.Result); " is 246.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStreamsTracker,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStreamsTracker.cs,OnWriteComplete,The length of the statement  "			Log.Error ("PROJECTIONS: Failed to write a tracked stream id of {0} to the {1} stream. Retry limit of {2} reached. Reason: {3}"' streamId' _projectionNamesBuilder.GetEmittedStreamsName ()' MaxRetryCount' completed.Result); " is 222.
Long Statement,EventStore.Projections.Core.Services.Processing,EventByTypeIndexEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexEventReader.cs,PublishIORequest,The length of the statement  "		_publisher.Publish (new AwakeServiceMessage.SubscribeAwake (new PublishEnvelope (_publisher' crossThread: true)' correlationId' null' new TFPos (_lastPosition' _lastPosition)' readEventsForward)); " is 196.
Long Statement,EventStore.Projections.Core.Services.Processing,EventByTypeIndexPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexPositionTagger.cs,MakeCheckpointTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected: {0} Was: {1}"' Phase' previous.Phase)); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,EventByTypeIndexPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexPositionTagger.cs,MakeCheckpointTag,The length of the statement  "		throw new InvalidOperationException (string.Format ("Cannot make a checkpoint tag at earlier position. '{0}' < '{1}'"' committedEvent.Data.EventOrLinkTargetPosition' previous.Position)); " is 186.
Long Statement,EventStore.Projections.Core.Services.Processing,EventByTypeIndexPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexPositionTagger.cs,MakeCheckpointTag,The length of the statement  "	return byIndex ? previous.UpdateEventTypeIndexPosition (committedEvent.Data.EventOrLinkTargetPosition' _streamToEventType [committedEvent.Data.PositionStreamId]' committedEvent.Data.PositionSequenceNumber) : previous.UpdateEventTypeIndexPosition (committedEvent.Data.EventOrLinkTargetPosition); " is 294.
Long Statement,EventStore.Projections.Core.Services.Processing,EventByTypeIndexPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexPositionTagger.cs,MakeCheckpointTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected: {0} Was: {1}"' Phase' previous.Phase)); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,EventByTypeIndexPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexPositionTagger.cs,MakeCheckpointTag,The length of the statement  "		throw new InvalidOperationException (string.Format ("Cannot make a checkpoint tag at earlier position. '{0}' < '{1}'"' partitionDeleted.DeleteEventOrLinkTargetPosition' previous.Position)); " is 189.
Long Statement,EventStore.Projections.Core.Services.Processing,EventByTypeIndexPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexPositionTagger.cs,MakeCheckpointTag,The length of the statement  "	return byIndex ? previous.UpdateEventTypeIndexPosition (partitionDeleted.DeleteEventOrLinkTargetPosition.Value' _streamToEventType [partitionDeleted.PositionStreamId]' partitionDeleted.PositionEventNumber.Value) : previous.UpdateEventTypeIndexPosition (partitionDeleted.DeleteEventOrLinkTargetPosition.Value); " is 309.
Long Statement,EventStore.Projections.Core.Services.Processing,EventByTypeIndexPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexPositionTagger.cs,MakeZeroCheckpointTag,The length of the statement  "	return CheckpointTag.FromEventTypeIndexPositions (Phase' new TFPos (0' -1)' _eventTypes.ToDictionary (v => v' v => ExpectedVersion.NoStream)); " is 142.
Long Statement,EventStore.Projections.Core.Services.Processing,EventByTypeIndexPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexPositionTagger.cs,IsCompatible,The length of the statement  "	return checkpointTag.Mode_ == CheckpointTag.Mode.EventTypeIndex && checkpointTag.Streams.All (v => _eventTypes.Contains (v.Key)); " is 129.
Long Statement,EventStore.Projections.Core.Services.Processing,EventByTypeIndexPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexPositionTagger.cs,AdjustTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected less or equal to: {0} Was: {1}"' Phase' tag.Phase)' "tag"); " is 144.
Long Statement,EventStore.Projections.Core.Services.Processing,EventByTypeIndexPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexPositionTagger.cs,AdjustTag,The length of the statement  "		return CheckpointTag.FromEventTypeIndexPositions (tag.Phase' tag.Position' _eventTypes.ToDictionary (v => v' v => tag.Streams.TryGetValue (v' out p) ? p : -1)); " is 160.
Long Statement,EventStore.Projections.Core.Services.Processing,EventByTypeIndexPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexPositionTagger.cs,AdjustTag,The length of the statement  "		return CheckpointTag.FromEventTypeIndexPositions (tag.Phase' tag.Position' _eventTypes.ToDictionary (v => v' v => (long)-1)); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,EventByTypeIndexPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventByTypeIndexPositionTagger.cs,AdjustTag,The length of the statement  "		throw new NotSupportedException (string.Format ("The given checkpoint is invalid. Possible causes might include having written an event to the projection's managed stream. The bad checkpoint: {0}"' tag.ToString ())); " is 216.
Long Statement,EventStore.Projections.Core.Services.Processing,ExternallyFedByStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ExternallyFedByStreamEventReader.cs,RequestEvents,The length of the statement  "		_dataReadRequestId = _ioDispatcher.ReadForward (_dataStreamName' _dataNextSequenceNumber' _maxReadCount' _resolveLinkTos' ReadAs' ReadDataStreamCompleted); " is 155.
Long Statement,EventStore.Projections.Core.Services.Processing,ExternallyFedByStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ExternallyFedByStreamEventReader.cs,TakeNextStreamIfRequired,The length of the statement  "			SendPartitionEof (_dataStreamName' CheckpointTag.FromByStreamPosition (0' ""' _catalogCurrentSequenceNumber' _dataStreamName' EventNumber.DeletedStream' _limitingCommitPosition.Value)); " is 185.
Long Statement,EventStore.Projections.Core.Services.Processing,ExternallyFedByStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ExternallyFedByStreamEventReader.cs,DeliverEvent,The length of the statement  "	new ReaderSubscriptionMessage.CommittedEventDistributed (EventReaderCorrelationId' resolvedEvent' _stopOnEof ? (long?)null : positionEvent.LogPosition' progress' source: GetType ()' preTagged: CheckpointTag.FromByStreamPosition (0' ""' _catalogCurrentSequenceNumber' positionEvent.EventStreamId' positionEvent.EventNumber' _limitingCommitPosition.Value))); " is 356.
Long Statement,EventStore.Projections.Core.Services.Processing,ExternallyFedByStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ExternallyFedByStreamEventReader.cs,EnsureLimitingCommitPositionSet,The length of the statement  "		throw new InvalidOperationException (string.Format ("ExternallyFedByStreamEventReader cannot be used with different limiting commit positions.  " + "Currently set: {0}. New: {1}"' _limitingCommitPosition' limitingCommitPosition)); " is 230.
Long Statement,EventStore.Projections.Core.Services.Processing,ExternallyFedReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ExternallyFedReaderStrategy.cs,CreateReaderSubscription,The length of the statement  "	return new ReaderSubscription (_tag' publisher' subscriptionId' fromCheckpointTag' this' _timeProvider' readerSubscriptionOptions.CheckpointUnhandledBytesThreshold' readerSubscriptionOptions.CheckpointProcessedEventsThreshold' readerSubscriptionOptions.StopOnEof' readerSubscriptionOptions.StopAfterNEvents); " is 308.
Long Statement,EventStore.Projections.Core.Services.Processing,ExternallyFedReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ExternallyFedReaderStrategy.cs,CreatePausedEventReader,The length of the statement  "	return new ExternallyFedByStreamEventReader (publisher' eventReaderId' SystemAccount.Principal' ioDispatcher' checkpointTag.CommitPosition' _timeProvider' resolveLinkTos: true); " is 177.
Long Statement,EventStore.Projections.Core.Services.Processing,GetResultWorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\GetResultWorkItem.cs,Reply,The length of the statement  "		_publisher.Publish (new CoreProjectionStatusMessage.ResultReport (_correlationId' _projectionId' _partition' null' checkpointTag)); " is 131.
Long Statement,EventStore.Projections.Core.Services.Processing,GetResultWorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\GetResultWorkItem.cs,Reply,The length of the statement  "		_publisher.Publish (new CoreProjectionStatusMessage.ResultReport (_correlationId' _projectionId' _partition' state.Result' checkpointTag)); " is 139.
Long Statement,EventStore.Projections.Core.Services.Processing,GetStateWorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\GetStateWorkItem.cs,Reply,The length of the statement  "		_publisher.Publish (new CoreProjectionStatusMessage.StateReport (_correlationId' _projectionId' _partition' null' checkpointTag)); " is 130.
Long Statement,EventStore.Projections.Core.Services.Processing,GetStateWorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\GetStateWorkItem.cs,Reply,The length of the statement  "		_publisher.Publish (new CoreProjectionStatusMessage.StateReport (_correlationId' _projectionId' _partition' state.State' checkpointTag)); " is 137.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,RequestEvents,The length of the statement  "		_publisher.Publish (TimerMessage.Schedule.Create (TimeSpan.FromMilliseconds (250)' new PublishEnvelope (_publisher' crossThread: true)' new UnwrapEnvelopeMessage (ProcessBuffers2))); " is 182.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,Handle,The length of the statement  "				Tuple<EventStore.Core.Data.ResolvedEvent' float> itemToEnqueue = Tuple.Create (message.Events [index]' 100.0f * (link ?? @event).EventNumber / message.LastEventNumber); " is 168.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,Handle,The length of the statement  "		throw new NotSupportedException (string.Format ("ReadEvents result code was not recognized. Code: {0}"' message.Result)); " is 121.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,ProcessBuffers,The length of the statement  "			if (_safePositionToJoin != null && itemPosition.CompareTo (_safePositionToJoin.GetValueOrDefault ()) <= 0 && itemPosition.CompareTo (minPosition) < 0) { " is 152.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,RequestEvents,The length of the statement  "	var readEventsForward = new ClientMessage.ReadStreamEventsForward (Guid.NewGuid ()' pendingRequestCorrelationId' new SendToThisEnvelope (this)' stream' _fromPositions.Streams [stream]' _maxReadCount' _resolveLinkTos' false' null' ReadAs); " is 238.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,RequestEvents,The length of the statement  "		_publisher.Publish (new AwakeServiceMessage.SubscribeAwake (new PublishEnvelope (_publisher' crossThread: true)' Guid.NewGuid ()' null' new TFPos (_lastPosition' _lastPosition)' CreateReadTimeoutMessage (pendingRequestCorrelationId' stream))); " is 243.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,RequestEvents,The length of the statement  "		_publisher.Publish (new AwakeServiceMessage.SubscribeAwake (new PublishEnvelope (_publisher' crossThread: true)' Guid.NewGuid ()' null' new TFPos (_lastPosition' _lastPosition)' readEventsForward)); " is 198.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,CreateReadTimeoutMessage,The length of the statement  "	return TimerMessage.Schedule.Create (TimeSpan.FromMilliseconds (ESConsts.ReadRequestTimeout)' new SendToThisEnvelope (this)' new ProjectionManagementMessage.Internal.ReadTimeout (correlationId' streamId)); " is 205.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,DeliverSafePositionToJoin,The length of the statement  "	_publisher.Publish (new ReaderSubscriptionMessage.CommittedEventDistributed (EventReaderCorrelationId' null' PositionToSafeJoinPosition (_safePositionToJoin)' 100.0f' source: this.GetType ())); " is 193.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,DeliverEvent,The length of the statement  "		throw new InvalidOperationException (string.Format ("Event number {0} was expected in the stream {1}' but event number {2} was received"' fromPosition' streamId' positionEvent.EventNumber)); " is 190.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,DeliverEvent,The length of the statement  "	new ReaderSubscriptionMessage.CommittedEventDistributed (EventReaderCorrelationId' new ResolvedEvent (pair' null)' _stopOnEof ? (long?)null : positionEvent.LogPosition' progress' source: this.GetType ())); " is 205.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamMultiOutputCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamMultiOutputCheckpointManager.cs,RecordEventOrder,The length of the statement  "		new EmittedDataEvent (orderStreamName' Guid.NewGuid ()' "$>"' false' resolvedEvent.PositionSequenceNumber + "@" + resolvedEvent.PositionStreamId' null' orderCheckpointTag' _lastOrderCheckpointTag' v => committed ()) " is 215.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamMultiOutputCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamMultiOutputCheckpointManager.cs,CreateOrderStream,The length of the statement  "	return new EmittedStream (/* MUST NEVER SEND READY MESSAGE */_namingBuilder.GetOrderStreamName ()' new EmittedStream.WriterConfiguration (new EmittedStream.WriterConfiguration.StreamMetadata ()' SystemAccount.Principal' 100' _logger)' _projectionVersion' _positionTagger' @from' _ioDispatcher' this' noCheckpoints: true); " is 321.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamMultiOutputCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamMultiOutputCheckpointManager.cs,BeginLoadPrerecordedEventsChunk,The length of the statement  "	_ioDispatcher.ReadBackward (_namingBuilder.GetOrderStreamName ()' fromEventNumber' 100' false' SystemAccount.Principal' completed => { " is 134.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamMultiOutputCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamMultiOutputCheckpointManager.cs,BeginLoadPrerecordedEventsChunk,The length of the statement  "				if (_projectionVersion.ProjectionId != parsed.Version.ProjectionId || _projectionVersion.Epoch > parsed.Version.Version) { " is 122.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionQueue,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionQueue.cs,EnqueueOutOfOrderTask,The length of the statement  "		throw new InvalidOperationException ("Cannot enqueue an out-of-order task.  The projection position is currently unknown."); " is 124.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionQueue,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionQueue.cs,ValidateQueueingOrder,The length of the statement  "	if (eventTag < _lastEnqueuedEventTag || (!(allowCurrentPosition || _justInitialized) && eventTag <= _lastEnqueuedEventTag)) " is 123.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjectionQueue,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionQueue.cs,ValidateQueueingOrder,The length of the statement  "		throw new InvalidOperationException (string.Format ("Invalid order.  Last known tag is: '{0}'.  Current tag is: '{1}'"' _lastEnqueuedEventTag' eventTag)); " is 154.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReader.cs,SendPartitionEof,The length of the statement  "	_publisher.Publish (new ReaderSubscriptionMessage.EventReaderPartitionEof (EventReaderCorrelationId' partition' preTagged)); " is 124.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReader.cs,SendPartitionDeleted_WhenReadingDataStream,The length of the statement  "	_publisher.Publish (new ReaderSubscriptionMessage.EventReaderPartitionDeleted (EventReaderCorrelationId' partition' lastEventNumber' deletedLinkOrEventPosition' deletedEventPosition' positionStreamId' positionEventNumber' preTagged)); " is 234.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReader.cs,GetLastCommitPositionFrom,The length of the statement  "	return (msg.IsEndOfStream || msg.Result == ReadStreamResult.NoStream || msg.Result == ReadStreamResult.StreamDeleted) ? (msg.TfLastCommitPosition == -1 ? (long?)null : msg.TfLastCommitPosition) : (long?)null; " is 208.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReader.cs,SendStarting,The length of the statement  "	_publisher.Publish (new ReaderSubscriptionMessage.EventReaderStarting (EventReaderCorrelationId' startingLastCommitPosition)); " is 126.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamPositionTagger.cs,IsMessageAfterCheckpointTag,The length of the statement  "	return _streams.Contains (committedEvent.Data.PositionStreamId) && committedEvent.Data.PositionSequenceNumber > previous.Streams [committedEvent.Data.PositionStreamId]; " is 168.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamPositionTagger.cs,MakeCheckpointTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected: {0} Was: {1}"' Phase' previous.Phase)); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamPositionTagger.cs,MakeCheckpointTag,The length of the statement  "	return previous.UpdateStreamPosition (committedEvent.Data.PositionStreamId' committedEvent.Data.PositionSequenceNumber); " is 120.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamPositionTagger.cs,IsCompatible,The length of the statement  "	return checkpointTag.Mode_ == CheckpointTag.Mode.MultiStream && checkpointTag.Streams.All (v => _streams.Contains (v.Key)); " is 123.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamPositionTagger.cs,AdjustTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected less or equal to: {0} Was: {1}"' Phase' tag.Phase)' "tag"); " is 144.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamPositionTagger.cs,AdjustTag,The length of the statement  "		return CheckpointTag.FromStreamPositions (tag.Phase' _streams.ToDictionary (v => v' v => tag.Streams.TryGetValue (v' out p) ? p : -1)); " is 135.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamPositionTagger.cs,AdjustTag,The length of the statement  "		return CheckpointTag.FromStreamPositions (tag.Phase' _streams.ToDictionary (v => v' v => tag.Streams.TryGetValue (v' out p) ? p : -1)); " is 135.
Long Statement,EventStore.Projections.Core.Services.Processing,MultiStreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamPositionTagger.cs,AdjustTag,The length of the statement  "		throw new NotSupportedException (string.Format ("The given checkpoint is invalid. Possible causes might include having written an event to the projection's managed stream. The bad checkpoint: {0}"' tag.ToString ())); " is 216.
Long Statement,EventStore.Projections.Core.Services.Processing,NoopCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\NoopCheckpointManager.cs,Stopping,The length of the statement  "	_publisher.Publish (new CoreProjectionProcessingMessage.CheckpointCompleted (_projectionCorrelationId' _lastCompletedCheckpointPosition)); " is 138.
Long Statement,EventStore.Projections.Core.Services.Processing,NoopCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\NoopCheckpointManager.cs,PrerecordedEventsLoaded,The length of the statement  "	_publisher.Publish (new CoreProjectionProcessingMessage.PrerecordedEventsLoaded (_projectionCorrelationId' checkpointTag)); " is 123.
Long Statement,EventStore.Projections.Core.Services.Processing,ParallelQueryAllStreamsMasterReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryAllStreamsMasterReaderStrategy.cs,CreateReaderSubscription,The length of the statement  "	return new ReaderSubscription (_tag' publisher' subscriptionId' fromCheckpointTag' this' _timeProvider' readerSubscriptionOptions.CheckpointUnhandledBytesThreshold' readerSubscriptionOptions.CheckpointProcessedEventsThreshold' readerSubscriptionOptions.StopOnEof' readerSubscriptionOptions.StopAfterNEvents); " is 308.
Long Statement,EventStore.Projections.Core.Services.Processing,ParallelQueryAllStreamsMasterReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryAllStreamsMasterReaderStrategy.cs,CreatePausedEventReader,The length of the statement  "	return new AllStreamsCatalogEventReader (ioDispatcher' publisher' eventReaderId' _runAs' checkpointTag.CatalogPosition + 1' _timeProvider' stopOnEof: stopOnEof); " is 161.
Long Statement,EventStore.Projections.Core.Services.Processing,ParallelQueryMasterProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryMasterProjectionProcessingPhase.cs,AssignSlaves,The length of the statement  "	_loadBalancer = new ParallelProcessingLoadBalancer (workerCount' _maxScheduledSizePerWorker' _maxUnmeasuredTasksPerWorker); " is 123.
Long Statement,EventStore.Projections.Core.Services.Processing,ParallelQueryMasterProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryMasterProjectionProcessingPhase.cs,Handle,The length of the statement  "		var committedEventWorkItem = new SpoolStreamProcessingWorkItem (this' _publisher' _resultWriter' _loadBalancer' message' _slaves' _spoolProcessingResponseDispatcher' _subscriptionStartedAtLastCommitPosition' _currentSubscriptionId' _stateHandler.GetSourceDefinition ().DefinesCatalogTransform); " is 294.
Long Statement,EventStore.Projections.Core.Services.Processing,ParallelQueryMasterReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryMasterReaderStrategy.cs,CreateReaderSubscription,The length of the statement  "	return new ReaderSubscription (_tag' publisher' subscriptionId' fromCheckpointTag' this' _timeProvider' readerSubscriptionOptions.CheckpointUnhandledBytesThreshold' readerSubscriptionOptions.CheckpointProcessedEventsThreshold' readerSubscriptionOptions.StopOnEof' readerSubscriptionOptions.StopAfterNEvents); " is 308.
Long Statement,EventStore.Projections.Core.Services.Processing,ParallelQueryMasterReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryMasterReaderStrategy.cs,CreatePausedEventReader,The length of the statement  "	return new StreamEventReader (publisher' eventReaderId' _runAs' _catalogStream' checkpointTag.CatalogPosition + 1' _timeProvider' resolveLinkTos: true' stopOnEof: stopOnEof' produceStreamDeletes: false); " is 203.
Long Statement,EventStore.Projections.Core.Services.Processing,ParallelQueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The length of the statement  "	var coreProjectionCheckpointWriter = new CoreProjectionCheckpointWriter (namingBuilder.MakeCheckpointStreamName ()' ioDispatcher' _projectionVersion' _name); " is 157.
Long Statement,EventStore.Projections.Core.Services.Processing,ParallelQueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The length of the statement  "	var checkpointManager2 = new DefaultCheckpointManager (publisher' projectionCorrelationId' _projectionVersion' _projectionConfig.RunAs' ioDispatcher' _projectionConfig' _name' new PhasePositionTagger (1)' namingBuilder' GetUseCheckpoints ()' false' _sourceDefinition.DefinesFold' coreProjectionCheckpointWriter); " is 312.
Long Statement,EventStore.Projections.Core.Services.Processing,ParallelQueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The length of the statement  "	var writeResultsPhase = new WriteQueryEofProjectionProcessingPhase (publisher' 1' namingBuilder.GetResultStreamName ()' coreProjection' partitionStateCache' checkpointManager2' checkpointManager2' firstPhase.EmittedStreamsTracker); " is 231.
Long Statement,EventStore.Projections.Core.Services.Processing,ParallelQueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryProcessingStrategy.cs,CreateFirstProcessingPhase,The length of the statement  "	return new ParallelQueryMasterProjectionProcessingPhase (coreProjection' projectionCorrelationId' publisher' inputQueue' _projectionConfig' updateStatistics' _stateHandler' partitionStateCache' _name' _logger' zeroCheckpointTag' checkpointManager' subscriptionDispatcher' readerStrategy' resultWriter' _projectionConfig.CheckpointsEnabled' this.GetStopOnEof ()' _spoolProcessingResponseDispatcher' emittedStreamsTracker); " is 421.
Long Statement,EventStore.Projections.Core.Services.Processing,ParallelQueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ParallelQueryProcessingStrategy.cs,GetSlaveProjections,The length of the statement  "	return new SlaveProjectionDefinitions (new SlaveProjectionDefinitions.Definition ("slave"' _handlerType' _query' SlaveProjectionDefinitions.SlaveProjectionRequestedNumber.OnePerThread' ProjectionMode.Transient' _projectionConfig.EmitEventEnabled' _projectionConfig.CheckpointsEnabled' trackEmittedStreams: _projectionConfig.TrackEmittedStreams' runAs1: new ProjectionManagementMessage.RunAs (_projectionConfig.RunAs)' enableRunAs: true)); " is 438.
Long Statement,EventStore.Projections.Core.Services.Processing,PartitionStateCache,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PartitionStateCache.cs,TryGetAndLockPartitionState,The length of the statement  "		throw new InvalidOperationException (string.Format ("Attempt to relock the '{0}' partition state locked at the '{1}' position at the earlier position '{2}'"' partition' stateData.Item2' lockAt)); " is 195.
Long Statement,EventStore.Projections.Core.Services.Processing,PartitionStateCache,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PartitionStateCache.cs,GetLockedPartitionState,The length of the statement  "		throw new InvalidOperationException (string.Format ("Partition '{0}' state was requested as locked but it is missing in the cache."' partition)); " is 145.
Long Statement,EventStore.Projections.Core.Services.Processing,PartitionStateCache,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PartitionStateCache.cs,GetLockedPartitionState,The length of the statement  "		throw new InvalidOperationException (string.Format ("Partition '{0}' state was requested as locked but it is cached as unlocked"' partition)); " is 142.
Long Statement,EventStore.Projections.Core.Services.Processing,PartitionStateCache,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PartitionStateCache.cs,EnsureCanLockPartitionAt,The length of the statement  "		throw new InvalidOperationException (string.Format ("Attempt to lock the '{0}' partition state at the position '{1}' before the unlocked position '{2}'"' partition' at' _unlockedBefore)); " is 187.
Long Statement,EventStore.Projections.Core.Services.Processing,PartitionStateUpdateManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PartitionStateUpdateManager.cs,EmitEvents,The length of the statement  "			list.Add (new EmittedEventEnvelope (new EmittedDataEvent (streamId' Guid.NewGuid ()' ProjectionEventTypes.PartitionCheckpoint' true' data' null' causedBy' expectedTag)' _partitionCheckpointStreamMetadata)); " is 206.
Long Statement,EventStore.Projections.Core.Services.Processing,PhasePositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PhasePositionTagger.cs,AdjustTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected less or equal to: {0} Was: {1}"' Phase' tag.Phase)' "tag"); " is 144.
Long Statement,EventStore.Projections.Core.Services.Processing,PreparePositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PreparePositionTagger.cs,MakeCheckpointTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected: {0} Was: {1}"' Phase' previous.Phase)); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,PreparePositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PreparePositionTagger.cs,AdjustTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected less or equal to: {0} Was: {1}"' Phase' tag.Phase)' "tag"); " is 144.
Long Statement,EventStore.Projections.Core.Services.Processing,PreparePositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PreparePositionTagger.cs,AdjustTag,The length of the statement  "		throw new NotSupportedException (string.Format ("The given checkpoint is invalid. Possible causes might include having written an event to the projection's managed stream. The bad checkpoint: {0}"' tag.ToString ())); " is 216.
Long Statement,EventStore.Projections.Core.Services.Processing,PreTaggedPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PreTaggedPositionTagger.cs,MakeCheckpointTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected: {0} Was: {1}"' Phase' previous.Phase)); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,PreTaggedPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PreTaggedPositionTagger.cs,MakeCheckpointTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected: {0} Was: {1}"' Phase' previous.Phase)); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,PreTaggedPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PreTaggedPositionTagger.cs,MakeCheckpointTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected: {0} Was: {1}"' Phase' previous.Phase)); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,PreTaggedPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PreTaggedPositionTagger.cs,AdjustTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected less or equal to: {0} Was: {1}"' Phase' tag.Phase)' "tag"); " is 144.
Long Statement,EventStore.Projections.Core.Services.Processing,ProcessingStrategySelector,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProcessingStrategySelector.cs,CreateProjectionProcessingStrategy,The length of the statement  "	if (!sourceDefinition.DisableParallelismOption && projectionConfig.StopOnEof && sourceDefinition.ByStreams && sourceDefinition.DefinesFold && !string.IsNullOrEmpty (sourceDefinition.CatalogStream)) { " is 199.
Long Statement,EventStore.Projections.Core.Services.Processing,ProcessingStrategySelector,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProcessingStrategySelector.cs,CreateProjectionProcessingStrategy,The length of the statement  "		return new ParallelQueryProcessingStrategy (name' projectionVersion' stateHandler' projectionConfig' sourceDefinition' handlerType' query' namesBuilder' _logger' _spoolProcessingResponseDispatcher' _subscriptionDispatcher); " is 223.
Long Statement,EventStore.Projections.Core.Services.Processing,ProcessingStrategySelector,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProcessingStrategySelector.cs,CreateProjectionProcessingStrategy,The length of the statement  "	if (!sourceDefinition.DisableParallelismOption && projectionConfig.StopOnEof && sourceDefinition.ByStreams && sourceDefinition.DefinesFold && sourceDefinition.HasCategories ()) { " is 178.
Long Statement,EventStore.Projections.Core.Services.Processing,ProcessingStrategySelector,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProcessingStrategySelector.cs,CreateProjectionProcessingStrategy,The length of the statement  "		return new ParallelQueryProcessingStrategy (name' projectionVersion' stateHandler' projectionConfig' sourceDefinition' handlerType' query' namesBuilder' _logger' _spoolProcessingResponseDispatcher' _subscriptionDispatcher); " is 223.
Long Statement,EventStore.Projections.Core.Services.Processing,ProcessingStrategySelector,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProcessingStrategySelector.cs,CreateProjectionProcessingStrategy,The length of the statement  "	return projectionConfig.StopOnEof ? (ProjectionProcessingStrategy)new QueryProcessingStrategy (name' projectionVersion' stateHandler' projectionConfig' sourceDefinition' _logger' _subscriptionDispatcher) : new ContinuousProjectionProcessingStrategy (name' projectionVersion' stateHandler' projectionConfig' sourceDefinition' _logger' _subscriptionDispatcher); " is 359.
Long Statement,EventStore.Projections.Core.Services.Processing,ProcessingStrategySelector,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProcessingStrategySelector.cs,CreateSlaveProjectionProcessingStrategy,The length of the statement  "	return new SlaveQueryProcessingStrategy (name' projectionVersion' stateHandler' projectionConfig' sourceDefinition' projectionCoreService.Logger' workerId' publisher' masterCoreProjectionId' _subscriptionDispatcher); " is 216.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,ControlSteps,The length of the statement  "	yield return _ioDispatcher.BeginReadBackward (_cancellationScope' ProjectionNamesBuilder._projectionsControlStream' -1' 1' false' SystemAccount.Principal' completed => readResult = completed); " is 192.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,ControlSteps,The length of the statement  "			yield return _ioDispatcher.BeginWriteEvents (_cancellationScope' ProjectionNamesBuilder._projectionsMasterStream' ExpectedVersion.Any' SystemAccount.Principal' events' r => { " is 174.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,ControlSteps,The length of the statement  "			yield return _ioDispatcher.BeginReadForward (_cancellationScope' ProjectionNamesBuilder._projectionsControlStream' fromEventNumber' 1' false' SystemAccount.Principal' completed => readResultForward = completed); " is 211.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,ControlSteps,The length of the statement  "			yield return _ioDispatcher.BeginSubscribeAwake (_cancellationScope' ProjectionNamesBuilder._projectionsControlStream' new TFPos (subscribeFrom' subscribeFrom)' message => { " is 172.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,StartCoreSteps,The length of the statement  "	yield return _ioDispatcher.BeginUpdateStreamAcl (_cancellationScope' coreControlStreamID' ExpectedVersion.Any' SystemAccount.Principal' new StreamMetadata (maxAge: ProjectionNamesBuilder.CoreControlStreamMaxAge)' completed => { " is 227.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,StartCoreSteps,The length of the statement  "	yield return _ioDispatcher.BeginReadBackward (_cancellationScope' coreControlStreamID' -1' 1' false' SystemAccount.Principal' completed => readResult = completed); " is 163.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,StartCoreSteps,The length of the statement  "			yield return _ioDispatcher.BeginReadForward (_cancellationScope' coreControlStreamID' @from' 10' false' SystemAccount.Principal' completed => { " is 143.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new CoreProjectionManagementMessage.CreatePrepared (Guid.ParseExact (commandBody.Id' "N")' Guid.Empty' commandBody.Name' commandBody.Version' commandBody.Config.ToConfig ()' commandBody.SourceDefinition' commandBody.HandlerType' commandBody.Query)); " is 269.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new CoreProjectionManagementMessage.CreateAndPrepare (Guid.ParseExact (commandBody.Id' "N")' Guid.Empty' commandBody.Name' commandBody.Version' commandBody.Config.ToConfig ()' commandBody.HandlerType' commandBody.Query)); " is 241.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new CoreProjectionManagementMessage.CreateAndPrepareSlave (Guid.ParseExact (commandBody.Id' "N")' Guid.Empty' commandBody.Name' commandBody.Version' commandBody.Config.ToConfig ()' Guid.ParseExact (commandBody.MasterWorkerId' "N")' Guid.ParseExact (commandBody.MasterCoreProjectionId' "N")' commandBody.HandlerType' commandBody.Query)); " is 356.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new ReaderSubscriptionManagement.SpoolStreamReadingCore (Guid.ParseExact (commandBody.SubscriptionId' "N")' commandBody.StreamId' commandBody.CatalogSequenceNumber' commandBody.LimitingCommitPosition)); " is 222.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new CoreProjectionManagementMessage.LoadStopped (Guid.ParseExact (commandBody.Id' "N")' Guid.Empty)); " is 121.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new CoreProjectionManagementMessage.GetState (Guid.ParseExact (commandBody.CorrelationId' "N")' Guid.ParseExact (commandBody.Id' "N")' commandBody.Partition' Guid.Empty)); " is 191.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new CoreProjectionManagementMessage.GetResult (Guid.ParseExact (commandBody.CorrelationId' "N")' Guid.ParseExact (commandBody.Id' "N")' commandBody.Partition' Guid.Empty)); " is 192.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,PublishCommand,The length of the statement  "		_publisher.Publish (new ProjectionManagementMessage.SlaveProjectionsStarted (Guid.ParseExact (commandBody.CorrelationId' "N")' Guid.Empty' commandBody.SlaveProjections)); " is 170.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionNamesBuilder,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionNamesBuilder.cs,GetPartitionResultStreamNamePattern,The length of the statement  "	return _sources.PartitionResultStreamNamePatternOption ?? ProjectionsStreamPrefix + EffectiveProjectionName + "-{0}" + ProjectionsStateStreamSuffix; " is 148.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReaderCoreService,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReaderCoreService.cs,Handle,The length of the statement  "		var forkedEventReader = projectionSubscription.CreatePausedEventReader (_publisher' _ioDispatcher' forkedEventReaderId); " is 120.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReaderCoreService,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReaderCoreService.cs,Handle,The length of the statement  "		_publisher.Publish (new EventReaderSubscriptionMessage.ReaderAssignedReader (message.SubscriptionId' forkedEventReaderId)); " is 123.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReaderCoreService,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReaderCoreService.cs,Handle,The length of the statement  "	var projectionSubscription = message.ReaderStrategy.CreateReaderSubscription (_publisher' fromCheckpointTag' message.SubscriptionId' message.Options); " is 150.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReaderCoreService,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReaderCoreService.cs,Handle,The length of the statement  "	var eventReader = projectionSubscription.CreatePausedEventReader (_publisher' _ioDispatcher' distibutionPointCorrelationId); " is 124.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReaderCoreService,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReaderCoreService.cs,Handle,The length of the statement  "	_publisher.Publish (new EventReaderSubscriptionMessage.ReaderAssignedReader (subscriptionId' distibutionPointCorrelationId)); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReaderCoreService,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReaderCoreService.cs,Handle,The length of the statement  "			_publisher.Publish (new EventReaderSubscriptionMessage.Failed (subscription.SubscriptionId' string.Format ("The subscription failed to handle an event {0}:{1}@{2} because {3}"' message.Data.EventStreamId' message.Data.EventType' message.Data.EventSequenceNumber' ex.Message))); " is 277.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReaderCoreService,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReaderCoreService.cs,StartReaders,The length of the statement  "	var transactionFileReader = new TransactionFileEventReader (_publisher' distributionPointCorrelationId' SystemAccount.Principal' new TFPos (_writerCheckpoint.Read ()' -1)' new RealTimeProvider ()' deliverEndOfTFPosition: false); " is 228.
Long Statement,EventStore.Projections.Core.Services.Processing,EventReaderCoreService,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventReaderCoreService.cs,TrySubscribeHeadingEventReader,The length of the statement  "	if (!_headingEventReader.TrySubscribe (projectionId' projectionSubscription' message.SafeTransactionFileReaderJoinPosition.Value)) " is 130.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,Handle,The length of the statement  "		var partitionCompletedWorkItem = new PartitionCompletedWorkItem (this' _checkpointManager' message.Partition' message.CheckpointTag); " is 133.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,InternalProcessCommittedEvent,The length of the statement  "	var hasBeenProcessed = SafeProcessEventByHandler (partition' message' out newState' out newSharedState' out projectionResult' out emittedEvents); " is 145.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,InternalProcessCommittedEvent,The length of the statement  "		var newSharedPartitionState = newSharedState != null ? new PartitionState (newSharedState' null' message.CheckpointTag) : null; " is 127.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,InternalProcessPartitionDeleted,The length of the statement  "	var hasBeenProcessed = SafeProcessPartitionDeletedByHandler (partition' deletedPosition' out newState' out projectionResult); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,SafeProcessEventByHandler,The length of the statement  "		hasBeenProcessed = ProcessEventByHandler (partition' message' out newState' out newSharedState' out projectionResult' out emittedEvents); " is 137.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,SafeProcessEventByHandler,The length of the statement  "		SetFaulting (String.Format ("The {0} projection failed to process an event.\r\nHandler: {1}\r\nEvent Position: {2}\r\n\r\nMessage:\r\n\r\n{3}"' _projectionName' GetHandlerTypeName ()' message.CheckpointTag' ex.Message)' ex); " is 224.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,SafeProcessPartitionDeletedByHandler,The length of the statement  "		SetFaulting (String.Format ("The {0} projection failed to process a delete partition notification.\r\nHandler: {1}\r\nEvent Position: {2}\r\n\r\nMessage:\r\n\r\n{3}"' _projectionName' GetHandlerTypeName ()' deletedPosition' ex.Message)' ex); " is 241.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,SafeTransformCatalogEventByHandler,The length of the statement  "		SetFaulting (String.Format ("The {0} projection failed to transform a catalog event.\r\nHandler: {1}\r\nEvent Position: {2}\r\n\r\nMessage:\r\n\r\n{3}"' _projectionName' GetHandlerTypeName ()' message.CheckpointTag' ex.Message)' ex); " is 233.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,ProcessEventByHandler,The length of the statement  "		_projectionStateHandler.ProcessPartitionCreated (partition' message.CheckpointTag' message.Data' out eventsEmittedOnInitialization); " is 132.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,ProcessEventByHandler,The length of the statement  "	var result = _projectionStateHandler.ProcessEvent (partition' message.CheckpointTag' message.EventCategory' message.Data' out newState' out newSharedState' out emittedEvents); " is 175.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,ProcessEventByHandler,The length of the statement  "		//TODO: depending on query processing final state to result transformation should happen either here (if EOF) on while writing results " is 134.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,ProcessPartitionDeletedByHandler,The length of the statement  "		//TODO: depending on query processing final state to result transformation should happen either here (if EOF) on while writing results " is 134.
Long Statement,EventStore.Projections.Core.Services.Processing,EventProcessingProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventProcessingProjectionProcessingPhase.cs,NewCheckpointStarted,The length of the statement  "			var faultedReason = String.Format ("The {0} projection failed to process a checkpoint start.\r\nHandler: {1}\r\nEvent Position: {2}\r\n\r\nMessage:\r\n\r\n{3}"' _projectionName' GetHandlerTypeName ()' at' ex.Message); " is 217.
Long Statement,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,EnsureUpdateStatisticksTickPending,The length of the statement  "	_publisher.Publish (TimerMessage.Schedule.Create (_updateInterval' _inutQueueEnvelope' new UnwrapEnvelopeMessage (MarkTicketReceivedAndUpdateStatistics))); " is 155.
Long Statement,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,Handle,The length of the statement  "		var getStateWorkItem = new GetStateWorkItem (_publisher' message.CorrelationId' message.ProjectionId' this' message.Partition); " is 127.
Long Statement,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,Handle,The length of the statement  "		_publisher.Publish (new CoreProjectionStatusMessage.StateReport (message.CorrelationId' _projectionCorrelationId' message.Partition' state: null' position: null)); " is 163.
Long Statement,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,Handle,The length of the statement  "		var getResultWorkItem = new GetResultWorkItem (_publisher' message.CorrelationId' message.ProjectionId' this' message.Partition); " is 129.
Long Statement,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,Handle,The length of the statement  "		_publisher.Publish (new CoreProjectionStatusMessage.ResultReport (message.CorrelationId' _projectionCorrelationId' message.Partition' result: null' position: null)); " is 165.
Long Statement,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,GetSubscriptionOptions,The length of the statement  "	return new ReaderSubscriptionOptions (_projectionConfig.CheckpointUnhandledBytesThreshold' _projectionConfig.CheckpointHandledThreshold' _stopOnEof' stopAfterNEvents: null); " is 173.
Long Statement,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,SubscribeReaders,The length of the statement  "			_subscriptionDispatcher.PublishSubscribe (new ReaderSubscriptionManagement.Subscribe (_currentSubscriptionId' checkpointTag' readerStrategy' GetSubscriptionOptions ())' this); " is 175.
Long Statement,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,InternalCommittedEventProcessed,The length of the statement  "	bool changed = oldState.IsChanged (newPartitionState) || (_isBiState && oldSharedState.IsChanged (newSharedPartitionState)); " is 124.
Long Statement,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,InternalCommittedEventProcessed,The length of the statement  "		return new EventProcessedResult (partition' message.CheckpointTag' oldState' partitionState' oldSharedState' newSharedPartitionState' emittedEvents' message.Data.EventId' correlationId); " is 186.
Long Statement,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,InternalPartitionDeletedProcessed,The length of the statement  "	return new EventProcessedResult (partition' deletePosition' oldState' partitionState' oldSharedState' null' null' Guid.Empty' null' isPartitionTombstone: true); " is 160.
Long Statement,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,BeginGetPartitionStateAt,The length of the statement  "		var s = lockLoaded ? _partitionStateCache.TryGetAndLockPartitionState (statePartition' at) : _partitionStateCache.TryGetPartitionState (statePartition); " is 152.
Long Statement,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,Handle,The length of the statement  "		_publisher.Publish (new CoreProjectionManagementMessage.SlaveProjectionReaderAssigned (_projectionCorrelationId' message.SubscriptionId)); " is 138.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionProcessingStrategy.cs,Create,The length of the statement  "	var coreProjectionCheckpointWriter = new CoreProjectionCheckpointWriter (namingBuilder.MakeCheckpointStreamName ()' ioDispatcher' _projectionVersion' namingBuilder.EffectiveProjectionName); " is 189.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionProcessingStrategy.cs,Create,The length of the statement  "	return new CoreProjection (this' _projectionVersion' projectionCorrelationId' inputQueue' workerId' runAs' publisher' ioDispatcher' subscriptionDispatcher' _logger' namingBuilder' coreProjectionCheckpointWriter' partitionStateCache' namingBuilder.EffectiveProjectionName' timeProvider); " is 286.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,Equals,The length of the statement  "	return AllEvents.Equals (other.AllEvents) && AllStreams.Equals (other.AllStreams) && ByStream.Equals (other.ByStream) && ByCustomPartitions.Equals (other.ByCustomPartitions) && Equals (Categories' other.Categories) && Equals (Events' other.Events) && Equals (Streams' other.Streams) && string.Equals (CatalogStream' other.CatalogStream) && LimitingCommitPosition == other.LimitingCommitPosition && Equals (Options' other.Options); " is 430.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,ProcessOne,The length of the statement  "	if (_eventFilter.Passes (message.Data.ResolvedLinkTo' message.Data.PositionStreamId' message.Data.EventType' message.Data.IsStreamDeletedEvent)) { " is 146.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,ProcessOne,The length of the statement  "		var convertedMessage = EventReaderSubscriptionMessage.CommittedEventReceived.FromCommittedEventDistributed (message' eventCheckpointTag' _eventFilter.GetCategory (message.Data.PositionStreamId)' _subscriptionId' _subscriptionMessageSequenceNumber++); " is 250.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,ProcessOne,The length of the statement  "		if (_checkpointProcessedEventsThreshold > 0 && _eventsSinceLastCheckpointSuggestedOrStart >= _checkpointProcessedEventsThreshold) " is 129.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,ProcessOne,The length of the statement  "	} else if (_checkpointUnhandledBytesThreshold > 0 && (_lastPassedOrCheckpointedEventPosition != null && message.Data.Position.PreparePosition - _lastPassedOrCheckpointedEventPosition.Value > _checkpointUnhandledBytesThreshold)) " is 227.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,PublishProgress,The length of the statement  "		_publisher.Publish (new EventReaderSubscriptionMessage.ProgressChanged (_subscriptionId' _positionTracker.LastTag' _progress' _subscriptionMessageSequenceNumber++)); " is 165.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,PublishPartitionDeleted,The length of the statement  "	_publisher.Publish (new EventReaderSubscriptionMessage.PartitionDeleted (_subscriptionId' deletePosition' partition' _subscriptionMessageSequenceNumber++)); " is 156.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,PublishStartingAt,The length of the statement  "	_publisher.Publish (new EventReaderSubscriptionMessage.SubscriptionStarted (_subscriptionId' _positionTracker.LastTag' startingLastCommitPosition' _subscriptionMessageSequenceNumber++)); " is 186.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,SuggestCheckpoint,The length of the statement  "	_publisher.Publish (new EventReaderSubscriptionMessage.CheckpointSuggested (_subscriptionId' _positionTracker.LastTag' message.Progress' _subscriptionMessageSequenceNumber++)); " is 176.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,CreatePausedEventReader,The length of the statement  "	return _readerStrategy.CreatePausedEventReader (eventReaderId' publisher' ioDispatcher' _positionTracker.LastTag' _stopOnEof' _stopAfterNEvents); " is 145.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,ProcessEofAndEmitEof,The length of the statement  "	_publisher.Publish (new EventReaderSubscriptionMessage.EofReached (_subscriptionId' _positionTracker.LastTag' _subscriptionMessageSequenceNumber++)); " is 149.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,Handle,The length of the statement  "	_publisher.Publish (new EventReaderSubscriptionMessage.PartitionEofReached (_subscriptionId' eventCheckpointTag' message.Partition' _subscriptionMessageSequenceNumber++)); " is 171.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,Handle,The length of the statement  "	_publisher.Publish (new EventReaderSubscriptionMessage.PartitionMeasured (_subscriptionId' message.Partition' message.Size' _subscriptionMessageSequenceNumber++)); " is 163.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,Handle,The length of the statement  "		_publisher.Publish (new EventReaderSubscriptionMessage.NotAuthorized (_subscriptionId' _positionTracker.LastTag' _progress' _subscriptionMessageSequenceNumber++)); " is 163.
Long Statement,EventStore.Projections.Core.Services.Processing,QueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\QueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The length of the statement  "	var coreProjectionCheckpointWriter = new CoreProjectionCheckpointWriter (namingBuilder.MakeCheckpointStreamName ()' ioDispatcher' _projectionVersion' _name); " is 157.
Long Statement,EventStore.Projections.Core.Services.Processing,QueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\QueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The length of the statement  "	var checkpointManager2 = new DefaultCheckpointManager (publisher' projectionCorrelationId' _projectionVersion' SystemAccount.Principal' ioDispatcher' _projectionConfig' _name' new PhasePositionTagger (1)' namingBuilder' GetUseCheckpoints ()' false' _sourceDefinition.DefinesFold' coreProjectionCheckpointWriter); " is 312.
Long Statement,EventStore.Projections.Core.Services.Processing,QueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\QueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The length of the statement  "	if (GetProducesRunningResults () || !string.IsNullOrEmpty (_sourceDefinition.CatalogStream) && _sourceDefinition.ByStreams) " is 123.
Long Statement,EventStore.Projections.Core.Services.Processing,QueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\QueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The length of the statement  "		writeResultsPhase = new WriteQueryEofProjectionProcessingPhase (publisher' 1' namingBuilder.GetResultStreamName ()' coreProjection' partitionStateCache' checkpointManager2' checkpointManager2' firstPhase.EmittedStreamsTracker); " is 227.
Long Statement,EventStore.Projections.Core.Services.Processing,QueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\QueryProcessingStrategy.cs,CreateProjectionProcessingPhases,The length of the statement  "		writeResultsPhase = new WriteQueryResultProjectionProcessingPhase (publisher' 1' namingBuilder.GetResultStreamName ()' coreProjection' partitionStateCache' checkpointManager2' checkpointManager2' firstPhase.EmittedStreamsTracker); " is 230.
Long Statement,EventStore.Projections.Core.Services.Processing,ResultWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ResultWriter.cs,RegisterNewPartition,The length of the statement  "		new EmittedEventEnvelope (new EmittedDataEvent (_partitionCatalogStreamName' Guid.NewGuid ()' "$partition"' false' partition' null' at' null)) " is 142.
Long Statement,EventStore.Projections.Core.Services.Processing,SlaveQueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SlaveQueryProcessingStrategy.cs,CreateReaderStrategy,The length of the statement  "	return new ExternallyFedReaderStrategy (_name' 0' timeProvider' _sourceDefinition.LimitingCommitPosition ?? long.MinValue); " is 123.
Long Statement,EventStore.Projections.Core.Services.Processing,SlaveQueryProcessingStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SlaveQueryProcessingStrategy.cs,CreateCheckpointManager,The length of the statement  "	return new NoopCheckpointManager (publisher' projectionCorrelationId' _projectionConfig' _name' readerStrategy.PositionTagger' namingBuilder); " is 142.
Long Statement,EventStore.Projections.Core.Services.Processing,SlaveResultWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SlaveResultWriter.cs,WriteEofResult,The length of the statement  "	_resultsPublisher.Publish (new PartitionProcessingResultOutput (_workerId' _masterCoreProjectionId' subscriptionId' partition' causedByGuid' causedBy' resultBody)); " is 164.
Long Statement,EventStore.Projections.Core.Services.Processing,SlaveResultWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SlaveResultWriter.cs,WritePartitionMeasured,The length of the statement  "	_resultsPublisher.Publish (new PartitionMeasuredOutput (_workerId' _masterCoreProjectionId' subscriptionId' partition' size)); " is 126.
Long Statement,EventStore.Projections.Core.Services.Processing,SlaveResultWriter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SlaveResultWriter.cs,WriteProgress,The length of the statement  "		_resultsPublisher.Publish (new PartitionProcessingProgressOutput (_workerId' _masterCoreProjectionId' subscriptionId' progress)); " is 129.
Long Statement,EventStore.Projections.Core.Services.Processing,SourceDefinitionBuilder,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,SetPartitionResultStreamNamePatternOption,The length of the statement  "	_options.PartitionResultStreamNamePattern = String.IsNullOrWhiteSpace (partitionResultStreamNamePattern) ? null : partitionResultStreamNamePattern; " is 147.
Long Statement,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,Equals,The length of the statement  "	return string.Equals (ResultStreamName' other.ResultStreamName) && string.Equals (PartitionResultStreamNamePattern' other.PartitionResultStreamNamePattern) && ReorderEvents.Equals (other.ReorderEvents) && ProcessingLag == other.ProcessingLag && IsBiState.Equals (other.IsBiState) && DefinesStateTransform.Equals (other.DefinesStateTransform) && DefinesCatalogTransform.Equals (other.DefinesCatalogTransform) && ProducesResults.Equals (other.ProducesResults) && DefinesFold.Equals (other.DefinesFold) && HandlesDeletedNotifications.Equals (other.HandlesDeletedNotifications) && IncludeLinks.Equals (other.IncludeLinks); " is 618.
Long Statement,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The length of the statement  "		hashCode = (hashCode * 397) ^ (PartitionResultStreamNamePattern != null ? PartitionResultStreamNamePattern.GetHashCode () : 0); " is 127.
Long Statement,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,ThrowIncomparable,The length of the statement  "	throw new InvalidOperationException (string.Format ("Incomparable multi-stream checkpoint tags. '{0}' and '{1}'"' left' right)); " is 128.
Long Statement,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,Equals,The length of the statement  "		return CatalogStream == other.CatalogStream && CatalogPosition == other.CatalogPosition && DataStream == other.DataStream && DataPosition == other.DataPosition && CommitPosition == other.CommitPosition; " is 202.
Long Statement,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,Equals,The length of the statement  "		return Streams.Count == other.Streams.Count && Streams.All (l => other.Streams.TryGetValue (l.Key' out rvalue) && l.Value == rvalue); " is 133.
Long Statement,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,ToString,The length of the statement  "		result = string.Format ("{0}:{1}/{2}:{3}/{4}"' CatalogStream' CatalogPosition' DataStream' DataPosition' CommitPosition); " is 121.
Long Statement,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,WriteVersion,The length of the statement  "	jsonWriter.WriteValue (projectionVersion.ProjectionId + ":" + projectionVersion.Epoch + ":" + projectionVersion.Version + ":" + ProjectionsSubsystem.VERSION); " is 158.
Long Statement,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The length of the statement  "		Tag = byStreamMode ? new CheckpointTag (projectionPhase' catalogStream' catalogPosition.GetValueOrDefault ()' dataStream' dataPosition ?? -1' commitPosition.GetValueOrDefault ()) : new CheckpointTag (projectionPhase' new TFPos (commitPosition ?? Int64.MinValue' preparePosition ?? Int64.MinValue)' streams)' " is 307.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,EmitEvents,The length of the statement  "			if (!(_lastQueuedEventPosition != null && groupCausedBy > _lastQueuedEventPosition) && !(_lastQueuedEventPosition == null && groupCausedBy >= _fromCheckpointPosition)) " is 167.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,EmitEvents,The length of the statement  "				throw new InvalidOperationException (string.Format ("Invalid event order.  '{0}' goes after '{1}'"' @event.CausedByTag' _lastQueuedEventPosition)); " is 147.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,HandleWriteEventsCompleted,The length of the statement  "		_logger.Info ("Failed to write events to stream {0}. Error: {1}"' _streamId' Enum.GetName (typeof(OperationResult)' message.Result)); " is 133.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,HandleWriteEventsCompleted,The length of the statement  "		RequestRestart (string.Format ("The '{0}' stream has been written to from the outside. Expected Version: {1}' Current Version: {2}. Checkpoint: {3}."' _streamId' _lastKnownEventNumber' message.CurrentVersion' _fromCheckpointPosition)); " is 235.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,HandleWriteEventsCompleted,The length of the statement  "				_logger.Info ("Retrying write to {0} (Retry {1} of {2}). Checkpoint: {3}."' _streamId' (MaxRetryCount - retryCount) + 1' MaxRetryCount' _fromCheckpointPosition); " is 161.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,HandleWriteEventsCompleted,The length of the statement  "			Failed (string.Format ("Failed to write events to {0}. Retry limit of {1} reached. Reason: {2}. Checkpoint: {3}."' _streamId' MaxRetryCount' message.Result' _fromCheckpointPosition)); " is 183.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,ReadStreamEventsBackwardCompleted,The length of the statement  "	_retrievedNextEventNumber = newPhysicalStream ? (message.StreamMetadata != null ? (message.StreamMetadata.TruncateBefore ?? 0) : 0) : message.LastEventNumber + 1; " is 162.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,ReadStreamEventsBackwardCompleted,The length of the statement  "				Failed (string.Format ("The '{0}' stream managed by projection {1} has been written to from the outside."' _streamId' _projectionVersion.ProjectionId)); " is 152.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,ReadStreamEventsBackwardCompleted,The length of the statement  "				Failed (string.Format ("Multiple projections emitting to the same stream detected.  Stream: '{0}'. Last event projection: '{1}'.  Emitting projection: '{2}'"' _streamId' parsed.Version.ProjectionId' _projectionVersion.ProjectionId)); " is 233.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,ReadStreamEventsBackwardCompleted,The length of the statement  "		var newLogicalStream = newPhysicalStream || (_projectionVersion.ProjectionId != parsed.Version.ProjectionId || _projectionVersion.Epoch > parsed.Version.Version); " is 162.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,CollectAlreadyCommittedEvents,The length of the statement  "		var ourEpoch = checkpointTagVersion.Version.ProjectionId == _projectionVersion.ProjectionId && checkpointTagVersion.Version.Version >= _projectionVersion.Epoch; " is 160.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,CollectAlreadyCommittedEvents,The length of the statement  "			Failed (string.Format ("A unstamped event found. Stream: '{0}'. EventNumber: '{1}'"' message.EventStreamId' e.OriginalEventNumber)); " is 132.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,IsV1StreamCreatedEvent,The length of the statement  "	return e.Link == null && e.OriginalEventNumber == 0 && (e.OriginalEvent.EventType == SystemEventTypes.V1__StreamCreatedImplicit__ || e.OriginalEvent.EventType == SystemEventTypes.V1__StreamCreated__); " is 200.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,ProcessWrites,The length of the statement  "	if (_started && !_awaitingListEventsCompleted && !_awaitingWriteCompleted && !_awaitingMetadataWriteCompleted && _pendingWrites.Count > 0) { " is 140.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,SubmitListEvents,The length of the statement  "	_streamId' fromEventNumber' 1' resolveLinks: false' principal: SystemAccount.Principal' action: completed => ReadStreamEventsBackwardCompleted (completed' upTo)); " is 162.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,SubmitWriteMetadata,The length of the statement  "	var streamAcl = _streamId.StartsWith ("$") ? new StreamAcl (SystemRoles.All' null' null' SystemRoles.All' null) : new StreamAcl ((string)null' null' null' null' null); " is 167.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,SubmitWriteMetadata,The length of the statement  "	var streamMetadata = new StreamMetadata (_writerConfiguration.MaxCount' _writerConfiguration.MaxAge' acl: streamAcl' truncateBefore: _retrievedNextEventNumber == 0 ? (long?)null : _retrievedNextEventNumber); " is 207.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,SubmitWriteMetadata,The length of the statement  "	_submittedWriteMetaStreamEvent = new Event (Guid.NewGuid ()' SystemEventTypes.StreamMetadata' true' streamMetadata.ToJsonBytes ()' null); " is 137.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,PublishWriteMetaStream,The length of the statement  "		_ioDispatcher.WriteEvent (_metadataStreamId' ExpectedVersion.Any' _submittedWriteMetaStreamEvent' _writeAs' m => HandleMetadataWriteCompleted (m' retryCount)); " is 159.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,PublishWriteMetaStream,The length of the statement  "		_ioDispatcher.Delay (TimeSpan.FromSeconds (delayInSeconds)' () => _ioDispatcher.WriteEvent (_metadataStreamId' ExpectedVersion.Any' _submittedWriteMetaStreamEvent' _writeAs' m => HandleMetadataWriteCompleted (m' retryCount))); " is 226.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,HandleMetadataWriteCompleted,The length of the statement  "		_logger.Info ("Failed to write events to stream {0}. Error: {1}"' _metadataStreamId' Enum.GetName (typeof(OperationResult)' message.Result)); " is 141.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,HandleMetadataWriteCompleted,The length of the statement  "				_logger.Info ("Retrying write to {0} (Retry {1} of {2})"' _metadataStreamId' (MaxRetryCount - retryCount) + 1' MaxRetryCount); " is 126.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,HandleMetadataWriteCompleted,The length of the statement  "			Failed (string.Format ("Failed to write an events to {0}. Retry limit of {1} reached. Reason: {2}"' _metadataStreamId' MaxRetryCount' message.Result)); " is 151.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,SubmitWriteEvents,The length of the statement  "			_readyHandler.Handle (new CoreProjectionProcessingMessage.EmittedStreamAwaiting (_streamId' new SendToThisEnvelope (this))); " is 124.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,SubmitWriteEvents,The length of the statement  "				RequestRestart (string.Format ("Wrong expected tag while submitting write event request to the '{0}' stream.  The last known stream tag is: '{1}'  the expected tag is: '{2}'"' _streamId' _lastCommittedOrSubmittedEventPosition' expectedTag)); " is 241.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,SubmitWriteEvents,The length of the statement  "			events.Add (new Event (e.EventId' e.EventType' e.IsJson' e.Data != null ? Helper.UTF8NoBom.GetBytes (e.Data) : null' e.CausedByTag.ToJsonBytes (_projectionVersion' MetadataWithCausedByAndCorrelationId (e)))); " is 208.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,SubmitWriteEvents,The length of the statement  "			Failed (string.Format ("Failed to write the event: {0} to stream: {1} failed. Reason: {2}."' e' _streamId' ex.Message)); " is 120.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,MetadataWithCausedByAndCorrelationId,The length of the statement  "		yield return new KeyValuePair<string' JToken> ("$causedBy"' JValue.CreateString (emittedEvent.CausedBy.ToString ("D"))); " is 120.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,PublishWriteEvents,The length of the statement  "		_ioDispatcher.WriteEvents (_streamId' _lastKnownEventNumber' _submittedToWriteEvents' _writeAs' m => HandleWriteEventsCompleted (m' retryCount)); " is 145.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,PublishWriteEvents,The length of the statement  "		_ioDispatcher.Delay (TimeSpan.FromSeconds (delayInSeconds)' () => _ioDispatcher.WriteEvents (_streamId' _lastKnownEventNumber' _submittedToWriteEvents' _writeAs' m => HandleWriteEventsCompleted (m' retryCount))); " is 212.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,ProcessRequestedCheckpoint,The length of the statement  "	if (_checkpointRequested && !_awaitingWriteCompleted && !_awaitingMetadataWriteCompleted && _pendingWrites.Count == 0) { " is 120.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,ValidateEmittedEventInRecoveryMode,The length of the statement  "	var failed = topAlreadyCommitted.Item1 != eventsToWrite.CausedByTag || topAlreadyCommitted.Item2 != eventsToWrite.EventType; " is 124.
Long Statement,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,ValidateEmittedEventInRecoveryMode,The length of the statement  "		throw new InvalidEmittedEventSequenceExceptioin (string.Format ("An event emitted in recovery for stream {0} differs from the originally emitted event. Existing('{1}'' '{2}'). New('{3}'' '{4}')"' _streamId' topAlreadyCommitted.Item2' topAlreadyCommitted.Item1' eventsToWrite.EventType' eventsToWrite.CausedByTag)); " is 314.
Long Statement,EventStore.Projections.Core.Services.Processing,HeadingEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\HeadingEventReader.cs,ValidateEventOrder,The length of the statement  "		throw new InvalidOperationException (string.Format ("Invalid committed event order.  Last: '{0}' Received: '{1}'  LastDelete: '{2}'"' _lastEventPosition' message.Data.Position' _lastEventPosition)); " is 198.
Long Statement,EventStore.Projections.Core.Services.Processing,HeadingEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\HeadingEventReader.cs,ValidateEventOrder,The length of the statement  "	if (_lastEventPosition > message.DeleteLinkOrEventPosition.Value || _lastDeletePosition >= message.DeleteLinkOrEventPosition.Value) " is 131.
Long Statement,EventStore.Projections.Core.Services.Processing,HeadingEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\HeadingEventReader.cs,ValidateEventOrder,The length of the statement  "		throw new InvalidOperationException (string.Format ("Invalid partition deleted event order.  Last: '{0}' Received: '{1}'  LastDelete: '{2}'"' _lastEventPosition' message.DeleteLinkOrEventPosition.Value' _lastEventPosition)); " is 224.
Long Statement,EventStore.Projections.Core.Services.Processing,HeadingEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\HeadingEventReader.cs,DispatchRecentMessagesTo,The length of the statement  "					message = string.Format ("The heading subscription failed to handle a recently cached event {0}:{1}@{2} because {3}"' item.Message.Data.EventStreamId' item.Message.Data.EventType' item.Message.Data.PositionSequenceNumber' ex.Message); " is 234.
Long Statement,EventStore.Projections.Core.Services.Processing,HeadingEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\HeadingEventReader.cs,DispatchRecentMessagesTo,The length of the statement  "					message = string.Format ("The heading subscription failed to handle a recently cached deleted event at position {0} because {1}"' m.Position' ex.Message); " is 154.
Long Statement,EventStore.Projections.Core.Services.Processing,HeadingEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\HeadingEventReader.cs,DistributeMessage,The length of the statement  "			_publisher.Publish (new EventReaderSubscriptionMessage.Failed (subscriber.SubscriptionId' string.Format ("The heading subscription failed to handle an event {0}:{1}@{2} because {3}"' message.Data.EventStreamId' message.Data.EventType' message.Data.PositionSequenceNumber' ex.Message))); " is 286.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,Create,The length of the statement  "	if (!sources.AllStreams && !sources.HasCategories () && !sources.HasStreams () && string.IsNullOrEmpty (sources.CatalogStream)) " is 127.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,Create,The length of the statement  "	var readerStrategy = new ReaderStrategy (tag' phase' sources.AllStreams' sources.Categories' sources.Streams' sources.AllEvents' sources.IncludeLinksOption' sources.Events' sources.HandlesDeletedNotifications' sources.CatalogStream' sources.ProcessingLagOption' sources.ReorderEventsOption' runAs' timeProvider); " is 312.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreateReaderSubscription,The length of the statement  "		return new EventReorderingReaderSubscription (publisher' subscriptionId' fromCheckpointTag' this' _timeProvider' readerSubscriptionOptions.CheckpointUnhandledBytesThreshold' readerSubscriptionOptions.CheckpointProcessedEventsThreshold' _processingLag' readerSubscriptionOptions.StopOnEof' readerSubscriptionOptions.StopAfterNEvents); " is 333.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreateReaderSubscription,The length of the statement  "		return new ReaderSubscription (_tag' publisher' subscriptionId' fromCheckpointTag' this' _timeProvider' readerSubscriptionOptions.CheckpointUnhandledBytesThreshold' readerSubscriptionOptions.CheckpointProcessedEventsThreshold' readerSubscriptionOptions.StopOnEof' readerSubscriptionOptions.StopAfterNEvents); " is 308.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedEventReader,The length of the statement  "		return CreatePausedEventIndexEventReader (eventReaderId' ioDispatcher' publisher' checkpointTag' stopOnEof' stopAfterNEvents' true' _events' _includeStreamDeletedNotification); " is 176.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedEventReader,The length of the statement  "		var eventReader = new TransactionFileEventReader (publisher' eventReaderId' _runAs' new TFPos (checkpointTag.CommitPosition.Value' checkpointTag.PreparePosition.Value)' _timeProvider' deliverEndOfTFPosition: true' stopOnEof: stopOnEof' resolveLinkTos: false); " is 259.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedEventReader,The length of the statement  "		return CreatePausedStreamEventReader (eventReaderId' ioDispatcher' publisher' checkpointTag' streamName' stopOnEof' resolveLinkTos: true' stopAfterNEvents: stopAfterNEvents' produceStreamDeletes: _includeStreamDeletedNotification); " is 231.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedEventReader,The length of the statement  "		return CreatePausedStreamEventReader (eventReaderId' ioDispatcher' publisher' checkpointTag' streamName' stopOnEof' resolveLinkTos: true' stopAfterNEvents: stopAfterNEvents' produceStreamDeletes: _includeStreamDeletedNotification); " is 231.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedEventReader,The length of the statement  "		return CreatePausedMultiStreamEventReader (eventReaderId' ioDispatcher' publisher' checkpointTag' stopOnEof' stopAfterNEvents' true' _streams); " is 143.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedEventReader,The length of the statement  "		return CreatePausedCatalogReader (eventReaderId' publisher' ioDispatcher' checkpointTag' stopOnEof' stopAfterNEvents' true' _catalogStream); " is 140.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreateEventFilter,The length of the statement  "		return new TransactionFileEventFilter (_allEvents' !_includeStreamDeletedNotification' _events' includeLinks: _includeLinks); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePositionTagger,The length of the statement  "		return new PreTaggedPositionTagger (_phase' CheckpointTag.FromByStreamPosition (0' _catalogStream' -1' null' -1' long.MinValue)); " is 129.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedStreamEventReader,The length of the statement  "	var eventReader = new StreamEventReader (publisher' eventReaderId' _runAs' streamName' fromSequenceNumber' _timeProvider' resolveLinkTos' produceStreamDeletes' stopOnEof); " is 171.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedEventIndexEventReader,The length of the statement  "	var nextPositions = eventTypes.ToDictionary (v => "$et-" + v' v => checkpointTag.Streams.TryGetValue (v' out p) ? p + 1 : 0); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedEventIndexEventReader,The length of the statement  "	return new EventByTypeIndexEventReader (publisher' eventReaderId' _runAs' eventTypes.ToArray ()' includeStreamDeletedNotification' checkpointTag.Position' nextPositions' resolveLinkTos' _timeProvider' stopOnEof); " is 212.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedMultiStreamEventReader,The length of the statement  "	return new MultiStreamEventReader (ioDispatcher' publisher' eventReaderId' _runAs' Phase' streams.ToArray ()' nextPositions' resolveLinkTos' _timeProvider' stopOnEof' stopAfterNEvents); " is 185.
Long Statement,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,CreatePausedCatalogReader,The length of the statement  "	return new ByStreamCatalogEventReader (publisher' eventReaderId' _runAs' ioDispatcher' catalogStream' startFromCatalogEventNumber' startFromDataStreamName' startFromDataStreamEventNumber' limitingCommitPosition' resolveLinkTos); " is 228.
Long Statement,EventStore.Projections.Core.Services.Processing,ResultEventEmitter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ResultEventEmitter.cs,CreateResultUpdatedEvents,The length of the statement  "		var result = new EmittedEventEnvelope (projectionResult == null ? new EmittedDataEvent (streamId' Guid.NewGuid ()' "ResultRemoved"' true' null' null' at' null) : new EmittedDataEvent (streamId' Guid.NewGuid ()' "Result"' true' projectionResult' null' at' null)' _resultStreamMetadata); " is 285.
Long Statement,EventStore.Projections.Core.Services.Processing,ResultEventEmitter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ResultEventEmitter.cs,CreateResultUpdatedEvents,The length of the statement  "		var result = new EmittedEventEnvelope (projectionResult == null ? new EmittedDataEvent (streamId' Guid.NewGuid ()' "ResultRemoved"' true' null' null' at' null' linkTo.SetTargetEventNumber) : new EmittedDataEvent (streamId' Guid.NewGuid ()' "Result"' true' projectionResult' null' at' null' linkTo.SetTargetEventNumber)' _resultStreamMetadata); " is 343.
Long Statement,EventStore.Projections.Core.Services.Processing,SpoolStreamProcessingWorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SpoolStreamProcessingWorkItem.cs,ProcessEvent,The length of the statement  "			_spoolRequestId = _spoolProcessingResponseDispatcher.PublishSubscribe (_publisher' new ReaderSubscriptionManagement.SpoolStreamReading (channel.WorkerId' channel.SubscriptionId' streamId_' resolvedEvent.PositionSequenceNumber' _limitingCommitPosition)' this); " is 259.
Long Statement,EventStore.Projections.Core.Services.Processing,SpoolStreamProcessingWorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SpoolStreamProcessingWorkItem.cs,WriteOutput,The length of the statement  "		_resultWriter.WriteEofResult (_subscriptionId' _resultMessage.Partition' _resultMessage.Result' _resultMessage.Position' Guid.Empty' null); " is 139.
Long Statement,EventStore.Projections.Core.Services.Processing,StagedProcessingQueue,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StagedProcessingQueue.cs,ProcessEntry,The length of the statement  "	entry.Task.Process (entry.ReadForStage' (readyForStage' newCorrelationId) => CompleteTaskProcessing (entry' readyForStage' newCorrelationId)); " is 142.
Long Statement,EventStore.Projections.Core.Services.Processing,StagedProcessingQueue,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StagedProcessingQueue.cs,GetEntryToProcess,The length of the statement  "			if (_byUnorderedStageFirst [stageIndex] != null && _byUnorderedStageFirst [stageIndex].Entry.PreviousByCorrelation == null) { " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,StagedProcessingQueue,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StagedProcessingQueue.cs,GetEntryToProcess,The length of the statement  "			if (taskEntry != null && taskEntry.ReadForStage == stageIndex && !taskEntry.Busy && !taskEntry.Completed && taskEntry.PreviousByCorrelation == null) " is 148.
Long Statement,EventStore.Projections.Core.Services.Processing,StagedProcessingQueue,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StagedProcessingQueue.cs,SetEntryCorrelation,The length of the statement  "					throw new InvalidOperationException ("Cannot inject task correlation id before another task with the same correlation id"); " is 123.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,Handle,The length of the statement  "		throw new InvalidOperationException (string.Format ("Invalid stream name: {0}.  Expected: {1}"' message.EventStreamId' _streamName)); " is 133.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,Handle,The length of the statement  "				DeliverEvent (message.Events [index]' 100.0f * (link ?? @event).EventNumber / message.LastEventNumber' ref oldFromSequenceNumber); " is 130.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,Handle,The length of the statement  "		throw new NotSupportedException (string.Format ("ReadEvents result code was not recognized. Code: {0}"' message.Result)); " is 121.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,RequestEvents,The length of the statement  "		_publisher.Publish (new AwakeServiceMessage.SubscribeAwake (new PublishEnvelope (_publisher' crossThread: true)' Guid.NewGuid ()' null' new TFPos (_lastPosition' _lastPosition)' CreateReadTimeoutMessage (_pendingRequestCorrelationId' _streamName))); " is 249.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,RequestEvents,The length of the statement  "		_publisher.Publish (new AwakeServiceMessage.SubscribeAwake (new PublishEnvelope (_publisher' crossThread: true)' Guid.NewGuid ()' null' new TFPos (_lastPosition' _lastPosition)' readEventsForward)); " is 198.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,CreateReadTimeoutMessage,The length of the statement  "	return TimerMessage.Schedule.Create (TimeSpan.FromMilliseconds (ESConsts.ReadRequestTimeout)' new SendToThisEnvelope (this)' new ProjectionManagementMessage.Internal.ReadTimeout (correlationId' streamId)); " is 205.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,CreateReadEventsMessage,The length of the statement  "	return new ClientMessage.ReadStreamEventsForward (readCorrelationId' readCorrelationId' new SendToThisEnvelope (this)' _streamName' _fromSequenceNumber' _maxReadCount' _resolveLinkTos' false' null' ReadAs); " is 206.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,DeliverSafeJoinPosition,The length of the statement  "	_publisher.Publish (new ReaderSubscriptionMessage.CommittedEventDistributed (EventReaderCorrelationId' null' safeJoinPosition' 100.0f' source: this.GetType ())); " is 161.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,DeliverEvent,The length of the statement  "		throw new InvalidOperationException (string.Format ("Event number {0} was expected in the stream {1}' but event number {2} was received"' sequenceNumber' _streamName' positionEvent.EventNumber)); " is 195.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,DeliverEvent,The length of the statement  "	bool isDeletedStreamEvent = StreamDeletedHelper.IsStreamDeletedEventOrLinkToStreamDeletedEvent (resolvedEvent' out deletedPartitionStreamId); " is 141.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,DeliverEvent,The length of the statement  "			new ReaderSubscriptionMessage.EventReaderPartitionDeleted (EventReaderCorrelationId' deletedPartition' source: this.GetType ()' lastEventNumber: -1' deleteEventOrLinkTargetPosition: null' deleteLinkOrEventPosition: resolvedEvent.EventOrLinkTargetPosition' positionStreamId: resolvedEvent.PositionStreamId' positionEventNumber: resolvedEvent.PositionSequenceNumber)); " is 366.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamEventReader.cs,DeliverEvent,The length of the statement  "		new ReaderSubscriptionMessage.CommittedEventDistributed (EventReaderCorrelationId' resolvedEvent' _stopOnEof ? (long?)null : positionEvent.LogPosition' progress' source: this.GetType ())); " is 188.
Long Statement,EventStore.Projections.Core.Services.Processing,EventFilter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventFilter.cs,Passes,The length of the statement  "	return (PassesSource (resolvedFromLinkTo' eventStreamId' eventName)) && ((_allEvents || _events != null && _events.Contains (eventName)) && (!isStreamDeletedEvent || _includeDeletedStreamEvents)); " is 196.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamPositionTagger.cs,IsMessageAfterCheckpointTag,The length of the statement  "	return committedEvent.Data.PositionStreamId == _stream && committedEvent.Data.PositionSequenceNumber > previous.Streams [_stream]; " is 130.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamPositionTagger.cs,MakeCheckpointTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected: {0} Was: {1}"' Phase' previous.Phase)); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamPositionTagger.cs,MakeCheckpointTag,The length of the statement  "		throw new InvalidOperationException (string.Format ("Invalid stream '{0}'.  Expected stream is '{1}'"' committedEvent.Data.EventStreamId' _stream)); " is 148.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamPositionTagger.cs,MakeCheckpointTag,The length of the statement  "	return CheckpointTag.FromStreamPosition (previous.Phase' committedEvent.Data.PositionStreamId' committedEvent.Data.PositionSequenceNumber); " is 139.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamPositionTagger.cs,MakeCheckpointTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected: {0} Was: {1}"' Phase' previous.Phase)); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamPositionTagger.cs,MakeCheckpointTag,The length of the statement  "		throw new InvalidOperationException (string.Format ("Invalid stream '{0}'.  Expected stream is '{1}'"' partitionDeleted.Partition' _stream)); " is 141.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamPositionTagger.cs,MakeCheckpointTag,The length of the statement  "	return CheckpointTag.FromStreamPosition (previous.Phase' partitionDeleted.PositionStreamId' partitionDeleted.PositionEventNumber.Value); " is 136.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamPositionTagger.cs,AdjustTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected less or equal to: {0} Was: {1}"' Phase' tag.Phase)' "tag"); " is 144.
Long Statement,EventStore.Projections.Core.Services.Processing,StreamPositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StreamPositionTagger.cs,AdjustTag,The length of the statement  "		throw new NotSupportedException (string.Format ("The given checkpoint is invalid. Possible causes might include having written an event to the projection's managed stream. The bad checkpoint: {0}"' tag.ToString ())); " is 216.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,UpdateStatistics,The length of the statement  "	_publisher.Publish (new CoreProjectionStatusMessage.StatisticsReport (_projectionCorrelationId' info' sequentialNumber)); " is 121.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,Stop,The length of the statement  "	EnsureState (State.LoadStateRequested | State.StateLoaded | State.Subscribed | State.Running | State.PhaseCompleted | State.CompletingPhase); " is 141.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,GetStatistics,The length of the statement  "	if (float.IsNaN (info.Progress) || float.IsNegativeInfinity (info.Progress) || float.IsPositiveInfinity (info.Progress)) { " is 122.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,Handle,The length of the statement  "		_publisher.Publish (new CoreProjectionStatusMessage.StateReport (message.CorrelationId' _projectionCorrelationId' message.Partition' state: null' position: null)); " is 163.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,Handle,The length of the statement  "	EnsureState (State.Running | State.Stopping | State.Stopped | State.FaultedStopping | State.Faulted | State.CompletingPhase | State.PhaseCompleted); " is 148.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,Handle,The length of the statement  "		_publisher.Publish (new CoreProjectionStatusMessage.ResultReport (message.CorrelationId' _projectionCorrelationId' message.Partition' result: null' position: null)); " is 165.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,Handle,The length of the statement  "	EnsureState (State.Running | State.Stopping | State.Stopped | State.FaultedStopping | State.Faulted | State.CompletingPhase | State.PhaseCompleted); " is 148.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,Handle,The length of the statement  "		//TODO: write test to ensure projection state is correctly loaded from a checkpoint and posted back when enough empty records processed " is 135.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,Handle,The length of the statement  "			_partitionStateCache.CacheAndLockPartitionState (""' PartitionState.Deserialize (message.CheckpointData' checkpointTag)' null); " is 127.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,Handle,The length of the statement  "	_logger.Info ("Projection '{0}'({1}) restart has been requested due to: '{2}'"' _name' _projectionCorrelationId' message.Reason); " is 129.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,Handle,The length of the statement  "		SetFaulted (string.Format ("A concurrency violation was detected' but the projection is not running. Current state is: {0}.  The reason for the restart is: '{1}' "' _state' message.Reason)); " is 190.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,StopSlaveProjections,The length of the statement  "				_publisher.Publish (new ProjectionManagementMessage.Command.Delete (new NoopEnvelope ()' channel.ManagedProjectionName' ProjectionManagementMessage.RunAs.System' true' true' false)); " is 182.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,GoToState,The length of the statement  "	var wasStarted = _state == State.Subscribed || _state == State.Running || _state == State.Stopping || _state == State.FaultedStopping || _state == State.CompletingPhase; " is 169.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,EnterStartSlaveProjectionsRequested,The length of the statement  "	_masterProjectionResponseReader = new MasterCoreProjectionResponseReader (_publisher' _ioDispatcher' _workerId' _projectionCorrelationId); " is 138.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,EnterStartSlaveProjectionsRequested,The length of the statement  "	_publisher.Publish (new ProjectionManagementMessage.Command.StartSlaveProjections (new PublishEnvelope (_inputQueue)' new ProjectionManagementMessage.RunAs (_runAs)' _name' _projectionProcessingStrategy.GetSlaveProjections ()' _workerId' _projectionCorrelationId)); " is 265.
Long Statement,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,Tick,The length of the statement  "	EnsureState (State.Running | State.Stopping | State.Stopped | State.FaultedStopping | State.Faulted | State.CompletingPhase | State.PhaseCompleted); " is 148.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCheckpoint,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCheckpoint.cs,ValidateCheckpointPosition,The length of the statement  "		throw new InvalidOperationException (string.Format ("Checkpoint position before or equal to the checkpoint start position. Requested: '{0}' Started: '{1}'"' position' _from)); " is 175.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCheckpoint,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCheckpoint.cs,ValidateCheckpointPosition,The length of the statement  "		throw new InvalidOperationException (string.Format ("Checkpoint position before last handled position. Requested: '{0}' Last: '{1}'"' position' _last)); " is 152.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCheckpoint,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCheckpoint.cs,EmitEventsToStream,The length of the statement  "		var writerConfiguration = new EmittedStream.WriterConfiguration (streamMetadata' _runAs' maxWriteBatchLength: _maxWriteBatchLength' logger: _logger); " is 149.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCheckpoint,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCheckpoint.cs,EmitEventsToStream,The length of the statement  "		stream = new EmittedStream (streamId' writerConfiguration' _projectionVersion' _positionTagger' _from' _ioDispatcher' this); " is 124.
Long Statement,EventStore.Projections.Core.Services.Processing,TransactionFileEventFilter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFileEventFilter.cs,PassesSource,The length of the statement  "	return (_includeLinks || !resolvedFromLinkTo) && (!SystemStreams.IsSystemStream (positionStreamId) || SystemStreams.IsMetastream (positionStreamId) && !SystemStreams.IsSystemStream (SystemStreams.OriginalStreamOf (positionStreamId))); " is 234.
Long Statement,EventStore.Projections.Core.Services.Processing,TransactionFilePositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFilePositionTagger.cs,AdjustTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected less or equal to: {0} Was: {1}"' Phase' tag.Phase)' "tag"); " is 144.
Long Statement,EventStore.Projections.Core.Services.Processing,TransactionFilePositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFilePositionTagger.cs,AdjustTag,The length of the statement  "		throw new NotSupportedException (string.Format ("The given checkpoint is invalid. Possible causes might include having written an event to the projection's managed stream. The bad checkpoint: {0}"' tag.ToString ())); " is 216.
Long Statement,EventStore.Projections.Core.Services.Processing,TransactionFilePositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFilePositionTagger.cs,MakeCheckpointTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected: {0} Was: {1}"' Phase' previous.Phase)); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,TransactionFilePositionTagger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFilePositionTagger.cs,MakeCheckpointTag,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid checkpoint tag phase.  Expected: {0} Was: {1}"' Phase' previous.Phase)); " is 125.
Long Statement,EventStore.Projections.Core.Services.Processing,TransactionFileEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFileEventReader.cs,RequestEvents,The length of the statement  "		_publisher.Publish (new AwakeServiceMessage.SubscribeAwake (new PublishEnvelope (_publisher' crossThread: true)' Guid.NewGuid ()' null' new TFPos (_lastPosition' _lastPosition)' CreateReadTimeoutMessage (_pendingRequestCorrelationId' "$all"))); " is 244.
Long Statement,EventStore.Projections.Core.Services.Processing,TransactionFileEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFileEventReader.cs,RequestEvents,The length of the statement  "		_publisher.Publish (new AwakeServiceMessage.SubscribeAwake (new PublishEnvelope (_publisher' crossThread: true)' Guid.NewGuid ()' null' new TFPos (_lastPosition' _lastPosition)' readEventsForward)); " is 198.
Long Statement,EventStore.Projections.Core.Services.Processing,TransactionFileEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFileEventReader.cs,CreateReadTimeoutMessage,The length of the statement  "	return TimerMessage.Schedule.Create (TimeSpan.FromMilliseconds (ESConsts.ReadRequestTimeout)' new SendToThisEnvelope (this)' new ProjectionManagementMessage.Internal.ReadTimeout (correlationId' streamId)); " is 205.
Long Statement,EventStore.Projections.Core.Services.Processing,TransactionFileEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFileEventReader.cs,CreateReadEventsMessage,The length of the statement  "	return new ClientMessage.ReadAllEventsForward (correlationId' correlationId' new SendToThisEnvelope (this)' _from.CommitPosition' _from.PreparePosition == -1 ? _from.CommitPosition : _from.PreparePosition' _maxReadCount' _resolveLinkTos' false' null' ReadAs); " is 259.
Long Statement,EventStore.Projections.Core.Services.Processing,TransactionFileEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFileEventReader.cs,DeliverLastCommitPosition,The length of the statement  "	_publisher.Publish (new ReaderSubscriptionMessage.CommittedEventDistributed (EventReaderCorrelationId' null' lastPosition.PreparePosition' 100.0f' source: this.GetType ())); " is 173.
Long Statement,EventStore.Projections.Core.Services.Processing,TransactionFileEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFileEventReader.cs,DeliverEvent,The length of the statement  "		throw new Exception (string.Format ("ReadFromTF returned events in incorrect order.  Last known position is: {0}.  Received position is: {1}"' currentFrom' receivedPosition)); " is 175.
Long Statement,EventStore.Projections.Core.Services.Processing,TransactionFileEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFileEventReader.cs,DeliverEvent,The length of the statement  "	bool isDeletedStreamEvent = StreamDeletedHelper.IsStreamDeletedEventOrLinkToStreamDeletedEvent (resolvedEvent' out deletedPartitionStreamId); " is 141.
Long Statement,EventStore.Projections.Core.Services.Processing,TransactionFileEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFileEventReader.cs,DeliverEvent,The length of the statement  "	_publisher.Publish (new ReaderSubscriptionMessage.CommittedEventDistributed (EventReaderCorrelationId' resolvedEvent' _stopOnEof ? (long?)null : receivedPosition.PreparePosition' 100.0f * positionEvent.LogPosition / lastCommitPosition' source: this.GetType ())); " is 262.
Long Statement,EventStore.Projections.Core.Services.Processing,TransactionFileEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\TransactionFileEventReader.cs,DeliverEvent,The length of the statement  "		_publisher.Publish (new ReaderSubscriptionMessage.EventReaderPartitionDeleted (EventReaderCorrelationId' deletedPartitionStreamId' source: this.GetType ()' lastEventNumber: -1' deleteEventOrLinkTargetPosition: resolvedEvent.EventOrLinkTargetPosition' deleteLinkOrEventPosition: resolvedEvent.LinkOrEventPosition' positionStreamId: positionEvent.EventStreamId' positionEventNumber: positionEvent.EventNumber)); " is 409.
Long Statement,EventStore.Projections.Core.Services.Processing,WorkLoadEstimationStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WorkLoadEstimationStrategy.cs,MayScheduleOn,The length of the statement  "	return leastLoadedWorkerState.UnmeasuredTasksScheduled < _maxUnmeasuredTasksPerWorker && leastLoadedWorkerState.ScheduledSize < _maxScheduledSizePerWorker; " is 155.
Long Statement,EventStore.Projections.Core.Services.Processing,WriteQueryResultProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WriteQueryResultProjectionProcessingPhase.cs,WriteResults,The length of the statement  "	select new EmittedEventEnvelope (new EmittedDataEvent (_resultStream' Guid.NewGuid ()' "Result"' true' partitionState.Result' null' phaseCheckpointTag' null)' streamMetadata); " is 175.
Long Statement,EventStore.Projections.Core.Services.Processing,WriteQueryResultProjectionProcessingPhaseBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WriteQueryResultProjectionProcessingPhaseBase.cs,Handle,The length of the statement  "	_publisher.Publish (new CoreProjectionStatusMessage.StateReport (message.CorrelationId' message.CorrelationId' message.Partition' state: stateString' position: null)); " is 167.
Long Statement,EventStore.Projections.Core.Services.Processing,WriteQueryResultProjectionProcessingPhaseBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WriteQueryResultProjectionProcessingPhaseBase.cs,Handle,The length of the statement  "	_publisher.Publish (new CoreProjectionStatusMessage.ResultReport (message.CorrelationId' message.CorrelationId' message.Partition' result: resultString' position: null)); " is 170.
Long Statement,EventStore.Projections.Core.Services.Processing,WriteQueryResultProjectionProcessingPhaseBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WriteQueryResultProjectionProcessingPhaseBase.cs,WriteEofEvent,The length of the statement  "	yield return new EmittedEventEnvelope (new EmittedDataEvent (_resultStream' Guid.NewGuid ()' "$Eof"' true' null' null' phaseCheckpointTag' null)' streamMetadata); " is 162.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreService,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreService.cs,Handle,The length of the statement  "		var projectionProcessingStrategy = _processingStrategySelector.CreateProjectionProcessingStrategy (name' projectionVersion' namesBuilder' sourceDefinition' projectionConfig' stateHandler' message.HandlerType' message.Query); " is 224.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreService,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreService.cs,Handle,The length of the statement  "		var projectionProcessingStrategy = _processingStrategySelector.CreateProjectionProcessingStrategy (name' projectionVersion' namesBuilder' sourceDefinition' projectionConfig' null' message.HandlerType' message.Query); " is 216.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreService,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreService.cs,Handle,The length of the statement  "		var projectionProcessingStrategy = _processingStrategySelector.CreateSlaveProjectionProcessingStrategy (name' projectionVersion' sourceDefinition' projectionConfig' stateHandler' message.MasterWorkerId' _publisher' message.MasterCoreProjectionId' this); " is 253.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreService,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreService.cs,CreateCoreProjection,The length of the statement  "	var projection = processingStrategy.Create (projectionCorrelationId' _inputQueue' _workerId' runAs' _publisher' _ioDispatcher' _subscriptionDispatcher' _timeProvider); " is 167.
Long Statement,EventStore.Projections.Core.Services.Processing,ProjectionCoreService,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreService.cs,CreateStateHandler,The length of the statement  "	var stateHandler = new ProjectionStateHandlerFactory ().Create (handlerType' query' logger: logger.Trace' cancelCallbackFactory: singletonTimeoutScheduler == null ? (Action<int' Action>)null : singletonTimeoutScheduler.Schedule); " is 229.
Long Statement,EventStore.Projections.Core.Services.Processing,RequestResponseQueueForwarder,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\RequestResponseQueueForwarder.cs,Handle,The length of the statement  "	_externalRequestQueue.Publish (new ClientMessage.ReadEvent (msg.InternalCorrId' msg.CorrelationId' new PublishToWrapEnvelop (_inputQueue' msg.Envelope)' msg.EventStreamId' msg.EventNumber' msg.ResolveLinkTos' msg.RequireMaster' msg.User)); " is 239.
Long Statement,EventStore.Projections.Core.Services.Processing,RequestResponseQueueForwarder,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\RequestResponseQueueForwarder.cs,Handle,The length of the statement  "	_externalRequestQueue.Publish (new ClientMessage.WriteEvents (msg.InternalCorrId' msg.CorrelationId' new PublishToWrapEnvelop (_inputQueue' msg.Envelope)' false' msg.EventStreamId' msg.ExpectedVersion' msg.Events' msg.User)); " is 225.
Long Statement,EventStore.Projections.Core.Services.Processing,RequestResponseQueueForwarder,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\RequestResponseQueueForwarder.cs,Handle,The length of the statement  "	_externalRequestQueue.Publish (new ClientMessage.DeleteStream (msg.InternalCorrId' msg.CorrelationId' new PublishToWrapEnvelop (_inputQueue' msg.Envelope)' false' msg.EventStreamId' msg.ExpectedVersion' msg.HardDelete' msg.User)); " is 230.
Long Statement,EventStore.Projections.Core.Services.Processing,RequestResponseQueueForwarder,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\RequestResponseQueueForwarder.cs,Handle,The length of the statement  "	_externalRequestQueue.Publish (new ClientMessage.ReadStreamEventsBackward (msg.InternalCorrId' msg.CorrelationId' new PublishToWrapEnvelop (_inputQueue' msg.Envelope)' msg.EventStreamId' msg.FromEventNumber' msg.MaxCount' msg.ResolveLinkTos' msg.RequireMaster' msg.ValidationStreamVersion' msg.User)); " is 301.
Long Statement,EventStore.Projections.Core.Services.Processing,RequestResponseQueueForwarder,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\RequestResponseQueueForwarder.cs,Handle,The length of the statement  "	_externalRequestQueue.Publish (new ClientMessage.ReadStreamEventsForward (msg.InternalCorrId' msg.CorrelationId' new PublishToWrapEnvelop (_inputQueue' msg.Envelope)' msg.EventStreamId' msg.FromEventNumber' msg.MaxCount' msg.ResolveLinkTos' msg.RequireMaster' msg.ValidationStreamVersion' msg.User)); " is 300.
Long Statement,EventStore.Projections.Core.Services.Processing,RequestResponseQueueForwarder,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\RequestResponseQueueForwarder.cs,Handle,The length of the statement  "	_externalRequestQueue.Publish (new ClientMessage.ReadAllEventsForward (msg.InternalCorrId' msg.CorrelationId' new PublishToWrapEnvelop (_inputQueue' msg.Envelope)' msg.CommitPosition' msg.PreparePosition' msg.MaxCount' msg.ResolveLinkTos' msg.RequireMaster' msg.ValidationTfLastCommitPosition' msg.User)); " is 305.
Long Statement,EventStore.Projections.Core.Services.v8,V8ProjectionStateHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\v8\V8ProjectionStateHandler.cs,QueryOnEmit,The length of the statement  "	_emittedEvents.Add (new EmittedEventEnvelope (new EmittedDataEvent (emittedEvent.streamId' Guid.NewGuid ()' emittedEvent.eventName' emittedEvent.isJson' emittedEvent.body' emittedEvent.GetExtraMetadata ()' _eventPosition' expectedTag: null))); " is 243.
Long Statement,EventStore.Projections.Core.Standard,CategorizeEventsByStreamPath,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\CategorizeEventsByStreamPath.cs,ProcessEvent,The length of the statement  "	var isStreamDeletedEvent = StreamDeletedHelper.IsStreamDeletedEvent (data.PositionStreamId' data.EventType' data.Data' out positionStreamId); " is 141.
Long Statement,EventStore.Projections.Core.Standard,CategorizeEventsByStreamPath,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\CategorizeEventsByStreamPath.cs,ProcessEvent,The length of the statement  "		new EmittedEventEnvelope (new EmittedLinkToWithRecategorization (_categoryStreamPrefix + category' Guid.NewGuid ()' linkTarget' eventPosition' expectedTag: null' originalStreamId: positionStreamId' streamDeletedAt: isStreamDeletedEvent ? -1 : (int?)null)) " is 255.
Long Statement,EventStore.Projections.Core.Standard,CategorizeStreamByPath,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\CategorizeStreamByPath.cs,ProcessEvent,The length of the statement  "		new EmittedEventEnvelope (new EmittedDataEvent ("$category" + "-" + category' Guid.NewGuid ()' SystemEventTypes.StreamReference' false' data.PositionStreamId' null' eventPosition' expectedTag: null)) " is 199.
Long Statement,EventStore.Projections.Core.Standard,IndexEventsByEventType,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\IndexEventsByEventType.cs,ProcessEvent,The length of the statement  "	var isStreamDeletedEvent = StreamDeletedHelper.IsStreamDeletedEvent (data.PositionStreamId' data.EventType' data.Data' out positionStreamId); " is 141.
Long Statement,EventStore.Projections.Core.Standard,IndexEventsByEventType,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\IndexEventsByEventType.cs,ProcessEvent,The length of the statement  "		new EmittedEventEnvelope (new EmittedDataEvent (_indexStreamPrefix + indexedEventType' Guid.NewGuid ()' "$>"' false' data.EventSequenceNumber + "@" + positionStreamId' isStreamDeletedEvent ? new ExtraMetaData (new Dictionary<string' JRaw> { " is 240.
Long Statement,EventStore.Projections.Core.Standard,IndexEventsByEventType,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\IndexEventsByEventType.cs,ProcessNewCheckpoint,The length of the statement  "		new EmittedEventEnvelope (new EmittedDataEvent (_indexCheckpointStream' Guid.NewGuid ()' ProjectionEventTypes.PartitionCheckpoint' true' checkpointPosition.ToJsonString ()' null' checkpointPosition' expectedTag: null)) " is 218.
Long Statement,EventStore.Projections.Core.Standard,IndexStreams,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\IndexStreams.cs,ProcessEvent,The length of the statement  "		new EmittedEventEnvelope (new EmittedDataEvent (SystemStreams.StreamsStream' Guid.NewGuid ()' SystemEventTypes.LinkTo' false' data.PositionSequenceNumber + "@" + data.PositionStreamId' null' eventPosition' expectedTag: null)) " is 225.
Long Statement,EventStore.Projections.Core.Standard,StreamCategoryExtractor,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\StreamCategoryExtractor.cs,GetExtractor,The length of the statement  "		throw new InvalidOperationException ("Cannot initialize categorization projection handler.  " + "One symbol separator or configuration must be supplied in the source.  " + ConfigurationFormatIs); " is 195.
Long Statement,EventStore.Projections.Core.Standard,StreamCategoryExtractor,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\StreamCategoryExtractor.cs,GetExtractor,The length of the statement  "		throw new InvalidOperationException ("Cannot initialize categorization projection handler.  " + "Invalid configuration  " + ConfigurationFormatIs); " is 147.
Long Statement,EventStore.Projections.Core.Standard,StreamCategoryExtractor,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\StreamCategoryExtractor.cs,GetExtractor,The length of the statement  "		throw new InvalidOperationException ("Cannot initialize categorization projection handler.  " + "Invalid direction specifier.  Expected 'first' or 'last'. " + ConfigurationFormatIs); " is 182.
Long Statement,EventStore.Projections.Core.Standard,StreamCategoryExtractor,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\StreamCategoryExtractor.cs,GetExtractor,The length of the statement  "		throw new InvalidOperationException ("Cannot initialize categorization projection handler.  " + "Single separator expected. " + ConfigurationFormatIs); " is 151.
Long Statement,EventStore.Projections.Core.Standard,StreamDeletedHelper,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\StreamDeletedHelper.cs,IsStreamDeletedEventOrLinkToStreamDeletedEvent,The length of the statement  "		isDeletedStreamEvent = StreamDeletedHelper.IsStreamDeletedEvent (resolvedEvent.EventStreamId' resolvedEvent.EventType' resolvedEvent.Data' out deletedPartitionStreamId); " is 169.
Long Statement,EventStore.Projections.Core.Standard,StreamDeletedHelper,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\StreamDeletedHelper.cs,IsStreamDeletedEvent,The length of the statement  "			//NOTE: we do not ignore JSON deserialization exceptions here assuming that metadata stream events must be deserializable " is 121.
Long Statement,EventStore.Projections.Core.Standard,StreamDeletedHelper,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\StreamDeletedHelper.cs,IsStreamDeletedEvent,The length of the statement  "			//NOTE: we do not ignore JSON deserialization exceptions here assuming that metadata stream events must be deserializable " is 121.
Long Statement,EventStore.Projections.Core.v8,CompiledScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\CompiledScript.cs,CheckResult,The length of the statement  "	_reportErrorCallback = // NOTE: this local delegate must go to a field to keep references while ReportErrors is being executed " is 126.
Long Statement,EventStore.Projections.Core.v8,CompiledScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\CompiledScript.cs,CheckResult,The length of the statement  "			throw new Js1Exception (errorCode.Value' "Failed to compile script. Script execution terminated.  Timeout expired. (3)"); " is 121.
Long Statement,EventStore.Projections.Core.v8,PreludeScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\PreludeScript.cs,CompileScript,The length of the statement  "				prelude = Js1.CompilePrelude (script' fileName' _loadModuleDelegate' _enterCancellableRegion' _exitCancellableRegion' _logDelegate); " is 132.
Long Statement,EventStore.Projections.Core.v8,PreludeScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\PreludeScript.cs,CompileScript,The length of the statement  "		throw new ApplicationException ("The projection subsystem failed to load a libjs1.so/js1.dll/... or one of its dependencies.  The original error message is: " + ex.Message' ex); " is 177.
Long Statement,EventStore.Projections.Core.v8,PreludeScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\PreludeScript.cs,ScheduleTerminateExecution,The length of the statement  "		throw new InvalidOperationException ("ScheduleTerminateExecution cannot be called while previous one has not been canceled"); " is 125.
Long Statement,EventStore.Projections.Core.v8,PreludeScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\PreludeScript.cs,ScheduleTerminateExecution,The length of the statement  "		_cancelCallbackFactory (CompileTimeoutMs' () => AnotherThreadCancel (currentCancelToken' GetHandle ()' terminateRequested.Terminate)); " is 134.
Long Statement,EventStore.Projections.Core.v8,PreludeScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\PreludeScript.cs,ExitCancellableRegion,The length of the statement  "	return Interlocked.CompareExchange (ref _cancelTokenOrStatus' Scheduled' _currentCancelToken) == _currentCancelToken && !_terminateRequested.TerminateRequested; " is 160.
Long Statement,EventStore.Projections.Core.v8,QueryScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\QueryScript.cs,CompileScript,The length of the statement  "	IntPtr query = Js1.CompileQuery (prelude.GetHandle ()' script' fileName' _commandHandlerRegisteredCallback' _reverseCommandHandlerDelegate); " is 140.
Long Statement,EventStore.Projections.Core.v8,QueryScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\QueryScript.cs,CommandHandlerRegisteredCallback,The length of the statement  "		_processEvent = (json' other) => Tuple.Create (ExecuteHandler (handlerHandle' json' other' out newSharedState)' newSharedState); " is 128.
Long Statement,EventStore.Projections.Core.v8,QueryScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\QueryScript.cs,ExecuteHandler,The length of the statement  "	bool success = Js1.ExecuteCommandHandler (_script.GetHandle ()' commandHandlerHandle' json' other' other != null ? other.Length : 0' out resultJsonPtr' out result2JsonPtr' out memoryHandle); " is 190.
Long Statement,EventStore.Projections.Core.v8,QueryScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\QueryScript.cs,ExecuteHandler,The length of the statement  "		throw new ApplicationException ("An exception occurred while executing a reverse command handler. " + _reverseCommandHandlerException.Message' _reverseCommandHandlerException); " is 176.
Complex Conditional,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,Handle,The conditional expression  "Enabled && !(_state == ManagedProjectionState.Completed || _state == ManagedProjectionState.Faulted || _state == ManagedProjectionState.Aborted || _state == ManagedProjectionState.Loaded || _state == ManagedProjectionState.Prepared || _state == ManagedProjectionState.Stopped)"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,WritePersistedStateCompleted,The conditional expression  "message.Result == OperationResult.CommitTimeout || message.Result == OperationResult.ForwardTimeout || message.Result == OperationResult.PrepareTimeout || message.Result == OperationResult.WrongExpectedVersion"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,StartOrLoadStopped,The conditional expression  "_state == ManagedProjectionState.Aborted || _state == ManagedProjectionState.Completed || _state == ManagedProjectionState.Faulted || _state == ManagedProjectionState.Stopped || _state == ManagedProjectionState.Deleting"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,PrepareOrWriteStartOrLoadStopped,The conditional expression  "Prepared && Created && !(Enabled && _enabledToRun)"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,WriteProjectionRegistrationCompleted,The conditional expression  "message.Result == OperationResult.CommitTimeout || message.Result == OperationResult.ForwardTimeout || message.Result == OperationResult.PrepareTimeout || message.Result == OperationResult.WrongExpectedVersion"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Processing,CoreProjectionQueue,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionQueue.cs,ValidateQueueingOrder,The conditional expression  "eventTag < _lastEnqueuedEventTag || (!(allowCurrentPosition || _justInitialized) && eventTag <= _lastEnqueuedEventTag)"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Processing,ProcessingStrategySelector,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProcessingStrategySelector.cs,CreateProjectionProcessingStrategy,The conditional expression  "!sourceDefinition.DisableParallelismOption && projectionConfig.StopOnEof && sourceDefinition.ByStreams && sourceDefinition.DefinesFold && !string.IsNullOrEmpty (sourceDefinition.CatalogStream)"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Processing,ProcessingStrategySelector,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProcessingStrategySelector.cs,CreateProjectionProcessingStrategy,The conditional expression  "!sourceDefinition.DisableParallelismOption && projectionConfig.StopOnEof && sourceDefinition.ByStreams && sourceDefinition.DefinesFold && sourceDefinition.HasCategories ()"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,EmitEvents,The conditional expression  "!(_lastQueuedEventPosition != null && groupCausedBy > _lastQueuedEventPosition) && !(_lastQueuedEventPosition == null && groupCausedBy >= _fromCheckpointPosition)"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,ProcessWrites,The conditional expression  "_started && !_awaitingListEventsCompleted && !_awaitingWriteCompleted && !_awaitingMetadataWriteCompleted && _pendingWrites.Count > 0"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,ProcessRequestedCheckpoint,The conditional expression  "_checkpointRequested && !_awaitingWriteCompleted && !_awaitingMetadataWriteCompleted && _pendingWrites.Count == 0"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,Create,The conditional expression  "!sources.AllStreams && !sources.HasCategories () && !sources.HasStreams () && string.IsNullOrEmpty (sources.CatalogStream)"  is complex.
Complex Conditional,EventStore.Projections.Core.Services.Processing,StagedProcessingQueue,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\StagedProcessingQueue.cs,GetEntryToProcess,The conditional expression  "taskEntry != null && taskEntry.ReadForStage == stageIndex && !taskEntry.Busy && !taskEntry.Completed && taskEntry.PreviousByCorrelation == null"  is complex.
Virtual Method Call from Constructor,EventStore.Projections.Core.Services.Processing,CoreProjectionCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionCheckpointManager.cs,CoreProjectionCheckpointManager,The constructor "CoreProjectionCheckpointManager" calls a virtual method "MakeZeroCheckpointTag".
Virtual Method Call from Constructor,EventStore.Projections.Core.Services.Processing,DefaultCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\DefaultCheckpointManager.cs,DefaultCheckpointManager,The constructor "DefaultCheckpointManager" calls a virtual method "MakeZeroCheckpointTag".
Virtual Method Call from Constructor,EventStore.Projections.Core.Services.Processing,EmittedStream,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EmittedStream.cs,EmittedStream,The constructor "EmittedStream" calls a virtual method "MakeZeroCheckpointTag".
Virtual Method Call from Constructor,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,CoreProjection,The constructor "CoreProjection" calls a virtual method "GetStopOnEof".
Virtual Method Call from Constructor,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,CoreProjection,The constructor "CoreProjection" calls a virtual method "GetRequiresRootPartition".
Virtual Method Call from Constructor,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,CoreProjection,The constructor "CoreProjection" calls a virtual method "GetUseCheckpoints".
Virtual Method Call from Constructor,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,CoreProjection,The constructor "CoreProjection" calls a virtual method "CreateProcessingPhases".
Magic Number,EventStore.Projections.Core,ProjectionWorkerNode,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\ProjectionWorkerNode.cs,ProjectionWorkerNode,The following statement contains a magic number: _eventReaderCoreService = new EventReaderCoreService (publisher' _ioDispatcher' 10' db.Config.WriterCheckpoint' runHeadingReader: runProjections >= ProjectionType.System);  
Magic Number,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjections,The following statement contains a magic number: http.ReplyTextContent ("Moved"' 302' "Found"' "text/plain"' new[] {  	new KeyValuePair<string' string> ("Location"' new Uri (match.BaseUri' "/web/projections.htm").AbsoluteUri)  }' x => Log.DebugException (x' "Reply Text Content Failed."));  
Magic Number,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionsReadEvents,The following statement contains a magic number: http.ReadTextRequestAsync ((o' body) => {  	var bodyParsed = body.ParseJson<ReadEventsBody> ();  	var fromPosition = CheckpointTag.FromJson (new JTokenReader (bodyParsed.Position)' new ProjectionVersion (0' 0' 0));  	Publish (new FeedReaderMessage.ReadPage (Guid.NewGuid ()' envelope' http.User' bodyParsed.Query' fromPosition.Tag' bodyParsed.MaxEvents ?? 10));  }' x => Log.DebugException (x' "Read Request Body Failed."));  
Magic Number,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OnProjectionsReadEvents,The following statement contains a magic number: Publish (new FeedReaderMessage.ReadPage (Guid.NewGuid ()' envelope' http.User' bodyParsed.Query' fromPosition.Tag' bodyParsed.MaxEvents ?? 10));  
Magic Number,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,ProjectionsPost,The following statement contains a magic number: return new ResponseConfiguration (201' "Created"' codec.ContentType' codec.Encoding' new KeyValuePair<string' string> ("Location"' url));  
Magic Number,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OkResponseConfigurator,The following statement contains a magic number: return new ResponseConfiguration (200' "OK"' codec.ContentType' Helper.UTF8NoBom);  
Magic Number,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,NotFoundConfigurator,The following statement contains a magic number: return new ResponseConfiguration (404' "Not Found"' "text/plain"' Helper.UTF8NoBom);  
Magic Number,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,NotAuthorizedConfigurator,The following statement contains a magic number: return new ResponseConfiguration (401' "Not Authorized"' "text/plain"' Encoding.UTF8);  
Magic Number,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,OperationFailedConfigurator,The following statement contains a magic number: return new ResponseConfiguration (500' "Failed"' "text/plain"' Helper.UTF8NoBom);  
Magic Number,EventStore.Projections.Core.Services.Http,ProjectionsController,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Http\ProjectionsController.cs,ConflictConfigurator,The following statement contains a magic number: return new ResponseConfiguration (409' "Conflict"' "text/plain"' Helper.UTF8NoBom);  
Magic Number,EventStore.Projections.Core.Services,ProjectionConfig,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionConfig.cs,GetTest,The following statement contains a magic number: return new ProjectionConfig (null' 1000' 1000 * 1000' 100' 500' true' true' false' false' false' true);  
Magic Number,EventStore.Projections.Core.Services,ProjectionConfig,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionConfig.cs,GetTest,The following statement contains a magic number: return new ProjectionConfig (null' 1000' 1000 * 1000' 100' 500' true' true' false' false' false' true);  
Magic Number,EventStore.Projections.Core.Services,ProjectionConfig,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionConfig.cs,GetTest,The following statement contains a magic number: return new ProjectionConfig (null' 1000' 1000 * 1000' 100' 500' true' true' false' false' false' true);  
Magic Number,EventStore.Projections.Core.Services,ProjectionConfig,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionConfig.cs,GetTest,The following statement contains a magic number: return new ProjectionConfig (null' 1000' 1000 * 1000' 100' 500' true' true' false' false' false' true);  
Magic Number,EventStore.Projections.Core.Services,ProjectionConfig,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionConfig.cs,GetTest,The following statement contains a magic number: return new ProjectionConfig (null' 1000' 1000 * 1000' 100' 500' true' true' false' false' false' true);  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (Status != null ? Status.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)MasterStatus;  	hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	hashCode = (hashCode * 397) ^ (int)Mode;  	hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  	hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  	hashCode = (hashCode * 397) ^ BufferedEvents;  	hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  	hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  	hashCode = (hashCode * 397) ^ PartitionsCached;  	hashCode = (hashCode * 397) ^ ReadsInProgress;  	hashCode = (hashCode * 397) ^ WritesInProgress;  	hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Enabled.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (int)MasterStatus;  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (StateReason != null ? StateReason.GetHashCode () : 0);  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode () : 0);  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ProjectionId.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Version.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (int)Mode;  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Position != null ? Position.GetHashCode () : 0);  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Progress.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (LastCheckpoint != null ? LastCheckpoint.GetHashCode () : 0);  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ EventsProcessedAfterRestart;  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ BufferedEvents;  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (CheckpointStatus != null ? CheckpointStatus.GetHashCode () : 0);  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ WritePendingEventsBeforeCheckpoint;  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ WritePendingEventsAfterCheckpoint;  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ PartitionsCached;  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ReadsInProgress;  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ WritesInProgress;  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (EffectiveName != null ? EffectiveName.GetHashCode () : 0);  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  
Magic Number,EventStore.Projections.Core.Services,ProjectionStatistics,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\ProjectionStatistics.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ CoreProcessingTime.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services.Management,MasterCoreProjectionResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\MasterCoreProjectionResponseReader.cs,StartReaderSteps,The following statement contains a magic number: while (!_stopped) {  	var eof = false;  	var subscribeFrom = default(TFPos);  	do {  		yield return _ioDispatcher.BeginReadForward (_cancellationScope' _streamId' @from' 10' false' SystemAccount.Principal' completed => {  			if (completed.Result == ReadStreamResult.Success || completed.Result == ReadStreamResult.NoStream) {  				@from = completed.NextEventNumber == -1 ? 0 : completed.NextEventNumber;  				eof = completed.IsEndOfStream;  				// subscribeFrom is only used if eof  				subscribeFrom = new TFPos (completed.TfLastCommitPosition' completed.TfLastCommitPosition);  				if (completed.Result == ReadStreamResult.Success) {  					foreach (var e in completed.Events)  						PublishCommand (e);  				}  			}  		});  	} while (!eof);  	_lastAwakeCorrelationId = Guid.NewGuid ();  	yield return _ioDispatcher.BeginSubscribeAwake (_cancellationScope' _streamId' subscribeFrom' message => {  	}' _lastAwakeCorrelationId);  }  
Magic Number,EventStore.Projections.Core.Services.Management,MasterCoreProjectionResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\MasterCoreProjectionResponseReader.cs,StartReaderSteps,The following statement contains a magic number: do {  	yield return _ioDispatcher.BeginReadForward (_cancellationScope' _streamId' @from' 10' false' SystemAccount.Principal' completed => {  		if (completed.Result == ReadStreamResult.Success || completed.Result == ReadStreamResult.NoStream) {  			@from = completed.NextEventNumber == -1 ? 0 : completed.NextEventNumber;  			eof = completed.IsEndOfStream;  			// subscribeFrom is only used if eof  			subscribeFrom = new TFPos (completed.TfLastCommitPosition' completed.TfLastCommitPosition);  			if (completed.Result == ReadStreamResult.Success) {  				foreach (var e in completed.Events)  					PublishCommand (e);  			}  		}  	});  } while (!eof);  
Magic Number,EventStore.Projections.Core.Services.Management,MasterCoreProjectionResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\MasterCoreProjectionResponseReader.cs,StartReaderSteps,The following statement contains a magic number: yield return _ioDispatcher.BeginReadForward (_cancellationScope' _streamId' @from' 10' false' SystemAccount.Principal' completed => {  	if (completed.Result == ReadStreamResult.Success || completed.Result == ReadStreamResult.NoStream) {  		@from = completed.NextEventNumber == -1 ? 0 : completed.NextEventNumber;  		eof = completed.IsEndOfStream;  		// subscribeFrom is only used if eof  		subscribeFrom = new TFPos (completed.TfLastCommitPosition' completed.TfLastCommitPosition);  		if (completed.Result == ReadStreamResult.Success) {  			foreach (var e in completed.Events)  				PublishCommand (e);  		}  	}  });  
Magic Number,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,IsExpiredProjection,The following statement contains a magic number: return Mode == ProjectionMode.Transient && !_isSlave && _lastAccessed.AddMinutes (5) < _timeProvider.Now;  
Magic Number,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,FixupOldProjectionModes,The following statement contains a magic number: switch ((int)persistedState.Mode) {  case 2:  	// old continuous  	persistedState.Mode = ProjectionMode.Continuous;  	break;  case 3:  	// old persistent  	persistedState.Mode = ProjectionMode.Continuous;  	persistedState.EmitEnabled = persistedState.EmitEnabled ?? true;  	break;  }  
Magic Number,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,FixupOldProjectionModes,The following statement contains a magic number: switch ((int)persistedState.Mode) {  case 2:  	// old continuous  	persistedState.Mode = ProjectionMode.Continuous;  	break;  case 3:  	// old persistent  	persistedState.Mode = ProjectionMode.Continuous;  	persistedState.EmitEnabled = persistedState.EmitEnabled ?? true;  	break;  }  
Magic Number,EventStore.Projections.Core.Services.Management,ProjectionCoreCoordinator,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionCoreCoordinator.cs,ScheduleRegularTimeout,The following statement contains a magic number: _publisher.Publish (TimerMessage.Schedule.Create (TimeSpan.FromMilliseconds (100)' _publishEnvelope' new ProjectionManagementMessage.Internal.RegularTimeout ()));  
Magic Number,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PerformStartReader,The following statement contains a magic number: while (true) {  	var eof = false;  	var subscribeFrom = default(TFPos);  	do {  		yield return _ioDispatcher.BeginReadForward (_cancellationScope' ProjectionNamesBuilder._projectionsMasterStream' @from' 10' false' SystemAccount.Principal' completed => {  			if (completed.Result == ReadStreamResult.Success || completed.Result == ReadStreamResult.NoStream) {  				@from = completed.NextEventNumber == -1 ? 0 : completed.NextEventNumber;  				eof = completed.IsEndOfStream;  				// subscribeFrom is only used if eof  				subscribeFrom = new TFPos (completed.TfLastCommitPosition' completed.TfLastCommitPosition);  				if (completed.Result == ReadStreamResult.Success) {  					foreach (var e in completed.Events)  						PublishCommand (e);  				}  			}  		});  	} while (!eof);  	yield return _ioDispatcher.BeginSubscribeAwake (_cancellationScope' ProjectionNamesBuilder._projectionsMasterStream' subscribeFrom' message => {  	});  }  
Magic Number,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PerformStartReader,The following statement contains a magic number: do {  	yield return _ioDispatcher.BeginReadForward (_cancellationScope' ProjectionNamesBuilder._projectionsMasterStream' @from' 10' false' SystemAccount.Principal' completed => {  		if (completed.Result == ReadStreamResult.Success || completed.Result == ReadStreamResult.NoStream) {  			@from = completed.NextEventNumber == -1 ? 0 : completed.NextEventNumber;  			eof = completed.IsEndOfStream;  			// subscribeFrom is only used if eof  			subscribeFrom = new TFPos (completed.TfLastCommitPosition' completed.TfLastCommitPosition);  			if (completed.Result == ReadStreamResult.Success) {  				foreach (var e in completed.Events)  					PublishCommand (e);  			}  		}  	});  } while (!eof);  
Magic Number,EventStore.Projections.Core.Services.Management,ProjectionManagerResponseReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManagerResponseReader.cs,PerformStartReader,The following statement contains a magic number: yield return _ioDispatcher.BeginReadForward (_cancellationScope' ProjectionNamesBuilder._projectionsMasterStream' @from' 10' false' SystemAccount.Principal' completed => {  	if (completed.Result == ReadStreamResult.Success || completed.Result == ReadStreamResult.NoStream) {  		@from = completed.NextEventNumber == -1 ? 0 : completed.NextEventNumber;  		eof = completed.IsEndOfStream;  		// subscribeFrom is only used if eof  		subscribeFrom = new TFPos (completed.TfLastCommitPosition' completed.TfLastCommitPosition);  		if (completed.Result == ReadStreamResult.Success) {  			foreach (var e in completed.Events)  				PublishCommand (e);  		}  	}  });  
Magic Number,EventStore.Projections.Core.Services.Management,TimeoutScheduler,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\TimeoutScheduler.cs,Tick,The following statement contains a magic number: if (entry != null) {  	entry.Timeout -= 100;  	if (entry.Timeout <= 0) {  		if (Interlocked.CompareExchange (ref _current' null' entry) == entry) {  			entry.Action ();  		}  	}  }  
Magic Number,EventStore.Projections.Core.Services.Management,TimeoutScheduler,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\TimeoutScheduler.cs,Tick,The following statement contains a magic number: entry.Timeout -= 100;  
Magic Number,EventStore.Projections.Core.Services.Management,ProjectionManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ProjectionManager.cs,ScheduleExpire,The following statement contains a magic number: _publisher.Publish (TimerMessage.Schedule.Create (TimeSpan.FromSeconds (60)' _publishEnvelope' new ProjectionManagementMessage.Internal.CleanupExpired ()));  
Magic Number,EventStore.Projections.Core.Services.Processing,ByStreamCatalogEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ByStreamCatalogEventReader.cs,RequestEvents,The following statement contains a magic number: if (_pendingStreams.Count < 10 && !_catalogEof) {  	_catalogReadRequestId = _ioDispatcher.ReadForward (_catalogStreamName' _catalogNextSequenceNumber' _maxReadCount' false' ReadAs' ReadCatalogCompleted);  } else {  	TakeNextStreamIfRequired ();  	if (!_disposed) {  		_dataReadRequestId = _ioDispatcher.ReadForward (_dataStreamName' _dataNextSequenceNumber' _maxReadCount' _resolveLinkTos' ReadAs' ReadDataStreamCompleted);  	}  }  
Magic Number,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,RequestEvents,The following statement contains a magic number: if (_eofs.Any (v => v.Value))  	_publisher.Publish (TimerMessage.Schedule.Create (TimeSpan.FromMilliseconds (250)' new PublishEnvelope (_publisher' crossThread: true)' new UnwrapEnvelopeMessage (ProcessBuffers2)));  
Magic Number,EventStore.Projections.Core.Services.Processing,MultiStreamEventReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamEventReader.cs,RequestEvents,The following statement contains a magic number: _publisher.Publish (TimerMessage.Schedule.Create (TimeSpan.FromMilliseconds (250)' new PublishEnvelope (_publisher' crossThread: true)' new UnwrapEnvelopeMessage (ProcessBuffers2)));  
Magic Number,EventStore.Projections.Core.Services.Processing,MultiStreamMultiOutputCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamMultiOutputCheckpointManager.cs,CreateOrderStream,The following statement contains a magic number: return new EmittedStream (/* MUST NEVER SEND READY MESSAGE */_namingBuilder.GetOrderStreamName ()' new EmittedStream.WriterConfiguration (new EmittedStream.WriterConfiguration.StreamMetadata ()' SystemAccount.Principal' 100' _logger)' _projectionVersion' _positionTagger' @from' _ioDispatcher' this' noCheckpoints: true);  
Magic Number,EventStore.Projections.Core.Services.Processing,MultiStreamMultiOutputCheckpointManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\MultiStreamMultiOutputCheckpointManager.cs,BeginLoadPrerecordedEventsChunk,The following statement contains a magic number: _ioDispatcher.ReadBackward (_namingBuilder.GetOrderStreamName ()' fromEventNumber' 100' false' SystemAccount.Principal' completed => {  	switch (completed.Result) {  	case ReadStreamResult.NoStream:  		_lastOrderCheckpointTag = _positionTagger.MakeZeroCheckpointTag ();  		PrerecordedEventsLoaded (checkpointTag);  		break;  	case ReadStreamResult.Success:  		var epochEnded = false;  		foreach (var @event in completed.Events) {  			var parsed = @event.Event.Metadata.ParseCheckpointTagVersionExtraJson (_projectionVersion);  			//TODO: throw exception if different projectionID?  			if (_projectionVersion.ProjectionId != parsed.Version.ProjectionId || _projectionVersion.Epoch > parsed.Version.Version) {  				epochEnded = true;  				break;  			}  			var tag = parsed.AdjustBy (_positionTagger' _projectionVersion);  			//NOTE: even if this tag <= checkpointTag we set last tag  			// this is to know the exact last tag to request when writing  			if (_lastOrderCheckpointTag == null)  				_lastOrderCheckpointTag = tag;  			if (tag <= checkpointTag) {  				SetOrderStreamReadCompleted ();  				break;  			}  			EnqueuePrerecordedEvent (@event.Event' tag);  		}  		if (epochEnded || completed.IsEndOfStream)  			SetOrderStreamReadCompleted ();  		else  			BeginLoadPrerecordedEventsChunk (checkpointTag' completed.NextEventNumber);  		break;  	default:  		throw new Exception ("Cannot read order stream");  	}  });  
Magic Number,EventStore.Projections.Core.Services.Processing,CoreProjectionQueue,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjectionQueue.cs,ProcessOneEventBatch,The following statement contains a magic number: if (_subscriptionPaused && _queuePendingEvents.Count < _pendingEventsThreshold / 2)  	ResumeSubscription ();  
Magic Number,EventStore.Projections.Core.Services.Processing,PartitionState,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PartitionState.cs,Deserialize,The following statement contains a magic number: if (!string.IsNullOrEmpty (serializedState)) {  	var deserialized = JsonConvert.DeserializeObject (serializedState);  	var array = deserialized as JArray;  	if (array != null && array.Count > 0) {  		state = array [0] as JToken;  		if (array.Count == 2) {  			result = array [1] as JToken;  		}  	} else {  		state = deserialized as JObject;  	}  }  
Magic Number,EventStore.Projections.Core.Services.Processing,PartitionState,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PartitionState.cs,Deserialize,The following statement contains a magic number: if (array != null && array.Count > 0) {  	state = array [0] as JToken;  	if (array.Count == 2) {  		result = array [1] as JToken;  	}  } else {  	state = deserialized as JObject;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,PartitionState,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PartitionState.cs,Deserialize,The following statement contains a magic number: if (array.Count == 2) {  	result = array [1] as JToken;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,PartitionStateCache,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\PartitionStateCache.cs,CleanUp,The following statement contains a magic number: while (removeAllUnlocked || _cacheOrder.Count > _maxCachedPartitions * 5 || CachedItemCount > _maxCachedPartitions) {  	if (_cacheOrder.Count == 0)  		break;  	Tuple<CheckpointTag' string> top = _cacheOrder.FirstOrDefault ();  	if (top.Item1 >= _unlockedBefore)  		break;  	// other entries were locked after the checkpoint (or almost .. order is not very strong)  	_cacheOrder.RemoveFirst ();  	Tuple<PartitionState' CheckpointTag> entry;  	if (!_partitionStates.TryGetValue (top.Item2' out entry))  		continue;  	// already removed  	if (entry.Item2 >= _unlockedBefore)  		continue;  	// was relocked  	_partitionStates.Remove (top.Item2);  	_cachedItemCount = _partitionStates.Count;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,StartCoreSteps,The following statement contains a magic number: while (!_stopped) {  	var eof = false;  	var subscribeFrom = default(TFPos);  	do {  		yield return _ioDispatcher.BeginReadForward (_cancellationScope' coreControlStreamID' @from' 10' false' SystemAccount.Principal' completed => {  			@from = completed.NextEventNumber == -1 ? 0 : completed.NextEventNumber;  			eof = completed.IsEndOfStream;  			// subscribeFrom is only used if eof  			subscribeFrom = new TFPos (completed.TfLastCommitPosition' completed.TfLastCommitPosition);  			foreach (var e in completed.Events)  				PublishCommand (e);  		});  	} while (!eof);  	yield return _ioDispatcher.BeginSubscribeAwake (_cancellationScope' coreControlStreamID' subscribeFrom' message => {  	});  }  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,StartCoreSteps,The following statement contains a magic number: do {  	yield return _ioDispatcher.BeginReadForward (_cancellationScope' coreControlStreamID' @from' 10' false' SystemAccount.Principal' completed => {  		@from = completed.NextEventNumber == -1 ? 0 : completed.NextEventNumber;  		eof = completed.IsEndOfStream;  		// subscribeFrom is only used if eof  		subscribeFrom = new TFPos (completed.TfLastCommitPosition' completed.TfLastCommitPosition);  		foreach (var e in completed.Events)  			PublishCommand (e);  	});  } while (!eof);  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionCoreServiceCommandReader,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionCoreServiceCommandReader.cs,StartCoreSteps,The following statement contains a magic number: yield return _ioDispatcher.BeginReadForward (_cancellationScope' coreControlStreamID' @from' 10' false' SystemAccount.Principal' completed => {  	@from = completed.NextEventNumber == -1 ? 0 : completed.NextEventNumber;  	eof = completed.IsEndOfStream;  	// subscribeFrom is only used if eof  	subscribeFrom = new TFPos (completed.TfLastCommitPosition' completed.TfLastCommitPosition);  	foreach (var e in completed.Events)  		PublishCommand (e);  });  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = AllEvents.GetHashCode ();  	hashCode = (hashCode * 397) ^ AllStreams.GetHashCode ();  	hashCode = (hashCode * 397) ^ ByStream.GetHashCode ();  	hashCode = (hashCode * 397) ^ ByCustomPartitions.GetHashCode ();  	hashCode = (hashCode * 397) ^ (CatalogStream != null ? CatalogStream.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ LimitingCommitPosition.GetHashCode ();  	hashCode = (hashCode * 397) ^ (Options != null ? Options.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = AllEvents.GetHashCode ();  	hashCode = (hashCode * 397) ^ AllStreams.GetHashCode ();  	hashCode = (hashCode * 397) ^ ByStream.GetHashCode ();  	hashCode = (hashCode * 397) ^ ByCustomPartitions.GetHashCode ();  	hashCode = (hashCode * 397) ^ (CatalogStream != null ? CatalogStream.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ LimitingCommitPosition.GetHashCode ();  	hashCode = (hashCode * 397) ^ (Options != null ? Options.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = AllEvents.GetHashCode ();  	hashCode = (hashCode * 397) ^ AllStreams.GetHashCode ();  	hashCode = (hashCode * 397) ^ ByStream.GetHashCode ();  	hashCode = (hashCode * 397) ^ ByCustomPartitions.GetHashCode ();  	hashCode = (hashCode * 397) ^ (CatalogStream != null ? CatalogStream.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ LimitingCommitPosition.GetHashCode ();  	hashCode = (hashCode * 397) ^ (Options != null ? Options.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = AllEvents.GetHashCode ();  	hashCode = (hashCode * 397) ^ AllStreams.GetHashCode ();  	hashCode = (hashCode * 397) ^ ByStream.GetHashCode ();  	hashCode = (hashCode * 397) ^ ByCustomPartitions.GetHashCode ();  	hashCode = (hashCode * 397) ^ (CatalogStream != null ? CatalogStream.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ LimitingCommitPosition.GetHashCode ();  	hashCode = (hashCode * 397) ^ (Options != null ? Options.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = AllEvents.GetHashCode ();  	hashCode = (hashCode * 397) ^ AllStreams.GetHashCode ();  	hashCode = (hashCode * 397) ^ ByStream.GetHashCode ();  	hashCode = (hashCode * 397) ^ ByCustomPartitions.GetHashCode ();  	hashCode = (hashCode * 397) ^ (CatalogStream != null ? CatalogStream.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ LimitingCommitPosition.GetHashCode ();  	hashCode = (hashCode * 397) ^ (Options != null ? Options.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = AllEvents.GetHashCode ();  	hashCode = (hashCode * 397) ^ AllStreams.GetHashCode ();  	hashCode = (hashCode * 397) ^ ByStream.GetHashCode ();  	hashCode = (hashCode * 397) ^ ByCustomPartitions.GetHashCode ();  	hashCode = (hashCode * 397) ^ (CatalogStream != null ? CatalogStream.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ LimitingCommitPosition.GetHashCode ();  	hashCode = (hashCode * 397) ^ (Options != null ? Options.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ AllStreams.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ByStream.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ByCustomPartitions.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (CatalogStream != null ? CatalogStream.GetHashCode () : 0);  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ LimitingCommitPosition.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionSourceDefinition,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionSourceDefinition.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Options != null ? Options.GetHashCode () : 0);  
Magic Number,EventStore.Projections.Core.Services.Processing,ReaderSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderSubscriptionBase.cs,PublishProgress,The following statement contains a magic number: if (now - _lastProgressPublished > TimeSpan.FromMilliseconds (500)) {  	_lastProgressPublished = now;  	_progress = roundedProgress;  	_publisher.Publish (new EventReaderSubscriptionMessage.ProgressChanged (_subscriptionId' _positionTracker.LastTag' _progress' _subscriptionMessageSequenceNumber++));  }  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionVersion,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionVersion.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionVersion,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionVersion.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = ProjectionId.GetHashCode ();  	hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  	hashCode = (hashCode * 397) ^ Version.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionVersion,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionVersion.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Epoch.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services.Processing,ProjectionVersion,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ProjectionVersion.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Version.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (PartitionResultStreamNamePattern != null ? PartitionResultStreamNamePattern.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ReorderEvents.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProcessingLag;  	hashCode = (hashCode * 397) ^ IsBiState.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesStateTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesCatalogTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProducesResults.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesFold.GetHashCode ();  	hashCode = (hashCode * 397) ^ HandlesDeletedNotifications.GetHashCode ();  	hashCode = (hashCode * 397) ^ IncludeLinks.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (PartitionResultStreamNamePattern != null ? PartitionResultStreamNamePattern.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ReorderEvents.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProcessingLag;  	hashCode = (hashCode * 397) ^ IsBiState.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesStateTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesCatalogTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProducesResults.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesFold.GetHashCode ();  	hashCode = (hashCode * 397) ^ HandlesDeletedNotifications.GetHashCode ();  	hashCode = (hashCode * 397) ^ IncludeLinks.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (PartitionResultStreamNamePattern != null ? PartitionResultStreamNamePattern.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ReorderEvents.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProcessingLag;  	hashCode = (hashCode * 397) ^ IsBiState.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesStateTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesCatalogTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProducesResults.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesFold.GetHashCode ();  	hashCode = (hashCode * 397) ^ HandlesDeletedNotifications.GetHashCode ();  	hashCode = (hashCode * 397) ^ IncludeLinks.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (PartitionResultStreamNamePattern != null ? PartitionResultStreamNamePattern.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ReorderEvents.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProcessingLag;  	hashCode = (hashCode * 397) ^ IsBiState.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesStateTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesCatalogTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProducesResults.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesFold.GetHashCode ();  	hashCode = (hashCode * 397) ^ HandlesDeletedNotifications.GetHashCode ();  	hashCode = (hashCode * 397) ^ IncludeLinks.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (PartitionResultStreamNamePattern != null ? PartitionResultStreamNamePattern.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ReorderEvents.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProcessingLag;  	hashCode = (hashCode * 397) ^ IsBiState.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesStateTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesCatalogTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProducesResults.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesFold.GetHashCode ();  	hashCode = (hashCode * 397) ^ HandlesDeletedNotifications.GetHashCode ();  	hashCode = (hashCode * 397) ^ IncludeLinks.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (PartitionResultStreamNamePattern != null ? PartitionResultStreamNamePattern.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ReorderEvents.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProcessingLag;  	hashCode = (hashCode * 397) ^ IsBiState.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesStateTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesCatalogTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProducesResults.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesFold.GetHashCode ();  	hashCode = (hashCode * 397) ^ HandlesDeletedNotifications.GetHashCode ();  	hashCode = (hashCode * 397) ^ IncludeLinks.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (PartitionResultStreamNamePattern != null ? PartitionResultStreamNamePattern.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ReorderEvents.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProcessingLag;  	hashCode = (hashCode * 397) ^ IsBiState.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesStateTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesCatalogTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProducesResults.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesFold.GetHashCode ();  	hashCode = (hashCode * 397) ^ HandlesDeletedNotifications.GetHashCode ();  	hashCode = (hashCode * 397) ^ IncludeLinks.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (PartitionResultStreamNamePattern != null ? PartitionResultStreamNamePattern.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ReorderEvents.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProcessingLag;  	hashCode = (hashCode * 397) ^ IsBiState.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesStateTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesCatalogTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProducesResults.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesFold.GetHashCode ();  	hashCode = (hashCode * 397) ^ HandlesDeletedNotifications.GetHashCode ();  	hashCode = (hashCode * 397) ^ IncludeLinks.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (PartitionResultStreamNamePattern != null ? PartitionResultStreamNamePattern.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ReorderEvents.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProcessingLag;  	hashCode = (hashCode * 397) ^ IsBiState.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesStateTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesCatalogTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProducesResults.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesFold.GetHashCode ();  	hashCode = (hashCode * 397) ^ HandlesDeletedNotifications.GetHashCode ();  	hashCode = (hashCode * 397) ^ IncludeLinks.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = (ResultStreamName != null ? ResultStreamName.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (PartitionResultStreamNamePattern != null ? PartitionResultStreamNamePattern.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ ReorderEvents.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProcessingLag;  	hashCode = (hashCode * 397) ^ IsBiState.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesStateTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesCatalogTransform.GetHashCode ();  	hashCode = (hashCode * 397) ^ ProducesResults.GetHashCode ();  	hashCode = (hashCode * 397) ^ DefinesFold.GetHashCode ();  	hashCode = (hashCode * 397) ^ HandlesDeletedNotifications.GetHashCode ();  	hashCode = (hashCode * 397) ^ IncludeLinks.GetHashCode ();  	return hashCode;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (PartitionResultStreamNamePattern != null ? PartitionResultStreamNamePattern.GetHashCode () : 0);  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ReorderEvents.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ProcessingLag;  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ IsBiState.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ DefinesStateTransform.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ DefinesCatalogTransform.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ProducesResults.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ DefinesFold.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ HandlesDeletedNotifications.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services.Processing,QuerySourceOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\SourceDefinitionBuilder.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ IncludeLinks.GetHashCode ();  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: while (true) {  	Check (reader.Read ()' reader);  	if (reader.TokenType == JsonToken.EndObject)  		break;  	Check (JsonToken.PropertyName' reader);  	var name = (string)reader.Value;  	switch (name) {  	case "$cp":  		Check (reader.Read ()' reader);  		var completed = (bool)reader.Value;  		commitPosition = completed ? Int64.MaxValue : Int64.MinValue;  		preparePosition = completed ? Int64.MaxValue : Int64.MinValue;  		break;  	case "$v":  	case "v":  		Check (reader.Read ()' reader);  		if (reader.ValueType == typeof(long)) {  			var v = (int)(long)reader.Value;  			if (v > 0)  				// TODO: remove this if with time  				projectionVersion = v;  		} else {  			//TODO: better handle errors  			var v = (string)reader.Value;  			string[] parts = v.Split (':');  			if (parts.Length == 2) {  				projectionVersion = Int32.Parse (parts [1]);  			} else {  				projectionId = Int32.Parse (parts [0]);  				projectionEpoch = Int32.Parse (parts [1]);  				projectionVersion = Int32.Parse (parts [2]);  				if (parts.Length >= 4)  					projectionSystemVersion = Int32.Parse (parts [3]);  			}  		}  		break;  	case "$c":  	case "c":  	case "commitPosition":  		Check (reader.Read ()' reader);  		commitPosition = (long)reader.Value;  		break;  	case "$p":  	case "p":  	case "preparePosition":  		Check (reader.Read ()' reader);  		preparePosition = (long)reader.Value;  		break;  	case "$s":  	case "s":  	case "streams":  		Check (reader.Read ()' reader);  		if (reader.TokenType == JsonToken.StartArray) {  			Check (reader.Read ()' reader);  			Check (JsonToken.StartObject' reader);  			Check (reader.Read ()' reader);  			Check (JsonToken.PropertyName' reader);  			catalogStream = (string)reader.Value;  			Check (reader.Read ()' reader);  			catalogPosition = (int)(long)reader.Value;  			Check (reader.Read ()' reader);  			Check (JsonToken.EndObject' reader);  			Check (reader.Read ()' reader);  			if (reader.TokenType == JsonToken.StartObject) {  				Check (reader.Read ()' reader);  				Check (JsonToken.PropertyName' reader);  				dataStream = (string)reader.Value;  				Check (reader.Read ()' reader);  				dataPosition = (int)(long)reader.Value;  				Check (reader.Read ()' reader);  				Check (JsonToken.EndObject' reader);  				Check (reader.Read ()' reader);  			}  			Check (JsonToken.EndArray' reader);  		} else {  			Check (JsonToken.StartObject' reader);  			streams = new Dictionary<string' long> ();  			while (true) {  				Check (reader.Read ()' reader);  				if (reader.TokenType == JsonToken.EndObject)  					break;  				Check (JsonToken.PropertyName' reader);  				var streamName = (string)reader.Value;  				Check (reader.Read ()' reader);  				var position = (int)(long)reader.Value;  				streams.Add (streamName' position);  			}  		}  		break;  	case "$ph":  		Check (reader.Read ()' reader);  		projectionPhase = (int)(long)reader.Value;  		break;  	case "$m":  		Check (reader.Read ()' reader);  		var readMode = (string)reader.Value;  		if (readMode != "bs")  			throw new ApplicationException ("Unknown checkpoint tag mode: " + readMode);  		byStreamMode = true;  		break;  	default:  		if (extra == null)  			extra = new Dictionary<string' JToken> ();  		Check (reader.Read ()' reader);  		var jToken = JToken.ReadFrom (reader);  		extra.Add (name' jToken);  		break;  	}  }  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: while (true) {  	Check (reader.Read ()' reader);  	if (reader.TokenType == JsonToken.EndObject)  		break;  	Check (JsonToken.PropertyName' reader);  	var name = (string)reader.Value;  	switch (name) {  	case "$cp":  		Check (reader.Read ()' reader);  		var completed = (bool)reader.Value;  		commitPosition = completed ? Int64.MaxValue : Int64.MinValue;  		preparePosition = completed ? Int64.MaxValue : Int64.MinValue;  		break;  	case "$v":  	case "v":  		Check (reader.Read ()' reader);  		if (reader.ValueType == typeof(long)) {  			var v = (int)(long)reader.Value;  			if (v > 0)  				// TODO: remove this if with time  				projectionVersion = v;  		} else {  			//TODO: better handle errors  			var v = (string)reader.Value;  			string[] parts = v.Split (':');  			if (parts.Length == 2) {  				projectionVersion = Int32.Parse (parts [1]);  			} else {  				projectionId = Int32.Parse (parts [0]);  				projectionEpoch = Int32.Parse (parts [1]);  				projectionVersion = Int32.Parse (parts [2]);  				if (parts.Length >= 4)  					projectionSystemVersion = Int32.Parse (parts [3]);  			}  		}  		break;  	case "$c":  	case "c":  	case "commitPosition":  		Check (reader.Read ()' reader);  		commitPosition = (long)reader.Value;  		break;  	case "$p":  	case "p":  	case "preparePosition":  		Check (reader.Read ()' reader);  		preparePosition = (long)reader.Value;  		break;  	case "$s":  	case "s":  	case "streams":  		Check (reader.Read ()' reader);  		if (reader.TokenType == JsonToken.StartArray) {  			Check (reader.Read ()' reader);  			Check (JsonToken.StartObject' reader);  			Check (reader.Read ()' reader);  			Check (JsonToken.PropertyName' reader);  			catalogStream = (string)reader.Value;  			Check (reader.Read ()' reader);  			catalogPosition = (int)(long)reader.Value;  			Check (reader.Read ()' reader);  			Check (JsonToken.EndObject' reader);  			Check (reader.Read ()' reader);  			if (reader.TokenType == JsonToken.StartObject) {  				Check (reader.Read ()' reader);  				Check (JsonToken.PropertyName' reader);  				dataStream = (string)reader.Value;  				Check (reader.Read ()' reader);  				dataPosition = (int)(long)reader.Value;  				Check (reader.Read ()' reader);  				Check (JsonToken.EndObject' reader);  				Check (reader.Read ()' reader);  			}  			Check (JsonToken.EndArray' reader);  		} else {  			Check (JsonToken.StartObject' reader);  			streams = new Dictionary<string' long> ();  			while (true) {  				Check (reader.Read ()' reader);  				if (reader.TokenType == JsonToken.EndObject)  					break;  				Check (JsonToken.PropertyName' reader);  				var streamName = (string)reader.Value;  				Check (reader.Read ()' reader);  				var position = (int)(long)reader.Value;  				streams.Add (streamName' position);  			}  		}  		break;  	case "$ph":  		Check (reader.Read ()' reader);  		projectionPhase = (int)(long)reader.Value;  		break;  	case "$m":  		Check (reader.Read ()' reader);  		var readMode = (string)reader.Value;  		if (readMode != "bs")  			throw new ApplicationException ("Unknown checkpoint tag mode: " + readMode);  		byStreamMode = true;  		break;  	default:  		if (extra == null)  			extra = new Dictionary<string' JToken> ();  		Check (reader.Read ()' reader);  		var jToken = JToken.ReadFrom (reader);  		extra.Add (name' jToken);  		break;  	}  }  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: while (true) {  	Check (reader.Read ()' reader);  	if (reader.TokenType == JsonToken.EndObject)  		break;  	Check (JsonToken.PropertyName' reader);  	var name = (string)reader.Value;  	switch (name) {  	case "$cp":  		Check (reader.Read ()' reader);  		var completed = (bool)reader.Value;  		commitPosition = completed ? Int64.MaxValue : Int64.MinValue;  		preparePosition = completed ? Int64.MaxValue : Int64.MinValue;  		break;  	case "$v":  	case "v":  		Check (reader.Read ()' reader);  		if (reader.ValueType == typeof(long)) {  			var v = (int)(long)reader.Value;  			if (v > 0)  				// TODO: remove this if with time  				projectionVersion = v;  		} else {  			//TODO: better handle errors  			var v = (string)reader.Value;  			string[] parts = v.Split (':');  			if (parts.Length == 2) {  				projectionVersion = Int32.Parse (parts [1]);  			} else {  				projectionId = Int32.Parse (parts [0]);  				projectionEpoch = Int32.Parse (parts [1]);  				projectionVersion = Int32.Parse (parts [2]);  				if (parts.Length >= 4)  					projectionSystemVersion = Int32.Parse (parts [3]);  			}  		}  		break;  	case "$c":  	case "c":  	case "commitPosition":  		Check (reader.Read ()' reader);  		commitPosition = (long)reader.Value;  		break;  	case "$p":  	case "p":  	case "preparePosition":  		Check (reader.Read ()' reader);  		preparePosition = (long)reader.Value;  		break;  	case "$s":  	case "s":  	case "streams":  		Check (reader.Read ()' reader);  		if (reader.TokenType == JsonToken.StartArray) {  			Check (reader.Read ()' reader);  			Check (JsonToken.StartObject' reader);  			Check (reader.Read ()' reader);  			Check (JsonToken.PropertyName' reader);  			catalogStream = (string)reader.Value;  			Check (reader.Read ()' reader);  			catalogPosition = (int)(long)reader.Value;  			Check (reader.Read ()' reader);  			Check (JsonToken.EndObject' reader);  			Check (reader.Read ()' reader);  			if (reader.TokenType == JsonToken.StartObject) {  				Check (reader.Read ()' reader);  				Check (JsonToken.PropertyName' reader);  				dataStream = (string)reader.Value;  				Check (reader.Read ()' reader);  				dataPosition = (int)(long)reader.Value;  				Check (reader.Read ()' reader);  				Check (JsonToken.EndObject' reader);  				Check (reader.Read ()' reader);  			}  			Check (JsonToken.EndArray' reader);  		} else {  			Check (JsonToken.StartObject' reader);  			streams = new Dictionary<string' long> ();  			while (true) {  				Check (reader.Read ()' reader);  				if (reader.TokenType == JsonToken.EndObject)  					break;  				Check (JsonToken.PropertyName' reader);  				var streamName = (string)reader.Value;  				Check (reader.Read ()' reader);  				var position = (int)(long)reader.Value;  				streams.Add (streamName' position);  			}  		}  		break;  	case "$ph":  		Check (reader.Read ()' reader);  		projectionPhase = (int)(long)reader.Value;  		break;  	case "$m":  		Check (reader.Read ()' reader);  		var readMode = (string)reader.Value;  		if (readMode != "bs")  			throw new ApplicationException ("Unknown checkpoint tag mode: " + readMode);  		byStreamMode = true;  		break;  	default:  		if (extra == null)  			extra = new Dictionary<string' JToken> ();  		Check (reader.Read ()' reader);  		var jToken = JToken.ReadFrom (reader);  		extra.Add (name' jToken);  		break;  	}  }  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: while (true) {  	Check (reader.Read ()' reader);  	if (reader.TokenType == JsonToken.EndObject)  		break;  	Check (JsonToken.PropertyName' reader);  	var name = (string)reader.Value;  	switch (name) {  	case "$cp":  		Check (reader.Read ()' reader);  		var completed = (bool)reader.Value;  		commitPosition = completed ? Int64.MaxValue : Int64.MinValue;  		preparePosition = completed ? Int64.MaxValue : Int64.MinValue;  		break;  	case "$v":  	case "v":  		Check (reader.Read ()' reader);  		if (reader.ValueType == typeof(long)) {  			var v = (int)(long)reader.Value;  			if (v > 0)  				// TODO: remove this if with time  				projectionVersion = v;  		} else {  			//TODO: better handle errors  			var v = (string)reader.Value;  			string[] parts = v.Split (':');  			if (parts.Length == 2) {  				projectionVersion = Int32.Parse (parts [1]);  			} else {  				projectionId = Int32.Parse (parts [0]);  				projectionEpoch = Int32.Parse (parts [1]);  				projectionVersion = Int32.Parse (parts [2]);  				if (parts.Length >= 4)  					projectionSystemVersion = Int32.Parse (parts [3]);  			}  		}  		break;  	case "$c":  	case "c":  	case "commitPosition":  		Check (reader.Read ()' reader);  		commitPosition = (long)reader.Value;  		break;  	case "$p":  	case "p":  	case "preparePosition":  		Check (reader.Read ()' reader);  		preparePosition = (long)reader.Value;  		break;  	case "$s":  	case "s":  	case "streams":  		Check (reader.Read ()' reader);  		if (reader.TokenType == JsonToken.StartArray) {  			Check (reader.Read ()' reader);  			Check (JsonToken.StartObject' reader);  			Check (reader.Read ()' reader);  			Check (JsonToken.PropertyName' reader);  			catalogStream = (string)reader.Value;  			Check (reader.Read ()' reader);  			catalogPosition = (int)(long)reader.Value;  			Check (reader.Read ()' reader);  			Check (JsonToken.EndObject' reader);  			Check (reader.Read ()' reader);  			if (reader.TokenType == JsonToken.StartObject) {  				Check (reader.Read ()' reader);  				Check (JsonToken.PropertyName' reader);  				dataStream = (string)reader.Value;  				Check (reader.Read ()' reader);  				dataPosition = (int)(long)reader.Value;  				Check (reader.Read ()' reader);  				Check (JsonToken.EndObject' reader);  				Check (reader.Read ()' reader);  			}  			Check (JsonToken.EndArray' reader);  		} else {  			Check (JsonToken.StartObject' reader);  			streams = new Dictionary<string' long> ();  			while (true) {  				Check (reader.Read ()' reader);  				if (reader.TokenType == JsonToken.EndObject)  					break;  				Check (JsonToken.PropertyName' reader);  				var streamName = (string)reader.Value;  				Check (reader.Read ()' reader);  				var position = (int)(long)reader.Value;  				streams.Add (streamName' position);  			}  		}  		break;  	case "$ph":  		Check (reader.Read ()' reader);  		projectionPhase = (int)(long)reader.Value;  		break;  	case "$m":  		Check (reader.Read ()' reader);  		var readMode = (string)reader.Value;  		if (readMode != "bs")  			throw new ApplicationException ("Unknown checkpoint tag mode: " + readMode);  		byStreamMode = true;  		break;  	default:  		if (extra == null)  			extra = new Dictionary<string' JToken> ();  		Check (reader.Read ()' reader);  		var jToken = JToken.ReadFrom (reader);  		extra.Add (name' jToken);  		break;  	}  }  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: switch (name) {  case "$cp":  	Check (reader.Read ()' reader);  	var completed = (bool)reader.Value;  	commitPosition = completed ? Int64.MaxValue : Int64.MinValue;  	preparePosition = completed ? Int64.MaxValue : Int64.MinValue;  	break;  case "$v":  case "v":  	Check (reader.Read ()' reader);  	if (reader.ValueType == typeof(long)) {  		var v = (int)(long)reader.Value;  		if (v > 0)  			// TODO: remove this if with time  			projectionVersion = v;  	} else {  		//TODO: better handle errors  		var v = (string)reader.Value;  		string[] parts = v.Split (':');  		if (parts.Length == 2) {  			projectionVersion = Int32.Parse (parts [1]);  		} else {  			projectionId = Int32.Parse (parts [0]);  			projectionEpoch = Int32.Parse (parts [1]);  			projectionVersion = Int32.Parse (parts [2]);  			if (parts.Length >= 4)  				projectionSystemVersion = Int32.Parse (parts [3]);  		}  	}  	break;  case "$c":  case "c":  case "commitPosition":  	Check (reader.Read ()' reader);  	commitPosition = (long)reader.Value;  	break;  case "$p":  case "p":  case "preparePosition":  	Check (reader.Read ()' reader);  	preparePosition = (long)reader.Value;  	break;  case "$s":  case "s":  case "streams":  	Check (reader.Read ()' reader);  	if (reader.TokenType == JsonToken.StartArray) {  		Check (reader.Read ()' reader);  		Check (JsonToken.StartObject' reader);  		Check (reader.Read ()' reader);  		Check (JsonToken.PropertyName' reader);  		catalogStream = (string)reader.Value;  		Check (reader.Read ()' reader);  		catalogPosition = (int)(long)reader.Value;  		Check (reader.Read ()' reader);  		Check (JsonToken.EndObject' reader);  		Check (reader.Read ()' reader);  		if (reader.TokenType == JsonToken.StartObject) {  			Check (reader.Read ()' reader);  			Check (JsonToken.PropertyName' reader);  			dataStream = (string)reader.Value;  			Check (reader.Read ()' reader);  			dataPosition = (int)(long)reader.Value;  			Check (reader.Read ()' reader);  			Check (JsonToken.EndObject' reader);  			Check (reader.Read ()' reader);  		}  		Check (JsonToken.EndArray' reader);  	} else {  		Check (JsonToken.StartObject' reader);  		streams = new Dictionary<string' long> ();  		while (true) {  			Check (reader.Read ()' reader);  			if (reader.TokenType == JsonToken.EndObject)  				break;  			Check (JsonToken.PropertyName' reader);  			var streamName = (string)reader.Value;  			Check (reader.Read ()' reader);  			var position = (int)(long)reader.Value;  			streams.Add (streamName' position);  		}  	}  	break;  case "$ph":  	Check (reader.Read ()' reader);  	projectionPhase = (int)(long)reader.Value;  	break;  case "$m":  	Check (reader.Read ()' reader);  	var readMode = (string)reader.Value;  	if (readMode != "bs")  		throw new ApplicationException ("Unknown checkpoint tag mode: " + readMode);  	byStreamMode = true;  	break;  default:  	if (extra == null)  		extra = new Dictionary<string' JToken> ();  	Check (reader.Read ()' reader);  	var jToken = JToken.ReadFrom (reader);  	extra.Add (name' jToken);  	break;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: switch (name) {  case "$cp":  	Check (reader.Read ()' reader);  	var completed = (bool)reader.Value;  	commitPosition = completed ? Int64.MaxValue : Int64.MinValue;  	preparePosition = completed ? Int64.MaxValue : Int64.MinValue;  	break;  case "$v":  case "v":  	Check (reader.Read ()' reader);  	if (reader.ValueType == typeof(long)) {  		var v = (int)(long)reader.Value;  		if (v > 0)  			// TODO: remove this if with time  			projectionVersion = v;  	} else {  		//TODO: better handle errors  		var v = (string)reader.Value;  		string[] parts = v.Split (':');  		if (parts.Length == 2) {  			projectionVersion = Int32.Parse (parts [1]);  		} else {  			projectionId = Int32.Parse (parts [0]);  			projectionEpoch = Int32.Parse (parts [1]);  			projectionVersion = Int32.Parse (parts [2]);  			if (parts.Length >= 4)  				projectionSystemVersion = Int32.Parse (parts [3]);  		}  	}  	break;  case "$c":  case "c":  case "commitPosition":  	Check (reader.Read ()' reader);  	commitPosition = (long)reader.Value;  	break;  case "$p":  case "p":  case "preparePosition":  	Check (reader.Read ()' reader);  	preparePosition = (long)reader.Value;  	break;  case "$s":  case "s":  case "streams":  	Check (reader.Read ()' reader);  	if (reader.TokenType == JsonToken.StartArray) {  		Check (reader.Read ()' reader);  		Check (JsonToken.StartObject' reader);  		Check (reader.Read ()' reader);  		Check (JsonToken.PropertyName' reader);  		catalogStream = (string)reader.Value;  		Check (reader.Read ()' reader);  		catalogPosition = (int)(long)reader.Value;  		Check (reader.Read ()' reader);  		Check (JsonToken.EndObject' reader);  		Check (reader.Read ()' reader);  		if (reader.TokenType == JsonToken.StartObject) {  			Check (reader.Read ()' reader);  			Check (JsonToken.PropertyName' reader);  			dataStream = (string)reader.Value;  			Check (reader.Read ()' reader);  			dataPosition = (int)(long)reader.Value;  			Check (reader.Read ()' reader);  			Check (JsonToken.EndObject' reader);  			Check (reader.Read ()' reader);  		}  		Check (JsonToken.EndArray' reader);  	} else {  		Check (JsonToken.StartObject' reader);  		streams = new Dictionary<string' long> ();  		while (true) {  			Check (reader.Read ()' reader);  			if (reader.TokenType == JsonToken.EndObject)  				break;  			Check (JsonToken.PropertyName' reader);  			var streamName = (string)reader.Value;  			Check (reader.Read ()' reader);  			var position = (int)(long)reader.Value;  			streams.Add (streamName' position);  		}  	}  	break;  case "$ph":  	Check (reader.Read ()' reader);  	projectionPhase = (int)(long)reader.Value;  	break;  case "$m":  	Check (reader.Read ()' reader);  	var readMode = (string)reader.Value;  	if (readMode != "bs")  		throw new ApplicationException ("Unknown checkpoint tag mode: " + readMode);  	byStreamMode = true;  	break;  default:  	if (extra == null)  		extra = new Dictionary<string' JToken> ();  	Check (reader.Read ()' reader);  	var jToken = JToken.ReadFrom (reader);  	extra.Add (name' jToken);  	break;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: switch (name) {  case "$cp":  	Check (reader.Read ()' reader);  	var completed = (bool)reader.Value;  	commitPosition = completed ? Int64.MaxValue : Int64.MinValue;  	preparePosition = completed ? Int64.MaxValue : Int64.MinValue;  	break;  case "$v":  case "v":  	Check (reader.Read ()' reader);  	if (reader.ValueType == typeof(long)) {  		var v = (int)(long)reader.Value;  		if (v > 0)  			// TODO: remove this if with time  			projectionVersion = v;  	} else {  		//TODO: better handle errors  		var v = (string)reader.Value;  		string[] parts = v.Split (':');  		if (parts.Length == 2) {  			projectionVersion = Int32.Parse (parts [1]);  		} else {  			projectionId = Int32.Parse (parts [0]);  			projectionEpoch = Int32.Parse (parts [1]);  			projectionVersion = Int32.Parse (parts [2]);  			if (parts.Length >= 4)  				projectionSystemVersion = Int32.Parse (parts [3]);  		}  	}  	break;  case "$c":  case "c":  case "commitPosition":  	Check (reader.Read ()' reader);  	commitPosition = (long)reader.Value;  	break;  case "$p":  case "p":  case "preparePosition":  	Check (reader.Read ()' reader);  	preparePosition = (long)reader.Value;  	break;  case "$s":  case "s":  case "streams":  	Check (reader.Read ()' reader);  	if (reader.TokenType == JsonToken.StartArray) {  		Check (reader.Read ()' reader);  		Check (JsonToken.StartObject' reader);  		Check (reader.Read ()' reader);  		Check (JsonToken.PropertyName' reader);  		catalogStream = (string)reader.Value;  		Check (reader.Read ()' reader);  		catalogPosition = (int)(long)reader.Value;  		Check (reader.Read ()' reader);  		Check (JsonToken.EndObject' reader);  		Check (reader.Read ()' reader);  		if (reader.TokenType == JsonToken.StartObject) {  			Check (reader.Read ()' reader);  			Check (JsonToken.PropertyName' reader);  			dataStream = (string)reader.Value;  			Check (reader.Read ()' reader);  			dataPosition = (int)(long)reader.Value;  			Check (reader.Read ()' reader);  			Check (JsonToken.EndObject' reader);  			Check (reader.Read ()' reader);  		}  		Check (JsonToken.EndArray' reader);  	} else {  		Check (JsonToken.StartObject' reader);  		streams = new Dictionary<string' long> ();  		while (true) {  			Check (reader.Read ()' reader);  			if (reader.TokenType == JsonToken.EndObject)  				break;  			Check (JsonToken.PropertyName' reader);  			var streamName = (string)reader.Value;  			Check (reader.Read ()' reader);  			var position = (int)(long)reader.Value;  			streams.Add (streamName' position);  		}  	}  	break;  case "$ph":  	Check (reader.Read ()' reader);  	projectionPhase = (int)(long)reader.Value;  	break;  case "$m":  	Check (reader.Read ()' reader);  	var readMode = (string)reader.Value;  	if (readMode != "bs")  		throw new ApplicationException ("Unknown checkpoint tag mode: " + readMode);  	byStreamMode = true;  	break;  default:  	if (extra == null)  		extra = new Dictionary<string' JToken> ();  	Check (reader.Read ()' reader);  	var jToken = JToken.ReadFrom (reader);  	extra.Add (name' jToken);  	break;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: switch (name) {  case "$cp":  	Check (reader.Read ()' reader);  	var completed = (bool)reader.Value;  	commitPosition = completed ? Int64.MaxValue : Int64.MinValue;  	preparePosition = completed ? Int64.MaxValue : Int64.MinValue;  	break;  case "$v":  case "v":  	Check (reader.Read ()' reader);  	if (reader.ValueType == typeof(long)) {  		var v = (int)(long)reader.Value;  		if (v > 0)  			// TODO: remove this if with time  			projectionVersion = v;  	} else {  		//TODO: better handle errors  		var v = (string)reader.Value;  		string[] parts = v.Split (':');  		if (parts.Length == 2) {  			projectionVersion = Int32.Parse (parts [1]);  		} else {  			projectionId = Int32.Parse (parts [0]);  			projectionEpoch = Int32.Parse (parts [1]);  			projectionVersion = Int32.Parse (parts [2]);  			if (parts.Length >= 4)  				projectionSystemVersion = Int32.Parse (parts [3]);  		}  	}  	break;  case "$c":  case "c":  case "commitPosition":  	Check (reader.Read ()' reader);  	commitPosition = (long)reader.Value;  	break;  case "$p":  case "p":  case "preparePosition":  	Check (reader.Read ()' reader);  	preparePosition = (long)reader.Value;  	break;  case "$s":  case "s":  case "streams":  	Check (reader.Read ()' reader);  	if (reader.TokenType == JsonToken.StartArray) {  		Check (reader.Read ()' reader);  		Check (JsonToken.StartObject' reader);  		Check (reader.Read ()' reader);  		Check (JsonToken.PropertyName' reader);  		catalogStream = (string)reader.Value;  		Check (reader.Read ()' reader);  		catalogPosition = (int)(long)reader.Value;  		Check (reader.Read ()' reader);  		Check (JsonToken.EndObject' reader);  		Check (reader.Read ()' reader);  		if (reader.TokenType == JsonToken.StartObject) {  			Check (reader.Read ()' reader);  			Check (JsonToken.PropertyName' reader);  			dataStream = (string)reader.Value;  			Check (reader.Read ()' reader);  			dataPosition = (int)(long)reader.Value;  			Check (reader.Read ()' reader);  			Check (JsonToken.EndObject' reader);  			Check (reader.Read ()' reader);  		}  		Check (JsonToken.EndArray' reader);  	} else {  		Check (JsonToken.StartObject' reader);  		streams = new Dictionary<string' long> ();  		while (true) {  			Check (reader.Read ()' reader);  			if (reader.TokenType == JsonToken.EndObject)  				break;  			Check (JsonToken.PropertyName' reader);  			var streamName = (string)reader.Value;  			Check (reader.Read ()' reader);  			var position = (int)(long)reader.Value;  			streams.Add (streamName' position);  		}  	}  	break;  case "$ph":  	Check (reader.Read ()' reader);  	projectionPhase = (int)(long)reader.Value;  	break;  case "$m":  	Check (reader.Read ()' reader);  	var readMode = (string)reader.Value;  	if (readMode != "bs")  		throw new ApplicationException ("Unknown checkpoint tag mode: " + readMode);  	byStreamMode = true;  	break;  default:  	if (extra == null)  		extra = new Dictionary<string' JToken> ();  	Check (reader.Read ()' reader);  	var jToken = JToken.ReadFrom (reader);  	extra.Add (name' jToken);  	break;  }  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: if (reader.ValueType == typeof(long)) {  	var v = (int)(long)reader.Value;  	if (v > 0)  		// TODO: remove this if with time  		projectionVersion = v;  } else {  	//TODO: better handle errors  	var v = (string)reader.Value;  	string[] parts = v.Split (':');  	if (parts.Length == 2) {  		projectionVersion = Int32.Parse (parts [1]);  	} else {  		projectionId = Int32.Parse (parts [0]);  		projectionEpoch = Int32.Parse (parts [1]);  		projectionVersion = Int32.Parse (parts [2]);  		if (parts.Length >= 4)  			projectionSystemVersion = Int32.Parse (parts [3]);  	}  }  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: if (reader.ValueType == typeof(long)) {  	var v = (int)(long)reader.Value;  	if (v > 0)  		// TODO: remove this if with time  		projectionVersion = v;  } else {  	//TODO: better handle errors  	var v = (string)reader.Value;  	string[] parts = v.Split (':');  	if (parts.Length == 2) {  		projectionVersion = Int32.Parse (parts [1]);  	} else {  		projectionId = Int32.Parse (parts [0]);  		projectionEpoch = Int32.Parse (parts [1]);  		projectionVersion = Int32.Parse (parts [2]);  		if (parts.Length >= 4)  			projectionSystemVersion = Int32.Parse (parts [3]);  	}  }  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: if (reader.ValueType == typeof(long)) {  	var v = (int)(long)reader.Value;  	if (v > 0)  		// TODO: remove this if with time  		projectionVersion = v;  } else {  	//TODO: better handle errors  	var v = (string)reader.Value;  	string[] parts = v.Split (':');  	if (parts.Length == 2) {  		projectionVersion = Int32.Parse (parts [1]);  	} else {  		projectionId = Int32.Parse (parts [0]);  		projectionEpoch = Int32.Parse (parts [1]);  		projectionVersion = Int32.Parse (parts [2]);  		if (parts.Length >= 4)  			projectionSystemVersion = Int32.Parse (parts [3]);  	}  }  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: if (reader.ValueType == typeof(long)) {  	var v = (int)(long)reader.Value;  	if (v > 0)  		// TODO: remove this if with time  		projectionVersion = v;  } else {  	//TODO: better handle errors  	var v = (string)reader.Value;  	string[] parts = v.Split (':');  	if (parts.Length == 2) {  		projectionVersion = Int32.Parse (parts [1]);  	} else {  		projectionId = Int32.Parse (parts [0]);  		projectionEpoch = Int32.Parse (parts [1]);  		projectionVersion = Int32.Parse (parts [2]);  		if (parts.Length >= 4)  			projectionSystemVersion = Int32.Parse (parts [3]);  	}  }  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: if (parts.Length == 2) {  	projectionVersion = Int32.Parse (parts [1]);  } else {  	projectionId = Int32.Parse (parts [0]);  	projectionEpoch = Int32.Parse (parts [1]);  	projectionVersion = Int32.Parse (parts [2]);  	if (parts.Length >= 4)  		projectionSystemVersion = Int32.Parse (parts [3]);  }  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: if (parts.Length == 2) {  	projectionVersion = Int32.Parse (parts [1]);  } else {  	projectionId = Int32.Parse (parts [0]);  	projectionEpoch = Int32.Parse (parts [1]);  	projectionVersion = Int32.Parse (parts [2]);  	if (parts.Length >= 4)  		projectionSystemVersion = Int32.Parse (parts [3]);  }  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: if (parts.Length == 2) {  	projectionVersion = Int32.Parse (parts [1]);  } else {  	projectionId = Int32.Parse (parts [0]);  	projectionEpoch = Int32.Parse (parts [1]);  	projectionVersion = Int32.Parse (parts [2]);  	if (parts.Length >= 4)  		projectionSystemVersion = Int32.Parse (parts [3]);  }  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: if (parts.Length == 2) {  	projectionVersion = Int32.Parse (parts [1]);  } else {  	projectionId = Int32.Parse (parts [0]);  	projectionEpoch = Int32.Parse (parts [1]);  	projectionVersion = Int32.Parse (parts [2]);  	if (parts.Length >= 4)  		projectionSystemVersion = Int32.Parse (parts [3]);  }  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: projectionVersion = Int32.Parse (parts [2]);  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: if (parts.Length >= 4)  	projectionSystemVersion = Int32.Parse (parts [3]);  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: if (parts.Length >= 4)  	projectionSystemVersion = Int32.Parse (parts [3]);  
Magic Number,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,FromJson,The following statement contains a magic number: projectionSystemVersion = Int32.Parse (parts [3]);  
Magic Number,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,Create,The following statement contains a magic number: if (sources.ReorderEventsOption) {  	if (!string.IsNullOrEmpty (sources.CatalogStream))  		throw new InvalidOperationException ("Event reordering cannot be used with stream catalogs");  	if (sources.AllStreams)  		throw new InvalidOperationException ("Event reordering cannot be used with fromAll()");  	if (!(sources.HasStreams () && sources.Streams.Length > 1)) {  		throw new InvalidOperationException ("Event reordering is only available in fromStreams([]) projections");  	}  	if (sources.ProcessingLagOption < 50)  		throw new InvalidOperationException ("Event reordering requires processing lag at least of 50ms");  }  
Magic Number,EventStore.Projections.Core.Services.Processing,ReaderStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\ReaderStrategy.cs,Create,The following statement contains a magic number: if (sources.ProcessingLagOption < 50)  	throw new InvalidOperationException ("Event reordering requires processing lag at least of 50ms");  
Magic Number,EventStore.Projections.Core.Services.Processing,WorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WorkItem.cs,WorkItem,The following statement contains a magic number: _lastStage = 5;  
Magic Number,EventStore.Projections.Core.Services.Processing,WorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WorkItem.cs,Process,The following statement contains a magic number: if (_requiresRunning && !Queue.IsRunning)  	NextStage ();  else {  	switch (onStage) {  	case 0:  		RecordEventOrder ();  		break;  	case 1:  		GetStatePartition ();  		break;  	case 2:  		Load (_checkpointTag);  		break;  	case 3:  		ProcessEvent ();  		break;  	case 4:  		WriteOutput ();  		break;  	case 5:  		CompleteItem ();  		break;  	default:  		throw new NotSupportedException ();  	}  }  
Magic Number,EventStore.Projections.Core.Services.Processing,WorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WorkItem.cs,Process,The following statement contains a magic number: if (_requiresRunning && !Queue.IsRunning)  	NextStage ();  else {  	switch (onStage) {  	case 0:  		RecordEventOrder ();  		break;  	case 1:  		GetStatePartition ();  		break;  	case 2:  		Load (_checkpointTag);  		break;  	case 3:  		ProcessEvent ();  		break;  	case 4:  		WriteOutput ();  		break;  	case 5:  		CompleteItem ();  		break;  	default:  		throw new NotSupportedException ();  	}  }  
Magic Number,EventStore.Projections.Core.Services.Processing,WorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WorkItem.cs,Process,The following statement contains a magic number: if (_requiresRunning && !Queue.IsRunning)  	NextStage ();  else {  	switch (onStage) {  	case 0:  		RecordEventOrder ();  		break;  	case 1:  		GetStatePartition ();  		break;  	case 2:  		Load (_checkpointTag);  		break;  	case 3:  		ProcessEvent ();  		break;  	case 4:  		WriteOutput ();  		break;  	case 5:  		CompleteItem ();  		break;  	default:  		throw new NotSupportedException ();  	}  }  
Magic Number,EventStore.Projections.Core.Services.Processing,WorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WorkItem.cs,Process,The following statement contains a magic number: if (_requiresRunning && !Queue.IsRunning)  	NextStage ();  else {  	switch (onStage) {  	case 0:  		RecordEventOrder ();  		break;  	case 1:  		GetStatePartition ();  		break;  	case 2:  		Load (_checkpointTag);  		break;  	case 3:  		ProcessEvent ();  		break;  	case 4:  		WriteOutput ();  		break;  	case 5:  		CompleteItem ();  		break;  	default:  		throw new NotSupportedException ();  	}  }  
Magic Number,EventStore.Projections.Core.Services.Processing,WorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WorkItem.cs,Process,The following statement contains a magic number: switch (onStage) {  case 0:  	RecordEventOrder ();  	break;  case 1:  	GetStatePartition ();  	break;  case 2:  	Load (_checkpointTag);  	break;  case 3:  	ProcessEvent ();  	break;  case 4:  	WriteOutput ();  	break;  case 5:  	CompleteItem ();  	break;  default:  	throw new NotSupportedException ();  }  
Magic Number,EventStore.Projections.Core.Services.Processing,WorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WorkItem.cs,Process,The following statement contains a magic number: switch (onStage) {  case 0:  	RecordEventOrder ();  	break;  case 1:  	GetStatePartition ();  	break;  case 2:  	Load (_checkpointTag);  	break;  case 3:  	ProcessEvent ();  	break;  case 4:  	WriteOutput ();  	break;  case 5:  	CompleteItem ();  	break;  default:  	throw new NotSupportedException ();  }  
Magic Number,EventStore.Projections.Core.Services.Processing,WorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WorkItem.cs,Process,The following statement contains a magic number: switch (onStage) {  case 0:  	RecordEventOrder ();  	break;  case 1:  	GetStatePartition ();  	break;  case 2:  	Load (_checkpointTag);  	break;  case 3:  	ProcessEvent ();  	break;  case 4:  	WriteOutput ();  	break;  case 5:  	CompleteItem ();  	break;  default:  	throw new NotSupportedException ();  }  
Magic Number,EventStore.Projections.Core.Services.Processing,WorkItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WorkItem.cs,Process,The following statement contains a magic number: switch (onStage) {  case 0:  	RecordEventOrder ();  	break;  case 1:  	GetStatePartition ();  	break;  case 2:  	Load (_checkpointTag);  	break;  case 3:  	ProcessEvent ();  	break;  case 4:  	WriteOutput ();  	break;  case 5:  	CompleteItem ();  	break;  default:  	throw new NotSupportedException ();  }  
Magic Number,EventStore.Projections.Core.Services.Processing,WorkLoadEstimationStrategy,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\WorkLoadEstimationStrategy.cs,EstimateWorkerLoad,The following statement contains a magic number: return workerState.UnmeasuredTasksScheduled * 10 + workerState.ScheduledSize;  
Magic Number,EventStore.Projections.Core.Standard,StreamCategoryExtractor,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Standard\StreamCategoryExtractor.cs,GetExtractor,The following statement contains a magic number: if (parts.Length != 2)  	throw new InvalidOperationException ("Cannot initialize categorization projection handler.  " + "Invalid configuration  " + ConfigurationFormatIs);  
Magic Number,EventStore.Projections.Core.v8,CompiledScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\CompiledScript.cs,CheckResult,The following statement contains a magic number: if (terminated)  	throw new Js1Exception (-2' "Failed to compile script. Script execution terminated.  Timeout expired. (1)");  
Magic Number,EventStore.Projections.Core.v8,CompiledScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\CompiledScript.cs,CheckResult,The following statement contains a magic number: throw new Js1Exception (-2' "Failed to compile script. Script execution terminated.  Timeout expired. (1)");  
Magic Number,EventStore.Projections.Core.v8,CompiledScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\CompiledScript.cs,CheckResult,The following statement contains a magic number: if (errorCode != null) {  	if (disposeScriptOnException) {  		Js1.DisposeScript (scriptHandle);  	}  	if (errorCode == 2)  		throw new Js1Exception (errorCode.Value' "Failed to compile script. Script execution terminated.  Timeout expired. (3)");  	throw new Js1Exception (errorCode.Value' errorMessage);  }  
Magic Number,EventStore.Projections.Core.v8,CompiledScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\CompiledScript.cs,CheckResult,The following statement contains a magic number: if (errorCode == 2)  	throw new Js1Exception (errorCode.Value' "Failed to compile script. Script execution terminated.  Timeout expired. (3)");  
Magic Number,EventStore.Projections.Core.v8,PreludeScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\PreludeScript.cs,CompileScript,The following statement contains a magic number: try {  	var attempts = RetryLimit;  	var prelude = default(IntPtr);  	do {  		attempts--;  		try {  			ScheduleTerminateExecution ();  			prelude = Js1.CompilePrelude (script' fileName' _loadModuleDelegate' _enterCancellableRegion' _exitCancellableRegion' _logDelegate);  			CancelTerminateExecution ();  			CompiledScript.CheckResult (prelude' false' disposeScriptOnException: true);  		} catch (Js1Exception ex) {  			if (attempts > 0 && (ex.ErrorCode == -1 || ex.ErrorCode == -2)) {  				// timeouts  				Thread.Sleep (2000);  			} else  				throw;  		}  	} while (prelude == default(IntPtr));  	return new CompiledScript (prelude);  } catch (DllNotFoundException ex) {  	Log.Info ("{0}\n{1}\n{2}"' ex.ToString ()' ex.Message' ex.StackTrace);  	throw new ApplicationException ("The projection subsystem failed to load a libjs1.so/js1.dll/... or one of its dependencies.  The original error message is: " + ex.Message' ex);  }  
Magic Number,EventStore.Projections.Core.v8,PreludeScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\PreludeScript.cs,CompileScript,The following statement contains a magic number: try {  	var attempts = RetryLimit;  	var prelude = default(IntPtr);  	do {  		attempts--;  		try {  			ScheduleTerminateExecution ();  			prelude = Js1.CompilePrelude (script' fileName' _loadModuleDelegate' _enterCancellableRegion' _exitCancellableRegion' _logDelegate);  			CancelTerminateExecution ();  			CompiledScript.CheckResult (prelude' false' disposeScriptOnException: true);  		} catch (Js1Exception ex) {  			if (attempts > 0 && (ex.ErrorCode == -1 || ex.ErrorCode == -2)) {  				// timeouts  				Thread.Sleep (2000);  			} else  				throw;  		}  	} while (prelude == default(IntPtr));  	return new CompiledScript (prelude);  } catch (DllNotFoundException ex) {  	Log.Info ("{0}\n{1}\n{2}"' ex.ToString ()' ex.Message' ex.StackTrace);  	throw new ApplicationException ("The projection subsystem failed to load a libjs1.so/js1.dll/... or one of its dependencies.  The original error message is: " + ex.Message' ex);  }  
Magic Number,EventStore.Projections.Core.v8,PreludeScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\PreludeScript.cs,CompileScript,The following statement contains a magic number: do {  	attempts--;  	try {  		ScheduleTerminateExecution ();  		prelude = Js1.CompilePrelude (script' fileName' _loadModuleDelegate' _enterCancellableRegion' _exitCancellableRegion' _logDelegate);  		CancelTerminateExecution ();  		CompiledScript.CheckResult (prelude' false' disposeScriptOnException: true);  	} catch (Js1Exception ex) {  		if (attempts > 0 && (ex.ErrorCode == -1 || ex.ErrorCode == -2)) {  			// timeouts  			Thread.Sleep (2000);  		} else  			throw;  	}  } while (prelude == default(IntPtr));  
Magic Number,EventStore.Projections.Core.v8,PreludeScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\PreludeScript.cs,CompileScript,The following statement contains a magic number: do {  	attempts--;  	try {  		ScheduleTerminateExecution ();  		prelude = Js1.CompilePrelude (script' fileName' _loadModuleDelegate' _enterCancellableRegion' _exitCancellableRegion' _logDelegate);  		CancelTerminateExecution ();  		CompiledScript.CheckResult (prelude' false' disposeScriptOnException: true);  	} catch (Js1Exception ex) {  		if (attempts > 0 && (ex.ErrorCode == -1 || ex.ErrorCode == -2)) {  			// timeouts  			Thread.Sleep (2000);  		} else  			throw;  	}  } while (prelude == default(IntPtr));  
Magic Number,EventStore.Projections.Core.v8,PreludeScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\PreludeScript.cs,CompileScript,The following statement contains a magic number: try {  	ScheduleTerminateExecution ();  	prelude = Js1.CompilePrelude (script' fileName' _loadModuleDelegate' _enterCancellableRegion' _exitCancellableRegion' _logDelegate);  	CancelTerminateExecution ();  	CompiledScript.CheckResult (prelude' false' disposeScriptOnException: true);  } catch (Js1Exception ex) {  	if (attempts > 0 && (ex.ErrorCode == -1 || ex.ErrorCode == -2)) {  		// timeouts  		Thread.Sleep (2000);  	} else  		throw;  }  
Magic Number,EventStore.Projections.Core.v8,PreludeScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\PreludeScript.cs,CompileScript,The following statement contains a magic number: try {  	ScheduleTerminateExecution ();  	prelude = Js1.CompilePrelude (script' fileName' _loadModuleDelegate' _enterCancellableRegion' _exitCancellableRegion' _logDelegate);  	CancelTerminateExecution ();  	CompiledScript.CheckResult (prelude' false' disposeScriptOnException: true);  } catch (Js1Exception ex) {  	if (attempts > 0 && (ex.ErrorCode == -1 || ex.ErrorCode == -2)) {  		// timeouts  		Thread.Sleep (2000);  	} else  		throw;  }  
Magic Number,EventStore.Projections.Core.v8,PreludeScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\PreludeScript.cs,CompileScript,The following statement contains a magic number: if (attempts > 0 && (ex.ErrorCode == -1 || ex.ErrorCode == -2)) {  	// timeouts  	Thread.Sleep (2000);  } else  	throw;  
Magic Number,EventStore.Projections.Core.v8,PreludeScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\PreludeScript.cs,CompileScript,The following statement contains a magic number: if (attempts > 0 && (ex.ErrorCode == -1 || ex.ErrorCode == -2)) {  	// timeouts  	Thread.Sleep (2000);  } else  	throw;  
Magic Number,EventStore.Projections.Core.v8,PreludeScript,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\v8\PreludeScript.cs,CompileScript,The following statement contains a magic number: Thread.Sleep (2000);  
Missing Default,EventStore.Projections.Core.Services.Management,ManagedProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Management\ManagedProjection.cs,FixupOldProjectionModes,The following switch statement is missing a default case: switch ((int)persistedState.Mode) {  case 2:  	// old continuous  	persistedState.Mode = ProjectionMode.Continuous;  	break;  case 3:  	// old persistent  	persistedState.Mode = ProjectionMode.Continuous;  	persistedState.EmitEnabled = persistedState.EmitEnabled ?? true;  	break;  }  
Missing Default,EventStore.Projections.Core.Services.Processing,EventSubscriptionBasedProjectionProcessingPhase,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\EventSubscriptionBasedProjectionProcessingPhase.cs,RecordEventOrder,The following switch statement is missing a default case: switch (_state) {  case PhaseState.Running:  	_checkpointManager.RecordEventOrder (resolvedEvent' orderCheckpointTag' completed);  	break;  case PhaseState.Stopped:  	_logger.Error ("Should not receive events in stopped state anymore");  	completed ();  	// allow collecting events for debugging  	break;  }  
Missing Default,EventStore.Projections.Core.Services.Processing,CheckpointTag,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CheckpointTag.cs,WriteTo,The following switch statement is missing a default case: switch (Mode_) {  case Mode.Phase:  	jsonWriter.WritePropertyName ("$cp");  	jsonWriter.WriteValue (Completed);  	break;  case Mode.Position:  case Mode.EventTypeIndex:  	jsonWriter.WritePropertyName ("$c");  	jsonWriter.WriteValue (CommitPosition.GetValueOrDefault ());  	jsonWriter.WritePropertyName ("$p");  	jsonWriter.WriteValue (PreparePosition.GetValueOrDefault ());  	if (Mode_ == Mode.EventTypeIndex)  		goto case Mode.MultiStream;  	break;  case Mode.PreparePosition:  	jsonWriter.WritePropertyName ("$p");  	jsonWriter.WriteValue (PreparePosition.GetValueOrDefault ());  	break;  case Mode.Stream:  case Mode.MultiStream:  	jsonWriter.WritePropertyName ("$s");  	jsonWriter.WriteStartObject ();  	foreach (var stream in Streams) {  		jsonWriter.WritePropertyName (stream.Key);  		jsonWriter.WriteValue (stream.Value);  	}  	jsonWriter.WriteEndObject ();  	break;  case Mode.ByStream:  	jsonWriter.WritePropertyName ("$m");  	jsonWriter.WriteValue ("bs");  	jsonWriter.WritePropertyName ("$c");  	jsonWriter.WriteValue (CommitPosition.GetValueOrDefault ());  	jsonWriter.WritePropertyName ("$s");  	jsonWriter.WriteStartArray ();  	jsonWriter.WriteStartObject ();  	jsonWriter.WritePropertyName (CatalogStream);  	jsonWriter.WriteValue (CatalogPosition);  	jsonWriter.WriteEndObject ();  	if (!string.IsNullOrEmpty (DataStream)) {  		jsonWriter.WriteStartObject ();  		jsonWriter.WritePropertyName (DataStream);  		jsonWriter.WriteValue (DataPosition);  		jsonWriter.WriteEndObject ();  	}  	jsonWriter.WriteEndArray ();  	break;  }  
Missing Default,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,GoToState,The following switch statement is missing a default case: switch (state) {  case State.Stopped:  case State.Faulted:  case State.PhaseCompleted:  	if (wasStarted && !wasStopped)  		_checkpointManager.Stopped ();  	break;  case State.Stopping:  case State.FaultedStopping:  case State.CompletingPhase:  	if (wasStarted && !wasStopping)  		_checkpointManager.Stopping ();  	break;  }  
Missing Default,EventStore.Projections.Core.Services.Processing,CoreProjection,F:\newReposMay17\EventStore_EventStore\src\EventStore.Projections.Core\Services\Processing\CoreProjection.cs,CheckpointCompleted,The following switch statement is missing a default case: switch (_state) {  case State.Stopping:  	GoToState (State.Stopped);  	break;  case State.FaultedStopping:  	GoToState (State.Faulted);  	break;  case State.CompletingPhase:  	GoToState (State.PhaseCompleted);  	break;  }  
