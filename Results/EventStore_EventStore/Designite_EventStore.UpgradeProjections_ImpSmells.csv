Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,EventStore.UpgradeProjections,UpgradeProjectionsWorker,C:\repos\EventStore_EventStore\etc\EventStore.UpgradeProjections\UpgradeProjectionsWorker.cs,UpgradeProjectionsWorker,The method has 5 parameters. Parameters: ipAddress' port' userName' password' runUpgrade
Long Statement,EventStore.UpgradeProjections,UpgradeProjectionsWorker,C:\repos\EventStore_EventStore\etc\EventStore.UpgradeProjections\UpgradeProjectionsWorker.cs,Connect,The length of the statement  "            _connection.AppendToStreamAsync("hello"' ExpectedVersion.Any' new EventData(Guid.NewGuid()' "Hello"' false' new byte[0]' new byte[0])); " is 135.
Long Statement,EventStore.UpgradeProjections,UpgradeProjectionsWorker,C:\repos\EventStore_EventStore\etc\EventStore.UpgradeProjections\UpgradeProjectionsWorker.cs,LoadProjectionCatalog,The length of the statement  "                projections = _connection.ReadStreamEventsForwardAsync("$projections-$all"' _lastCatalogEventNumber' 100' false' _credentials).Result; " is 134.
Empty Catch Block,EventStore.UpgradeProjections,UpgradeProjectionsWorker,C:\repos\EventStore_EventStore\etc\EventStore.UpgradeProjections\UpgradeProjectionsWorker.cs,Log,The method has an empty catch block.
Magic Number,EventStore.UpgradeProjections,UpgradeProjectionOptions,C:\repos\EventStore_EventStore\etc\EventStore.UpgradeProjections\UpgradeProjections.cs,UpgradeProjectionOptions,The following statement contains a magic number: Port = 1113;
Magic Number,EventStore.UpgradeProjections,UpgradeProjectionsWorker,C:\repos\EventStore_EventStore\etc\EventStore.UpgradeProjections\UpgradeProjectionsWorker.cs,LoadProjectionCatalog,The following statement contains a magic number: do              {                  Log("Reading catalog chunk...");                  projections = _connection.ReadStreamEventsForwardAsync("$projections-$all"' _lastCatalogEventNumber' 100' false' _credentials).Result;                  Log("{0} events loaded"' projections.Events.Length);                  foreach (var e in projections.Events)                  {                      if (e.Event.EventType == "$stream-created-implicit")                          continue;                      var projectionName = Encoding.UTF8.GetString(e.Event.Data);                      if (e.Event.EventType == ProjectionCreatedOld)                      {                          Log("Old style projection registration found for: {0}"' projectionName);                          _oldStyleProjections.Add(projectionName);                      }                      else if (e.Event.EventType == ProjectionCreatedNew)                      {                          Log("New style projection registration found for: {0}"' projectionName);                          if (_oldStyleProjections.Contains(projectionName))                          {                              Log("Old style registration for the {0} is already upgraded"' projectionName);                              _oldStyleProjections.Remove(projectionName);                          }                      }                      else                      {                          Log("Skipping event: {0}"' e.Event.EventType);                      }                      _existingProjections.Add(projectionName);                      _lastCatalogEventNumber = e.Event.EventNumber;                  }              } while (!projections.IsEndOfStream);
Magic Number,EventStore.UpgradeProjections,UpgradeProjectionsWorker,C:\repos\EventStore_EventStore\etc\EventStore.UpgradeProjections\UpgradeProjectionsWorker.cs,UpgradeProjectionPartitionCheckpoints,The following statement contains a magic number: do              {                  slice = _connection.ReadAllEventsForwardAsync(@from' 100' false' _credentials).Result;                  DisplayTfScanProgress(slice);                  foreach (var @event in slice.Events)                      if (@event.OriginalEventNumber == 0)                          UpgradeStreamIfPartitionCheckpoint(@event.OriginalStreamId);                  from = slice.NextPosition;              } while (!slice.IsEndOfStream);
Magic Number,EventStore.UpgradeProjections,UpgradeProjectionsWorker,C:\repos\EventStore_EventStore\etc\EventStore.UpgradeProjections\UpgradeProjectionsWorker.cs,DisplayTfScanProgress,The following statement contains a magic number: if (slice.Events.Length > 0)              {                  var percent =                      Math.Round(                          (float) slice.Events[slice.Events.Length - 1].OriginalPosition.Value.PreparePosition/_lastTfPosition*100);                  if (percent != _oldTfScanPercent)                  {                      _oldTfScanPercent = percent;                      Console.WriteLine("{0'2}% completed."' percent);                  }              }
