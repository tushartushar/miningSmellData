Implementation smell,Namespace,Class,File,Method,Description
Complex Method,EventStore.ClientAPI.Embedded,EmbeddedSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriptionBase.cs,DropSubscription,Cyclomatic complexity of the method is 9
Long Parameter List,EventStore.ClientAPI.Embedded,AuthenticationExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\AuthenticationExtensions.cs,PublishWithAuthentication,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EmbeddedEventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedEventStoreConnection.cs,Create,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EmbeddedEventStorePersistentSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedEventStorePersistentSubscription.cs,EmbeddedEventStorePersistentSubscription,The method has 11 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EmbeddedEventStorePersistentSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedEventStorePersistentSubscription.cs,StartSubscription,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EmbeddedPersistentSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedPersistentSubscription.cs,EmbeddedPersistentSubscription,The method has 13 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EmbeddedSubscriber,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriber.cs,StartSubscription,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EmbeddedSubscriber,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriber.cs,StartPersistentSubscription,The method has 10 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EmbeddedSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscription.cs,EmbeddedSubscription,The method has 10 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EmbeddedSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriptionBase.cs,EmbeddedSubscriptionBase,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,EventStoreEmbeddedNodeConnection,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadStreamEventsForwardAsync,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadStreamEventsBackwardAsync,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToStreamAsync,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToStreamFrom,The method has 9 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToStreamFrom,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ConnectToPersistentSubscription,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ConnectToPersistentSubscriptionAsync,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToAllFrom,The method has 8 parameters.
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToAllFrom,The method has 6 parameters.
Long Statement,EventStore.ClientAPI.Embedded,AuthenticationExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\AuthenticationExtensions.cs,PublishWithAuthentication,The length of the statement  "	authenticationProvider.Authenticate (new EmbeddedAuthenticationRequest (userCredentials.Username' userCredentials.Password' setException' user => { " is 147.
Long Statement,EventStore.ClientAPI.Embedded,ClientMessageConverterExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\ClientMessageConverterExtensions.cs,ConvertToClientResolvedIndexEvent,The length of the statement  "	return new ClientMessage.ResolvedIndexedEvent (@event.Event.ToClientMessageEventRecord ()' @event.Link.ToClientMessageEventRecord ()); " is 134.
Long Statement,EventStore.ClientAPI.Embedded,ClientMessageConverterExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\ClientMessageConverterExtensions.cs,ConvertToClientResolvedEvent,The length of the statement  "	return new ClientMessage.ResolvedEvent (@event.Event.ToClientMessageEventRecord ()' @event.Link.ToClientMessageEventRecord ()' @event.OriginalPosition.Value.CommitPosition' @event.OriginalPosition.Value.PreparePosition); " is 220.
Long Statement,EventStore.ClientAPI.Embedded,ClientMessageConverterExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\ClientMessageConverterExtensions.cs,ToClientMessageEventRecord,The length of the statement  "	return new ClientMessage.EventRecord (eventRecord.EventStreamId' eventRecord.EventNumber' eventRecord.EventId.ToByteArray ()' eventRecord.EventType' eventRecord.IsJson ? 1 : 0' eventRecord.IsJson ? 1 : 0' eventRecord.Data' eventRecord.Metadata' eventRecord.TimeStamp.ToBinary ()' (long)(eventRecord.TimeStamp - new DateTime (1970' 1' 1)).TotalMilliseconds); " is 357.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedEventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedEventStoreConnection.cs,Create,The length of the statement  "	return Create (eventStore.MainQueue' eventStore.MainBus' eventStore.InternalAuthenticationProvider' connectionSettings' connectionName); " is 136.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedEventStorePersistentSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedEventStorePersistentSubscription.cs,StartSubscription,The length of the statement  "	_subscriptions.StartPersistentSubscription (Guid.NewGuid ()' source' subscriptionId' streamId' userCredentials' bufferSize' onEventAppeared' onSubscriptionDropped' settings.MaxRetries' settings.OperationTimeout); " is 212.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedPersistentSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedPersistentSubscription.cs,Start,The length of the statement  "	Publisher.PublishWithAuthentication (_authenticationProvider' _userCredentials' ex => DropSubscription (EventStore.Core.Services.SubscriptionDropReason.AccessDenied' ex)' user => new ClientMessage.ConnectToPersistentSubscription (correlationId' correlationId' new PublishEnvelope (Publisher' true)' ConnectionId' _subscriptionId' StreamId' _bufferSize' String.Empty' user)); " is 374.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedPersistentSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedPersistentSubscription.cs,NotifyEventsProcessed,The length of the statement  "	Publisher.PublishWithAuthentication (_authenticationProvider' _userCredentials' ex => DropSubscription (EventStore.Core.Services.SubscriptionDropReason.AccessDenied' ex)' user => new ClientMessage.PersistentSubscriptionAckEvents (CorrelationId' CorrelationId' new PublishEnvelope (Publisher' true)' _subscriptionId' processedEvents' user)); " is 340.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedPersistentSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedPersistentSubscription.cs,NotifyEventsFailed,The length of the statement  "	Publisher.PublishWithAuthentication (_authenticationProvider' _userCredentials' ex => DropSubscription (EventStore.Core.Services.SubscriptionDropReason.AccessDenied' ex)' user => new ClientMessage.PersistentSubscriptionNackEvents (CorrelationId' CorrelationId' new PublishEnvelope (Publisher' true)' _subscriptionId' reason' (ClientMessage.PersistentSubscriptionNackEvents.NakAction)action' processedEvents' user)); " is 415.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedResponderBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedResponderBase.cs,InspectMessage,The length of the statement  "			Fail (new NoResultException (String.Format ("Expected response of {0}' received {1} instead."' typeof(TResponse)' message.GetType ()))); " is 136.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedSubscriber,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriber.cs,Handle,The length of the statement  "	ConfirmSubscription (message.SubscriptionId' message.CorrelationId' message.LastCommitPosition' message.LastEventNumber); " is 121.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedSubscriber,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriber.cs,StartSubscription,The length of the statement  "	var subscription = new EmbeddedSubscription (_log' _publisher' _connectionId' source' stream' userCredentials' _authenticationProvider' resolveLinkTos' eventAppeared' subscriptionDropped); " is 188.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedSubscriber,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriber.cs,StartPersistentSubscription,The length of the statement  "	var subscription = new EmbeddedPersistentSubscription (_log' _publisher' _connectionId' source' subscriptionId' streamId' userCredentials' _authenticationProvider' bufferSize' eventAppeared' subscriptionDropped' maxRetries' operationTimeout); " is 242.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscription.cs,Start,The length of the statement  "	Publisher.PublishWithAuthentication (_authenticationProvider' _userCredentials' ex => DropSubscription (EventStore.Core.Services.SubscriptionDropReason.AccessDenied' ex)' user => new ClientMessage.SubscribeToStream (correlationId' correlationId' new PublishEnvelope (Publisher' true)' ConnectionId' StreamId' _resolveLinkTos' user)); " is 333.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriptionBase.cs,DropSubscription,The length of the statement  "		DropSubscription (SubscriptionDropReason.AccessDenied' ex ?? new AccessDeniedException (string.Format ("Subscription to '{0}' failed due to access denied."' StreamId == string.Empty ? "<all>" : StreamId))); " is 206.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriptionBase.cs,ConfirmSubscription,The length of the statement  "		throw new ArgumentOutOfRangeException ("lastCommitPosition"' string.Format ("Invalid lastCommitPosition {0} on subscription confirmation."' lastCommitPosition)); " is 161.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriptionBase.cs,DropSubscription,The length of the statement  "			Publisher.Publish (new ClientMessage.UnsubscribeFromStream (Guid.NewGuid ()' CorrelationId' new NoopEnvelope ()' SystemAccount.Principal)); " is 139.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,DeleteStreamAsync,The length of the statement  "	_publisher.PublishWithAuthentication (_authenticationProvider' GetUserCredentials (_settings' userCredentials)' source.SetException' user => new ClientMessage.DeleteStream (corrId' corrId' envelope' false' stream' expectedVersion' hardDelete' user)); " is 250.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,AppendToStreamAsync,The length of the statement  "	return AppendToStreamAsync (stream' expectedVersion' (IEnumerable<EventData>)events' GetUserCredentials (_settings' userCredentials)); " is 134.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,AppendToStreamAsync,The length of the statement  "	_publisher.PublishWithAuthentication (_authenticationProvider' GetUserCredentials (_settings' userCredentials)' source.SetException' user => new ClientMessage.WriteEvents (corrId' corrId' envelope' false' stream' expectedVersion' events.ConvertToEvents ()' user)); " is 264.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ConditionalAppendToStreamAsync,The length of the statement  "	_publisher.PublishWithAuthentication (_authenticationProvider' GetUserCredentials (_settings' userCredentials)' source.SetException' user => new ClientMessage.WriteEvents (corrId' corrId' envelope' false' stream' expectedVersion' events.ConvertToEvents ()' user)); " is 264.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,StartTransactionAsync,The length of the statement  "	var envelope = new EmbeddedResponseEnvelope (new EmbeddedResponders.TransactionStart (source' this' stream' expectedVersion)); " is 126.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,StartTransactionAsync,The length of the statement  "	_publisher.PublishWithAuthentication (_authenticationProvider' GetUserCredentials (_settings' userCredentials)' source.SetException' user => new ClientMessage.TransactionStart (corrId' corrId' envelope' false' stream' expectedVersion' user)); " is 242.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,TransactionalWriteAsync,The length of the statement  "	_publisher.PublishWithAuthentication (_authenticationProvider' GetUserCredentials (_settings' userCredentials)' source.SetException' user => new ClientMessage.TransactionWrite (corrId' corrId' envelope' false' transaction.TransactionId' events.ConvertToEvents ()' user)); " is 271.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,CommitTransactionAsync,The length of the statement  "	_publisher.PublishWithAuthentication (_authenticationProvider' GetUserCredentials (_settings' userCredentials)' source.SetException' user => new ClientMessage.TransactionCommit (corrId' corrId' envelope' false' transaction.TransactionId' user)); " is 245.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadEventAsync,The length of the statement  "	_publisher.PublishWithAuthentication (_authenticationProvider' GetUserCredentials (_settings' userCredentials)' source.SetException' user => new ClientMessage.ReadEvent (corrId' corrId' envelope' stream' eventNumber' resolveLinkTos' false' user)); " is 247.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadStreamEventsForwardAsync,The length of the statement  "		throw new ArgumentException (string.Format ("Count should be less than {0}. For larger reads you should page."' Consts.MaxReadSize)); " is 133.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadStreamEventsForwardAsync,The length of the statement  "	_publisher.PublishWithAuthentication (_authenticationProvider' GetUserCredentials (_settings' userCredentials)' source.SetException' user => new ClientMessage.ReadStreamEventsForward (corrId' corrId' envelope' stream' start' count' resolveLinkTos' false' null' user)); " is 268.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadStreamEventsBackwardAsync,The length of the statement  "		throw new ArgumentException (string.Format ("Count should be less than {0}. For larger reads you should page."' Consts.MaxReadSize)); " is 133.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadStreamEventsBackwardAsync,The length of the statement  "	_publisher.PublishWithAuthentication (_authenticationProvider' GetUserCredentials (_settings' userCredentials)' source.SetException' user => new ClientMessage.ReadStreamEventsBackward (corrId' corrId' envelope' stream' start' count' resolveLinkTos' false' null' user)); " is 269.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadAllEventsForwardAsync,The length of the statement  "		throw new ArgumentException (string.Format ("Count should be less than {0}. For larger reads you should page."' Consts.MaxReadSize)); " is 133.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadAllEventsForwardAsync,The length of the statement  "	_publisher.PublishWithAuthentication (_authenticationProvider' GetUserCredentials (_settings' userCredentials)' source.SetException' user => new ClientMessage.ReadAllEventsForward (corrId' corrId' envelope' position.CommitPosition' position.PreparePosition' maxCount' resolveLinkTos' false' null' user)); " is 304.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadAllEventsBackwardAsync,The length of the statement  "		throw new ArgumentException (string.Format ("Count should be less than {0}. For larger reads you should page."' Consts.MaxReadSize)); " is 133.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadAllEventsBackwardAsync,The length of the statement  "	_publisher.PublishWithAuthentication (_authenticationProvider' GetUserCredentials (_settings' userCredentials)' source.SetException' user => new ClientMessage.ReadAllEventsBackward (corrId' corrId' envelope' position.CommitPosition' position.PreparePosition' maxCount' resolveLinkTos' false' null' user)); " is 305.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToStreamAsync,The length of the statement  "	_subscriptions.StartSubscription (corrId' source' stream' GetUserCredentials (_settings' userCredentials)' resolveLinkTos' eventAppeared' subscriptionDropped); " is 159.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToStreamFrom,The length of the statement  "	var settings = new CatchUpSubscriptionSettings (Consts.CatchUpDefaultMaxPushQueueSize' readBatchSize' _settings.VerboseLogging' resolveLinkTos' subscriptionName); " is 162.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToStreamFrom,The length of the statement  "	return SubscribeToStreamFrom (stream' lastCheckpoint' settings' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials); " is 140.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToStreamFrom,The length of the statement  "	var catchUpSubscription = new EventStoreStreamCatchUpSubscription (this' _settings.Log' stream' lastCheckpoint' userCredentials' eventAppeared' liveProcessingStarted' subscriptionDropped' settings); " is 198.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToAllAsync,The length of the statement  "	_subscriptions.StartSubscription (corrId' source' string.Empty' GetUserCredentials (_settings' userCredentials)' resolveLinkTos' eventAppeared' subscriptionDropped); " is 165.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ConnectToPersistentSubscription,The length of the statement  "	var subscription = new EmbeddedEventStorePersistentSubscription (groupName' stream' eventAppeared' subscriptionDropped' GetUserCredentials (_settings' userCredentials)' _settings.Log' _settings.VerboseLogging' _settings' _subscriptions' bufferSize' autoAck); " is 258.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ConnectToPersistentSubscriptionAsync,The length of the statement  "	var subscription = new EmbeddedEventStorePersistentSubscription (groupName' stream' eventAppeared' subscriptionDropped' GetUserCredentials (_settings' userCredentials)' _settings.Log' _settings.VerboseLogging' _settings' _subscriptions' bufferSize' autoAck); " is 258.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToAllFrom,The length of the statement  "	var settings = new CatchUpSubscriptionSettings (Consts.CatchUpDefaultMaxPushQueueSize' readBatchSize' _settings.VerboseLogging' resolveLinkTos' subscriptionName); " is 162.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToAllFrom,The length of the statement  "	return SubscribeToAllFrom (lastCheckpoint' settings' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials); " is 129.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToAllFrom,The length of the statement  "	var catchUpSubscription = new EventStoreAllCatchUpSubscription (this' _settings.Log' lastCheckpoint' userCredentials' eventAppeared' liveProcessingStarted' subscriptionDropped' settings); " is 187.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,CreatePersistentSubscriptionAsync,The length of the statement  "	var envelope = new EmbeddedResponseEnvelope (new EmbeddedResponders.CreatePersistentSubscription (source' stream' groupName)); " is 126.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,CreatePersistentSubscriptionAsync,The length of the statement  "	_publisher.PublishWithAuthentication (_authenticationProvider' GetUserCredentials (_settings' credentials)' source.SetException' user => new ClientMessage.CreatePersistentSubscription (corrId' corrId' envelope' stream' groupName' settings.ResolveLinkTos' settings.StartFrom' (int)settings.MessageTimeout.TotalMilliseconds' settings.ExtraStatistics' settings.MaxRetryCount' settings.HistoryBufferSize' settings.LiveBufferSize' settings.ReadBatchSize' (int)settings.CheckPointAfter.TotalMilliseconds' settings.MinCheckPointCount' settings.MaxCheckPointCount' settings.MaxSubscriberCount' settings.NamedConsumerStrategy' user' credentials == null ? null : credentials.Username' credentials == null ? null : credentials.Password)); " is 727.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,UpdatePersistentSubscriptionAsync,The length of the statement  "	var envelope = new EmbeddedResponseEnvelope (new EmbeddedResponders.UpdatePersistentSubscription (source' stream' groupName)); " is 126.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,UpdatePersistentSubscriptionAsync,The length of the statement  "	_publisher.PublishWithAuthentication (_authenticationProvider' GetUserCredentials (_settings' credentials)' source.SetException' user => new ClientMessage.UpdatePersistentSubscription (corrId' corrId' envelope' stream' groupName' settings.ResolveLinkTos' settings.StartFrom' (int)settings.MessageTimeout.TotalMilliseconds' settings.ExtraStatistics' settings.MaxRetryCount' settings.HistoryBufferSize' settings.LiveBufferSize' settings.ReadBatchSize' (int)settings.CheckPointAfter.TotalMilliseconds' settings.MinCheckPointCount' settings.MaxCheckPointCount' settings.MaxSubscriberCount' settings.NamedConsumerStrategy' user' credentials == null ? null : credentials.Username' credentials == null ? null : credentials.Password)); " is 727.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,DeletePersistentSubscriptionAsync,The length of the statement  "	var envelope = new EmbeddedResponseEnvelope (new EmbeddedResponders.DeletePersistentSubscription (source' stream' groupName)); " is 126.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,DeletePersistentSubscriptionAsync,The length of the statement  "	_publisher.PublishWithAuthentication (_authenticationProvider' GetUserCredentials (_settings' userCredentials)' source.SetException' user => new ClientMessage.DeletePersistentSubscription (corrId' corrId' envelope' stream' groupName' user)); " is 241.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SetStreamMetadataAsync,The length of the statement  "	return SetStreamMetadataAsync (stream' expectedMetastreamVersion' metadata.AsJsonBytes ()' GetUserCredentials (_settings' userCredentials)); " is 140.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SetStreamMetadataAsync,The length of the statement  "		throw new ArgumentException (string.Format ("Setting metadata for metastream '{0}' is not supported."' stream)' "stream"); " is 122.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SetStreamMetadataAsync,The length of the statement  "	var metaevent = new EventData (Guid.NewGuid ()' SystemEventTypes.StreamMetadata' true' metadata ?? Empty.ByteArray' null); " is 122.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SetStreamMetadataAsync,The length of the statement  "	var envelope = new EmbeddedResponseEnvelope (new EmbeddedResponders.AppendToStream (source' metastream' expectedMetastreamVersion)); " is 132.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SetStreamMetadataAsync,The length of the statement  "	_publisher.PublishWithAuthentication (_authenticationProvider' GetUserCredentials (_settings' userCredentials)' source.SetException' user => new ClientMessage.WriteEvents (corrId' corrId' envelope' false' metastream' expectedMetastreamVersion' metaevent.ConvertToEvent ()' user)); " is 280.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,GetStreamMetadataAsRawBytesAsync,The length of the statement  "	return ReadEventAsync (SystemStreams.MetastreamOf (stream)' -1' false' GetUserCredentials (_settings' userCredentials)).ContinueWith (t => { " is 140.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SetSystemSettingsAsync,The length of the statement  "	return AppendToStreamAsync (SystemStreams.SettingsStream' ExpectedVersion.Any' GetUserCredentials (_settings' userCredentials)' new EventData (Guid.NewGuid ()' SystemEventTypes.Settings' true' settings.ToJsonBytes ()' null)); " is 225.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,TransactionalWriteAsync,The length of the statement  "	_publisher.PublishWithAuthentication (_authenticationProvider' GetUserCredentials (_settings' userCredentials)' source.SetException' user => new ClientMessage.TransactionWrite (corrId' corrId' envelope' false' transaction.TransactionId' events.ConvertToEvents ()' user)); " is 271.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,CommitTransactionAsync,The length of the statement  "	_publisher.PublishWithAuthentication (_authenticationProvider' GetUserCredentials (_settings' userCredentials)' source.SetException' user => new ClientMessage.TransactionCommit (corrId' corrId' envelope' false' transaction.TransactionId' user)); " is 245.
Magic Number,EventStore.ClientAPI.Embedded,ClientMessageConverterExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\ClientMessageConverterExtensions.cs,ToClientMessageEventRecord,The following statement contains a magic number: return new ClientMessage.EventRecord (eventRecord.EventStreamId' eventRecord.EventNumber' eventRecord.EventId.ToByteArray ()' eventRecord.EventType' eventRecord.IsJson ? 1 : 0' eventRecord.IsJson ? 1 : 0' eventRecord.Data' eventRecord.Metadata' eventRecord.TimeStamp.ToBinary ()' (long)(eventRecord.TimeStamp - new DateTime (1970' 1' 1)).TotalMilliseconds);  
Missing Default,EventStore.ClientAPI.Embedded,EmbeddedSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriptionBase.cs,DropSubscription,The following switch statement is missing a default case: switch (reason) {  case Core.Services.SubscriptionDropReason.AccessDenied:  	DropSubscription (SubscriptionDropReason.AccessDenied' ex ?? new AccessDeniedException (string.Format ("Subscription to '{0}' failed due to access denied."' StreamId == string.Empty ? "<all>" : StreamId)));  	break;  case Core.Services.SubscriptionDropReason.Unsubscribed:  	Unsubscribe ();  	break;  case Core.Services.SubscriptionDropReason.NotFound:  	DropSubscription (SubscriptionDropReason.NotFound' new ArgumentException ("Subscription not found"));  	break;  }  
