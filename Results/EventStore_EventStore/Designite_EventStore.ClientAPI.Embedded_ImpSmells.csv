Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,EventStore.ClientAPI.Embedded,AuthenticationExtensions,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\AuthenticationExtensions.cs,PublishWithAuthentication,The method has 5 parameters. Parameters: publisher' authenticationProvider' userCredentials' setException' onUser
Long Parameter List,EventStore.ClientAPI.Embedded,EmbeddedEventStoreConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedEventStoreConnection.cs,Create,The method has 5 parameters. Parameters: queue' bus' authenticationProvider' connectionSettings' connectionName
Long Parameter List,EventStore.ClientAPI.Embedded,EmbeddedEventStorePersistentSubscription,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedEventStorePersistentSubscription.cs,EmbeddedEventStorePersistentSubscription,The method has 11 parameters. Parameters: subscriptionId' streamId' eventAppeared' subscriptionDropped' userCredentials' log' verboseLogging' settings' subscriptions' bufferSize' autoAck
Long Parameter List,EventStore.ClientAPI.Embedded,EmbeddedEventStorePersistentSubscription,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedEventStorePersistentSubscription.cs,StartSubscription,The method has 7 parameters. Parameters: subscriptionId' streamId' bufferSize' userCredentials' onEventAppeared' onSubscriptionDropped' settings
Long Parameter List,EventStore.ClientAPI.Embedded,EmbeddedPersistentSubscription,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedPersistentSubscription.cs,EmbeddedPersistentSubscription,The method has 13 parameters. Parameters: log' publisher' connectionId' source' subscriptionId' streamId' userCredentials' authenticationProvider' bufferSize' eventAppeared' subscriptionDropped' maxRetries' operationTimeout
Long Parameter List,EventStore.ClientAPI.Embedded,EmbeddedSubscriber,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriber.cs,StartSubscription,The method has 7 parameters. Parameters: correlationId' source' stream' userCredentials' resolveLinkTos' eventAppeared' subscriptionDropped
Long Parameter List,EventStore.ClientAPI.Embedded,EmbeddedSubscriber,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriber.cs,StartPersistentSubscription,The method has 10 parameters. Parameters: correlationId' source' subscriptionId' streamId' userCredentials' bufferSize' eventAppeared' subscriptionDropped' maxRetries' operationTimeout
Long Parameter List,EventStore.ClientAPI.Embedded,EmbeddedSubscription,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscription.cs,EmbeddedSubscription,The method has 10 parameters. Parameters: log' publisher' connectionId' source' streamId' userCredentials' authenticationProvider' resolveLinkTos' eventAppeared' subscriptionDropped
Long Parameter List,EventStore.ClientAPI.Embedded,EmbeddedSubscriptionBase<TSubscription>,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriptionBase.cs,EmbeddedSubscriptionBase,The method has 6 parameters. Parameters: log' publisher' connectionId' source' streamId' subscriptionDropped
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,EventStoreEmbeddedNodeConnection,The method has 5 parameters. Parameters: settings' connectionName' publisher' bus' authenticationProvider
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadStreamEventsForwardAsync,The method has 5 parameters. Parameters: stream' start' count' resolveLinkTos' userCredentials
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadStreamEventsBackwardAsync,The method has 5 parameters. Parameters: stream' start' count' resolveLinkTos' userCredentials
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToStreamAsync,The method has 5 parameters. Parameters: stream' resolveLinkTos' eventAppeared' subscriptionDropped' userCredentials
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToStreamFrom,The method has 9 parameters. Parameters: stream' lastCheckpoint' resolveLinkTos' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials' readBatchSize' subscriptionName
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToStreamFrom,The method has 7 parameters. Parameters: stream' lastCheckpoint' settings' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ConnectToPersistentSubscription,The method has 7 parameters. Parameters: stream' groupName' eventAppeared' subscriptionDropped' userCredentials' bufferSize' autoAck
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ConnectToPersistentSubscriptionAsync,The method has 7 parameters. Parameters: stream' groupName' eventAppeared' subscriptionDropped' userCredentials' bufferSize' autoAck
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToAllFrom,The method has 8 parameters. Parameters: lastCheckpoint' resolveLinkTos' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials' readBatchSize' subscriptionName
Long Parameter List,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToAllFrom,The method has 6 parameters. Parameters: lastCheckpoint' settings' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedEventStoreConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedEventStoreConnection.cs,Create,The length of the statement  "            return Create(eventStore.MainQueue' eventStore.MainBus' eventStore.InternalAuthenticationProvider' connectionSettings' connectionName); " is 135.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedEventStorePersistentSubscription,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedEventStorePersistentSubscription.cs,StartSubscription,The length of the statement  "            var source = new TaskCompletionSource<PersistentEventStoreSubscription>(TaskCreationOptions.RunContinuationsAsynchronously); " is 124.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedEventStorePersistentSubscription,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedEventStorePersistentSubscription.cs,StartSubscription,The length of the statement  "            _subscriptions.StartPersistentSubscription(Guid.NewGuid()' source' subscriptionId' streamId' userCredentials' bufferSize' onEventAppeared' " is 138.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedResponderBase<TResult;TResponse>,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedResponderBase.cs,InspectMessage,The length of the statement  "                    Fail(new NoResultException(String.Format("Expected response of {0}' received {1} instead."' typeof(TResponse)' message.GetType()))); " is 132.
Long Statement,EventStore.ClientAPI.Embedded,AppendToStream,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedResponders.cs,InspectResponse,The length of the statement  "                        var err = string.Format("Append failed due to WrongExpectedVersion. Stream: {0}' Expected version: {1}"' _stream' _expectedVersion); " is 132.
Long Statement,EventStore.ClientAPI.Embedded,ConditionalAppendToStream,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedResponders.cs,TransformResponse,The length of the statement  "                return new ConditionalWriteResult(response.LastEventNumber' new Position(response.PreparePosition' response.CommitPosition)); " is 125.
Long Statement,EventStore.ClientAPI.Embedded,ReadEvent,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedResponders.cs,TransformResponse,The length of the statement  "                return new EventReadResult(Convert(response.Result)' _stream' _eventNumber' response.Record.ConvertToClientResolvedIndexEvent()); " is 129.
Long Statement,EventStore.ClientAPI.Embedded,TransactionCommit,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedResponders.cs,InspectResponse,The length of the statement  "                        var err = string.Format("Commit transaction failed due to WrongExpectedVersion. TransactionID: {0}."' response.TransactionId); " is 126.
Long Statement,EventStore.ClientAPI.Embedded,TransactionStart,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedResponders.cs,InspectResponse,The length of the statement  "                        var err = string.Format("Start transaction failed due to WrongExpectedVersion. Stream: {0}' Expected version: {1}."' _stream' _expectedVersion); " is 144.
Long Statement,EventStore.ClientAPI.Embedded,CreatePersistentSubscription,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedResponders.cs,InspectResponse,The length of the statement  "                        Fail(new InvalidOperationException(String.Format("Subscription group {0} on stream {1} failed '{2}'"' _groupName' _stream' response.Reason))); " is 142.
Long Statement,EventStore.ClientAPI.Embedded,CreatePersistentSubscription,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedResponders.cs,InspectResponse,The length of the statement  "                        Fail(new InvalidOperationException(String.Format("Subscription group {0} on stream {1} already exists"' _groupName' _stream))); " is 127.
Long Statement,EventStore.ClientAPI.Embedded,UpdatePersistentSubscription,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedResponders.cs,InspectResponse,The length of the statement  "                        Fail(new InvalidOperationException(String.Format("Subscription group {0} on stream {1} failed '{2}'"' _groupName' _stream' response.Reason))); " is 142.
Long Statement,EventStore.ClientAPI.Embedded,UpdatePersistentSubscription,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedResponders.cs,InspectResponse,The length of the statement  "                        Fail(new InvalidOperationException(String.Format("Subscription group {0} on stream {1} does not exist"' _groupName' _stream))); " is 127.
Long Statement,EventStore.ClientAPI.Embedded,DeletePersistentSubscription,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedResponders.cs,InspectResponse,The length of the statement  "                        Fail(new InvalidOperationException(String.Format("Subscription group {0} on stream {1} failed '{2}'"' _groupName' _stream' response.Reason))); " is 142.
Long Statement,EventStore.ClientAPI.Embedded,DeletePersistentSubscription,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedResponders.cs,InspectResponse,The length of the statement  "                        Fail(new InvalidOperationException(String.Format("Subscription group {0} on stream {1} does not exist"' _groupName' _stream))); " is 127.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedSubscriber,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriber.cs,Handle,The length of the statement  "            ConfirmSubscription(message.SubscriptionId' message.CorrelationId' message.LastCommitPosition' message.LastEventNumber); " is 120.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedSubscriptionBase<TSubscription>,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriptionBase.cs,ConfirmSubscription,The length of the statement  "                throw new ArgumentOutOfRangeException("lastCommitPosition"' string.Format("Invalid lastCommitPosition {0} on subscription confirmation."' lastCommitPosition)); " is 159.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedSubscriptionBase<TSubscription>,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriptionBase.cs,DropSubscription,The length of the statement  "                    if (exception == null) throw new Exception(string.Format("No exception provided for subscription drop reason '{0}"' reason)); " is 125.
Long Statement,EventStore.ClientAPI.Embedded,EmbeddedSubscriptionBase<TSubscription>,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriptionBase.cs,DropSubscription,The length of the statement  "                    Publisher.Publish(new ClientMessage.UnsubscribeFromStream(Guid.NewGuid()' CorrelationId' new NoopEnvelope()' SystemAccount.Principal)); " is 135.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,DeleteStreamAsync,The length of the statement  "            _publisher.PublishWithAuthentication(_authenticationProvider' GetUserCredentials(_settings' userCredentials)' source.SetException' user => new ClientMessage.DeleteStream(corrId' corrId' envelope' false' " is 202.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,AppendToStreamAsync,The length of the statement  "            return AppendToStreamAsync(stream' expectedVersion' (IEnumerable<EventData>)events' GetUserCredentials(_settings' userCredentials)); " is 132.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,AppendToStreamAsync,The length of the statement  "            _publisher.PublishWithAuthentication(_authenticationProvider' GetUserCredentials(_settings' userCredentials)' source.SetException' user => new ClientMessage.WriteEvents(corrId' corrId' envelope' false' " is 201.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ConditionalAppendToStreamAsync,The length of the statement  "            _publisher.PublishWithAuthentication(_authenticationProvider' GetUserCredentials(_settings' userCredentials)' source.SetException' user => new ClientMessage.WriteEvents(corrId' corrId' envelope' false' " is 201.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,StartTransactionAsync,The length of the statement  "            var envelope = new EmbeddedResponseEnvelope(new EmbeddedResponders.TransactionStart(source' this' stream' expectedVersion)); " is 124.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,StartTransactionAsync,The length of the statement  "            _publisher.PublishWithAuthentication(_authenticationProvider' GetUserCredentials(_settings' userCredentials)' source.SetException' user => new ClientMessage.TransactionStart(corrId' corrId' envelope' " is 199.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,TransactionalWriteAsync,The length of the statement  "            _publisher.PublishWithAuthentication(_authenticationProvider' GetUserCredentials(_settings' userCredentials)' source.SetException' user => new ClientMessage.TransactionWrite(corrId' corrId' envelope' " is 199.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,CommitTransactionAsync,The length of the statement  "            _publisher.PublishWithAuthentication(_authenticationProvider' GetUserCredentials(_settings' userCredentials)' source.SetException' user => new ClientMessage.TransactionCommit(corrId' corrId' envelope' " is 200.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadEventAsync,The length of the statement  "            _publisher.PublishWithAuthentication(_authenticationProvider' GetUserCredentials(_settings' userCredentials)' source.SetException' user => new ClientMessage.ReadEvent(corrId' corrId' envelope' " is 192.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadStreamEventsForwardAsync,The length of the statement  "            if (count > ClientApiConstants.MaxReadSize) throw new ArgumentException(string.Format("Count should be less than {0}. For larger reads you should page."' ClientApiConstants.MaxReadSize)); " is 187.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadStreamEventsForwardAsync,The length of the statement  "            _publisher.PublishWithAuthentication(_authenticationProvider' GetUserCredentials(_settings' userCredentials)' source.SetException' user => new ClientMessage.ReadStreamEventsForward(corrId' corrId' envelope' " is 206.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadStreamEventsBackwardAsync,The length of the statement  "            if (count > ClientApiConstants.MaxReadSize) throw new ArgumentException(string.Format("Count should be less than {0}. For larger reads you should page."' ClientApiConstants.MaxReadSize)); " is 187.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadStreamEventsBackwardAsync,The length of the statement  "            _publisher.PublishWithAuthentication(_authenticationProvider' GetUserCredentials(_settings' userCredentials)' source.SetException' user => new ClientMessage.ReadStreamEventsBackward(corrId' corrId' envelope' " is 207.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadAllEventsForwardAsync,The length of the statement  "            if (maxCount > ClientApiConstants.MaxReadSize) throw new ArgumentException(string.Format("Count should be less than {0}. For larger reads you should page."' ClientApiConstants.MaxReadSize)); " is 190.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadAllEventsForwardAsync,The length of the statement  "            _publisher.PublishWithAuthentication(_authenticationProvider' GetUserCredentials(_settings' userCredentials)' source.SetException' user => new ClientMessage.ReadAllEventsForward(corrId' corrId' envelope' " is 203.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadAllEventsBackwardAsync,The length of the statement  "            if (maxCount > ClientApiConstants.MaxReadSize) throw new ArgumentException(string.Format("Count should be less than {0}. For larger reads you should page."' ClientApiConstants.MaxReadSize)); " is 190.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ReadAllEventsBackwardAsync,The length of the statement  "            _publisher.PublishWithAuthentication(_authenticationProvider' GetUserCredentials(_settings' userCredentials)' source.SetException' user => new ClientMessage.ReadAllEventsBackward(corrId' corrId' envelope' " is 204.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToStreamAsync,The length of the statement  "            _subscriptions.StartSubscription(corrId' source' stream' GetUserCredentials(_settings' userCredentials)' resolveLinkTos' eventAppeared' subscriptionDropped); " is 157.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToStreamFrom,The length of the statement  "            return SubscribeToStreamFrom(stream' lastCheckpoint' settings' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials); " is 139.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToAllAsync,The length of the statement  "            _subscriptions.StartSubscription(corrId' source' string.Empty' GetUserCredentials(_settings' userCredentials)' resolveLinkTos' eventAppeared' subscriptionDropped); " is 163.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ConnectToPersistentSubscription,The length of the statement  "                GetUserCredentials(_settings' userCredentials)' _settings.Log' _settings.VerboseLogging' _settings' _subscriptions' bufferSize' " is 127.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,ConnectToPersistentSubscriptionAsync,The length of the statement  "                GetUserCredentials(_settings' userCredentials)' _settings.Log' _settings.VerboseLogging' _settings' _subscriptions' bufferSize' " is 127.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SubscribeToAllFrom,The length of the statement  "            return SubscribeToAllFrom(lastCheckpoint' settings'eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials); " is 127.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,CreatePersistentSubscriptionAsync,The length of the statement  "            var source = new TaskCompletionSource<PersistentSubscriptionCreateResult>(TaskCreationOptions.RunContinuationsAsynchronously); " is 126.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,CreatePersistentSubscriptionAsync,The length of the statement  "            var envelope = new EmbeddedResponseEnvelope(new EmbeddedResponders.CreatePersistentSubscription(source' stream' groupName)); " is 124.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,CreatePersistentSubscriptionAsync,The length of the statement  "            _publisher.PublishWithAuthentication(_authenticationProvider' GetUserCredentials(_settings' credentials)' source.SetException' user => new ClientMessage.CreatePersistentSubscription( " is 182.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,UpdatePersistentSubscriptionAsync,The length of the statement  "            var source = new TaskCompletionSource<PersistentSubscriptionUpdateResult>(TaskCreationOptions.RunContinuationsAsynchronously); " is 126.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,UpdatePersistentSubscriptionAsync,The length of the statement  "            var envelope = new EmbeddedResponseEnvelope(new EmbeddedResponders.UpdatePersistentSubscription(source' stream' groupName)); " is 124.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,UpdatePersistentSubscriptionAsync,The length of the statement  "            _publisher.PublishWithAuthentication(_authenticationProvider' GetUserCredentials(_settings' credentials)' source.SetException' user => new ClientMessage.UpdatePersistentSubscription( " is 182.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,DeletePersistentSubscriptionAsync,The length of the statement  "            var source = new TaskCompletionSource<PersistentSubscriptionDeleteResult>(TaskCreationOptions.RunContinuationsAsynchronously); " is 126.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,DeletePersistentSubscriptionAsync,The length of the statement  "            _publisher.PublishWithAuthentication(_authenticationProvider' GetUserCredentials(_settings' userCredentials)' source.SetException' user => new ClientMessage.DeletePersistentSubscription( " is 186.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SetStreamMetadataAsync,The length of the statement  "            return SetStreamMetadataAsync(stream' expectedMetastreamVersion' metadata.AsJsonBytes()' GetUserCredentials(_settings' userCredentials)); " is 137.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SetStreamMetadataAsync,The length of the statement  "                throw new ArgumentException(string.Format("Setting metadata for metastream '{0}' is not supported."' stream)' "stream"); " is 120.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SetStreamMetadataAsync,The length of the statement  "            var metaevent = new EventData(Guid.NewGuid()' SystemEventTypes.StreamMetadata' true' metadata ?? Empty.ByteArray' null); " is 120.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SetStreamMetadataAsync,The length of the statement  "            _publisher.PublishWithAuthentication(_authenticationProvider' GetUserCredentials(_settings' userCredentials)' source.SetException' user => new ClientMessage.WriteEvents(corrId' corrId' envelope' false' metastream' " is 213.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,GetStreamMetadataAsRawBytesAsync,The length of the statement  "            return ReadEventAsync(SystemStreams.MetastreamOf(stream)' -1' false' GetUserCredentials(_settings' userCredentials)).ContinueWith(t => " is 134.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,SetSystemSettingsAsync,The length of the statement  "            return AppendToStreamAsync(SystemStreams.SettingsStream' ExpectedVersion.Any' GetUserCredentials(_settings' userCredentials)' " is 125.
Long Statement,EventStore.ClientAPI.Embedded,EventStoreEmbeddedNodeConnection,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EventStoreEmbeddedNodeConnection.cs,TransactionalWriteAsync,The length of the statement  "            _publisher.PublishWithAuthentication(_authenticationProvider' GetUserCredentials(_settings' userCredentials)' source.SetException' user => new ClientMessage.TransactionWrite(corrId' corrId' envelope' false' " is 206.
Magic Number,EventStore.ClientAPI.Embedded,ClientMessageConverterExtensions,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\ClientMessageConverterExtensions.cs,ToClientMessageEventRecord,The following statement contains a magic number: return new ClientMessage.EventRecord(                  eventRecord.EventStreamId' eventRecord.EventNumber'                  eventRecord.EventId.ToByteArray()' eventRecord.EventType' eventRecord.IsJson ? 1 : 0'                  eventRecord.IsJson ? 1 : 0'                  eventRecord.Data'                  eventRecord.Metadata'                  eventRecord.TimeStamp.ToBinary()'                  (long)(eventRecord.TimeStamp - new DateTime(1970' 1' 1)).TotalMilliseconds);
Missing Default,EventStore.ClientAPI.Embedded,EmbeddedSubscriptionBase<TSubscription>,C:\repos\EventStore_EventStore\src\EventStore.ClientAPI.Embedded\EmbeddedSubscriptionBase.cs,DropSubscription,The following switch statement is missing a default case: switch (reason)              {                  case Core.Services.SubscriptionDropReason.AccessDenied:                      DropSubscription(SubscriptionDropReason.AccessDenied'                          ex ?? new AccessDeniedException(string.Format("Subscription to '{0}' failed due to access denied."'                              StreamId == string.Empty ? "<all>" : StreamId)));                      break;                  case Core.Services.SubscriptionDropReason.Unsubscribed:                      Unsubscribe();                      break;                  case Core.Services.SubscriptionDropReason.NotFound:                      DropSubscription(SubscriptionDropReason.NotFound'                          new ArgumentException("Subscription not found"));                      break;              }
