Implementation smell,Namespace,Class,File,Method,Description
Complex Method,EventStore.ClientAPI,EventStorePersistentSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscriptionBase.cs,ProcessQueue,Cyclomatic complexity of the method is 10
Complex Method,EventStore.ClientAPI,SystemSettings,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\SystemSettings.cs,FromJsonBytes,Cyclomatic complexity of the method is 12
Complex Method,EventStore.ClientAPI,StreamMetadata,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\StreamMetadata.cs,FromJsonBytes,Cyclomatic complexity of the method is 17
Complex Method,EventStore.ClientAPI,StreamMetadata,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\StreamMetadata.cs,ReadAcl,Cyclomatic complexity of the method is 17
Complex Method,EventStore.ClientAPI,EventStoreStreamCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ProcessEventsAsync,Cyclomatic complexity of the method is 11
Complex Method,EventStore.ClientAPI.ClientOperations,ConditionalAppendToStreamOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ConditionalAppendToStreamOperation.cs,InspectResponse,Cyclomatic complexity of the method is 18
Complex Method,EventStore.ClientAPI.ClientOperations,ConnectToPersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ConnectToPersistentSubscriptionOperation.cs,InspectPackage,Cyclomatic complexity of the method is 8
Complex Method,EventStore.ClientAPI.ClientOperations,CreatePersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\CreatePersistentSubscriptionOperation.cs,InspectResponse,Cyclomatic complexity of the method is 10
Complex Method,EventStore.ClientAPI.ClientOperations,DeletePersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\DeletePersistentSubscriptionOperation.cs,InspectResponse,Cyclomatic complexity of the method is 10
Complex Method,EventStore.ClientAPI.ClientOperations,UpdatePersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\UpdatePersistentSubscriptionOperation.cs,InspectResponse,Cyclomatic complexity of the method is 10
Complex Method,EventStore.ClientAPI.ClientOperations,CommitTransactionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\CommitTransactionOperation.cs,InspectResponse,Cyclomatic complexity of the method is 16
Complex Method,EventStore.ClientAPI.ClientOperations,ReadEventOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadEventOperation.cs,InspectResponse,Cyclomatic complexity of the method is 14
Complex Method,EventStore.ClientAPI.ClientOperations,SubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\SubscriptionOperation.cs,InspectPackage,Cyclomatic complexity of the method is 33
Complex Method,EventStore.ClientAPI.ClientOperations,ReadAllEventsBackwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadAllEventsBackwardOperation.cs,InspectResponse,Cyclomatic complexity of the method is 8
Complex Method,EventStore.ClientAPI.ClientOperations,ReadAllEventsForwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadAllEventsForwardOperation.cs,InspectResponse,Cyclomatic complexity of the method is 8
Complex Method,EventStore.ClientAPI.ClientOperations,ReadStreamEventsBackwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadStreamEventsBackwardOperation.cs,InspectResponse,Cyclomatic complexity of the method is 12
Complex Method,EventStore.ClientAPI.ClientOperations,StartTransactionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\StartTransactionOperation.cs,InspectResponse,Cyclomatic complexity of the method is 16
Complex Method,EventStore.ClientAPI.ClientOperations,TransactionalWriteOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\TransactionalWriteOperation.cs,InspectResponse,Cyclomatic complexity of the method is 9
Complex Method,EventStore.ClientAPI.ClientOperations,DeleteStreamOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\DeleteStreamOperation.cs,InspectResponse,Cyclomatic complexity of the method is 16
Complex Method,EventStore.ClientAPI.ClientOperations,ReadStreamEventsForwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadStreamEventsForwardOperation.cs,InspectResponse,Cyclomatic complexity of the method is 12
Complex Method,EventStore.ClientAPI.ClientOperations,AppendToStreamOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\AppendToStreamOperation.cs,InspectResponse,Cyclomatic complexity of the method is 19
Complex Method,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,StartConnection,Cyclomatic complexity of the method is 10
Complex Method,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,TimerTick,Cyclomatic complexity of the method is 16
Complex Method,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,StartOperation,Cyclomatic complexity of the method is 16
Complex Method,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,StartSubscription,Cyclomatic complexity of the method is 16
Complex Method,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,StartSubscription,Cyclomatic complexity of the method is 16
Complex Method,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,HandleTcpPackage,Cyclomatic complexity of the method is 41
Complex Method,EventStore.ClientAPI.Internal,OperationsManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\OperationsManager.cs,CheckTimeoutsAndRetry,Cyclomatic complexity of the method is 9
Complex Method,EventStore.ClientAPI.Internal,SubscriptionsManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\SubscriptionsManager.cs,CheckTimeoutsAndRetry,Cyclomatic complexity of the method is 11
Complex Method,EventStore.ClientAPI.Transport.Tcp,TcpConnectionLockless,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionLockless.cs,TrySend,Cyclomatic complexity of the method is 9
Long Parameter List,EventStore.ClientAPI,EventStorePersistentSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscription.cs,EventStorePersistentSubscription,The method has 11 parameters.
Long Parameter List,EventStore.ClientAPI,EventStorePersistentSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscription.cs,StartSubscription,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI,EventStorePersistentSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscriptionBase.cs,EventStorePersistentSubscriptionBase,The method has 10 parameters.
Long Parameter List,EventStore.ClientAPI,EventStorePersistentSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscriptionBase.cs,StartSubscription,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI,IEventStoreConnectionExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnectionExtensions.cs,SubscribeToStreamAsync,The method has 6 parameters.
Long Parameter List,EventStore.ClientAPI,IEventStoreConnectionExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnectionExtensions.cs,SubscribeToStreamFrom,The method has 10 parameters.
Long Parameter List,EventStore.ClientAPI,IEventStoreConnectionExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnectionExtensions.cs,SubscribeToStreamFrom,The method has 8 parameters.
Long Parameter List,EventStore.ClientAPI,IEventStoreConnectionExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnectionExtensions.cs,SubscribeToAllAsync,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI,IEventStoreConnectionExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnectionExtensions.cs,ConnectToPersistentSubscription,The method has 8 parameters.
Long Parameter List,EventStore.ClientAPI,IEventStoreConnectionExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnectionExtensions.cs,ConnectToPersistentSubscriptionAsync,The method has 8 parameters.
Long Parameter List,EventStore.ClientAPI,IEventStoreConnectionExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnectionExtensions.cs,SubscribeToAllFrom,The method has 9 parameters.
Long Parameter List,EventStore.ClientAPI,IEventStoreConnectionExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnectionExtensions.cs,SubscribeToAllFrom,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI,PersistentSubscriptionSettings,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,PersistentSubscriptionSettings,The method has 13 parameters.
Long Parameter List,EventStore.ClientAPI,PersistentSubscriptionSettingsBuilder,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettingsBuilder.cs,PersistentSubscriptionSettingsBuilder,The method has 13 parameters.
Long Parameter List,EventStore.ClientAPI,ConnectionSettings,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ConnectionSettings.cs,ConnectionSettings,The method has 24 parameters.
Long Parameter List,EventStore.ClientAPI,ClusterSettings,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClusterSettings.cs,ClusterSettings,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI,StreamMetadataBuilder,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\StreamMetadataBuilder.cs,StreamMetadataBuilder,The method has 10 parameters.
Long Parameter List,EventStore.ClientAPI,CatchUpSubscriptionSettings,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\CatchUpSubscriptionSettings.cs,CatchUpSubscriptionSettings,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI,IEventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnection.cs,ReadStreamEventsForwardAsync,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI,IEventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnection.cs,ReadStreamEventsBackwardAsync,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI,IEventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnection.cs,SubscribeToStreamAsync,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI,IEventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnection.cs,SubscribeToStreamFrom,The method has 9 parameters.
Long Parameter List,EventStore.ClientAPI,IEventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnection.cs,SubscribeToStreamFrom,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI,IEventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnection.cs,ConnectToPersistentSubscription,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI,IEventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnection.cs,ConnectToPersistentSubscriptionAsync,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI,IEventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnection.cs,SubscribeToAllFrom,The method has 8 parameters.
Long Parameter List,EventStore.ClientAPI,IEventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnection.cs,SubscribeToAllFrom,The method has 6 parameters.
Long Parameter List,EventStore.ClientAPI,StreamAcl,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\StreamAcl.cs,StreamAcl,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI,StreamAcl,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\StreamAcl.cs,StreamAcl,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI,StreamMetadata,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\StreamMetadata.cs,StreamMetadata,The method has 6 parameters.
Long Parameter List,EventStore.ClientAPI,StreamMetadata,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\StreamMetadata.cs,Create,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI,EventStoreCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsTillAsync,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI,EventStoreCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,EventStoreCatchUpSubscription,The method has 8 parameters.
Long Parameter List,EventStore.ClientAPI,EventStoreAllCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,EventStoreAllCatchUpSubscription,The method has 8 parameters.
Long Parameter List,EventStore.ClientAPI,EventStoreAllCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsTillAsync,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI,EventStoreAllCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsInternalAsync,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI,EventStoreAllCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsCallbackAsync,The method has 6 parameters.
Long Parameter List,EventStore.ClientAPI,EventStoreStreamCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,EventStoreStreamCatchUpSubscription,The method has 9 parameters.
Long Parameter List,EventStore.ClientAPI,EventStoreStreamCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsTillAsync,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI,EventStoreStreamCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsInternalAsync,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI,EventStoreStreamCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsCallbackAsync,The method has 6 parameters.
Long Parameter List,EventStore.ClientAPI,EventData,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventData.cs,EventData,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI,StreamEventsSlice,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\StreamEventsSlice.cs,StreamEventsSlice,The method has 8 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,ConditionalAppendToStreamOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ConditionalAppendToStreamOperation.cs,ConditionalAppendToStreamOperation,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,ConnectToPersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ConnectToPersistentSubscriptionOperation.cs,ConnectToPersistentSubscriptionOperation,The method has 10 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,CreatePersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\CreatePersistentSubscriptionOperation.cs,CreatePersistentSubscriptionOperation,The method has 6 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,DeletePersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\DeletePersistentSubscriptionOperation.cs,DeletePersistentSubscriptionOperation,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,UpdatePersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\UpdatePersistentSubscriptionOperation.cs,UpdatePersistentSubscriptionOperation,The method has 6 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,VolatileSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\VolatileSubscriptionOperation.cs,VolatileSubscriptionOperation,The method has 9 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,CommitTransactionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\CommitTransactionOperation.cs,CommitTransactionOperation,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,ReadEventOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadEventOperation.cs,ReadEventOperation,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,SubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\SubscriptionOperation.cs,SubscriptionOperation,The method has 9 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,OperationBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\OperationBase.cs,OperationBase,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,ReadAllEventsBackwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadAllEventsBackwardOperation.cs,ReadAllEventsBackwardOperation,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,ReadAllEventsForwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadAllEventsForwardOperation.cs,ReadAllEventsForwardOperation,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,ReadStreamEventsBackwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadStreamEventsBackwardOperation.cs,ReadStreamEventsBackwardOperation,The method has 8 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,StartTransactionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\StartTransactionOperation.cs,StartTransactionOperation,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,TransactionalWriteOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\TransactionalWriteOperation.cs,TransactionalWriteOperation,The method has 6 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,DeleteStreamOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\DeleteStreamOperation.cs,DeleteStreamOperation,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,ReadStreamEventsForwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadStreamEventsForwardOperation.cs,ReadStreamEventsForwardOperation,The method has 8 parameters.
Long Parameter List,EventStore.ClientAPI.ClientOperations,AppendToStreamOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\AppendToStreamOperation.cs,AppendToStreamOperation,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ReadStreamEventsForwardAsync,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ReadStreamEventsBackwardAsync,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToStreamAsync,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToStreamFrom,The method has 9 parameters.
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToStreamFrom,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToAllFrom,The method has 8 parameters.
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToAllFrom,The method has 6 parameters.
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ConnectToPersistentSubscription,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ConnectToPersistentSubscriptionAsync,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,ClusterDnsEndPointDiscoverer,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.Internal,StartSubscriptionMessage,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\Messages.cs,StartSubscriptionMessage,The method has 8 parameters.
Long Parameter List,EventStore.ClientAPI.Internal,StartPersistentSubscriptionMessage,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\Messages.cs,StartPersistentSubscriptionMessage,The method has 9 parameters.
Long Parameter List,EventStore.ClientAPI.Projections,ProjectionDetails,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionDetails.cs,ProjectionDetails,The method has 25 parameters.
Long Parameter List,EventStore.ClientAPI.Projections,QueryManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\QueryManager.cs,ExecuteAsync,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI.Projections,ProjectionsClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,CreateContinuous,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI.UserManagement,UserDetails,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UserDetails.cs,UserDetails,The method has 6 parameters.
Long Parameter List,EventStore.ClientAPI.UserManagement,UsersManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersManager.cs,CreateUserAsync,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI.SystemData,TcpPackage,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,TcpPackage,The method has 6 parameters.
Long Parameter List,EventStore.ClientAPI.SystemData,TcpPackage,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,TcpPackage,The method has 6 parameters.
Long Parameter List,EventStore.ClientAPI.Transport.Http,HttpAsyncClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\HttpAsyncClient.cs,Get,The method has 5 parameters.
Long Parameter List,EventStore.ClientAPI.Transport.Http,HttpAsyncClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\HttpAsyncClient.cs,Post,The method has 6 parameters.
Long Parameter List,EventStore.ClientAPI.Transport.Http,HttpAsyncClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\HttpAsyncClient.cs,Put,The method has 6 parameters.
Long Parameter List,EventStore.ClientAPI.Transport.Http,HttpAsyncClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\HttpAsyncClient.cs,Receive,The method has 6 parameters.
Long Parameter List,EventStore.ClientAPI.Transport.Http,HttpAsyncClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\HttpAsyncClient.cs,Send,The method has 7 parameters.
Long Parameter List,EventStore.ClientAPI.Transport.Tcp,TcpConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnection.cs,CreateConnectingConnection,The method has 8 parameters.
Long Parameter List,EventStore.ClientAPI.Transport.Tcp,TcpConnectionLockless,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionLockless.cs,CreateConnectingConnection,The method has 8 parameters.
Long Parameter List,EventStore.ClientAPI.Transport.Tcp,TcpConnectionSsl,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionSsl.cs,CreateConnectingConnection,The method has 10 parameters.
Long Parameter List,EventStore.ClientAPI.Transport.Tcp,TcpStats,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpStats.cs,TcpStats,The method has 9 parameters.
Long Parameter List,EventStore.ClientAPI.Transport.Tcp,TcpPackageConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpPackageConnection.cs,TcpPackageConnection,The method has 11 parameters.
Long Parameter List,EventStore.ClientAPI.Transport.Tcp,TcpClientConnector,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpClientConnector.cs,ConnectTo,The method has 10 parameters.
Long Parameter List,EventStore.ClientAPI.Transport.Tcp,TcpClientConnector,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpClientConnector.cs,InitConnect,The method has 5 parameters.
Long Identifier,EventStore.ClientAPI.Projections,ProjectionDetails,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionDetails.cs,ProjectionDetails,The length of the parameter writePendingEventsBeforeCheckpoint is 34.
Long Identifier,EventStore.ClientAPI.Projections,ProjectionDetails,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionDetails.cs,ProjectionDetails,The length of the parameter writePendingEventsAfterCheckpoint is 33.
Long Identifier,EventStore.ClientAPI.Transport.Tcp,TcpStats,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpStats.cs,TcpStats,The length of the parameter sentBytesSinceLastRunSinceLastRun is 33.
Long Statement,EventStore.ClientAPI,ConnectionString,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ConnectionString.cs,Apply,The length of the statement  "	var fields = typeFields.Select (x => new Tuple<string' FieldInfo> (x.Name' x)).Concat (typeFields.Select (x => new Tuple<string' FieldInfo> (WithSpaces (x.Name)' x))).GroupBy (x => x.Item1).ToDictionary (x => x.First ().Item1' x => x.First ().Item2' StringComparer.InvariantCultureIgnoreCase); " is 293.
Long Statement,EventStore.ClientAPI,ConnectionString,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ConnectionString.cs,Apply,The length of the statement  "			throw new Exception (string.Format ("Can not map field named {0} as type {1} has no translator"' item' fi.FieldType.Name)); " is 123.
Long Statement,EventStore.ClientAPI,EventStorePersistentSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscription.cs,StartSubscription,The length of the statement  "	_handler.EnqueueMessage (new StartPersistentSubscriptionMessage (source' subscriptionId' streamId' bufferSize' userCredentials' onEventAppeared' onSubscriptionDropped' settings.MaxRetries' settings.OperationTimeout)); " is 217.
Long Statement,EventStore.ClientAPI,EventStorePersistentSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscriptionBase.cs,Start,The length of the statement  "	var task = StartSubscription (_subscriptionId' _streamId' _bufferSize' _userCredentials' OnEventAppeared' OnSubscriptionDropped' _settings).ContinueWith (t => { " is 160.
Long Statement,EventStore.ClientAPI,EventStorePersistentSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscriptionBase.cs,ProcessQueue,The length of the statement  "						_log.Debug ("Persistent Subscription to {0}: processed event ({1}' {2}' {3} @ {4})."' _streamId' e.OriginalEvent.EventStreamId' e.OriginalEvent.EventNumber' e.OriginalEvent.EventType' e.OriginalEventNumber); " is 207.
Long Statement,EventStore.ClientAPI,EventStorePersistentSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscriptionBase.cs,DropSubscription,The length of the statement  "			_log.Debug ("Persistent Subscription to {0}: dropping subscription' reason: {1} {2}."' _streamId' reason' error == null ? string.Empty : error.ToString ()); " is 156.
Long Statement,EventStore.ClientAPI,PersistentSubscriptionSettings,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,Create,The length of the statement  "	return new PersistentSubscriptionSettingsBuilder (false' -1' false' TimeSpan.FromSeconds (30)' 500' 500' 10' 20' TimeSpan.FromSeconds (2)' 10' 1000' 0' SystemConsumerStrategies.RoundRobin); " is 189.
Long Statement,EventStore.ClientAPI,PersistentSubscriptionSettingsBuilder,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettingsBuilder.cs,Build,The length of the statement  "	return new PersistentSubscriptionSettings (_resolveLinkTos' _startFrom' _timingStatistics' _timeout' _maxRetryCount' _liveBufferSize' _readBatchSize' _bufferSize' _checkPointAfter' _minCheckPointCount' _maxCheckPointCount' _maxSubscriberCount' _namedConsumerStrategies); " is 270.
Long Statement,EventStore.ClientAPI,DnsClusterSettingsBuilder,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\DnsClusterSettingsBuilder.cs,SetMaxDiscoverAttempts,The length of the statement  "		throw new ArgumentOutOfRangeException ("maxDiscoverAttempts"' string.Format ("maxDiscoverAttempts value is out of range: {0}. Allowed range: [-1' infinity]."' maxDiscoverAttempts)); " is 181.
Long Statement,EventStore.ClientAPI,DnsClusterSettingsBuilder,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\DnsClusterSettingsBuilder.cs,Build,The length of the statement  "	return new ClusterSettings (this._clusterDns' this._maxDiscoverAttempts' this._managerExternalHttpPort' this._gossipTimeout' this._preferRandomNode); " is 149.
Long Statement,EventStore.ClientAPI,GossipSeedClusterSettingsBuilder,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\GossipSeedClusterSettingsBuilder.cs,SetMaxDiscoverAttempts,The length of the statement  "		throw new ArgumentOutOfRangeException ("maxDiscoverAttempts"' string.Format ("maxDiscoverAttempts value is out of range: {0}. Allowed range: [1' infinity]."' maxDiscoverAttempts)); " is 180.
Long Statement,EventStore.ClientAPI,ConnectionSettingsBuilder,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ConnectionSettingsBuilder.cs,SetMaxDiscoverAttempts,The length of the statement  "		throw new ArgumentOutOfRangeException ("maxDiscoverAttempts"' string.Format ("maxDiscoverAttempts value is out of range: {0}. Allowed range: [1' infinity]."' maxDiscoverAttempts)); " is 180.
Long Statement,EventStore.ClientAPI,ConnectionSettingsBuilder,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ConnectionSettingsBuilder.cs,Build,The length of the statement  "	return new ConnectionSettings (_log' _verboseLogging' _maxQueueSize' _maxConcurrentItems' _maxRetries' _maxReconnections' _requireMaster' _reconnectionDelay' _operationTimeout' _operationTimeoutCheckPeriod' _defaultUserCredentials' _useSslConnection' _targetHost' _validateServer' _failOnNoServerResponse' _heartbeatInterval' _heartbeatTimeout' _clientConnectionTimeout' _clusterDns' _gossipSeeds' _maxDiscoverAttempts' _gossipExternalHttpPort' _gossipTimeout' _preferRandomNode); " is 480.
Long Statement,EventStore.ClientAPI,StreamMetadataBuilder,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\StreamMetadataBuilder.cs,Build,The length of the statement  "	var acl = this._aclRead == null && this._aclWrite == null && this._aclDelete == null && this._aclMetaRead == null && this._aclMetaWrite == null ? null : new StreamAcl (this._aclRead' this._aclWrite' this._aclDelete' this._aclMetaRead' this._aclMetaWrite); " is 255.
Long Statement,EventStore.ClientAPI,StreamMetadataBuilder,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\StreamMetadataBuilder.cs,Build,The length of the statement  "	return new StreamMetadata (this._maxCount' this._maxAge' this._truncateBefore' this._cacheControl' acl' this._customMetadata); " is 126.
Long Statement,EventStore.ClientAPI,StreamAcl,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\StreamAcl.cs,ToString,The length of the statement  "	return string.Format ("Read: {0}' Write: {1}' Delete: {2}' MetaRead: {3}' MetaWrite: {4}"' ReadRoles == null ? "<null>" : "[" + string.Join ("'"' ReadRoles) + "]"' WriteRoles == null ? "<null>" : "[" + string.Join ("'"' WriteRoles) + "]"' DeleteRoles == null ? "<null>" : "[" + string.Join ("'"' DeleteRoles) + "]"' MetaReadRoles == null ? "<null>" : "[" + string.Join ("'"' MetaReadRoles) + "]"' MetaWriteRoles == null ? "<null>" : "[" + string.Join ("'"' MetaWriteRoles) + "]"); " is 480.
Long Statement,EventStore.ClientAPI,StreamAcl,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\StreamAcl.cs,CheckAndReturnIfSingle,The length of the statement  "		throw new ArgumentException ("Underlying stream ACL has multiple roles' which is not supported in old version of this API."); " is 125.
Long Statement,EventStore.ClientAPI,StreamMetadata,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\StreamMetadata.cs,Copy,The length of the statement  "	return new StreamMetadataBuilder (MaxCount' MaxAge' TruncateBefore' CacheControl' Acl.ReadRoles' Acl.WriteRoles' Acl.DeleteRoles' Acl.MetaReadRoles' Acl.MetaWriteRoles' _customMetadata); " is 186.
Long Statement,EventStore.ClientAPI,EventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreConnection.cs,Create,The length of the statement  "		throw new Exception (string.Format ("Did not find ConnectTo or GossipSeeds in the connection string.\n'{0}'"' connectionString)); " is 129.
Long Statement,EventStore.ClientAPI,EventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreConnection.cs,Create,The length of the statement  "		throw new NotSupportedException (string.Format ("Setting ConnectTo as well as GossipSeeds on the connection string is currently not supported.\n{0}"' connectionString)); " is 169.
Long Statement,EventStore.ClientAPI,EventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreConnection.cs,Create,The length of the statement  "		connectionSettings = new ConnectionSettings (connectionSettings.Log' connectionSettings.VerboseLogging' connectionSettings.MaxQueueSize' connectionSettings.MaxConcurrentItems' connectionSettings.MaxRetries' connectionSettings.MaxReconnections' connectionSettings.RequireMaster' connectionSettings.ReconnectionDelay' connectionSettings.OperationTimeout' connectionSettings.OperationTimeoutCheckPeriod' credential' connectionSettings.UseSslConnection' connectionSettings.TargetHost' connectionSettings.ValidateServer' connectionSettings.FailOnNoServerResponse' connectionSettings.HeartbeatInterval' connectionSettings.HeartbeatTimeout' connectionSettings.ClientConnectionTimeout' connectionSettings.ClusterDns' connectionSettings.GossipSeeds' connectionSettings.MaxDiscoverAttempts' connectionSettings.ExternalGossipPort' connectionSettings.GossipTimeout' connectionSettings.PreferRandomNode); " is 891.
Long Statement,EventStore.ClientAPI,EventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreConnection.cs,Create,The length of the statement  "		var clusterSettings = new ClusterSettings (uri.Host' connectionSettings.MaxDiscoverAttempts' uri.Port' connectionSettings.GossipTimeout' connectionSettings.PreferRandomNode); " is 174.
Long Statement,EventStore.ClientAPI,EventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreConnection.cs,Create,The length of the statement  "		var endPointDiscoverer = new ClusterDnsEndPointDiscoverer (connectionSettings.Log' clusterSettings.ClusterDns' clusterSettings.MaxDiscoverAttempts' clusterSettings.ExternalGossipPort' clusterSettings.GossipSeeds' clusterSettings.GossipTimeout' clusterSettings.PreferRandomNode); " is 278.
Long Statement,EventStore.ClientAPI,EventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreConnection.cs,Create,The length of the statement  "		return new EventStoreNodeConnection (connectionSettings' null' new StaticEndPointDiscoverer (tcpEndPoint' connectionSettings.UseSslConnection)' connectionName); " is 160.
Long Statement,EventStore.ClientAPI,EventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreConnection.cs,Create,The length of the statement  "		var clusterSettings = new ClusterSettings (connectionSettings.GossipSeeds' connectionSettings.MaxDiscoverAttempts' connectionSettings.GossipTimeout' connectionSettings.PreferRandomNode); " is 186.
Long Statement,EventStore.ClientAPI,EventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreConnection.cs,Create,The length of the statement  "		var endPointDiscoverer = new ClusterDnsEndPointDiscoverer (connectionSettings.Log' clusterSettings.ClusterDns' clusterSettings.MaxDiscoverAttempts' clusterSettings.ExternalGossipPort' clusterSettings.GossipSeeds' clusterSettings.GossipTimeout' clusterSettings.PreferRandomNode); " is 278.
Long Statement,EventStore.ClientAPI,EventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreConnection.cs,GetUriFromConnectionString,The length of the statement  "	var connto = ConnectionString.GetConnectionStringInfo (connectionString).FirstOrDefault (x => x.Key.ToUpperInvariant () == "CONNECTTO").Value; " is 142.
Long Statement,EventStore.ClientAPI,EventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreConnection.cs,Create,The length of the statement  "	return new EventStoreNodeConnection (connectionSettings' null' new StaticEndPointDiscoverer (tcpEndPoint' connectionSettings.UseSslConnection)' connectionName); " is 160.
Long Statement,EventStore.ClientAPI,EventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreConnection.cs,Create,The length of the statement  "	var endPointDiscoverer = new ClusterDnsEndPointDiscoverer (connectionSettings.Log' clusterSettings.ClusterDns' clusterSettings.MaxDiscoverAttempts' clusterSettings.ExternalGossipPort' clusterSettings.GossipSeeds' clusterSettings.GossipTimeout' clusterSettings.PreferRandomNode); " is 278.
Long Statement,EventStore.ClientAPI,EventStoreCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,Stop,The length of the statement  "		Log.Debug ("Catch-up Subscription {0} to {1}: requesting stop..."' SubscriptionName' IsSubscribedToAll ? "<all>" : StreamId); " is 125.
Long Statement,EventStore.ClientAPI,EventStoreCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,Stop,The length of the statement  "		Log.Debug ("Catch-up Subscription {0} to {1}: unhooking from connection.Connected."' SubscriptionName' IsSubscribedToAll ? "<all>" : StreamId); " is 143.
Long Statement,EventStore.ClientAPI,EventStoreCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,OnReconnect,The length of the statement  "		Log.Debug ("Catch-up Subscription {0} to {1}: recovering after reconnection."' SubscriptionName' IsSubscribedToAll ? "<all>" : StreamId); " is 137.
Long Statement,EventStore.ClientAPI,EventStoreCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,OnReconnect,The length of the statement  "		Log.Debug ("Catch-up Subscription {0} to {1}: unhooking from connection.Connected."' SubscriptionName' IsSubscribedToAll ? "<all>" : StreamId); " is 143.
Long Statement,EventStore.ClientAPI,EventStoreCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,LoadHistoricalEventsAsync,The length of the statement  "			Log.Debug ("Catch-up Subscription {0} to {1}: pulling events..."' SubscriptionName' IsSubscribedToAll ? "<all>" : StreamId); " is 124.
Long Statement,EventStore.ClientAPI,EventStoreCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,SubscribeToStreamAsync,The length of the statement  "			Log.Debug ("Catch-up Subscription {0} to {1}: subscribing..."' SubscriptionName' IsSubscribedToAll ? "<all>" : StreamId); " is 121.
Long Statement,EventStore.ClientAPI,EventStoreCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,SubscribeToStreamAsync,The length of the statement  "		var subscription = StreamId == string.Empty ? await _connection.SubscribeToAllAsync (_resolveLinkTos' EnqueuePushedEvent' ServerSubscriptionDropped' _userCredentials).ConfigureAwait (false) : await _connection.SubscribeToStreamAsync (StreamId' _resolveLinkTos' EnqueuePushedEvent' ServerSubscriptionDropped' _userCredentials).ConfigureAwait (false); " is 349.
Long Statement,EventStore.ClientAPI,EventStoreCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadMissedHistoricEventsAsync,The length of the statement  "			Log.Debug ("Catch-up Subscription {0} to {1}: pulling events (if left)..."' SubscriptionName' IsSubscribedToAll ? "<all>" : StreamId); " is 134.
Long Statement,EventStore.ClientAPI,EventStoreCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadMissedHistoricEventsAsync,The length of the statement  "		await ReadEventsTillAsync (_connection' _resolveLinkTos' _userCredentials' _subscription.LastCommitPosition' _subscription.LastEventNumber).ConfigureAwait (false); " is 163.
Long Statement,EventStore.ClientAPI,EventStoreCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,StartLiveProcessing,The length of the statement  "		Log.Debug ("Catch-up Subscription {0} to {1}: processing live events..."' SubscriptionName' IsSubscribedToAll ? "<all>" : StreamId); " is 132.
Long Statement,EventStore.ClientAPI,EventStoreCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,StartLiveProcessing,The length of the statement  "		Log.Debug ("Catch-up Subscription {0} to {1}: hooking to connection.Connected"' SubscriptionName' IsSubscribedToAll ? "<all>" : StreamId); " is 138.
Long Statement,EventStore.ClientAPI,EventStoreCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,EnqueuePushedEvent,The length of the statement  "		Log.Debug ("Catch-up Subscription {0} to {1}: event appeared ({2}' {3}' {4} @ {5})."' SubscriptionName' IsSubscribedToAll ? "<all>" : StreamId' e.OriginalStreamId' e.OriginalEventNumber' e.OriginalEvent.EventType' e.OriginalPosition); " is 234.
Long Statement,EventStore.ClientAPI,EventStoreCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ProcessLiveQueueAsync,The length of the statement  "				Log.Debug ("Catch-up Subscription {0} to {1} Exception occurred in subscription {1}"' SubscriptionName' IsSubscribedToAll ? "<all>" : StreamId' exc); " is 149.
Long Statement,EventStore.ClientAPI,EventStoreCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,DropSubscription,The length of the statement  "			Log.Debug ("Catch-up Subscription {0} to {1}: dropping subscription' reason: {2} {3}."' SubscriptionName' IsSubscribedToAll ? "<all>" : StreamId' reason' error == null ? string.Empty : error.ToString ()); " is 204.
Long Statement,EventStore.ClientAPI,EventStoreAllCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsInternalAsync,The length of the statement  "	var slice = await connection.ReadAllEventsForwardAsync (_nextReadPosition' ReadBatchSize' resolveLinkTos' userCredentials).ConfigureAwait (false); " is 146.
Long Statement,EventStore.ClientAPI,EventStoreAllCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsInternalAsync,The length of the statement  "	await ReadEventsCallbackAsync (slice' connection' resolveLinkTos' userCredentials' lastCommitPosition' lastEventNumber).ConfigureAwait (false); " is 143.
Long Statement,EventStore.ClientAPI,EventStoreAllCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsCallbackAsync,The length of the statement  "		await ReadEventsInternalAsync (connection' resolveLinkTos' userCredentials' lastCommitPosition' lastEventNumber).ConfigureAwait (false); " is 136.
Long Statement,EventStore.ClientAPI,EventStoreAllCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsCallbackAsync,The length of the statement  "			Log.Debug ("Catch-up Subscription {0} to {1}: finished reading events' nextReadPosition = {2}."' SubscriptionName' IsSubscribedToAll ? "<all>" : StreamId' _nextReadPosition); " is 174.
Long Statement,EventStore.ClientAPI,EventStoreAllCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ProcessEventsAsync,The length of the statement  "	var done = lastCommitPosition == null ? slice.IsEndOfStream : slice.NextPosition >= new Position (lastCommitPosition.Value' lastCommitPosition.Value); " is 150.
Long Statement,EventStore.ClientAPI,EventStoreAllCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,TryProcessAsync,The length of the statement  "		Log.Debug ("Catch-up Subscription {0} to {1}: {2} event ({3}' {4}' {5} @ {6})."' SubscriptionName' IsSubscribedToAll ? "<all>" : StreamId' processed ? "processed" : "skipping"' e.OriginalEvent.EventStreamId' e.OriginalEvent.EventNumber' e.OriginalEvent.EventType' e.OriginalPosition); " is 284.
Long Statement,EventStore.ClientAPI,EventStoreStreamCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsInternalAsync,The length of the statement  "	var slice = await connection.ReadStreamEventsForwardAsync (StreamId' _nextReadEventNumber' ReadBatchSize' resolveLinkTos' userCredentials).ConfigureAwait (false); " is 162.
Long Statement,EventStore.ClientAPI,EventStoreStreamCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsInternalAsync,The length of the statement  "	await ReadEventsCallbackAsync (slice' connection' resolveLinkTos' userCredentials' lastCommitPosition' lastEventNumber).ConfigureAwait (false); " is 143.
Long Statement,EventStore.ClientAPI,EventStoreStreamCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsCallbackAsync,The length of the statement  "		await ReadEventsInternalAsync (connection' resolveLinkTos' userCredentials' lastCommitPosition' lastEventNumber).ConfigureAwait (false); " is 136.
Long Statement,EventStore.ClientAPI,EventStoreStreamCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsCallbackAsync,The length of the statement  "			Log.Debug ("Catch-up Subscription {0} to {1}: finished reading events' nextReadEventNumber = {2}."' SubscriptionName' IsSubscribedToAll ? "<all>" : StreamId' _nextReadEventNumber); " is 180.
Long Statement,EventStore.ClientAPI,EventStoreStreamCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ProcessEventsAsync,The length of the statement  "			throw new Exception (string.Format ("Impossible: stream {0} disappeared in the middle of catching up subscription {1}."' StreamId' SubscriptionName)); " is 150.
Long Statement,EventStore.ClientAPI,EventStoreStreamCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ProcessEventsAsync,The length of the statement  "		throw new ArgumentOutOfRangeException (string.Format ("Subscription {0} unexpected StreamEventsSlice.Status: {0}."' SubscriptionName' slice.Status)); " is 149.
Long Statement,EventStore.ClientAPI,EventStoreStreamCatchUpSubscription,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,TryProcessAsync,The length of the statement  "		Log.Debug ("Catch-up Subscription {0} to {1}: {2} event ({3}' {4}' {5} @ {6})."' SubscriptionName' IsSubscribedToAll ? "<all>" : StreamId' processed ? "processed" : "skipping"' e.OriginalEvent.EventStreamId' e.OriginalEvent.EventNumber' e.OriginalEvent.EventType' e.OriginalEventNumber); " is 287.
Long Statement,EventStore.ClientAPI.ClientOperations,ConditionalAppendToStreamOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ConditionalAppendToStreamOperation.cs,CreateRequestDto,The length of the statement  "	var dtos = _events.Select (x => new ClientMessage.NewEvent (x.EventId.ToByteArray ()' x.Type' x.IsJson ? 1 : 0' 0' x.Data' x.Metadata)).ToArray (); " is 147.
Long Statement,EventStore.ClientAPI.ClientOperations,ConditionalAppendToStreamOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ConditionalAppendToStreamOperation.cs,TransformResponse,The length of the statement  "	return new ConditionalWriteResult (response.LastEventNumber' new Position (response.PreparePosition ?? -1' response.CommitPosition ?? -1)); " is 139.
Long Statement,EventStore.ClientAPI.ClientOperations,ConnectToPersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ConnectToPersistentSubscriptionOperation.cs,CreateSubscriptionPackage,The length of the statement  "	return new TcpPackage (TcpCommand.ConnectToPersistentSubscription' _userCredentials != null ? TcpFlags.Authenticated : TcpFlags.None' _correlationId' _userCredentials != null ? _userCredentials.Username : null' _userCredentials != null ? _userCredentials.Password : null' dto.Serialize ()); " is 290.
Long Statement,EventStore.ClientAPI.ClientOperations,ConnectToPersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ConnectToPersistentSubscriptionOperation.cs,InspectPackage,The length of the statement  "			DropSubscription (SubscriptionDropReason.AccessDenied' new AccessDeniedException ("You do not have access to the stream.")); " is 124.
Long Statement,EventStore.ClientAPI.ClientOperations,ConnectToPersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ConnectToPersistentSubscriptionOperation.cs,NotifyEventsProcessed,The length of the statement  "	var dto = new ClientMessage.PersistentSubscriptionAckEvents (_subscriptionId' processedEvents.Select (x => x.ToByteArray ()).ToArray ()); " is 137.
Long Statement,EventStore.ClientAPI.ClientOperations,ConnectToPersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ConnectToPersistentSubscriptionOperation.cs,NotifyEventsProcessed,The length of the statement  "	var package = new TcpPackage (TcpCommand.PersistentSubscriptionAckEvents' _userCredentials != null ? TcpFlags.Authenticated : TcpFlags.None' _correlationId' _userCredentials != null ? _userCredentials.Username : null' _userCredentials != null ? _userCredentials.Password : null' dto.Serialize ()); " is 297.
Long Statement,EventStore.ClientAPI.ClientOperations,ConnectToPersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ConnectToPersistentSubscriptionOperation.cs,NotifyEventsFailed,The length of the statement  "	var dto = new ClientMessage.PersistentSubscriptionNakEvents (_subscriptionId' processedEvents.Select (x => x.ToByteArray ()).ToArray ()' reason' (ClientMessage.PersistentSubscriptionNakEvents.NakAction)action); " is 210.
Long Statement,EventStore.ClientAPI.ClientOperations,ConnectToPersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ConnectToPersistentSubscriptionOperation.cs,NotifyEventsFailed,The length of the statement  "	var package = new TcpPackage (TcpCommand.PersistentSubscriptionNakEvents' _userCredentials != null ? TcpFlags.Authenticated : TcpFlags.None' _correlationId' _userCredentials != null ? _userCredentials.Username : null' _userCredentials != null ? _userCredentials.Password : null' dto.Serialize ()); " is 297.
Long Statement,EventStore.ClientAPI.ClientOperations,CreatePersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\CreatePersistentSubscriptionOperation.cs,CreateRequestDto,The length of the statement  "	return new ClientMessage.CreatePersistentSubscription (_groupName' _stream' _resolveLinkTos' _startFromBeginning' _messageTimeoutMilliseconds' _recordStatistics' _liveBufferSize' _readBatchSize' _bufferSize' _maxRetryCount' _namedConsumerStrategy == SystemConsumerStrategies.RoundRobin' _checkPointAfter' _maxCheckPointCount' _minCheckPointCount' _maxSubscriberCount' _namedConsumerStrategy); " is 392.
Long Statement,EventStore.ClientAPI.ClientOperations,CreatePersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\CreatePersistentSubscriptionOperation.cs,InspectResponse,The length of the statement  "		Fail (new InvalidOperationException (String.Format ("Subscription group {0} on stream {1} failed '{2}'"' _groupName' _stream' response.Reason))); " is 145.
Long Statement,EventStore.ClientAPI.ClientOperations,CreatePersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\CreatePersistentSubscriptionOperation.cs,InspectResponse,The length of the statement  "		Fail (new InvalidOperationException (String.Format ("Subscription group {0} on stream {1} already exists"' _groupName' _stream))); " is 130.
Long Statement,EventStore.ClientAPI.ClientOperations,DeletePersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\DeletePersistentSubscriptionOperation.cs,InspectResponse,The length of the statement  "		Fail (new InvalidOperationException (String.Format ("Subscription group {0} on stream {1} failed '{2}'"' _groupName' _stream' response.Reason))); " is 145.
Long Statement,EventStore.ClientAPI.ClientOperations,DeletePersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\DeletePersistentSubscriptionOperation.cs,InspectResponse,The length of the statement  "		Fail (new InvalidOperationException (String.Format ("Subscription group {0} on stream {1} does not exist"' _groupName' _stream))); " is 130.
Long Statement,EventStore.ClientAPI.ClientOperations,UpdatePersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\UpdatePersistentSubscriptionOperation.cs,CreateRequestDto,The length of the statement  "	return new ClientMessage.UpdatePersistentSubscription (_groupName' _stream' _resolveLinkTos' _startFromBeginning' _messageTimeoutMilliseconds' _recordStatistics' _liveBufferSize' _readBatchSize' _bufferSize' _maxRetryCount' _namedConsumerStrategy == SystemConsumerStrategies.RoundRobin' _checkPointAfter' _maxCheckPointCount' _minCheckPointCount' _maxSubscriberCount' _namedConsumerStrategy); " is 392.
Long Statement,EventStore.ClientAPI.ClientOperations,UpdatePersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\UpdatePersistentSubscriptionOperation.cs,InspectResponse,The length of the statement  "		Fail (new InvalidOperationException (String.Format ("Subscription group {0} on stream {1} failed '{2}'"' _groupName' _stream' response.Reason))); " is 145.
Long Statement,EventStore.ClientAPI.ClientOperations,UpdatePersistentSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\UpdatePersistentSubscriptionOperation.cs,InspectResponse,The length of the statement  "		Fail (new InvalidOperationException (String.Format ("Subscription group {0} on stream {1} does not exist"' _groupName' _stream))); " is 130.
Long Statement,EventStore.ClientAPI.ClientOperations,VolatileSubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\VolatileSubscriptionOperation.cs,CreateSubscriptionPackage,The length of the statement  "	return new TcpPackage (TcpCommand.SubscribeToStream' _userCredentials != null ? TcpFlags.Authenticated : TcpFlags.None' _correlationId' _userCredentials != null ? _userCredentials.Username : null' _userCredentials != null ? _userCredentials.Password : null' dto.Serialize ()); " is 276.
Long Statement,EventStore.ClientAPI.ClientOperations,CommitTransactionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\CommitTransactionOperation.cs,TransformResponse,The length of the statement  "	return new WriteResult (response.LastEventNumber' new Position (response.PreparePosition ?? -1' response.CommitPosition ?? -1)); " is 128.
Long Statement,EventStore.ClientAPI.ClientOperations,ReadEventOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadEventOperation.cs,ToString,The length of the statement  "	return string.Format ("Stream: {0}' EventNumber: {1}' ResolveLinkTo: {2}' RequireMaster: {3}"' _stream' _eventNumber' _resolveLinkTo' _requireMaster); " is 150.
Long Statement,EventStore.ClientAPI.ClientOperations,SubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\SubscriptionOperation.cs,CreateUnsubscriptionPackage,The length of the statement  "	return new TcpPackage (TcpCommand.UnsubscribeFromStream' _correlationId' new ClientMessage.UnsubscribeFromStream ().Serialize ()); " is 130.
Long Statement,EventStore.ClientAPI.ClientOperations,SubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\SubscriptionOperation.cs,InspectPackage,The length of the statement  "				DropSubscription (SubscriptionDropReason.AccessDenied' new AccessDeniedException (string.Format ("Subscription to '{0}' failed due to access denied."' _streamId == string.Empty ? "<all>" : _streamId))); " is 202.
Long Statement,EventStore.ClientAPI.ClientOperations,SubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\SubscriptionOperation.cs,InspectPackage,The length of the statement  "				DropSubscription (SubscriptionDropReason.NotFound' new ArgumentException (string.Format ("Subscription to '{0}' failed due to not found."' _streamId == string.Empty ? "<all>" : _streamId))); " is 190.
Long Statement,EventStore.ClientAPI.ClientOperations,SubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\SubscriptionOperation.cs,InspectPackage,The length of the statement  "				DropSubscription (SubscriptionDropReason.Unknown' new CommandNotExpectedException (string.Format ("Unsubscribe reason: '{0}'."' dto.Reason))); " is 142.
Long Statement,EventStore.ClientAPI.ClientOperations,SubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\SubscriptionOperation.cs,InspectPackage,The length of the statement  "			string message = Helper.EatException (() => Helper.UTF8NoBom.GetString (package.Data.Array' package.Data.Offset' package.Data.Count)); " is 134.
Long Statement,EventStore.ClientAPI.ClientOperations,SubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\SubscriptionOperation.cs,InspectPackage,The length of the statement  "			DropSubscription (SubscriptionDropReason.NotAuthenticated' new NotAuthenticatedException (string.IsNullOrEmpty (message) ? "Authentication error" : message)); " is 158.
Long Statement,EventStore.ClientAPI.ClientOperations,SubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\SubscriptionOperation.cs,InspectPackage,The length of the statement  "			string message = Helper.EatException (() => Helper.UTF8NoBom.GetString (package.Data.Array' package.Data.Offset' package.Data.Count)); " is 134.
Long Statement,EventStore.ClientAPI.ClientOperations,SubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\SubscriptionOperation.cs,InspectPackage,The length of the statement  "			DropSubscription (SubscriptionDropReason.ServerError' new ServerErrorException (string.IsNullOrEmpty (message) ? "<no message>" : message)); " is 140.
Long Statement,EventStore.ClientAPI.ClientOperations,SubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\SubscriptionOperation.cs,InspectPackage,The length of the statement  "				return new InspectionResult (InspectionDecision.Reconnect' "NotHandled - NotMaster"' masterInfo.ExternalTcpEndPoint' masterInfo.ExternalSecureTcpEndPoint); " is 155.
Long Statement,EventStore.ClientAPI.ClientOperations,SubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\SubscriptionOperation.cs,DropSubscription,The length of the statement  "			_log.Debug ("Subscription {0:B} to {1}: closing subscription' reason: {2}' exception: {3}..."' _correlationId' _streamId == string.Empty ? "<all>" : _streamId' reason' exc); " is 173.
Long Statement,EventStore.ClientAPI.ClientOperations,SubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\SubscriptionOperation.cs,ConfirmSubscription,The length of the statement  "		throw new ArgumentOutOfRangeException (nameof (lastCommitPosition)' string.Format ("Invalid lastCommitPosition {0} on subscription confirmation."' lastCommitPosition)); " is 168.
Long Statement,EventStore.ClientAPI.ClientOperations,SubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\SubscriptionOperation.cs,ConfirmSubscription,The length of the statement  "		_log.Debug ("Subscription {0:B} to {1}: subscribed at CommitPosition: {2}' EventNumber: {3}."' _correlationId' _streamId == string.Empty ? "<all>" : _streamId' lastCommitPosition' lastEventNumber); " is 197.
Long Statement,EventStore.ClientAPI.ClientOperations,SubscriptionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\SubscriptionOperation.cs,EventAppeared,The length of the statement  "		_log.Debug ("Subscription {0:B} to {1}: event appeared ({2}' {3}' {4} @ {5})."' _correlationId' _streamId == string.Empty ? "<all>" : _streamId' e.OriginalStreamId' e.OriginalEventNumber' e.OriginalEvent.EventType' e.OriginalPosition); " is 235.
Long Statement,EventStore.ClientAPI.ClientOperations,OperationBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\OperationBase.cs,CreateNetworkPackage,The length of the statement  "	return new TcpPackage (_requestCommand' UserCredentials != null ? TcpFlags.Authenticated : TcpFlags.None' correlationId' UserCredentials != null ? UserCredentials.Username : null' UserCredentials != null ? UserCredentials.Password : null' CreateRequestDto ().Serialize ()); " is 273.
Long Statement,EventStore.ClientAPI.ClientOperations,OperationBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\OperationBase.cs,InspectNotAuthenticated,The length of the statement  "	string message = Helper.EatException (() => Helper.UTF8NoBom.GetString (package.Data.Array' package.Data.Offset' package.Data.Count)); " is 134.
Long Statement,EventStore.ClientAPI.ClientOperations,OperationBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\OperationBase.cs,InspectBadRequest,The length of the statement  "	string message = Helper.EatException (() => Helper.UTF8NoBom.GetString (package.Data.Array' package.Data.Offset' package.Data.Count)); " is 134.
Long Statement,EventStore.ClientAPI.ClientOperations,OperationBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\OperationBase.cs,InspectNotHandled,The length of the statement  "		return new InspectionResult (InspectionDecision.Reconnect' "NotHandled - NotMaster"' masterInfo.ExternalTcpEndPoint' masterInfo.ExternalSecureTcpEndPoint); " is 155.
Long Statement,EventStore.ClientAPI.ClientOperations,OperationBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\OperationBase.cs,InspectUnexpectedCommand,The length of the statement  "	Log.Error ("Expected: {0}' Actual: {1}' Flags: {2}' CorrelationId: {3}"' expectedCommand' package.Command' package.Flags' package.CorrelationId); " is 145.
Long Statement,EventStore.ClientAPI.ClientOperations,OperationBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\OperationBase.cs,InspectUnexpectedCommand,The length of the statement  "	return new InspectionResult (InspectionDecision.EndOperation' string.Format ("Unexpected command - {0}"' package.Command.ToString ())); " is 135.
Long Statement,EventStore.ClientAPI.ClientOperations,ReadAllEventsBackwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadAllEventsBackwardOperation.cs,CreateRequestDto,The length of the statement  "	return new ClientMessage.ReadAllEvents (_position.CommitPosition' _position.PreparePosition' _maxCount' _resolveLinkTos' _requireMaster); " is 137.
Long Statement,EventStore.ClientAPI.ClientOperations,ReadAllEventsBackwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadAllEventsBackwardOperation.cs,TransformResponse,The length of the statement  "	return new AllEventsSlice (ReadDirection.Backward' new Position (response.CommitPosition' response.PreparePosition)' new Position (response.NextCommitPosition' response.NextPreparePosition)' response.Events); " is 208.
Long Statement,EventStore.ClientAPI.ClientOperations,ReadAllEventsBackwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadAllEventsBackwardOperation.cs,ToString,The length of the statement  "	return string.Format ("Position: {0}' MaxCount: {1}' ResolveLinkTos: {2}' RequireMaster: {3}"' _position' _maxCount' _resolveLinkTos' _requireMaster); " is 150.
Long Statement,EventStore.ClientAPI.ClientOperations,ReadAllEventsForwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadAllEventsForwardOperation.cs,CreateRequestDto,The length of the statement  "	return new ClientMessage.ReadAllEvents (_position.CommitPosition' _position.PreparePosition' _maxCount' _resolveLinkTos' _requireMaster); " is 137.
Long Statement,EventStore.ClientAPI.ClientOperations,ReadAllEventsForwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadAllEventsForwardOperation.cs,TransformResponse,The length of the statement  "	return new AllEventsSlice (ReadDirection.Forward' new Position (response.CommitPosition' response.PreparePosition)' new Position (response.NextCommitPosition' response.NextPreparePosition)' response.Events); " is 207.
Long Statement,EventStore.ClientAPI.ClientOperations,ReadAllEventsForwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadAllEventsForwardOperation.cs,ToString,The length of the statement  "	return string.Format ("Position: {0}' MaxCount: {1}' ResolveLinkTos: {2}' RequireMaster: {3}"' _position' _maxCount' _resolveLinkTos' _requireMaster); " is 150.
Long Statement,EventStore.ClientAPI.ClientOperations,ReadStreamEventsBackwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadStreamEventsBackwardOperation.cs,TransformResponse,The length of the statement  "	return new StreamEventsSlice (StatusCode.Convert (response.Result)' _stream' _fromEventNumber' ReadDirection.Backward' response.Events' response.NextEventNumber' response.LastEventNumber' response.IsEndOfStream); " is 212.
Long Statement,EventStore.ClientAPI.ClientOperations,ReadStreamEventsBackwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadStreamEventsBackwardOperation.cs,ToString,The length of the statement  "	return string.Format ("Stream: {0}' FromEventNumber: {1}' MaxCount: {2}' ResolveLinkTos: {3}' RequireMaster: {4}"' _stream' _fromEventNumber' _maxCount' _resolveLinkTos' _requireMaster); " is 186.
Long Statement,EventStore.ClientAPI.ClientOperations,StartTransactionOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\StartTransactionOperation.cs,InspectResponse,The length of the statement  "		var err = string.Format ("Start transaction failed due to WrongExpectedVersion. Stream: {0}' Expected version: {1}."' _stream' _expectedVersion); " is 145.
Long Statement,EventStore.ClientAPI.ClientOperations,TransactionalWriteOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\TransactionalWriteOperation.cs,CreateRequestDto,The length of the statement  "	var dtos = _events.Select (x => new ClientMessage.NewEvent (x.EventId.ToByteArray ()' x.Type' x.IsJson ? 1 : 0' 0' x.Data' x.Metadata)).ToArray (); " is 147.
Long Statement,EventStore.ClientAPI.ClientOperations,DeleteStreamOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\DeleteStreamOperation.cs,InspectResponse,The length of the statement  "		var err = string.Format ("Delete stream failed due to WrongExpectedVersion. Stream: {0}' Expected version: {1}."' _stream' _expectedVersion); " is 141.
Long Statement,EventStore.ClientAPI.ClientOperations,ReadStreamEventsForwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadStreamEventsForwardOperation.cs,TransformResponse,The length of the statement  "	return new StreamEventsSlice (StatusCode.Convert (response.Result)' _stream' _fromEventNumber' ReadDirection.Forward' response.Events' response.NextEventNumber' response.LastEventNumber' response.IsEndOfStream); " is 211.
Long Statement,EventStore.ClientAPI.ClientOperations,ReadStreamEventsForwardOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadStreamEventsForwardOperation.cs,ToString,The length of the statement  "	return string.Format ("Stream: {0}' FromEventNumber: {1}' MaxCount: {2}' ResolveLinkTos: {3}' RequireMaster: {4}"' _stream' _fromEventNumber' _maxCount' _resolveLinkTos' _requireMaster); " is 186.
Long Statement,EventStore.ClientAPI.ClientOperations,AppendToStreamOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\AppendToStreamOperation.cs,CreateRequestDto,The length of the statement  "	var dtos = _events.Select (x => new ClientMessage.NewEvent (x.EventId.ToByteArray ()' x.Type' x.IsJson ? 1 : 0' 0' x.Data' x.Metadata)).ToArray (); " is 147.
Long Statement,EventStore.ClientAPI.ClientOperations,AppendToStreamOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\AppendToStreamOperation.cs,InspectResponse,The length of the statement  "		var err = string.Format ("Append failed due to WrongExpectedVersion. Stream: {0}' Expected version: {1}' Current version: {2}"' _stream' _expectedVersion' response.CurrentVersion); " is 180.
Long Statement,EventStore.ClientAPI.ClientOperations,AppendToStreamOperation,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\AppendToStreamOperation.cs,TransformResponse,The length of the statement  "	return new WriteResult (response.LastEventNumber' new Position (response.PreparePosition ?? -1' response.CommitPosition ?? -1)); " is 128.
Long Statement,EventStore.ClientAPI.Common.Log,ConsoleLogger,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Common\Log\ConsoleLogger.cs,Log,The length of the statement  "	return string.Format ("[{0:00}'{1:HH:mm:ss.fff}'{2}] {3}"' Thread.CurrentThread.ManagedThreadId' DateTime.UtcNow' level' args.Length == 0 ? format : string.Format (format' args)); " is 179.
Long Statement,EventStore.ClientAPI.Common.Log,ConsoleLogger,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Common\Log\ConsoleLogger.cs,Log,The length of the statement  "	return string.Format ("[{0:00}'{1:HH:mm:ss.fff}'{2}] {3}\nEXCEPTION(S) OCCURRED:{4}"' Thread.CurrentThread.ManagedThreadId' DateTime.UtcNow' level' args.Length == 0 ? format : string.Format (format' args)' sb); " is 210.
Long Statement,EventStore.ClientAPI.Common.Log,DebugLogger,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Common\Log\DebugLogger.cs,Log,The length of the statement  "	return string.Format ("{0} EXCEPTION: {1}\nException: {2}"' level' args.Length == 0 ? format : string.Format (format' args)' exc); " is 130.
Long Statement,EventStore.ClientAPI.Common.Utils.Threading,ManualResetEventSlimExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Threading\ManualResetEventSlimExtensions.cs,AsTask,The length of the statement  "	RegisteredWaitHandle registration = ThreadPool.RegisterWaitForSingleObject (resetEvent.WaitHandle' (state' timedOut) => { " is 121.
Long Statement,EventStore.ClientAPI.Common.Utils.Threading,TaskExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Threading\TaskExtensions.cs,WithTimeout,The length of the statement  "		throw new OperationTimedOutException (string.Format ("The operation did not complete within the specified time of {0}"' timeout)); " is 130.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,DeleteStreamAsync,The length of the statement  "	EnqueueOperation (new DeleteStreamOperation (Settings.Log' source' Settings.RequireMaster' stream' expectedVersion' hardDelete' userCredentials)); " is 146.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,AppendToStreamAsync,The length of the statement  "	EnqueueOperation (new AppendToStreamOperation (Settings.Log' source' Settings.RequireMaster' stream' expectedVersion' events' userCredentials)); " is 144.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ConditionalAppendToStreamAsync,The length of the statement  "	EnqueueOperation (new ConditionalAppendToStreamOperation (Settings.Log' source' Settings.RequireMaster' stream' expectedVersion' events' userCredentials)); " is 155.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,StartTransactionAsync,The length of the statement  "	EnqueueOperation (new StartTransactionOperation (Settings.Log' source' Settings.RequireMaster' stream' expectedVersion' this' userCredentials)); " is 144.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,TransactionalWriteAsync,The length of the statement  "	EnqueueOperation (new TransactionalWriteOperation (Settings.Log' source' Settings.RequireMaster' transaction.TransactionId' events' userCredentials)); " is 150.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,CommitTransactionAsync,The length of the statement  "	EnqueueOperation (new CommitTransactionOperation (Settings.Log' source' Settings.RequireMaster' transaction.TransactionId' userCredentials)); " is 141.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ReadEventAsync,The length of the statement  "	var operation = new ReadEventOperation (Settings.Log' source' stream' eventNumber' resolveLinkTos' Settings.RequireMaster' userCredentials); " is 140.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ReadStreamEventsForwardAsync,The length of the statement  "		throw new ArgumentException (string.Format ("Count should be less than {0}. For larger reads you should page."' Consts.MaxReadSize)); " is 133.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ReadStreamEventsForwardAsync,The length of the statement  "	var operation = new ReadStreamEventsForwardOperation (Settings.Log' source' stream' start' count' resolveLinkTos' Settings.RequireMaster' userCredentials); " is 155.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ReadStreamEventsBackwardAsync,The length of the statement  "		throw new ArgumentException (string.Format ("Count should be less than {0}. For larger reads you should page."' Consts.MaxReadSize)); " is 133.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ReadStreamEventsBackwardAsync,The length of the statement  "	var operation = new ReadStreamEventsBackwardOperation (Settings.Log' source' stream' start' count' resolveLinkTos' Settings.RequireMaster' userCredentials); " is 156.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ReadAllEventsForwardAsync,The length of the statement  "		throw new ArgumentException (string.Format ("Count should be less than {0}. For larger reads you should page."' Consts.MaxReadSize)); " is 133.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ReadAllEventsForwardAsync,The length of the statement  "	var operation = new ReadAllEventsForwardOperation (Settings.Log' source' position' maxCount' resolveLinkTos' Settings.RequireMaster' userCredentials); " is 150.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ReadAllEventsBackwardAsync,The length of the statement  "		throw new ArgumentException (string.Format ("Count should be less than {0}. For larger reads you should page."' Consts.MaxReadSize)); " is 133.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ReadAllEventsBackwardAsync,The length of the statement  "	var operation = new ReadAllEventsBackwardOperation (Settings.Log' source' position' maxCount' resolveLinkTos' Settings.RequireMaster' userCredentials); " is 151.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToStreamAsync,The length of the statement  "	_handler.EnqueueMessage (new StartSubscriptionMessage (source' stream' resolveLinkTos' userCredentials' eventAppeared' subscriptionDropped' Settings.MaxRetries' Settings.OperationTimeout)); " is 189.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToStreamFrom,The length of the statement  "	var settings = new CatchUpSubscriptionSettings (Consts.CatchUpDefaultMaxPushQueueSize' readBatchSize' Settings.VerboseLogging' resolveLinkTos' subscriptionName); " is 161.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToStreamFrom,The length of the statement  "	return SubscribeToStreamFrom (stream' lastCheckpoint' settings' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials); " is 140.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToStreamFrom,The length of the statement  "	var catchUpSubscription = new EventStoreStreamCatchUpSubscription (this' Settings.Log' stream' lastCheckpoint' userCredentials' eventAppeared' liveProcessingStarted' subscriptionDropped' settings); " is 197.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToAllAsync,The length of the statement  "	_handler.EnqueueMessage (new StartSubscriptionMessage (source' string.Empty' resolveLinkTos' userCredentials' eventAppeared' subscriptionDropped' Settings.MaxRetries' Settings.OperationTimeout)); " is 195.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToAllFrom,The length of the statement  "	var settings = new CatchUpSubscriptionSettings (Consts.CatchUpDefaultMaxPushQueueSize' readBatchSize' Settings.VerboseLogging' resolveLinkTos' subscriptionName); " is 161.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToAllFrom,The length of the statement  "	return SubscribeToAllFrom (lastCheckpoint' settings' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials); " is 129.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToAllFrom,The length of the statement  "	var catchUpSubscription = new EventStoreAllCatchUpSubscription (this' Settings.Log' lastCheckpoint' userCredentials' eventAppeared' liveProcessingStarted' subscriptionDropped' settings); " is 186.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ConnectToPersistentSubscription,The length of the statement  "	var subscription = new EventStorePersistentSubscription (groupName' stream' eventAppeared' subscriptionDropped' userCredentials' Settings.Log' Settings.VerboseLogging' Settings' _handler' bufferSize' autoAck); " is 209.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ConnectToPersistentSubscriptionAsync,The length of the statement  "	var subscription = new EventStorePersistentSubscription (groupName' stream' eventAppeared' subscriptionDropped' userCredentials' Settings.Log' Settings.VerboseLogging' Settings' _handler' bufferSize' autoAck); " is 209.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,CreatePersistentSubscriptionAsync,The length of the statement  "	EnqueueOperation (new CreatePersistentSubscriptionOperation (Settings.Log' source' stream' groupName' settings' credentials)); " is 126.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,UpdatePersistentSubscriptionAsync,The length of the statement  "	EnqueueOperation (new UpdatePersistentSubscriptionOperation (Settings.Log' source' stream' groupName' settings' credentials)); " is 126.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,DeletePersistentSubscriptionAsync,The length of the statement  "	EnqueueOperation (new DeletePersistentSubscriptionOperation (Settings.Log' source' stream' groupName' userCredentials)); " is 120.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SetStreamMetadataAsync,The length of the statement  "		throw new ArgumentException (string.Format ("Setting metadata for metastream '{0}' is not supported."' stream)' nameof (stream)); " is 129.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SetStreamMetadataAsync,The length of the statement  "	var metaevent = new EventData (Guid.NewGuid ()' SystemEventTypes.StreamMetadata' true' metadata ?? Empty.ByteArray' null); " is 122.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SetStreamMetadataAsync,The length of the statement  "	EnqueueOperation (new AppendToStreamOperation (Settings.Log' source' Settings.RequireMaster' SystemStreams.MetastreamOf (stream)' expectedMetastreamVersion' new[] { " is 164.
Long Statement,EventStore.ClientAPI.Internal,EventStoreNodeConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SetSystemSettingsAsync,The length of the statement  "	return AppendToStreamAsync (SystemStreams.SettingsStream' ExpectedVersion.Any' userCredentials' new EventData (Guid.NewGuid ()' SystemEventTypes.Settings' true' settings.ToJsonBytes ()' null)); " is 193.
Long Statement,EventStore.ClientAPI.Internal,NodeEndPoints,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\NodeEndPoints.cs,ToString,The length of the statement  "	return string.Format ("[{0}' {1}]"' TcpEndPoint == null ? "n/a" : TcpEndPoint.ToString ()' SecureTcpEndPoint == null ? "n/a" : SecureTcpEndPoint.ToString ()); " is 158.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,StartConnection,The length of the statement  "		task.SetException (new InvalidOperationException (string.Format ("EventStoreConnection '{0}' is already active."' _esConnection.ConnectionName))); " is 146.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,EstablishTcpConnection,The length of the statement  "	var endPoint = _settings.UseSslConnection ? endPoints.SecureTcpEndPoint ?? endPoints.TcpEndPoint : endPoints.TcpEndPoint; " is 121.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,EstablishTcpConnection,The length of the statement  "	_connection = new TcpPackageConnection (_settings.Log' endPoint' Guid.NewGuid ()' _settings.UseSslConnection' _settings.TargetHost' _settings.ValidateServer' _settings.ClientConnectionTimeout' (connection' package) => EnqueueMessage (new HandleTcpPackageMessage (connection' package))' (connection' exc) => EnqueueMessage (new TcpConnectionErrorMessage (connection' exc))' connection => EnqueueMessage (new TcpConnectionEstablishedMessage (connection))' (connection' error) => EnqueueMessage (new TcpConnectionClosedMessage (connection' error))); " is 546.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,TcpConnectionClosed,The length of the statement  "		LogDebug ("IGNORED (_state: {0}' _conn.ID: {1:B}' conn.ID: {2:B}): TCP connection to [{3}' L{4}] closed."' _state' _connection == null ? Guid.Empty : _connection.ConnectionId' connection.ConnectionId' connection.RemoteEndPoint' connection.LocalEndPoint); " is 254.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,TcpConnectionClosed,The length of the statement  "	LogDebug ("TCP connection to [{0}' L{1}' {2:B}] closed."' connection.RemoteEndPoint' connection.LocalEndPoint' connection.ConnectionId); " is 136.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,TcpConnectionEstablished,The length of the statement  "		LogDebug ("IGNORED (_state {0}' _conn.Id {1:B}' conn.Id {2:B}' conn.closed {3}): TCP connection to [{4}' L{5}] established."' _state' _connection == null ? Guid.Empty : _connection.ConnectionId' connection.ConnectionId' connection.IsClosed' connection.RemoteEndPoint' connection.LocalEndPoint); " is 294.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,TcpConnectionEstablished,The length of the statement  "	LogDebug ("TCP connection to [{0}' L{1}' {2:B}] established."' connection.RemoteEndPoint' connection.LocalEndPoint' connection.ConnectionId); " is 141.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,TcpConnectionEstablished,The length of the statement  "		_connection.EnqueueSend (new TcpPackage (TcpCommand.Authenticate' TcpFlags.Authenticated' _authInfo.CorrelationId' _settings.DefaultUserCredentials.Username' _settings.DefaultUserCredentials.Password' null)); " is 208.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,TimerTick,The length of the statement  "		if (_connectingPhase == ConnectingPhase.Reconnecting && _stopwatch.Elapsed - _reconnInfo.TimeStamp >= _settings.ReconnectionDelay) { " is 132.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,TimerTick,The length of the statement  "		if (_connectingPhase == ConnectingPhase.Authentication && _stopwatch.Elapsed - _authInfo.TimeStamp >= _settings.OperationTimeout) { " is 131.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,TimerTick,The length of the statement  "		if (_connectingPhase == ConnectingPhase.Identification && _stopwatch.Elapsed - _identifyInfo.TimeStamp >= _settings.OperationTimeout) { " is 135.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,ManageHeartbeats,The length of the statement  "		var msg = string.Format ("EventStoreConnection '{0}': closing TCP connection [{1}' {2}' {3}] due to HEARTBEAT TIMEOUT at pkgNum {4}."' _esConnection.ConnectionName' _connection.RemoteEndPoint' _connection.LocalEndPoint' _connection.ConnectionId' packageNumber); " is 261.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,StartOperation,The length of the statement  "		operation.Fail (new InvalidOperationException (string.Format ("EventStoreConnection '{0}' is not active."' _esConnection.ConnectionName))); " is 139.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,StartSubscription,The length of the statement  "		msg.Source.SetException (new InvalidOperationException (string.Format ("EventStoreConnection '{0}' is not active."' _esConnection.ConnectionName))); " is 148.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,StartSubscription,The length of the statement  "		var operation = new VolatileSubscriptionOperation (_settings.Log' msg.Source' msg.StreamId' msg.ResolveLinkTos' msg.UserCredentials' msg.EventAppeared' msg.SubscriptionDropped' _settings.VerboseLogging' () => _connection); " is 222.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,StartSubscription,The length of the statement  "		LogDebug ("StartSubscription {4} {0}' {1}' {2}' {3}."' operation.GetType ().Name' operation' msg.MaxRetries' msg.Timeout' _state == ConnectionState.Connected ? "fire" : "enqueue"); " is 180.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,StartSubscription,The length of the statement  "		msg.Source.SetException (new InvalidOperationException (string.Format ("EventStoreConnection '{0}' is not active."' _esConnection.ConnectionName))); " is 148.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,StartSubscription,The length of the statement  "		var operation = new ConnectToPersistentSubscriptionOperation (_settings.Log' msg.Source' msg.SubscriptionId' msg.BufferSize' msg.StreamId' msg.UserCredentials' msg.EventAppeared' msg.SubscriptionDropped' _settings.VerboseLogging' () => _connection); " is 249.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,StartSubscription,The length of the statement  "		LogDebug ("StartSubscription {4} {0}' {1}' {2}' {3}."' operation.GetType ().Name' operation' msg.MaxRetries' msg.Timeout' _state == ConnectionState.Connected ? "fire" : "enqueue"); " is 180.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,HandleTcpPackage,The length of the statement  "		LogDebug ("IGNORED: HandleTcpPackage connId {0}' package {1}' {2}."' connection.ConnectionId' package.Command' package.CorrelationId); " is 134.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,HandleTcpPackage,The length of the statement  "	LogDebug ("HandleTcpPackage connId {0}' package {1}' {2}."' _connection.ConnectionId' package.Command' package.CorrelationId); " is 126.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,HandleTcpPackage,The length of the statement  "		if (_state == ConnectionState.Connecting && _connectingPhase == ConnectingPhase.Authentication && _authInfo.CorrelationId == package.CorrelationId) { " is 149.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,HandleTcpPackage,The length of the statement  "		string message = Helper.EatException (() => Helper.UTF8NoBom.GetString (package.Data.Array' package.Data.Offset' package.Data.Count)); " is 134.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,HandleTcpPackage,The length of the statement  "		var exc = new EventStoreConnectionException (string.Format ("Bad request received from server. Error: {0}"' string.IsNullOrEmpty (message) ? "<no message>" : message)); " is 168.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,HandleTcpPackage,The length of the statement  "		LogDebug ("HandleTcpPackage UNMAPPED PACKAGE with CorrelationId {0:B}' Command: {1}"' package.CorrelationId' package.Command); " is 126.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,ReconnectTo,The length of the statement  "	IPEndPoint endPoint = _settings.UseSslConnection ? endPoints.SecureTcpEndPoint ?? endPoints.TcpEndPoint : endPoints.TcpEndPoint; " is 128.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,ReconnectTo,The length of the statement  "	var msg = string.Format ("EventStoreConnection '{0}': going to reconnect to [{1}]. Current endpoint: [{2}' L{3}]."' _esConnection.ConnectionName' endPoint' _connection.RemoteEndPoint' _connection.LocalEndPoint); " is 211.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,LogDebug,The length of the statement  "		_settings.Log.Debug ("EventStoreConnection '{0}': {1}."' _esConnection.ConnectionName' parameters.Length == 0 ? message : string.Format (message' parameters)); " is 159.
Long Statement,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,LogInfo,The length of the statement  "		_settings.Log.Info ("EventStoreConnection '{0}': {1}."' _esConnection.ConnectionName' parameters.Length == 0 ? message : string.Format (message' parameters)); " is 158.
Long Statement,EventStore.ClientAPI.Internal,OperationItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\OperationsManager.cs,ToString,The length of the statement  "	return string.Format ("Operation {0} ({1:D}): {2}' retry count: {3}' created: {4:HH:mm:ss.fff}' last updated: {5:HH:mm:ss.fff}"' Operation.GetType ().Name' CorrelationId' Operation' RetryCount' CreatedTime' LastUpdated); " is 220.
Long Statement,EventStore.ClientAPI.Internal,OperationsManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\OperationsManager.cs,CleanUp,The length of the statement  "	var connectionClosedException = new ConnectionClosedException (string.Format ("Connection '{0}' was closed."' _connectionName)); " is 128.
Long Statement,EventStore.ClientAPI.Internal,OperationsManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\OperationsManager.cs,CheckTimeoutsAndRetry,The length of the statement  "			var err = string.Format ("EventStoreConnection '{0}': operation never got response from server.\n" + "UTC now: {1:HH:mm:ss.fff}' operation: {2}."' _connectionName' DateTime.UtcNow' operation); " is 192.
Long Statement,EventStore.ClientAPI.Internal,OperationsManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\OperationsManager.cs,LogDebug,The length of the statement  "		_settings.Log.Debug ("EventStoreConnection '{0}': {1}."' _connectionName' parameters.Length == 0 ? message : string.Format (message' parameters)); " is 146.
Long Statement,EventStore.ClientAPI.Internal,SubscriptionItem,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\SubscriptionsManager.cs,ToString,The length of the statement  "	return string.Format ("Subscription {0} ({1:D}): {2}' is subscribed: {3}' retry count: {4}' " + "created: {5:HH:mm:ss.fff}' last updated: {6:HH:mm:ss.fff}"' Operation.GetType ().Name' CorrelationId' Operation' IsSubscribed' RetryCount' CreatedTime' LastUpdated); " is 262.
Long Statement,EventStore.ClientAPI.Internal,SubscriptionsManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\SubscriptionsManager.cs,CleanUp,The length of the statement  "	var connectionClosedException = new ConnectionClosedException (string.Format ("Connection '{0}' was closed."' _connectionName)); " is 128.
Long Statement,EventStore.ClientAPI.Internal,SubscriptionsManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\SubscriptionsManager.cs,CleanUp,The length of the statement  "	foreach (var subscription in _activeSubscriptions.Values.Concat (_waitingSubscriptions).Concat (_retryPendingSubscriptions)) { " is 126.
Long Statement,EventStore.ClientAPI.Internal,SubscriptionsManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\SubscriptionsManager.cs,PurgeSubscribedAndDroppedSubscriptions,The length of the statement  "	foreach (var subscription in _activeSubscriptions.Values.Where (x => x.IsSubscribed && x.ConnectionId == connectionId)) { " is 121.
Long Statement,EventStore.ClientAPI.Internal,SubscriptionsManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\SubscriptionsManager.cs,CheckTimeoutsAndRetry,The length of the statement  "		} else if (subscription.Timeout > TimeSpan.Zero && DateTime.UtcNow - subscription.LastUpdated > _settings.OperationTimeout) { " is 125.
Long Statement,EventStore.ClientAPI.Internal,SubscriptionsManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\SubscriptionsManager.cs,CheckTimeoutsAndRetry,The length of the statement  "			var err = String.Format ("EventStoreConnection '{0}': subscription never got confirmation from server.\n" + "UTC now: {1:HH:mm:ss.fff}' operation: {2}."' _connectionName' DateTime.UtcNow' subscription); " is 202.
Long Statement,EventStore.ClientAPI.Internal,SubscriptionsManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\SubscriptionsManager.cs,CheckTimeoutsAndRetry,The length of the statement  "				subscription.Operation.DropSubscription (SubscriptionDropReason.SubscribingError' new OperationTimedOutException (err)); " is 120.
Long Statement,EventStore.ClientAPI.Internal,SubscriptionsManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\SubscriptionsManager.cs,ScheduleSubscriptionRetry,The length of the statement  "		subscription.Operation.DropSubscription (SubscriptionDropReason.SubscribingError' new RetriesLimitReachedException (subscription.ToString ()' subscription.RetryCount)); " is 168.
Long Statement,EventStore.ClientAPI.Internal,SubscriptionsManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\SubscriptionsManager.cs,LogDebug,The length of the statement  "		_settings.Log.Debug ("EventStoreConnection '{0}': {1}."' _connectionName' parameters.Length == 0 ? message : string.Format (message' parameters)); " is 146.
Long Statement,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,DiscoverEndPoint,The length of the statement  "	var gossipCandidates = oldGossip != null ? GetGossipCandidatesFromOldGossip (oldGossip' failedEndPoint) : GetGossipCandidatesFromDns (); " is 136.
Long Statement,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,GetGossipCandidatesFromDns,The length of the statement  "		endpoints = ResolveDns (_clusterDns).Select (x => new GossipSeed (new IPEndPoint (x' _managerExternalHttpPort))).ToArray (); " is 124.
Long Statement,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,GetGossipCandidatesFromOldGossip,The length of the statement  "	//_log.Debug("ClusterDnsEndPointDiscoverer: GetGossipCandidatesFromOldGossip' failedTcpEndPoint: {0}."' failedTcpEndPoint); " is 123.
Long Statement,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,GetGossipCandidatesFromOldGossip,The length of the statement  "	var gossipCandidates = failedTcpEndPoint == null ? oldGossip.ToArray () : oldGossip.Where (x => !(x.ExternalTcpPort == failedTcpEndPoint.Port && IPAddress.Parse (x.ExternalTcpIp).Equals (failedTcpEndPoint.Address))).ToArray (); " is 227.
Long Statement,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,ArrangeGossipCandidates,The length of the statement  "			result [--j] = new GossipSeed (new IPEndPoint (IPAddress.Parse (members [k].ExternalHttpIp)' members [k].ExternalHttpPort)); " is 124.
Long Statement,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,ArrangeGossipCandidates,The length of the statement  "			result [++i] = new GossipSeed (new IPEndPoint (IPAddress.Parse (members [k].ExternalHttpIp)' members [k].ExternalHttpPort)); " is 124.
Long Statement,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,TryGetGossipFrom,The length of the statement  "			//_log.Debug("ClusterDnsEndPointDiscoverer: Got gossip from [{0}]:\n{1}."' endPoint' string.Join("\n"' result.Members.Select(x => x.ToString()))); " is 146.
Long Statement,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,TryDetermineBestNode,The length of the statement  "	var nodes = members.Where (x => x.IsAlive).Where (x => !notAllowedStates.Contains (x.State)).OrderByDescending (x => x.State).ToArray (); " is 137.
Long Statement,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,TryDetermineBestNode,The length of the statement  "		//_log.Info("Unable to locate suitable node. Gossip info:\n{0}."' string.Join("\n"' members.Select(x => x.ToString()))); " is 120.
Long Statement,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,TryDetermineBestNode,The length of the statement  "	var secTcp = node.ExternalSecureTcpPort > 0 ? new IPEndPoint (IPAddress.Parse (node.ExternalTcpIp)' node.ExternalSecureTcpPort) : null; " is 135.
Long Statement,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,TryDetermineBestNode,The length of the statement  "	_log.Info ("Discovering: found best choice [{0}'{1}] ({2})."' normTcp' secTcp == null ? "n/a" : secTcp.ToString ()' node.State); " is 128.
Long Statement,EventStore.ClientAPI.Projections,ProjectionsClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,Enable,The length of the statement  "	return SendPost (endPoint.ToHttpUrl ("/projection/{0}/command/enable"' name)' string.Empty' userCredentials' HttpStatusCode.OK); " is 128.
Long Statement,EventStore.ClientAPI.Projections,ProjectionsClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,Disable,The length of the statement  "	return SendPost (endPoint.ToHttpUrl ("/projection/{0}/command/disable"' name)' string.Empty' userCredentials' HttpStatusCode.OK); " is 129.
Long Statement,EventStore.ClientAPI.Projections,ProjectionsClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,Abort,The length of the statement  "	return SendPost (endPoint.ToHttpUrl ("/projection/{0}/command/abort"' name)' string.Empty' userCredentials' HttpStatusCode.OK); " is 127.
Long Statement,EventStore.ClientAPI.Projections,ProjectionsClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,CreateTransient,The length of the statement  "	return SendPost (endPoint.ToHttpUrl ("/projections/transient?name={0}&type=JS"' name)' query' userCredentials' HttpStatusCode.Created); " is 135.
Long Statement,EventStore.ClientAPI.Projections,ProjectionsClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,CreateContinuous,The length of the statement  "	return SendPost (endPoint.ToHttpUrl ("/projections/continuous?name={0}&type=JS&emit=1&trackemittedstreams={1}"' name' trackEmitted)' query' userCredentials' HttpStatusCode.Created); " is 181.
Long Statement,EventStore.ClientAPI.Projections,ProjectionsClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,ListContinuous,The length of the statement  "	return SendGet (endPoint.ToHttpUrl ("/projections/continuous")' userCredentials' HttpStatusCode.OK).ContinueWith (x => { " is 120.
Long Statement,EventStore.ClientAPI.Projections,ProjectionsClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,GetPartitionStateAsync,The length of the statement  "	return SendGet (endPoint.ToHttpUrl ("/projection/{0}/state?partition={1}"' name' partition)' userCredentials' HttpStatusCode.OK); " is 129.
Long Statement,EventStore.ClientAPI.Projections,ProjectionsClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,GetPartitionResultAsync,The length of the statement  "	return SendGet (endPoint.ToHttpUrl ("/projection/{0}/result?partition={1}"' name' partition)' userCredentials' HttpStatusCode.OK); " is 130.
Long Statement,EventStore.ClientAPI.Projections,ProjectionsClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,Delete,The length of the statement  "	return SendDelete (endPoint.ToHttpUrl ("/projection/{0}?deleteEmittedStreams={1}"' name' deleteEmittedStreams)' userCredentials' HttpStatusCode.OK); " is 148.
Long Statement,EventStore.ClientAPI.Projections,ProjectionsClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,SendGet,The length of the statement  "			source.SetException (new ProjectionCommandFailedException (response.HttpStatusCode' string.Format ("Server returned {0} ({1}) for GET on {2}"' response.HttpStatusCode' response.StatusDescription' url))); " is 203.
Long Statement,EventStore.ClientAPI.Projections,ProjectionsClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,SendDelete,The length of the statement  "			source.SetException (new ProjectionCommandFailedException (response.HttpStatusCode' string.Format ("Server returned {0} ({1}) for DELETE on {2}"' response.HttpStatusCode' response.StatusDescription' url))); " is 206.
Long Statement,EventStore.ClientAPI.Projections,ProjectionsClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,SendPut,The length of the statement  "			source.SetException (new ProjectionCommandFailedException (response.HttpStatusCode' string.Format ("Server returned {0} ({1}) for PUT on {2}"' response.HttpStatusCode' response.StatusDescription' url))); " is 203.
Long Statement,EventStore.ClientAPI.Projections,ProjectionsClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,SendPost,The length of the statement  "			source.SetException (new ProjectionCommandFailedException (response.HttpStatusCode' string.Format ("Server returned {0} ({1}) for POST on {2}"' response.HttpStatusCode' response.StatusDescription' url))); " is 204.
Long Statement,EventStore.ClientAPI.UserManagement,UsersClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersClient.cs,Enable,The length of the statement  "	return SendPost (endPoint.ToHttpUrl ("/users/{0}/command/enable"' login)' string.Empty' userCredentials' HttpStatusCode.OK); " is 124.
Long Statement,EventStore.ClientAPI.UserManagement,UsersClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersClient.cs,Disable,The length of the statement  "	return SendPost (endPoint.ToHttpUrl ("/users/{0}/command/disable"' login)' string.Empty' userCredentials' HttpStatusCode.OK); " is 125.
Long Statement,EventStore.ClientAPI.UserManagement,UsersClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersClient.cs,ChangePassword,The length of the statement  "	return SendPost (endPoint.ToHttpUrl ("/users/{0}/command/change-password"' login)' changePasswordDetails.ToJson ()' userCredentials' HttpStatusCode.OK); " is 152.
Long Statement,EventStore.ClientAPI.UserManagement,UsersClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersClient.cs,ResetPassword,The length of the statement  "	return SendPost (endPoint.ToHttpUrl ("/users/{0}/command/reset-password"' login)' resetPasswordDetails.ToJson ()' userCredentials' HttpStatusCode.OK); " is 150.
Long Statement,EventStore.ClientAPI.UserManagement,UsersClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersClient.cs,SendGet,The length of the statement  "			source.SetException (new UserCommandFailedException (response.HttpStatusCode' string.Format ("Server returned {0} ({1}) for GET on {2}"' response.HttpStatusCode' response.StatusDescription' url))); " is 197.
Long Statement,EventStore.ClientAPI.UserManagement,UsersClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersClient.cs,SendDelete,The length of the statement  "			source.SetException (new UserCommandFailedException (response.HttpStatusCode' string.Format ("Server returned {0} ({1}) for DELETE on {2}"' response.HttpStatusCode' response.StatusDescription' url))); " is 200.
Long Statement,EventStore.ClientAPI.UserManagement,UsersClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersClient.cs,SendPut,The length of the statement  "			source.SetException (new UserCommandFailedException (response.HttpStatusCode' string.Format ("Server returned {0} ({1}) for PUT on {2}"' response.HttpStatusCode' response.StatusDescription' url))); " is 197.
Long Statement,EventStore.ClientAPI.UserManagement,UsersClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersClient.cs,SendPost,The length of the statement  "			source.SetException (new UserCommandFailedException (response.HttpStatusCode' string.Format ("Server returned {0} ({1}) for POST on {2}"' response.HttpStatusCode' response.StatusDescription' url))); " is 198.
Long Statement,EventStore.ClientAPI.UserManagement,UsersManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersManager.cs,CreateUserAsync,The length of the statement  "	return _client.CreateUser (_httpEndPoint' new UserCreationInformation (login' fullName' groups' password)' userCredentials); " is 124.
Long Statement,EventStore.ClientAPI.UserManagement,UsersManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersManager.cs,ChangePasswordAsync,The length of the statement  "	return _client.ChangePassword (_httpEndPoint' login' new ChangePasswordDetails (oldPassword' newPassword)' userCredentials); " is 124.
Long Statement,EventStore.ClientAPI.SystemData,TcpPackage,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,FromArraySegment,The length of the statement  "	return new TcpPackage (command' flags' correlationId' login' pass' new ArraySegment<byte> (data.Array' data.Offset + headerSize' data.Count - headerSize)); " is 155.
Long Statement,EventStore.ClientAPI.SystemData,TcpPackage,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,AsByteArray,The length of the statement  "			throw new ArgumentException (string.Format ("Login serialized length should be less than 256 bytes (but is {0})."' loginLen)); " is 126.
Long Statement,EventStore.ClientAPI.SystemData,TcpPackage,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,AsByteArray,The length of the statement  "			throw new ArgumentException (string.Format ("Password serialized length should be less than 256 bytes (but is {0})."' passLen)); " is 128.
Long Statement,EventStore.ClientAPI.Transport.Http,IPEndPointExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\IPEndpointExtensions.cs,ToHttpUrl,The length of the statement  "	return string.Format ("http://{0}:{1}/{2}"' endPoint.Address' endPoint.Port' rawUrl != null ? rawUrl.TrimStart ('/') : string.Empty); " is 133.
Long Statement,EventStore.ClientAPI.Transport.Http,IPEndPointExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\IPEndpointExtensions.cs,ToHttpUrl,The length of the statement  "	return string.Format ("http://{0}:{1}/{2}"' endPoint.Address' endPoint.Port' string.Format (formatString.TrimStart ('/')' args)); " is 129.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnection.cs,ProcessReceive,The length of the statement  "		CloseInternal (socketArgs.SocketError' socketArgs.SocketError != SocketError.Success ? "Socket receive error" : "Socket closed"); " is 129.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnection.cs,CloseInternal,The length of the statement  "	_log.Info ("ClientAPI {0} closed [{1:HH:mm:ss.fff}: N{2}' L{3}' {4:B}]:"' GetType ().Name' DateTime.UtcNow' RemoteEndPoint' LocalEndPoint' _connectionId); " is 154.
Long Statement,EventStore.ClientAPI.Transport.Tcp,LengthPrefixMessageFramer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\LengthPrefixFramer.cs,Parse,The length of the statement  "				throw new PackageFramingException (string.Format ("Package size is out of bounds: {0} (max: {1}). This is likely an exceptionally large message (reading too many things) or there is a problem with the framing if working on a new client."' _packageLength' _maxPackageSize)); " is 273.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpConnectionLockless,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionLockless.cs,ProcessReceive,The length of the statement  "		CloseInternal (socketArgs.SocketError' socketArgs.SocketError != SocketError.Success ? "Socket receive error" : "Socket closed"); " is 129.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpConnectionLockless,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionLockless.cs,CloseInternal,The length of the statement  "	_log.Info ("ClientAPI {0} closed [{1:HH:mm:ss.fff}: N{2}' L{3}' {4:B}]:"' GetType ().Name' DateTime.UtcNow' RemoteEndPoint' LocalEndPoint' _connectionId); " is 154.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,AnalyzeConnections,The length of the statement  "	var stats = new TcpStats (connections.Length' _sentTotal' _receivedTotal' _sentSinceLastRun' _receivedSinceLastRun' _pendingSendOnLastRun' _inSendOnLastRun' _pendingReceivedOnLastRun' measurePeriod); " is 199.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckMissingReceiveCallback,The length of the statement  "		_log.Error ("# {0} {1}ms since last Receive started. No completion callback received' but socket status is READY_FOR_RECEIVE"' connection' sinceLastReceive); " is 157.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckMissingSendCallback,The length of the statement  "		_log.Error ("# {0} {1}ms since last send started. No completion callback received' but socket status is READY_FOR_SEND. In send: {2}"' connection' sinceLastSend' inSendBytes); " is 175.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpConnectionSsl,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionSsl.cs,DisplaySslStreamInfo,The length of the statement  "		sb.AppendFormat ("Local certificate was issued to {0} and is valid from {1} until {2}.\n"' localCert.Subject' localCert.GetEffectiveDateString ()' localCert.GetExpirationDateString ()); " is 185.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpConnectionSsl,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionSsl.cs,DisplaySslStreamInfo,The length of the statement  "		sb.AppendFormat ("Remote certificate was issued to {0} and is valid from {1} until {2}.\n"' remoteCert.Subject' remoteCert.GetEffectiveDateString ()' remoteCert.GetExpirationDateString ()); " is 189.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpConnectionSsl,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionSsl.cs,TryDequeueReceivedData,The length of the statement  "	} while (_receiveQueue.Count > 0 && _receiveCallback != null && Interlocked.CompareExchange (ref _receiveHandling' 1' 0) == 0); " is 127.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpConnectionSsl,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionSsl.cs,CloseInternal,The length of the statement  "	_log.Info ("ClientAPI {0} closed [{1:HH:mm:ss.fff}: S{2}' L{3}' {4:B}]:"' GetType ().Name' DateTime.UtcNow' RemoteEndPoint' LocalEndPoint' _connectionId); " is 154.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpPackageConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpPackageConnection.cs,OnRawDataReceived,The length of the statement  "		_log.Error (exc' "TcpPackageConnection: [{0}' L{1}' {2:B}]. Invalid TCP frame received."' RemoteEndPoint' LocalEndPoint' ConnectionId); " is 135.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpPackageConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpPackageConnection.cs,IncomingMessageArrived,The length of the statement  "		_connection.Close (string.Format ("Error when processing TcpPackage {0}: {1}"' valid ? package.Command.ToString () : "<invalid package>"' e.Message)); " is 150.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpPackageConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpPackageConnection.cs,IncomingMessageArrived,The length of the statement  "		var message = string.Format ("TcpPackageConnection: [{0}' L{1}' {2}] ERROR for {3}. Connection will be closed."' RemoteEndPoint' LocalEndPoint' ConnectionId' valid ? package.Command.ToString () : "<invalid package>"); " is 217.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpClientConnector,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpClientConnector.cs,ConnectTo,The length of the statement  "		return TcpConnectionSsl.CreateConnectingConnection (log' connectionId' remoteEndPoint' targetHost' validateServer' this' timeout' onConnectionEstablished' onConnectionFailed' onConnectionClosed); " is 195.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpClientConnector,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpClientConnector.cs,ConnectTo,The length of the statement  "	return TcpConnection.CreateConnectingConnection (log' connectionId' remoteEndPoint' this' timeout' onConnectionEstablished' onConnectionFailed' onConnectionClosed); " is 164.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpClientConnector,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpClientConnector.cs,RemoveFromConnecting,The length of the statement  "	return _pendingConections.TryRemove (pendingConnection.Connection.ConnectionId' out conn) && Interlocked.CompareExchange (ref conn.Done' 1' 0) == 0; " is 148.
Complex Conditional,EventStore.ClientAPI.Transport.Tcp,TcpConnectionSsl,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionSsl.cs,TrySend,The conditional expression  "_isSending || _sendQueue.Count == 0 || _sslStream == null || !_isAuthenticated"  is complex.
Empty Catch Block,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,TryGetGossipFrom,The method has an empty catch block.
Empty Catch Block,EventStore.ClientAPI.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Helper.cs,EatException,The method has an empty catch block.
Magic Number,EventStore.ClientAPI,ConnectionString,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ConnectionString.cs,ConnectionString,The following statement contains a magic number: translators = new Dictionary<Type' Func<string' object>> () {  	{  		typeof(int)'  		x => int.Parse (x' CultureInfo.InvariantCulture)  	}'  	{  		typeof(decimal)'  		x => decimal.Parse (x' CultureInfo.InvariantCulture)  	}'  	{  		typeof(string)'  		x => x  	}'  	{  		typeof(bool)'  		x => bool.Parse (x)  	}'  	{  		typeof(long)'  		x => long.Parse (x' CultureInfo.InvariantCulture)  	}'  	{  		typeof(byte)'  		x => byte.Parse (x' CultureInfo.InvariantCulture)  	}'  	{  		typeof(double)'  		x => double.Parse (x' CultureInfo.InvariantCulture)  	}'  	{  		typeof(float)'  		x => float.Parse (x' CultureInfo.InvariantCulture)  	}'  	{  		typeof(TimeSpan)'  		x => TimeSpan.FromMilliseconds (int.Parse (x' CultureInfo.InvariantCulture))  	}'  	{  		typeof(GossipSeed[])'  		x => x.Split (''').Select (q => {  			try {  				var pieces = q.Trim ().Split (':');  				if (pieces.Length != 2)  					throw new Exception ("Could not split IP address from port.");  				return new GossipSeed (new IPEndPoint (IPAddress.Parse (pieces [0])' int.Parse (pieces [1])));  			} catch (Exception ex) {  				throw new Exception (string.Format ("Gossip seed {0} is not in correct format"' q)' ex);  			}  		}).ToArray ()  	}'  	{  		typeof(UserCredentials)'  		x => {  			try {  				var pieces = x.Trim ().Split (':');  				if (pieces.Length != 2)  					throw new Exception ("Could not split into username and password.");  				return new UserCredentials (pieces [0]' pieces [1]);  			} catch (Exception ex) {  				throw new Exception (string.Format ("User credentials {0} is not in correct format. Expected format is username:password."' x)' ex);  			}  		}  	}  };  
Magic Number,EventStore.ClientAPI,ConnectionString,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ConnectionString.cs,ConnectionString,The following statement contains a magic number: translators = new Dictionary<Type' Func<string' object>> () {  	{  		typeof(int)'  		x => int.Parse (x' CultureInfo.InvariantCulture)  	}'  	{  		typeof(decimal)'  		x => decimal.Parse (x' CultureInfo.InvariantCulture)  	}'  	{  		typeof(string)'  		x => x  	}'  	{  		typeof(bool)'  		x => bool.Parse (x)  	}'  	{  		typeof(long)'  		x => long.Parse (x' CultureInfo.InvariantCulture)  	}'  	{  		typeof(byte)'  		x => byte.Parse (x' CultureInfo.InvariantCulture)  	}'  	{  		typeof(double)'  		x => double.Parse (x' CultureInfo.InvariantCulture)  	}'  	{  		typeof(float)'  		x => float.Parse (x' CultureInfo.InvariantCulture)  	}'  	{  		typeof(TimeSpan)'  		x => TimeSpan.FromMilliseconds (int.Parse (x' CultureInfo.InvariantCulture))  	}'  	{  		typeof(GossipSeed[])'  		x => x.Split (''').Select (q => {  			try {  				var pieces = q.Trim ().Split (':');  				if (pieces.Length != 2)  					throw new Exception ("Could not split IP address from port.");  				return new GossipSeed (new IPEndPoint (IPAddress.Parse (pieces [0])' int.Parse (pieces [1])));  			} catch (Exception ex) {  				throw new Exception (string.Format ("Gossip seed {0} is not in correct format"' q)' ex);  			}  		}).ToArray ()  	}'  	{  		typeof(UserCredentials)'  		x => {  			try {  				var pieces = x.Trim ().Split (':');  				if (pieces.Length != 2)  					throw new Exception ("Could not split into username and password.");  				return new UserCredentials (pieces [0]' pieces [1]);  			} catch (Exception ex) {  				throw new Exception (string.Format ("User credentials {0} is not in correct format. Expected format is username:password."' x)' ex);  			}  		}  	}  };  
Magic Number,EventStore.ClientAPI,ConnectionString,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ConnectionString.cs,ConnectionString,The following statement contains a magic number: try {  	var pieces = q.Trim ().Split (':');  	if (pieces.Length != 2)  		throw new Exception ("Could not split IP address from port.");  	return new GossipSeed (new IPEndPoint (IPAddress.Parse (pieces [0])' int.Parse (pieces [1])));  } catch (Exception ex) {  	throw new Exception (string.Format ("Gossip seed {0} is not in correct format"' q)' ex);  }  
Magic Number,EventStore.ClientAPI,ConnectionString,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ConnectionString.cs,ConnectionString,The following statement contains a magic number: if (pieces.Length != 2)  	throw new Exception ("Could not split IP address from port.");  
Magic Number,EventStore.ClientAPI,ConnectionString,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ConnectionString.cs,ConnectionString,The following statement contains a magic number: try {  	var pieces = x.Trim ().Split (':');  	if (pieces.Length != 2)  		throw new Exception ("Could not split into username and password.");  	return new UserCredentials (pieces [0]' pieces [1]);  } catch (Exception ex) {  	throw new Exception (string.Format ("User credentials {0} is not in correct format. Expected format is username:password."' x)' ex);  }  
Magic Number,EventStore.ClientAPI,ConnectionString,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\ConnectionString.cs,ConnectionString,The following statement contains a magic number: if (pieces.Length != 2)  	throw new Exception ("Could not split into username and password.");  
Magic Number,EventStore.ClientAPI,EventStorePersistentSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscriptionBase.cs,Acknowledge,The following statement contains a magic number: if (ids.Length > 2000)  	throw new ArgumentOutOfRangeException ("events"' "events is limited to 2000 to ack at a time");  
Magic Number,EventStore.ClientAPI,EventStorePersistentSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscriptionBase.cs,Acknowledge,The following statement contains a magic number: if (ids.Length > 2000)  	throw new ArgumentOutOfRangeException ("events"' "events is limited to 2000 to ack at a time");  
Magic Number,EventStore.ClientAPI,EventStorePersistentSubscriptionBase,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscriptionBase.cs,Fail,The following statement contains a magic number: if (ids.Length > 2000)  	throw new ArgumentOutOfRangeException ("events"' "events is limited to 2000 to ack at a time");  
Magic Number,EventStore.ClientAPI,PersistentSubscriptionSettings,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,Create,The following statement contains a magic number: return new PersistentSubscriptionSettingsBuilder (false' -1' false' TimeSpan.FromSeconds (30)' 500' 500' 10' 20' TimeSpan.FromSeconds (2)' 10' 1000' 0' SystemConsumerStrategies.RoundRobin);  
Magic Number,EventStore.ClientAPI,PersistentSubscriptionSettings,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,Create,The following statement contains a magic number: return new PersistentSubscriptionSettingsBuilder (false' -1' false' TimeSpan.FromSeconds (30)' 500' 500' 10' 20' TimeSpan.FromSeconds (2)' 10' 1000' 0' SystemConsumerStrategies.RoundRobin);  
Magic Number,EventStore.ClientAPI,PersistentSubscriptionSettings,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,Create,The following statement contains a magic number: return new PersistentSubscriptionSettingsBuilder (false' -1' false' TimeSpan.FromSeconds (30)' 500' 500' 10' 20' TimeSpan.FromSeconds (2)' 10' 1000' 0' SystemConsumerStrategies.RoundRobin);  
Magic Number,EventStore.ClientAPI,PersistentSubscriptionSettings,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,Create,The following statement contains a magic number: return new PersistentSubscriptionSettingsBuilder (false' -1' false' TimeSpan.FromSeconds (30)' 500' 500' 10' 20' TimeSpan.FromSeconds (2)' 10' 1000' 0' SystemConsumerStrategies.RoundRobin);  
Magic Number,EventStore.ClientAPI,PersistentSubscriptionSettings,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,Create,The following statement contains a magic number: return new PersistentSubscriptionSettingsBuilder (false' -1' false' TimeSpan.FromSeconds (30)' 500' 500' 10' 20' TimeSpan.FromSeconds (2)' 10' 1000' 0' SystemConsumerStrategies.RoundRobin);  
Magic Number,EventStore.ClientAPI,PersistentSubscriptionSettings,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,Create,The following statement contains a magic number: return new PersistentSubscriptionSettingsBuilder (false' -1' false' TimeSpan.FromSeconds (30)' 500' 500' 10' 20' TimeSpan.FromSeconds (2)' 10' 1000' 0' SystemConsumerStrategies.RoundRobin);  
Magic Number,EventStore.ClientAPI,PersistentSubscriptionSettings,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,Create,The following statement contains a magic number: return new PersistentSubscriptionSettingsBuilder (false' -1' false' TimeSpan.FromSeconds (30)' 500' 500' 10' 20' TimeSpan.FromSeconds (2)' 10' 1000' 0' SystemConsumerStrategies.RoundRobin);  
Magic Number,EventStore.ClientAPI,PersistentSubscriptionSettings,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,Create,The following statement contains a magic number: return new PersistentSubscriptionSettingsBuilder (false' -1' false' TimeSpan.FromSeconds (30)' 500' 500' 10' 20' TimeSpan.FromSeconds (2)' 10' 1000' 0' SystemConsumerStrategies.RoundRobin);  
Magic Number,EventStore.ClientAPI,EventStoreConnection,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreConnection.cs,GetCredentialFromUri,The following statement contains a magic number: if (pieces.Length != 2)  	throw new Exception (string.Format ("Unable to parse user information '{0}'"' uri.UserInfo));  
Magic Number,EventStore.ClientAPI,Position,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Position.cs,GetHashCode,The following statement contains a magic number: unchecked {  	return (CommitPosition.GetHashCode () * 397) ^ PreparePosition.GetHashCode ();  }  
Magic Number,EventStore.ClientAPI,Position,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Position.cs,GetHashCode,The following statement contains a magic number: return (CommitPosition.GetHashCode () * 397) ^ PreparePosition.GetHashCode ();  
Magic Number,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,DiscoverAsync,The following statement contains a magic number: return Task.Factory.StartNew (() => {  	for (int attempt = 1; attempt <= _maxDiscoverAttempts; ++attempt) {  		//_log.Info("Discovering cluster. Attempt {0}/{1}..."' attempt' _maxDiscoverAttempts);  		try {  			var endPoints = DiscoverEndPoint (failedTcpEndPoint);  			if (endPoints != null) {  				_log.Info ("Discovering attempt {0}/{1} successful: best candidate is {2}."' attempt' _maxDiscoverAttempts' endPoints);  				return endPoints.Value;  			}  			_log.Info ("Discovering attempt {0}/{1} failed: no candidate found."' attempt' _maxDiscoverAttempts);  		} catch (Exception exc) {  			_log.Info ("Discovering attempt {0}/{1} failed with error: {2}."' attempt' _maxDiscoverAttempts' exc);  		}  		Thread.Sleep (500);  	}  	throw new ClusterException (string.Format ("Failed to discover candidate in {0} attempts."' _maxDiscoverAttempts));  });  
Magic Number,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,DiscoverAsync,The following statement contains a magic number: for (int attempt = 1; attempt <= _maxDiscoverAttempts; ++attempt) {  	//_log.Info("Discovering cluster. Attempt {0}/{1}..."' attempt' _maxDiscoverAttempts);  	try {  		var endPoints = DiscoverEndPoint (failedTcpEndPoint);  		if (endPoints != null) {  			_log.Info ("Discovering attempt {0}/{1} successful: best candidate is {2}."' attempt' _maxDiscoverAttempts' endPoints);  			return endPoints.Value;  		}  		_log.Info ("Discovering attempt {0}/{1} failed: no candidate found."' attempt' _maxDiscoverAttempts);  	} catch (Exception exc) {  		_log.Info ("Discovering attempt {0}/{1} failed with error: {2}."' attempt' _maxDiscoverAttempts' exc);  	}  	Thread.Sleep (500);  }  
Magic Number,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,DiscoverAsync,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,EventStore.ClientAPI.Projections,ProjectionsClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,SendPost,The following statement contains a magic number: _client.Post (url' content' "application/json"' userCredentials' response => {  	if (response.HttpStatusCode == expectedCode)  		source.SetResult (null);  	else if (response.HttpStatusCode == 409)  		source.SetException (new ProjectionCommandConflictException (response.HttpStatusCode' response.StatusDescription));  	else  		source.SetException (new ProjectionCommandFailedException (response.HttpStatusCode' string.Format ("Server returned {0} ({1}) for POST on {2}"' response.HttpStatusCode' response.StatusDescription' url)));  }' source.SetException);  
Magic Number,EventStore.ClientAPI.Projections,ProjectionsClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,SendPost,The following statement contains a magic number: if (response.HttpStatusCode == expectedCode)  	source.SetResult (null);  else if (response.HttpStatusCode == 409)  	source.SetException (new ProjectionCommandConflictException (response.HttpStatusCode' response.StatusDescription));  else  	source.SetException (new ProjectionCommandFailedException (response.HttpStatusCode' string.Format ("Server returned {0} ({1}) for POST on {2}"' response.HttpStatusCode' response.StatusDescription' url)));  
Magic Number,EventStore.ClientAPI.Projections,ProjectionsClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,SendPost,The following statement contains a magic number: if (response.HttpStatusCode == 409)  	source.SetException (new ProjectionCommandConflictException (response.HttpStatusCode' response.StatusDescription));  else  	source.SetException (new ProjectionCommandFailedException (response.HttpStatusCode' string.Format ("Server returned {0} ({1}) for POST on {2}"' response.HttpStatusCode' response.StatusDescription' url)));  
Magic Number,EventStore.ClientAPI.Common,SystemStreams,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Common\SystemNames.cs,OriginalStreamOf,The following statement contains a magic number: return metastreamId.Substring (2);  
Magic Number,EventStore.ClientAPI.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row) {  	sb.AppendFormat ("{0:000000}:"' row * 16);  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur >= len)  			sb.Append ("   ");  		else  			sb.AppendFormat (" {0:X2}"' logBulk.Array [logBulk.Offset + cur]);  	}  	sb.Append ("  | ");  	cur -= 16;  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur < len) {  			var b = (char)logBulk.Array [logBulk.Offset + cur];  			sb.Append (char.IsControl (b) ? '.' : b);  		}  	}  	sb.AppendLine ();  }  
Magic Number,EventStore.ClientAPI.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row) {  	sb.AppendFormat ("{0:000000}:"' row * 16);  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur >= len)  			sb.Append ("   ");  		else  			sb.AppendFormat (" {0:X2}"' logBulk.Array [logBulk.Offset + cur]);  	}  	sb.Append ("  | ");  	cur -= 16;  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur < len) {  			var b = (char)logBulk.Array [logBulk.Offset + cur];  			sb.Append (char.IsControl (b) ? '.' : b);  		}  	}  	sb.AppendLine ();  }  
Magic Number,EventStore.ClientAPI.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row) {  	sb.AppendFormat ("{0:000000}:"' row * 16);  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur >= len)  			sb.Append ("   ");  		else  			sb.AppendFormat (" {0:X2}"' logBulk.Array [logBulk.Offset + cur]);  	}  	sb.Append ("  | ");  	cur -= 16;  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur < len) {  			var b = (char)logBulk.Array [logBulk.Offset + cur];  			sb.Append (char.IsControl (b) ? '.' : b);  		}  	}  	sb.AppendLine ();  }  
Magic Number,EventStore.ClientAPI.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row) {  	sb.AppendFormat ("{0:000000}:"' row * 16);  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur >= len)  			sb.Append ("   ");  		else  			sb.AppendFormat (" {0:X2}"' logBulk.Array [logBulk.Offset + cur]);  	}  	sb.Append ("  | ");  	cur -= 16;  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur < len) {  			var b = (char)logBulk.Array [logBulk.Offset + cur];  			sb.Append (char.IsControl (b) ? '.' : b);  		}  	}  	sb.AppendLine ();  }  
Magic Number,EventStore.ClientAPI.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row) {  	sb.AppendFormat ("{0:000000}:"' row * 16);  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur >= len)  			sb.Append ("   ");  		else  			sb.AppendFormat (" {0:X2}"' logBulk.Array [logBulk.Offset + cur]);  	}  	sb.Append ("  | ");  	cur -= 16;  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur < len) {  			var b = (char)logBulk.Array [logBulk.Offset + cur];  			sb.Append (char.IsControl (b) ? '.' : b);  		}  	}  	sb.AppendLine ();  }  
Magic Number,EventStore.ClientAPI.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row) {  	sb.AppendFormat ("{0:000000}:"' row * 16);  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur >= len)  			sb.Append ("   ");  		else  			sb.AppendFormat (" {0:X2}"' logBulk.Array [logBulk.Offset + cur]);  	}  	sb.Append ("  | ");  	cur -= 16;  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur < len) {  			var b = (char)logBulk.Array [logBulk.Offset + cur];  			sb.Append (char.IsControl (b) ? '.' : b);  		}  	}  	sb.AppendLine ();  }  
Magic Number,EventStore.ClientAPI.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: sb.AppendFormat ("{0:000000}:"' row * 16);  
Magic Number,EventStore.ClientAPI.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int i = 0; i < 16; ++i' ++cur) {  	if (cur >= len)  		sb.Append ("   ");  	else  		sb.AppendFormat (" {0:X2}"' logBulk.Array [logBulk.Offset + cur]);  }  
Magic Number,EventStore.ClientAPI.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: cur -= 16;  
Magic Number,EventStore.ClientAPI.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int i = 0; i < 16; ++i' ++cur) {  	if (cur < len) {  		var b = (char)logBulk.Array [logBulk.Offset + cur];  		sb.Append (char.IsControl (b) ? '.' : b);  	}  }  
Magic Number,EventStore.ClientAPI.UserManagement,UsersClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersClient.cs,SendPost,The following statement contains a magic number: _client.Post (url' content' "application/json"' userCredentials' response => {  	if (response.HttpStatusCode == expectedCode)  		source.SetResult (null);  	else if (response.HttpStatusCode == 409)  		source.SetException (new UserCommandConflictException (response.HttpStatusCode' response.StatusDescription));  	else  		source.SetException (new UserCommandFailedException (response.HttpStatusCode' string.Format ("Server returned {0} ({1}) for POST on {2}"' response.HttpStatusCode' response.StatusDescription' url)));  }' source.SetException);  
Magic Number,EventStore.ClientAPI.UserManagement,UsersClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersClient.cs,SendPost,The following statement contains a magic number: if (response.HttpStatusCode == expectedCode)  	source.SetResult (null);  else if (response.HttpStatusCode == 409)  	source.SetException (new UserCommandConflictException (response.HttpStatusCode' response.StatusDescription));  else  	source.SetException (new UserCommandFailedException (response.HttpStatusCode' string.Format ("Server returned {0} ({1}) for POST on {2}"' response.HttpStatusCode' response.StatusDescription' url)));  
Magic Number,EventStore.ClientAPI.UserManagement,UsersClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersClient.cs,SendPost,The following statement contains a magic number: if (response.HttpStatusCode == 409)  	source.SetException (new UserCommandConflictException (response.HttpStatusCode' response.StatusDescription));  else  	source.SetException (new UserCommandFailedException (response.HttpStatusCode' string.Format ("Server returned {0} ({1}) for POST on {2}"' response.HttpStatusCode' response.StatusDescription' url)));  
Magic Number,EventStore.ClientAPI.SystemData,TcpPackage,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,FromArraySegment,The following statement contains a magic number: Buffer.BlockCopy (data.Array' data.Offset + CorrelationOffset' guidBytes' 0' 16);  
Magic Number,EventStore.ClientAPI.SystemData,TcpPackage,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,AsByteArray,The following statement contains a magic number: if ((Flags & TcpFlags.Authenticated) != 0) {  	var loginLen = Helper.UTF8NoBom.GetByteCount (Login);  	var passLen = Helper.UTF8NoBom.GetByteCount (Password);  	if (loginLen > 255)  		throw new ArgumentException (string.Format ("Login serialized length should be less than 256 bytes (but is {0})."' loginLen));  	if (passLen > 255)  		throw new ArgumentException (string.Format ("Password serialized length should be less than 256 bytes (but is {0})."' passLen));  	var res = new byte[MandatorySize + 2 + loginLen + passLen + Data.Count];  	res [CommandOffset] = (byte)Command;  	res [FlagsOffset] = (byte)Flags;  	Buffer.BlockCopy (CorrelationId.ToByteArray ()' 0' res' CorrelationOffset' 16);  	res [AuthOffset] = (byte)loginLen;  	Helper.UTF8NoBom.GetBytes (Login' 0' Login.Length' res' AuthOffset + 1);  	res [AuthOffset + 1 + loginLen] = (byte)passLen;  	Helper.UTF8NoBom.GetBytes (Password' 0' Password.Length' res' AuthOffset + 1 + loginLen + 1);  	Buffer.BlockCopy (Data.Array' Data.Offset' res' res.Length - Data.Count' Data.Count);  	return res;  } else {  	var res = new byte[MandatorySize + Data.Count];  	res [CommandOffset] = (byte)Command;  	res [FlagsOffset] = (byte)Flags;  	Buffer.BlockCopy (CorrelationId.ToByteArray ()' 0' res' CorrelationOffset' 16);  	Buffer.BlockCopy (Data.Array' Data.Offset' res' res.Length - Data.Count' Data.Count);  	return res;  }  
Magic Number,EventStore.ClientAPI.SystemData,TcpPackage,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,AsByteArray,The following statement contains a magic number: if ((Flags & TcpFlags.Authenticated) != 0) {  	var loginLen = Helper.UTF8NoBom.GetByteCount (Login);  	var passLen = Helper.UTF8NoBom.GetByteCount (Password);  	if (loginLen > 255)  		throw new ArgumentException (string.Format ("Login serialized length should be less than 256 bytes (but is {0})."' loginLen));  	if (passLen > 255)  		throw new ArgumentException (string.Format ("Password serialized length should be less than 256 bytes (but is {0})."' passLen));  	var res = new byte[MandatorySize + 2 + loginLen + passLen + Data.Count];  	res [CommandOffset] = (byte)Command;  	res [FlagsOffset] = (byte)Flags;  	Buffer.BlockCopy (CorrelationId.ToByteArray ()' 0' res' CorrelationOffset' 16);  	res [AuthOffset] = (byte)loginLen;  	Helper.UTF8NoBom.GetBytes (Login' 0' Login.Length' res' AuthOffset + 1);  	res [AuthOffset + 1 + loginLen] = (byte)passLen;  	Helper.UTF8NoBom.GetBytes (Password' 0' Password.Length' res' AuthOffset + 1 + loginLen + 1);  	Buffer.BlockCopy (Data.Array' Data.Offset' res' res.Length - Data.Count' Data.Count);  	return res;  } else {  	var res = new byte[MandatorySize + Data.Count];  	res [CommandOffset] = (byte)Command;  	res [FlagsOffset] = (byte)Flags;  	Buffer.BlockCopy (CorrelationId.ToByteArray ()' 0' res' CorrelationOffset' 16);  	Buffer.BlockCopy (Data.Array' Data.Offset' res' res.Length - Data.Count' Data.Count);  	return res;  }  
Magic Number,EventStore.ClientAPI.SystemData,TcpPackage,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,AsByteArray,The following statement contains a magic number: if ((Flags & TcpFlags.Authenticated) != 0) {  	var loginLen = Helper.UTF8NoBom.GetByteCount (Login);  	var passLen = Helper.UTF8NoBom.GetByteCount (Password);  	if (loginLen > 255)  		throw new ArgumentException (string.Format ("Login serialized length should be less than 256 bytes (but is {0})."' loginLen));  	if (passLen > 255)  		throw new ArgumentException (string.Format ("Password serialized length should be less than 256 bytes (but is {0})."' passLen));  	var res = new byte[MandatorySize + 2 + loginLen + passLen + Data.Count];  	res [CommandOffset] = (byte)Command;  	res [FlagsOffset] = (byte)Flags;  	Buffer.BlockCopy (CorrelationId.ToByteArray ()' 0' res' CorrelationOffset' 16);  	res [AuthOffset] = (byte)loginLen;  	Helper.UTF8NoBom.GetBytes (Login' 0' Login.Length' res' AuthOffset + 1);  	res [AuthOffset + 1 + loginLen] = (byte)passLen;  	Helper.UTF8NoBom.GetBytes (Password' 0' Password.Length' res' AuthOffset + 1 + loginLen + 1);  	Buffer.BlockCopy (Data.Array' Data.Offset' res' res.Length - Data.Count' Data.Count);  	return res;  } else {  	var res = new byte[MandatorySize + Data.Count];  	res [CommandOffset] = (byte)Command;  	res [FlagsOffset] = (byte)Flags;  	Buffer.BlockCopy (CorrelationId.ToByteArray ()' 0' res' CorrelationOffset' 16);  	Buffer.BlockCopy (Data.Array' Data.Offset' res' res.Length - Data.Count' Data.Count);  	return res;  }  
Magic Number,EventStore.ClientAPI.SystemData,TcpPackage,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,AsByteArray,The following statement contains a magic number: if ((Flags & TcpFlags.Authenticated) != 0) {  	var loginLen = Helper.UTF8NoBom.GetByteCount (Login);  	var passLen = Helper.UTF8NoBom.GetByteCount (Password);  	if (loginLen > 255)  		throw new ArgumentException (string.Format ("Login serialized length should be less than 256 bytes (but is {0})."' loginLen));  	if (passLen > 255)  		throw new ArgumentException (string.Format ("Password serialized length should be less than 256 bytes (but is {0})."' passLen));  	var res = new byte[MandatorySize + 2 + loginLen + passLen + Data.Count];  	res [CommandOffset] = (byte)Command;  	res [FlagsOffset] = (byte)Flags;  	Buffer.BlockCopy (CorrelationId.ToByteArray ()' 0' res' CorrelationOffset' 16);  	res [AuthOffset] = (byte)loginLen;  	Helper.UTF8NoBom.GetBytes (Login' 0' Login.Length' res' AuthOffset + 1);  	res [AuthOffset + 1 + loginLen] = (byte)passLen;  	Helper.UTF8NoBom.GetBytes (Password' 0' Password.Length' res' AuthOffset + 1 + loginLen + 1);  	Buffer.BlockCopy (Data.Array' Data.Offset' res' res.Length - Data.Count' Data.Count);  	return res;  } else {  	var res = new byte[MandatorySize + Data.Count];  	res [CommandOffset] = (byte)Command;  	res [FlagsOffset] = (byte)Flags;  	Buffer.BlockCopy (CorrelationId.ToByteArray ()' 0' res' CorrelationOffset' 16);  	Buffer.BlockCopy (Data.Array' Data.Offset' res' res.Length - Data.Count' Data.Count);  	return res;  }  
Magic Number,EventStore.ClientAPI.SystemData,TcpPackage,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,AsByteArray,The following statement contains a magic number: if ((Flags & TcpFlags.Authenticated) != 0) {  	var loginLen = Helper.UTF8NoBom.GetByteCount (Login);  	var passLen = Helper.UTF8NoBom.GetByteCount (Password);  	if (loginLen > 255)  		throw new ArgumentException (string.Format ("Login serialized length should be less than 256 bytes (but is {0})."' loginLen));  	if (passLen > 255)  		throw new ArgumentException (string.Format ("Password serialized length should be less than 256 bytes (but is {0})."' passLen));  	var res = new byte[MandatorySize + 2 + loginLen + passLen + Data.Count];  	res [CommandOffset] = (byte)Command;  	res [FlagsOffset] = (byte)Flags;  	Buffer.BlockCopy (CorrelationId.ToByteArray ()' 0' res' CorrelationOffset' 16);  	res [AuthOffset] = (byte)loginLen;  	Helper.UTF8NoBom.GetBytes (Login' 0' Login.Length' res' AuthOffset + 1);  	res [AuthOffset + 1 + loginLen] = (byte)passLen;  	Helper.UTF8NoBom.GetBytes (Password' 0' Password.Length' res' AuthOffset + 1 + loginLen + 1);  	Buffer.BlockCopy (Data.Array' Data.Offset' res' res.Length - Data.Count' Data.Count);  	return res;  } else {  	var res = new byte[MandatorySize + Data.Count];  	res [CommandOffset] = (byte)Command;  	res [FlagsOffset] = (byte)Flags;  	Buffer.BlockCopy (CorrelationId.ToByteArray ()' 0' res' CorrelationOffset' 16);  	Buffer.BlockCopy (Data.Array' Data.Offset' res' res.Length - Data.Count' Data.Count);  	return res;  }  
Magic Number,EventStore.ClientAPI.SystemData,TcpPackage,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,AsByteArray,The following statement contains a magic number: if (loginLen > 255)  	throw new ArgumentException (string.Format ("Login serialized length should be less than 256 bytes (but is {0})."' loginLen));  
Magic Number,EventStore.ClientAPI.SystemData,TcpPackage,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,AsByteArray,The following statement contains a magic number: if (passLen > 255)  	throw new ArgumentException (string.Format ("Password serialized length should be less than 256 bytes (but is {0})."' passLen));  
Magic Number,EventStore.ClientAPI.SystemData,TcpPackage,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,AsByteArray,The following statement contains a magic number: Buffer.BlockCopy (CorrelationId.ToByteArray ()' 0' res' CorrelationOffset' 16);  
Magic Number,EventStore.ClientAPI.SystemData,TcpPackage,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,AsByteArray,The following statement contains a magic number: Buffer.BlockCopy (CorrelationId.ToByteArray ()' 0' res' CorrelationOffset' 16);  
Magic Number,EventStore.ClientAPI.Transport.Http,HttpAsyncClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\HttpAsyncClient.cs,HttpAsyncClient,The following statement contains a magic number: ServicePointManager.MaxServicePointIdleTime = 10000;  
Magic Number,EventStore.ClientAPI.Transport.Http,HttpAsyncClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\HttpAsyncClient.cs,HttpAsyncClient,The following statement contains a magic number: ServicePointManager.DefaultConnectionLimit = 800;  
Magic Number,EventStore.ClientAPI.Transport.Tcp,LengthPrefixMessageFramer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\LengthPrefixFramer.cs,Parse,The following statement contains a magic number: for (int i = bytes.Offset; i < bytes.Offset + bytes.Count; i++) {  	if (_headerBytes < HeaderLength) {  		_packageLength |= (data [i] << (_headerBytes * 8));  		// little-endian order  		++_headerBytes;  		if (_headerBytes != HeaderLength)  			continue;  		if (_packageLength <= 0 || _packageLength > _maxPackageSize)  			throw new PackageFramingException (string.Format ("Package size is out of bounds: {0} (max: {1}). This is likely an exceptionally large message (reading too many things) or there is a problem with the framing if working on a new client."' _packageLength' _maxPackageSize));  		_messageBuffer = new byte[_packageLength];  	} else {  		int copyCnt = Math.Min (bytes.Count + bytes.Offset - i' _packageLength - _bufferIndex);  		Buffer.BlockCopy (bytes.Array' i' _messageBuffer' _bufferIndex' copyCnt);  		_bufferIndex += copyCnt;  		i += copyCnt - 1;  		if (_bufferIndex == _packageLength) {  			if (_receivedHandler != null)  				_receivedHandler (new ArraySegment<byte> (_messageBuffer' 0' _bufferIndex));  			_messageBuffer = null;  			_headerBytes = 0;  			_packageLength = 0;  			_bufferIndex = 0;  		}  	}  }  
Magic Number,EventStore.ClientAPI.Transport.Tcp,LengthPrefixMessageFramer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\LengthPrefixFramer.cs,Parse,The following statement contains a magic number: if (_headerBytes < HeaderLength) {  	_packageLength |= (data [i] << (_headerBytes * 8));  	// little-endian order  	++_headerBytes;  	if (_headerBytes != HeaderLength)  		continue;  	if (_packageLength <= 0 || _packageLength > _maxPackageSize)  		throw new PackageFramingException (string.Format ("Package size is out of bounds: {0} (max: {1}). This is likely an exceptionally large message (reading too many things) or there is a problem with the framing if working on a new client."' _packageLength' _maxPackageSize));  	_messageBuffer = new byte[_packageLength];  } else {  	int copyCnt = Math.Min (bytes.Count + bytes.Offset - i' _packageLength - _bufferIndex);  	Buffer.BlockCopy (bytes.Array' i' _messageBuffer' _bufferIndex' copyCnt);  	_bufferIndex += copyCnt;  	i += copyCnt - 1;  	if (_bufferIndex == _packageLength) {  		if (_receivedHandler != null)  			_receivedHandler (new ArraySegment<byte> (_messageBuffer' 0' _bufferIndex));  		_messageBuffer = null;  		_headerBytes = 0;  		_packageLength = 0;  		_bufferIndex = 0;  	}  }  
Magic Number,EventStore.ClientAPI.Transport.Tcp,LengthPrefixMessageFramer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\LengthPrefixFramer.cs,Parse,The following statement contains a magic number: _packageLength |= (data [i] << (_headerBytes * 8));  
Magic Number,EventStore.ClientAPI.Transport.Tcp,LengthPrefixMessageFramer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\LengthPrefixFramer.cs,FrameData,The following statement contains a magic number: yield return new ArraySegment<byte> (new[] {  	(byte)length'  	(byte)(length >> 8)'  	(byte)(length >> 16)'  	(byte)(length >> 24)  });  
Magic Number,EventStore.ClientAPI.Transport.Tcp,LengthPrefixMessageFramer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\LengthPrefixFramer.cs,FrameData,The following statement contains a magic number: yield return new ArraySegment<byte> (new[] {  	(byte)length'  	(byte)(length >> 8)'  	(byte)(length >> 16)'  	(byte)(length >> 24)  });  
Magic Number,EventStore.ClientAPI.Transport.Tcp,LengthPrefixMessageFramer,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\LengthPrefixFramer.cs,FrameData,The following statement contains a magic number: yield return new ArraySegment<byte> (new[] {  	(byte)length'  	(byte)(length >> 8)'  	(byte)(length >> 16)'  	(byte)(length >> 24)  });  
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckPendingSend,The following statement contains a magic number: if (pendingSendBytes > 128 * 1024) {  	_log.Info ("# {0} {1}kb pending send"' connection' pendingSendBytes / 1024);  }  
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckPendingSend,The following statement contains a magic number: if (pendingSendBytes > 128 * 1024) {  	_log.Info ("# {0} {1}kb pending send"' connection' pendingSendBytes / 1024);  }  
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckPendingSend,The following statement contains a magic number: if (pendingSendBytes > 128 * 1024) {  	_log.Info ("# {0} {1}kb pending send"' connection' pendingSendBytes / 1024);  }  
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckPendingSend,The following statement contains a magic number: _log.Info ("# {0} {1}kb pending send"' connection' pendingSendBytes / 1024);  
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckPendingReceived,The following statement contains a magic number: if (pendingReceivedBytes > 128 * 1024) {  	_log.Info ("# {0} {1}kb are not dispatched"' connection' pendingReceivedBytes / 1024);  }  
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckPendingReceived,The following statement contains a magic number: if (pendingReceivedBytes > 128 * 1024) {  	_log.Info ("# {0} {1}kb are not dispatched"' connection' pendingReceivedBytes / 1024);  }  
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckPendingReceived,The following statement contains a magic number: if (pendingReceivedBytes > 128 * 1024) {  	_log.Info ("# {0} {1}kb are not dispatched"' connection' pendingReceivedBytes / 1024);  }  
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckPendingReceived,The following statement contains a magic number: _log.Info ("# {0} {1}kb are not dispatched"' connection' pendingReceivedBytes / 1024);  
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpStats,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpStats.cs,TcpStats,The following statement contains a magic number: SendingSpeed = MeasureTime.TotalSeconds < 0.00001 ? 0 : SentBytesSinceLastRun / MeasureTime.TotalSeconds;  
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpStats,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpStats.cs,TcpStats,The following statement contains a magic number: ReceivingSpeed = MeasureTime.TotalSeconds < 0.00001 ? 0 : ReceivedBytesSinceLastRun / MeasureTime.TotalSeconds;  
Missing Default,EventStore.ClientAPI,StreamMetadata,F:\newReposMay17\EventStore_EventStore\src\EventStore.ClientAPI\StreamMetadata.cs,ReadAcl,The following switch statement is missing a default case: switch (name) {  case SystemMetadata.AclRead:  	read = ReadRoles (reader);  	break;  case SystemMetadata.AclWrite:  	write = ReadRoles (reader);  	break;  case SystemMetadata.AclDelete:  	delete = ReadRoles (reader);  	break;  case SystemMetadata.AclMetaRead:  	metaRead = ReadRoles (reader);  	break;  case SystemMetadata.AclMetaWrite:  	metaWrite = ReadRoles (reader);  	break;  }  
