Implementation smell,Namespace,Class,File,Method,Description
Complex Method,EventStore.ClientAPI,StreamMetadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\StreamMetadata.cs,FromJsonBytes,Cyclomatic complexity of the method is 9
Complex Method,EventStore.ClientAPI.ClientOperations,AppendToStreamOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\AppendToStreamOperation.cs,InspectResponse,Cyclomatic complexity of the method is 10
Complex Method,EventStore.ClientAPI.ClientOperations,CommitTransactionOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\CommitTransactionOperation.cs,InspectResponse,Cyclomatic complexity of the method is 9
Complex Method,EventStore.ClientAPI.ClientOperations,ConditionalAppendToStreamOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ConditionalAppendToStreamOperation.cs,InspectResponse,Cyclomatic complexity of the method is 10
Complex Method,EventStore.ClientAPI.ClientOperations,ConnectToPersistentSubscriptionOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ConnectToPersistentSubscriptionOperation.cs,InspectPackage,Cyclomatic complexity of the method is 8
Complex Method,EventStore.ClientAPI.ClientOperations,DeleteStreamOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\DeleteStreamOperation.cs,InspectResponse,Cyclomatic complexity of the method is 9
Complex Method,EventStore.ClientAPI.ClientOperations,StartTransactionOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\StartTransactionOperation.cs,InspectResponse,Cyclomatic complexity of the method is 9
Complex Method,EventStore.ClientAPI.ClientOperations,SubscriptionOperation<T;TE>,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\SubscriptionOperation.cs,InspectPackage,Cyclomatic complexity of the method is 14
Complex Method,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,TimerTick,Cyclomatic complexity of the method is 11
Complex Method,EventStore.ClientAPI.Internal,EventStoreConnectionLogicHandler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreConnectionLogicHandler.cs,HandleTcpPackage,Cyclomatic complexity of the method is 22
Complex Method,EventStore.ClientAPI.Internal,OperationsManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\OperationsManager.cs,CheckTimeoutsAndRetry,Cyclomatic complexity of the method is 10
Complex Method,EventStore.ClientAPI.Internal,SubscriptionsManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\SubscriptionsManager.cs,CheckTimeoutsAndRetry,Cyclomatic complexity of the method is 11
Complex Method,EventStore.ClientAPI.Transport.Tcp,TcpConnectionLockless,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionLockless.cs,TrySend,Cyclomatic complexity of the method is 8
Long Parameter List,EventStore.ClientAPI,CatchUpSubscriptionSettings,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\CatchUpSubscriptionSettings.cs,CatchUpSubscriptionSettings,The method has 5 parameters. Parameters: maxLiveQueueSize' readBatchSize' verboseLogging' resolveLinkTos' subscriptionName
Long Parameter List,EventStore.ClientAPI,ClusterSettings,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClusterSettings.cs,ClusterSettings,The method has 5 parameters. Parameters: clusterDns' maxDiscoverAttempts' externalGossipPort' gossipTimeout' nodePreference
Long Parameter List,EventStore.ClientAPI,ConnectionSettings,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ConnectionSettings.cs,ConnectionSettings,The method has 26 parameters. Parameters: log' verboseLogging' maxQueueSize' maxConcurrentItems' maxRetries' maxReconnections' requireMaster' reconnectionDelay' queueTimeout' operationTimeout' operationTimeoutCheckPeriod' defaultUserCredentials' useSslConnection' targetHost' validateServer' failOnNoServerResponse' heartbeatInterval' heartbeatTimeout' clientConnectionTimeout' clusterDns' gossipSeeds' maxDiscoverAttempts' externalGossipPort' gossipTimeout' nodePreference' customHttpClient
Long Parameter List,EventStore.ClientAPI,EventData,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\EventData.cs,EventData,The method has 5 parameters. Parameters: eventId' type' isJson' data' metadata
Long Parameter List,EventStore.ClientAPI,EventStoreCatchUpSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsTillAsync,The method has 5 parameters. Parameters: connection' resolveLinkTos' userCredentials' lastCommitPosition' lastEventNumber
Long Parameter List,EventStore.ClientAPI,EventStoreCatchUpSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,EventStoreCatchUpSubscription,The method has 8 parameters. Parameters: connection' log' streamId' userCredentials' eventAppeared' liveProcessingStarted' subscriptionDropped' settings
Long Parameter List,EventStore.ClientAPI,EventStoreAllCatchUpSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,EventStoreAllCatchUpSubscription,The method has 8 parameters. Parameters: connection' log' fromPositionExclusive' userCredentials' eventAppeared' liveProcessingStarted' subscriptionDropped' settings
Long Parameter List,EventStore.ClientAPI,EventStoreAllCatchUpSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsTillAsync,The method has 5 parameters. Parameters: connection' resolveLinkTos' userCredentials' lastCommitPosition' lastEventNumber
Long Parameter List,EventStore.ClientAPI,EventStoreStreamCatchUpSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,EventStoreStreamCatchUpSubscription,The method has 9 parameters. Parameters: connection' log' streamId' fromEventNumberExclusive' userCredentials' eventAppeared' liveProcessingStarted' subscriptionDropped' settings
Long Parameter List,EventStore.ClientAPI,EventStoreStreamCatchUpSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreCatchUpSubscription.cs,ReadEventsTillAsync,The method has 5 parameters. Parameters: connection' resolveLinkTos' userCredentials' lastCommitPosition' lastEventNumber
Long Parameter List,EventStore.ClientAPI,EventStorePersistentSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscription.cs,EventStorePersistentSubscription,The method has 11 parameters. Parameters: subscriptionId' streamId' eventAppeared' subscriptionDropped' userCredentials' log' verboseLogging' settings' handler' bufferSize' autoAck
Long Parameter List,EventStore.ClientAPI,EventStorePersistentSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscription.cs,StartSubscription,The method has 7 parameters. Parameters: subscriptionId' streamId' bufferSize' userCredentials' onEventAppeared' onSubscriptionDropped' settings
Long Parameter List,EventStore.ClientAPI,EventStorePersistentSubscriptionBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscriptionBase.cs,EventStorePersistentSubscriptionBase,The method has 10 parameters. Parameters: subscriptionId' streamId' eventAppeared' subscriptionDropped' userCredentials' log' verboseLogging' settings' bufferSize' autoAck
Long Parameter List,EventStore.ClientAPI,EventStorePersistentSubscriptionBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscriptionBase.cs,StartSubscription,The method has 7 parameters. Parameters: subscriptionId' streamId' bufferSize' userCredentials' onEventAppeared' onSubscriptionDropped' settings
Long Parameter List,EventStore.ClientAPI,IEventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnection.cs,ReadStreamEventsForwardAsync,The method has 5 parameters. Parameters: stream' start' count' resolveLinkTos' userCredentials
Long Parameter List,EventStore.ClientAPI,IEventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnection.cs,ReadStreamEventsBackwardAsync,The method has 5 parameters. Parameters: stream' start' count' resolveLinkTos' userCredentials
Long Parameter List,EventStore.ClientAPI,IEventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnection.cs,SubscribeToStreamAsync,The method has 5 parameters. Parameters: stream' resolveLinkTos' eventAppeared' subscriptionDropped' userCredentials
Long Parameter List,EventStore.ClientAPI,IEventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnection.cs,SubscribeToStreamFrom,The method has 7 parameters. Parameters: stream' lastCheckpoint' settings' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials
Long Parameter List,EventStore.ClientAPI,IEventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnection.cs,ConnectToPersistentSubscription,The method has 7 parameters. Parameters: stream' groupName' eventAppeared' subscriptionDropped' userCredentials' bufferSize' autoAck
Long Parameter List,EventStore.ClientAPI,IEventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnection.cs,ConnectToPersistentSubscriptionAsync,The method has 7 parameters. Parameters: stream' groupName' eventAppeared' subscriptionDropped' userCredentials' bufferSize' autoAck
Long Parameter List,EventStore.ClientAPI,IEventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnection.cs,SubscribeToAllFrom,The method has 6 parameters. Parameters: lastCheckpoint' settings' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials
Long Parameter List,EventStore.ClientAPI,IEventStoreConnectionExtensions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnectionExtensions.cs,SubscribeToStreamAsync,The method has 6 parameters. Parameters: target' stream' resolveLinkTos' eventAppeared' subscriptionDropped' userCredentials
Long Parameter List,EventStore.ClientAPI,IEventStoreConnectionExtensions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnectionExtensions.cs,SubscribeToStreamFrom,The method has 8 parameters. Parameters: target' stream' lastCheckpoint' settings' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials
Long Parameter List,EventStore.ClientAPI,IEventStoreConnectionExtensions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnectionExtensions.cs,SubscribeToAllAsync,The method has 5 parameters. Parameters: target' resolveLinkTos' eventAppeared' subscriptionDropped' userCredentials
Long Parameter List,EventStore.ClientAPI,IEventStoreConnectionExtensions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnectionExtensions.cs,ConnectToPersistentSubscription,The method has 8 parameters. Parameters: target' stream' groupName' eventAppeared' subscriptionDropped' userCredentials' bufferSize' autoAck
Long Parameter List,EventStore.ClientAPI,IEventStoreConnectionExtensions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnectionExtensions.cs,ConnectToPersistentSubscription,The method has 8 parameters. Parameters: target' stream' groupName' eventAppeared' subscriptionDropped' userCredentials' bufferSize' autoAck
Long Parameter List,EventStore.ClientAPI,IEventStoreConnectionExtensions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnectionExtensions.cs,ConnectToPersistentSubscriptionAsync,The method has 8 parameters. Parameters: target' stream' groupName' eventAppeared' subscriptionDropped' userCredentials' bufferSize' autoAck
Long Parameter List,EventStore.ClientAPI,IEventStoreConnectionExtensions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnectionExtensions.cs,ConnectToPersistentSubscriptionAsync,The method has 8 parameters. Parameters: target' stream' groupName' eventAppeared' subscriptionDropped' userCredentials' bufferSize' autoAck
Long Parameter List,EventStore.ClientAPI,IEventStoreConnectionExtensions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\IEventStoreConnectionExtensions.cs,SubscribeToAllFrom,The method has 7 parameters. Parameters: target' lastCheckpoint' settings' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials
Long Parameter List,EventStore.ClientAPI,PersistentSubscriptionSettings,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,PersistentSubscriptionSettings,The method has 13 parameters. Parameters: resolveLinkTos' startFrom' extraStatistics' messageTimeout' maxRetryCount' liveBufferSize' readBatchSize' historyBufferSize' checkPointAfter' minCheckPointCount' maxCheckPointCount' maxSubscriberCount' namedConsumerStrategy
Long Parameter List,EventStore.ClientAPI,PersistentSubscriptionSettingsBuilder,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettingsBuilder.cs,PersistentSubscriptionSettingsBuilder,The method has 13 parameters. Parameters: resolveLinkTos' startFrom' timingStatistics' timeout' bufferSize' liveBufferSize' maxRetryCount' readBatchSize' checkPointAfter' minCheckPointCount' maxCheckPointCount' maxSubscriberCount' namedConsumerStrategies
Long Parameter List,EventStore.ClientAPI,StreamAcl,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\StreamAcl.cs,StreamAcl,The method has 5 parameters. Parameters: readRole' writeRole' deleteRole' metaReadRole' metaWriteRole
Long Parameter List,EventStore.ClientAPI,StreamAcl,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\StreamAcl.cs,StreamAcl,The method has 5 parameters. Parameters: readRoles' writeRoles' deleteRoles' metaReadRoles' metaWriteRoles
Long Parameter List,EventStore.ClientAPI,StreamEventsSlice,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\StreamEventsSlice.cs,StreamEventsSlice,The method has 8 parameters. Parameters: status' stream' fromEventNumber' readDirection' events' nextEventNumber' lastEventNumber' isEndOfStream
Long Parameter List,EventStore.ClientAPI,StreamMetadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\StreamMetadata.cs,StreamMetadata,The method has 6 parameters. Parameters: maxCount' maxAge' truncateBefore' cacheControl' acl' customMetadata
Long Parameter List,EventStore.ClientAPI,StreamMetadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\StreamMetadata.cs,Create,The method has 5 parameters. Parameters: maxCount' maxAge' truncateBefore' cacheControl' acl
Long Parameter List,EventStore.ClientAPI,StreamMetadataBuilder,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\StreamMetadataBuilder.cs,StreamMetadataBuilder,The method has 10 parameters. Parameters: maxCount' maxAge' truncateBefore' cacheControl' aclRead' aclWrite' aclDelete' aclMetaRead' aclMetaWrite' customMetadata
Long Parameter List,EventStore.ClientAPI.ClientOperations,AppendToStreamOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\AppendToStreamOperation.cs,AppendToStreamOperation,The method has 7 parameters. Parameters: log' source' requireMaster' stream' expectedVersion' events' userCredentials
Long Parameter List,EventStore.ClientAPI.ClientOperations,CommitTransactionOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\CommitTransactionOperation.cs,CommitTransactionOperation,The method has 5 parameters. Parameters: log' source' requireMaster' transactionId' userCredentials
Long Parameter List,EventStore.ClientAPI.ClientOperations,ConditionalAppendToStreamOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ConditionalAppendToStreamOperation.cs,ConditionalAppendToStreamOperation,The method has 7 parameters. Parameters: log' source' requireMaster' stream' expectedVersion' events' userCredentials
Long Parameter List,EventStore.ClientAPI.ClientOperations,ConnectToPersistentSubscriptionOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ConnectToPersistentSubscriptionOperation.cs,ConnectToPersistentSubscriptionOperation,The method has 10 parameters. Parameters: log' source' groupName' bufferSize' streamId' userCredentials' eventAppeared' subscriptionDropped' verboseLogging' getConnection
Long Parameter List,EventStore.ClientAPI.ClientOperations,CreatePersistentSubscriptionOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\CreatePersistentSubscriptionOperation.cs,CreatePersistentSubscriptionOperation,The method has 6 parameters. Parameters: log' source' stream' groupName' settings' userCredentials
Long Parameter List,EventStore.ClientAPI.ClientOperations,DeletePersistentSubscriptionOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\DeletePersistentSubscriptionOperation.cs,DeletePersistentSubscriptionOperation,The method has 5 parameters. Parameters: log' source' stream' groupName' userCredentials
Long Parameter List,EventStore.ClientAPI.ClientOperations,DeleteStreamOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\DeleteStreamOperation.cs,DeleteStreamOperation,The method has 7 parameters. Parameters: log' source' requireMaster' stream' expectedVersion' hardDelete' userCredentials
Long Parameter List,EventStore.ClientAPI.ClientOperations,OperationBase<TResult;TResponse>,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\OperationBase.cs,OperationBase,The method has 5 parameters. Parameters: log' source' requestCommand' responseCommand' userCredentials
Long Parameter List,EventStore.ClientAPI.ClientOperations,ReadAllEventsBackwardOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadAllEventsBackwardOperation.cs,ReadAllEventsBackwardOperation,The method has 7 parameters. Parameters: log' source' position' maxCount' resolveLinkTos' requireMaster' userCredentials
Long Parameter List,EventStore.ClientAPI.ClientOperations,ReadAllEventsForwardOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadAllEventsForwardOperation.cs,ReadAllEventsForwardOperation,The method has 7 parameters. Parameters: log' source' position' maxCount' resolveLinkTos' requireMaster' userCredentials
Long Parameter List,EventStore.ClientAPI.ClientOperations,ReadEventOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadEventOperation.cs,ReadEventOperation,The method has 7 parameters. Parameters: log' source' stream' eventNumber' resolveLinkTo' requireMaster' userCredentials
Long Parameter List,EventStore.ClientAPI.ClientOperations,ReadStreamEventsBackwardOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadStreamEventsBackwardOperation.cs,ReadStreamEventsBackwardOperation,The method has 8 parameters. Parameters: log' source' stream' fromEventNumber' maxCount' resolveLinkTos' requireMaster' userCredentials
Long Parameter List,EventStore.ClientAPI.ClientOperations,ReadStreamEventsForwardOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\ReadStreamEventsForwardOperation.cs,ReadStreamEventsForwardOperation,The method has 8 parameters. Parameters: log' source' stream' fromEventNumber' maxCount' resolveLinkTos' requireMaster' userCredentials
Long Parameter List,EventStore.ClientAPI.ClientOperations,StartTransactionOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\StartTransactionOperation.cs,StartTransactionOperation,The method has 7 parameters. Parameters: log' source' requireMaster' stream' expectedVersion' parentConnection' userCredentials
Long Parameter List,EventStore.ClientAPI.ClientOperations,SubscriptionOperation<T;TE>,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\SubscriptionOperation.cs,SubscriptionOperation,The method has 9 parameters. Parameters: log' source' streamId' resolveLinkTos' userCredentials' eventAppeared' subscriptionDropped' verboseLogging' getConnection
Long Parameter List,EventStore.ClientAPI.ClientOperations,TransactionalWriteOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\TransactionalWriteOperation.cs,TransactionalWriteOperation,The method has 6 parameters. Parameters: log' source' requireMaster' transactionId' events' userCredentials
Long Parameter List,EventStore.ClientAPI.ClientOperations,UpdatePersistentSubscriptionOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\UpdatePersistentSubscriptionOperation.cs,UpdatePersistentSubscriptionOperation,The method has 6 parameters. Parameters: log' source' stream' groupName' settings' userCredentials
Long Parameter List,EventStore.ClientAPI.ClientOperations,VolatileSubscriptionOperation,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ClientOperations\VolatileSubscriptionOperation.cs,VolatileSubscriptionOperation,The method has 9 parameters. Parameters: log' source' streamId' resolveLinkTos' userCredentials' eventAppeared' subscriptionDropped' verboseLogging' getConnection
Long Parameter List,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,ClusterDnsEndPointDiscoverer,The method has 8 parameters. Parameters: log' clusterDns' maxDiscoverAttempts' managerExternalHttpPort' gossipSeeds' gossipTimeout' nodePreference' client
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ReadStreamEventsForwardAsync,The method has 5 parameters. Parameters: stream' start' count' resolveLinkTos' userCredentials
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ReadStreamEventsBackwardAsync,The method has 5 parameters. Parameters: stream' start' count' resolveLinkTos' userCredentials
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToStreamAsync,The method has 5 parameters. Parameters: stream' resolveLinkTos' eventAppeared' subscriptionDropped' userCredentials
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToStreamFrom,The method has 9 parameters. Parameters: stream' lastCheckpoint' resolveLinkTos' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials' readBatchSize' subscriptionName
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToStreamFrom,The method has 7 parameters. Parameters: stream' lastCheckpoint' settings' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToAllFrom,The method has 8 parameters. Parameters: lastCheckpoint' resolveLinkTos' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials' readBatchSize' subscriptionName
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,SubscribeToAllFrom,The method has 6 parameters. Parameters: lastCheckpoint' settings' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ConnectToPersistentSubscription,The method has 7 parameters. Parameters: stream' groupName' eventAppeared' subscriptionDropped' userCredentials' bufferSize' autoAck
Long Parameter List,EventStore.ClientAPI.Internal,EventStoreNodeConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\EventStoreNodeConnection.cs,ConnectToPersistentSubscriptionAsync,The method has 7 parameters. Parameters: stream' groupName' eventAppeared' subscriptionDropped' userCredentials' bufferSize' autoAck
Long Parameter List,EventStore.ClientAPI.Internal,StartSubscriptionMessage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\Messages.cs,StartSubscriptionMessage,The method has 8 parameters. Parameters: source' streamId' resolveLinkTos' userCredentials' eventAppeared' subscriptionDropped' maxRetries' timeout
Long Parameter List,EventStore.ClientAPI.Internal,StartPersistentSubscriptionMessage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\Messages.cs,StartPersistentSubscriptionMessage,The method has 9 parameters. Parameters: source' subscriptionId' streamId' bufferSize' userCredentials' eventAppeared' subscriptionDropped' maxRetries' timeout
Long Parameter List,EventStore.ClientAPI.Messages,NewEvent,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Messages\ClientMessage.cs,NewEvent,The method has 6 parameters. Parameters: eventId' eventType' dataContentType' metadataContentType' data' metadata
Long Parameter List,EventStore.ClientAPI.Messages,EventRecord,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Messages\ClientMessage.cs,EventRecord,The method has 10 parameters. Parameters: eventStreamId' eventNumber' eventId' eventType' dataContentType' metadataContentType' data' metadata' created' createdEpoch
Long Parameter List,EventStore.ClientAPI.Messages,WriteEventsCompleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Messages\ClientMessage.cs,WriteEventsCompleted,The method has 7 parameters. Parameters: result' message' firstEventNumber' lastEventNumber' preparePosition' commitPosition' currentVersion
Long Parameter List,EventStore.ClientAPI.Messages,TransactionCommitCompleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Messages\ClientMessage.cs,TransactionCommitCompleted,The method has 7 parameters. Parameters: transactionId' result' message' firstEventNumber' lastEventNumber' preparePosition' commitPosition
Long Parameter List,EventStore.ClientAPI.Messages,ReadStreamEvents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Messages\ClientMessage.cs,ReadStreamEvents,The method has 5 parameters. Parameters: eventStreamId' fromEventNumber' maxCount' resolveLinkTos' requireMaster
Long Parameter List,EventStore.ClientAPI.Messages,ReadStreamEventsCompleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Messages\ClientMessage.cs,ReadStreamEventsCompleted,The method has 7 parameters. Parameters: events' result' nextEventNumber' lastEventNumber' isEndOfStream' lastCommitPosition' error
Long Parameter List,EventStore.ClientAPI.Messages,ReadAllEvents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Messages\ClientMessage.cs,ReadAllEvents,The method has 5 parameters. Parameters: commitPosition' preparePosition' maxCount' resolveLinkTos' requireMaster
Long Parameter List,EventStore.ClientAPI.Messages,ReadAllEventsCompleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Messages\ClientMessage.cs,ReadAllEventsCompleted,The method has 7 parameters. Parameters: commitPosition' preparePosition' events' nextCommitPosition' nextPreparePosition' result' error
Long Parameter List,EventStore.ClientAPI.Messages,CreatePersistentSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Messages\ClientMessage.cs,CreatePersistentSubscription,The method has 16 parameters. Parameters: subscriptionGroupName' eventStreamId' resolveLinkTos' startFrom' messageTimeoutMilliseconds' recordStatistics' liveBufferSize' readBatchSize' bufferSize' maxRetryCount' preferRoundRobin' checkpointAfterTime' checkpointMaxCount' checkpointMinCount' subscriberMaxCount' namedConsumerStrategy
Long Parameter List,EventStore.ClientAPI.Messages,UpdatePersistentSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Messages\ClientMessage.cs,UpdatePersistentSubscription,The method has 16 parameters. Parameters: subscriptionGroupName' eventStreamId' resolveLinkTos' startFrom' messageTimeoutMilliseconds' recordStatistics' liveBufferSize' readBatchSize' bufferSize' maxRetryCount' preferRoundRobin' checkpointAfterTime' checkpointMaxCount' checkpointMinCount' subscriberMaxCount' namedConsumerStrategy
Long Parameter List,EventStore.ClientAPI.Messages,MasterInfo,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Messages\ClientMessage.cs,MasterInfo,The method has 6 parameters. Parameters: externalTcpAddress' externalTcpPort' externalHttpAddress' externalHttpPort' externalSecureTcpAddress' externalSecureTcpPort
Long Parameter List,EventStore.ClientAPI.PersistentSubscriptions,PersistentSubscriptionsClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptions\PersistentSubscriptionsClient.cs,Describe,The method has 5 parameters. Parameters: endPoint' stream' subscriptionName' userCredentials' httpSchema
Long Parameter List,EventStore.ClientAPI.PersistentSubscriptions,PersistentSubscriptionsClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptions\PersistentSubscriptionsClient.cs,ReplayParkedMessages,The method has 5 parameters. Parameters: endPoint' stream' subscriptionName' userCredentials' httpSchema
Long Parameter List,EventStore.ClientAPI.Projections,ProjectionConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionConfig.cs,ProjectionConfig,The method has 8 parameters. Parameters: emitEnabled' trackEmittedStreams' checkpointAfterMs' checkpointHandledThreshold' checkpointUnhandledBytesThreshold' pendingEventsThreshold' maxWriteBatchLength' maxAllowedWritesInFlight
Long Parameter List,EventStore.ClientAPI.Projections,ProjectionDetails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionDetails.cs,ProjectionDetails,The method has 25 parameters. Parameters: coreProcessingTime' version' epoch' effectiveName' writesInProgress' readsInProgress' partitionsCached' status' stateReason' name' mode' position' progress' lastCheckpoint' eventsProcessedAfterRestart' statusUrl' stateUrl' resultUrl' queryUrl' enableCommandUrl' disableCommandUrl' checkpointStatus' bufferedEvents' writePendingEventsBeforeCheckpoint' writePendingEventsAfterCheckpoint
Long Parameter List,EventStore.ClientAPI.Projections,ProjectionsClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,CreateTransient,The method has 5 parameters. Parameters: endPoint' name' query' userCredentials' httpSchema
Long Parameter List,EventStore.ClientAPI.Projections,ProjectionsClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,CreateContinuous,The method has 6 parameters. Parameters: endPoint' name' query' trackEmitted' userCredentials' httpSchema
Long Parameter List,EventStore.ClientAPI.Projections,ProjectionsClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,GetPartitionStateAsync,The method has 5 parameters. Parameters: endPoint' name' partition' userCredentials' httpSchema
Long Parameter List,EventStore.ClientAPI.Projections,ProjectionsClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,GetPartitionResultAsync,The method has 5 parameters. Parameters: endPoint' name' partition' userCredentials' httpSchema
Long Parameter List,EventStore.ClientAPI.Projections,ProjectionsClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,UpdateQuery,The method has 5 parameters. Parameters: endPoint' name' query' userCredentials' httpSchema
Long Parameter List,EventStore.ClientAPI.Projections,ProjectionsClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,UpdateQuery,The method has 6 parameters. Parameters: endPoint' name' query' userCredentials' httpSchema' emitEnabled
Long Parameter List,EventStore.ClientAPI.Projections,ProjectionsClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,Delete,The method has 5 parameters. Parameters: endPoint' name' deleteEmittedStreams' userCredentials' httpSchema
Long Parameter List,EventStore.ClientAPI.Projections,ProjectionsClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,UpdateConfig,The method has 5 parameters. Parameters: endPoint' name' config' userCredentials' httpSchema
Long Parameter List,EventStore.ClientAPI.Projections,ProjectionsManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsManager.cs,ProjectionsManager,The method has 5 parameters. Parameters: log' httpEndPoint' operationTimeout' client' httpSchema
Long Parameter List,EventStore.ClientAPI.Projections,QueryManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\QueryManager.cs,QueryManager,The method has 5 parameters. Parameters: log' httpEndPoint' projectionOperationTimeout' queryTimeout' client
Long Parameter List,EventStore.ClientAPI.Projections,QueryManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\QueryManager.cs,ExecuteAsync,The method has 5 parameters. Parameters: name' query' initialPollingDelay' maximumPollingDelay' userCredentials
Long Parameter List,EventStore.ClientAPI.SystemData,TcpPackage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,TcpPackage,The method has 6 parameters. Parameters: command' flags' correlationId' login' password' data
Long Parameter List,EventStore.ClientAPI.SystemData,TcpPackage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,TcpPackage,The method has 6 parameters. Parameters: command' flags' correlationId' login' password' data
Long Parameter List,EventStore.ClientAPI.Transport.Http,HttpAsyncClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\HttpAsyncClient.cs,Get,The method has 5 parameters. Parameters: url' userCredentials' onSuccess' onException' hostHeader
Long Parameter List,EventStore.ClientAPI.Transport.Http,HttpAsyncClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\HttpAsyncClient.cs,Post,The method has 6 parameters. Parameters: url' body' contentType' userCredentials' onSuccess' onException
Long Parameter List,EventStore.ClientAPI.Transport.Http,HttpAsyncClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\HttpAsyncClient.cs,Put,The method has 6 parameters. Parameters: url' body' contentType' userCredentials' onSuccess' onException
Long Parameter List,EventStore.ClientAPI.Transport.Http,HttpAsyncClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\HttpAsyncClient.cs,Receive,The method has 6 parameters. Parameters: method' url' userCredentials' onSuccess' onException' hostHeader
Long Parameter List,EventStore.ClientAPI.Transport.Http,HttpAsyncClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\HttpAsyncClient.cs,Send,The method has 7 parameters. Parameters: method' url' body' contentType' userCredentials' onSuccess' onException
Long Parameter List,EventStore.ClientAPI.Transport.Http,IHttpClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\IHttpClient.cs,Get,The method has 5 parameters. Parameters: url' userCredentials' onSuccess' onException' hostHeader
Long Parameter List,EventStore.ClientAPI.Transport.Http,IHttpClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\IHttpClient.cs,Post,The method has 6 parameters. Parameters: url' body' contentType' userCredentials' onSuccess' onException
Long Parameter List,EventStore.ClientAPI.Transport.Http,IHttpClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\IHttpClient.cs,Put,The method has 6 parameters. Parameters: url' body' contentType' userCredentials' onSuccess' onException
Long Parameter List,EventStore.ClientAPI.Transport.Tcp,TcpClientConnector,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpClientConnector.cs,ConnectTo,The method has 10 parameters. Parameters: log' connectionId' remoteEndPoint' ssl' targetHost' validateServer' timeout' onConnectionEstablished' onConnectionFailed' onConnectionClosed
Long Parameter List,EventStore.ClientAPI.Transport.Tcp,TcpClientConnector,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpClientConnector.cs,InitConnect,The method has 5 parameters. Parameters: serverEndPoint' onConnectionEstablished' onConnectionFailed' connection' connectionTimeout
Long Parameter List,EventStore.ClientAPI.Transport.Tcp,TcpConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnection.cs,CreateConnectingConnection,The method has 8 parameters. Parameters: log' connectionId' remoteEndPoint' connector' connectionTimeout' onConnectionEstablished' onConnectionFailed' onConnectionClosed
Long Parameter List,EventStore.ClientAPI.Transport.Tcp,TcpConnectionLockless,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionLockless.cs,CreateConnectingConnection,The method has 8 parameters. Parameters: log' connectionId' remoteEndPoint' connector' connectionTimeout' onConnectionEstablished' onConnectionFailed' onConnectionClosed
Long Parameter List,EventStore.ClientAPI.Transport.Tcp,TcpConnectionSsl,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionSsl.cs,CreateConnectingConnection,The method has 10 parameters. Parameters: log' connectionId' remoteEndPoint' targetHost' validateServer' connector' connectionTimeout' onConnectionEstablished' onConnectionFailed' onConnectionClosed
Long Parameter List,EventStore.ClientAPI.Transport.Tcp,TcpPackageConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpPackageConnection.cs,TcpPackageConnection,The method has 11 parameters. Parameters: log' remoteEndPoint' connectionId' ssl' targetHost' validateServer' timeout' handlePackage' onError' connectionEstablished' connectionClosed
Long Parameter List,EventStore.ClientAPI.Transport.Tcp,TcpStats,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpStats.cs,TcpStats,The method has 9 parameters. Parameters: connections' sentBytesTotal' receivedBytesTotal' sentBytesSinceLastRunSinceLastRun' receivedBytesSinceLastRun' pendingSend' inSend' pendingReceived' measureTime
Long Parameter List,EventStore.ClientAPI.UserManagement,UserDetails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UserDetails.cs,UserDetails,The method has 6 parameters. Parameters: loginName' fullName' groups' disabled' dateLastUpdated' links
Long Parameter List,EventStore.ClientAPI.UserManagement,UsersClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersClient.cs,UpdateUser,The method has 5 parameters. Parameters: endPoint' login' updatedUser' userCredentials' httpSchema
Long Parameter List,EventStore.ClientAPI.UserManagement,UsersClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersClient.cs,ChangePassword,The method has 5 parameters. Parameters: endPoint' login' changePasswordDetails' userCredentials' httpSchema
Long Parameter List,EventStore.ClientAPI.UserManagement,UsersClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersClient.cs,ResetPassword,The method has 5 parameters. Parameters: endPoint' login' resetPasswordDetails' userCredentials' httpSchema
Long Parameter List,EventStore.ClientAPI.UserManagement,UsersClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersClient.cs,SendPut,The method has 5 parameters. Parameters: url' content' userCredentials' expectedCode' httpSchema
Long Parameter List,EventStore.ClientAPI.UserManagement,UsersClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersClient.cs,SendPost,The method has 5 parameters. Parameters: url' content' userCredentials' expectedCode' httpSchema
Long Parameter List,EventStore.ClientAPI.UserManagement,UsersManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersManager.cs,UsersManager,The method has 5 parameters. Parameters: log' httpEndPoint' operationTimeout' tlsTerminatedEndpoint' client
Long Parameter List,EventStore.ClientAPI.UserManagement,UsersManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersManager.cs,CreateUserAsync,The method has 5 parameters. Parameters: login' fullName' groups' password' userCredentials
Long Identifier,EventStore.ClientAPI,EventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreConnection.cs,,The length of the parameter SerializationInitializationError is 32.
Long Identifier,EventStore.ClientAPI,Consts,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\Consts.cs,,The length of the parameter DefaultOperationTimeoutCheckPeriod is 34.
Long Identifier,EventStore.ClientAPI,Consts,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\Consts.cs,,The length of the parameter DefaultMaxClusterDiscoverAttempts is 33.
Long Identifier,EventStore.ClientAPI,Consts,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\Consts.cs,,The length of the parameter DefaultClusterManagerExternalHttpPort is 37.
Long Identifier,EventStore.ClientAPI,Consts,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\Consts.cs,,The length of the parameter CatchUpDefaultMaxPushQueueSize is 30.
Long Identifier,EventStore.ClientAPI.Projections,ProjectionConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionConfig.cs,ProjectionConfig,The length of the parameter checkpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.ClientAPI.Projections,ProjectionConfig,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionConfig.cs,,The length of the parameter CheckpointUnhandledBytesThreshold is 33.
Long Identifier,EventStore.ClientAPI.Projections,ProjectionDetails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionDetails.cs,ProjectionDetails,The length of the parameter writePendingEventsBeforeCheckpoint is 34.
Long Identifier,EventStore.ClientAPI.Projections,ProjectionDetails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionDetails.cs,ProjectionDetails,The length of the parameter writePendingEventsAfterCheckpoint is 33.
Long Identifier,EventStore.ClientAPI.Projections,ProjectionDetails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionDetails.cs,,The length of the parameter WritePendingEventsBeforeCheckpoint is 34.
Long Identifier,EventStore.ClientAPI.Projections,ProjectionDetails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionDetails.cs,,The length of the parameter WritePendingEventsAfterCheckpoint is 33.
Long Identifier,EventStore.ClientAPI.Transport.Tcp,TcpStats,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpStats.cs,TcpStats,The length of the parameter sentBytesSinceLastRunSinceLastRun is 33.
Long Statement,EventStore.ClientAPI.Common.Utils.Threading,TaskCompletionSourceFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Threading\TaskCompletionSourceFactory.cs,Create,The length of the statement  "            //see https://stackoverflow.com/questions/22579206/how-can-i-prevent-synchronous-continuations-on-a-task/22588431#22588431 " is 122.
Long Statement,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,GetGossipCandidatesFromOldGossip,The length of the statement  "			//_log.Debug("ClusterDnsEndPointDiscoverer: GetGossipCandidatesFromOldGossip' failedTcpEndPoint: {0}."' failedTcpEndPoint); " is 123.
Long Statement,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,TryGetGossipFrom,The length of the statement  "			var url = endPoint.EndPoint.ToHttpUrl(endPoint.SeedOverTls ? EndpointExtensions.HTTPS_SCHEMA : EndpointExtensions.HTTP_SCHEMA' "/gossip?format=json"); " is 150.
Long Statement,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,TryGetGossipFrom,The length of the statement  "						//_log.Debug("ClusterDnsEndPointDiscoverer: Got gossip from [{0}]:\n{1}."' endPoint' string.Join("\n"' result.Members.Select(x => x.ToString()))); " is 146.
Long Statement,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,TryDetermineBestNode,The length of the statement  "				//_log.Info("Unable to locate suitable node. Gossip info:\n{0}."' string.Join("\n"' members.Select(x => x.ToString()))); " is 120.
Long Statement,EventStore.ClientAPI.Internal,OperationsManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\OperationsManager.cs,TryScheduleWaitingOperations,The length of the statement  "				// We don't want to transmit or retain expired requests' so we trim any from before the cutoff implied by the current time " is 122.
Long Statement,EventStore.ClientAPI.Messages,MemberInfoDto,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Messages\ClusterMessages.cs,ToString,The length of the statement  "					"VND {0:B} <{1}> [{2}' {3}:{4}' {5}' {6}:{7}' {8}' {9}:{10}' {11}:{12}] {13}/{14}/{15}/E{16}@{17}:{18:B} | {19:yyyy-MM-dd HH:mm:ss.fff}"' " is 137.
Long Statement,EventStore.ClientAPI.Transport.Tcp,LengthPrefixMessageFramer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\LengthPrefixFramer.cs,Parse,The length of the statement  "							"Package size is out of bounds: {0} (max: {1}). This is likely an exceptionally large message (reading too many things) or there is a problem with the framing if working on a new client."' " is 188.
Long Statement,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckMissingSendCallback,The length of the statement  "					"# {0} {1}ms since last send started. No completion callback received' but socket status is READY_FOR_SEND. In send: {2}"' " is 122.
Long Statement,EventStore.ClientAPI.UserManagement,UsersManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersManager.cs,ResetPasswordAsync,The length of the statement  "			return _client.ResetPassword(_httpEndPoint' login' new ResetPasswordDetails(newPassword)' userCredentials' _httpSchema); " is 120.
Complex Conditional,EventStore.ClientAPI.Transport.Tcp,TcpConnectionSsl,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionSsl.cs,TrySend,The conditional expression  "_isSending || _sendQueue.IsEmpty || _sslStream == null || !_isAuthenticated"  is complex.
Empty Catch Block,EventStore.ClientAPI.Common.Utils,Helper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Helper.cs,EatException,The method has an empty catch block.
Empty Catch Block,EventStore.ClientAPI.Messages,ClientMessage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Messages\ClientMessage.cs,InitializeSerializers,The method has an empty catch block.
Empty Catch Block,EventStore.ClientAPI.Transport.Tcp,TcpConnectionSsl,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionSsl.cs,DisplaySslStreamInfo,The method has an empty catch block.
Empty Catch Block,EventStore.ClientAPI.Transport.Tcp,TcpConnectionSsl,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionSsl.cs,DisplaySslStreamInfo,The method has an empty catch block.
Empty Catch Block,EventStore.ClientAPI.Transport.Tcp,TcpConnectionSsl,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionSsl.cs,DisplaySslStreamInfo,The method has an empty catch block.
Empty Catch Block,EventStore.ClientAPI.Transport.Tcp,TcpConnectionSsl,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionSsl.cs,DisplaySslStreamInfo,The method has an empty catch block.
Magic Number,EventStore.ClientAPI,ConnectionString,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ConnectionString.cs,ConnectionString,The following statement contains a magic number: translators = new Dictionary<Type' Func<string' object>>() {  				{typeof(int)' x => int.Parse(x' CultureInfo.InvariantCulture)}'  				{typeof(decimal)' x => decimal.Parse(x' CultureInfo.InvariantCulture)}'  				{typeof(string)' x => x}'  				{typeof(bool)' x => bool.Parse(x)}'  				{typeof(long)' x => long.Parse(x' CultureInfo.InvariantCulture)}'  				{typeof(byte)' x => byte.Parse(x' CultureInfo.InvariantCulture)}'  				{typeof(double)' x => double.Parse(x' CultureInfo.InvariantCulture)}'  				{typeof(float)' x => float.Parse(x' CultureInfo.InvariantCulture)}'  				{typeof(TimeSpan)' x => TimeSpan.FromMilliseconds(int.Parse(x' CultureInfo.InvariantCulture))}' {  					typeof(GossipSeed[])' x => x.Split(''').Select(q => {  						try {  							var pieces = q.Trim().Split(':');  							if (pieces.Length != 2) throw new Exception("Could not split IP address from port.");    							return new GossipSeed(new IPEndPoint(IPAddress.Parse(pieces[0])' int.Parse(pieces[1])));  						} catch (Exception ex) {  							throw new Exception(string.Format("Gossip seed {0} is not in correct format"' q)' ex);  						}  					}).ToArray()  				}' {  					typeof(UserCredentials)' x => {  						try {  							var pieces = x.Trim().Split(':');  							if (pieces.Length != 2) throw new Exception("Could not split into username and password.");    							return new UserCredentials(pieces[0]' pieces[1]);  						} catch (Exception ex) {  							throw new Exception(  								string.Format(  									"User credentials {0} is not in correct format. Expected format is username:password."'  									x)' ex);  						}  					}  				}  			};
Magic Number,EventStore.ClientAPI,ConnectionString,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ConnectionString.cs,ConnectionString,The following statement contains a magic number: translators = new Dictionary<Type' Func<string' object>>() {  				{typeof(int)' x => int.Parse(x' CultureInfo.InvariantCulture)}'  				{typeof(decimal)' x => decimal.Parse(x' CultureInfo.InvariantCulture)}'  				{typeof(string)' x => x}'  				{typeof(bool)' x => bool.Parse(x)}'  				{typeof(long)' x => long.Parse(x' CultureInfo.InvariantCulture)}'  				{typeof(byte)' x => byte.Parse(x' CultureInfo.InvariantCulture)}'  				{typeof(double)' x => double.Parse(x' CultureInfo.InvariantCulture)}'  				{typeof(float)' x => float.Parse(x' CultureInfo.InvariantCulture)}'  				{typeof(TimeSpan)' x => TimeSpan.FromMilliseconds(int.Parse(x' CultureInfo.InvariantCulture))}' {  					typeof(GossipSeed[])' x => x.Split(''').Select(q => {  						try {  							var pieces = q.Trim().Split(':');  							if (pieces.Length != 2) throw new Exception("Could not split IP address from port.");    							return new GossipSeed(new IPEndPoint(IPAddress.Parse(pieces[0])' int.Parse(pieces[1])));  						} catch (Exception ex) {  							throw new Exception(string.Format("Gossip seed {0} is not in correct format"' q)' ex);  						}  					}).ToArray()  				}' {  					typeof(UserCredentials)' x => {  						try {  							var pieces = x.Trim().Split(':');  							if (pieces.Length != 2) throw new Exception("Could not split into username and password.");    							return new UserCredentials(pieces[0]' pieces[1]);  						} catch (Exception ex) {  							throw new Exception(  								string.Format(  									"User credentials {0} is not in correct format. Expected format is username:password."'  									x)' ex);  						}  					}  				}  			};
Magic Number,EventStore.ClientAPI,ConnectionString,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\ConnectionString.cs,WithSpaces,The following statement contains a magic number: StringBuilder nameWithSpaces = new StringBuilder(32);
Magic Number,EventStore.ClientAPI,EventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreConnection.cs,GetSingleNodeIPEndPointFrom,The following statement contains a magic number: var port = uri.IsDefaultPort ? 2113 : uri.Port;
Magic Number,EventStore.ClientAPI,EventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\EventStoreConnection.cs,GetCredentialFromUri,The following statement contains a magic number: pieces.Length != 2
Magic Number,EventStore.ClientAPI,EventStorePersistentSubscriptionBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscriptionBase.cs,Acknowledge,The following statement contains a magic number: ids.Length > 2000
Magic Number,EventStore.ClientAPI,EventStorePersistentSubscriptionBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscriptionBase.cs,Acknowledge,The following statement contains a magic number: ids.Length > 2000
Magic Number,EventStore.ClientAPI,EventStorePersistentSubscriptionBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\EventStorePersistentSubscriptionBase.cs,Fail,The following statement contains a magic number: ids.Length > 2000
Magic Number,EventStore.ClientAPI,PersistentSubscriptionSettings,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,Create,The following statement contains a magic number: return new PersistentSubscriptionSettingsBuilder(false'  				-1'  				false'  				TimeSpan.FromSeconds(30)'  				500'  				500'  				10'  				20'  				TimeSpan.FromSeconds(2)'  				10'  				1000'  				0'  				SystemConsumerStrategies.RoundRobin);
Magic Number,EventStore.ClientAPI,PersistentSubscriptionSettings,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,Create,The following statement contains a magic number: return new PersistentSubscriptionSettingsBuilder(false'  				-1'  				false'  				TimeSpan.FromSeconds(30)'  				500'  				500'  				10'  				20'  				TimeSpan.FromSeconds(2)'  				10'  				1000'  				0'  				SystemConsumerStrategies.RoundRobin);
Magic Number,EventStore.ClientAPI,PersistentSubscriptionSettings,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,Create,The following statement contains a magic number: return new PersistentSubscriptionSettingsBuilder(false'  				-1'  				false'  				TimeSpan.FromSeconds(30)'  				500'  				500'  				10'  				20'  				TimeSpan.FromSeconds(2)'  				10'  				1000'  				0'  				SystemConsumerStrategies.RoundRobin);
Magic Number,EventStore.ClientAPI,PersistentSubscriptionSettings,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,Create,The following statement contains a magic number: return new PersistentSubscriptionSettingsBuilder(false'  				-1'  				false'  				TimeSpan.FromSeconds(30)'  				500'  				500'  				10'  				20'  				TimeSpan.FromSeconds(2)'  				10'  				1000'  				0'  				SystemConsumerStrategies.RoundRobin);
Magic Number,EventStore.ClientAPI,PersistentSubscriptionSettings,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,Create,The following statement contains a magic number: return new PersistentSubscriptionSettingsBuilder(false'  				-1'  				false'  				TimeSpan.FromSeconds(30)'  				500'  				500'  				10'  				20'  				TimeSpan.FromSeconds(2)'  				10'  				1000'  				0'  				SystemConsumerStrategies.RoundRobin);
Magic Number,EventStore.ClientAPI,PersistentSubscriptionSettings,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,Create,The following statement contains a magic number: return new PersistentSubscriptionSettingsBuilder(false'  				-1'  				false'  				TimeSpan.FromSeconds(30)'  				500'  				500'  				10'  				20'  				TimeSpan.FromSeconds(2)'  				10'  				1000'  				0'  				SystemConsumerStrategies.RoundRobin);
Magic Number,EventStore.ClientAPI,PersistentSubscriptionSettings,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,Create,The following statement contains a magic number: return new PersistentSubscriptionSettingsBuilder(false'  				-1'  				false'  				TimeSpan.FromSeconds(30)'  				500'  				500'  				10'  				20'  				TimeSpan.FromSeconds(2)'  				10'  				1000'  				0'  				SystemConsumerStrategies.RoundRobin);
Magic Number,EventStore.ClientAPI,PersistentSubscriptionSettings,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\PersistentSubscriptionSettings.cs,Create,The following statement contains a magic number: return new PersistentSubscriptionSettingsBuilder(false'  				-1'  				false'  				TimeSpan.FromSeconds(30)'  				500'  				500'  				10'  				20'  				TimeSpan.FromSeconds(2)'  				10'  				1000'  				0'  				SystemConsumerStrategies.RoundRobin);
Magic Number,EventStore.ClientAPI,Position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Position.cs,GetHashCode,The following statement contains a magic number: return (CommitPosition.GetHashCode() * 397) ^ PreparePosition.GetHashCode();
Magic Number,EventStore.ClientAPI.Common,SystemStreams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Common\SystemNames.cs,OriginalStreamOf,The following statement contains a magic number: return metastreamId.Substring(2);
Magic Number,EventStore.ClientAPI.Common.Utils,Helper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: sb.AppendFormat("{0:000000}:"' row * 16);
Magic Number,EventStore.ClientAPI.Common.Utils,Helper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: i < 16
Magic Number,EventStore.ClientAPI.Common.Utils,Helper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: cur -= 16;
Magic Number,EventStore.ClientAPI.Common.Utils,Helper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: i < 16
Magic Number,EventStore.ClientAPI.Common.Utils.Threading,TaskCompletionSourceFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Common\Utils\Threading\TaskCompletionSourceFactory.cs,Create,The following statement contains a magic number: const int TASK_STATE_THREAD_WAS_ABORTED = 134217728;
Magic Number,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,DiscoverAsync,The following statement contains a magic number: return Task.Factory.StartNew(() => {  				var maxDiscoverAttemptsStr = "";  				if (_maxDiscoverAttempts != Int32.MaxValue)  					maxDiscoverAttemptsStr = "/" + _maxDiscoverAttempts;    				for (int attempt = 1; attempt <= _maxDiscoverAttempts; ++attempt) {  					//_log.Info("Discovering cluster. Attempt {0}/{1}..."' attempt' _maxDiscoverAttempts);  					try {  						var endPoints = DiscoverEndPoint(failedTcpEndPoint);  						if (endPoints != null) {  							_log.Info("Discovering attempt {0}{1} successful: best candidate is {2}."' attempt'  								maxDiscoverAttemptsStr' endPoints);  							return endPoints.Value;  						}    						_log.Info("Discovering attempt {0}{1} failed: no candidate found."' attempt'  							maxDiscoverAttemptsStr);  					} catch (Exception exc) {  						_log.Info("Discovering attempt {0}{1} failed with error: {2}."' attempt' maxDiscoverAttemptsStr'  							exc);  					}    					Thread.Sleep(500);  				}    				throw new ClusterException(string.Format("Failed to discover candidate in {0} attempts."'  					_maxDiscoverAttempts));  			});
Magic Number,EventStore.ClientAPI.Messages,ClientMessage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Messages\ClientMessage.cs,InitializeSerializers,The following statement contains a magic number: i < 12
Magic Number,EventStore.ClientAPI.Projections,ProjectionsClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\ProjectionsClient.cs,SendPost,The following statement contains a magic number: _client.Post(url'  				content'  				"application/json"'  				userCredentials'  				response => {  					if (response.HttpStatusCode == expectedCode)  						source.SetResult(null);  					else if (response.HttpStatusCode == 409)  						source.SetException(new ProjectionCommandConflictException(response.HttpStatusCode'  							response.StatusDescription));  					else  						source.SetException(new ProjectionCommandFailedException(  							response.HttpStatusCode'  							string.Format("Server returned {0} ({1}) for POST on {2}"'  								response.HttpStatusCode'  								response.StatusDescription'  								url)));  				}'  				source.SetException);
Magic Number,EventStore.ClientAPI.Projections,QueryManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Projections\QueryManager.cs,DelayPollingAsync,The following statement contains a magic number: var delayInMilliseconds = initialPollingDelay.TotalMilliseconds * (Math.Pow(2' attempts) - 1);
Magic Number,EventStore.ClientAPI.SystemData,TcpPackage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,FromArraySegment,The following statement contains a magic number: var guidBytes = new byte[16];
Magic Number,EventStore.ClientAPI.SystemData,TcpPackage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,FromArraySegment,The following statement contains a magic number: Buffer.BlockCopy(data.Array' data.Offset + CorrelationOffset' guidBytes' 0' 16);
Magic Number,EventStore.ClientAPI.SystemData,TcpPackage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,AsByteArray,The following statement contains a magic number: loginLen > 255
Magic Number,EventStore.ClientAPI.SystemData,TcpPackage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,AsByteArray,The following statement contains a magic number: passLen > 255
Magic Number,EventStore.ClientAPI.SystemData,TcpPackage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,AsByteArray,The following statement contains a magic number: var res = new byte[MandatorySize + 2 + loginLen + passLen + Data.Count];
Magic Number,EventStore.ClientAPI.SystemData,TcpPackage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\SystemData\TcpPackage.cs,AsByteArray,The following statement contains a magic number: Buffer.BlockCopy(CorrelationId.ToByteArray()' 0' res' CorrelationOffset' 16);
Magic Number,EventStore.ClientAPI.Transport.Http,HttpAsyncClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\HttpAsyncClient.cs,HttpAsyncClient,The following statement contains a magic number: ServicePointManager.MaxServicePointIdleTime = 10000;
Magic Number,EventStore.ClientAPI.Transport.Http,HttpAsyncClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Http\HttpAsyncClient.cs,HttpAsyncClient,The following statement contains a magic number: ServicePointManager.DefaultConnectionLimit = 800;
Magic Number,EventStore.ClientAPI.Transport.Tcp,LengthPrefixMessageFramer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\LengthPrefixFramer.cs,Parse,The following statement contains a magic number: _packageLength |= (data[i] << (_headerBytes * 8));
Magic Number,EventStore.ClientAPI.Transport.Tcp,LengthPrefixMessageFramer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\LengthPrefixFramer.cs,FrameData,The following statement contains a magic number: yield return new ArraySegment<byte>(  				new[] {(byte)length' (byte)(length >> 8)' (byte)(length >> 16)' (byte)(length >> 24)});
Magic Number,EventStore.ClientAPI.Transport.Tcp,LengthPrefixMessageFramer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\LengthPrefixFramer.cs,FrameData,The following statement contains a magic number: yield return new ArraySegment<byte>(  				new[] {(byte)length' (byte)(length >> 8)' (byte)(length >> 16)' (byte)(length >> 24)});
Magic Number,EventStore.ClientAPI.Transport.Tcp,LengthPrefixMessageFramer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\LengthPrefixFramer.cs,FrameData,The following statement contains a magic number: yield return new ArraySegment<byte>(  				new[] {(byte)length' (byte)(length >> 8)' (byte)(length >> 16)' (byte)(length >> 24)});
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckMissingReceiveCallback,The following statement contains a magic number: bool missingReceiveCallback = inReceive && isReadyForReceive && sinceLastReceive > 500;
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckMissingSendCallback,The following statement contains a magic number: bool missingSendCallback = inSend && isReadyForSend && sinceLastSend > 500;
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckPendingSend,The following statement contains a magic number: _log.Info("# {0} {1}kb pending send"' connection' pendingSendBytes / 1024);
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckPendingSend,The following statement contains a magic number: pendingSendBytes > 128 * 1024
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckPendingSend,The following statement contains a magic number: pendingSendBytes > 128 * 1024
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckPendingReceived,The following statement contains a magic number: _log.Info("# {0} {1}kb are not dispatched"' connection' pendingReceivedBytes / 1024);
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckPendingReceived,The following statement contains a magic number: pendingReceivedBytes > 128 * 1024
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpConnectionMonitor,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpConnectionMonitor.cs,CheckPendingReceived,The following statement contains a magic number: pendingReceivedBytes > 128 * 1024
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpStats,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpStats.cs,TcpStats,The following statement contains a magic number: SendingSpeed = MeasureTime.TotalSeconds < 0.00001 ? 0 : SentBytesSinceLastRun / MeasureTime.TotalSeconds;
Magic Number,EventStore.ClientAPI.Transport.Tcp,TcpStats,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Transport.Tcp\TcpStats.cs,TcpStats,The following statement contains a magic number: ReceivingSpeed = MeasureTime.TotalSeconds < 0.00001  				? 0  				: ReceivedBytesSinceLastRun / MeasureTime.TotalSeconds;
Magic Number,EventStore.ClientAPI.UserManagement,UsersClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\UserManagement\UsersClient.cs,SendPost,The following statement contains a magic number: _client.Post(url'  				content'  				"application/json"'  				userCredentials'  				response => {  					if (response.HttpStatusCode == expectedCode)  						source.SetResult(null);  					else if (response.HttpStatusCode == 409)  						source.SetException(new UserCommandConflictException(response.HttpStatusCode'  							response.StatusDescription));  					else  						source.SetException(new UserCommandFailedException(  							response.HttpStatusCode'  							string.Format("Server returned {0} ({1}) for POST on {2}"'  								response.HttpStatusCode'  								response.StatusDescription'  								url)));  				}'  				source.SetException);
Missing Default,EventStore.ClientAPI,StreamMetadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\StreamMetadata.cs,ReadAcl,The following switch statement is missing a default case: switch (name) {  					case SystemMetadata.AclRead:  						read = ReadRoles(reader);  						break;  					case SystemMetadata.AclWrite:  						write = ReadRoles(reader);  						break;  					case SystemMetadata.AclDelete:  						delete = ReadRoles(reader);  						break;  					case SystemMetadata.AclMetaRead:  						metaRead = ReadRoles(reader);  						break;  					case SystemMetadata.AclMetaWrite:  						metaWrite = ReadRoles(reader);  						break;  				}
Missing Default,EventStore.ClientAPI.Internal,ClusterDnsEndPointDiscoverer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.ClientAPI\Internal\ClusterDnsEndPointDiscoverer.cs,TryDetermineBestNode,The following switch statement is missing a default case: switch (nodePreference) {  				case NodePreference.Random:  					RandomShuffle(nodes' 0' nodes.Length - 1);  					break;  				case NodePreference.Slave:  					nodes = nodes.OrderBy(nodeEntry => nodeEntry.State != ClusterMessages.VNodeState.Slave)  						.ToArray(); // OrderBy is a stable sort and only affects order of matching entries  					RandomShuffle(nodes' 0'  						nodes.Count(nodeEntry => nodeEntry.State == ClusterMessages.VNodeState.Slave) - 1);  					break;  			}
