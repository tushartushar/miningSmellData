Implementation smell,Namespace,Class,File,Method,Description
Long Method,EventStore.Projections.Core.Tests.Services.projections_manager,TestFixtureWithProjectionCoreAndManagementServices,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\TestFixtureWithProjectionCoreAndManagementServices.cs,SetUpCoreServices,The method has 115 lines of code.
Complex Method,EventStore.Projections.Core.Tests.Services.core_projection,FakeProjectionStateHandler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\FakeProjectionHandler.cs,ProcessEvent,Cyclomatic complexity of the method is 11
Long Parameter List,EventStore.Projections.Core.Tests.ClientAPI.Cluster,Endpoints,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,Endpoints,The method has 6 parameters. Parameters: internalTcp' internalTcpSec' internalHttp' externalTcp' externalTcpSec' externalHttp
Long Parameter List,EventStore.Projections.Core.Tests.Services.core_projection,FakeProjectionStateHandler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\FakeProjectionHandler.cs,FakeProjectionStateHandler,The method has 5 parameters. Parameters: failOnInitialize' failOnLoad' failOnProcessEvent' failOnGetPartition' configureBuilder
Long Parameter List,EventStore.Projections.Core.Tests.Services.core_projection,FakeProjectionStateHandler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\FakeProjectionHandler.cs,ProcessEvent,The method has 7 parameters. Parameters: partition' eventPosition' category1' data' newState' newSharedState' emittedEvents
Long Parameter List,EventStore.Projections.Core.Tests.Services.core_projection,TestFixtureWithExistingEvents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\TestFixtureWithExistingEvents.cs,CreateWriteEvent,The method has 6 parameters. Parameters: streamId' eventType' data' metadata' isJson' correlationId
Long Parameter List,EventStore.Projections.Core.Tests.Services.core_projection.multi_phase,FakeProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\multi_phase\specification_with_multi_phase_core_projection.cs,FakeProjectionProcessingStrategy,The method has 5 parameters. Parameters: name' projectionVersion' logger' phase1' phase2
Long Parameter List,EventStore.Projections.Core.Tests.Services.core_projection.multi_phase,FakeProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\multi_phase\specification_with_multi_phase_core_projection.cs,CreateProcessingPhases,The method has 10 parameters. Parameters: publisher' inputQueue' projectionCorrelationId' partitionStateCache' updateStatistics' coreProjection' namingBuilder' timeProvider' ioDispatcher' coreProjectionCheckpointWriter
Long Parameter List,EventStore.Projections.Core.Tests.Services.core_projection.multi_phase,FakeProjectionProcessingPhase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\multi_phase\specification_with_multi_phase_core_projection.cs,FakeProjectionProcessingPhase,The method has 5 parameters. Parameters: phase' specification' checkpointManager' readerStrategy' emittedStreamsTracker
Long Parameter List,EventStore.Projections.Core.Tests.Services.core_projection.multi_phase,FakeReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\multi_phase\specification_with_multi_phase_core_projection.cs,CreatePausedEventReader,The method has 6 parameters. Parameters: eventReaderId' publisher' ioDispatcher' checkpointTag' stopOnEof' stopAfterNEvents
Long Parameter List,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,FakeReaderStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\FakeReaderSubscription.cs,CreatePausedEventReader,The method has 6 parameters. Parameters: eventReaderId' publisher' ioDispatcher' checkpointTag' stopOnEof' stopAfterNEvents
Long Parameter List,EventStore.Projections.Core.Tests.Services.Transport.Http,Authorization,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\http_service\authorization_tests.cs,SendRequest,The method has 5 parameters. Parameters: client' method' url' body' contentType
Long Parameter List,EventStore.Projections.Core.Tests.Services.projections_manager,FakeBiStateProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\FakeBiStateProjection.cs,ProcessEvent,The method has 7 parameters. Parameters: partition' eventPosition' category1' data' newState' newSharedState' emittedEvents
Long Parameter List,EventStore.Projections.Core.Tests.Services.projections_manager,FakeForeachStreamProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\FakeForeachStreamProjection.cs,ProcessEvent,The method has 7 parameters. Parameters: partition' eventPosition' category1' data' newState' newSharedState' emittedEvents
Long Parameter List,EventStore.Projections.Core.Tests.Services.projections_manager,FakeFromCatalogStreamProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\FakeFromCatalogStreamProjection.cs,ProcessEvent,The method has 7 parameters. Parameters: partition' eventPosition' category1' data' newState' newSharedState' emittedEvents
Long Parameter List,EventStore.Projections.Core.Tests.Services.projections_manager,FakeProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\FakeProjection.cs,ProcessEvent,The method has 7 parameters. Parameters: partition' eventPosition' category1' data' newState' newSharedState' emittedEvents
Long Parameter List,EventStore.Projections.Core.Tests.Services.projections_manager,TestFixtureWithProjectionCoreAndManagementServices,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\TestFixtureWithProjectionCoreAndManagementServices.cs,SetUpCoreServices,The method has 5 parameters. Parameters: workerId' bus' inputQueue' output_' timeoutScheduler
Long Parameter List,EventStore.Projections.Core.Tests.Services.v8,specification_with_event_handled,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_defining_a_v8_projection.cs,CreateSampleEvent,The method has 5 parameters. Parameters: streamId' sequenceNumber' eventType' data' tfPos
Long Identifier,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,FakeCoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\FakeCoreProjection.cs,,The length of the parameter _prerecordedEventsLoadedMessages is 32.
Long Identifier,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,TestFixtureWithCoreProjectionCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\TestFixtureWithCoreProjectionCheckpointManager.cs,,The length of the parameter _checkpointUnhandledBytesThreshold is 34.
Long Identifier,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_creating_a_default_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_creating_a_default_checkpoint_manager.cs,,The length of the parameter _coreProjectionCheckpointWriter is 31.
Long Identifier,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,with_multi_stream_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\with_multi_stream_checkpoint_manager.cs,,The length of the parameter _coreProjectionCheckpointWriter is 31.
Long Identifier,EventStore.Projections.Core.Tests.Services.core_projection,TestCheckpointManagerMessageHandler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\TestCheckpointManagerMessageHandler.cs,,The length of the parameter HandledRestartRequestedMessages is 31.
Long Identifier,EventStore.Projections.Core.Tests.Services.core_projection,TestFixtureWithCoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\TestFixtureWithCoreProjection.cs,,The length of the parameter _checkpointUnhandledBytesThreshold is 34.
Long Identifier,EventStore.Projections.Core.Tests.Services.core_projection,TestFixtureWithCoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\TestFixtureWithCoreProjection.cs,,The length of the parameter _configureBuilderByQuerySource is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.core_projection.multi_phase,FakeProjectionProcessingStrategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\multi_phase\specification_with_multi_phase_core_projection.cs,CreateProcessingPhases,The length of the parameter coreProjectionCheckpointWriter is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,specification_with_parallel_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\specification_with_parallel_query.cs,,The length of the parameter _spoolProcessingResponseDispatcher is 34.
Long Identifier,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,when_emitting_events_with_maximum_allowed_writes_in_flight_set,The length of the parameter maximumNumberOfAllowedWritesInFlight is 36.
Long Identifier,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,,The length of the parameter _maximumNumberOfAllowedWritesInFlight is 37.
Long Identifier,EventStore.Projections.Core.Tests.Services,TestFixtureWithProjectionCoreService,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\TestFixtureWithProjectionCoreService.cs,,The length of the parameter _spoolProcessingResponseDispatcher is 34.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,,The length of the parameter _checkpointStreamCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,,The length of the parameter _eventTypeOneStreamReadCorrelationId is 36.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,,The length of the parameter _eventTypeTwoStreamReadCorrelationId is 36.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_timeout_occurs.cs,,The length of the parameter _readAllEventsForwardCorrelationId is 34.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,FakeReaderSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\FakeReaderSubscription.cs,,The length of the parameter _receivedStartingNotifications is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,FakeReaderSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\FakeReaderSubscription.cs,,The length of the parameter _receivedPartitionEofNotifications is 34.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,FakeReaderSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\FakeReaderSubscription.cs,,The length of the parameter _receivedPartitionDeletedNotifications is 38.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,FakeReaderSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\FakeReaderSubscription.cs,,The length of the parameter _receivedPartitionMeasuredNotifications is 39.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,FakeReaderSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\FakeReaderSubscription.cs,,The length of the parameter _receivedNotAuthorizedNotifications is 35.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_starting_a_heading_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_starting_a_heading_event_reader.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_handles_an_event.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_subscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_subscribes_a_projection.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_unsubscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_unsubscribes_a_projection.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_deleted_streams.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_has_been_created.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_resuming,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_resuming.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_deleted_streams.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_no_stream.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_soft_deleted_stream_with_a_single_event_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_soft_deleted_stream_with_a_single_event_event_reader.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_paused_then_handling_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_paused_then_handling_no_stream.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_resuming_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_resuming_stream_event_reader.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_stream_event_reader_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_stream_event_reader_has_been_created.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,,The length of the parameter _distibutionPointCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,,The length of the parameter _readAllEventsForwardCorrelationId is 34.
Long Identifier,EventStore.Projections.Core.Tests.Services.projections_manager,TestFixtureWithProjectionCoreAndManagementServices,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\TestFixtureWithProjectionCoreAndManagementServices.cs,SetUpCoreServices,The length of the parameter spoolProcessingResponseDispatcher is 33.
Long Identifier,EventStore.Projections.Core.Tests.Services.projections_manager,when_deleting_a_faulted_persistent_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\when_deleting_a_faulted_persistent_projection.cs,,The length of the parameter _projectionEmittedStreamsStream is 31.
Long Identifier,EventStore.Projections.Core.Tests.Services.projections_manager,when_deleting_a_persistent_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\when_deleting_a_persistent_projection.cs,,The length of the parameter _projectionEmittedStreamsStream is 31.
Long Identifier,EventStore.Projections.Core.Tests.Services.projections_manager,when_deleting_a_persistent_projection_and_keep_emitted_streams_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\when_deleting_a_persistent_projection_and_keep_emitted_streams_stream.cs,,The length of the parameter _projectionEmittedStreamsStream is 31.
Long Identifier,EventStore.Projections.Core.Tests.Services.projections_manager.managed_projection,when_persisted_state_write_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\managed_projection\when_persisted_state_write_fails.cs,,The length of the parameter _originalPersistedStateEventId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_read_results_in_an_error,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_read_results_in_an_error.cs,,The length of the parameter _readStreamEventsCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_read_times_out,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_read_times_out.cs,,The length of the parameter _readStreamEventsCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_statistics_report_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_statistics_report_response.cs,,The length of the parameter _writePendingEventsAfterCheckpoint is 34.
Long Identifier,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_statistics_report_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_statistics_report_response.cs,,The length of the parameter _writePendingEventsBeforeCheckpoint is 35.
Long Identifier,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_timeout_received_after_read_succeeds,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_timeout_received_after_read_succeeds.cs,,The length of the parameter _readStreamEventsCorrelationId is 30.
Long Identifier,EventStore.Projections.Core.Tests.Services.projection_subscription,TestFixtureWithProjectionSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\TestFixtureWithProjectionSubscription.cs,,The length of the parameter _checkpointUnhandledBytesThreshold is 34.
Long Identifier,EventStore.Projections.Core.Tests.Services.projection_subscription,TestFixtureWithProjectionSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\TestFixtureWithProjectionSubscription.cs,,The length of the parameter _checkpointProcessedEventsThreshold is 35.
Long Identifier,EventStore.Projections.Core.Tests.Services.v8,v8_internals,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\v8_internals.cs,,The length of the parameter _commandHandlerRegisteredCallback is 33.
Long Identifier,EventStore.Projections.Core.Tests.Services.v8,v8_internals,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\v8_internals.cs,,The length of the parameter _reverseCommandHandlerDelegate is 30.
Long Statement,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,EnableStandardProjections,The length of the statement  "			Task.Delay(4000).Wait(); /* workaround for race condition when a projection is in LoadStopped() state and it is enabled */ " is 122.
Long Statement,EventStore.Projections.Core.Tests.Integration.parallel_query,when_running_from_catalog_stream_query_with_transform,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Integration\parallel_query\when_running_from_catalog_stream_query_with_transform.cs,GivenQuery,The length of the statement  "fromStreamCatalog('catalog'' function(ev) {log(JSON.stringify(ev)); return 'account-' + ev.body.a;}).foreachStream().when({ " is 123.
Long Statement,EventStore.Projections.Core.Tests.Playground,Launchpad,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Playground\Launchpad.cs,Setup,The length of the statement  "					@"--ip=127.0.0.1 --db={0} --int-tcp-port=3111 --ext-tcp-port=1111 --http-port=2111 --manager-ip=127.0.0.1 --manager-port=30777 --nodes-count=1 --fake-dns --prepare-count=1 --commit-count=1"' " is 190.
Long Statement,when_reordering_happens_in_event_by_type_index,when_starting_with_empty_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_reader\catching_up\when_reordering_happens_in_event_by_type_index.cs,When,The length of the statement  "				// simulate index-by-type system projection (the second event write is delayed - awaiting for ACK from the previous write) " is 122.
Long Statement,when_reordering_happens_in_event_by_type_index,when_starting_with_partially_built_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_reader\catching_up\when_reordering_happens_in_event_by_type_index.cs,GivenInitialIndexState,The length of the statement  "				// simulate index-by-type system projection (the second event write is delayed - awaiting for ACK from the previous write) " is 122.
Long Statement,EventStore.Projections.Core.Tests.Services.Transport.Http,Authorization,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\http_service\authorization_tests.cs,CreateUser,The length of the statement  "					var dataStr = string.Format("{{loginName: '{0}'' fullName: '{1}'' password: '{2}'' groups: []}}"' username' username' password); " is 128.
Long Statement,EventStore.Projections.Core.Tests.Services.Transport.Http,Authorization,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\http_service\authorization_tests.cs,authorization_tests,The length of the statement  "			var contentType = httpMethod == HttpMethod.Post || httpMethod == HttpMethod.Put || httpMethod == HttpMethod.Delete ? "application/json" : null; " is 143.
Long Statement,EventStore.Projections.Core.Tests.Services.projections_manager,specification_with_projection_management_service,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\specification_with_projection_management_service.cs,Setup,The length of the statement  "			//TODO: this became an integration test - proper ProjectionCoreService and ProjectionManager testing is required as well " is 120.
Long Statement,EventStore.Projections.Core.Tests.Services.projections_manager,TestFixtureWithProjectionCoreAndManagementServices,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\TestFixtureWithProjectionCoreAndManagementServices.cs,Setup,The length of the statement  "			//TODO: this became an integration test - proper ProjectionCoreService and ProjectionManager testing is required as well " is 120.
Long Statement,EventStore.Projections.Core.Tests.Services.projections_manager,when_starting_the_projection_manager_with_duplicate_projection_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\when_starting_the_projection_manager_with_duplicate_projection_created.cs,Given,The length of the statement  "				@"{""Query"":""fromAll(); on_any(function(){});log('hello-from-projection-definition');""' ""Mode"":""3""' ""Enabled"":true' ""HandlerType"":""JS""}"); " is 151.
Long Statement,EventStore.Projections.Core.Tests.Services.projections_manager,when_starting_the_projection_manager_with_existing_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\when_starting_the_projection_manager_with_existing_projection.cs,Given,The length of the statement  "				@"{""Query"":""fromAll(); on_any(function(){});log('hello-from-projection-definition');""' ""Mode"":""3""' ""Enabled"":true' ""HandlerType"":""JS""}"); " is 151.
Long Statement,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_emitting_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_emitting_metadata.cs,Given,The length of the statement  "                    emit('output-stream' + event.sequenceNumber' 'emitted-event' + event.sequenceNumber' {a: JSON.parse(event.bodyRaw).a}' {m1: 1' m2: ""2""}); " is 139.
Empty Catch Block,EventStore.Projections.Core.Tests.ClientAPI,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\specification_with_standard_projections_runnning.cs,TestFixtureSetUp,The method has an empty catch block.
Empty Catch Block,EventStore.Projections.Core.Tests.ClientAPI,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\specification_with_standard_projections_runnning.cs,TestFixtureSetUp,The method has an empty catch block.
Empty Catch Block,EventStore.Projections.Core.Tests.ClientAPI.projectionsManager,SpecificationWithNodeAndProjectionsManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\projectionsManager\SpecificationWithNodeAndProjectionsManager.cs,TestFixtureSetUp,The method has an empty catch block.
Empty Catch Block,EventStore.Projections.Core.Tests.ClientAPI.projectionsManager,SpecificationWithNodeAndProjectionsManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\projectionsManager\SpecificationWithNodeAndProjectionsManager.cs,TestFixtureSetUp,The method has an empty catch block.
Empty Catch Block,EventStore.Projections.Core.Tests.Playground,LaunchpadBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Playground\LaunchpadBase.cs,StartHelperProcess,The method has an empty catch block.
Empty Catch Block,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_default_checkpoint_manager_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_default_checkpoint_manager_has_been_reinitialized.cs,When,The method has an empty catch block.
Empty Catch Block,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification.cs,setup,The method has an empty catch block.
Empty Catch Block,EventStore.Projections.Core.Tests.Services.v8,when_creating_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_creating_v8_projection.cs,long_execution_times_out_many,The method has an empty catch block.
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,TestFixtureSetUp,The following statement contains a magic number: _nodeEndpoints[2] = new Endpoints(  				PortsHelper.GetAvailablePort(IPAddress.Loopback)' PortsHelper.GetAvailablePort(IPAddress.Loopback)'  				PortsHelper.GetAvailablePort(IPAddress.Loopback)' PortsHelper.GetAvailablePort(IPAddress.Loopback)'  				PortsHelper.GetAvailablePort(IPAddress.Loopback)' PortsHelper.GetAvailablePort(IPAddress.Loopback));
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,TestFixtureSetUp,The following statement contains a magic number: _nodes[0] = CreateNode(0'  				_nodeEndpoints[0]' new IPEndPoint[] {_nodeEndpoints[1].InternalHttp' _nodeEndpoints[2].InternalHttp});
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,TestFixtureSetUp,The following statement contains a magic number: _nodes[1] = CreateNode(1'  				_nodeEndpoints[1]' new IPEndPoint[] {_nodeEndpoints[0].InternalHttp' _nodeEndpoints[2].InternalHttp});
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,TestFixtureSetUp,The following statement contains a magic number: _nodes[2] = CreateNode(2'  				_nodeEndpoints[2]' new IPEndPoint[] {_nodeEndpoints[0].InternalHttp' _nodeEndpoints[1].InternalHttp});
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,TestFixtureSetUp,The following statement contains a magic number: _nodes[2] = CreateNode(2'  				_nodeEndpoints[2]' new IPEndPoint[] {_nodeEndpoints[0].InternalHttp' _nodeEndpoints[1].InternalHttp});
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,TestFixtureSetUp,The following statement contains a magic number: _nodes[2] = CreateNode(2'  				_nodeEndpoints[2]' new IPEndPoint[] {_nodeEndpoints[0].InternalHttp' _nodeEndpoints[1].InternalHttp});
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,TestFixtureSetUp,The following statement contains a magic number: _nodes[2].Start();
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,TestFixtureSetUp,The following statement contains a magic number: WaitHandle.WaitAll(new[] {_nodes[0].StartedEvent' _nodes[1].StartedEvent' _nodes[2].StartedEvent});
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,TestFixtureSetUp,The following statement contains a magic number: _manager = new ProjectionsManager(  				new ConsoleLogger()'  				_nodes[0].ExternalHttpEndPoint'  				TimeSpan.FromMilliseconds(10000));
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,EnableStandardProjections,The following statement contains a magic number: Task.Delay(4000).Wait();
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,EnableProjection,The following statement contains a magic number: i<=10
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,EnableProjection,The following statement contains a magic number: Task.Delay(1000).Wait();
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,TestFixtureTearDown,The following statement contains a magic number: _nodes[2].Shutdown();
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,AssertStreamTail,The following statement contains a magic number: switch (result.Status) {  				case SliceReadStatus.StreamDeleted:  					Assert.Fail("Stream '{0}' is deleted"' streamId);  					break;  				case SliceReadStatus.StreamNotFound:  					Assert.Fail("Stream '{0}' does not exist"' streamId);  					break;  				case SliceReadStatus.Success:  					var resultEventsReversed = result.Events.Reverse().ToArray();  					if (resultEventsReversed.Length < events.Length)  						DumpFailed("Stream does not contain enough events"' streamId' events' result.Events);  					else {  						for (var index = 0; index < events.Length; index++) {  							var parts = events[index].Split(new char[] {':'}' 2);  							var eventType = parts[0];  							var eventData = parts[1];    							if (resultEventsReversed[index].Event.EventType != eventType)  								DumpFailed("Invalid event type"' streamId' events' resultEventsReversed);  							else if (resultEventsReversed[index].Event.DebugDataView != eventData)  								DumpFailed("Invalid event body"' streamId' events' resultEventsReversed);  						}  					}    					break;  			}
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,DumpStream,The following statement contains a magic number: var result = _conn.ReadStreamEventsBackwardAsync(streamId' -1' 100' true' _admin).Result;
Magic Number,EventStore.Projections.Core.Tests.ClientAPI,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\specification_with_standard_projections_runnning.cs,TestFixtureSetUp,The following statement contains a magic number: _manager = new ProjectionsManager(  					new ConsoleLogger()'  					_node.ExtHttpEndPoint'  					TimeSpan.FromMilliseconds(20000));
Magic Number,EventStore.Projections.Core.Tests.ClientAPI,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\specification_with_standard_projections_runnning.cs,TestFixtureSetUp,The following statement contains a magic number: _queryManager = new QueryManager(  					new ConsoleLogger()'  					_node.ExtHttpEndPoint'  					TimeSpan.FromMilliseconds(20000)'  					TimeSpan.FromMilliseconds(20000));
Magic Number,EventStore.Projections.Core.Tests.ClientAPI,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\specification_with_standard_projections_runnning.cs,TestFixtureSetUp,The following statement contains a magic number: _queryManager = new QueryManager(  					new ConsoleLogger()'  					_node.ExtHttpEndPoint'  					TimeSpan.FromMilliseconds(20000)'  					TimeSpan.FromMilliseconds(20000));
Magic Number,EventStore.Projections.Core.Tests.ClientAPI,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\specification_with_standard_projections_runnning.cs,AssertStreamTail,The following statement contains a magic number: switch (result.Status) {  				case SliceReadStatus.StreamDeleted:  					Assert.Fail("Stream '{0}' is deleted"' streamId);  					break;  				case SliceReadStatus.StreamNotFound:  					Assert.Fail("Stream '{0}' does not exist"' streamId);  					break;  				case SliceReadStatus.Success:  					var resultEventsReversed = result.Events.Reverse().ToArray();  					if (resultEventsReversed.Length < events.Length)  						DumpFailed("Stream does not contain enough events"' streamId' events' result.Events);  					else {  						for (var index = 0; index < events.Length; index++) {  							var parts = events[index].Split(new char[] {':'}' 2);  							var eventType = parts[0];  							var eventData = parts[1];    							if (resultEventsReversed[index].Event.EventType != eventType)  								DumpFailed("Invalid event type"' streamId' events' resultEventsReversed);  							else if (resultEventsReversed[index].Event.DebugDataView != eventData)  								DumpFailed("Invalid event body"' streamId' events' resultEventsReversed);  						}  					}    					break;  			}
Magic Number,EventStore.Projections.Core.Tests.ClientAPI,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\specification_with_standard_projections_runnning.cs,DumpStream,The following statement contains a magic number: var result = _conn.ReadStreamEventsBackwardAsync(streamId' -1' 100' true' _admin).Result;
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.projectionsManager,ProjectionsManagerTestSuiteMarkerBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\projectionsManager\ProjectionsManagerTestSuiteMarkerBase.cs,SetUp,The following statement contains a magic number: var typeName = GetType().Name.Length > 30 ? GetType().Name.Substring(0' 30) : GetType().Name;
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.projectionsManager,ProjectionsManagerTestSuiteMarkerBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\projectionsManager\ProjectionsManagerTestSuiteMarkerBase.cs,SetUp,The following statement contains a magic number: var typeName = GetType().Name.Length > 30 ? GetType().Name.Substring(0' 30) : GetType().Name;
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.projectionsManager,SpecificationWithNodeAndProjectionsManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\projectionsManager\SpecificationWithNodeAndProjectionsManager.cs,TestFixtureSetUp,The following statement contains a magic number: _timeout = TimeSpan.FromSeconds(10);
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.query_result.with_long_from_all_query,when_getting_result,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\when_executing_query\with_long_from_all_query\when_getting_result.cs,waits_for_results,The following statement contains a magic number: var result = _queryManager  				.ExecuteAsync("query"' query' TimeSpan.FromMilliseconds(100)' TimeSpan.FromMilliseconds(5000)' _admin)  				.GetAwaiter().GetResult();
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.query_result.with_long_from_all_query,when_getting_result,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\when_executing_query\with_long_from_all_query\when_getting_result.cs,waits_for_results,The following statement contains a magic number: var result = _queryManager  				.ExecuteAsync("query"' query' TimeSpan.FromMilliseconds(100)' TimeSpan.FromMilliseconds(5000)' _admin)  				.GetAwaiter().GetResult();
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.when_executing_query.with_long_from_all_query,when_getting_result_and_timeout_exceeded,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\when_executing_query\with_long_from_all_query\when_getting_result_and_timeout_exceeded.cs,throws_exception,The following statement contains a magic number: Assert.ThrowsAsync<OperationTimedOutException>(() => _queryManager.ExecuteAsync("query"' query'  				TimeSpan.FromMilliseconds(100)' TimeSpan.FromMilliseconds(5000)' _admin));
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.when_executing_query.with_long_from_all_query,when_getting_result_and_timeout_exceeded,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\when_executing_query\with_long_from_all_query\when_getting_result_and_timeout_exceeded.cs,throws_exception,The following statement contains a magic number: Assert.ThrowsAsync<OperationTimedOutException>(() => _queryManager.ExecuteAsync("query"' query'  				TimeSpan.FromMilliseconds(100)' TimeSpan.FromMilliseconds(5000)' _admin));
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.when_handling_deleted.with_from_category_foreach_projection.
	recovery,when_running_long_parallel_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\when_handling_deleted\with_from_category_foreach_projection\recovery\when_running_long_parallel_query.cs,GivenWorkerThreadCount,The following statement contains a magic number: return 2;
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.when_handling_deleted.with_from_category_foreach_projection.
	recovery,when_running_long_parallel_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\when_handling_deleted\with_from_category_foreach_projection\recovery\when_running_long_parallel_query.cs,Given,The following statement contains a magic number: PostEvent("stream-" + i' "type" + (j % 2 + 1)' "{}");
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.when_handling_deleted.with_from_category_foreach_projection.
	recovery,when_running_long_parallel_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\when_handling_deleted\with_from_category_foreach_projection\recovery\when_running_long_parallel_query.cs,Given,The following statement contains a magic number: j < 10
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.when_handling_deleted.with_from_category_foreach_projection.
	recovery,when_running_long_parallel_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\when_handling_deleted\with_from_category_foreach_projection\recovery\when_running_long_parallel_query.cs,Given,The following statement contains a magic number: i <= 900
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.when_handling_deleted.with_from_category_foreach_projection.
	recovery,when_running_long_parallel_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\when_handling_deleted\with_from_category_foreach_projection\recovery\when_running_long_parallel_query.cs,When,The following statement contains a magic number: WaitIdle(multiplier: 10);
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.when_handling_deleted.with_from_category_foreach_projection.
	recovery,when_running_long_parallel_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\when_handling_deleted\with_from_category_foreach_projection\recovery\when_running_long_parallel_query.cs,DumpStreams,The following statement contains a magic number: var result = _conn.ReadAllEventsForwardAsync(Position.Start' 4096' false' _admin).Result;
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.when_handling_deleted.with_from_category_foreach_projection.
	recovery,when_running_long_parallel_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\when_handling_deleted\with_from_category_foreach_projection\recovery\when_running_long_parallel_query.cs,DumpStreams,The following statement contains a magic number: top.Take(50)
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.when_handling_deleted.with_from_category_foreach_projection.
	recovery,when_running_long_parallel_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\when_handling_deleted\with_from_category_foreach_projection\recovery\when_running_long_parallel_query.cs,DumpStreams,The following statement contains a magic number: Dump(">>> " + s.Key' s.Key' s.Events.Take(75).ToArray());
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.when_handling_deleted.with_from_category_foreach_projection.
	recovery,when_running_long_parallel_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\when_handling_deleted\with_from_category_foreach_projection\recovery\when_running_long_parallel_query.cs,DumpStreams,The following statement contains a magic number: topE.Take(2)
Magic Number,EventStore.Projections.Core.Tests.ClientAPI.when_handling_deleted.with_from_category_foreach_projection.
	recovery,when_running_parallel_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\when_handling_deleted\with_from_category_foreach_projection\recovery\when_running_parallel_query.cs,GivenWorkerThreadCount,The following statement contains a magic number: return 2;
Magic Number,with_standard_projections_running,when_deleting_stream_base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\with_standard_projections_running.cs,streams_stream_exists,The following statement contains a magic number: Assert.AreEqual(  					SliceReadStatus.Success'  					_conn.ReadStreamEventsForwardAsync("$streams"' 0' 10' false' _admin).Result.Status);
Magic Number,with_standard_projections_running,when_deleting_stream_base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\with_standard_projections_running.cs,deleted_stream_events_are_indexed,The following statement contains a magic number: var slice = _conn.ReadStreamEventsForwardAsync("$ce-cat"' 0' 10' true' _admin).Result;
Magic Number,with_standard_projections_running,when_deleting_stream_base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\with_standard_projections_running.cs,deleted_stream_events_are_indexed,The following statement contains a magic number: Assert.AreEqual(3' slice.Events.Length);
Magic Number,with_standard_projections_running,when_deleting_stream_base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\with_standard_projections_running.cs,deleted_stream_events_are_indexed,The following statement contains a magic number: var deletedLinkMetadata = slice.Events[2].Link.Metadata;
Magic Number,with_standard_projections_running,when_deleting_stream_base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\with_standard_projections_running.cs,deleted_stream_events_are_indexed_as_deleted,The following statement contains a magic number: var slice = _conn.ReadStreamEventsForwardAsync("$et-$deleted"' 0' 10' true' _admin).Result;
Magic Number,EventStore.Projections.Core.Tests.Other,can_serialize_and_deserialize,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Other\json_serialization.cs,prepare_position_based_checkpoint_tag,The following statement contains a magic number: CheckpointTag tag = CheckpointTag.FromPreparePosition(1' 1234);
Magic Number,EventStore.Projections.Core.Tests.Other,can_serialize_and_deserialize,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Other\json_serialization.cs,stream_based_checkpoint_tag,The following statement contains a magic number: CheckpointTag tag = CheckpointTag.FromStreamPosition(1' "$ce-account"' 12345);
Magic Number,EventStore.Projections.Core.Tests.Other,can_serialize_and_deserialize,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Other\json_serialization.cs,streams_based_checkpoint_tag,The following statement contains a magic number: CheckpointTag tag = CheckpointTag.FromStreamPositions(1' new Dictionary<string' long> {{"a"' 1}' {"b"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Other,can_serialize_and_deserialize,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Other\json_serialization.cs,event_by_type_index_based_checkpoint_tag,The following statement contains a magic number: CheckpointTag tag = CheckpointTag.FromEventTypeIndexPositions(  				0' new TFPos(100' 50)' new Dictionary<string' long> {{"a"' 1}' {"b"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Other,can_serialize_and_deserialize,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Other\json_serialization.cs,event_by_type_index_based_checkpoint_tag,The following statement contains a magic number: CheckpointTag tag = CheckpointTag.FromEventTypeIndexPositions(  				0' new TFPos(100' 50)' new Dictionary<string' long> {{"a"' 1}' {"b"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Other,can_serialize_and_deserialize,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Other\json_serialization.cs,event_by_type_index_based_checkpoint_tag,The following statement contains a magic number: CheckpointTag tag = CheckpointTag.FromEventTypeIndexPositions(  				0' new TFPos(100' 50)' new Dictionary<string' long> {{"a"' 1}' {"b"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Other,can_serialize_and_deserialize,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Other\json_serialization.cs,phase_based_checkpoint_tag_completed,The following statement contains a magic number: CheckpointTag tag = CheckpointTag.FromPhase(2' completed: false);
Magic Number,EventStore.Projections.Core.Tests.Other,can_serialize_and_deserialize,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Other\json_serialization.cs,by_stream_based_checkpoint_tag,The following statement contains a magic number: CheckpointTag tag = CheckpointTag.FromByStreamPosition(0' "catalog"' 1' "data"' 2' 12345);
Magic Number,EventStore.Projections.Core.Tests.Other,can_serialize_and_deserialize,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Other\json_serialization.cs,by_stream_based_checkpoint_tag,The following statement contains a magic number: CheckpointTag tag = CheckpointTag.FromByStreamPosition(0' "catalog"' 1' "data"' 2' 12345);
Magic Number,EventStore.Projections.Core.Tests.Other,can_serialize_and_deserialize,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Other\json_serialization.cs,by_stream_based_checkpoint_tag_zero,The following statement contains a magic number: CheckpointTag tag = CheckpointTag.FromByStreamPosition(0' "catalog"' -1' null' -1' 12345);
Magic Number,EventStore.Projections.Core.Tests.Other,Stopwatch,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Other\Stopwatch.cs,MeasureStopwatch,The following statement contains a magic number: i < 1000000
Magic Number,EventStore.Projections.Core.Tests.Other,url_segments,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Other\when_matching_remaining_path.cs,are_not_untumatically_unescaped,The following statement contains a magic number: Assert.AreEqual(3' uri.Segments.Length);
Magic Number,EventStore.Projections.Core.Tests.Other,url_segments,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Other\when_matching_remaining_path.cs,are_not_untumatically_unescaped,The following statement contains a magic number: Assert.AreEqual("123$"' uri.Segments[2]);
Magic Number,EventStore.Projections.Core.Tests.Other,url_segments,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Other\when_matching_remaining_path.cs,are_not_automatically_unescaped2,The following statement contains a magic number: Assert.AreEqual(3' uri.Segments.Length);
Magic Number,EventStore.Projections.Core.Tests.Other,url_segments,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Other\when_matching_remaining_path.cs,are_not_automatically_unescaped2,The following statement contains a magic number: Assert.AreEqual("123$"' uri.Segments[2]);
Magic Number,EventStore.Projections.Core.Tests.Other,when_matching_escaped_urls,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Other\when_matching_remaining_path.cs,Dump,The following statement contains a magic number: i <= 127
Magic Number,EventStore.Projections.Core.Tests.Playground,Launchpad,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Playground\Launchpad.cs,Setup,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,EventStore.Projections.Core.Tests.Playground,Launchpad,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Playground\Launchpad.cs,WriteFloodAndProjections,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,EventStore.Projections.Core.Tests.Playground,Launchpad,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Playground\Launchpad.cs,WriteFloodAndProjections,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,EventStore.Projections.Core.Tests.Playground,Launchpad,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Playground\Launchpad.cs,WriteFloodAndProjections,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,EventStore.Projections.Core.Tests.Playground,Launchpad,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Playground\Launchpad.cs,WriteFloodAndProjections,The following statement contains a magic number: Thread.Sleep(160000);
Magic Number,EventStore.Projections.Core.Tests.Playground,Launchpad,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Playground\Launchpad.cs,JustProjections,The following statement contains a magic number: Thread.Sleep(3500);
Magic Number,EventStore.Projections.Core.Tests.Playground,Launchpad,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Playground\Launchpad.cs,JustProjections,The following statement contains a magic number: Thread.Sleep(50000);
Magic Number,EventStore.Projections.Core.Tests.Playground,Launchpad2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Playground\Launchpad2.cs,RunSingle,The following statement contains a magic number: Thread.Sleep(60000);
Magic Number,EventStore.Projections.Core.Tests.Playground,Launchpad2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Playground\Launchpad2.cs,RunSingleAndFlood,The following statement contains a magic number: Thread.Sleep(4000);
Magic Number,EventStore.Projections.Core.Tests.Playground,Launchpad2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Playground\Launchpad2.cs,RunSingleAndFlood,The following statement contains a magic number: Thread.Sleep(10000);
Magic Number,EventStore.Projections.Core.Tests.Playground,Launchpad2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Playground\Launchpad2.cs,RunSingleAndFlood,The following statement contains a magic number: Thread.Sleep(20000);
Magic Number,EventStore.Projections.Core.Tests.Playground,Launchpad3,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Playground\Launchpad3.cs,RunSingle,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,EventStore.Projections.Core.Tests.Playground,Launchpad3,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Playground\Launchpad3.cs,RunSingle,The following statement contains a magic number: request.Timeout = 5000;
Magic Number,EventStore.Projections.Core.Tests.Playground,Launchpad3,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Playground\Launchpad3.cs,RunSingle,The following statement contains a magic number: timer.Elapsed.TotalSeconds < 15
Magic Number,EventStore.Projections.Core.Tests.Playground,Launchpad3,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Playground\Launchpad3.cs,RunSingle,The following statement contains a magic number: Thread.Sleep(100000);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_event_type_index_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_event_type_index_positions_when_updating.cs,updated_tf_only_position_is_correct,The following statement contains a magic number: var updated = _a1b1.UpdateEventTypeIndexPosition(new TFPos(200' 50));
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_event_type_index_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_event_type_index_positions_when_updating.cs,updated_tf_only_position_is_correct,The following statement contains a magic number: var updated = _a1b1.UpdateEventTypeIndexPosition(new TFPos(200' 50));
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_event_type_index_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_event_type_index_positions_when_updating.cs,updated_tf_only_position_is_correct,The following statement contains a magic number: Assert.AreEqual(new TFPos(200' 50)' updated.Position);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_event_type_index_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_event_type_index_positions_when_updating.cs,updated_tf_only_position_is_correct,The following statement contains a magic number: Assert.AreEqual(new TFPos(200' 50)' updated.Position);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_event_type_index_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_event_type_index_positions_when_updating.cs,updated_tf_position_is_correct,The following statement contains a magic number: var updated = _a1b1.UpdateEventTypeIndexPosition(new TFPos(200' 50)' "a"' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_event_type_index_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_event_type_index_positions_when_updating.cs,updated_tf_position_is_correct,The following statement contains a magic number: var updated = _a1b1.UpdateEventTypeIndexPosition(new TFPos(200' 50)' "a"' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_event_type_index_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_event_type_index_positions_when_updating.cs,updated_tf_position_is_correct,The following statement contains a magic number: var updated = _a1b1.UpdateEventTypeIndexPosition(new TFPos(200' 50)' "a"' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_event_type_index_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_event_type_index_positions_when_updating.cs,updated_tf_position_is_correct,The following statement contains a magic number: Assert.AreEqual(2' updated.Streams["a"]);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_event_type_index_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_event_type_index_positions_when_updating.cs,updated_tf_position_is_correct,The following statement contains a magic number: Assert.AreEqual(new TFPos(200' 50)' updated.Position);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_event_type_index_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_event_type_index_positions_when_updating.cs,updated_tf_position_is_correct,The following statement contains a magic number: Assert.AreEqual(new TFPos(200' 50)' updated.Position);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_event_type_index_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_event_type_index_positions_when_updating.cs,other_stream_position_is_correct,The following statement contains a magic number: var updated = _a1b1.UpdateEventTypeIndexPosition(new TFPos(200' 50)' "a"' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_event_type_index_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_event_type_index_positions_when_updating.cs,other_stream_position_is_correct,The following statement contains a magic number: var updated = _a1b1.UpdateEventTypeIndexPosition(new TFPos(200' 50)' "a"' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_event_type_index_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_event_type_index_positions_when_updating.cs,other_stream_position_is_correct,The following statement contains a magic number: var updated = _a1b1.UpdateEventTypeIndexPosition(new TFPos(200' 50)' "a"' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_event_type_index_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_event_type_index_positions_when_updating.cs,streams_are_correct,The following statement contains a magic number: var updated = _a1b1.UpdateEventTypeIndexPosition(new TFPos(200' 50)' "a"' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_event_type_index_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_event_type_index_positions_when_updating.cs,streams_are_correct,The following statement contains a magic number: var updated = _a1b1.UpdateEventTypeIndexPosition(new TFPos(200' 50)' "a"' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_event_type_index_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_event_type_index_positions_when_updating.cs,streams_are_correct,The following statement contains a magic number: var updated = _a1b1.UpdateEventTypeIndexPosition(new TFPos(200' 50)' "a"' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_event_type_index_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_event_type_index_positions_when_updating.cs,streams_are_correct,The following statement contains a magic number: Assert.AreEqual(2' updated.Streams.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_stream_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_stream_positions_when_updating.cs,updated_position_is_correct,The following statement contains a magic number: var updated = _a1b1.UpdateStreamPosition("a"' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_stream_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_stream_positions_when_updating.cs,updated_position_is_correct,The following statement contains a magic number: Assert.AreEqual(2' updated.Streams["a"]);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_stream_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_stream_positions_when_updating.cs,other_stream_position_is_correct,The following statement contains a magic number: var updated = _a1b1.UpdateStreamPosition("a"' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_stream_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_stream_positions_when_updating.cs,streams_are_correct,The following statement contains a magic number: var updated = _a1b1.UpdateStreamPosition("a"' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.checkpoint_tag,checkpoint_tag_by_stream_positions_when_updating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\checkpoint_tag\checkpoint_tag_by_stream_positions_when_updating.cs,streams_are_correct,The following statement contains a magic number: Assert.AreEqual(2' updated.Streams.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.command_reader_response_reader_integration,when_command_reader_starts_before_response_reader_with_two_workers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\command_reader_response_reader_integration\when_command_reader_starts_before_response_reader.cs,Given,The following statement contains a magic number: _numberOfWorkers = 2;
Magic Number,EventStore.Projections.Core.Tests.Services.command_reader_response_reader_integration,when_command_reader_starts_before_response_reader_with_two_workers_one_starting_after_the_response_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\command_reader_response_reader_integration\when_command_reader_starts_before_response_reader.cs,Given,The following statement contains a magic number: _numberOfWorkers = 2;
Magic Number,EventStore.Projections.Core.Tests.Services.command_reader_response_reader_integration,when_response_reader_starts_before_command_reader_with_two_workers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\command_reader_response_reader_integration\when_response_reader_starts_before_command_reader.cs,Given,The following statement contains a magic number: _numberOfWorkers = 2;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.another_epoch,when_starting_an_existing_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\another_epoch\when_loading_an_existing_projection.cs,Given,The following statement contains a magic number: _version = new ProjectionVersion(1' 2' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.another_epoch,when_starting_an_existing_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\another_epoch\when_loading_an_existing_projection.cs,Given,The following statement contains a magic number: _version = new ProjectionVersion(1' 2' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,TestFixtureWithCoreProjectionCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\TestFixtureWithCoreProjectionCheckpointManager.cs,Given,The following statement contains a magic number: _checkpointHandledThreshold = 2;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,TestFixtureWithCoreProjectionCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\TestFixtureWithCoreProjectionCheckpointManager.cs,Given,The following statement contains a magic number: _checkpointUnhandledBytesThreshold = 5;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,TestFixtureWithCoreProjectionCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\TestFixtureWithCoreProjectionCheckpointManager.cs,Given,The following statement contains a magic number: _pendingEventsThreshold = 5;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,TestFixtureWithCoreProjectionCheckpointManager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\TestFixtureWithCoreProjectionCheckpointManager.cs,Given,The following statement contains a magic number: _maxWriteBatchLength = 5;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop.cs,Given,The following statement contains a magic number: this._checkpointHandledThreshold = 2;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop.cs,When,The following statement contains a magic number: _manager.Start(CheckpointTag.FromStreamPosition(0' "stream"' 10)' null);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop.cs,When,The following statement contains a magic number: _manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 11)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop.cs,When,The following statement contains a magic number: _manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 11)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop.cs,When,The following statement contains a magic number: _manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 12)' 77.8f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop.cs,When,The following statement contains a magic number: _manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 12)' 77.8f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop.cs,When,The following statement contains a magic number: _manager.CheckpointSuggested(CheckpointTag.FromStreamPosition(0' "stream"' 12)' 77.8f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop.cs,When,The following statement contains a magic number: _manager.CheckpointSuggested(CheckpointTag.FromStreamPosition(0' "stream"' 12)' 77.8f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_checkpoint_has_been_completed_and_requesting_checkpoint_to_stop.cs,two_checkpoints_are_completed,The following statement contains a magic number: Assert.AreEqual(2' _projection._checkpointCompletedMessages.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_core_projection_checkpoint_manager_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_core_projection_checkpoint_manager_has_been_created.cs,event_processed_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_core_projection_checkpoint_manager_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_core_projection_checkpoint_manager_has_been_created.cs,event_processed_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_core_projection_checkpoint_manager_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_core_projection_checkpoint_manager_has_been_created.cs,checkpoint_suggested_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.CheckpointSuggested(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_core_projection_checkpoint_manager_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_core_projection_checkpoint_manager_has_been_created.cs,checkpoint_suggested_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.CheckpointSuggested(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_core_projection_checkpoint_manager_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_core_projection_checkpoint_manager_has_been_created.cs,can_be_started,The following statement contains a magic number: _manager.Start(CheckpointTag.FromStreamPosition(0' "stream"' 10)' null);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_default_checkpoint_manager_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_default_checkpoint_manager_has_been_reinitialized.cs,Given,The following statement contains a magic number: _checkpointHandledThreshold = 2;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_default_checkpoint_manager_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_default_checkpoint_manager_has_been_reinitialized.cs,When,The following statement contains a magic number: _manager.Start(CheckpointTag.FromStreamPosition(0' "stream"' 10)' null);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_default_checkpoint_manager_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_default_checkpoint_manager_has_been_reinitialized.cs,When,The following statement contains a magic number: _manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 11)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_default_checkpoint_manager_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_default_checkpoint_manager_has_been_reinitialized.cs,When,The following statement contains a magic number: _manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 11)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_default_checkpoint_manager_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_default_checkpoint_manager_has_been_reinitialized.cs,When,The following statement contains a magic number: _manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 12)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_default_checkpoint_manager_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_default_checkpoint_manager_has_been_reinitialized.cs,When,The following statement contains a magic number: _manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 12)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_default_checkpoint_manager_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_default_checkpoint_manager_has_been_reinitialized.cs,event_processed_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_default_checkpoint_manager_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_default_checkpoint_manager_has_been_reinitialized.cs,event_processed_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_default_checkpoint_manager_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_default_checkpoint_manager_has_been_reinitialized.cs,checkpoint_suggested_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.CheckpointSuggested(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_default_checkpoint_manager_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_default_checkpoint_manager_has_been_reinitialized.cs,checkpoint_suggested_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.CheckpointSuggested(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_a_default_checkpoint_manager_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_a_default_checkpoint_manager_has_been_reinitialized.cs,can_be_started,The following statement contains a magic number: _manager.Start(CheckpointTag.FromStreamPosition(0' "stream"' 10)' null);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_beginning_to_load_state_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_beginning_to_load_state_the_core_projection_checkpoint_manager.cs,event_processed_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_beginning_to_load_state_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_beginning_to_load_state_the_core_projection_checkpoint_manager.cs,event_processed_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_beginning_to_load_state_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_beginning_to_load_state_the_core_projection_checkpoint_manager.cs,checkpoint_suggested_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.CheckpointSuggested(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_beginning_to_load_state_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_beginning_to_load_state_the_core_projection_checkpoint_manager.cs,checkpoint_suggested_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.CheckpointSuggested(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_beginning_to_load_state_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_beginning_to_load_state_the_core_projection_checkpoint_manager.cs,can_be_started,The following statement contains a magic number: _manager.Start(CheckpointTag.FromStreamPosition(0' "stream"' 10)' null);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_beginning_to_load_state_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_beginning_to_load_state_the_core_projection_checkpoint_manager.cs,cannot_be_started_from_incompatible_checkpoint_tag,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.Start(CheckpointTag.FromStreamPosition(0' "stream1"' 10)' null);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_multiple_event_processed_received_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_multiple_event_processed_received_the_core_projection_checkpoint_manager.cs,Given,The following statement contains a magic number: this._checkpointHandledThreshold = 2;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_multiple_event_processed_received_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_multiple_event_processed_received_the_core_projection_checkpoint_manager.cs,When,The following statement contains a magic number: _manager.Start(CheckpointTag.FromStreamPosition(0' "stream"' 10)' null);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_multiple_event_processed_received_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_multiple_event_processed_received_the_core_projection_checkpoint_manager.cs,When,The following statement contains a magic number: _manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 11)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_multiple_event_processed_received_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_multiple_event_processed_received_the_core_projection_checkpoint_manager.cs,When,The following statement contains a magic number: _manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 11)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_multiple_event_processed_received_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_multiple_event_processed_received_the_core_projection_checkpoint_manager.cs,When,The following statement contains a magic number: _manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 12)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_multiple_event_processed_received_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_multiple_event_processed_received_the_core_projection_checkpoint_manager.cs,When,The following statement contains a magic number: _manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 12)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_multiple_event_processed_received_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_multiple_event_processed_received_the_core_projection_checkpoint_manager.cs,accepts_event_processed,The following statement contains a magic number: _manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 13)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_multiple_event_processed_received_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_multiple_event_processed_received_the_core_projection_checkpoint_manager.cs,accepts_event_processed,The following statement contains a magic number: _manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 13)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_multiple_event_processed_received_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_multiple_event_processed_received_the_core_projection_checkpoint_manager.cs,event_processed_at_the_start_position_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_multiple_event_processed_received_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_multiple_event_processed_received_the_core_projection_checkpoint_manager.cs,event_processed_at_the_start_position_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_multiple_event_processed_received_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_multiple_event_processed_received_the_core_projection_checkpoint_manager.cs,accepts_checkpoint_suggested,The following statement contains a magic number: _manager.CheckpointSuggested(CheckpointTag.FromStreamPosition(0' "stream"' 13)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_multiple_event_processed_received_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_multiple_event_processed_received_the_core_projection_checkpoint_manager.cs,accepts_checkpoint_suggested,The following statement contains a magic number: _manager.CheckpointSuggested(CheckpointTag.FromStreamPosition(0' "stream"' 13)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_multiple_event_processed_received_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_multiple_event_processed_received_the_core_projection_checkpoint_manager.cs,checkpoint_suggested_at_the_start_position_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.CheckpointSuggested(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_multiple_event_processed_received_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_multiple_event_processed_received_the_core_projection_checkpoint_manager.cs,checkpoint_suggested_at_the_start_position_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.CheckpointSuggested(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_starting_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_starting_the_core_projection_checkpoint_manager.cs,When,The following statement contains a magic number: _manager.Start(CheckpointTag.FromStreamPosition(0' "stream"' 10)' null);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_starting_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_starting_the_core_projection_checkpoint_manager.cs,start_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.Start(CheckpointTag.FromStreamPosition(0' "stream"' 10)' null);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_starting_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_starting_the_core_projection_checkpoint_manager.cs,accepts_event_processed,The following statement contains a magic number: _manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 11)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_starting_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_starting_the_core_projection_checkpoint_manager.cs,accepts_event_processed,The following statement contains a magic number: _manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 11)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_starting_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_starting_the_core_projection_checkpoint_manager.cs,event_processed_at_the_start_position_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_starting_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_starting_the_core_projection_checkpoint_manager.cs,event_processed_at_the_start_position_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_manager.EventProcessed(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_starting_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_starting_the_core_projection_checkpoint_manager.cs,accepts_checkpoint_suggested,The following statement contains a magic number: _manager.CheckpointSuggested(CheckpointTag.FromStreamPosition(0' "stream"' 11)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_starting_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_starting_the_core_projection_checkpoint_manager.cs,accepts_checkpoint_suggested,The following statement contains a magic number: _manager.CheckpointSuggested(CheckpointTag.FromStreamPosition(0' "stream"' 11)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_starting_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_starting_the_core_projection_checkpoint_manager.cs,accepts_checkpoint_suggested_even_at_the_start_position_but_does_not_complete_it,The following statement contains a magic number: _manager.CheckpointSuggested(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager,when_starting_the_core_projection_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\when_starting_the_core_projection_checkpoint_manager.cs,accepts_checkpoint_suggested_even_at_the_start_position_but_does_not_complete_it,The following statement contains a magic number: _manager.CheckpointSuggested(CheckpointTag.FromStreamPosition(0' "stream"' 10)' 77.7f);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,when_prerecording_event_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\when_prerecording_event_order.cs,Given,The following statement contains a magic number: _event1 = new ResolvedEvent("pa"' 1' "a"' 1' true' new TFPos(200' 150)' Guid.NewGuid()' "test1"' true' "{}"'  				"{}"' "{$o:\"oa\"");
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,when_prerecording_event_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\when_prerecording_event_order.cs,Given,The following statement contains a magic number: _event1 = new ResolvedEvent("pa"' 1' "a"' 1' true' new TFPos(200' 150)' Guid.NewGuid()' "test1"' true' "{}"'  				"{}"' "{$o:\"oa\"");
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,when_prerecording_event_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\when_prerecording_event_order.cs,Given,The following statement contains a magic number: _event2 = new ResolvedEvent("pb"' 1' "b"' 1' true' new TFPos(300' 250)' Guid.NewGuid()' "test1"' true' "{}"'  				"{}"' "{$o:\"ob\"");
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,when_prerecording_event_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\when_prerecording_event_order.cs,Given,The following statement contains a magic number: _event2 = new ResolvedEvent("pb"' 1' "b"' 1' true' new TFPos(300' 250)' Guid.NewGuid()' "test1"' true' "{}"'  				"{}"' "{$o:\"ob\"");
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,when_prerecording_event_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\when_prerecording_event_order.cs,writes_correct_link_tos,The following statement contains a magic number: Assert.AreEqual(2' writeEvents.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,when_starting_and_enqueue_prerecorded_events_read_times_out,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\when_starting_and_enqueue_prerecorded_events_read_times_out.cs,When,The following statement contains a magic number: !_mre.Wait(10000)
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,when_starting_and_read_prerecorded_events_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\when_starting_and_read_prerecorded_events_successfully.cs,When,The following statement contains a magic number: !_mre.Wait(10000)
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,when_starting_and_read_prerecorded_events_times_out,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\when_starting_and_read_prerecorded_events_times_out.cs,When,The following statement contains a magic number: !_mre.Wait(10000)
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,when_starting_with_prerecorded_events_after_the_last_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\when_starting_with_prerecorded_events_after_the_last_checkpoint.cs,sends_commited_event_received_messages_in_correct_order,The following statement contains a magic number: Assert.AreEqual(3' messages.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,when_starting_with_prerecorded_events_after_the_last_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\when_starting_with_prerecorded_events_after_the_last_checkpoint.cs,sends_commited_event_received_messages_in_correct_order,The following statement contains a magic number: var message3 = messages[2];
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,when_starting_with_prerecorded_events_after_the_last_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\when_starting_with_prerecorded_events_after_the_last_checkpoint.cs,sends_correct_commited_event_received_messages,The following statement contains a magic number: Assert.AreEqual(3' messages.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,when_starting_with_prerecorded_events_after_the_last_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\when_starting_with_prerecorded_events_after_the_last_checkpoint.cs,sends_correct_commited_event_received_messages,The following statement contains a magic number: var message3 = messages[2];
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,when_starting_with_prerecorded_events_before_the_last_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\when_starting_with_prerecorded_events_before_the_last_checkpoint.cs,Given,The following statement contains a magic number: i < 1000
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,when_starting_with_prerecorded_events_in_past_epoch,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\when_starting_with_prerecorded_events_in_past_epoch.cs,Given,The following statement contains a magic number: _projectionVersion = new ProjectionVersion(1' 2' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,when_starting_with_prerecorded_events_in_past_epoch,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\when_starting_with_prerecorded_events_in_past_epoch.cs,Given,The following statement contains a magic number: _projectionVersion = new ProjectionVersion(1' 2' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,when_starting_with_prerecorded_events_in_past_epoch,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\when_starting_with_prerecorded_events_in_past_epoch.cs,sends_committed_event_received_messages_in_correct_order,The following statement contains a magic number: Assert.AreEqual(2' messages.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,with_multi_stream_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\with_multi_stream_checkpoint_manager.cs,TestFixtureSetUp,The following statement contains a magic number: _projectionVersion = new ProjectionVersion(3' 1' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,with_multi_stream_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\with_multi_stream_checkpoint_manager.cs,TestFixtureSetUp,The following statement contains a magic number: _projectionVersion = new ProjectionVersion(3' 1' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,with_multi_stream_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\with_multi_stream_checkpoint_manager.cs,TestFixtureSetUp,The following statement contains a magic number: _projectionConfig = new ProjectionConfig(SystemAccount.Principal' 10' 1000' 1000' 10' true' true' true'  				false'  				false' false' 5000' 10);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,with_multi_stream_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\with_multi_stream_checkpoint_manager.cs,TestFixtureSetUp,The following statement contains a magic number: _projectionConfig = new ProjectionConfig(SystemAccount.Principal' 10' 1000' 1000' 10' true' true' true'  				false'  				false' false' 5000' 10);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,with_multi_stream_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\with_multi_stream_checkpoint_manager.cs,TestFixtureSetUp,The following statement contains a magic number: _projectionConfig = new ProjectionConfig(SystemAccount.Principal' 10' 1000' 1000' 10' true' true' true'  				false'  				false' false' 5000' 10);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,with_multi_stream_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\with_multi_stream_checkpoint_manager.cs,TestFixtureSetUp,The following statement contains a magic number: _projectionConfig = new ProjectionConfig(SystemAccount.Principal' 10' 1000' 1000' 10' true' true' true'  				false'  				false' false' 5000' 10);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,with_multi_stream_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\with_multi_stream_checkpoint_manager.cs,TestFixtureSetUp,The following statement contains a magic number: _projectionConfig = new ProjectionConfig(SystemAccount.Principal' 10' 1000' 1000' 10' true' true' true'  				false'  				false' false' 5000' 10);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,with_multi_stream_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\with_multi_stream_checkpoint_manager.cs,TestFixtureSetUp,The following statement contains a magic number: _projectionConfig = new ProjectionConfig(SystemAccount.Principal' 10' 1000' 1000' 10' true' true' true'  				false'  				false' false' 5000' 10);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,with_multi_stream_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\with_multi_stream_checkpoint_manager.cs,TestFixtureSetUp,The following statement contains a magic number: _positionTagger = new MultiStreamPositionTagger(3' _streams);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,with_multi_stream_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\with_multi_stream_checkpoint_manager.cs,TestFixtureSetUp,The following statement contains a magic number: _positionTagger.AdjustTag(CheckpointTag.FromStreamPositions(3'  				new Dictionary<string' long> {{"a"' 0}' {"b"' 0}' {"c"' 0}}));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,with_multi_stream_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\with_multi_stream_checkpoint_manager.cs,ReadOrderStream,The following statement contains a magic number: var checkpoint =  					CheckpointTag.FromStreamPositions(0' new Dictionary<string' long> {{"a"' 5}' {"b"' 5}' {"c"' 5}});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,with_multi_stream_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\with_multi_stream_checkpoint_manager.cs,ReadOrderStream,The following statement contains a magic number: var checkpoint =  					CheckpointTag.FromStreamPositions(0' new Dictionary<string' long> {{"a"' 5}' {"b"' 5}' {"c"' 5}});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,with_multi_stream_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\with_multi_stream_checkpoint_manager.cs,ReadOrderStream,The following statement contains a magic number: var checkpoint =  					CheckpointTag.FromStreamPositions(0' new Dictionary<string' long> {{"a"' 5}' {"b"' 5}' {"c"' 5}});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,with_multi_stream_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\with_multi_stream_checkpoint_manager.cs,ReadOrderStream,The following statement contains a magic number: events = IODispatcherTestHelpers.CreateResolvedEvent(message.EventStreamId' "$>"'  					"10@a"' checkpoint.ToJsonString(new ProjectionVersion(3' 0' 1)));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,with_multi_stream_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\with_multi_stream_checkpoint_manager.cs,ReadOrderStream,The following statement contains a magic number: return new ClientMessage.ReadStreamEventsBackwardCompleted(message.CorrelationId' message.EventStreamId'  				message.FromEventNumber'  				message.MaxCount' ReadStreamResult.Success' events' null' true' ""'  				message.FromEventNumber - events.Length' message.FromEventNumber' true' 10000);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream,with_multi_stream_checkpoint_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_manager\multi_stream\with_multi_stream_checkpoint_manager.cs,ReadTestStream,The following statement contains a magic number: return new ClientMessage.ReadStreamEventsBackwardCompleted(message.CorrelationId' message.EventStreamId'  				message.FromEventNumber'  				message.MaxCount' ReadStreamResult.Success' events' null' true' ""' message.FromEventNumber - 1'  				message.FromEventNumber' true' 10000);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_checkpoint_is_suggested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,Given,The following statement contains a magic number: _checkpointHandledThreshold = 10;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_checkpoint_is_suggested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,Given,The following statement contains a magic number: _checkpointUnhandledBytesThreshold = 41;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_checkpoint_is_suggested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,When,The following statement contains a magic number: _bus.Publish(  					new EventReaderSubscriptionMessage.CheckpointSuggested(  						_subscriptionId'  						CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(140' 130)'  							new Dictionary<string' long> {{"non-existing"' -1}})' 55.5f' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_checkpoint_is_suggested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,When,The following statement contains a magic number: _bus.Publish(  					new EventReaderSubscriptionMessage.CheckpointSuggested(  						_subscriptionId'  						CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(140' 130)'  							new Dictionary<string' long> {{"non-existing"' -1}})' 55.5f' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_checkpoint_is_suggested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,When,The following statement contains a magic number: _bus.Publish(  					new EventReaderSubscriptionMessage.CheckpointSuggested(  						_subscriptionId'  						CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(140' 130)'  							new Dictionary<string' long> {{"non-existing"' -1}})' 55.5f' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_second_checkpoint_is_suggested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,Given,The following statement contains a magic number: _checkpointHandledThreshold = 10;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_second_checkpoint_is_suggested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,Given,The following statement contains a magic number: _checkpointUnhandledBytesThreshold = 41;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_second_checkpoint_is_suggested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,When,The following statement contains a magic number: _bus.Publish(  					new EventReaderSubscriptionMessage.CheckpointSuggested(  						_subscriptionId'  						CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(140' 130)'  							new Dictionary<string' long> {{"non-existing"' -1}})' 55.5f' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_second_checkpoint_is_suggested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,When,The following statement contains a magic number: _bus.Publish(  					new EventReaderSubscriptionMessage.CheckpointSuggested(  						_subscriptionId'  						CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(140' 130)'  							new Dictionary<string' long> {{"non-existing"' -1}})' 55.5f' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_second_checkpoint_is_suggested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,When,The following statement contains a magic number: _bus.Publish(  					new EventReaderSubscriptionMessage.CheckpointSuggested(  						_subscriptionId'  						CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(140' 130)'  							new Dictionary<string' long> {{"non-existing"' -1}})' 55.5f' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_second_checkpoint_is_suggested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,When,The following statement contains a magic number: _bus.Publish(  					new EventReaderSubscriptionMessage.CheckpointSuggested(  						_subscriptionId'  						CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(160' 150)'  							new Dictionary<string' long> {{"non-existing"' -1}})' 55.6f' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_second_checkpoint_is_suggested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,When,The following statement contains a magic number: _bus.Publish(  					new EventReaderSubscriptionMessage.CheckpointSuggested(  						_subscriptionId'  						CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(160' 150)'  							new Dictionary<string' long> {{"non-existing"' -1}})' 55.6f' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_second_checkpoint_is_suggested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,When,The following statement contains a magic number: _bus.Publish(  					new EventReaderSubscriptionMessage.CheckpointSuggested(  						_subscriptionId'  						CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(160' 150)'  							new Dictionary<string' long> {{"non-existing"' -1}})' 55.6f' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_second_checkpoint_is_suggested_and_write_succeeds,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,Given,The following statement contains a magic number: _checkpointHandledThreshold = 10;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_second_checkpoint_is_suggested_and_write_succeeds,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,Given,The following statement contains a magic number: _checkpointUnhandledBytesThreshold = 41;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_second_checkpoint_is_suggested_and_write_succeeds,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,When,The following statement contains a magic number: _bus.Publish(  					new EventReaderSubscriptionMessage.CheckpointSuggested(  						_subscriptionId'  						CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(140' 130)'  							new Dictionary<string' long> {{"non-existing"' -1}})' 55.5f' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_second_checkpoint_is_suggested_and_write_succeeds,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,When,The following statement contains a magic number: _bus.Publish(  					new EventReaderSubscriptionMessage.CheckpointSuggested(  						_subscriptionId'  						CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(140' 130)'  							new Dictionary<string' long> {{"non-existing"' -1}})' 55.5f' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_second_checkpoint_is_suggested_and_write_succeeds,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,When,The following statement contains a magic number: _bus.Publish(  					new EventReaderSubscriptionMessage.CheckpointSuggested(  						_subscriptionId'  						CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(140' 130)'  							new Dictionary<string' long> {{"non-existing"' -1}})' 55.5f' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_second_checkpoint_is_suggested_and_write_succeeds,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,When,The following statement contains a magic number: _bus.Publish(  					new EventReaderSubscriptionMessage.CheckpointSuggested(  						_subscriptionId'  						CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(160' 150)'  							new Dictionary<string' long> {{"non-existing"' -1}})' 55.6f' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_second_checkpoint_is_suggested_and_write_succeeds,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,When,The following statement contains a magic number: _bus.Publish(  					new EventReaderSubscriptionMessage.CheckpointSuggested(  						_subscriptionId'  						CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(160' 150)'  							new Dictionary<string' long> {{"non-existing"' -1}})' 55.6f' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_second_checkpoint_is_suggested_and_write_succeeds,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,When,The following statement contains a magic number: _bus.Publish(  					new EventReaderSubscriptionMessage.CheckpointSuggested(  						_subscriptionId'  						CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(160' 150)'  							new Dictionary<string' long> {{"non-existing"' -1}})' 55.6f' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_second_checkpoint_is_suggested_and_write_succeeds,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\checkpoint_suggested.cs,a_projection_checkpoint_event_is_published,The following statement contains a magic number: Assert.AreEqual(  					2'  					_writeEventHandler.HandledMessages.Count(v =>  						v.Events.Any(e => e.EventType == ProjectionEventTypes.ProjectionCheckpoint)));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,TestFixtureWithCoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\TestFixtureWithCoreProjection.cs,GivenMaxWriteBatchLength,The following statement contains a magic number: return 250;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,TestFixtureWithCoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\TestFixtureWithCoreProjection.cs,GivenPendingEventsThreshold,The following statement contains a magic number: return 1000;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,TestFixtureWithCoreProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\TestFixtureWithCoreProjection.cs,GivenCheckpointAfterMs,The following statement contains a magic number: return 10000;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_creating_a_new_partitiion_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_creating_a_new_partitiion_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' -1' false' new TFPos(120' 110)' _eventId' "handle_this_type"'  						false' "data"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_creating_a_new_partitiion_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_creating_a_new_partitiion_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' -1' false' new TFPos(120' 110)' _eventId' "handle_this_type"'  						false' "data"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_creating_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_creating_a_projection.cs,a_checkpoint_threshold_less_tan_checkpoint_handled_threshold_throws_argument_out_of_range_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => {  				IProjectionStateHandler projectionStateHandler = new FakeProjectionStateHandler();  				var version = new ProjectionVersion(1' 0' 0);  				var projectionConfig = new ProjectionConfig(null' 10' 5' 1000' 250' true' true' false' false' false'  					true' 10000' 1);  				new ContinuousProjectionProcessingStrategy(  					"projection"'  					version'  					projectionStateHandler'  					projectionConfig'  					projectionStateHandler.GetSourceDefinition()'  					null'  					_subscriptionDispatcher).Create(  					Guid.NewGuid()'  					new FakePublisher()'  					Guid.NewGuid()'  					SystemAccount.Principal'  					new FakePublisher()'  					_ioDispatcher'  					_subscriptionDispatcher'  					new RealTimeProvider());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_creating_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_creating_a_projection.cs,a_checkpoint_threshold_less_tan_checkpoint_handled_threshold_throws_argument_out_of_range_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => {  				IProjectionStateHandler projectionStateHandler = new FakeProjectionStateHandler();  				var version = new ProjectionVersion(1' 0' 0);  				var projectionConfig = new ProjectionConfig(null' 10' 5' 1000' 250' true' true' false' false' false'  					true' 10000' 1);  				new ContinuousProjectionProcessingStrategy(  					"projection"'  					version'  					projectionStateHandler'  					projectionConfig'  					projectionStateHandler.GetSourceDefinition()'  					null'  					_subscriptionDispatcher).Create(  					Guid.NewGuid()'  					new FakePublisher()'  					Guid.NewGuid()'  					SystemAccount.Principal'  					new FakePublisher()'  					_ioDispatcher'  					_subscriptionDispatcher'  					new RealTimeProvider());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_creating_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_creating_a_projection.cs,a_checkpoint_threshold_less_tan_checkpoint_handled_threshold_throws_argument_out_of_range_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => {  				IProjectionStateHandler projectionStateHandler = new FakeProjectionStateHandler();  				var version = new ProjectionVersion(1' 0' 0);  				var projectionConfig = new ProjectionConfig(null' 10' 5' 1000' 250' true' true' false' false' false'  					true' 10000' 1);  				new ContinuousProjectionProcessingStrategy(  					"projection"'  					version'  					projectionStateHandler'  					projectionConfig'  					projectionStateHandler.GetSourceDefinition()'  					null'  					_subscriptionDispatcher).Create(  					Guid.NewGuid()'  					new FakePublisher()'  					Guid.NewGuid()'  					SystemAccount.Principal'  					new FakePublisher()'  					_ioDispatcher'  					_subscriptionDispatcher'  					new RealTimeProvider());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_creating_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_creating_a_projection.cs,a_checkpoint_threshold_less_tan_checkpoint_handled_threshold_throws_argument_out_of_range_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => {  				IProjectionStateHandler projectionStateHandler = new FakeProjectionStateHandler();  				var version = new ProjectionVersion(1' 0' 0);  				var projectionConfig = new ProjectionConfig(null' 10' 5' 1000' 250' true' true' false' false' false'  					true' 10000' 1);  				new ContinuousProjectionProcessingStrategy(  					"projection"'  					version'  					projectionStateHandler'  					projectionConfig'  					projectionStateHandler.GetSourceDefinition()'  					null'  					_subscriptionDispatcher).Create(  					Guid.NewGuid()'  					new FakePublisher()'  					Guid.NewGuid()'  					SystemAccount.Principal'  					new FakePublisher()'  					_ioDispatcher'  					_subscriptionDispatcher'  					new RealTimeProvider());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_creating_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_creating_a_projection.cs,a_checkpoint_threshold_less_tan_checkpoint_handled_threshold_throws_argument_out_of_range_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => {  				IProjectionStateHandler projectionStateHandler = new FakeProjectionStateHandler();  				var version = new ProjectionVersion(1' 0' 0);  				var projectionConfig = new ProjectionConfig(null' 10' 5' 1000' 250' true' true' false' false' false'  					true' 10000' 1);  				new ContinuousProjectionProcessingStrategy(  					"projection"'  					version'  					projectionStateHandler'  					projectionConfig'  					projectionStateHandler.GetSourceDefinition()'  					null'  					_subscriptionDispatcher).Create(  					Guid.NewGuid()'  					new FakePublisher()'  					Guid.NewGuid()'  					SystemAccount.Principal'  					new FakePublisher()'  					_ioDispatcher'  					_subscriptionDispatcher'  					new RealTimeProvider());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_creating_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_creating_a_projection.cs,a_negative_checkpoint_handled_interval_throws_argument_out_of_range_exception,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => {  				IProjectionStateHandler projectionStateHandler = new FakeProjectionStateHandler();  				var version = new ProjectionVersion(1' 0' 0);  				var projectionConfig = new ProjectionConfig(null' -1' 10' 1000' 250' true' true' false' false' false'  					true' 10000' 1);  				new ContinuousProjectionProcessingStrategy(  					"projection"'  					version'  					projectionStateHandler'  					projectionConfig'  					projectionStateHandler.GetSourceDefinition()'  					null'  					_subscriptionDispatcher).Create(  					Guid.NewGuid()'  					new FakePublisher()'  					Guid.NewGuid()'  					SystemAccount.Principal'  					new FakePublisher()'  					_ioDispatcher'  					_subscriptionDispatcher'  					new RealTimeProvider());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_creating_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_creating_a_projection.cs,a_negative_checkpoint_handled_interval_throws_argument_out_of_range_exception,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => {  				IProjectionStateHandler projectionStateHandler = new FakeProjectionStateHandler();  				var version = new ProjectionVersion(1' 0' 0);  				var projectionConfig = new ProjectionConfig(null' -1' 10' 1000' 250' true' true' false' false' false'  					true' 10000' 1);  				new ContinuousProjectionProcessingStrategy(  					"projection"'  					version'  					projectionStateHandler'  					projectionConfig'  					projectionStateHandler.GetSourceDefinition()'  					null'  					_subscriptionDispatcher).Create(  					Guid.NewGuid()'  					new FakePublisher()'  					Guid.NewGuid()'  					SystemAccount.Principal'  					new FakePublisher()'  					_ioDispatcher'  					_subscriptionDispatcher'  					new RealTimeProvider());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_creating_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_creating_a_projection.cs,a_negative_checkpoint_handled_interval_throws_argument_out_of_range_exception,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => {  				IProjectionStateHandler projectionStateHandler = new FakeProjectionStateHandler();  				var version = new ProjectionVersion(1' 0' 0);  				var projectionConfig = new ProjectionConfig(null' -1' 10' 1000' 250' true' true' false' false' false'  					true' 10000' 1);  				new ContinuousProjectionProcessingStrategy(  					"projection"'  					version'  					projectionStateHandler'  					projectionConfig'  					projectionStateHandler.GetSourceDefinition()'  					null'  					_subscriptionDispatcher).Create(  					Guid.NewGuid()'  					new FakePublisher()'  					Guid.NewGuid()'  					SystemAccount.Principal'  					new FakePublisher()'  					_ioDispatcher'  					_subscriptionDispatcher'  					new RealTimeProvider());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_creating_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_creating_a_projection.cs,a_negative_checkpoint_handled_interval_throws_argument_out_of_range_exception,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => {  				IProjectionStateHandler projectionStateHandler = new FakeProjectionStateHandler();  				var version = new ProjectionVersion(1' 0' 0);  				var projectionConfig = new ProjectionConfig(null' -1' 10' 1000' 250' true' true' false' false' false'  					true' 10000' 1);  				new ContinuousProjectionProcessingStrategy(  					"projection"'  					version'  					projectionStateHandler'  					projectionConfig'  					projectionStateHandler.GetSourceDefinition()'  					null'  					_subscriptionDispatcher).Create(  					Guid.NewGuid()'  					new FakePublisher()'  					Guid.NewGuid()'  					SystemAccount.Principal'  					new FakePublisher()'  					_ioDispatcher'  					_subscriptionDispatcher'  					new RealTimeProvider());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_creating_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_creating_a_projection.cs,a_zero_checkpoint_handled_threshold_throws_argument_out_of_range_exception,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => {  				IProjectionStateHandler projectionStateHandler = new FakeProjectionStateHandler();  				var version = new ProjectionVersion(1' 0' 0);  				var projectionConfig = new ProjectionConfig(null' 0' 10' 1000' 250' true' true' false' false' false'  					true' 10000' 1);  				new ContinuousProjectionProcessingStrategy(  					"projection"'  					version'  					projectionStateHandler'  					projectionConfig'  					projectionStateHandler.GetSourceDefinition()'  					null'  					_subscriptionDispatcher).Create(  					Guid.NewGuid()'  					new FakePublisher()'  					Guid.NewGuid()'  					SystemAccount.Principal'  					new FakePublisher()'  					_ioDispatcher'  					_subscriptionDispatcher'  					new RealTimeProvider());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_creating_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_creating_a_projection.cs,a_zero_checkpoint_handled_threshold_throws_argument_out_of_range_exception,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => {  				IProjectionStateHandler projectionStateHandler = new FakeProjectionStateHandler();  				var version = new ProjectionVersion(1' 0' 0);  				var projectionConfig = new ProjectionConfig(null' 0' 10' 1000' 250' true' true' false' false' false'  					true' 10000' 1);  				new ContinuousProjectionProcessingStrategy(  					"projection"'  					version'  					projectionStateHandler'  					projectionConfig'  					projectionStateHandler.GetSourceDefinition()'  					null'  					_subscriptionDispatcher).Create(  					Guid.NewGuid()'  					new FakePublisher()'  					Guid.NewGuid()'  					SystemAccount.Principal'  					new FakePublisher()'  					_ioDispatcher'  					_subscriptionDispatcher'  					new RealTimeProvider());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_creating_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_creating_a_projection.cs,a_zero_checkpoint_handled_threshold_throws_argument_out_of_range_exception,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => {  				IProjectionStateHandler projectionStateHandler = new FakeProjectionStateHandler();  				var version = new ProjectionVersion(1' 0' 0);  				var projectionConfig = new ProjectionConfig(null' 0' 10' 1000' 250' true' true' false' false' false'  					true' 10000' 1);  				new ContinuousProjectionProcessingStrategy(  					"projection"'  					version'  					projectionStateHandler'  					projectionConfig'  					projectionStateHandler.GetSourceDefinition()'  					null'  					_subscriptionDispatcher).Create(  					Guid.NewGuid()'  					new FakePublisher()'  					Guid.NewGuid()'  					SystemAccount.Principal'  					new FakePublisher()'  					_ioDispatcher'  					_subscriptionDispatcher'  					new RealTimeProvider());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_creating_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_creating_a_projection.cs,a_zero_checkpoint_handled_threshold_throws_argument_out_of_range_exception,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => {  				IProjectionStateHandler projectionStateHandler = new FakeProjectionStateHandler();  				var version = new ProjectionVersion(1' 0' 0);  				var projectionConfig = new ProjectionConfig(null' 0' 10' 1000' 250' true' true' false' false' false'  					true' 10000' 1);  				new ContinuousProjectionProcessingStrategy(  					"projection"'  					version'  					projectionStateHandler'  					projectionConfig'  					projectionStateHandler.GetSourceDefinition()'  					null'  					_subscriptionDispatcher).Create(  					Guid.NewGuid()'  					new FakePublisher()'  					Guid.NewGuid()'  					SystemAccount.Principal'  					new FakePublisher()'  					_ioDispatcher'  					_subscriptionDispatcher'  					new RealTimeProvider());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_killing_a_projection_and_an_event_is_received,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_killing_a_projection_and_an_event_is_received.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)' Guid.NewGuid()'  						"handle_this_type"' false' "data1"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_killing_a_projection_and_an_event_is_received,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_killing_a_projection_and_an_event_is_received.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)' Guid.NewGuid()'  						"handle_this_type"' false' "data1"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_killing_a_projection_and_an_event_is_received,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_killing_a_projection_and_an_event_is_received.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(140' 130)'  						_lastEventIdBeforeKill'  						"handle_this_type"' false' "data2"' "metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_killing_a_projection_and_an_event_is_received,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_killing_a_projection_and_an_event_is_received.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(140' 130)'  						_lastEventIdBeforeKill'  						"handle_this_type"' false' "data2"' "metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_killing_a_projection_and_an_event_is_received,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_killing_a_projection_and_an_event_is_received.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(160' 150)' Guid.NewGuid()'  						"handle_this_type"' false' "data3"' "metadata")' _subscriptionId' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_killing_a_projection_and_an_event_is_received,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_killing_a_projection_and_an_event_is_received.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(160' 150)' Guid.NewGuid()'  						"handle_this_type"' false' "data3"' "metadata")' _subscriptionId' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_killing_a_projection_and_an_event_is_received,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_killing_a_projection_and_an_event_is_received.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(160' 150)' Guid.NewGuid()'  						"handle_this_type"' false' "data3"' "metadata")' _subscriptionId' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_killing_a_projection_and_an_event_is_received,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_killing_a_projection_and_an_event_is_received.cs,event_received_after_kill_is_not_processed,The following statement contains a magic number: Assert.AreEqual(2' _stateHandler._eventsProcessed);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_a_committed_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_a_committed_event_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)' _eventId'  						"handle_this_type"' false' "data"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_a_committed_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_a_committed_event_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)' _eventId'  						"handle_this_type"' false' "data"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_a_committed_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_a_committed_event_the_projection_should.cs,update_state_snapshot_at_correct_position,The following statement contains a magic number: Assert.AreEqual(120' metedata.Tag.CommitPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_a_committed_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_a_committed_event_the_projection_should.cs,update_state_snapshot_at_correct_position,The following statement contains a magic number: Assert.AreEqual(110' metedata.Tag.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_a_committed_event_the_projection_with_partitioned_state_by_custom_rule_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_a_committed_event_the_projection_with_partitioned_state_by_custom_rule_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' -1' false' new TFPos(120' 110)' _eventId'  						"handle_this_type"' false' "data"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_a_committed_event_the_projection_with_partitioned_state_by_custom_rule_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_a_committed_event_the_projection_with_partitioned_state_by_custom_rule_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' -1' false' new TFPos(120' 110)' _eventId'  						"handle_this_type"' false' "data"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_a_committed_event_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_a_committed_event_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' -1' false' new TFPos(120' 110)' _eventId'  						"handle_this_type"' false' "data"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_a_committed_event_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_a_committed_event_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' -1' false' new TFPos(120' 110)' _eventId'  						"handle_this_type"' false' "data"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_a_committed_event_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_a_committed_event_the_projection_with_partitioned_state_should.cs,update_state_snapshot_at_correct_position,The following statement contains a magic number: Assert.AreEqual(120' metedata.Tag.CommitPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_a_committed_event_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_a_committed_event_the_projection_with_partitioned_state_should.cs,update_state_snapshot_at_correct_position,The following statement contains a magic number: Assert.AreEqual(110' metedata.Tag.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_without_when,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_without_when.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 1' "account-01"' 1' false' new TFPos(120' 110)' _eventId' "handle_this_type"'  						false' "data1"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_without_when,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_without_when.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 1' "account-01"' 1' false' new TFPos(120' 110)' _eventId' "handle_this_type"'  						false' "data1"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_without_when,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_without_when.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-02"' 2' "account-02"' 2' false' new TFPos(140' 130)' _eventId' "handle_this_type"'  						false' "data2"' "metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_without_when,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_without_when.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-02"' 2' "account-02"' 2' false' new TFPos(140' 130)' _eventId' "handle_this_type"'  						false' "data2"' "metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_without_when,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_without_when.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-02"' 2' "account-02"' 2' false' new TFPos(140' 130)' _eventId' "handle_this_type"'  						false' "data2"' "metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_without_when,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_without_when.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-02"' 2' "account-02"' 2' false' new TFPos(140' 130)' _eventId' "handle_this_type"'  						false' "data2"' "metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_without_when,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_without_when.cs,update_state_snapshots_are_written_to_the_correct_stream,The following statement contains a magic number: Assert.AreEqual(2' writeEvents.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_handling_event_does_not_change_state_the_projection_without_when,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_without_when.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 1' "account-01"' 1' false' new TFPos(120' 110)' _eventId' "handle_this_type"'  						false' "data1"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_handling_event_does_not_change_state_the_projection_without_when,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_without_when.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 1' "account-01"' 1' false' new TFPos(120' 110)' _eventId' "handle_this_type"'  						false' "data1"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_handling_event_does_not_change_state_the_projection_without_when,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_without_when.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 2' "account-01"' 2' false' new TFPos(140' 130)' _eventId' "handle_this_type"'  						false' "data1"' "metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_handling_event_does_not_change_state_the_projection_without_when,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_without_when.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 2' "account-01"' 2' false' new TFPos(140' 130)' _eventId' "handle_this_type"'  						false' "data1"' "metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_handling_event_does_not_change_state_the_projection_without_when,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_without_when.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 2' "account-01"' 2' false' new TFPos(140' 130)' _eventId' "handle_this_type"'  						false' "data1"' "metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_handling_event_does_not_change_state_the_projection_without_when,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_without_when.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 2' "account-01"' 2' false' new TFPos(140' 130)' _eventId' "handle_this_type"'  						false' "data1"' "metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_handling_event_does_not_change_state_the_projection_without_when,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_without_when.cs,result_events_are_produced_for_each_received_event,The following statement contains a magic number: Assert.AreEqual(2' writeEvents.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 1' "account-01"' 1' false' new TFPos(120' 110)' _eventId'  						"handle_this_type"' false' "data1"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 1' "account-01"' 1' false' new TFPos(120' 110)' _eventId'  						"handle_this_type"' false' "data1"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-02"' 2' "account-02"' 2' false' new TFPos(140' 130)' _eventId'  						"handle_this_type"' false' "data2"' "metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-02"' 2' "account-02"' 2' false' new TFPos(140' 130)' _eventId'  						"handle_this_type"' false' "data2"' "metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-02"' 2' "account-02"' 2' false' new TFPos(140' 130)' _eventId'  						"handle_this_type"' false' "data2"' "metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-02"' 2' "account-02"' 2' false' new TFPos(140' 130)' _eventId'  						"handle_this_type"' false' "data2"' "metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 2' "account-01"' 2' false' new TFPos(160' 150)' _eventId' "append"' false'  						"$"' "metadata")'  					_subscriptionId' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 2' "account-01"' 2' false' new TFPos(160' 150)' _eventId' "append"' false'  						"$"' "metadata")'  					_subscriptionId' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 2' "account-01"' 2' false' new TFPos(160' 150)' _eventId' "append"' false'  						"$"' "metadata")'  					_subscriptionId' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 2' "account-01"' 2' false' new TFPos(160' 150)' _eventId' "append"' false'  						"$"' "metadata")'  					_subscriptionId' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 2' "account-01"' 2' false' new TFPos(160' 150)' _eventId' "append"' false'  						"$"' "metadata")'  					_subscriptionId' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-02"' 3' "account-02"' 3' false' new TFPos(180' 170)' _eventId' "append"' false'  						"$"' "metadata")'  					_subscriptionId' 3));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-02"' 3' "account-02"' 3' false' new TFPos(180' 170)' _eventId' "append"' false'  						"$"' "metadata")'  					_subscriptionId' 3));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-02"' 3' "account-02"' 3' false' new TFPos(180' 170)' _eventId' "append"' false'  						"$"' "metadata")'  					_subscriptionId' 3));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-02"' 3' "account-02"' 3' false' new TFPos(180' 170)' _eventId' "append"' false'  						"$"' "metadata")'  					_subscriptionId' 3));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-02"' 3' "account-02"' 3' false' new TFPos(180' 170)' _eventId' "append"' false'  						"$"' "metadata")'  					_subscriptionId' 3));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,update_state_snapshots_are_written_to_the_correct_stream,The following statement contains a magic number: Assert.AreEqual(4' writeEvents.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,update_state_snapshots_are_written_to_the_correct_stream,The following statement contains a magic number: Assert.AreEqual("$projections-projection-account-01-result"' writeEvents[2].EventStreamId);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,update_state_snapshots_are_written_to_the_correct_stream,The following statement contains a magic number: Assert.AreEqual("$projections-projection-account-02-result"' writeEvents[3].EventStreamId);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,update_state_snapshots_are_correct,The following statement contains a magic number: Assert.AreEqual(4' writeEvents.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,update_state_snapshots_are_correct,The following statement contains a magic number: Assert.AreEqual("data1$"' Helper.UTF8NoBom.GetString(writeEvents[2].Events[0].Data));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,update_state_snapshots_are_correct,The following statement contains a magic number: Assert.AreEqual("data2$"' Helper.UTF8NoBom.GetString(writeEvents[3].Events[0].Data));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_events_the_projection_with_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_events_the_projection_with_partitioned_state_should.cs,register_new_partition_state_stream_only_once,The following statement contains a magic number: Assert.AreEqual(2' writes.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_event_the_projection_with_existing_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_event_the_projection_with_existing_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 2' "account-01"' 2' false' new TFPos(120' 110)' _eventId'  						"handle_this_type"' false' "data1"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_event_the_projection_with_existing_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_event_the_projection_with_existing_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 2' "account-01"' 2' false' new TFPos(120' 110)' _eventId'  						"handle_this_type"' false' "data1"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_event_the_projection_with_existing_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_event_the_projection_with_existing_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 2' "account-01"' 2' false' new TFPos(120' 110)' _eventId'  						"handle_this_type"' false' "data1"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_event_the_projection_with_existing_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_event_the_projection_with_existing_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 2' "account-01"' 2' false' new TFPos(120' 110)' _eventId'  						"handle_this_type"' false' "data1"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_event_the_projection_with_existing_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_event_the_projection_with_existing_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 3' "account-01"' 3' false' new TFPos(160' 150)' _eventId' "append"' false'  						"$"' "metadata")'  					_subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_event_the_projection_with_existing_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_event_the_projection_with_existing_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 3' "account-01"' 3' false' new TFPos(160' 150)' _eventId' "append"' false'  						"$"' "metadata")'  					_subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_event_the_projection_with_existing_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_event_the_projection_with_existing_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 3' "account-01"' 3' false' new TFPos(160' 150)' _eventId' "append"' false'  						"$"' "metadata")'  					_subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_receiving_committed_event_the_projection_with_existing_partitioned_state_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_receiving_committed_event_the_projection_with_existing_partitioned_state_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 3' "account-01"' 3' false' new TFPos(160' 150)' _eventId' "append"' false'  						"$"' "metadata")'  					_subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_an_existing_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_an_existing_projection.cs,should_subscribe_from_the_last_known_checkpoint_position,The following statement contains a magic number: Assert.AreEqual(100' _subscribeProjectionHandler.HandledMessages[0].FromPosition.Position.CommitPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_an_existing_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_an_existing_projection.cs,should_subscribe_from_the_last_known_checkpoint_position,The following statement contains a magic number: Assert.AreEqual(50' _subscribeProjectionHandler.HandledMessages[0].FromPosition.Position.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_an_existing_projection_and_an_event_is_received,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_an_existing_projection_and_an_event_is_received.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)' eventId'  						"append"' false' "data"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_an_existing_projection_and_an_event_is_received,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_an_existing_projection_and_an_event_is_received.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)' eventId'  						"append"' false' "data"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_an_existing_projection_missing_last_emitted_event_and_state_snapshot,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_an_existing_projection_missing_last_emitted_event_and_state_snapshot.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						_causedByEventId' "emit12_type"' false' "data"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_an_existing_projection_missing_last_emitted_event_and_state_snapshot,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_an_existing_projection_missing_last_emitted_event_and_state_snapshot.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						_causedByEventId' "emit12_type"' false' "data"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_an_existing_projection_missing_last_state_snapshot,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_an_existing_projection_missing_last_state_snapshot.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						_causedByEventId' "emit1_type"' false' "data"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_an_existing_projection_missing_last_state_snapshot,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_an_existing_projection_missing_last_state_snapshot.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						_causedByEventId' "emit1_type"' false' "data"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_an_existing_projection_missing_last_state_snapshot,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_an_existing_projection_missing_last_state_snapshot.cs,should_not_emit_events_but_write_the_new_state_snapshot,The following statement contains a magic number: Assert.AreEqual(2' _writeEventHandler.HandledMessages.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_a_new_projection_and_an_event_is_received,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_a_new_projection_and_an_event_is_received.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)' eventId'  						"handle_this_type"' false' "data"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_a_new_projection_and_an_event_is_received,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_a_new_projection_and_an_event_is_received.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)' eventId'  						"handle_this_type"' false' "data"' "metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_a_projection.cs,setup,The following statement contains a magic number: _projectionConfig =  				new ProjectionConfig(null' 5' 10' 1000' 250' true' true' false' false' false' true' 10000' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_a_projection.cs,setup,The following statement contains a magic number: _projectionConfig =  				new ProjectionConfig(null' 5' 10' 1000' 250' true' true' false' false' false' true' 10000' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_a_projection.cs,setup,The following statement contains a magic number: _projectionConfig =  				new ProjectionConfig(null' 5' 10' 1000' 250' true' true' false' false' false' true' 10000' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_a_projection.cs,setup,The following statement contains a magic number: _projectionConfig =  				new ProjectionConfig(null' 5' 10' 1000' 250' true' true' false' false' false' true' 10000' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_a_projection.cs,setup,The following statement contains a magic number: _projectionConfig =  				new ProjectionConfig(null' 5' 10' 1000' 250' true' true' false' false' false' true' 10000' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_a_projection.cs,should_accept_no_event_stream_response,The following statement contains a magic number: _bus.Handle(  				new ClientMessage.ReadStreamEventsBackwardCompleted(  					_listEventsHandler.HandledMessages[0].CorrelationId'  					_listEventsHandler.HandledMessages[0].EventStreamId' 100' 100' ReadStreamResult.NoStream'  					new ResolvedEvent[0]' null' false' string.Empty' -1' -1' true' 1000));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_a_projection.cs,should_accept_no_event_stream_response,The following statement contains a magic number: _bus.Handle(  				new ClientMessage.ReadStreamEventsBackwardCompleted(  					_listEventsHandler.HandledMessages[0].CorrelationId'  					_listEventsHandler.HandledMessages[0].EventStreamId' 100' 100' ReadStreamResult.NoStream'  					new ResolvedEvent[0]' null' false' string.Empty' -1' -1' true' 1000));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_a_projection.cs,should_accept_no_event_stream_response,The following statement contains a magic number: _bus.Handle(  				new ClientMessage.ReadStreamEventsBackwardCompleted(  					_listEventsHandler.HandledMessages[0].CorrelationId'  					_listEventsHandler.HandledMessages[0].EventStreamId' 100' 100' ReadStreamResult.NoStream'  					new ResolvedEvent[0]' null' false' string.Empty' -1' -1' true' 1000));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_a_projection.cs,should_accept_events_not_found_response,The following statement contains a magic number: _bus.Handle(  				new ClientMessage.ReadStreamEventsBackwardCompleted(  					_listEventsHandler.HandledMessages[0].CorrelationId'  					_listEventsHandler.HandledMessages[0].EventStreamId' 100' 100' ReadStreamResult.Success'  					new ResolvedEvent[0]' null' false' string.Empty' -1' -1' false' 1000));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_a_projection.cs,should_accept_events_not_found_response,The following statement contains a magic number: _bus.Handle(  				new ClientMessage.ReadStreamEventsBackwardCompleted(  					_listEventsHandler.HandledMessages[0].CorrelationId'  					_listEventsHandler.HandledMessages[0].EventStreamId' 100' 100' ReadStreamResult.Success'  					new ResolvedEvent[0]' null' false' string.Empty' -1' -1' false' 1000));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_starting_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_starting_a_projection.cs,should_accept_events_not_found_response,The following statement contains a magic number: _bus.Handle(  				new ClientMessage.ReadStreamEventsBackwardCompleted(  					_listEventsHandler.HandledMessages[0].CorrelationId'  					_listEventsHandler.HandledMessages[0].EventStreamId' 100' 100' ReadStreamResult.Success'  					new ResolvedEvent[0]' null' false' string.Empty' -1' -1' false' 1000));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_stopping_a_projection_with_existing_state_without_updating_the_state,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_stopping_a_projection_with_existing_state_without_updating_the_state.cs,When,The following statement contains a magic number: _bus.Publish(  				new EventReaderSubscriptionMessage.CheckpointSuggested(  					_subscriptionId' CheckpointTag.FromPosition(0' 160' 150)' 77.7f' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_stopping_a_projection_with_existing_state_without_updating_the_state,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_stopping_a_projection_with_existing_state_without_updating_the_state.cs,When,The following statement contains a magic number: _bus.Publish(  				new EventReaderSubscriptionMessage.CheckpointSuggested(  					_subscriptionId' CheckpointTag.FromPosition(0' 160' 150)' 77.7f' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_stopping_a_projection_with_existing_state_without_updating_the_state,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_stopping_a_projection_with_existing_state_without_updating_the_state.cs,When,The following statement contains a magic number: _bus.Publish(  				new EventReaderSubscriptionMessage.CheckpointSuggested(  					_subscriptionId' CheckpointTag.FromPosition(0' 160' 150)' 77.7f' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_checkpoint_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_checkpoint_is_stopped.cs,Given,The following statement contains a magic number: _checkpointHandledThreshold = 2;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_checkpoint_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_checkpoint_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						Guid.NewGuid()' "handle_this_type"' false' "data1"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_checkpoint_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_checkpoint_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						Guid.NewGuid()' "handle_this_type"' false' "data1"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_checkpoint_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_checkpoint_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(140' 130)'  						Guid.NewGuid()' "handle_this_type"' false' "data2"'  						"metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_checkpoint_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_checkpoint_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(140' 130)'  						Guid.NewGuid()' "handle_this_type"' false' "data2"'  						"metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_checkpoint_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_checkpoint_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(160' 150)'  						Guid.NewGuid()' "handle_this_type"' false' "data3"'  						"metadata")' _subscriptionId' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_checkpoint_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_checkpoint_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(160' 150)'  						Guid.NewGuid()' "handle_this_type"' false' "data3"'  						"metadata")' _subscriptionId' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_checkpoint_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_checkpoint_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(160' 150)'  						Guid.NewGuid()' "handle_this_type"' false' "data3"'  						"metadata")' _subscriptionId' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_checkpoint_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_checkpoint_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				new EventReaderSubscriptionMessage.CheckpointSuggested(  					_subscriptionId' CheckpointTag.FromPosition(0' 160' 150)' 77.7f' 3));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_checkpoint_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_checkpoint_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				new EventReaderSubscriptionMessage.CheckpointSuggested(  					_subscriptionId' CheckpointTag.FromPosition(0' 160' 150)' 77.7f' 3));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_checkpoint_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_checkpoint_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				new EventReaderSubscriptionMessage.CheckpointSuggested(  					_subscriptionId' CheckpointTag.FromPosition(0' 160' 150)' 77.7f' 3));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_checkpoint_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_checkpoint_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				new EventReaderSubscriptionMessage.CheckpointSuggested(  					_subscriptionId' CheckpointTag.FromPosition(0' 160' 150)' 77.7f' 3));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_writes_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_writes_is_stopped.cs,Given,The following statement contains a magic number: _checkpointHandledThreshold = 2;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_writes_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_writes_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						Guid.NewGuid()' "handle_this_type"' false' "data1"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_writes_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_writes_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						Guid.NewGuid()' "handle_this_type"' false' "data1"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_writes_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_writes_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(140' 130)'  						Guid.NewGuid()' "handle_this_type"' false' "data2"'  						"metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_writes_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_writes_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(140' 130)'  						Guid.NewGuid()' "handle_this_type"' false' "data2"'  						"metadata")' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_writes_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_writes_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(160' 150)'  						Guid.NewGuid()' "handle_this_type"' false' "data3"'  						"metadata")' _subscriptionId' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_writes_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_writes_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(160' 150)'  						Guid.NewGuid()' "handle_this_type"' false' "data3"'  						"metadata")' _subscriptionId' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_projection_with_pending_writes_is_stopped,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_projection_with_pending_writes_is_stopped.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(160' 150)'  						Guid.NewGuid()' "handle_this_type"' false' "data3"'  						"metadata")' _subscriptionId' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_does_emit_an_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_does_emit_an_event_the_projection_should.cs,When,The following statement contains a magic number: var committedEventReceived =  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						_causingEventId' "no_state_emit1_type"' false' "data"'  						"metadata")' _subscriptionId' 0);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_does_emit_an_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_does_emit_an_event_the_projection_should.cs,When,The following statement contains a magic number: var committedEventReceived =  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						_causingEventId' "no_state_emit1_type"' false' "data"'  						"metadata")' _subscriptionId' 0);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_does_emit_an_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_does_emit_an_event_the_projection_should.cs,set_a_caused_by_position_attributes,The following statement contains a magic number: Assert.AreEqual(120' metadata.Tag.CommitPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_does_emit_an_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_does_emit_an_event_the_projection_should.cs,set_a_caused_by_position_attributes,The following statement contains a magic number: Assert.AreEqual(110' metadata.Tag.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_does_emit_multiple_interleaved_events_into_the_same_stream_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_does_emit_multiple_interleaved_events_into_the_same_stream_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						Guid.NewGuid()' "emit212_type"' false' "data"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_does_emit_multiple_interleaved_events_into_the_same_stream_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_does_emit_multiple_interleaved_events_into_the_same_stream_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						Guid.NewGuid()' "emit212_type"' false' "data"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_does_emit_multiple_subsequent_events_into_the_same_stream_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_does_emit_multiple_subsequent_events_into_the_same_stream_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						Guid.NewGuid()' "emit22_type"' false' "data"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_does_emit_multiple_subsequent_events_into_the_same_stream_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_does_emit_multiple_subsequent_events_into_the_same_stream_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						Guid.NewGuid()' "emit22_type"' false' "data"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_does_emit_multiple_subsequent_events_into_the_same_stream_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_does_emit_multiple_subsequent_events_into_the_same_stream_the_projection_should.cs,write_events_in_a_single_transaction,The following statement contains a magic number: Assert.IsTrue(_writeEventHandler.HandledMessages.Any(v => v.Events.Length == 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_does_emit_multiple_subsequent_events_into_the_same_stream_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_does_emit_multiple_subsequent_events_into_the_same_stream_the_projection_should.cs,write_all_the_emitted_events,The following statement contains a magic number: Assert.AreEqual(  				2' _writeEventHandler.HandledMessages.Single(v => v.EventStreamId == "/emit2").Events.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_does_not_process_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_does_not_process_event_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						new TFPos(120' 110)'  						Guid.NewGuid()' "skip_this_type"' false' new byte[0]' new byte[0]' null' null'  						default(DateTime))'  					_subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_does_not_process_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_does_not_process_event_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						new TFPos(120' 110)'  						Guid.NewGuid()' "skip_this_type"' false' new byte[0]' new byte[0]' null' null'  						default(DateTime))'  					_subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_does_not_process_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_does_not_process_event_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						new TFPos(120' 110)'  						Guid.NewGuid()' "skip_this_type"' false' new byte[0]' new byte[0]' null' null'  						default(DateTime))'  					_subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_does_not_process_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_does_not_process_event_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						new TFPos(120' 110)'  						Guid.NewGuid()' "skip_this_type"' false' new byte[0]' new byte[0]' null' null'  						default(DateTime))'  					_subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_does_process_an_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_does_process_an_event_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						Guid.NewGuid()' "handle_this_type"' false' "data"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_does_process_an_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_does_process_an_event_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						Guid.NewGuid()' "handle_this_type"' false' "data"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_fails_to_load_state_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_fails_to_load_state_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						Guid.NewGuid()' "handle_this_type"' false' "data"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_fails_to_load_state_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_fails_to_load_state_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						Guid.NewGuid()' "handle_this_type"' false' "data"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_fails_to_process_an_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_fails_to_process_an_event_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						Guid.NewGuid()' "handle_this_type"' false' "data"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_fails_to_process_an_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_fails_to_process_an_event_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						Guid.NewGuid()' "handle_this_type"' false' "data"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_with_configured_state_stream_does_process_an_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_with_configured_state_stream_does_process_an_event_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						Guid.NewGuid()' "handle_this_type"' false' "data"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection,when_the_state_handler_with_configured_state_stream_does_process_an_event_the_projection_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\when_the_state_handler_with_configured_state_stream_does_process_an_event_the_projection_should.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"/event_category/1"' -1' "/event_category/1"' -1' false' new TFPos(120' 110)'  						Guid.NewGuid()' "handle_this_type"' false' "data"'  						"metadata")' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,specification_with_parallel_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\specification_with_parallel_query.cs,GivenPendingEventsThreshold,The following statement contains a magic number: return 20;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,specification_with_parallel_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\specification_with_parallel_query.cs,Given,The following statement contains a magic number: _checkpointHandledThreshold = 10;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,specification_with_parallel_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\specification_with_parallel_query.cs,Given,The following statement contains a magic number: _checkpointUnhandledBytesThreshold = 10000;
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_committed_event_received_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_committed_event_received_messages.cs,When,The following statement contains a magic number: var tag0 = CheckpointTag.FromByStreamPosition(0' ""' 0' null' -1' 10000);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_committed_event_received_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_committed_event_received_messages.cs,When,The following statement contains a magic number: var tag1 = CheckpointTag.FromByStreamPosition(0' ""' 1' null' -1' 10000);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_committed_event_received_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_committed_event_received_messages.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"catalog"' 0' "catalog"' 0' false' new TFPos(120' 110)' _eventId' "$@"' false' "test-stream"'  						"")'  					tag0' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_committed_event_received_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_committed_event_received_messages.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"catalog"' 0' "catalog"' 0' false' new TFPos(120' 110)' _eventId' "$@"' false' "test-stream"'  						"")'  					tag0' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_committed_event_received_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_committed_event_received_messages.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"catalog"' 1' "catalog"' 1' false' new TFPos(220' 210)' Guid.NewGuid()' "$@"' false'  						"test-stream2"' "")' tag1' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_committed_event_received_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_committed_event_received_messages.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"catalog"' 1' "catalog"' 1' false' new TFPos(220' 210)' Guid.NewGuid()' "$@"' false'  						"test-stream2"' "")' tag1' _subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_committed_event_received_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_committed_event_received_messages.cs,spools_slave_stream_processing,The following statement contains a magic number: Assert.AreEqual(2' spooled.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_partition_processing_result_messages.cs,When,The following statement contains a magic number: var tag0 = CheckpointTag.FromByStreamPosition(0' ""' 0' null' -1' 10000);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_partition_processing_result_messages.cs,When,The following statement contains a magic number: var tag1 = CheckpointTag.FromByStreamPosition(0' ""' 1' null' -1' 10000);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_partition_processing_result_messages.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"catalog"'  						0'  						"catalog"'  						0'  						false'  						new TFPos(120' 110)'  						_eventId'  						"$@"'  						false'  						"account-00"'  						"")'  					tag0'  					_subscriptionId'  					0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_partition_processing_result_messages.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"catalog"'  						0'  						"catalog"'  						0'  						false'  						new TFPos(120' 110)'  						_eventId'  						"$@"'  						false'  						"account-00"'  						"")'  					tag0'  					_subscriptionId'  					0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_partition_processing_result_messages.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"catalog"'  						1'  						"catalog"'  						1'  						false'  						new TFPos(220' 210)'  						Guid.NewGuid()'  						"$@"'  						false'  						"account-01"'  						"")'  					tag1'  					_subscriptionId'  					1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_partition_processing_result_messages.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"catalog"'  						1'  						"catalog"'  						1'  						false'  						new TFPos(220' 210)'  						Guid.NewGuid()'  						"$@"'  						false'  						"account-01"'  						"")'  					tag1'  					_subscriptionId'  					1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_partition_processing_result_messages.cs,When,The following statement contains a magic number: _bus.Publish(  				new PartitionProcessingResult(  					_workerId'  					_masterProjectionId'  					spoolRequests[0].SubscriptionId'  					"account-00"'  					Guid.Empty'  					CheckpointTag.FromByStreamPosition(0' ""' 0' "account-00"' long.MaxValue' 10000)'  					"{\"data\":1}"));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_partition_processing_result_messages.cs,When,The following statement contains a magic number: _bus.Publish(  				new PartitionProcessingResult(  					_workerId'  					_masterProjectionId'  					spoolRequests[1].SubscriptionId'  					"account-01"'  					Guid.Empty'  					CheckpointTag.FromByStreamPosition(0' ""' 1' "account-01"' long.MaxValue' 10000)'  					"{\"data\":2}"));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_partition_processing_result_messages.cs,writes_state_for_each_partition,The following statement contains a magic number: Assert.AreEqual(2' _writeEventHandler.HandledMessages.OfEventType("Result").Count);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_reordered_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_reordered_partition_processing_result_messages.cs,When,The following statement contains a magic number: var tag0 = CheckpointTag.FromByStreamPosition(0' ""' 0' null' -1' 10000);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_reordered_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_reordered_partition_processing_result_messages.cs,When,The following statement contains a magic number: var tag1 = CheckpointTag.FromByStreamPosition(0' ""' 1' null' -1' 10000);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_reordered_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_reordered_partition_processing_result_messages.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"catalog"'  						0'  						"catalog"'  						0'  						false'  						new TFPos(120' 110)'  						_eventId'  						"$@"'  						false'  						"account-00"'  						"")'  					tag0'  					_subscriptionId'  					0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_reordered_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_reordered_partition_processing_result_messages.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"catalog"'  						0'  						"catalog"'  						0'  						false'  						new TFPos(120' 110)'  						_eventId'  						"$@"'  						false'  						"account-00"'  						"")'  					tag0'  					_subscriptionId'  					0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_reordered_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_reordered_partition_processing_result_messages.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"catalog"'  						1'  						"catalog"'  						1'  						false'  						new TFPos(220' 210)'  						Guid.NewGuid()'  						"$@"'  						false'  						"account-01"'  						"")'  					tag1'  					_subscriptionId'  					1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_reordered_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_reordered_partition_processing_result_messages.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"catalog"'  						1'  						"catalog"'  						1'  						false'  						new TFPos(220' 210)'  						Guid.NewGuid()'  						"$@"'  						false'  						"account-01"'  						"")'  					tag1'  					_subscriptionId'  					1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_reordered_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_reordered_partition_processing_result_messages.cs,When,The following statement contains a magic number: _bus.Publish(  				new PartitionProcessingResult(  					_workerId'  					_masterProjectionId'  					spoolRequests[1].SubscriptionId'  					"account-01"'  					Guid.Empty'  					CheckpointTag.FromByStreamPosition(0' ""' 1' "account-01"' long.MaxValue' 10000)'  					"{\"data\":2}"));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_reordered_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_reordered_partition_processing_result_messages.cs,When,The following statement contains a magic number: _bus.Publish(  				new PartitionProcessingResult(  					_workerId'  					_masterProjectionId'  					spoolRequests[0].SubscriptionId'  					"account-00"'  					Guid.Empty'  					CheckpointTag.FromByStreamPosition(0' ""' 0' "account-00"' long.MaxValue' 10000)'  					"{\"data\":1}"));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.parallel_query,when_handling_reordered_partition_processing_result_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\parallel_query\when_handling_reordered_partition_processing_result_messages.cs,writes_state_for_each_partition,The following statement contains a magic number: Assert.AreEqual(2' _writeEventHandler.HandledMessages.OfEventType("Result").Count);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_non_started_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_non_started_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_non_started_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_non_started_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_non_started_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_non_started_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_non_started_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_non_started_checkpoint.cs,prepare_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_checkpoint.Prepare(CheckpointTag.FromPosition(0' 200' 150));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_non_started_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_non_started_checkpoint.cs,prepare_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_checkpoint.Prepare(CheckpointTag.FromPosition(0' 200' 150));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_started_checkpoint_with_some_events_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_started_checkpoint_with_some_events_emitted.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_started_checkpoint_with_some_events_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_started_checkpoint_with_some_events_emitted.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_started_checkpoint_with_some_events_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_started_checkpoint_with_some_events_emitted.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_started_checkpoint_with_some_events_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_started_checkpoint_with_some_events_emitted.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(new EmittedDataEvent(  						"stream2"' Guid.NewGuid()' "type"' true' "data2"' null' CheckpointTag.FromPosition(0' 120' 110)'  						null))'  					new EmittedEventEnvelope(new EmittedDataEvent(  						"stream2"' Guid.NewGuid()' "type"' true' "data4"' null' CheckpointTag.FromPosition(0' 120' 110)'  						null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_started_checkpoint_with_some_events_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_started_checkpoint_with_some_events_emitted.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(new EmittedDataEvent(  						"stream2"' Guid.NewGuid()' "type"' true' "data2"' null' CheckpointTag.FromPosition(0' 120' 110)'  						null))'  					new EmittedEventEnvelope(new EmittedDataEvent(  						"stream2"' Guid.NewGuid()' "type"' true' "data4"' null' CheckpointTag.FromPosition(0' 120' 110)'  						null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_started_checkpoint_with_some_events_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_started_checkpoint_with_some_events_emitted.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(new EmittedDataEvent(  						"stream2"' Guid.NewGuid()' "type"' true' "data2"' null' CheckpointTag.FromPosition(0' 120' 110)'  						null))'  					new EmittedEventEnvelope(new EmittedDataEvent(  						"stream2"' Guid.NewGuid()' "type"' true' "data4"' null' CheckpointTag.FromPosition(0' 120' 110)'  						null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_started_checkpoint_with_some_events_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_started_checkpoint_with_some_events_emitted.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(new EmittedDataEvent(  						"stream2"' Guid.NewGuid()' "type"' true' "data2"' null' CheckpointTag.FromPosition(0' 120' 110)'  						null))'  					new EmittedEventEnvelope(new EmittedDataEvent(  						"stream2"' Guid.NewGuid()' "type"' true' "data4"' null' CheckpointTag.FromPosition(0' 120' 110)'  						null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_started_checkpoint_with_some_events_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_started_checkpoint_with_some_events_emitted.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(new EmittedDataEvent(  						"stream1"' Guid.NewGuid()' "type"' true' "data"' null' CheckpointTag.FromPosition(0' 140' 130)'  						null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_started_checkpoint_with_some_events_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_started_checkpoint_with_some_events_emitted.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(new EmittedDataEvent(  						"stream1"' Guid.NewGuid()' "type"' true' "data"' null' CheckpointTag.FromPosition(0' 140' 130)'  						null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_started_checkpoint_with_some_events_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_started_checkpoint_with_some_events_emitted.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(new EmittedDataEvent(  						"stream1"' Guid.NewGuid()' "type"' true' "data"' null' CheckpointTag.FromPosition(0' 160' 150)'  						null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_started_checkpoint_with_some_events_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_started_checkpoint_with_some_events_emitted.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(new EmittedDataEvent(  						"stream1"' Guid.NewGuid()' "type"' true' "data"' null' CheckpointTag.FromPosition(0' 160' 150)'  						null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_started_checkpoint_with_some_events_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_started_checkpoint_with_some_events_emitted.cs,requesting_checkpoints_with_position_before_the_last_known_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_checkpoint.Prepare(CheckpointTag.FromPosition(0' 140' 130));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,the_started_checkpoint_with_some_events_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\the_started_checkpoint_with_some_events_emitted.cs,requesting_checkpoints_with_position_before_the_last_known_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_checkpoint.Prepare(CheckpointTag.FromPosition(0' 140' 130));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_creating_a_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_creating_a_projection_checkpoint.cs,null_publisher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ProjectionCheckpoint(  					null' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  					CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_creating_a_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_creating_a_projection_checkpoint.cs,null_publisher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ProjectionCheckpoint(  					null' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  					CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_creating_a_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_creating_a_projection_checkpoint.cs,null_publisher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ProjectionCheckpoint(  					null' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  					CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_creating_a_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_creating_a_projection_checkpoint.cs,null_io_dispatcher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ProjectionCheckpoint(  					_fakePublisher' null' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  					CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_creating_a_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_creating_a_projection_checkpoint.cs,null_io_dispatcher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ProjectionCheckpoint(  					_fakePublisher' null' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  					CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_creating_a_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_creating_a_projection_checkpoint.cs,null_io_dispatcher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ProjectionCheckpoint(  					_fakePublisher' null' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  					CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_creating_a_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_creating_a_projection_checkpoint.cs,null_ready_handler_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ProjectionCheckpoint(  					_fakePublisher' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' null'  					CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_creating_a_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_creating_a_projection_checkpoint.cs,null_ready_handler_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ProjectionCheckpoint(  					_fakePublisher' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' null'  					CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_creating_a_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_creating_a_projection_checkpoint.cs,null_ready_handler_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ProjectionCheckpoint(  					_fakePublisher' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' null'  					CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_creating_a_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_creating_a_projection_checkpoint.cs,commit_position_less_than_or_equal_to_prepare_position_throws_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => {  				new ProjectionCheckpoint(  					_fakePublisher' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  					CheckpointTag.FromPosition(0' 100' 101)' new TransactionFilePositionTagger(0)' 250' 1);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_creating_a_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_creating_a_projection_checkpoint.cs,commit_position_less_than_or_equal_to_prepare_position_throws_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => {  				new ProjectionCheckpoint(  					_fakePublisher' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  					CheckpointTag.FromPosition(0' 100' 101)' new TransactionFilePositionTagger(0)' 250' 1);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_creating_a_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_creating_a_projection_checkpoint.cs,commit_position_less_than_or_equal_to_prepare_position_throws_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => {  				new ProjectionCheckpoint(  					_fakePublisher' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  					CheckpointTag.FromPosition(0' 100' 101)' new TransactionFilePositionTagger(0)' 250' 1);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_creating_a_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_creating_a_projection_checkpoint.cs,it_can_be_created,The following statement contains a magic number: new ProjectionCheckpoint(  				_fakePublisher' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_creating_a_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_creating_a_projection_checkpoint.cs,it_can_be_created,The following statement contains a magic number: new ProjectionCheckpoint(  				_fakePublisher' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_creating_a_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_creating_a_projection_checkpoint.cs,it_can_be_created,The following statement contains a magic number: new ProjectionCheckpoint(  				_fakePublisher' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_before_from_position_the_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_before_from_position_the_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_before_from_position_the_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_before_from_position_the_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_before_from_position_the_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_before_from_position_the_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_before_from_position_the_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_before_from_position_the_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  					new[] {  						new EmittedEventEnvelope(  							new EmittedDataEvent(  								"stream1"' Guid.NewGuid()' "type"' true' "data"' null'  								CheckpointTag.FromPosition(0' 40' 30)' null))  					});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_before_from_position_the_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_before_from_position_the_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  					new[] {  						new EmittedEventEnvelope(  							new EmittedDataEvent(  								"stream1"' Guid.NewGuid()' "type"' true' "data"' null'  								CheckpointTag.FromPosition(0' 40' 30)' null))  					});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_backward_order_to_the_same_stream_the_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_backward_order_to_the_same_stream_the_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_backward_order_to_the_same_stream_the_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_backward_order_to_the_same_stream_the_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_backward_order_to_the_same_stream_the_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_backward_order_to_the_same_stream_the_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_backward_order_to_the_same_stream_the_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_backward_order_to_the_same_stream_the_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  					new[] {  						new EmittedEventEnvelope(  							new EmittedDataEvent(  								"stream1"' Guid.NewGuid()' "type"' true' "data"' null'  								CheckpointTag.FromPosition(0' 140' 130)' null))  					});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_backward_order_to_the_same_stream_the_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_backward_order_to_the_same_stream_the_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  					new[] {  						new EmittedEventEnvelope(  							new EmittedDataEvent(  								"stream1"' Guid.NewGuid()' "type"' true' "data"' null'  								CheckpointTag.FromPosition(0' 140' 130)' null))  					});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_backward_order_to_the_same_stream_the_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_backward_order_to_the_same_stream_the_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  					new[] {  						new EmittedEventEnvelope(  							new EmittedDataEvent(  								"stream1"' Guid.NewGuid()' "type"' true' "data2"' null'  								CheckpointTag.FromPosition(0' 120' 110)' null))  					});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_backward_order_to_the_same_stream_the_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_backward_order_to_the_same_stream_the_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  					new[] {  						new EmittedEventEnvelope(  							new EmittedDataEvent(  								"stream1"' Guid.NewGuid()' "type"' true' "data2"' null'  								CheckpointTag.FromPosition(0' 120' 110)' null))  					});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_correct_order_the_started_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_correct_order_the_started_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_correct_order_the_started_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_correct_order_the_started_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_correct_order_the_started_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_correct_order_the_started_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_correct_order_the_started_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_correct_order_the_started_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type1"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type2"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type3"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_correct_order_the_started_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_correct_order_the_started_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type1"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type2"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type3"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_correct_order_the_started_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_correct_order_the_started_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type1"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type2"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type3"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_correct_order_the_started_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_correct_order_the_started_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type1"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type2"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type3"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_correct_order_the_started_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_correct_order_the_started_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type1"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type2"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type3"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_correct_order_the_started_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_correct_order_the_started_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type1"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type2"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type3"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_correct_order_the_started_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_correct_order_the_started_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type4"' true' "data"' null'  							CheckpointTag.FromPosition(0' 140' 130)' null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_correct_order_the_started_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_correct_order_the_started_projection_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type4"' true' "data"' null'  							CheckpointTag.FromPosition(0' 140' 130)' null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_correct_order_the_started_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_correct_order_the_started_projection_checkpoint.cs,should_publish_write_events,The following statement contains a magic number: Assert.AreEqual(4' writeEvents.Count());
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_correct_order_the_started_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_correct_order_the_started_projection_checkpoint.cs,should_group_events_to_the_same_stream_caused_by_the_same_event,The following statement contains a magic number: Assert.AreEqual(  				2'  				_consumer.HandledMessages.OfType<ClientMessage.WriteEvents>().Single(v => v.EventStreamId == "stream2")  					.Events.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_correct_order_the_started_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_correct_order_the_started_projection_checkpoint.cs,should_not_write_a_second_group_until_the_first_write_completes,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 170' 160)' null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_correct_order_the_started_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_correct_order_the_started_projection_checkpoint.cs,should_not_write_a_second_group_until_the_first_write_completes,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 170' 160)' null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_in_correct_order_the_started_projection_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_in_correct_order_the_started_projection_checkpoint.cs,should_not_write_a_second_group_until_the_first_write_completes,The following statement contains a magic number: Assert.AreEqual(2' writeRequests.Count());
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_the_non_started_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_the_non_started_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_the_non_started_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_the_non_started_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_the_non_started_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_the_non_started_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_the_non_started_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_the_non_started_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_the_non_started_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_the_non_started_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_the_non_started_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_the_non_started_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_the_non_started_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_the_non_started_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_the_non_started_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_the_non_started_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_the_non_started_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_the_non_started_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_the_non_started_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_the_non_started_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 140' 130)' null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_the_non_started_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_the_non_started_checkpoint.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 140' 130)' null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,NumberOfMessagesInFlightSource,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,GetEnumerator,The following statement contains a magic number: return Enumerable.Range(1' 3).Select(x => x)  				.GetEnumerator();
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250'  				_maximumNumberOfAllowedWritesInFlight);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250'  				_maximumNumberOfAllowedWritesInFlight);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250'  				_maximumNumberOfAllowedWritesInFlight);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type1"' true' "data1"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type2"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type3"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type1"' true' "data1"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type2"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type3"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type1"' true' "data1"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type2"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type3"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type1"' true' "data1"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type2"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type3"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type1"' true' "data1"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type2"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type3"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type1"' true' "data1"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type2"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type3"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set_to_unlimited,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250'  				AllowedWritesInFlight.Unbounded);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set_to_unlimited,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250'  				AllowedWritesInFlight.Unbounded);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set_to_unlimited,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250'  				AllowedWritesInFlight.Unbounded);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set_to_unlimited,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type1"' true' "data1"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type2"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type3"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set_to_unlimited,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type1"' true' "data1"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type2"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type3"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set_to_unlimited,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type1"' true' "data1"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type2"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type3"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set_to_unlimited,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type1"' true' "data1"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type2"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type3"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set_to_unlimited,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type1"' true' "data1"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type2"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type3"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set_to_unlimited,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type1"' true' "data1"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type2"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type3"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_maximum_allowed_writes_in_flight_set_to_unlimited,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_maximum_allowed_writes_in_flight_set.cs,should_have_as_many_writes_in_flight_as_requested,The following statement contains a magic number: Assert.AreEqual(3' writeEvents.Count());
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_null_streamId,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_null_streamId.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_null_streamId,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_null_streamId.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_null_streamId,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_null_streamId.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_null_streamId,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_null_streamId.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  					new[] {  						new EmittedEventEnvelope(  							new EmittedDataEvent(  								null' Guid.NewGuid()' "type"' true' "data"' null' CheckpointTag.FromPosition(0' 40' 30)'  								null))  					});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_emitting_events_with_null_streamId,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_emitting_events_with_null_streamId.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  					new[] {  						new EmittedEventEnvelope(  							new EmittedDataEvent(  								null' Guid.NewGuid()' "type"' true' "data"' null' CheckpointTag.FromPosition(0' 40' 30)'  								null))  					});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_handling_stream_awaiting_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_handling_stream_awaiting_message.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_handling_stream_awaiting_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_handling_stream_awaiting_message.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_handling_stream_awaiting_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_handling_stream_awaiting_message.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_after_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_after_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_after_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_after_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_after_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_after_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_after_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_after_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_after_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_after_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_after_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_after_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_after_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_after_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_after_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_after_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 140' 130)' null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_after_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_after_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 140' 130)' null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_after_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_after_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.Prepare(CheckpointTag.FromPosition(0' 200' 150));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_after_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_after_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.Prepare(CheckpointTag.FromPosition(0' 200' 150));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_before_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_before_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_before_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_before_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_before_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_before_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_before_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_before_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_before_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_before_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_before_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_before_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_before_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_before_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_before_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_before_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 140' 130)' null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_before_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_before_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 140' 130)' null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_before_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_before_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 160' 150)' null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_before_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_before_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 160' 150)' null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_before_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_before_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.Prepare(CheckpointTag.FromPosition(0' 200' 150));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_before_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_before_all_writes_completed.cs,setup,The following statement contains a magic number: _checkpoint.Prepare(CheckpointTag.FromPosition(0' 200' 150));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_before_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_before_all_writes_completed.cs,ready_for_checkpoint_after_all_writes_complete,The following statement contains a magic number: writes[2].Envelope.ReplyWith(new ClientMessage.WriteEventsCompleted(writes[2].CorrelationId' 0' 0' -1' -1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_requesting_checkpoint_before_all_writes_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_requesting_checkpoint_before_all_writes_completed.cs,ready_for_checkpoint_after_all_writes_complete,The following statement contains a magic number: writes[2].Envelope.ReplyWith(new ClientMessage.WriteEventsCompleted(writes[2].CorrelationId' 0' 0' -1' -1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_starting_the_projection_checkpoint_with_some_events_already_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_starting_the_projection_checkpoint_with_some_events_already_emitted.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250'  				AllowedWritesInFlight.Unbounded);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_starting_the_projection_checkpoint_with_some_events_already_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_starting_the_projection_checkpoint_with_some_events_already_emitted.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250'  				AllowedWritesInFlight.Unbounded);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_starting_the_projection_checkpoint_with_some_events_already_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_starting_the_projection_checkpoint_with_some_events_already_emitted.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 100' 50)' new TransactionFilePositionTagger(0)' 250'  				AllowedWritesInFlight.Unbounded);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_starting_the_projection_checkpoint_with_some_events_already_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_starting_the_projection_checkpoint_with_some_events_already_emitted.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_starting_the_projection_checkpoint_with_some_events_already_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_starting_the_projection_checkpoint_with_some_events_already_emitted.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_starting_the_projection_checkpoint_with_some_events_already_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_starting_the_projection_checkpoint_with_some_events_already_emitted.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_starting_the_projection_checkpoint_with_some_events_already_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_starting_the_projection_checkpoint_with_some_events_already_emitted.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_starting_the_projection_checkpoint_with_some_events_already_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_starting_the_projection_checkpoint_with_some_events_already_emitted.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_starting_the_projection_checkpoint_with_some_events_already_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_starting_the_projection_checkpoint_with_some_events_already_emitted.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data2"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream3"' Guid.NewGuid()' "type"' true' "data3"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream2"' Guid.NewGuid()' "type"' true' "data4"' null'  							CheckpointTag.FromPosition(0' 120' 110)' null))'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_starting_the_projection_checkpoint_with_some_events_already_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_starting_the_projection_checkpoint_with_some_events_already_emitted.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 140' 130)' null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_starting_the_projection_checkpoint_with_some_events_already_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_starting_the_projection_checkpoint_with_some_events_already_emitted.cs,setup,The following statement contains a magic number: _checkpoint.ValidateOrderAndEmitEvents(  				new[] {  					new EmittedEventEnvelope(  						new EmittedDataEvent(  							"stream1"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 140' 130)' null))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_starting_the_projection_checkpoint_with_some_events_already_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_starting_the_projection_checkpoint_with_some_events_already_emitted.cs,should_publish_write_events,The following statement contains a magic number: Assert.AreEqual(3' _consumer.HandledMessages.OfType<ClientMessage.WriteEvents>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint,when_the_projection_checkpoint_has_been_started,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint\when_the_projection_checkpoint_has_been_started.cs,setup,The following statement contains a magic number: _checkpoint = new ProjectionCheckpoint(  				_bus' _ioDispatcher' new ProjectionVersion(1' 0' 0)' null' _readyHandler'  				CheckpointTag.FromPosition(0' 0' -1)' new TransactionFilePositionTagger(0)' 250' 1);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint_reader,when_projection_reader_reads_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint_reader\when_projection_reader_reads_successfully.cs,When,The following statement contains a magic number: !_mre.Wait(10000)
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint_reader,when_projection_reader_times_out_on_read,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint_reader\when_projection_reader_times_out_on_read.cs,When,The following statement contains a magic number: !_mre.Wait(10000)
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint_reader,when_projection_reader_times_out_on_read,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint_reader\when_projection_reader_times_out_on_read.cs,Handle,The following statement contains a magic number: var reply = new ClientMessage.ReadStreamEventsBackwardCompleted(message.CorrelationId'  				message.EventStreamId' message.FromEventNumber' message.MaxCount' ReadStreamResult.Success'  				evnts' null' true' ""' 0' 0' true' 10000);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint_reader,with_projection_checkpoint_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint_reader\with_projection_checkpoint_reader.cs,TestFixtureSetUp,The following statement contains a magic number: _projectionVersion = new ProjectionVersion(1' 2' 3);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint_reader,with_projection_checkpoint_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint_reader\with_projection_checkpoint_reader.cs,TestFixtureSetUp,The following statement contains a magic number: _projectionVersion = new ProjectionVersion(1' 2' 3);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.projection_checkpoint_reader,with_projection_checkpoint_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\projection_checkpoint_reader\with_projection_checkpoint_reader.cs,Handle,The following statement contains a magic number: var reply = new ClientMessage.ReadStreamEventsBackwardCompleted(message.CorrelationId'  				message.EventStreamId' message.FromEventNumber' message.MaxCount' ReadStreamResult.Success'  				evnts' null' true' ""' 0' 0' true' 10000);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.query_by_stream,when_handling_multiple_empty_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\query_by_stream\when_handling_multiple_empty_streams.cs,When,The following statement contains a magic number: _bus.Publish(  				new EventReaderSubscriptionMessage.EofReached(  					_subscriptionId' CheckpointTag.FromByStreamPosition(0' "catalog"' 1' null' -1' long.MinValue)' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.query_by_stream,when_handling_multiple_non_empty_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\query_by_stream\when_handling_multiple_non_empty_streams.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-00"' 0' "account-00"' 0' false' new TFPos(120' 110)' _eventId'  						"handle_this_type"' false' "data"' "metadata")' tag0' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.query_by_stream,when_handling_multiple_non_empty_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\query_by_stream\when_handling_multiple_non_empty_streams.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-00"' 0' "account-00"' 0' false' new TFPos(120' 110)' _eventId'  						"handle_this_type"' false' "data"' "metadata")' tag0' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.query_by_stream,when_handling_multiple_non_empty_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\query_by_stream\when_handling_multiple_non_empty_streams.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 0' "account-01"' 0' false' new TFPos(220' 210)' _eventId'  						"handle_this_type"' false' "data"' "metadata")' tag1' _subscriptionId' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.query_by_stream,when_handling_multiple_non_empty_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\query_by_stream\when_handling_multiple_non_empty_streams.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 0' "account-01"' 0' false' new TFPos(220' 210)' _eventId'  						"handle_this_type"' false' "data"' "metadata")' tag1' _subscriptionId' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.query_by_stream,when_handling_multiple_non_empty_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\query_by_stream\when_handling_multiple_non_empty_streams.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' 0' "account-01"' 0' false' new TFPos(220' 210)' _eventId'  						"handle_this_type"' false' "data"' "metadata")' tag1' _subscriptionId' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.query_by_stream,when_handling_multiple_non_empty_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\query_by_stream\when_handling_multiple_non_empty_streams.cs,When,The following statement contains a magic number: _bus.Publish(  				new EventReaderSubscriptionMessage.PartitionEofReached(  					_subscriptionId' tag1'  					"account-01"' 3));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.query_by_stream,when_handling_multiple_non_empty_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\query_by_stream\when_handling_multiple_non_empty_streams.cs,writes_empty_state_for_each_partition,The following statement contains a magic number: Assert.AreEqual(2' _writeEventHandler.HandledMessages.OfEventType("Result").Count);
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_one_partition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' 0' false' new TFPos(120' 110)' Guid.NewGuid()'  						"handle_this_type"' false' "data"' "metadata")'  					CheckpointTag.FromByStreamPosition(0' ""' 0' "account-01"' 0' 500)' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_one_partition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' 0' false' new TFPos(120' 110)' Guid.NewGuid()'  						"handle_this_type"' false' "data"' "metadata")'  					CheckpointTag.FromByStreamPosition(0' ""' 0' "account-01"' 0' 500)' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_one_partition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' 0' false' new TFPos(120' 110)' Guid.NewGuid()'  						"handle_this_type"' false' "data"' "metadata")'  					CheckpointTag.FromByStreamPosition(0' ""' 0' "account-01"' 0' 500)' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_one_partition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' 1' false' new TFPos(220' 210)' _eventId' "handle_this_type"'  						false' "data"' "metadata")' CheckpointTag.FromByStreamPosition(0' ""' 0' "account-01"' 1' 500)'  					_subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_one_partition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' 1' false' new TFPos(220' 210)' _eventId' "handle_this_type"'  						false' "data"' "metadata")' CheckpointTag.FromByStreamPosition(0' ""' 0' "account-01"' 1' 500)'  					_subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_one_partition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' 1' false' new TFPos(220' 210)' _eventId' "handle_this_type"'  						false' "data"' "metadata")' CheckpointTag.FromByStreamPosition(0' ""' 0' "account-01"' 1' 500)'  					_subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_one_partition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				new EventReaderSubscriptionMessage.PartitionEofReached(  					_subscriptionId' CheckpointTag.FromByStreamPosition(0' ""' 0' "account-01"' long.MaxValue' 500)'  					"account-01"' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_one_partition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				new EventReaderSubscriptionMessage.PartitionEofReached(  					_subscriptionId' CheckpointTag.FromByStreamPosition(0' ""' 0' "account-01"' long.MaxValue' 500)'  					"account-01"' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_multiple_partitions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' 0' false' new TFPos(120' 110)' Guid.NewGuid()'  						"handle_this_type"' false' "data"' "metadata")'  					CheckpointTag.FromByStreamPosition(0' ""' 0' "account-01"' 0' 500)' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_multiple_partitions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' 0' false' new TFPos(120' 110)' Guid.NewGuid()'  						"handle_this_type"' false' "data"' "metadata")'  					CheckpointTag.FromByStreamPosition(0' ""' 0' "account-01"' 0' 500)' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_multiple_partitions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' 0' false' new TFPos(120' 110)' Guid.NewGuid()'  						"handle_this_type"' false' "data"' "metadata")'  					CheckpointTag.FromByStreamPosition(0' ""' 0' "account-01"' 0' 500)' _subscriptionId' 0));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_multiple_partitions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' 1' false' new TFPos(220' 210)' _eventId' "handle_this_type"'  						false' "data"' "metadata")' CheckpointTag.FromByStreamPosition(0' ""' 0' "account-01"' 1' 500)'  					_subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_multiple_partitions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' 1' false' new TFPos(220' 210)' _eventId' "handle_this_type"'  						false' "data"' "metadata")' CheckpointTag.FromByStreamPosition(0' ""' 0' "account-01"' 1' 500)'  					_subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_multiple_partitions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-01"' -1' "account-01"' 1' false' new TFPos(220' 210)' _eventId' "handle_this_type"'  						false' "data"' "metadata")' CheckpointTag.FromByStreamPosition(0' ""' 0' "account-01"' 1' 500)'  					_subscriptionId' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_multiple_partitions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				new EventReaderSubscriptionMessage.PartitionEofReached(  					_subscriptionId' CheckpointTag.FromByStreamPosition(0' ""' 0' "account-01"' long.MaxValue' 500)'  					"account-01"' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_multiple_partitions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				new EventReaderSubscriptionMessage.PartitionEofReached(  					_subscriptionId' CheckpointTag.FromByStreamPosition(0' ""' 0' "account-01"' long.MaxValue' 500)'  					"account-01"' 2));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_multiple_partitions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-02"' -1' "account-02"' 0' false' new TFPos(220' 210)' _eventId' "handle_this_type"'  						false' "data"' "metadata")' CheckpointTag.FromByStreamPosition(0' ""' 1' "account-02"' 0' 500)'  					_subscriptionId' 3));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_multiple_partitions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-02"' -1' "account-02"' 0' false' new TFPos(220' 210)' _eventId' "handle_this_type"'  						false' "data"' "metadata")' CheckpointTag.FromByStreamPosition(0' ""' 1' "account-02"' 0' 500)'  					_subscriptionId' 3));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_multiple_partitions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-02"' -1' "account-02"' 0' false' new TFPos(220' 210)' _eventId' "handle_this_type"'  						false' "data"' "metadata")' CheckpointTag.FromByStreamPosition(0' ""' 1' "account-02"' 0' 500)'  					_subscriptionId' 3));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_multiple_partitions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  					new ResolvedEvent(  						"account-02"' -1' "account-02"' 0' false' new TFPos(220' 210)' _eventId' "handle_this_type"'  						false' "data"' "metadata")' CheckpointTag.FromByStreamPosition(0' ""' 1' "account-02"' 0' 500)'  					_subscriptionId' 3));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_multiple_partitions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				new EventReaderSubscriptionMessage.PartitionEofReached(  					_subscriptionId' CheckpointTag.FromByStreamPosition(0' ""' 1' "account-02"' long.MaxValue' 500)'  					"account-01"' 4));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_multiple_partitions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,When,The following statement contains a magic number: _bus.Publish(  				new EventReaderSubscriptionMessage.PartitionEofReached(  					_subscriptionId' CheckpointTag.FromByStreamPosition(0' ""' 1' "account-02"' long.MaxValue' 500)'  					"account-01"' 4));
Magic Number,EventStore.Projections.Core.Tests.Services.core_projection.slave_projection,when_processes_multiple_partitions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_projection\slave_projection\specification_with_slave_core_projection.cs,publishes_all_partition_processing_result_messages,The following statement contains a magic number: Assert.AreEqual(2' results.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.core_service,when_a_subscribed_projection_handler_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_service\when_a_subscribed_projection_handler_throws.cs,Setup,The following statement contains a magic number: _readerService.Handle(  				new ReaderSubscriptionManagement.Subscribe(  					projectionCorrelationId' CheckpointTag.FromPosition(0' 0' 0)' readerStrategy'  					new ReaderSubscriptionOptions(1000' 2000' 10000' false' stopAfterNEvents: null)));
Magic Number,EventStore.Projections.Core.Tests.Services.core_service,when_a_subscribed_projection_handler_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_service\when_a_subscribed_projection_handler_throws.cs,Setup,The following statement contains a magic number: _readerService.Handle(  				new ReaderSubscriptionManagement.Subscribe(  					projectionCorrelationId' CheckpointTag.FromPosition(0' 0' 0)' readerStrategy'  					new ReaderSubscriptionOptions(1000' 2000' 10000' false' stopAfterNEvents: null)));
Magic Number,EventStore.Projections.Core.Tests.Services.core_service,when_a_subscribed_projection_handler_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_service\when_a_subscribed_projection_handler_throws.cs,Setup,The following statement contains a magic number: _readerService.Handle(  				new ReaderSubscriptionManagement.Subscribe(  					projectionCorrelationId' CheckpointTag.FromPosition(0' 0' 0)' readerStrategy'  					new ReaderSubscriptionOptions(1000' 2000' 10000' false' stopAfterNEvents: null)));
Magic Number,EventStore.Projections.Core.Tests.Services.core_service,when_a_subscribed_projection_handler_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_service\when_a_subscribed_projection_handler_throws.cs,Setup,The following statement contains a magic number: _readerService.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					readerStrategy.EventReaderId' new TFPos(20' 10)' "throws"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.core_service,when_a_subscribed_projection_handler_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_service\when_a_subscribed_projection_handler_throws.cs,Setup,The following statement contains a magic number: _readerService.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					readerStrategy.EventReaderId' new TFPos(20' 10)' "throws"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.core_service,when_a_subscribed_projection_handler_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_service\when_a_subscribed_projection_handler_throws.cs,Setup,The following statement contains a magic number: _readerService.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					readerStrategy.EventReaderId' new TFPos(20' 10)' "throws"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.core_service,when_unsubscribing_a_subscribed_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_service\when_unsubscribing_a_subscribed_projection.cs,Setup,The following statement contains a magic number: _readerService.Handle(  				new ReaderSubscriptionManagement.Subscribe(  					_projectionCorrelationId' CheckpointTag.FromPosition(0' 0' 0)' CreateReaderStrategy()'  					new ReaderSubscriptionOptions(1000' 2000' 10000' false' stopAfterNEvents: null)));
Magic Number,EventStore.Projections.Core.Tests.Services.core_service,when_unsubscribing_a_subscribed_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_service\when_unsubscribing_a_subscribed_projection.cs,Setup,The following statement contains a magic number: _readerService.Handle(  				new ReaderSubscriptionManagement.Subscribe(  					_projectionCorrelationId' CheckpointTag.FromPosition(0' 0' 0)' CreateReaderStrategy()'  					new ReaderSubscriptionOptions(1000' 2000' 10000' false' stopAfterNEvents: null)));
Magic Number,EventStore.Projections.Core.Tests.Services.core_service,when_unsubscribing_a_subscribed_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_service\when_unsubscribing_a_subscribed_projection.cs,Setup,The following statement contains a magic number: _readerService.Handle(  				new ReaderSubscriptionManagement.Subscribe(  					_projectionCorrelationId' CheckpointTag.FromPosition(0' 0' 0)' CreateReaderStrategy()'  					new ReaderSubscriptionOptions(1000' 2000' 10000' false' stopAfterNEvents: null)));
Magic Number,EventStore.Projections.Core.Tests.Services.core_service,when_unsubscribing_a_subscribed_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_service\when_unsubscribing_a_subscribed_projection.cs,Setup,The following statement contains a magic number: _readerService.Handle(  				new ReaderSubscriptionManagement.Subscribe(  					_projectionCorrelationId2' CheckpointTag.FromPosition(0' 0' 0)' CreateReaderStrategy()'  					new ReaderSubscriptionOptions(1000' 2000' 10000' false' stopAfterNEvents: null)));
Magic Number,EventStore.Projections.Core.Tests.Services.core_service,when_unsubscribing_a_subscribed_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_service\when_unsubscribing_a_subscribed_projection.cs,Setup,The following statement contains a magic number: _readerService.Handle(  				new ReaderSubscriptionManagement.Subscribe(  					_projectionCorrelationId2' CheckpointTag.FromPosition(0' 0' 0)' CreateReaderStrategy()'  					new ReaderSubscriptionOptions(1000' 2000' 10000' false' stopAfterNEvents: null)));
Magic Number,EventStore.Projections.Core.Tests.Services.core_service,when_unsubscribing_a_subscribed_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\core_service\when_unsubscribing_a_subscribed_projection.cs,Setup,The following statement contains a magic number: _readerService.Handle(  				new ReaderSubscriptionManagement.Subscribe(  					_projectionCorrelationId2' CheckpointTag.FromPosition(0' 0' 0)' CreateReaderStrategy()'  					new ReaderSubscriptionOptions(1000' 2000' 10000' false' stopAfterNEvents: null)));
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_deleter.when_deleting,when_checkpoint_read_times_out,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_deleter\when_deleting\when_checkpoint_read_times_out.cs,should_have_deleted_the_tracked_emitted_stream,The following statement contains a magic number: !_mre.Wait(10000)
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_deleter.when_deleting,when_delete_stream_succeeds,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_deleter\when_deleting\when_delete_stream_succeeds.cs,should_have_deleted_the_tracked_emitted_stream,The following statement contains a magic number: !_mre.Wait(10000)
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_deleter.when_deleting,when_emitted_streams_read_times_out,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_deleter\when_deleting\when_emitted_streams_read_times_out.cs,should_have_deleted_the_tracked_emitted_stream,The following statement contains a magic number: !_mre.Wait(10000)
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_deleter.when_deleting,with_an_existing_emitted_streams_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_deleter\when_deleting\with_an_existing_emitted_streams_stream.cs,Given,The following statement contains a magic number: _emittedStreamsTracker.TrackEmittedStream(new EmittedEvent[] {  				new EmittedDataEvent(  					_testStreamName' Guid.NewGuid()' "type1"' true'  					"data"' null' CheckpointTag.FromPosition(0' 100' 50)' null)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_deleter.when_deleting,with_an_existing_emitted_streams_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_deleter\when_deleting\with_an_existing_emitted_streams_stream.cs,Given,The following statement contains a magic number: _emittedStreamsTracker.TrackEmittedStream(new EmittedEvent[] {  				new EmittedDataEvent(  					_testStreamName' Guid.NewGuid()' "type1"' true'  					"data"' null' CheckpointTag.FromPosition(0' 100' 50)' null)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_deleter.when_deleting,with_an_existing_emitted_streams_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_deleter\when_deleting\with_an_existing_emitted_streams_stream.cs,Given,The following statement contains a magic number: !_eventAppeared.WaitOne(TimeSpan.FromSeconds(5))
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_deleter.when_deleting,with_an_existing_emitted_streams_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_deleter\when_deleting\with_an_existing_emitted_streams_stream.cs,When,The following statement contains a magic number: !_resetEvent.WaitOne(TimeSpan.FromSeconds(10))
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_deleter.when_deleting,with_emitted_stream_deleter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_deleter\when_deleting\with_emitted_stream_deleter.cs,Handle,The following statement contains a magic number: var reply = new ClientMessage.ReadStreamEventsBackwardCompleted(message.CorrelationId'  				message.EventStreamId' message.FromEventNumber' message.MaxCount'  				ReadStreamResult.Success' events' null' false' String.Empty' 0' message.FromEventNumber' true' 1000);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_deleter.when_deleting,with_emitted_stream_deleter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_deleter\when_deleting\with_emitted_stream_deleter.cs,Handle,The following statement contains a magic number: reply = new ClientMessage.ReadStreamEventsForwardCompleted(message.CorrelationId' message.EventStreamId'  					message.FromEventNumber' message.MaxCount'  					ReadStreamResult.Success' events' null' false' String.Empty' message.FromEventNumber + 1'  					message.FromEventNumber' true' 1000);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_deleter.when_deleting,with_multiple_tracked_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_deleter\when_deleting\with_multiple_tracked_streams.cs,Given,The following statement contains a magic number: _emittedStreamsTracker.TrackEmittedStream(new EmittedEvent[] {  					new EmittedDataEvent(  						String.Format(_testStreamFormat' i)' Guid.NewGuid()' "type1"' true'  						"data"' null' CheckpointTag.FromPosition(0' 100' 50)' null)'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_deleter.when_deleting,with_multiple_tracked_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_deleter\when_deleting\with_multiple_tracked_streams.cs,Given,The following statement contains a magic number: _emittedStreamsTracker.TrackEmittedStream(new EmittedEvent[] {  					new EmittedDataEvent(  						String.Format(_testStreamFormat' i)' Guid.NewGuid()' "type1"' true'  						"data"' null' CheckpointTag.FromPosition(0' 100' 50)' null)'  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_deleter.when_deleting,with_multiple_tracked_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_deleter\when_deleting\with_multiple_tracked_streams.cs,Given,The following statement contains a magic number: !_eventAppeared.Wait(TimeSpan.FromSeconds(10))
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_deleter.when_deleting,with_multiple_tracked_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_deleter\when_deleting\with_multiple_tracked_streams.cs,When,The following statement contains a magic number: !_resetEvent.WaitOne(TimeSpan.FromSeconds(10))
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_deleter.when_deleting,with_no_emitted_streams_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_deleter\when_deleting\with_no_emitted_streams_stream.cs,should_have_called_completed,The following statement contains a magic number: !_resetEvent.WaitOne(TimeSpan.FromSeconds(10))
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_tracker.when_tracking,with_tracking_disabled,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_tracker\when_tracking\with_tracking_disabled.cs,When,The following statement contains a magic number: _emittedStreamsTracker.TrackEmittedStream(new EmittedEvent[] {  				new EmittedDataEvent(  					"test_stream"' Guid.NewGuid()' "type1"' true'  					"data"' null' CheckpointTag.FromPosition(0' 100' 50)' null' null)  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_tracker.when_tracking,with_tracking_disabled,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_tracker\when_tracking\with_tracking_disabled.cs,When,The following statement contains a magic number: _emittedStreamsTracker.TrackEmittedStream(new EmittedEvent[] {  				new EmittedDataEvent(  					"test_stream"' Guid.NewGuid()' "type1"' true'  					"data"' null' CheckpointTag.FromPosition(0' 100' 50)' null' null)  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_tracker.when_tracking,with_tracking_disabled,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_tracker\when_tracking\with_tracking_disabled.cs,When,The following statement contains a magic number: _eventAppeared.Wait(TimeSpan.FromSeconds(5));
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_tracker.when_tracking,with_tracking_disabled,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_tracker\when_tracking\with_tracking_disabled.cs,should_write_a_stream_tracked_event,The following statement contains a magic number: var result = _conn.ReadStreamEventsForwardAsync(_projectionNamesBuilder.GetEmittedStreamsName()' 0' 200'  				false' _credentials).Result;
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_tracker.when_tracking,with_tracking_enabled,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_tracker\when_tracking\with_tracking_enabled.cs,When,The following statement contains a magic number: _emittedStreamsTracker.TrackEmittedStream(new EmittedEvent[] {  				new EmittedDataEvent(  					"test_stream"' Guid.NewGuid()' "type1"' true'  					"data"' null' CheckpointTag.FromPosition(0' 100' 50)' null' null)  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_tracker.when_tracking,with_tracking_enabled,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_tracker\when_tracking\with_tracking_enabled.cs,When,The following statement contains a magic number: _emittedStreamsTracker.TrackEmittedStream(new EmittedEvent[] {  				new EmittedDataEvent(  					"test_stream"' Guid.NewGuid()' "type1"' true'  					"data"' null' CheckpointTag.FromPosition(0' 100' 50)' null' null)  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_tracker.when_tracking,with_tracking_enabled,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_tracker\when_tracking\with_tracking_enabled.cs,When,The following statement contains a magic number: _eventAppeared.Wait(TimeSpan.FromSeconds(5));
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_streams_tracker.when_tracking,with_tracking_enabled,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_tracker\when_tracking\with_tracking_enabled.cs,should_write_a_stream_tracked_event,The following statement contains a magic number: var result = _conn.ReadStreamEventsForwardAsync(_projectionNamesBuilder.GetEmittedStreamsName()' 0' 200'  				false' _credentials).Result;
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream_manager.when_tracking,with_tracking_enabled_with_duplicate_event_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_tracker\when_tracking\with_tracking_enabled_with_duplicate_event_streams.cs,When,The following statement contains a magic number: _emittedStreamsTracker.TrackEmittedStream(new EmittedEvent[] {  				new EmittedDataEvent(  					"test_stream"' Guid.NewGuid()' "type1"' true'  					"data"' null' CheckpointTag.FromPosition(0' 100' 50)' null' null)'  				new EmittedDataEvent(  					"test_stream"' Guid.NewGuid()' "type1"' true'  					"data"' null' CheckpointTag.FromPosition(0' 100' 50)' null' null)  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream_manager.when_tracking,with_tracking_enabled_with_duplicate_event_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_tracker\when_tracking\with_tracking_enabled_with_duplicate_event_streams.cs,When,The following statement contains a magic number: _emittedStreamsTracker.TrackEmittedStream(new EmittedEvent[] {  				new EmittedDataEvent(  					"test_stream"' Guid.NewGuid()' "type1"' true'  					"data"' null' CheckpointTag.FromPosition(0' 100' 50)' null' null)'  				new EmittedDataEvent(  					"test_stream"' Guid.NewGuid()' "type1"' true'  					"data"' null' CheckpointTag.FromPosition(0' 100' 50)' null' null)  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream_manager.when_tracking,with_tracking_enabled_with_duplicate_event_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_tracker\when_tracking\with_tracking_enabled_with_duplicate_event_streams.cs,When,The following statement contains a magic number: _emittedStreamsTracker.TrackEmittedStream(new EmittedEvent[] {  				new EmittedDataEvent(  					"test_stream"' Guid.NewGuid()' "type1"' true'  					"data"' null' CheckpointTag.FromPosition(0' 100' 50)' null' null)'  				new EmittedDataEvent(  					"test_stream"' Guid.NewGuid()' "type1"' true'  					"data"' null' CheckpointTag.FromPosition(0' 100' 50)' null' null)  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream_manager.when_tracking,with_tracking_enabled_with_duplicate_event_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_tracker\when_tracking\with_tracking_enabled_with_duplicate_event_streams.cs,When,The following statement contains a magic number: _emittedStreamsTracker.TrackEmittedStream(new EmittedEvent[] {  				new EmittedDataEvent(  					"test_stream"' Guid.NewGuid()' "type1"' true'  					"data"' null' CheckpointTag.FromPosition(0' 100' 50)' null' null)'  				new EmittedDataEvent(  					"test_stream"' Guid.NewGuid()' "type1"' true'  					"data"' null' CheckpointTag.FromPosition(0' 100' 50)' null' null)  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream_manager.when_tracking,with_tracking_enabled_with_duplicate_event_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_tracker\when_tracking\with_tracking_enabled_with_duplicate_event_streams.cs,When,The following statement contains a magic number: _eventAppeared.Wait(TimeSpan.FromSeconds(5));
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream_manager.when_tracking,with_tracking_enabled_with_duplicate_event_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_streams_tracker\when_tracking\with_tracking_enabled_with_duplicate_event_streams.cs,should_at_best_attempt_to_track_a_unique_list_of_streams,The following statement contains a magic number: var result = _conn.ReadStreamEventsForwardAsync(_projectionNamesBuilder.GetEmittedStreamsName()' 0' 200'  				false' _credentials).Result;
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 0' -1)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 0' -1)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 0' -1)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,requests_restart_if_different_smaller_tag,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 50)' CheckpointTag.FromPosition(0' 40' 20))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,requests_restart_if_different_smaller_tag,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 50)' CheckpointTag.FromPosition(0' 40' 20))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,requests_restart_if_different_smaller_tag,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 50)' CheckpointTag.FromPosition(0' 40' 20))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,requests_restart_if_different_smaller_tag,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 50)' CheckpointTag.FromPosition(0' 40' 20))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,publishes_all_events_even_with_smaller_tag,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 40' 20)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,publishes_all_events_even_with_smaller_tag,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 40' 20)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,requests_restart_even_if_expected_tag_is_the_same_but_epoch,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 100' 50))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,requests_restart_even_if_expected_tag_is_the_same_but_epoch,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 100' 50))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,requests_restart_even_if_expected_tag_is_the_same_but_epoch,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 100' 50))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,requests_restart_even_if_expected_tag_is_the_same_but_epoch,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 100' 50))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,metadata_include_correct_version,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,metadata_include_correct_version,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,metadata_include_correct_version,The following statement contains a magic number: Assert.AreEqual(new ProjectionVersion(1' 2' 2)' metaData.Version);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,metadata_include_correct_version,The following statement contains a magic number: Assert.AreEqual(new ProjectionVersion(1' 2' 2)' metaData.Version);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_at_the_same_position.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_at_the_same_position.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_at_the_same_position.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_at_the_same_position.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_at_the_same_position.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_at_the_same_position.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_at_the_same_position.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 100' 50)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_at_the_same_position.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 100' 50)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_at_the_same_position.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 100' 50)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_at_the_same_position.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 100' 50)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_at_the_same_position.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 100' 50)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_at_the_same_position.cs,truncates_existing_stream_at_correct_position,The following statement contains a magic number: HelperExtensions.AssertJson(new {___tb = 2}' writes[0].Data.ParseJson<JObject>());
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_at_the_same_position.cs,publishes_all_events,The following statement contains a magic number: Assert.AreEqual(3' writtenEvents.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_at_the_same_position.cs,publishes_all_events,The following statement contains a magic number: Assert.AreEqual("type3"' writtenEvents[2].EventType);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_at_the_same_position.cs,reports_correct_event_numbers,The following statement contains a magic number: Assert.AreEqual(2' _1);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_at_the_same_position.cs,reports_correct_event_numbers,The following statement contains a magic number: Assert.AreEqual(3' _2);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_at_the_same_position.cs,reports_correct_event_numbers,The following statement contains a magic number: Assert.AreEqual(4' _3);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_in_different_epochs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_in_different_epochs.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_in_different_epochs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_in_different_epochs.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_in_different_epochs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_in_different_epochs.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_in_different_epochs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_in_different_epochs.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_in_different_epochs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_in_different_epochs.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_in_different_epochs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_in_different_epochs.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_in_different_epochs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_in_different_epochs.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 20' 10)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_in_different_epochs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_in_different_epochs.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 20' 10)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_in_different_epochs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_in_different_epochs.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 20' 10)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_in_different_epochs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_in_different_epochs.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 20' 10)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_in_different_epochs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_in_different_epochs.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 20' 10)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_in_different_epochs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_in_different_epochs.cs,publishes_all_events,The following statement contains a magic number: Assert.AreEqual(2' writtenEvents.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_in_different_epochs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_in_different_epochs.cs,reports_correct_event_numbers,The following statement contains a magic number: Assert.AreEqual(2' _2);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_emits_with_previously_written_events_in_different_epochs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_epoch\when_handling_emits_with_previously_written_events_in_different_epochs.cs,reports_correct_event_numbers,The following statement contains a magic number: Assert.AreEqual(3' _3);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_a_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_a_timeout.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_a_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_a_timeout.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_a_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_a_timeout.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_a_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_a_timeout.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_a_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_a_timeout.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_a_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_a_timeout.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					null)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_a_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_a_timeout.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)' CheckpointTag.Empty'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_a_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_a_timeout.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)' CheckpointTag.Empty'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch,when_handling_a_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_a_timeout.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)' CheckpointTag.Empty'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_projection,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_projection\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 0' -1)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_projection,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_projection\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 0' -1)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_projection,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_projection\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 2' 2)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 0' -1)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_projection,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_projection\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,fails_the_projection,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 50)' CheckpointTag.FromPosition(0' 40' 20))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_projection,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_projection\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,fails_the_projection,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 50)' CheckpointTag.FromPosition(0' 40' 20))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_projection,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_projection\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,fails_the_projection,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 50)' CheckpointTag.FromPosition(0' 40' 20))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream.another_projection,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\another_projection\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,fails_the_projection,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 50)' CheckpointTag.FromPosition(0' 40' 20))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,a_checkpoint_requested_on_a_non_started_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\a_checkpoint_requested_on_a_non_started_stream.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' 50)' new ProjectionVersion(1' 0' 0)'  				new TransactionFilePositionTagger(0)' CheckpointTag.FromPosition(0' 0' -1)' _bus' _ioDispatcher'  				_readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_a_read_completes_before_a_timeout_in_recovery,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_a_read_completes_before_a_timeout_in_recovery.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				TestStreamId'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_a_read_completes_before_a_timeout_in_recovery,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_a_read_completes_before_a_timeout_in_recovery.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				TestStreamId'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_a_read_completes_before_a_timeout_in_recovery,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_a_read_completes_before_a_timeout_in_recovery.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				TestStreamId'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_a_read_completes_before_a_timeout_in_recovery,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_a_read_completes_before_a_timeout_in_recovery.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						TestStreamId' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_a_read_completes_before_a_timeout_in_recovery,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_a_read_completes_before_a_timeout_in_recovery.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						TestStreamId' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_a_read_times_out_in_recovery,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_a_read_times_out_in_recovery.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				TestStreamId'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_a_read_times_out_in_recovery,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_a_read_times_out_in_recovery.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				TestStreamId'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_a_read_times_out_in_recovery,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_a_read_times_out_in_recovery.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				TestStreamId'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_a_read_times_out_in_recovery,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_a_read_times_out_in_recovery.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						TestStreamId' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_a_read_times_out_in_recovery,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_a_read_times_out_in_recovery.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						TestStreamId' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_a_read_times_out_in_recovery,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_a_read_times_out_in_recovery.cs,should_retry_the_read_upon_the_read_timing_out,The following statement contains a magic number: Assert.AreEqual(2' readEventsBackwards.Count());
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_checkpoint_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_checkpoint_requested.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' 50)' new ProjectionVersion(1' 0' 0)'  				new TransactionFilePositionTagger(0)' CheckpointTag.FromPosition(0' 0' -1)' _bus' _ioDispatcher'  				_readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_checkpoint_requested_but_disabled,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_checkpoint_requested_but_disabled.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' 50)' new ProjectionVersion(1' 0' 0)'  				new TransactionFilePositionTagger(0)' CheckpointTag.FromPosition(0' 0' -1)' _bus' _ioDispatcher'  				_readyHandler'  				noCheckpoints: true);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_checkpoint_requested_with_all_writes_already_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_checkpoint_requested_with_all_writes_already_completed.cs,Setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' 50)' new ProjectionVersion(1' 0' 0)'  				new TransactionFilePositionTagger(0)' CheckpointTag.FromPosition(0' 0' -1)' _bus' _ioDispatcher'  				_readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_checkpoint_requested_with_all_writes_already_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_checkpoint_requested_with_all_writes_already_completed.cs,Setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test"' Guid.NewGuid()' "type"' true' "data"' null' CheckpointTag.FromPosition(0' 10' 5)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_checkpoint_requested_with_all_writes_already_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_checkpoint_requested_with_all_writes_already_completed.cs,Setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test"' Guid.NewGuid()' "type"' true' "data"' null' CheckpointTag.FromPosition(0' 10' 5)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_checkpoint_requested_with_pending_writes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_checkpoint_requested_with_pending_writes.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' 50)' new ProjectionVersion(1' 0' 0)'  				new TransactionFilePositionTagger(0)' CheckpointTag.FromPosition(0' 0' -1)' _bus' _ioDispatcher'  				_readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_checkpoint_requested_with_pending_writes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_checkpoint_requested_with_pending_writes.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test"' Guid.NewGuid()' "type"' true' "data"' null' CheckpointTag.FromPosition(0' 100' 50)'  						null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_checkpoint_requested_with_pending_writes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_checkpoint_requested_with_pending_writes.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test"' Guid.NewGuid()' "type"' true' "data"' null' CheckpointTag.FromPosition(0' 100' 50)'  						null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_creating_an_emitted_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_creating_an_emitted_stream.cs,null_stream_id_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EmittedStream(  					null'  					new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  						new EmittedStream.WriterConfiguration.StreamMetadata()' null' 50)'  					new ProjectionVersion(1' 0' 0)'  					new TransactionFilePositionTagger(0)' CheckpointTag.FromPosition(0' 0' -1)' _fakePublisher'  					_ioDispatcher'  					new TestCheckpointManagerMessageHandler());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_creating_an_emitted_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_creating_an_emitted_stream.cs,empty_stream_id_throws_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EmittedStream(  					""'  					new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  						new EmittedStream.WriterConfiguration.StreamMetadata()' null' 50)'  					new ProjectionVersion(1' 0' 0)'  					new TransactionFilePositionTagger(0)' CheckpointTag.FromPosition(0' 0' -1)' _fakePublisher'  					_ioDispatcher'  					new TestCheckpointManagerMessageHandler());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_creating_an_emitted_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_creating_an_emitted_stream.cs,null_from_throws_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EmittedStream(  					""'  					new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  						new EmittedStream.WriterConfiguration.StreamMetadata()' null' 50)'  					new ProjectionVersion(1' 0' 0)'  					new TransactionFilePositionTagger(0)' null' _fakePublisher' _ioDispatcher'  					new TestCheckpointManagerMessageHandler());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_creating_an_emitted_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_creating_an_emitted_stream.cs,null_publisher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EmittedStream(  					"test"'  					new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  						new EmittedStream.WriterConfiguration.StreamMetadata()' null' 50)'  					new ProjectionVersion(1' 0' 0)'  					new TransactionFilePositionTagger(0)' CheckpointTag.FromPosition(0' 0' -1)' null' _ioDispatcher'  					new TestCheckpointManagerMessageHandler());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_creating_an_emitted_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_creating_an_emitted_stream.cs,null_io_dispatcher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EmittedStream(  					"test"'  					new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  						new EmittedStream.WriterConfiguration.StreamMetadata()' null' 50)'  					new ProjectionVersion(1' 0' 0)'  					new TransactionFilePositionTagger(0)' CheckpointTag.FromPosition(0' 0' -1)' _fakePublisher' null'  					new TestCheckpointManagerMessageHandler());  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_creating_an_emitted_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_creating_an_emitted_stream.cs,null_ready_handler_throws_argumenbt_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EmittedStream(  					"test"'  					new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  						new EmittedStream.WriterConfiguration.StreamMetadata()' null' 50)'  					new ProjectionVersion(1' 0' 0)'  					new TransactionFilePositionTagger(0)' CheckpointTag.FromPosition(0' 0' -1)' _fakePublisher'  					_ioDispatcher' null);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_creating_an_emitted_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_creating_an_emitted_stream.cs,it_can_be_created,The following statement contains a magic number: new EmittedStream(  				"test"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' 50)' new ProjectionVersion(1' 0' 0)'  				new TransactionFilePositionTagger(0)' CheckpointTag.FromPosition(0' 0' -1)' _fakePublisher'  				_ioDispatcher'  				new TestCheckpointManagerMessageHandler());
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_the_not_started_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_the_not_started_stream.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' 50)' new ProjectionVersion(1' 0' 0)'  				new TransactionFilePositionTagger(0)' CheckpointTag.FromPosition(0' 0' -1)' _bus' _ioDispatcher'  				_readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_the_not_started_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_the_not_started_stream.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test"' Guid.NewGuid()' "type"' true' "data"' null' CheckpointTag.FromPosition(0' 200' 150)'  						null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_the_not_started_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_the_not_started_stream.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test"' Guid.NewGuid()' "type"' true' "data"' null' CheckpointTag.FromPosition(0' 200' 150)'  						null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_the_started_in_recovery_stream.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_the_started_in_recovery_stream.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_the_started_in_recovery_stream.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_the_started_in_recovery_stream.cs,throws_if_position_is_prior_to_from_position,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_stream.EmitEvents(  					new[] {  						new EmittedDataEvent(  							"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 20' 10)' null)  					});  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_the_started_in_recovery_stream.cs,throws_if_position_is_prior_to_from_position,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_stream.EmitEvents(  					new[] {  						new EmittedDataEvent(  							"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 20' 10)' null)  					});  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_the_started_in_recovery_stream.cs,does_not_publish_already_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 50)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_the_started_in_recovery_stream.cs,does_not_publish_already_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 50)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_the_started_in_recovery_stream.cs,publishes_not_yet_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_the_started_in_recovery_stream.cs,publishes_not_yet_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_the_started_in_recovery_stream.cs,does_not_reply_with_write_completed_message,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_the_started_in_recovery_stream.cs,does_not_reply_with_write_completed_message,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_the_started_in_recovery_stream.cs,reply_with_write_completed_message_when_write_completes,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_the_started_in_recovery_stream.cs,reply_with_write_completed_message_when_write_completes,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_to_the_nonexisting_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_to_the_nonexisting_stream.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_to_the_nonexisting_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_to_the_nonexisting_stream.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_to_the_nonexisting_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_to_the_nonexisting_stream.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_to_the_nonexisting_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_to_the_nonexisting_stream.cs,throws_if_position_is_prior_to_from_position,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_stream.EmitEvents(  					new[] {  						new EmittedDataEvent(  							"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 20' 10)' null)  					});  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_to_the_nonexisting_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_to_the_nonexisting_stream.cs,throws_if_position_is_prior_to_from_position,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_stream.EmitEvents(  					new[] {  						new EmittedDataEvent(  							"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 20' 10)' null)  					});  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_to_the_nonexisting_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_to_the_nonexisting_stream.cs,publishes_already_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 50)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_to_the_nonexisting_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_to_the_nonexisting_stream.cs,publishes_already_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 50)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_to_the_nonexisting_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_to_the_nonexisting_stream.cs,publishes_not_yet_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_to_the_nonexisting_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_to_the_nonexisting_stream.cs,publishes_not_yet_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_to_the_nonexisting_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_to_the_nonexisting_stream.cs,does_not_reply_with_write_completed_message,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_to_the_nonexisting_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_to_the_nonexisting_stream.cs,does_not_reply_with_write_completed_message,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_to_the_nonexisting_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_to_the_nonexisting_stream.cs,reply_with_write_completed_message_when_write_completes,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_to_the_nonexisting_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_to_the_nonexisting_stream.cs,reply_with_write_completed_message_when_write_completes,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_caused_by_and_correlation_id,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_caused_by_and_correlation_id.cs,setup,The following statement contains a magic number: _emittedDataEvent = new EmittedDataEvent(  				"test_stream"' Guid.NewGuid()' "type"' true' "data"' null' CheckpointTag.FromPosition(0' 200' 150)'  				null);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_caused_by_and_correlation_id,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_caused_by_and_correlation_id.cs,setup,The following statement contains a magic number: _emittedDataEvent = new EmittedDataEvent(  				"test_stream"' Guid.NewGuid()' "type"' true' "data"' null' CheckpointTag.FromPosition(0' 200' 150)'  				null);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_caused_by_and_correlation_id,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_caused_by_and_correlation_id.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_caused_by_and_correlation_id,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_caused_by_and_correlation_id.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_caused_by_and_correlation_id,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_caused_by_and_correlation_id.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_committed_callback,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_committed_callback.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 0' -1)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_committed_callback,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_committed_callback.cs,completes_already_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						(string)"test_stream"' Guid.NewGuid()' (string)"type"' (bool)true'  						(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)'  						(CheckpointTag)null' v => invoked = true)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_committed_callback,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_committed_callback.cs,completes_already_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						(string)"test_stream"' Guid.NewGuid()' (string)"type"' (bool)true'  						(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)'  						(CheckpointTag)null' v => invoked = true)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_committed_callback,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_committed_callback.cs,completes_not_yet_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						(string)"test_stream"' Guid.NewGuid()' (string)"type"' (bool)true'  						(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 200' 150)'  						(CheckpointTag)null' v => invoked = true)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_committed_callback,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_committed_callback.cs,completes_not_yet_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						(string)"test_stream"' Guid.NewGuid()' (string)"type"' (bool)true'  						(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 200' 150)'  						(CheckpointTag)null' v => invoked = true)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 0' -1)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,does_not_publish_already_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 50)' CheckpointTag.FromPosition(0' 40' 20))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,does_not_publish_already_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 50)' CheckpointTag.FromPosition(0' 40' 20))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,does_not_publish_already_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 50)' CheckpointTag.FromPosition(0' 40' 20))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,does_not_publish_already_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 50)' CheckpointTag.FromPosition(0' 40' 20))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,publishes_not_yet_published_events_if_expected_tag_is_the_same,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 100' 50))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,publishes_not_yet_published_events_if_expected_tag_is_the_same,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 100' 50))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,publishes_not_yet_published_events_if_expected_tag_is_the_same,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 100' 50))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,publishes_not_yet_published_events_if_expected_tag_is_the_same,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 100' 50))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,does_not_publish_not_yet_published_events_if_expected_tag_is_before_last_event_tag,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 40' 20))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,does_not_publish_not_yet_published_events_if_expected_tag_is_before_last_event_tag,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 40' 20))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,does_not_publish_not_yet_published_events_if_expected_tag_is_before_last_event_tag,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 40' 20))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,does_not_publish_not_yet_published_events_if_expected_tag_is_before_last_event_tag,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 40' 20))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,correct_stream_id_is_set_on_write_events_message,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 100' 50))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,correct_stream_id_is_set_on_write_events_message,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 100' 50))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,correct_stream_id_is_set_on_write_events_message,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 100' 50))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,correct_stream_id_is_set_on_write_events_message,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 100' 50))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,metadata_include_commit_and_prepare_positions,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 100' 50))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,metadata_include_commit_and_prepare_positions,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 100' 50))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,metadata_include_commit_and_prepare_positions,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 100' 50))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,metadata_include_commit_and_prepare_positions,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' CheckpointTag.FromPosition(0' 100' 50))  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,metadata_include_commit_and_prepare_positions,The following statement contains a magic number: Assert.AreEqual(200' metaData.Tag.CommitPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream.cs,metadata_include_commit_and_prepare_positions,The following statement contains a magic number: Assert.AreEqual(150' metaData.Tag.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_extra_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_extra_metadata.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_extra_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_extra_metadata.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_extra_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_extra_metadata.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_extra_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_extra_metadata.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"'  						new ExtraMetaData(new Dictionary<string' string> {{"a"' "1"}' {"b"' "{}"}})'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_extra_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_extra_metadata.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"'  						new ExtraMetaData(new Dictionary<string' string> {{"a"' "1"}' {"b"' "{}"}})'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_extra_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_extra_metadata.cs,combines_checkpoint_tag_with_extra_metadata,The following statement contains a magic number: Assert.AreEqual(CheckpointTag.FromPosition(0' 200' 150)' checkpoint);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_extra_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_extra_metadata.cs,combines_checkpoint_tag_with_extra_metadata,The following statement contains a magic number: Assert.AreEqual(CheckpointTag.FromPosition(0' 200' 150)' checkpoint);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_not_ready_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_not_ready_event.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 0' -1)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_not_ready_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_not_ready_event.cs,replies_with_await_message,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedLinkTo(  						"test_stream"' Guid.NewGuid()' "other_stream"' CheckpointTag.FromPosition(0' 1100' 1000)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_not_ready_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_not_ready_event.cs,replies_with_await_message,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedLinkTo(  						"test_stream"' Guid.NewGuid()' "other_stream"' CheckpointTag.FromPosition(0' 1100' 1000)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_not_ready_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_not_ready_event.cs,processes_write_on_write_completed_if_ready,The following statement contains a magic number: var linkTo = new EmittedLinkTo(  				"test_stream"' Guid.NewGuid()' "other_stream"' CheckpointTag.FromPosition(0' 1100' 1000)' null);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_not_ready_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_not_ready_event.cs,processes_write_on_write_completed_if_ready,The following statement contains a magic number: var linkTo = new EmittedLinkTo(  				"test_stream"' Guid.NewGuid()' "other_stream"' CheckpointTag.FromPosition(0' 1100' 1000)' null);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_not_ready_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_not_ready_event.cs,replies_with_await_message_on_write_completed_if_not_yet_ready,The following statement contains a magic number: var linkTo = new EmittedLinkTo(  				"test_stream"' Guid.NewGuid()' "other_stream"' CheckpointTag.FromPosition(0' 1100' 1000)' null);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_not_ready_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_not_ready_event.cs,replies_with_await_message_on_write_completed_if_not_yet_ready,The following statement contains a magic number: var linkTo = new EmittedLinkTo(  				"test_stream"' Guid.NewGuid()' "other_stream"' CheckpointTag.FromPosition(0' 1100' 1000)' null);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_not_ready_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_not_ready_event.cs,replies_with_await_message_on_write_completed_if_not_yet_ready,The following statement contains a magic number: Assert.AreEqual(2' _readyHandler.HandledStreamAwaitingMessage.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_stream_metadata_to_empty_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_stream_metadata.cs,Given,The following statement contains a magic number: _streamMetadata = new EmittedStream.WriterConfiguration.StreamMetadata(maxCount: 10);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_stream_metadata_to_empty_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_stream_metadata.cs,Given,The following statement contains a magic number: _writerConfiguration = new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  				_streamMetadata' null' maxWriteBatchLength: 50);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_stream_metadata_to_empty_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_stream_metadata.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"' _writerConfiguration' new ProjectionVersion(1' 0' 0)'  				new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)' _bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_stream_metadata_to_empty_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_stream_metadata.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"' _writerConfiguration' new ProjectionVersion(1' 0' 0)'  				new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)' _bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_stream_metadata_to_empty_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_stream_metadata.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_stream_metadata_to_empty_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_stream_metadata.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_stream_metadata_to_empty_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_stream_metadata.cs,does_not_write_stream_metadata_second_time,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 400' 350)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_stream_metadata_to_empty_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_stream_metadata.cs,does_not_write_stream_metadata_second_time,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 400' 350)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_write_as_configured,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_write_as_configured.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' _writeAs' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_write_as_configured,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_write_as_configured.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' _writeAs' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_write_as_configured,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_write_as_configured.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' _writeAs' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_write_as_configured,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_write_as_configured.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_an_emit_with_write_as_configured,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_an_emit_with_write_as_configured.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_in_invalid_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_in_invalid_order.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_in_invalid_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_in_invalid_order.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_in_invalid_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_in_invalid_order.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 40' 30)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_in_invalid_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_in_invalid_order.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 90)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_in_invalid_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_in_invalid_order.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 100' 90)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_in_invalid_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_in_invalid_order.cs,throws_if_position_is_prior_to_the_last_event_position,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_stream.EmitEvents(  					new[] {  						new EmittedDataEvent(  							"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 80' 70)' null)  					});  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_in_invalid_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_in_invalid_order.cs,throws_if_position_is_prior_to_the_last_event_position,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_stream.EmitEvents(  					new[] {  						new EmittedDataEvent(  							"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  							CheckpointTag.FromPosition(0' 80' 70)' null)  					});  			});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 100' 50)' _bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 100' 50)' _bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 100' 50)' _bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,does_not_publish_already_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type2"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,does_not_publish_already_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type2"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,does_not_publish_already_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type3"' true' "data"' null'  						CheckpointTag.FromPosition(0' 300' 250)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,does_not_publish_already_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type3"' true' "data"' null'  						CheckpointTag.FromPosition(0' 300' 250)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,does_not_fail_the_projection_if_events_are_skipped,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type3"' true' "data"' null'  						CheckpointTag.FromPosition(0' 300' 250)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,does_not_fail_the_projection_if_events_are_skipped,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type3"' true' "data"' null'  						CheckpointTag.FromPosition(0' 300' 250)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,fails_the_projection_if_events_are_at_different_positions,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type3"' true' "data"' null'  						CheckpointTag.FromPosition(0' 250' 220)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,fails_the_projection_if_events_are_at_different_positions,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type3"' true' "data"' null'  						CheckpointTag.FromPosition(0' 250' 220)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,publishes_not_yet_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 400' 350)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,publishes_not_yet_published_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 400' 350)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,replies_with_write_completed_message_for_existing_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type2"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,replies_with_write_completed_message_for_existing_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type2"' true' "data"' null'  						CheckpointTag.FromPosition(0' 200' 150)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,retrieves_event_number_for_previously_written_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  						(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 200' 150)'  						(CheckpointTag)null' v => eventNumber = v)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,retrieves_event_number_for_previously_written_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  						(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 200' 150)'  						(CheckpointTag)null' v => eventNumber = v)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,reply_with_write_completed_message_when_write_completes,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 400' 350)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,reply_with_write_completed_message_when_write_completes,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test_stream"' Guid.NewGuid()' "type"' true' "data"' null'  						CheckpointTag.FromPosition(0' 400' 350)' null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,reports_event_number_for_new_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						(string)"test_stream"' Guid.NewGuid()' (string)"type"' (bool)true'  						(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 400' 350)'  						(CheckpointTag)null' v => eventNumber = v)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,reports_event_number_for_new_events,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						(string)"test_stream"' Guid.NewGuid()' (string)"type"' (bool)true'  						(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 400' 350)'  						(CheckpointTag)null' v => eventNumber = v)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events.cs,reports_event_number_for_new_events,The following statement contains a magic number: Assert.AreEqual(3' eventNumber);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events_at_the_same_position.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events_at_the_same_position.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events_at_the_same_position.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events_at_the_same_position.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events_at_the_same_position.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events_at_the_same_position.cs,CreateEventBatch,The following statement contains a magic number: return new EmittedEvent[] {  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type1"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _1 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type2"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _2 = v)'  				new EmittedDataEvent(  					(string)"test_stream"' Guid.NewGuid()' (string)"type3"' (bool)true'  					(string)"data"' (ExtraMetaData)null' CheckpointTag.FromPosition(0' 100' 50)' (CheckpointTag)null'  					v => _3 = v)  			};
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events_at_the_same_position.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 20' 10)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events_at_the_same_position.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 20' 10)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events_at_the_same_position.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test_stream"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' maxWriteBatchLength: 50)'  				new ProjectionVersion(1' 0' 0)' new TransactionFilePositionTagger(0)'  				CheckpointTag.FromPosition(0' 20' 10)'  				_bus' _ioDispatcher' _readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_handling_emits_with_previously_written_events_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_handling_emits_with_previously_written_events_at_the_same_position.cs,reports_correct_event_numbers,The following statement contains a magic number: Assert.AreEqual(2' _3);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_the_stream_is_started,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_the_stream_is_started.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' 50)' new ProjectionVersion(1' 0' 0)'  				new TransactionFilePositionTagger(0)' CheckpointTag.FromPosition(0' 0' -1)' _bus' _ioDispatcher'  				_readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_the_stream_is_started_with_already_emitted_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_the_stream_is_started_with_already_emitted_events.cs,setup,The following statement contains a magic number: _stream = new EmittedStream(  				"test"'  				new EmittedStream.WriterConfiguration(new EmittedStreamsWriter(_ioDispatcher)'  					new EmittedStream.WriterConfiguration.StreamMetadata()' null' 50)' new ProjectionVersion(1' 0' 0)'  				new TransactionFilePositionTagger(0)' CheckpointTag.FromPosition(0' 0' -1)' _bus' _ioDispatcher'  				_readyHandler);
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_the_stream_is_started_with_already_emitted_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_the_stream_is_started_with_already_emitted_events.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test"' Guid.NewGuid()' "type"' true' "data"' null' CheckpointTag.FromPosition(0' 100' 50)'  						null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services.emitted_stream,when_the_stream_is_started_with_already_emitted_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\emitted_stream\when_the_stream_is_started_with_already_emitted_events.cs,setup,The following statement contains a magic number: _stream.EmitEvents(  				new[] {  					new EmittedDataEvent(  						"test"' Guid.NewGuid()' "type"' true' "data"' null' CheckpointTag.FromPosition(0' 100' 50)'  						null)  				});
Magic Number,EventStore.Projections.Core.Tests.Services,SpecificationWithEmittedStreamsTrackerAndDeleter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\SpecificationWithEmittedStreamsTrackerAndDeleter.cs,Given,The following statement contains a magic number: _emittedStreamsTracker = new EmittedStreamsTracker(_ioDispatcher'  				new ProjectionConfig(null' 1000' 1000 * 1000' 100' 500' true' true' false' false' false'  					_trackEmittedStreams' 10000' 1)' _projectionNamesBuilder);
Magic Number,EventStore.Projections.Core.Tests.Services,SpecificationWithEmittedStreamsTrackerAndDeleter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\SpecificationWithEmittedStreamsTrackerAndDeleter.cs,Given,The following statement contains a magic number: _emittedStreamsTracker = new EmittedStreamsTracker(_ioDispatcher'  				new ProjectionConfig(null' 1000' 1000 * 1000' 100' 500' true' true' false' false' false'  					_trackEmittedStreams' 10000' 1)' _projectionNamesBuilder);
Magic Number,EventStore.Projections.Core.Tests.Services,SpecificationWithEmittedStreamsTrackerAndDeleter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\SpecificationWithEmittedStreamsTrackerAndDeleter.cs,Given,The following statement contains a magic number: _emittedStreamsTracker = new EmittedStreamsTracker(_ioDispatcher'  				new ProjectionConfig(null' 1000' 1000 * 1000' 100' 500' true' true' false' false' false'  					_trackEmittedStreams' 10000' 1)' _projectionNamesBuilder);
Magic Number,EventStore.Projections.Core.Tests.Services,SpecificationWithEmittedStreamsTrackerAndDeleter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\SpecificationWithEmittedStreamsTrackerAndDeleter.cs,Given,The following statement contains a magic number: _emittedStreamsTracker = new EmittedStreamsTracker(_ioDispatcher'  				new ProjectionConfig(null' 1000' 1000 * 1000' 100' 500' true' true' false' false' false'  					_trackEmittedStreams' 10000' 1)' _projectionNamesBuilder);
Magic Number,EventStore.Projections.Core.Tests.Services,SpecificationWithEmittedStreamsTrackerAndDeleter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\SpecificationWithEmittedStreamsTrackerAndDeleter.cs,Given,The following statement contains a magic number: _emittedStreamsTracker = new EmittedStreamsTracker(_ioDispatcher'  				new ProjectionConfig(null' 1000' 1000 * 1000' 100' 500' true' true' false' false' false'  					_trackEmittedStreams' 10000' 1)' _projectionNamesBuilder);
Magic Number,EventStore.Projections.Core.Tests.Services,SpecificationWithEmittedStreamsTrackerAndDeleter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\SpecificationWithEmittedStreamsTrackerAndDeleter.cs,Given,The following statement contains a magic number: _emittedStreamsTracker = new EmittedStreamsTracker(_ioDispatcher'  				new ProjectionConfig(null' 1000' 1000 * 1000' 100' 500' true' true' false' false' false'  					_trackEmittedStreams' 10000' 1)' _projectionNamesBuilder);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_a_two_step_task_and_the_first_step_completes_immediately,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _t1 = new TestTask(1' 2' 0);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_a_two_step_task_and_the_first_step_completes_immediately,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,process_executes_the_task_up_to_stage_one,The following statement contains a magic number: _q.Process(max: 2);
Magic Number,EventStore.Projections.Core.Tests.Services,when_reinitializing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _t1 = new TestTask(1' 2' 0);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_a_two_step_task_and_both_steps_complete_immediately,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _t1 = new TestTask(1' 2' 1);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_a_two_step_task_and_both_steps_complete_immediately,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,queue_becomes_empty,The following statement contains a magic number: _q.Process(max: 2);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_a_two_step_task_and_both_steps_complete_immediately,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,process_returns_true,The following statement contains a magic number: var processed = _q.Process(max: 2);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_two_two_step_tasks_that_relate_on_first_stage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _t1 = new TestTask(null' 2' stageCorrelations: new object[] {"a"' "a"});
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_two_two_step_tasks_that_relate_on_first_stage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _t2 = new TestTask(null' 2' stageCorrelations: new object[] {"a"' "a"});
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_two_two_step_tasks_and_the_second_completes_first,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _t1 = new TestTask(1' 2);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_two_two_step_tasks_and_the_second_completes_first,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _t2 = new TestTask(2' 2' 0);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_two_two_step_tasks_and_the_second_completes_first,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _t2 = new TestTask(2' 2' 0);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_two_two_step_tasks_and_the_second_completes_first,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _q.Process(max: 2);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_two_two_step_tasks_and_the_second_completes_first,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _q.Process(max: 2);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_two_two_step_tasks_and_the_second_completes_first,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _q.Process(max: 2);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_two_async_async_sync_step_tasks_and_the_second_completes_first,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _t1 = new TestTask(1' 3);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_two_async_async_sync_step_tasks_and_the_second_completes_first,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _t2 = new TestTask(2' 3' 0);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_two_async_async_sync_step_tasks_and_the_second_completes_first,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _t2 = new TestTask(2' 3' 0);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_two_async_async_sync_step_tasks_and_the_second_completes_first,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _q.Process(max: 3);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_two_async_async_sync_step_tasks_and_the_second_completes_first,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _q.Process(max: 3);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_two_async_async_sync_step_tasks_and_the_second_completes_first,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _q.Process(max: 3);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_three_async_async_sync_step_tasks_and_they_complete_starting_from_second,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _t1 = new TestTask(1' 3);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_three_async_async_sync_step_tasks_and_they_complete_starting_from_second,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _t2 = new TestTask(2' 3' 0);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_three_async_async_sync_step_tasks_and_they_complete_starting_from_second,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _t2 = new TestTask(2' 3' 0);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_three_async_async_sync_step_tasks_and_they_complete_starting_from_second,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _t3 = new TestTask(3' 3' 0);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_three_async_async_sync_step_tasks_and_they_complete_starting_from_second,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _t3 = new TestTask(3' 3' 0);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_three_async_async_sync_step_tasks_and_they_complete_starting_from_second,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _q.Process(max: 3);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_three_async_async_sync_step_tasks_and_they_complete_starting_from_second,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _q.Process(max: 3);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_three_async_async_sync_step_tasks_and_they_complete_starting_from_second,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _q.Process(max: 3);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_three_async_async_sync_step_tasks_and_they_complete_starting_from_second,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,first_task_keeps_other_blocked_at_stage_two,The following statement contains a magic number: _q.Process(max: 2);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_three_async_async_sync_step_tasks_and_they_complete_starting_from_second,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,first_task_keeps_other_blocked_at_stage_two,The following statement contains a magic number: _q.Process(max: 2);
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_three_async_async_sync_step_tasks_and_they_complete_starting_from_second,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,first_task_keeps_other_blocked_at_stage_two,The following statement contains a magic number: Assert.That(!_t2.StartedOn(2));
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_three_async_async_sync_step_tasks_and_they_complete_starting_from_second,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,first_task_keeps_other_blocked_at_stage_two,The following statement contains a magic number: Assert.That(!_t3.StartedOn(2));
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_three_async_async_sync_step_tasks_and_they_complete_starting_from_second,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,first_task_completed_at_stage_one_unblock_all,The following statement contains a magic number: Assert.That(_t2.StartedOn(2));
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_three_async_async_sync_step_tasks_and_they_complete_starting_from_second,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,first_task_completed_at_stage_one_unblock_all,The following statement contains a magic number: Assert.That(_t3.StartedOn(2));
Magic Number,EventStore.Projections.Core.Tests.Services,when_enqueuing_two_one_step_tasks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\staged_processing_queue.cs,when,The following statement contains a magic number: _t2 = new TestTask(2' 1);
Magic Number,EventStore.Projections.Core.Tests.Services,TestFixtureWithProjectionCoreService,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\TestFixtureWithProjectionCoreService.cs,Setup,The following statement contains a magic number: ICheckpoint writerCheckpoint = new InMemoryCheckpoint(1000);
Magic Number,EventStore.Projections.Core.Tests.Services,TestFixtureWithProjectionCoreService,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\TestFixtureWithProjectionCoreService.cs,Setup,The following statement contains a magic number: _readerService = new EventReaderCoreService(_bus' ioDispatcher' 10' writerCheckpoint'  				runHeadingReader: true' faultOutOfOrderProjections: true);
Magic Number,EventStore.Projections.Core.Tests.Services,TestFixtureWithProjectionCoreService,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\TestFixtureWithProjectionCoreService.cs,CreateEvent,The following statement contains a magic number: return new ResolvedEvent(  				"test"' -1' "test"' -1' false' new TFPos(10' 5)' new TFPos(10' 5)' Guid.NewGuid()' "t"' false'  				new byte[0]' new byte[0]' null' null' default(DateTime));
Magic Number,EventStore.Projections.Core.Tests.Services,TestFixtureWithProjectionCoreService,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\TestFixtureWithProjectionCoreService.cs,CreateEvent,The following statement contains a magic number: return new ResolvedEvent(  				"test"' -1' "test"' -1' false' new TFPos(10' 5)' new TFPos(10' 5)' Guid.NewGuid()' "t"' false'  				new byte[0]' new byte[0]' null' null' default(DateTime));
Magic Number,EventStore.Projections.Core.Tests.Services,TestFixtureWithProjectionCoreService,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\TestFixtureWithProjectionCoreService.cs,CreateEvent,The following statement contains a magic number: return new ResolvedEvent(  				"test"' -1' "test"' -1' false' new TFPos(10' 5)' new TFPos(10' 5)' Guid.NewGuid()' "t"' false'  				new byte[0]' new byte[0]' null' null' default(DateTime));
Magic Number,EventStore.Projections.Core.Tests.Services,TestFixtureWithProjectionCoreService,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\TestFixtureWithProjectionCoreService.cs,CreateEvent,The following statement contains a magic number: return new ResolvedEvent(  				"test"' -1' "test"' -1' false' new TFPos(10' 5)' new TFPos(10' 5)' Guid.NewGuid()' "t"' false'  				new byte[0]' new byte[0]' null' null' default(DateTime));
Magic Number,when_reading_catalog,with_all_streams_catalog_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\all_streams_catalog_event_reader\when_reading_catalog.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000'  					stopOnEof: true'  					stopAfterNEvents: null);
Magic Number,when_reading_catalog,with_all_streams_catalog_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\all_streams_catalog_event_reader\when_reading_catalog.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000'  					stopOnEof: true'  					stopAfterNEvents: null);
Magic Number,when_reading_catalog,with_all_streams_catalog_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\all_streams_catalog_event_reader\when_reading_catalog.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000'  					stopOnEof: true'  					stopAfterNEvents: null);
Magic Number,when_reading_catalog,with_all_streams_catalog_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\all_streams_catalog_event_reader\when_reading_catalog.cs,returns_all_catalog_events,The following statement contains a magic number: Assert.AreEqual(4' receivedEvents.Length);
Magic Number,when_reading_catalog,with_all_streams_catalog_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\all_streams_catalog_event_reader\when_reading_catalog.cs,events_are_correct,The following statement contains a magic number: var third = receivedEvents[2];
Magic Number,when_reading_catalog,with_all_streams_catalog_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\all_streams_catalog_event_reader\when_reading_catalog.cs,events_are_correct,The following statement contains a magic number: var fourth = receivedEvents[3];
Magic Number,when_reading_catalog,when_starting_from_the_beginning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\all_streams_catalog_event_reader\when_reading_catalog.cs,When,The following statement contains a magic number: var fromZeroPosition = CheckpointTag.FromByStreamPosition(0' ""' -1' null' -1' 100000);
Magic Number,when_reading_catalog,when_starting_from_the_beginning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\all_streams_catalog_event_reader\when_reading_catalog.cs,When,The following statement contains a magic number: var fromZeroPosition = CheckpointTag.FromByStreamPosition(0' "catalog"' -1' null' -1' 1000);
Magic Number,when_reading_catalog,when_starting_from_the_beginning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\all_streams_catalog_event_reader\when_reading_catalog.cs,When,The following statement contains a magic number: var fromZeroPosition = CheckpointTag.FromByStreamPosition(0' ""' -1' null' -1' 1000);
Magic Number,when_reading_catalog,with_catalog_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\by_stream_catalog_event_reader\when_reading_catalog.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: true'  					stopAfterNEvents: null);
Magic Number,when_reading_catalog,with_catalog_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\by_stream_catalog_event_reader\when_reading_catalog.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: true'  					stopAfterNEvents: null);
Magic Number,when_reading_catalog,with_catalog_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\by_stream_catalog_event_reader\when_reading_catalog.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: true'  					stopAfterNEvents: null);
Magic Number,when_reading_catalog,with_catalog_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\by_stream_catalog_event_reader\when_reading_catalog.cs,returns_all_events,The following statement contains a magic number: Assert.AreEqual(6' receivedEvents.Length);
Magic Number,when_reading_catalog,with_catalog_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\by_stream_catalog_event_reader\when_reading_catalog.cs,publishes_partition_eof_on_each_stream_eof,The following statement contains a magic number: Assert.AreEqual(9' messages.Count);
Magic Number,when_reading_catalog,with_catalog_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\by_stream_catalog_event_reader\when_reading_catalog.cs,publishes_partition_eof_on_each_stream_eof,The following statement contains a magic number: Assert.IsAssignableFrom<EventReaderSubscriptionMessage.PartitionEofReached>(messages[2]);
Magic Number,when_reading_catalog,with_catalog_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\by_stream_catalog_event_reader\when_reading_catalog.cs,publishes_partition_eof_on_each_stream_eof,The following statement contains a magic number: Assert.AreEqual("test-stream"'  					((EventReaderSubscriptionMessage.PartitionEofReached)messages[2]).Partition);
Magic Number,when_reading_catalog,with_catalog_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\by_stream_catalog_event_reader\when_reading_catalog.cs,publishes_partition_eof_on_each_stream_eof,The following statement contains a magic number: Assert.IsAssignableFrom<EventReaderSubscriptionMessage.PartitionEofReached>(messages[5]);
Magic Number,when_reading_catalog,with_catalog_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\by_stream_catalog_event_reader\when_reading_catalog.cs,publishes_partition_eof_on_each_stream_eof,The following statement contains a magic number: Assert.AreEqual("test-stream2"'  					((EventReaderSubscriptionMessage.PartitionEofReached)messages[5]).Partition);
Magic Number,when_reading_catalog,with_catalog_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\by_stream_catalog_event_reader\when_reading_catalog.cs,publishes_partition_eof_on_each_stream_eof,The following statement contains a magic number: Assert.IsAssignableFrom<EventReaderSubscriptionMessage.PartitionEofReached>(messages[8]);
Magic Number,when_reading_catalog,with_catalog_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\by_stream_catalog_event_reader\when_reading_catalog.cs,publishes_partition_eof_on_each_stream_eof,The following statement contains a magic number: Assert.AreEqual("test-stream3"'  					((EventReaderSubscriptionMessage.PartitionEofReached)messages[8]).Partition);
Magic Number,when_reading_catalog,when_new_events_appear_after_subscribing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\by_stream_catalog_event_reader\when_reading_catalog.cs,When,The following statement contains a magic number: var fromZeroPosition = CheckpointTag.FromByStreamPosition(0' "catalog"' -1' null' -1' 1000);
Magic Number,when_reading_catalog,when_new_streams_appear_after_subscribing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\by_stream_catalog_event_reader\when_reading_catalog.cs,When,The following statement contains a magic number: var fromZeroPosition = CheckpointTag.FromByStreamPosition(0' "catalog"' -1' null' -1' 1000);
Magic Number,when_reading_catalog,with_externally_fed_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,Given,The following statement contains a magic number: _readerStrategy = ReaderStrategy.CreateExternallyFedReaderStrategy(  					"test"'  					0'  					_timeProvider'  					SystemAccount.Principal'  					limitingCommitPosition: 10000);
Magic Number,when_reading_catalog,with_externally_fed_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: true'  					stopAfterNEvents: null);
Magic Number,when_reading_catalog,with_externally_fed_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: true'  					stopAfterNEvents: null);
Magic Number,when_reading_catalog,with_externally_fed_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: true'  					stopAfterNEvents: null);
Magic Number,when_reading_catalog,when_handling_first_spool_stream_reading_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,When,The following statement contains a magic number: var fromZeroPosition = CheckpointTag.FromByStreamPosition(0' ""' -1' null' -1' 10000);
Magic Number,when_reading_catalog,when_handling_first_spool_stream_reading_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,When,The following statement contains a magic number: yield return  					new ReaderSubscriptionManagement.SpoolStreamReadingCore(_subscriptionId'  						"test-stream"'  						0'  						10000);
Magic Number,when_reading_catalog,when_handling_first_spool_stream_reading_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,publishes_all_events_from_the_stream,The following statement contains a magic number: Assert.AreEqual(2' events.Length);
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,When,The following statement contains a magic number: var fromZeroPosition = CheckpointTag.FromByStreamPosition(0' ""' -1' null' -1' 10000);
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,When,The following statement contains a magic number: yield return  					new WhenStep(  						new ReaderSubscriptionManagement.SpoolStreamReadingCore(_subscriptionId'  							"test-stream"'  							0'  							10000)'  						new ReaderSubscriptionManagement.SpoolStreamReadingCore(_subscriptionId'  							"test-stream2"'  							1'  							10000));
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,When,The following statement contains a magic number: yield return  					new WhenStep(  						new ReaderSubscriptionManagement.SpoolStreamReadingCore(_subscriptionId'  							"test-stream"'  							0'  							10000)'  						new ReaderSubscriptionManagement.SpoolStreamReadingCore(_subscriptionId'  							"test-stream2"'  							1'  							10000));
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,publishes_all_events_from_the_stream,The following statement contains a magic number: Assert.AreEqual(4' events.Length);
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,publishes_partition_eof_message_at_the_end_of_each_stream,The following statement contains a magic number: Assert.IsAssignableFrom<EventReaderSubscriptionMessage.PartitionEofReached>(events[2]);
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,publishes_partition_eof_message_at_the_end_of_each_stream,The following statement contains a magic number: Assert.IsAssignableFrom<EventReaderSubscriptionMessage.PartitionEofReached>(events[5]);
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages_with_delays,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,When,The following statement contains a magic number: var fromZeroPosition = CheckpointTag.FromByStreamPosition(0' ""' -1' null' -1' 10000);
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages_with_delays,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,When,The following statement contains a magic number: yield return  					new ReaderSubscriptionManagement.SpoolStreamReadingCore(_subscriptionId'  						"test-stream"'  						0'  						10000);
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages_with_delays,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,When,The following statement contains a magic number: Assert.AreEqual(  					2'  					HandledMessages.OfType<EventReaderSubscriptionMessage.CommittedEventReceived>().Count());
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages_with_delays,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,When,The following statement contains a magic number: yield return  					new ReaderSubscriptionManagement.SpoolStreamReadingCore(_subscriptionId'  						"test-stream2"'  						1'  						10000);
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages_with_delays,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,publishes_all_events_from_the_stream,The following statement contains a magic number: Assert.AreEqual(4' events.Length);
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages_with_delays,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,publishes_partition_eof_message_at_the_end_of_each_stream,The following statement contains a magic number: Assert.IsAssignableFrom<EventReaderSubscriptionMessage.PartitionEofReached>(events[2]);
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages_with_delays,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,publishes_partition_eof_message_at_the_end_of_each_stream,The following statement contains a magic number: Assert.IsAssignableFrom<EventReaderSubscriptionMessage.PartitionEofReached>(events[5]);
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages_followed_by_completed_spooled_reading,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,When,The following statement contains a magic number: var fromZeroPosition = CheckpointTag.FromByStreamPosition(0' ""' -1' null' -1' 10000);
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages_followed_by_completed_spooled_reading,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,When,The following statement contains a magic number: yield return  					new WhenStep(  						new ReaderSubscriptionManagement.SpoolStreamReadingCore(_subscriptionId'  							"test-stream"'  							0'  							10000)'  						new ReaderSubscriptionManagement.SpoolStreamReadingCore(_subscriptionId'  							"test-stream2"'  							1'  							10000)'  						new ReaderSubscriptionManagement.CompleteSpooledStreamReading(_subscriptionId));
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages_followed_by_completed_spooled_reading,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,When,The following statement contains a magic number: yield return  					new WhenStep(  						new ReaderSubscriptionManagement.SpoolStreamReadingCore(_subscriptionId'  							"test-stream"'  							0'  							10000)'  						new ReaderSubscriptionManagement.SpoolStreamReadingCore(_subscriptionId'  							"test-stream2"'  							1'  							10000)'  						new ReaderSubscriptionManagement.CompleteSpooledStreamReading(_subscriptionId));
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages_followed_by_completed_spooled_reading,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,publishes_all_events_from_the_stream,The following statement contains a magic number: Assert.AreEqual(4' events.Length);
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages_followed_by_completed_spooled_reading,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,publishes_partition_eof_message_at_the_end_of_each_stream,The following statement contains a magic number: Assert.IsAssignableFrom<EventReaderSubscriptionMessage.PartitionEofReached>(events[2]);
Magic Number,when_reading_catalog,when_handling_sequence_of_spool_stream_reading_messages_followed_by_completed_spooled_reading,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\externally_fed_by_stream_event_reader\when_fed_with_streams.cs,publishes_partition_eof_message_at_the_end_of_each_stream,The following statement contains a magic number: Assert.IsAssignableFrom<EventReaderSubscriptionMessage.PartitionEofReached>(events[5]);
Magic Number,when_including_links,when_reading,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\all_streams_with_links_event_reader\when_including_links.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: true'  					stopAfterNEvents: null);
Magic Number,when_including_links,when_reading,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\all_streams_with_links_event_reader\when_including_links.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: true'  					stopAfterNEvents: null);
Magic Number,when_including_links,when_reading,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\all_streams_with_links_event_reader\when_including_links.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: true'  					stopAfterNEvents: null);
Magic Number,when_including_links,when_reading,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\all_streams_with_links_event_reader\when_including_links.cs,returns_linked_events,The following statement contains a magic number: Assert.AreEqual(7' receivedEvents.Length);
Magic Number,when_not_including_links,when_reading,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\all_streams_with_links_event_reader\when_not_including_links.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: true'  					stopAfterNEvents: null);
Magic Number,when_not_including_links,when_reading,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\all_streams_with_links_event_reader\when_not_including_links.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: true'  					stopAfterNEvents: null);
Magic Number,when_not_including_links,when_reading,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\all_streams_with_links_event_reader\when_not_including_links.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: true'  					stopAfterNEvents: null);
Magic Number,when_not_including_links,when_reading,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\all_streams_with_links_event_reader\when_not_including_links.cs,returns_non_linked_events,The following statement contains a magic number: Assert.AreEqual(4' receivedEvents.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_checkpoint_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_checkpoint_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardStreamRead("$et-eventTypeOne"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: correlationId = CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: correlationId = CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: correlationId = CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: correlationId = CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: correlationId = CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: correlationId = CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: correlationId = CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: correlationId = CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: correlationId = CompleteForwardStreamRead("$et-eventTypeTwo"' Guid.Empty' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_completes_before_timeout.cs,should_deliver_events,The following statement contains a magic number: Assert.AreEqual(3'  				_consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' _eventTypeOneStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' _eventTypeOneStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' _eventTypeOneStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' _eventTypeOneStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' _eventTypeOneStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' _eventTypeOneStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' _eventTypeOneStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' _eventTypeOneStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeOne"' _eventTypeOneStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("0@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(50' 50)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "$et-eventTypeOne"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("1@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(150' 150)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' _eventTypeTwoStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' _eventTypeTwoStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' _eventTypeTwoStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' _eventTypeTwoStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' _eventTypeTwoStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' _eventTypeTwoStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' _eventTypeTwoStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' _eventTypeTwoStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_index_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_index_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardStreamRead("$et-eventTypeTwo"' _eventTypeTwoStreamReadCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  						PrepareFlags.IsJson'  						"$>"' Helper.UTF8NoBom.GetBytes("2@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(100' 100)))))'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "$et-eventTypeTwo"' ExpectedVersion.Any'  						DateTime.UtcNow'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"$>"' Helper.UTF8NoBom.GetBytes("3@test-stream")'  						Helper.UTF8NoBom.GetBytes(TFPosToMetadata(new TFPos(200' 200)))))  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardAllStreamRead(Guid.Empty' new[] {  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardAllStreamRead(Guid.Empty' new[] {  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardAllStreamRead(Guid.Empty' new[] {  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardAllStreamRead(Guid.Empty' new[] {  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardAllStreamRead(Guid.Empty' new[] {  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardAllStreamRead(Guid.Empty' new[] {  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardAllStreamRead(Guid.Empty' new[] {  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardAllStreamRead(Guid.Empty' new[] {  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_completes_before_timeout.cs,When,The following statement contains a magic number: var correlationId = CompleteForwardAllStreamRead(Guid.Empty' new[] {  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_completes_before_timeout.cs,should_deliver_events,The following statement contains a magic number: Assert.AreEqual(2'  				_consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardAllStreamRead(_readAllEventsForwardCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardAllStreamRead(_readAllEventsForwardCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardAllStreamRead(_readAllEventsForwardCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardAllStreamRead(_readAllEventsForwardCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardAllStreamRead(_readAllEventsForwardCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardAllStreamRead(_readAllEventsForwardCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardAllStreamRead(_readAllEventsForwardCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardAllStreamRead(_readAllEventsForwardCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.event_by_type_index_event_reader,when_tf_based_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_event_reader\when_tf_based_read_timeout_occurs.cs,When,The following statement contains a magic number: CompleteForwardAllStreamRead(_readAllEventsForwardCorrelationId' new[] {  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeOne"' new byte[] {1}' new byte[] {2})' 100)'  				ResolvedEvent.ForUnresolvedEvent(  					new EventRecord(  						2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "test_stream"' ExpectedVersion.Any'  						_fakeTimeProvider.Now'  						PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  						"eventTypeTwo"' new byte[] {1}' new byte[] {2})' 200)'  			});
Magic Number,index_checkpoint,with_some_indexed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_reader\catching_up\index_checkpoint.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: false'  					stopAfterNEvents: null);
Magic Number,index_checkpoint,with_some_indexed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_reader\catching_up\index_checkpoint.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: false'  					stopAfterNEvents: null);
Magic Number,index_checkpoint,with_some_indexed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_reader\catching_up\index_checkpoint.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: false'  					stopAfterNEvents: null);
Magic Number,index_checkpoint,when_index_checkpoint_is_written_while_idle,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_reader\catching_up\index_checkpoint.cs,returns_all_events,The following statement contains a magic number: Assert.AreEqual(3' receivedEvents.Length);
Magic Number,when_one_event_type_has_been_never_emitted,with_one_event_type_has_been_never_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_reader\catching_up\when_one_event_type_has_been_never_emitted.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: false'  					stopAfterNEvents: null);
Magic Number,when_one_event_type_has_been_never_emitted,with_one_event_type_has_been_never_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_reader\catching_up\when_one_event_type_has_been_never_emitted.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: false'  					stopAfterNEvents: null);
Magic Number,when_one_event_type_has_been_never_emitted,with_one_event_type_has_been_never_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_reader\catching_up\when_one_event_type_has_been_never_emitted.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: false'  					stopAfterNEvents: null);
Magic Number,when_one_event_type_has_been_never_emitted,with_one_event_type_has_been_never_emitted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_reader\catching_up\when_one_event_type_has_been_never_emitted.cs,returns_all_events,The following statement contains a magic number: Assert.AreEqual(TailLength + 3' receivedEvents.Length);
Magic Number,when_one_event_type_has_been_never_emitted,when_index_checkpoint_multiple_events_behind,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_reader\catching_up\when_one_event_type_has_been_never_emitted.cs,GivenInitialIndexState,The following statement contains a magic number: ExistingEvent("$et-type1"' "$>"' TFPosToMetadata(_tfPos[i])' (i + 3) + "@test-stream");
Magic Number,when_reordering_happens_in_event_by_type_index,ReadingReorderedEventsInTheIndexTestFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_reader\catching_up\when_reordering_happens_in_event_by_type_index.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: false'  					stopAfterNEvents: null);
Magic Number,when_reordering_happens_in_event_by_type_index,ReadingReorderedEventsInTheIndexTestFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_reader\catching_up\when_reordering_happens_in_event_by_type_index.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: false'  					stopAfterNEvents: null);
Magic Number,when_reordering_happens_in_event_by_type_index,ReadingReorderedEventsInTheIndexTestFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_reader\catching_up\when_reordering_happens_in_event_by_type_index.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: false'  					stopAfterNEvents: null);
Magic Number,when_reordering_happens_in_event_by_type_index,ReadingReorderedEventsInTheIndexTestFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_reader\catching_up\when_reordering_happens_in_event_by_type_index.cs,returns_all_events,The following statement contains a magic number: Assert.AreEqual(3' receivedEvents.Length);
Magic Number,when_reordering_happens_in_event_by_type_index,ReadingReorderedEventsInTheIndexTestFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\event_by_type_index_reader\catching_up\when_reordering_happens_in_event_by_type_index.cs,returns_events_in_original_order,The following statement contains a magic number: Assert.That(  					new long[] {0' 1' 2}.SequenceEqual(from e in receivedEvents  						select e.Data.EventSequenceNumber)'  					"Incorrect event order received");
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_heading_event_reader_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_heading_event_reader_has_been_created.cs,setup,The following statement contains a magic number: _point = new HeadingEventReader(10' _bus);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_heading_event_reader_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_heading_event_reader_has_been_created.cs,try_subscribe_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_point.TrySubscribe(Guid.NewGuid()' new FakeReaderSubscription()' 10);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_heading_event_reader_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_heading_event_reader_has_been_created.cs,handle_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_point.Handle(  					ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						Guid.NewGuid()' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()' "type"' false'  						new byte[0]' new byte[0]));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_heading_event_reader_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_heading_event_reader_has_been_created.cs,handle_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_point.Handle(  					ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						Guid.NewGuid()' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()' "type"' false'  						new byte[0]' new byte[0]));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_heading_event_reader_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_heading_event_reader_has_been_created.cs,handle_throws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_point.Handle(  					ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						Guid.NewGuid()' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()' "type"' false'  						new byte[0]' new byte[0]));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_starting_a_heading_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_starting_a_heading_event_reader.cs,setup,The following statement contains a magic number: _point = new HeadingEventReader(10' _bus);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_starting_a_heading_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_starting_a_heading_event_reader.cs,can_handle_events,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_starting_a_heading_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_starting_a_heading_event_reader.cs,can_handle_events,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_starting_a_heading_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_starting_a_heading_event_reader.cs,can_handle_events,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_handles_an_event.cs,setup,The following statement contains a magic number: _point = new HeadingEventReader(10' _bus);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_handles_an_event.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_handles_an_event.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_handles_an_event.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_handles_an_event.cs,can_handle_next_event,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 12' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_handles_an_event.cs,can_handle_next_event,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 12' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_handles_an_event.cs,can_handle_next_event,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 12' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_handles_an_event.cs,cannot_handle_previous_event,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_point.Handle(  					ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_distibutionPointCorrelationId' new TFPos(5' 0)' "stream"' 8' false' Guid.NewGuid()' "type"'  						false' new byte[0]' new byte[0]));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_handles_an_event.cs,cannot_handle_previous_event,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_point.Handle(  					ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_distibutionPointCorrelationId' new TFPos(5' 0)' "stream"' 8' false' Guid.NewGuid()' "type"'  						false' new byte[0]' new byte[0]));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_handles_an_event.cs,a_projection_can_be_subscribed_after_event_position,The following statement contains a magic number: var subscribed = _point.TrySubscribe(Guid.NewGuid()' new FakeReaderSubscription()' 30);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_handles_an_event.cs,a_projection_cannot_be_subscribed_at_earlier_position,The following statement contains a magic number: var subscribed = _point.TrySubscribe(Guid.NewGuid()' new FakeReaderSubscription()' 10);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_subscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_subscribes_a_projection.cs,setup,The following statement contains a magic number: _point = new HeadingEventReader(10' _bus);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_subscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_subscribes_a_projection.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_subscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_subscribes_a_projection.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_subscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_subscribes_a_projection.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_subscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_subscribes_a_projection.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_subscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_subscribes_a_projection.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_subscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_subscribes_a_projection.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_subscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_subscribes_a_projection.cs,setup,The following statement contains a magic number: _point.TrySubscribe(_projectionSubscriptionId' _subscription' 30);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_subscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_subscribes_a_projection.cs,projection_receives_at_least_one_cached_event_before_the_subscription_position,The following statement contains a magic number: Assert.AreEqual(true' _subscription.ReceivedEvents.Any(v => v.Data.Position.PreparePosition <= 30));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_subscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_subscribes_a_projection.cs,projection_receives_all_the_previously_handled_events_after_the_subscription_position,The following statement contains a magic number: Assert.AreEqual(true' _subscription.ReceivedEvents.Any(v => v.Data.Position.PreparePosition == 30));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_subscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_subscribes_a_projection.cs,no_other_projection_can_subscribe_with_the_same_projection_id,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_point.TrySubscribe(_projectionSubscriptionId' _subscription' 30);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_unsubscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_unsubscribes_a_projection.cs,setup,The following statement contains a magic number: _point = new HeadingEventReader(10' _bus);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_unsubscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_unsubscribes_a_projection.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_unsubscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_unsubscribes_a_projection.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_unsubscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_unsubscribes_a_projection.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_unsubscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_unsubscribes_a_projection.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_unsubscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_unsubscribes_a_projection.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_unsubscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_unsubscribes_a_projection.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_unsubscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_unsubscribes_a_projection.cs,setup,The following statement contains a magic number: var subscribed = _point.TrySubscribe(_projectionSubscriptionId' _subscription' 30);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_unsubscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_unsubscribes_a_projection.cs,projection_does_not_receive_any_events_after_unsubscribing,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(60' 50)' "stream"' 12' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_unsubscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_unsubscribes_a_projection.cs,projection_does_not_receive_any_events_after_unsubscribing,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(60' 50)' "stream"' 12' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_unsubscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_unsubscribes_a_projection.cs,projection_does_not_receive_any_events_after_unsubscribing,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(60' 50)' "stream"' 12' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_unsubscribes_a_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_unsubscribes_a_projection.cs,projection_can_resubscribe_with,The following statement contains a magic number: var subscribed = _point.TrySubscribe(_projectionSubscriptionId' _subscription' 30);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event.cs,setup,The following statement contains a magic number: _point = new HeadingEventReader(10' _bus);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event.cs,setup,The following statement contains a magic number: _point.TrySubscribe(_projectionSubscriptionId' _subscription' 30);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(60' 50)' "stream"' 12' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(60' 50)' "stream"' 12' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(60' 50)' "stream"' 12' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event.cs,projection_receives_events_after_the_subscription_point,The following statement contains a magic number: Assert.AreEqual(50' _subscription.ReceivedEvents.Last().Data.Position.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_event.cs,no_other_projection_can_subscribe_with_the_same_projection_id,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_point.TrySubscribe(_projectionSubscriptionId' _subscription' 30);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification.cs,setup,The following statement contains a magic number: _point = new HeadingEventReader(10' _bus);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]' timestamp));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]' timestamp));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]' timestamp));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]' timestamp.AddMilliseconds(1)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]' timestamp.AddMilliseconds(1)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]' timestamp.AddMilliseconds(1)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification.cs,setup,The following statement contains a magic number: _point.TrySubscribe(_projectionSubscriptionId' _subscription' 30);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_an_idle_notification.cs,setup,The following statement contains a magic number: _point.Handle(  				new ReaderSubscriptionMessage.EventReaderIdle(  					_distibutionPointCorrelationId' timestamp.AddMilliseconds(1100)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws.cs,setup,The following statement contains a magic number: _point = new HeadingEventReader(10' _bus);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "throws"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "throws"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "throws"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "throws"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "throws"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "throws"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_cached_event_and_throws.cs,setup,The following statement contains a magic number: _point.TrySubscribe(_projectionSubscriptionId' new FakeReaderSubscription()' 30);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws.cs,setup,The following statement contains a magic number: _point = new HeadingEventReader(10' _bus);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(20' 10)' "stream"' 10' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(40' 30)' "stream"' 11' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws.cs,setup,The following statement contains a magic number: _point.TrySubscribe(_projectionSubscriptionId' new FakeReaderSubscription()' 30);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(60' 50)' "throws"' 12' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(60' 50)' "throws"' 12' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.heading_event_reader,when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\heading_event_reader\when_the_heading_event_reader_with_a_subscribed_projection_handles_a_live_event_and_throws.cs,setup,The following statement contains a magic number: _point.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_distibutionPointCorrelationId' new TFPos(60' 50)' "throws"' 12' false' Guid.NewGuid()'  					"type"' false' new byte[0]' new byte[0]));
Magic Number,reordering,with_multi_stream_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\reordering.cs,Given,The following statement contains a magic number: _sourceDefinition = new QuerySourcesDefinition {  					Streams = new[] {"stream-a"' "stream-b"}'  					AllEvents = true'  					Options = new QuerySourcesDefinitionOptions {ReorderEvents = true' ProcessingLag = 100}  				};
Magic Number,reordering,with_multi_stream_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\reordering.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: false'  					stopAfterNEvents: null);
Magic Number,reordering,with_multi_stream_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\reordering.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: false'  					stopAfterNEvents: null);
Magic Number,reordering,with_multi_stream_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\reordering.cs,Given,The following statement contains a magic number: _readerSubscriptionOptions = new ReaderSubscriptionOptions(  					checkpointUnhandledBytesThreshold: 10000' checkpointProcessedEventsThreshold: 100'  					checkpointAfterMs: 10000' stopOnEof: false'  					stopAfterNEvents: null);
Magic Number,reordering,with_multi_stream_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\reordering.cs,returns_all_events,The following statement contains a magic number: Assert.AreEqual(5' receivedEvents.Length);
Magic Number,reordering,when_event_commit_is_delayed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\reordering.cs,When,The following statement contains a magic number: _timeProvider.AddTime(TimeSpan.FromMilliseconds(300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_creating.cs,setup,The following statement contains a magic number: _ab12Tag = new Dictionary<string' long> {{"a"' 1}' {"b"' 2}};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_creating.cs,invalid_from_tag_throws_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => {  				new MultiStreamEventReader(  					_ioDispatcher' _bus' Guid.NewGuid()' null' 0' _abStreams'  					new Dictionary<string' long> {{"a"' 1}' {"c"' 2}}' false' _timeProvider);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_deleted_streams.cs,Given,The following statement contains a magic number: _streamPositions = new Dictionary<string' long> {{"stream1"' 10}' {"stream2"' _fromSequenceNumber}};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_deleted_streams.cs,HandleEvents,The following statement contains a magic number: events.Add(  					ResolvedEvent.ForUnresolvedEvent(  						new EventRecord(  							eventNumber' 50 * (eventNumber + 1)' Guid.NewGuid()' Guid.NewGuid()' 50 * (eventNumber + 1)'  							0' stream' ExpectedVersion.Any' DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							eventType' new byte[] {0}' new byte[] {0}  						)  					)  				);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_deleted_streams.cs,HandleEvents,The following statement contains a magic number: events.Add(  					ResolvedEvent.ForUnresolvedEvent(  						new EventRecord(  							eventNumber' 50 * (eventNumber + 1)' Guid.NewGuid()' Guid.NewGuid()' 50 * (eventNumber + 1)'  							0' stream' ExpectedVersion.Any' DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							eventType' new byte[] {0}' new byte[] {0}  						)  					)  				);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_deleted_streams.cs,HandleEvents,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' stream' start' 100' ReadStreamResult.Success' events.ToArray()' null' false' ""'  					start + 1' end' true' 200)  			);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_deleted_streams.cs,HandleEvents,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' stream' start' 100' ReadStreamResult.Success' events.ToArray()' null' false' ""'  					start + 1' end' true' 200)  			);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_deleted_streams.cs,HandleDeletedStream,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' stream' sequenceNumber' 100' result' new ResolvedEvent[] { }' null' false' ""' -1'  					sequenceNumber' true' 200)  			);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_deleted_streams.cs,HandleDeletedStream,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' stream' sequenceNumber' 100' result' new ResolvedEvent[] { }' null' false' ""' -1'  					sequenceNumber' true' 200)  			);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_deleted_streams.cs,when_no_stream_and_sequence_num_greater_than_zero_should_publish_partition_deleted_message,The following statement contains a magic number: HandleDeletedStream(_streamNames[0]' 100' ReadStreamResult.NoStream);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _ab12Tag = new Dictionary<string' long> {{"a"' 1}' {"b"' 2}};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 2' 1' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 2' 1' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 2' 1' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 2' 1' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 2' 1' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 2' 1' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 2' 1' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 2'  					1' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 2'  					1' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 2'  					1' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 2'  					1' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _fakeTimeProvider.AddTime(TimeSpan.FromMilliseconds(500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 2'  					1' true' 600));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 2'  					1' true' 600));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 2'  					1' true' 600));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 2'  					1' true' 600));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,publishes_event_distribution_idle_messages,The following statement contains a magic number: Assert.AreEqual(2' _consumer.HandledMessages.OfType<ReaderSubscriptionMessage.EventReaderIdle>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_eof_for_all_streams_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_eof_for_all_streams_and_idle_eof.cs,publishes_event_distribution_idle_messages,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMilliseconds(500)' second.IdleTimestampUtc - first.IdleTimestampUtc);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,When,The following statement contains a magic number: _ab12Tag = new Dictionary<string' long> {{"a"' 1}' {"b"' 2}};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 4' false' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 4' false' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 4' false' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 4' false' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 4' false' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 4' false' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 4' false' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 4' false' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 4' false' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 4' false' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 4' false' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 4' false' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 4' false' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,publishes_read_events_from_beginning_with_correct_next_event_number,The following statement contains a magic number: Assert.AreEqual(2' _consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						correlationId' "a"' 100' 100' ReadStreamResult.Success'  						new[] {  							ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									2' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 3' 4' false' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						correlationId' "a"' 100' 100' ReadStreamResult.Success'  						new[] {  							ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									2' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 3' 4' false' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						correlationId' "a"' 100' 100' ReadStreamResult.Success'  						new[] {  							ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									2' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 3' 4' false' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						correlationId' "a"' 100' 100' ReadStreamResult.Success'  						new[] {  							ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									2' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 3' 4' false' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						correlationId' "a"' 100' 100' ReadStreamResult.Success'  						new[] {  							ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									2' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 3' 4' false' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						correlationId' "a"' 100' 100' ReadStreamResult.Success'  						new[] {  							ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									2' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 3' 4' false' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						correlationId' "a"' 100' 100' ReadStreamResult.Success'  						new[] {  							ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									2' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 3' 4' false' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						correlationId' "a"' 100' 100' ReadStreamResult.Success'  						new[] {  							ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									2' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 3' 4' false' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]' null' false' ""'  					-1' ExpectedVersion.NoStream' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]' null' false' ""'  					-1' ExpectedVersion.NoStream' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]' null' false' ""'  					-1' ExpectedVersion.NoStream' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,publishes_read_events_from_beginning_with_correct_next_event_number,The following statement contains a magic number: Assert.AreEqual(3' _consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,publishes_read_events_from_beginning_with_correct_next_event_number,The following statement contains a magic number: Assert.AreEqual(  				3'  				_consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>()  					.Last(m => m.EventStreamId == "a")  					.FromEventNumber);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(  				3' _consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: var third =  				_consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>()  					.Skip(2)  					.First();
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(100' third.SafeTransactionFileReaderJoinPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(2' first.Data.Metadata[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(3' second.Data.Data[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(4' second.Data.Metadata[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(50' first.Data.Position.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(100' second.Data.Position.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(50' first.SafeTransactionFileReaderJoinPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(100' second.SafeTransactionFileReaderJoinPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,publishes_subscribe_awake,The following statement contains a magic number: Assert.AreEqual(2' _consumer.HandledMessages.OfType<AwakeServiceMessage.SubscribeAwake>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 4' 3' true' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 4' 3' true' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 4' 3' true' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 4' 3' true' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 4' 3' true' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 4' 3' true' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 4' 3' true' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_and_no_stream.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 4' 3' true' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _ab12Tag = new Dictionary<string' long> {{"a"' 1}' {"b"' 2}};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(  				3' _consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(2' first.Data.Metadata[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(2' second.Data.Metadata[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(50' first.Data.Position.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(100' second.Data.Position.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(50' first.SafeTransactionFileReaderJoinPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(100' second.SafeTransactionFileReaderJoinPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,publishes_read_events_from_beginning_with_correct_next_event_number,The following statement contains a magic number: Assert.AreEqual(3' _consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,publishes_read_events_from_beginning_with_correct_next_event_number,The following statement contains a magic number: Assert.AreEqual(  				3'  				_consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>()  					.Last(m => m.EventStreamId == "a")  					.FromEventNumber);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,publishes_read_events_from_beginning_with_correct_next_event_number,The following statement contains a magic number: Assert.AreEqual(  				2' // still first read request  				_consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>()  					.Last(m => m.EventStreamId == "b")  					.FromEventNumber);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  						new[] {  							ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 11' 10' true' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  						new[] {  							ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 11' 10' true' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  						new[] {  							ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 11' 10' true' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  						new[] {  							ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 11' 10' true' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  						new[] {  							ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 11' 10' true' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  						new[] {  							ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 11' 10' true' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  						new[] {  							ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 11' 10' true' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  						new[] {  							ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 11' 10' true' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 4' 4' false' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 4' 4' false' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 4' 4' false' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 4' 4' false' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 4' 4' false' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 4' 4' false' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 4' 4' false' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 4' 4' false' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,publishes_committed_event_received_messages_in_correct_order,The following statement contains a magic number: Assert.AreEqual(  				3' _consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams.cs,publishes_committed_event_received_messages_in_correct_order,The following statement contains a magic number: var third =  				_consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>()  					.Skip(2)  					.First();
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _ab12Tag = new Dictionary<string' long> {{"a"' 1}' {"b"' 2}};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,publishes_correct_number_of_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(  				3' _consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,cannot_handle_following_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						correlationId' "a"' 100' 100' ReadStreamResult.Success'  						new[] {  							EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 4' 4' false' 300));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,cannot_handle_following_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						correlationId' "a"' 100' 100' ReadStreamResult.Success'  						new[] {  							EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 4' 4' false' 300));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,cannot_handle_following_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						correlationId' "a"' 100' 100' ReadStreamResult.Success'  						new[] {  							EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 4' 4' false' 300));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,cannot_handle_following_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						correlationId' "a"' 100' 100' ReadStreamResult.Success'  						new[] {  							EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 4' 4' false' 300));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,cannot_handle_following_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						correlationId' "a"' 100' 100' ReadStreamResult.Success'  						new[] {  							EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 4' 4' false' 300));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,cannot_handle_following_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						correlationId' "a"' 100' 100' ReadStreamResult.Success'  						new[] {  							EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 4' 4' false' 300));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,cannot_handle_following_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						correlationId' "a"' 100' 100' ReadStreamResult.Success'  						new[] {  							EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 4' 4' false' 300));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_after_pause_requested,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_after_pause_requested.cs,cannot_handle_following_read_events_completed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						correlationId' "a"' 100' 100' ReadStreamResult.Success'  						new[] {  							EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  								new EventRecord(  									3' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "a"' ExpectedVersion.Any'  									DateTime.UtcNow'  									PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin |  									PrepareFlags.TransactionEnd'  									"event_type"' new byte[0]' new byte[0]))  						}' null' false' ""' 4' 4' false' 300));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _ab12Tag = new Dictionary<string' long> {{"a"' 1}' {"b"' 2}};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _thirdEventId' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]' null' false' ""' 4'  					3' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]' null' false' ""' 4'  					3' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]' null' false' ""' 4'  					3' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]' null' false' ""' 4'  					3' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]' null' false' ""' 4'  					3' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(  				6' _consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: var fifth =  				_consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>()  					.Skip(4)  					.First();
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: var sixth =  				_consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>()  					.Skip(5)  					.First();
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(2' first.Data.Metadata[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(50' first.Data.Position.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(50' first.SafeTransactionFileReaderJoinPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(400' sixth.SafeTransactionFileReaderJoinPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,publishes_read_events_from_beginning_with_correct_next_event_number,The following statement contains a magic number: Assert.AreEqual(4' _consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,publishes_read_events_from_beginning_with_correct_next_event_number,The following statement contains a magic number: Assert.AreEqual(  				3'  				_consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>()  					.Last(m => m.EventStreamId == "a")  					.FromEventNumber);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,publishes_read_events_from_beginning_with_correct_next_event_number,The following statement contains a magic number: Assert.AreEqual(  				4'  				_consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>()  					.Last(m => m.EventStreamId == "b")  					.FromEventNumber);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,publishes_subscribe_awake,The following statement contains a magic number: Assert.AreEqual(4' _consumer.HandledMessages.OfType<AwakeServiceMessage.SubscribeAwake>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,publishes_committed_event_received_messages_in_correct_order,The following statement contains a magic number: Assert.AreEqual(  				6' _consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,publishes_committed_event_received_messages_in_correct_order,The following statement contains a magic number: var third =  				_consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>()  					.Skip(2)  					.First();
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,publishes_committed_event_received_messages_in_correct_order,The following statement contains a magic number: var fourth =  				_consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>()  					.Skip(3)  					.First();
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,publishes_committed_event_received_messages_in_correct_order,The following statement contains a magic number: var fifth =  				_consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>()  					.Skip(4)  					.First();
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_and_eofs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_and_eofs.cs,publishes_committed_event_received_messages_in_correct_order,The following statement contains a magic number: var sixth =  				_consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>()  					.Skip(5)  					.First();
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _ab12Tag = new Dictionary<string' long> {{"a"' 1}' {"b"' 2}};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _thirdEventId' 150' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _thirdEventId' 150' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _thirdEventId' 150' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _thirdEventId' 150' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _thirdEventId' 150' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _thirdEventId' 150' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _thirdEventId' 150' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _thirdEventId' 150' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _thirdEventId' 150' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _thirdEventId' 150' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _thirdEventId' 150' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _thirdEventId' 150' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _thirdEventId' 150' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _thirdEventId' 150' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' _fourthEventId' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,publishes_read_events_from_beginning_with_correct_next_event_number,The following statement contains a magic number: Assert.AreEqual(3' _consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,publishes_read_events_from_beginning_with_correct_next_event_number,The following statement contains a magic number: Assert.AreEqual(  				3'  				_consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>()  					.Last(m => m.EventStreamId == "a")  					.FromEventNumber);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_read_completed_for_all_streams_then_pause_requested_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_read_completed_for_all_streams_then_pause_requested_then_eof.cs,publishes_read_events_from_beginning_with_correct_next_event_number,The following statement contains a magic number: Assert.AreEqual(  				2'  				_consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>()  					.Last(m => m.EventStreamId == "b")  					.FromEventNumber);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,Given,The following statement contains a magic number: _fromSequenceNumber = 10;
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,Given,The following statement contains a magic number: _streamPositions = new Dictionary<string' long> {{"stream1"' _fromSequenceNumber}' {"stream2"' 100}};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,HandleEvents,The following statement contains a magic number: events.Add(  					ResolvedEvent.ForUnresolvedEvent(  						new EventRecord(  							eventNumber' 50 * (eventNumber + 1)' Guid.NewGuid()' Guid.NewGuid()' 50 * (eventNumber + 1)'  							0' stream' ExpectedVersion.Any' DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							eventType' new byte[] {0}' new byte[] {0}  						)  					)  				);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,HandleEvents,The following statement contains a magic number: events.Add(  					ResolvedEvent.ForUnresolvedEvent(  						new EventRecord(  							eventNumber' 50 * (eventNumber + 1)' Guid.NewGuid()' Guid.NewGuid()' 50 * (eventNumber + 1)'  							0' stream' ExpectedVersion.Any' DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							eventType' new byte[] {0}' new byte[] {0}  						)  					)  				);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,HandleEvents,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' stream' start' 100' ReadStreamResult.Success' events.ToArray()' null' false' ""'  					start + 1' end' true' 200)  			);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,HandleEvents,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' stream' start' 100' ReadStreamResult.Success' events.ToArray()' null' false' ""'  					start + 1' end' true' 200)  			);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,allows_first_event_to_be_equal_to_sequence_number,The following statement contains a magic number: Assert.DoesNotThrow(() => {  				HandleEvents(_streamNames[0]' eventSequenceNumber' eventSequenceNumber);  				//to trigger event delivery:  				HandleEvents(_streamNames[1]' 100' 101);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,allows_first_event_to_be_equal_to_sequence_number,The following statement contains a magic number: Assert.DoesNotThrow(() => {  				HandleEvents(_streamNames[0]' eventSequenceNumber' eventSequenceNumber);  				//to trigger event delivery:  				HandleEvents(_streamNames[1]' 100' 101);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,should_not_allow_first_event_to_be_greater_than_sequence_number,The following statement contains a magic number: long eventSequenceNumber = _fromSequenceNumber + 5;
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,should_not_allow_first_event_to_be_greater_than_sequence_number,The following statement contains a magic number: HandleEvents(_streamNames[1]' 100' 101);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,should_not_allow_first_event_to_be_greater_than_sequence_number,The following statement contains a magic number: HandleEvents(_streamNames[1]' 100' 101);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,should_not_allow_first_event_to_be_less_than_sequence_number,The following statement contains a magic number: HandleEvents(_streamNames[1]' 100' 101);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,should_not_allow_first_event_to_be_less_than_sequence_number,The following statement contains a magic number: HandleEvents(_streamNames[1]' 100' 101);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,events_after_first_event_should_not_be_in_sequence,The following statement contains a magic number: HandleEvents(_streamNames[0]'  				new long[] {  					_fromSequenceNumber' _fromSequenceNumber + 1' _fromSequenceNumber + 3' _fromSequenceNumber + 4  				});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,events_after_first_event_should_not_be_in_sequence,The following statement contains a magic number: HandleEvents(_streamNames[0]'  				new long[] {  					_fromSequenceNumber' _fromSequenceNumber + 1' _fromSequenceNumber + 3' _fromSequenceNumber + 4  				});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,events_after_first_event_should_not_be_in_sequence,The following statement contains a magic number: HandleEvents(_streamNames[1]' 100' 101);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,events_after_first_event_should_not_be_in_sequence,The following statement contains a magic number: HandleEvents(_streamNames[1]' 100' 101);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,events_after_first_event_should_not_be_in_sequence,The following statement contains a magic number: Assert.AreEqual(2' HandledMessages.OfType<ReaderSubscriptionMessage.Faulted>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,Given,The following statement contains a magic number: _streamPositions = new Dictionary<string' long> {{"stream1"' _fromSequenceNumber}' {"stream2"' 100}};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,HandleEvents,The following statement contains a magic number: events.Add(  					ResolvedEvent.ForUnresolvedEvent(  						new EventRecord(  							eventNumber' 50 * (eventNumber + 1)' Guid.NewGuid()' Guid.NewGuid()' 50 * (eventNumber + 1)'  							0' stream' ExpectedVersion.Any' DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							eventType' new byte[] {0}' new byte[] {0}  						)  					)  				);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,HandleEvents,The following statement contains a magic number: events.Add(  					ResolvedEvent.ForUnresolvedEvent(  						new EventRecord(  							eventNumber' 50 * (eventNumber + 1)' Guid.NewGuid()' Guid.NewGuid()' 50 * (eventNumber + 1)'  							0' stream' ExpectedVersion.Any' DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							eventType' new byte[] {0}' new byte[] {0}  						)  					)  				);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,HandleEvents,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' stream' start' 100' ReadStreamResult.Success' events.ToArray()' null' false' ""'  					start + 1' end' true' 200)  			);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,HandleEvents,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' stream' start' 100' ReadStreamResult.Success' events.ToArray()' null' false' ""'  					start + 1' end' true' 200)  			);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,allows_first_event_to_be_equal_to_sequence_number,The following statement contains a magic number: Assert.DoesNotThrow(() => {  				HandleEvents(_streamNames[0]' eventSequenceNumber' eventSequenceNumber);  				//to trigger event delivery:  				HandleEvents(_streamNames[1]' 100' 101);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,allows_first_event_to_be_equal_to_sequence_number,The following statement contains a magic number: Assert.DoesNotThrow(() => {  				HandleEvents(_streamNames[0]' eventSequenceNumber' eventSequenceNumber);  				//to trigger event delivery:  				HandleEvents(_streamNames[1]' 100' 101);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,allows_first_event_to_be_greater_than_sequence_number,The following statement contains a magic number: long eventSequenceNumber = _fromSequenceNumber + 5;
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,allows_first_event_to_be_greater_than_sequence_number,The following statement contains a magic number: Assert.DoesNotThrow(() => {  				HandleEvents(_streamNames[0]' eventSequenceNumber' eventSequenceNumber);  				//to trigger event delivery:  				HandleEvents(_streamNames[1]' 100' 101);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,allows_first_event_to_be_greater_than_sequence_number,The following statement contains a magic number: Assert.DoesNotThrow(() => {  				HandleEvents(_streamNames[0]' eventSequenceNumber' eventSequenceNumber);  				//to trigger event delivery:  				HandleEvents(_streamNames[1]' 100' 101);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,events_after_first_event_should_not_be_in_sequence,The following statement contains a magic number: HandleEvents(_streamNames[0]'  				new long[] {  					_fromSequenceNumber' _fromSequenceNumber + 1' _fromSequenceNumber + 3' _fromSequenceNumber + 4  				});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,events_after_first_event_should_not_be_in_sequence,The following statement contains a magic number: HandleEvents(_streamNames[0]'  				new long[] {  					_fromSequenceNumber' _fromSequenceNumber + 1' _fromSequenceNumber + 3' _fromSequenceNumber + 4  				});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,events_after_first_event_should_not_be_in_sequence,The following statement contains a magic number: HandleEvents(_streamNames[1]' 100' 101);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,events_after_first_event_should_not_be_in_sequence,The following statement contains a magic number: HandleEvents(_streamNames[1]' 100' 101);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,events_after_first_event_should_not_be_in_sequence,The following statement contains a magic number: Assert.AreEqual(2' HandledMessages.OfType<ReaderSubscriptionMessage.Faulted>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,events_fault_message_for_out_of_sequence_events_should_be,The following statement contains a magic number: HandleEvents(_streamNames[0]'  				new long[] {  					_fromSequenceNumber' _fromSequenceNumber + 1' _fromSequenceNumber + 3' _fromSequenceNumber + 4  				});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,events_fault_message_for_out_of_sequence_events_should_be,The following statement contains a magic number: HandleEvents(_streamNames[0]'  				new long[] {  					_fromSequenceNumber' _fromSequenceNumber + 1' _fromSequenceNumber + 3' _fromSequenceNumber + 4  				});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,events_fault_message_for_out_of_sequence_events_should_be,The following statement contains a magic number: HandleEvents(_streamNames[1]' 100' 101);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,events_fault_message_for_out_of_sequence_events_should_be,The following statement contains a magic number: HandleEvents(_streamNames[1]' 100' 101);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_has_been_created.cs,When,The following statement contains a magic number: _ab12Tag = new Dictionary<string' long> {{"a"' 1}' {"b"' 2}};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_has_been_created.cs,handle_read_events_completed_throws,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]'  						null' false' ""' -1' 4' true' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_has_been_created.cs,handle_read_events_completed_throws,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]'  						null' false' ""' -1' 4' true' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_has_been_created.cs,handle_read_events_completed_throws,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]'  						null' false' ""' -1' 4' true' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_has_been_created.cs,handle_read_events_completed_throws,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]'  						null' false' ""' -1' 4' true' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _ab12Tag = new Dictionary<string' long> {{"a"' 1}' {"b"' 2}};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 2' 1' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 2' 1' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 2' 1' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 2' 1' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 2' 1' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 2' 1' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 2' 1' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' _secondEventId' 100' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 2'  					1' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 2'  					1' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 2'  					1' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 2'  					1' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false' ""' 3'  					2' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_onetime_reader_handles_eof.cs,does_not_publish_read_messages_anymore,The following statement contains a magic number: Assert.AreEqual(4' _consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _ab12Tag = new Dictionary<string' long> {{"a"' 1}' {"b"' 2}};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_completes_before_timeout.cs,should_deliver_events,The following statement contains a magic number: Assert.AreEqual(3'  				_consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _ab12Tag = new Dictionary<string' long> {{"a"' 1}' {"b"' 2}};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 300' Guid.NewGuid()' Guid.NewGuid()' 300' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {4}' new byte[] {6}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								4' 400' Guid.NewGuid()' Guid.NewGuid()' 400' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {6}' new byte[] {8}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 300' Guid.NewGuid()' Guid.NewGuid()' 300' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {4}' new byte[] {6}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								4' 400' Guid.NewGuid()' Guid.NewGuid()' 400' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {6}' new byte[] {8}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 300' Guid.NewGuid()' Guid.NewGuid()' 300' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {4}' new byte[] {6}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								4' 400' Guid.NewGuid()' Guid.NewGuid()' 400' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {6}' new byte[] {8}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 300' Guid.NewGuid()' Guid.NewGuid()' 300' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {4}' new byte[] {6}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								4' 400' Guid.NewGuid()' Guid.NewGuid()' 400' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {6}' new byte[] {8}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 300' Guid.NewGuid()' Guid.NewGuid()' 300' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {4}' new byte[] {6}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								4' 400' Guid.NewGuid()' Guid.NewGuid()' 400' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {6}' new byte[] {8}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 300' Guid.NewGuid()' Guid.NewGuid()' 300' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {4}' new byte[] {6}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								4' 400' Guid.NewGuid()' Guid.NewGuid()' 400' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {6}' new byte[] {8}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 300' Guid.NewGuid()' Guid.NewGuid()' 300' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {4}' new byte[] {6}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								4' 400' Guid.NewGuid()' Guid.NewGuid()' 400' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {6}' new byte[] {8}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 300' Guid.NewGuid()' Guid.NewGuid()' 300' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {4}' new byte[] {6}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								4' 400' Guid.NewGuid()' Guid.NewGuid()' 400' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {6}' new byte[] {8}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 300' Guid.NewGuid()' Guid.NewGuid()' 300' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {4}' new byte[] {6}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								4' 400' Guid.NewGuid()' Guid.NewGuid()' 400' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {6}' new byte[] {8}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 300' Guid.NewGuid()' Guid.NewGuid()' 300' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {4}' new byte[] {6}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								4' 400' Guid.NewGuid()' Guid.NewGuid()' 400' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {6}' new byte[] {8}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 300' Guid.NewGuid()' Guid.NewGuid()' 300' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {4}' new byte[] {6}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								4' 400' Guid.NewGuid()' Guid.NewGuid()' 400' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {6}' new byte[] {8}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 300' Guid.NewGuid()' Guid.NewGuid()' 300' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {4}' new byte[] {6}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								4' 400' Guid.NewGuid()' Guid.NewGuid()' 400' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {6}' new byte[] {8}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 300' Guid.NewGuid()' Guid.NewGuid()' 300' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {4}' new byte[] {6}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								4' 400' Guid.NewGuid()' Guid.NewGuid()' 400' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {6}' new byte[] {8}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 300' Guid.NewGuid()' Guid.NewGuid()' 300' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {4}' new byte[] {6}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								4' 400' Guid.NewGuid()' Guid.NewGuid()' 400' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {6}' new byte[] {8}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_for_one_stream_completes_but_times_out_for_another,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_for_one_stream_completes_but_times_out_for_another.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 300' Guid.NewGuid()' Guid.NewGuid()' 300' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {4}' new byte[] {6}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								4' 400' Guid.NewGuid()' Guid.NewGuid()' 400' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {6}' new byte[] {8}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _ab12Tag = new Dictionary<string' long> {{"a"' 1}' {"b"' 2}};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadACorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadACorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadACorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadACorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadACorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadACorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadACorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadACorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadACorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadACorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadACorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadACorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadACorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any' DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 3' 2' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadBCorrelationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadBCorrelationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadBCorrelationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadBCorrelationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadBCorrelationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadBCorrelationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadBCorrelationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadBCorrelationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadBCorrelationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadBCorrelationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadBCorrelationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadBCorrelationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadBCorrelationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_streamReadBCorrelationId' "b"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								3' 200' Guid.NewGuid()' Guid.NewGuid()' 200' 0' "b"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 4' 3' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_resuming,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_resuming.cs,When,The following statement contains a magic number: _ab12Tag = new Dictionary<string' long> {{"a"' 1}' {"b"' 2}};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_resuming,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_resuming.cs,it_publishes_read_events_from_beginning,The following statement contains a magic number: Assert.AreEqual(2' _consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_resuming,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_resuming.cs,it_publishes_read_events_from_beginning,The following statement contains a magic number: Assert.AreEqual(  				2'  				_consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>()  					.Single(m => m.EventStreamId == "b")  					.FromEventNumber);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_resuming,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_resuming.cs,can_handle_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0])' 0)  					}' null' false' ""' 2' 4' false' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_resuming,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_resuming.cs,can_handle_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0])' 0)  					}' null' false' ""' 2' 4' false' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_resuming,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_resuming.cs,can_handle_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0])' 0)  					}' null' false' ""' 2' 4' false' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_resuming,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_resuming.cs,can_handle_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0])' 0)  					}' null' false' ""' 2' 4' false' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_resuming,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_resuming.cs,can_handle_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0])' 0)  					}' null' false' ""' 2' 4' false' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_resuming,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_resuming.cs,can_handle_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0])' 0)  					}' null' false' ""' 2' 4' false' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.multi_stream_reader,when_resuming,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\multi_stream_reader\when_resuming.cs,can_handle_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "a"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0])' 0)  					}' null' false' ""' 2' 4' false' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_deleted_streams.cs,Given,The following statement contains a magic number: _fromSequenceNumber = 10;
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_deleted_streams.cs,HandleEvents,The following statement contains a magic number: events.Add(  					ResolvedEvent.ForUnresolvedEvent(  						new EventRecord(  							eventNumber' 50 * (eventNumber + 1)' Guid.NewGuid()' Guid.NewGuid()' 50 * (eventNumber + 1)'  							0' stream' ExpectedVersion.Any' DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							eventType' new byte[] {0}' new byte[] {0}  						)  					)  				);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_deleted_streams.cs,HandleEvents,The following statement contains a magic number: events.Add(  					ResolvedEvent.ForUnresolvedEvent(  						new EventRecord(  							eventNumber' 50 * (eventNumber + 1)' Guid.NewGuid()' Guid.NewGuid()' 50 * (eventNumber + 1)'  							0' stream' ExpectedVersion.Any' DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							eventType' new byte[] {0}' new byte[] {0}  						)  					)  				);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_deleted_streams.cs,HandleEvents,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' stream' start' 100' ReadStreamResult.Success' events.ToArray()' null' false' ""'  					start + 1' end' true' 200)  			);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_deleted_streams.cs,HandleEvents,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' stream' start' 100' ReadStreamResult.Success' events.ToArray()' null' false' ""'  					start + 1' end' true' 200)  			);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_deleted_streams.cs,HandleDeletedStream,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' stream' sequenceNumber' 100' result' new ResolvedEvent[] { }' null' false' ""' -1'  					sequenceNumber' true' 200)  			);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_deleted_streams.cs,HandleDeletedStream,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' stream' sequenceNumber' 100' result' new ResolvedEvent[] { }' null' false' ""' -1'  					sequenceNumber' true' 200)  			);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_deleted_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_deleted_streams.cs,when_no_stream_and_sequence_num_greater_than_zero_should_publish_partition_deleted_message,The following statement contains a magic number: HandleDeletedStream(_streamName' 100' ReadStreamResult.NoStream);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp = new StreamEventReader(_bus' _distibutionPointCorrelationId' null' "stream"' 10' _fakeTimeProvider'  				false'  				produceStreamDeletes: false);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new ResolvedEvent[] { }' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new ResolvedEvent[] { }' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new ResolvedEvent[] { }' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new ResolvedEvent[] { }' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new ResolvedEvent[] { }' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _fakeTimeProvider.AddTime(TimeSpan.FromMilliseconds(500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new ResolvedEvent[] { }' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new ResolvedEvent[] { }' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new ResolvedEvent[] { }' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new ResolvedEvent[] { }' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new ResolvedEvent[] { }' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,publishes_event_distribution_idle_messages,The following statement contains a magic number: Assert.AreEqual(  				2' _consumer.HandledMessages.OfType<ReaderSubscriptionMessage.EventReaderIdle>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_eof_and_idle_eof.cs,publishes_event_distribution_idle_messages,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMilliseconds(500)' second.IdleTimestampUtc - first.IdleTimestampUtc);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100'  					ReadStreamResult.NoStream' new ResolvedEvent[0]' null' false' ""' -1' ExpectedVersion.NoStream'  					true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100'  					ReadStreamResult.NoStream' new ResolvedEvent[0]' null' false' ""' -1' ExpectedVersion.NoStream'  					true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100'  					ReadStreamResult.NoStream' new ResolvedEvent[0]' null' false' ""' -1' ExpectedVersion.NoStream'  					true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_no_stream.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(200' first.SafeTransactionFileReaderJoinPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_no_stream.cs,publishes_subscribe_awake,The following statement contains a magic number: Assert.AreEqual(2' _consumer.HandledMessages.OfType<AwakeServiceMessage.SubscribeAwake>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp = new StreamEventReader(_bus' _distibutionPointCorrelationId' null' "stream"' 10'  				new RealTimeProvider()' false'  				produceStreamDeletes: false);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]  					' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]  					' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]  					' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]  					' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]  					' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(  				3' _consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: var third =  				_consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>()  					.Skip(2)  					.First();
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(400' third.SafeTransactionFileReaderJoinPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(2' first.Data.Metadata[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(3' second.Data.Data[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(4' second.Data.Metadata[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(50' first.Data.Position.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(100' second.Data.Position.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(50' first.Data.EventOrLinkTargetPosition.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(100' second.Data.EventOrLinkTargetPosition.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(50' first.SafeTransactionFileReaderJoinPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(100' second.SafeTransactionFileReaderJoinPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_and_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_and_eof.cs,publishes_subscribe_awake,The following statement contains a magic number: Assert.AreEqual(2' _consumer.HandledMessages.OfType<AwakeServiceMessage.SubscribeAwake>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,When,The following statement contains a magic number: _edp = new StreamEventReader(_bus' _distibutionPointCorrelationId' null' "stream"' 10'  				new RealTimeProvider()' false'  				produceStreamDeletes: false);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(  				2' _consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(2' first.Data.Metadata[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(3' second.Data.Data[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(4' second.Data.Metadata[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(50' first.Data.Position.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(100' second.Data.Position.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(50' first.Data.EventOrLinkTargetPosition.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(100' second.Data.EventOrLinkTargetPosition.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(50' first.SafeTransactionFileReaderJoinPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(100' second.SafeTransactionFileReaderJoinPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,publishes_read_events_from_beginning_with_correct_next_event_number,The following statement contains a magic number: Assert.AreEqual(2' _consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,publishes_read_events_from_beginning_with_correct_next_event_number,The following statement contains a magic number: Assert.AreEqual(  				12' _consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>().Last().FromEventNumber);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 11' 10' true' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 11' 10' true' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 11' 10' true' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 11' 10' true' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 11' 10' true' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 11' 10' true' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 11' 10' true' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,cannot_handle_repeated_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 11' 10' true' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								12' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 13' 11' true' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								12' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 13' 11' true' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								12' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 13' 11' true' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								12' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 13' 11' true' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								12' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 13' 11' true' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								12' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 13' 11' true' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								12' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 13' 11' true' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_stream_event_reader.cs,can_handle_following_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								12' 250' Guid.NewGuid()' Guid.NewGuid()' 250' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type"' new byte[0]' new byte[0]))  					}' null' false' ""' 13' 11' true' 300));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp = new StreamEventReader(_bus' _distibutionPointCorrelationId' null' "stream"' 10'  				new RealTimeProvider()' false'  				produceStreamDeletes: false);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]  					' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]  					' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]  					' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]  					' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[0]  					' null' false' ""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(  				3' _consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: var third =  				_consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>()  					.Skip(2)  					.First();
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(400' third.SafeTransactionFileReaderJoinPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(2' first.Data.Metadata[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(3' second.Data.Data[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(4' second.Data.Metadata[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(50' first.Data.Position.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(100' second.Data.Position.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(50' first.Data.EventOrLinkTargetPosition.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(100' second.Data.EventOrLinkTargetPosition.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(50' first.SafeTransactionFileReaderJoinPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_read_completed_then_pause_then_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_read_completed_then_pause_then_eof.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(100' second.SafeTransactionFileReaderJoinPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_soft_deleted_stream_with_a_single_event_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_soft_deleted_stream_with_a_single_event_event_reader.cs,When,The following statement contains a magic number: _streamEventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamId' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_soft_deleted_stream_with_a_single_event_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_soft_deleted_stream_with_a_single_event_event_reader.cs,When,The following statement contains a magic number: _streamEventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamId' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_soft_deleted_stream_with_a_single_event_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_soft_deleted_stream_with_a_single_event_event_reader.cs,When,The following statement contains a magic number: _streamEventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamId' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_soft_deleted_stream_with_a_single_event_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_soft_deleted_stream_with_a_single_event_event_reader.cs,When,The following statement contains a magic number: _streamEventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamId' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_soft_deleted_stream_with_a_single_event_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_soft_deleted_stream_with_a_single_event_event_reader.cs,When,The following statement contains a magic number: _streamEventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamId' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_soft_deleted_stream_with_a_single_event_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_soft_deleted_stream_with_a_single_event_event_reader.cs,When,The following statement contains a magic number: _streamEventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamId' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_soft_deleted_stream_with_a_single_event_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_soft_deleted_stream_with_a_single_event_event_reader.cs,When,The following statement contains a magic number: _streamEventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamId' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_soft_deleted_stream_with_a_single_event_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_soft_deleted_stream_with_a_single_event_event_reader.cs,When,The following statement contains a magic number: _streamEventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamId' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_soft_deleted_stream_with_a_single_event_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_soft_deleted_stream_with_a_single_event_event_reader.cs,When,The following statement contains a magic number: _streamEventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamId' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_soft_deleted_stream_with_a_single_event_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_soft_deleted_stream_with_a_single_event_event_reader.cs,When,The following statement contains a magic number: _streamEventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamId' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_soft_deleted_stream_with_a_single_event_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_soft_deleted_stream_with_a_single_event_event_reader.cs,When,The following statement contains a magic number: _streamEventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamId' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_soft_deleted_stream_with_a_single_event_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_soft_deleted_stream_with_a_single_event_event_reader.cs,When,The following statement contains a magic number: _streamEventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamId' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_soft_deleted_stream_with_a_single_event_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_soft_deleted_stream_with_a_single_event_event_reader.cs,When,The following statement contains a magic number: _streamEventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamId' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_soft_deleted_stream_with_a_single_event_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_soft_deleted_stream_with_a_single_event_event_reader.cs,When,The following statement contains a magic number: _streamEventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamId' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' _streamId' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd |  								PrepareFlags.IsJson'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_soft_deleted_stream_with_a_single_event_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_soft_deleted_stream_with_a_single_event_event_reader.cs,should_handle_the_2_events,The following statement contains a magic number: Assert.AreEqual(2'  				_consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,Given,The following statement contains a magic number: _fromSequenceNumber = 10;
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,HandleEvents,The following statement contains a magic number: events.Add(  					ResolvedEvent.ForUnresolvedEvent(  						new EventRecord(  							eventNumber' 50 * (eventNumber + 1)' Guid.NewGuid()' Guid.NewGuid()' 50 * (eventNumber + 1)'  							0' _streamName' ExpectedVersion.Any' DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							eventType' new byte[] {0}' new byte[] {0}  						)  					)  				);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,HandleEvents,The following statement contains a magic number: events.Add(  					ResolvedEvent.ForUnresolvedEvent(  						new EventRecord(  							eventNumber' 50 * (eventNumber + 1)' Guid.NewGuid()' Guid.NewGuid()' 50 * (eventNumber + 1)'  							0' _streamName' ExpectedVersion.Any' DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							eventType' new byte[] {0}' new byte[] {0}  						)  					)  				);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,HandleEvents,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamName' start' 100' ReadStreamResult.Success' events.ToArray()' null' false' ""'  					start + 1' end' true' 200)  			);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,HandleEvents,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamName' start' 100' ReadStreamResult.Success' events.ToArray()' null' false' ""'  					start + 1' end' true' 200)  			);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,should_not_allow_first_event_to_be_greater_than_sequence_number,The following statement contains a magic number: long eventSequenceNumber = _fromSequenceNumber + 5;
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,events_after_second_event_should_not_be_in_sequence,The following statement contains a magic number: HandleEvents(new long[]  				{_fromSequenceNumber' _fromSequenceNumber + 1' _fromSequenceNumber + 3' _fromSequenceNumber + 4});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,events_after_second_event_should_not_be_in_sequence,The following statement contains a magic number: HandleEvents(new long[]  				{_fromSequenceNumber' _fromSequenceNumber + 1' _fromSequenceNumber + 3' _fromSequenceNumber + 4});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_after_event_zero.cs,events_after_second_event_should_not_be_in_sequence,The following statement contains a magic number: Assert.AreEqual(2' HandledMessages.OfType<ReaderSubscriptionMessage.Faulted>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,HandleEvents,The following statement contains a magic number: events.Add(  					ResolvedEvent.ForUnresolvedEvent(  						new EventRecord(  							eventNumber' 50 * (eventNumber + 1)' Guid.NewGuid()' Guid.NewGuid()' 50 * (eventNumber + 1)'  							0' _streamName' ExpectedVersion.Any' DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							eventType' new byte[] {0}' new byte[] {0}  						)  					)  				);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,HandleEvents,The following statement contains a magic number: events.Add(  					ResolvedEvent.ForUnresolvedEvent(  						new EventRecord(  							eventNumber' 50 * (eventNumber + 1)' Guid.NewGuid()' Guid.NewGuid()' 50 * (eventNumber + 1)'  							0' _streamName' ExpectedVersion.Any' DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							eventType' new byte[] {0}' new byte[] {0}  						)  					)  				);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,HandleEvents,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamName' start' 100' ReadStreamResult.Success' events.ToArray()' null' false' ""'  					start + 1' end' true' 200)  			);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,HandleEvents,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' _streamName' start' 100' ReadStreamResult.Success' events.ToArray()' null' false' ""'  					start + 1' end' true' 200)  			);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,allows_first_event_to_be_greater_than_sequence_number,The following statement contains a magic number: long eventSequenceNumber = _fromSequenceNumber + 5;
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,events_after_second_event_should_not_be_in_sequence,The following statement contains a magic number: HandleEvents(new long[]  				{_fromSequenceNumber' _fromSequenceNumber + 1' _fromSequenceNumber + 3' _fromSequenceNumber + 4});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,events_after_second_event_should_not_be_in_sequence,The following statement contains a magic number: HandleEvents(new long[]  				{_fromSequenceNumber' _fromSequenceNumber + 1' _fromSequenceNumber + 3' _fromSequenceNumber + 4});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_handling_streams_with_deleted_events_and_reader_starting_at_event_zero.cs,events_after_second_event_should_not_be_in_sequence,The following statement contains a magic number: Assert.AreEqual(2' HandledMessages.OfType<ReaderSubscriptionMessage.Faulted>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp = new StreamEventReader(_bus' _distibutionPointCorrelationId' null' "stream"' 10' _fakeTimeProvider'  				resolveLinkTos: false' stopOnEof: true' produceStreamDeletes: false);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' _firstEventId' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' _secondEventId' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false'  					""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false'  					""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false'  					""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false'  					""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success' new ResolvedEvent[] { }' null' false'  					""' 12' 11' true' 400));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_onetime_reader_handles_eof.cs,does_not_publish_read_messages_anymore,The following statement contains a magic number: Assert.AreEqual(2' _consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_paused_then_handling_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_paused_then_handling_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.NoStream' new ResolvedEvent[0]  					' null' false' ""' -1' ExpectedVersion.NoStream' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_paused_then_handling_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_paused_then_handling_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.NoStream' new ResolvedEvent[0]  					' null' false' ""' -1' ExpectedVersion.NoStream' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_paused_then_handling_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_paused_then_handling_no_stream.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.NoStream' new ResolvedEvent[0]  					' null' false' ""' -1' ExpectedVersion.NoStream' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_paused_then_handling_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_paused_then_handling_no_stream.cs,publishes_correct_committed_event_received_messages,The following statement contains a magic number: Assert.AreEqual(200' first.SafeTransactionFileReaderJoinPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader = new StreamEventReader(_bus' _distributionCorrelationId' null' "stream"' 10'  				_fakeTimeProvider'  				resolveLinkTos: false' stopOnEof: true' produceStreamDeletes: false);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					correlationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_completes_before_timeout.cs,should_deliver_events,The following statement contains a magic number: Assert.AreEqual(2'  				_consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader = new StreamEventReader(_bus' _distributionCorrelationId' null' "stream"' 10'  				_fakeTimeProvider'  				resolveLinkTos: false' stopOnEof: true' produceStreamDeletes: false);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_readCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_readCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_readCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_readCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_readCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_readCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_readCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_readCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_readCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_readCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_readCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_readCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_readCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_readCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2}))'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								11' 100' Guid.NewGuid()' Guid.NewGuid()' 100' 0' "stream"' ExpectedVersion.Any'  								DateTime.UtcNow'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type2"' new byte[] {3}' new byte[] {4}))  					}' null' false' ""' 12' 11' true' 200));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_resuming_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_resuming_stream_event_reader.cs,When,The following statement contains a magic number: _edp = new StreamEventReader(_bus' _distibutionPointCorrelationId' null' "stream"' 10'  				new RealTimeProvider()' false'  				produceStreamDeletes: false);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_resuming_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_resuming_stream_event_reader.cs,it_publishes_read_events_from_beginning,The following statement contains a magic number: Assert.AreEqual(  				10' _consumer.HandledMessages.OfType<ClientMessage.ReadStreamEventsForward>().Single().FromEventNumber);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_resuming_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_resuming_stream_event_reader.cs,can_handle_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(new EventRecord(  							10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  							DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							"event_type"' new byte[0]' new byte[0])' 0)  					}' null' false' ""' 11' 10' true' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_resuming_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_resuming_stream_event_reader.cs,can_handle_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(new EventRecord(  							10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  							DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							"event_type"' new byte[0]' new byte[0])' 0)  					}' null' false' ""' 11' 10' true' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_resuming_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_resuming_stream_event_reader.cs,can_handle_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(new EventRecord(  							10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  							DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							"event_type"' new byte[0]' new byte[0])' 0)  					}' null' false' ""' 11' 10' true' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_resuming_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_resuming_stream_event_reader.cs,can_handle_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(new EventRecord(  							10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  							DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							"event_type"' new byte[0]' new byte[0])' 0)  					}' null' false' ""' 11' 10' true' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_resuming_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_resuming_stream_event_reader.cs,can_handle_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(new EventRecord(  							10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  							DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							"event_type"' new byte[0]' new byte[0])' 0)  					}' null' false' ""' 11' 10' true' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_resuming_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_resuming_stream_event_reader.cs,can_handle_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(new EventRecord(  							10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  							DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							"event_type"' new byte[0]' new byte[0])' 0)  					}' null' false' ""' 11' 10' true' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_resuming_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_resuming_stream_event_reader.cs,can_handle_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(new EventRecord(  							10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  							DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							"event_type"' new byte[0]' new byte[0])' 0)  					}' null' false' ""' 11' 10' true' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_resuming_stream_event_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_resuming_stream_event_reader.cs,can_handle_read_events_completed,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadStreamEventsForwardCompleted(  					_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(new EventRecord(  							10' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "stream"' ExpectedVersion.Any'  							DateTime.UtcNow'  							PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  							"event_type"' new byte[0]' new byte[0])' 0)  					}' null' false' ""' 11' 10' true' 100));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_stream_event_reader_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_stream_event_reader_has_been_created.cs,handle_read_events_completed_throws,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  						new ResolvedEvent[0]' null' false' ""' -1' 4' true' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_stream_event_reader_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_stream_event_reader_has_been_created.cs,handle_read_events_completed_throws,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  						new ResolvedEvent[0]' null' false' ""' -1' 4' true' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_stream_event_reader_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_stream_event_reader_has_been_created.cs,handle_read_events_completed_throws,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  						new ResolvedEvent[0]' null' false' ""' -1' 4' true' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.stream_reader,when_stream_event_reader_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\stream_reader\when_stream_event_reader_has_been_created.cs,handle_read_events_completed_throws,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_edp.Handle(  					new ClientMessage.ReadStreamEventsForwardCompleted(  						_distibutionPointCorrelationId' "stream"' 100' 100' ReadStreamResult.Success'  						new ResolvedEvent[0]' null' false' ""' -1' 4' true' 100));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader,TestFixtureWithEventReaderService,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\TestFixtureWithEventReaderService.cs,Setup,The following statement contains a magic number: ICheckpoint writerCheckpoint = new InMemoryCheckpoint(1000);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader,TestFixtureWithEventReaderService,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\TestFixtureWithEventReaderService.cs,Setup,The following statement contains a magic number: _readerService = new EventReaderCoreService(  				GetInputQueue()' _ioDispatcher' 10' writerCheckpoint' runHeadingReader: GivenHeadingReaderRunning()'  				faultOutOfOrderProjections: true);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp = new TransactionFileEventReader(_bus' _distibutionPointCorrelationId' null' new TFPos(100' 50)'  				_fakeTimeProvider'  				deliverEndOfTFPosition: false);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp = new TransactionFileEventReader(_bus' _distibutionPointCorrelationId' null' new TFPos(100' 50)'  				_fakeTimeProvider'  				deliverEndOfTFPosition: false);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new EventStore.Core.Data.ResolvedEvent[0]' null' false' 100' new TFPos()' new TFPos()' new TFPos()'  					500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new EventStore.Core.Data.ResolvedEvent[0]' null' false' 100' new TFPos()' new TFPos()' new TFPos()'  					500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _fakeTimeProvider.AddTime(TimeSpan.FromMilliseconds(500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new EventStore.Core.Data.ResolvedEvent[0]' null' false' 100' new TFPos()' new TFPos()' new TFPos()'  					500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new EventStore.Core.Data.ResolvedEvent[0]' null' false' 100' new TFPos()' new TFPos()' new TFPos()'  					500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,publishes_event_distribution_idle_messages,The following statement contains a magic number: Assert.AreEqual(  				2' _consumer.HandledMessages.OfType<ReaderSubscriptionMessage.EventReaderIdle>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_eof_and_idle_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_eof_and_idle_eof.cs,publishes_event_distribution_idle_messages,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMilliseconds(500)' second.IdleTimestampUtc - first.IdleTimestampUtc);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp = new TransactionFileEventReader(_bus' _distibutionPointCorrelationId' null' new TFPos(100' 50)'  				_fakeTimeProvider'  				deliverEndOfTFPosition: false);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp = new TransactionFileEventReader(_bus' _distibutionPointCorrelationId' null' new TFPos(100' 50)'  				_fakeTimeProvider'  				deliverEndOfTFPosition: false);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamDeleted' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamDeleted' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamDeleted' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamDeleted' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamDeleted' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamDeleted' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamDeleted' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamDeleted' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamDeleted' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamDeleted' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamDeleted' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamDeleted' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamDeleted' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamDeleted' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamDeleted' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_hard_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_hard_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamDeleted' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100'  					new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp = new TransactionFileEventReader(_bus' _distibutionPointCorrelationId' null' new TFPos(100' 50)'  				_fakeTimeProvider'  				deliverEndOfTFPosition: false);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp = new TransactionFileEventReader(_bus' _distibutionPointCorrelationId' null' new TFPos(100' 50)'  				_fakeTimeProvider'  				deliverEndOfTFPosition: false);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "$$a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamMetadata'  								new StreamMetadata(truncateBefore: EventNumber.DeletedStream).ToJsonBytes()'  								new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)'  					new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "$$a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamMetadata'  								new StreamMetadata(truncateBefore: EventNumber.DeletedStream).ToJsonBytes()'  								new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)'  					new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "$$a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamMetadata'  								new StreamMetadata(truncateBefore: EventNumber.DeletedStream).ToJsonBytes()'  								new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)'  					new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "$$a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamMetadata'  								new StreamMetadata(truncateBefore: EventNumber.DeletedStream).ToJsonBytes()'  								new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)'  					new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "$$a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamMetadata'  								new StreamMetadata(truncateBefore: EventNumber.DeletedStream).ToJsonBytes()'  								new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)'  					new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "$$a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamMetadata'  								new StreamMetadata(truncateBefore: EventNumber.DeletedStream).ToJsonBytes()'  								new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)'  					new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "$$a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamMetadata'  								new StreamMetadata(truncateBefore: EventNumber.DeletedStream).ToJsonBytes()'  								new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)'  					new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "$$a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamMetadata'  								new StreamMetadata(truncateBefore: EventNumber.DeletedStream).ToJsonBytes()'  								new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)'  					new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "$$a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamMetadata'  								new StreamMetadata(truncateBefore: EventNumber.DeletedStream).ToJsonBytes()'  								new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)'  					new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "$$a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamMetadata'  								new StreamMetadata(truncateBefore: EventNumber.DeletedStream).ToJsonBytes()'  								new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)'  					new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "$$a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamMetadata'  								new StreamMetadata(truncateBefore: EventNumber.DeletedStream).ToJsonBytes()'  								new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)'  					new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "$$a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamMetadata'  								new StreamMetadata(truncateBefore: EventNumber.DeletedStream).ToJsonBytes()'  								new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)'  					new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "$$a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamMetadata'  								new StreamMetadata(truncateBefore: EventNumber.DeletedStream).ToJsonBytes()'  								new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)'  					new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "$$a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamMetadata'  								new StreamMetadata(truncateBefore: EventNumber.DeletedStream).ToJsonBytes()'  								new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)'  					new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "$$a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamMetadata'  								new StreamMetadata(truncateBefore: EventNumber.DeletedStream).ToJsonBytes()'  								new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)'  					new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_handling_stream_soft_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_handling_stream_soft_deleted.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "$$a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								SystemEventTypes.StreamMetadata'  								new StreamMetadata(truncateBefore: EventNumber.DeletedStream).ToJsonBytes()'  								new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)'  					new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp = new TransactionFileEventReader(_bus' _distibutionPointCorrelationId' null' new TFPos(100' 50)'  				_fakeTimeProvider'  				deliverEndOfTFPosition: false' stopOnEof: true);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp = new TransactionFileEventReader(_bus' _distibutionPointCorrelationId' null' new TFPos(100' 50)'  				_fakeTimeProvider'  				deliverEndOfTFPosition: false' stopOnEof: true);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' _firstEventId' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' _secondEventId' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new EventStore.Core.Data.ResolvedEvent[0]' null' false' 100' new TFPos()' new TFPos()' new TFPos()'  					500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,When,The following statement contains a magic number: _edp.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new EventStore.Core.Data.ResolvedEvent[0]' null' false' 100' new TFPos()' new TFPos()' new TFPos()'  					500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_onetime_reader_handles_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_onetime_reader_handles_eof.cs,does_not_publish_read_messages_anymore,The following statement contains a magic number: Assert.AreEqual(2' _consumer.HandledMessages.OfType<ClientMessage.ReadAllEventsForward>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader = new TransactionFileEventReader(_bus' _distributionCorrelationId' null' new TFPos(100' 50)'  				_fakeTimeProvider'  				deliverEndOfTFPosition: false' stopOnEof: true);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader = new TransactionFileEventReader(_bus' _distributionCorrelationId' null' new TFPos(100' 50)'  				_fakeTimeProvider'  				deliverEndOfTFPosition: false' stopOnEof: true);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					correlationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_completes_before_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_completes_before_timeout.cs,should_deliver_events,The following statement contains a magic number: Assert.AreEqual(2'  				_consumer.HandledMessages.OfType<ReaderSubscriptionMessage.CommittedEventDistributed>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader = new TransactionFileEventReader(_bus' _distributionCorrelationId' null' new TFPos(100' 50)'  				_fakeTimeProvider'  				deliverEndOfTFPosition: false' stopOnEof: true);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader = new TransactionFileEventReader(_bus' _distributionCorrelationId' null' new TFPos(100' 50)'  				_fakeTimeProvider'  				deliverEndOfTFPosition: false' stopOnEof: true);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					_readAllEventsForwardCorrelationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					_readAllEventsForwardCorrelationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					_readAllEventsForwardCorrelationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					_readAllEventsForwardCorrelationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					_readAllEventsForwardCorrelationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					_readAllEventsForwardCorrelationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					_readAllEventsForwardCorrelationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					_readAllEventsForwardCorrelationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					_readAllEventsForwardCorrelationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					_readAllEventsForwardCorrelationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					_readAllEventsForwardCorrelationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					_readAllEventsForwardCorrelationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					_readAllEventsForwardCorrelationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					_readAllEventsForwardCorrelationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					_readAllEventsForwardCorrelationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reader.transaction_file_reader,when_read_timeout_occurs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reader\transaction_file_reader\when_read_timeout_occurs.cs,When,The following statement contains a magic number: _eventReader.Handle(  				new ClientMessage.ReadAllEventsForwardCompleted(  					_readAllEventsForwardCorrelationId' ReadAllResult.Success' null'  					new[] {  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								1' 50' Guid.NewGuid()' Guid.NewGuid()' 50' 0' "a"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 100)'  						EventStore.Core.Data.ResolvedEvent.ForUnresolvedEvent(  							new EventRecord(  								2' 150' Guid.NewGuid()' Guid.NewGuid()' 150' 0' "b"' ExpectedVersion.Any'  								_fakeTimeProvider.Now'  								PrepareFlags.SingleWrite | PrepareFlags.TransactionBegin | PrepareFlags.TransactionEnd'  								"event_type1"' new byte[] {1}' new byte[] {2})' 200)'  					}' null' false' 100' new TFPos(200' 150)' new TFPos(500' -1)' new TFPos(100' 50)' 500));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,TestFixtureWithEventReorderingProjectionSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\TestFixtureWithEventReorderingProjectionSubscription.cs,Given,The following statement contains a magic number: _timeBetweenEvents = 1100;
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,TestFixtureWithEventReorderingProjectionSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\TestFixtureWithEventReorderingProjectionSubscription.cs,Given,The following statement contains a magic number: _processingLagMs = 500;
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,TestFixtureWithEventReorderingProjectionSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\TestFixtureWithEventReorderingProjectionSubscription.cs,Given,The following statement contains a magic number: _source = builder => {  				builder.FromStream("a");  				builder.FromStream("b");  				builder.AllEvents();  				builder.SetReorderEvents(true);  				builder.SetProcessingLag(1000); // ms  			};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_creating_projection_subscription.cs,it_can_be_created,The following statement contains a magic number: new EventReorderingReaderSubscription(  				new FakePublisher()'  				Guid.NewGuid()'  				CheckpointTag.FromPosition(0' 0' -1)'  				CreateReaderStrategy()'  				new FakeTimeProvider()'  				1000'  				2000'  				10000'  				500);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_creating_projection_subscription.cs,it_can_be_created,The following statement contains a magic number: new EventReorderingReaderSubscription(  				new FakePublisher()'  				Guid.NewGuid()'  				CheckpointTag.FromPosition(0' 0' -1)'  				CreateReaderStrategy()'  				new FakeTimeProvider()'  				1000'  				2000'  				10000'  				500);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_creating_projection_subscription.cs,it_can_be_created,The following statement contains a magic number: new EventReorderingReaderSubscription(  				new FakePublisher()'  				Guid.NewGuid()'  				CheckpointTag.FromPosition(0' 0' -1)'  				CreateReaderStrategy()'  				new FakeTimeProvider()'  				1000'  				2000'  				10000'  				500);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_creating_projection_subscription.cs,it_can_be_created,The following statement contains a magic number: new EventReorderingReaderSubscription(  				new FakePublisher()'  				Guid.NewGuid()'  				CheckpointTag.FromPosition(0' 0' -1)'  				CreateReaderStrategy()'  				new FakeTimeProvider()'  				1000'  				2000'  				10000'  				500);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_creating_projection_subscription.cs,null_publisher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EventReorderingReaderSubscription(  					null'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					CreateReaderStrategy()'  					new FakeTimeProvider()'  					1000'  					2000'  					10000'  					500);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_creating_projection_subscription.cs,null_publisher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EventReorderingReaderSubscription(  					null'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					CreateReaderStrategy()'  					new FakeTimeProvider()'  					1000'  					2000'  					10000'  					500);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_creating_projection_subscription.cs,null_publisher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EventReorderingReaderSubscription(  					null'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					CreateReaderStrategy()'  					new FakeTimeProvider()'  					1000'  					2000'  					10000'  					500);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_creating_projection_subscription.cs,null_publisher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EventReorderingReaderSubscription(  					null'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					CreateReaderStrategy()'  					new FakeTimeProvider()'  					1000'  					2000'  					10000'  					500);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_creating_projection_subscription.cs,null_describe_source_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EventReorderingReaderSubscription(  					new FakePublisher()'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					null'  					new FakeTimeProvider()'  					1000'  					2000'  					10000'  					500);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_creating_projection_subscription.cs,null_describe_source_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EventReorderingReaderSubscription(  					new FakePublisher()'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					null'  					new FakeTimeProvider()'  					1000'  					2000'  					10000'  					500);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_creating_projection_subscription.cs,null_describe_source_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EventReorderingReaderSubscription(  					new FakePublisher()'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					null'  					new FakeTimeProvider()'  					1000'  					2000'  					10000'  					500);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_creating_projection_subscription.cs,null_describe_source_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EventReorderingReaderSubscription(  					new FakePublisher()'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					null'  					new FakeTimeProvider()'  					1000'  					2000'  					10000'  					500);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_creating_projection_subscription.cs,null_time_provider_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EventReorderingReaderSubscription(  					new FakePublisher()'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					CreateReaderStrategy()'  					null'  					1000'  					2000'  					10000'  					500);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_creating_projection_subscription.cs,null_time_provider_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EventReorderingReaderSubscription(  					new FakePublisher()'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					CreateReaderStrategy()'  					null'  					1000'  					2000'  					10000'  					500);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_creating_projection_subscription.cs,null_time_provider_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EventReorderingReaderSubscription(  					new FakePublisher()'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					CreateReaderStrategy()'  					null'  					1000'  					2000'  					10000'  					500);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_creating_projection_subscription.cs,null_time_provider_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new EventReorderingReaderSubscription(  					new FakePublisher()'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					CreateReaderStrategy()'  					null'  					1000'  					2000'  					10000'  					500);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_an_event_after_the_delay_and_reordering_is_required,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_an_event_after_the_delay_and_reordering_is_required.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "a"' 1' false' _secondEventId' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_an_event_after_the_delay_and_reordering_is_required,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_an_event_after_the_delay_and_reordering_is_required.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "a"' 1' false' _secondEventId' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_an_event_after_the_delay_and_reordering_is_required,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_an_event_after_the_delay_and_reordering_is_required.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 100)' "b"' 1' false' _firstEventId' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp.AddMilliseconds(1)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_an_event_after_the_delay_and_reordering_is_required,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_an_event_after_the_delay_and_reordering_is_required.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 100)' "b"' 1' false' _firstEventId' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp.AddMilliseconds(1)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_an_event_after_the_delay_and_reordering_is_required,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_an_event_after_the_delay_and_reordering_is_required.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(310' 305)' "a"' 2' false' Guid.NewGuid()' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp.AddMilliseconds(_timeBetweenEvents)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_an_event_after_the_delay_and_reordering_is_required,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_an_event_after_the_delay_and_reordering_is_required.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(310' 305)' "a"' 2' false' Guid.NewGuid()' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp.AddMilliseconds(_timeBetweenEvents)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_an_event_after_the_delay_and_reordering_is_required,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_an_event_after_the_delay_and_reordering_is_required.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(310' 305)' "a"' 2' false' Guid.NewGuid()' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp.AddMilliseconds(_timeBetweenEvents)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_an_event_after_the_delay_and_reordering_is_required,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_an_event_after_the_delay_and_reordering_is_required.cs,first_two_events_are_reordered,The following statement contains a magic number: Assert.AreEqual(2' _eventHandler.HandledMessages.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_an_idle_notification_and_reordering_is_required,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_an_idle_notification_and_reordering_is_required.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "a"' 1' false' _secondEventId' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_an_idle_notification_and_reordering_is_required,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_an_idle_notification_and_reordering_is_required.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "a"' 1' false' _secondEventId' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_an_idle_notification_and_reordering_is_required,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_an_idle_notification_and_reordering_is_required.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 100)' "b"' 1' false' _firstEventId' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp.AddMilliseconds(1)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_an_idle_notification_and_reordering_is_required,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_an_idle_notification_and_reordering_is_required.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 100)' "b"' 1' false' _firstEventId' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp.AddMilliseconds(1)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_an_idle_notification_and_reordering_is_required,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_an_idle_notification_and_reordering_is_required.cs,events_are_reordered,The following statement contains a magic number: Assert.AreEqual(2' _eventHandler.HandledMessages.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_a_second_event_after_the_delay,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_a_second_event_after_the_delay.cs,When,The following statement contains a magic number: _timeBetweenEvents = 1100;
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_a_second_event_after_the_delay,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_a_second_event_after_the_delay.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "a"' 1' false' _firstEventId' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_a_second_event_after_the_delay,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_a_second_event_after_the_delay.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "a"' 1' false' _firstEventId' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_a_second_event_after_the_delay,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_a_second_event_after_the_delay.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 250)' "a"' 2' false' Guid.NewGuid()' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp.AddMilliseconds(_timeBetweenEvents)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_a_second_event_after_the_delay,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_a_second_event_after_the_delay.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 250)' "a"' 2' false' Guid.NewGuid()' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp.AddMilliseconds(_timeBetweenEvents)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_a_second_event_after_the_delay,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_a_second_event_after_the_delay.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 250)' "a"' 2' false' Guid.NewGuid()' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp.AddMilliseconds(_timeBetweenEvents)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_committed_event_passing_the_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_committed_event_passing_the_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "a"' 1' false' Guid.NewGuid()' "bad-event-type"' false'  					new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_committed_event_passing_the_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_committed_event_passing_the_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "a"' 1' false' Guid.NewGuid()' "bad-event-type"' false'  					new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_duplicate_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_projectionCorrelationId' new TFPos(200' 150)' "a"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]' _timestamp));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_duplicate_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_projectionCorrelationId' new TFPos(200' 150)' "a"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]' _timestamp));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_duplicate_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_projectionCorrelationId' new TFPos(100' 50)' "a"' 0' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]' _timestamp.AddMilliseconds(1)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_duplicate_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_projectionCorrelationId' new TFPos(100' 50)' "a"' 0' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]' _timestamp.AddMilliseconds(1)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_duplicate_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_projectionCorrelationId' new TFPos(200' 150)' "a"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]' _timestamp.AddMilliseconds(1)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_duplicate_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_projectionCorrelationId' new TFPos(200' 150)' "a"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]' _timestamp.AddMilliseconds(1)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_duplicate_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				new ReaderSubscriptionMessage.EventReaderIdle(  					_projectionCorrelationId' _timestamp.AddMilliseconds(1100)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_duplicate_events.cs,duplicates_are_not_passed_to_downstream_handler,The following statement contains a magic number: Assert.AreEqual(2' _eventHandler.HandledMessages.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_two_subsequent_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_two_subsequent_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "a"' 1' false' _firstEventId' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_two_subsequent_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_two_subsequent_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "a"' 1' false' _firstEventId' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_two_subsequent_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_two_subsequent_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 250)' "a"' 2' false' Guid.NewGuid()' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp.AddMilliseconds(_timeBetweenEvents)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_two_subsequent_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_two_subsequent_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 250)' "a"' 2' false' Guid.NewGuid()' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp.AddMilliseconds(_timeBetweenEvents)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_handling_two_subsequent_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_handling_two_subsequent_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 250)' "a"' 2' false' Guid.NewGuid()' "bad-event-type"' false'  					new byte[0]' new byte[0]' _firstEventTimestamp.AddMilliseconds(_timeBetweenEvents)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,Given,The following statement contains a magic number: _source = builder => {  				builder.FromStream("a");  				builder.FromStream("b");  				builder.IncludeEvent("specific-event");  				builder.SetReorderEvents(true);  				builder.SetProcessingLag(1000); // ms  			};
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_projectionCorrelationId' new TFPos(200' 150)' "a"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]' _timestamp));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_projectionCorrelationId' new TFPos(200' 150)' "a"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]' _timestamp));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_projectionCorrelationId' new TFPos(2000' 950)' "a"' 2' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]' _timestamp.AddMilliseconds(1)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_projectionCorrelationId' new TFPos(2000' 950)' "a"' 2' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]' _timestamp.AddMilliseconds(1)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_projectionCorrelationId' new TFPos(2000' 950)' "a"' 2' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]' _timestamp.AddMilliseconds(1)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_projectionCorrelationId' new TFPos(2100' 2050)' "b"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]' _timestamp.AddMilliseconds(1)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					_projectionCorrelationId' new TFPos(2100' 2050)' "b"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]' _timestamp.AddMilliseconds(1)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				new ReaderSubscriptionMessage.EventReaderIdle(  					_projectionCorrelationId' _timestamp.AddMilliseconds(1100)));
Magic Number,EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\event_reordering_projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,checkpoint_suggested_message_is_published_once_for_interval,The following statement contains a magic number: Assert.AreEqual(2' _checkpointHandler.HandledMessages[0].CheckpointTag.Streams["a"]);
Magic Number,feed_reader,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,it_can_be_created,The following statement contains a magic number: new FeedReader(  					_subscriptionDispatcher' SystemAccount.Principal' _testQueryDefinition'  					CheckpointTag.FromPosition(0' 0' -1)' 10' Guid.NewGuid()' new NoopEnvelope()'  					new RealTimeProvider());
Magic Number,feed_reader,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,null_subscription_dispatcher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  					new FeedReader(  						null' SystemAccount.Principal' _testQueryDefinition' CheckpointTag.FromPosition(0' 0' -1)' 10'  						Guid.NewGuid()' new NoopEnvelope()' new RealTimeProvider());  				});
Magic Number,feed_reader,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,null_user_account_is_allowed,The following statement contains a magic number: new FeedReader(  					_subscriptionDispatcher' null' _testQueryDefinition' CheckpointTag.FromPosition(0' 0' -1)' 10'  					Guid.NewGuid()' new NoopEnvelope()' new RealTimeProvider());
Magic Number,feed_reader,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,null_query_definition_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  					new FeedReader(  						_subscriptionDispatcher' SystemAccount.Principal' null' CheckpointTag.FromPosition(0' 0' -1)'  						10' Guid.NewGuid()'  						new NoopEnvelope()' new RealTimeProvider());  				});
Magic Number,feed_reader,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,null_from_position_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  					new FeedReader(  						_subscriptionDispatcher' SystemAccount.Principal' _testQueryDefinition' null' 10'  						Guid.NewGuid()'  						new NoopEnvelope()' new RealTimeProvider());  				});
Magic Number,feed_reader,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,null_envelope_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  					new FeedReader(  						_subscriptionDispatcher' SystemAccount.Principal' _testQueryDefinition'  						CheckpointTag.FromPosition(0' 0' -1)' 10' Guid.NewGuid()' null' new RealTimeProvider());  				});
Magic Number,feed_reader,FeedReaderSpecification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,SetUp,The following statement contains a magic number: _feedReader = new FeedReader(  					_subscriptionDispatcher' SystemAccount.Principal' _testQueryDefinition' GivenFromPosition()' 10'  					Guid.NewGuid()' new PublishEnvelope(_bus)' new RealTimeProvider());
Magic Number,feed_reader,when_handling_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,When,The following statement contains a magic number: _feedReader.Handle(  						EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  							new ResolvedEvent(  								"stream"' i' "stream"' i' false' new TFPos(i * 100' i * 100 - 50)'  								new TFPos(i * 100' i * 100 - 50)' Guid.NewGuid()' "type"' false' new byte[0]'  								new byte[0]'  								new byte[0]' null' DateTime.UtcNow)' _subscriptionId' _number++));
Magic Number,feed_reader,when_handling_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,When,The following statement contains a magic number: _feedReader.Handle(  						EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  							new ResolvedEvent(  								"stream"' i' "stream"' i' false' new TFPos(i * 100' i * 100 - 50)'  								new TFPos(i * 100' i * 100 - 50)' Guid.NewGuid()' "type"' false' new byte[0]'  								new byte[0]'  								new byte[0]' null' DateTime.UtcNow)' _subscriptionId' _number++));
Magic Number,feed_reader,when_handling_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,When,The following statement contains a magic number: _feedReader.Handle(  						EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  							new ResolvedEvent(  								"stream"' i' "stream"' i' false' new TFPos(i * 100' i * 100 - 50)'  								new TFPos(i * 100' i * 100 - 50)' Guid.NewGuid()' "type"' false' new byte[0]'  								new byte[0]'  								new byte[0]' null' DateTime.UtcNow)' _subscriptionId' _number++));
Magic Number,feed_reader,when_handling_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,When,The following statement contains a magic number: _feedReader.Handle(  						EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  							new ResolvedEvent(  								"stream"' i' "stream"' i' false' new TFPos(i * 100' i * 100 - 50)'  								new TFPos(i * 100' i * 100 - 50)' Guid.NewGuid()' "type"' false' new byte[0]'  								new byte[0]'  								new byte[0]' null' DateTime.UtcNow)' _subscriptionId' _number++));
Magic Number,feed_reader,when_handling_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,When,The following statement contains a magic number: _feedReader.Handle(  						EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  							new ResolvedEvent(  								"stream"' i' "stream"' i' false' new TFPos(i * 100' i * 100 - 50)'  								new TFPos(i * 100' i * 100 - 50)' Guid.NewGuid()' "type"' false' new byte[0]'  								new byte[0]'  								new byte[0]' null' DateTime.UtcNow)' _subscriptionId' _number++));
Magic Number,feed_reader,when_handling_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,When,The following statement contains a magic number: _feedReader.Handle(  						EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  							new ResolvedEvent(  								"stream"' i' "stream"' i' false' new TFPos(i * 100' i * 100 - 50)'  								new TFPos(i * 100' i * 100 - 50)' Guid.NewGuid()' "type"' false' new byte[0]'  								new byte[0]'  								new byte[0]' null' DateTime.UtcNow)' _subscriptionId' _number++));
Magic Number,feed_reader,when_handling_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,When,The following statement contains a magic number: i < 100
Magic Number,feed_reader,when_handling_eof_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,Given,The following statement contains a magic number: _feedReader.Handle(  						EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  							new ResolvedEvent(  								"stream"' i' "stream"' i' false' new TFPos(i * 100' i * 100 - 50)'  								new TFPos(i * 100' i * 100 - 50)' Guid.NewGuid()' "type"' false' new byte[0]'  								new byte[0]'  								new byte[0]' null' DateTime.UtcNow)' _subscriptionId' _number++));
Magic Number,feed_reader,when_handling_eof_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,Given,The following statement contains a magic number: _feedReader.Handle(  						EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  							new ResolvedEvent(  								"stream"' i' "stream"' i' false' new TFPos(i * 100' i * 100 - 50)'  								new TFPos(i * 100' i * 100 - 50)' Guid.NewGuid()' "type"' false' new byte[0]'  								new byte[0]'  								new byte[0]' null' DateTime.UtcNow)' _subscriptionId' _number++));
Magic Number,feed_reader,when_handling_eof_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,Given,The following statement contains a magic number: _feedReader.Handle(  						EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  							new ResolvedEvent(  								"stream"' i' "stream"' i' false' new TFPos(i * 100' i * 100 - 50)'  								new TFPos(i * 100' i * 100 - 50)' Guid.NewGuid()' "type"' false' new byte[0]'  								new byte[0]'  								new byte[0]' null' DateTime.UtcNow)' _subscriptionId' _number++));
Magic Number,feed_reader,when_handling_eof_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,Given,The following statement contains a magic number: _feedReader.Handle(  						EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  							new ResolvedEvent(  								"stream"' i' "stream"' i' false' new TFPos(i * 100' i * 100 - 50)'  								new TFPos(i * 100' i * 100 - 50)' Guid.NewGuid()' "type"' false' new byte[0]'  								new byte[0]'  								new byte[0]' null' DateTime.UtcNow)' _subscriptionId' _number++));
Magic Number,feed_reader,when_handling_eof_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,Given,The following statement contains a magic number: _feedReader.Handle(  						EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  							new ResolvedEvent(  								"stream"' i' "stream"' i' false' new TFPos(i * 100' i * 100 - 50)'  								new TFPos(i * 100' i * 100 - 50)' Guid.NewGuid()' "type"' false' new byte[0]'  								new byte[0]'  								new byte[0]' null' DateTime.UtcNow)' _subscriptionId' _number++));
Magic Number,feed_reader,when_handling_eof_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,Given,The following statement contains a magic number: _feedReader.Handle(  						EventReaderSubscriptionMessage.CommittedEventReceived.Sample(  							new ResolvedEvent(  								"stream"' i' "stream"' i' false' new TFPos(i * 100' i * 100 - 50)'  								new TFPos(i * 100' i * 100 - 50)' Guid.NewGuid()' "type"' false' new byte[0]'  								new byte[0]'  								new byte[0]' null' DateTime.UtcNow)' _subscriptionId' _number++));
Magic Number,feed_reader,when_handling_eof_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,When,The following statement contains a magic number: _feedReader.Handle(  					new EventReaderSubscriptionMessage.EofReached(  						_subscriptionId' CheckpointTag.FromPosition(0' _maxN * 100' _maxN * 100 - 50)' _number++));
Magic Number,feed_reader,when_handling_eof_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,When,The following statement contains a magic number: _feedReader.Handle(  					new EventReaderSubscriptionMessage.EofReached(  						_subscriptionId' CheckpointTag.FromPosition(0' _maxN * 100' _maxN * 100 - 50)' _number++));
Magic Number,feed_reader,when_handling_eof_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,When,The following statement contains a magic number: _feedReader.Handle(  					new EventReaderSubscriptionMessage.EofReached(  						_subscriptionId' CheckpointTag.FromPosition(0' _maxN * 100' _maxN * 100 - 50)' _number++));
Magic Number,feed_reader,when_reading_existing_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,Given,The following statement contains a magic number: _maxEvents = 2;
Magic Number,feed_reader,when_reading_existing_events_by_parts,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,Given,The following statement contains a magic number: _maxEvents = 2;
Magic Number,feed_reader,when_reading_existing_events_by_parts,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,publishes_feed_page_message,The following statement contains a magic number: Assert.AreEqual(2' feedPage.Length);
Magic Number,feed_reader,when_reading_existing_events_by_parts,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader.cs,returns_correct_last_reader_position,The following statement contains a magic number: Assert.AreEqual(CheckpointTag.FromStreamPosition(0' "test-stream"' 2)' feedPage.LastReaderPosition);
Magic Number,feed_reader_by_event_indexes,when_reading_the_reordered_events_from_the_same_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader_by_event_indexes.cs,Given,The following statement contains a magic number: _maxEvents = 3;
Magic Number,feed_reader_by_event_indexes,when_reading_the_reordered_events_from_the_same_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\feed_reader\feed_reader_by_event_indexes.cs,returns_correct_event_sequence,The following statement contains a magic number: Assert.That(  					new long[] {0' 1' 2}.SequenceEqual(  						feedPage.Events.Select(e => e.ResolvedEvent.EventSequenceNumber).OrderBy(v => v)));
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_simple_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' new TFPos(200' 150)'  						Guid.NewGuid()'  						"event_type"' true' dataBytes' metadataBytes' null' null' _dateTime)' out _state'  					out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_simple_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' new TFPos(200' 150)'  						Guid.NewGuid()'  						"event_type"' true' dataBytes' metadataBytes' null' null' _dateTime)' out _state'  					out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_simple_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' new TFPos(200' 150)'  						Guid.NewGuid()'  						"event_type"' true' dataBytes' metadataBytes' null' null' _dateTime)' out _state'  					out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_simple_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' new TFPos(200' 150)'  						Guid.NewGuid()'  						"event_type"' true' dataBytes' metadataBytes' null' null' _dateTime)' out _state'  					out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_simple_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' new TFPos(200' 150)'  						Guid.NewGuid()'  						"event_type"' true' dataBytes' metadataBytes' null' null' _dateTime)' out _state'  					out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_simple_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' new TFPos(200' 150)'  						Guid.NewGuid()'  						"event_type"' true' dataBytes' metadataBytes' null' null' _dateTime)' out _state'  					out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_simple_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' new TFPos(200' 150)'  						Guid.NewGuid()'  						"event_type"' true' dataBytes' metadataBytes' null' null' _dateTime)' out _state'  					out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_simple_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' new TFPos(200' 150)'  						Guid.NewGuid()'  						"event_type"' true' dataBytes' metadataBytes' null' null' _dateTime)' out _state'  					out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_simple_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_simple_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_simple_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_simple_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_simple_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_simple_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_link_to_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: var myEvent = new ResolvedEvent("cat2-stream2"' 20' "cat2-stream2"' 20' true' new TFPos(200' 150)'  					new TFPos(200' 150)' Guid.NewGuid()' "$>"' true' dataBytes' metadataBytes' null' null' _dateTime);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_link_to_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: var myEvent = new ResolvedEvent("cat2-stream2"' 20' "cat2-stream2"' 20' true' new TFPos(200' 150)'  					new TFPos(200' 150)' Guid.NewGuid()' "$>"' true' dataBytes' metadataBytes' null' null' _dateTime);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_link_to_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: var myEvent = new ResolvedEvent("cat2-stream2"' 20' "cat2-stream2"' 20' true' new TFPos(200' 150)'  					new TFPos(200' 150)' Guid.NewGuid()' "$>"' true' dataBytes' metadataBytes' null' null' _dateTime);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_link_to_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: var myEvent = new ResolvedEvent("cat2-stream2"' 20' "cat2-stream2"' 20' true' new TFPos(200' 150)'  					new TFPos(200' 150)' Guid.NewGuid()' "$>"' true' dataBytes' metadataBytes' null' null' _dateTime);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_link_to_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: var myEvent = new ResolvedEvent("cat2-stream2"' 20' "cat2-stream2"' 20' true' new TFPos(200' 150)'  					new TFPos(200' 150)' Guid.NewGuid()' "$>"' true' dataBytes' metadataBytes' null' null' _dateTime);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_link_to_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: var myEvent = new ResolvedEvent("cat2-stream2"' 20' "cat2-stream2"' 20' true' new TFPos(200' 150)'  					new TFPos(200' 150)' Guid.NewGuid()' "$>"' true' dataBytes' metadataBytes' null' null' _dateTime);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_link_to_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					myEvent' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_link_to_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					myEvent' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_link_to_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat2-stream2"' 20' "cat2-stream2"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$>"' true' "10@cat1-stream1"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_link_to_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat2-stream2"' 20' "cat2-stream2"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$>"' true' "10@cat1-stream1"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_link_to_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat2-stream2"' 20' "cat2-stream2"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$>"' true' "10@cat1-stream1"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_link_to_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat2-stream2"' 20' "cat2-stream2"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$>"' true' "10@cat1-stream1"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_link_to_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat2-stream2"' 20' "cat2-stream2"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$>"' true' "10@cat1-stream1"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_link_to_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat2-stream2"' 20' "cat2-stream2"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$>"' true' "10@cat1-stream1"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_non_json_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' false' "non_json_data"' "non_json_metadata")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_non_json_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' false' "non_json_data"' "non_json_metadata")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_non_json_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' false' "non_json_data"' "non_json_metadata")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_non_json_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' false' "non_json_data"' "non_json_metadata")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_non_json_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' false' "non_json_data"' "non_json_metadata")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_non_json_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' false' "non_json_data"' "non_json_metadata")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_json_event_with_no_correlation_id,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_json_event_with_no_correlation_id,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_json_event_with_no_correlation_id,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_json_event_with_no_correlation_id,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_json_event_with_no_correlation_id,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_json_event_with_no_correlation_id,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_json_event_with_non_json_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "non_json_metadata")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_json_event_with_non_json_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "non_json_metadata")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_json_event_with_non_json_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "non_json_metadata")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_json_event_with_non_json_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "non_json_metadata")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_json_event_with_non_json_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "non_json_metadata")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_json_event_with_non_json_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "non_json_metadata")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,with_custom_valid_correlation_id_property,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{\"$myCorrelationId\":\"testing1\"}")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,with_custom_valid_correlation_id_property,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{\"$myCorrelationId\":\"testing1\"}")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,with_custom_valid_correlation_id_property,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{\"$myCorrelationId\":\"testing1\"}")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,with_custom_valid_correlation_id_property,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{\"$myCorrelationId\":\"testing1\"}")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,with_custom_valid_correlation_id_property,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{\"$myCorrelationId\":\"testing1\"}")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,with_custom_valid_correlation_id_property,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat1-stream1"' 10' "cat1-stream1"' 10' false' new TFPos(200' 150)' Guid.NewGuid()'  						"event_type"' true' "{}"' "{\"$myCorrelationId\":\"testing1\"}")' out _state' out sharedState'  					out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_normal_stream_metadata_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"$$cat3-stream3"' 20' "$$cat3-stream3"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$metadata"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_normal_stream_metadata_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"$$cat3-stream3"' 20' "$$cat3-stream3"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$metadata"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_normal_stream_metadata_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"$$cat3-stream3"' 20' "$$cat3-stream3"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$metadata"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_normal_stream_metadata_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"$$cat3-stream3"' 20' "$$cat3-stream3"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$metadata"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_normal_stream_metadata_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"$$cat3-stream3"' 20' "$$cat3-stream3"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$metadata"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_normal_stream_metadata_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"$$cat3-stream3"' 20' "$$cat3-stream3"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$metadata"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_soft_deleted_stream_metadata_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"$$cat4-stream4"' 20' "$$cat4-stream4"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$metadata"' true' "{ \"$tb\": "+long.MaxValue+" }"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_soft_deleted_stream_metadata_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"$$cat4-stream4"' 20' "$$cat4-stream4"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$metadata"' true' "{ \"$tb\": "+long.MaxValue+" }"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_soft_deleted_stream_metadata_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"$$cat4-stream4"' 20' "$$cat4-stream4"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$metadata"' true' "{ \"$tb\": "+long.MaxValue+" }"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_soft_deleted_stream_metadata_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"$$cat4-stream4"' 20' "$$cat4-stream4"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$metadata"' true' "{ \"$tb\": "+long.MaxValue+" }"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_soft_deleted_stream_metadata_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"$$cat4-stream4"' 20' "$$cat4-stream4"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$metadata"' true' "{ \"$tb\": "+long.MaxValue+" }"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_soft_deleted_stream_metadata_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"$$cat4-stream4"' 20' "$$cat4-stream4"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$metadata"' true' "{ \"$tb\": "+long.MaxValue+" }"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_hard_deleted_stream_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat5-stream5"' 20' "cat5-stream5"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$streamDeleted"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_hard_deleted_stream_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat5-stream5"' 20' "cat5-stream5"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$streamDeleted"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_hard_deleted_stream_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat5-stream5"' 20' "cat5-stream5"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$streamDeleted"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_hard_deleted_stream_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat5-stream5"' 20' "cat5-stream5"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$streamDeleted"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_hard_deleted_stream_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat5-stream5"' 20' "cat5-stream5"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$streamDeleted"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.handlers,when_handling_hard_deleted_stream_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_stream_path.cs,when,The following statement contains a magic number: _result = _handler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' 200' 150)' null'  					new ResolvedEvent(  						"cat5-stream5"' 20' "cat5-stream5"' 20' true' new TFPos(200' 150)' Guid.NewGuid()'  						"$streamDeleted"' true' "{}"' "{}")' out _state' out sharedState' out _emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.Transport.Http,Authorization,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\http_service\authorization_tests.cs,GetAuthLevel,The following statement contains a magic number: switch(userAuthorizationLevel){  				case "None":  					return 0;  				case "User":  					return 1;  				case "Ops":  					return 2;  				case "Admin":  					return 3;  				default:  					throw new Exception("Unknown authorization level");  			}
Magic Number,EventStore.Projections.Core.Tests.Services.Transport.Http,Authorization,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\http_service\authorization_tests.cs,GetAuthLevel,The following statement contains a magic number: switch(userAuthorizationLevel){  				case "None":  					return 0;  				case "User":  					return 1;  				case "Ops":  					return 2;  				case "Admin":  					return 3;  				default:  					throw new Exception("Unknown authorization level");  			}
Magic Number,EventStore.Projections.Core.Tests.Services.Transport.Http,Authorization,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\http_service\authorization_tests.cs,CreateUser,The following statement contains a magic number: trial<=5
Magic Number,EventStore.Projections.Core.Tests.Services.Transport.Http,Authorization,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\http_service\authorization_tests.cs,authorization_tests,The following statement contains a magic number: var requiredMinAuthorizationLevel = httpEndpointTokens[2];
Magic Number,EventStore.Projections.Core.Tests.Services.Transport.Http,Authorization,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\http_service\authorization_tests.cs,authorization_tests,The following statement contains a magic number: Assert.AreNotEqual(401' statusCode);
Magic Number,EventStore.Projections.Core.Tests.Services.master_core_projection_response_reader,when_response_reader_has_read_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\master_core_projection_response_reader\when_response_reader_has_read_timeout.cs,should_publish_command,The following statement contains a magic number: Assert.IsTrue(_mre.Wait(10000));
Magic Number,EventStore.Projections.Core.Tests.Services.master_core_projection_response_reader,when_response_reader_starts_up_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\master_core_projection_response_reader\when_response_reader_starts_up_successfully.cs,should_publish_command,The following statement contains a magic number: Assert.IsTrue(_mre.Wait(10000));
Magic Number,EventStore.Projections.Core.Tests.Services.master_core_projection_response_reader,with_master_core_response_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\master_core_projection_response_reader\with_master_core_response_reader.cs,Handle,The following statement contains a magic number: var response = new ClientMessage.WriteEventsCompleted(message.CorrelationId' 0' 0' 1000' 1000);
Magic Number,EventStore.Projections.Core.Tests.Services.master_core_projection_response_reader,with_master_core_response_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\master_core_projection_response_reader\with_master_core_response_reader.cs,Handle,The following statement contains a magic number: var response = new ClientMessage.WriteEventsCompleted(message.CorrelationId' 0' 0' 1000' 1000);
Magic Number,EventStore.Projections.Core.Tests.Services.master_core_projection_response_reader,with_master_core_response_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\master_core_projection_response_reader\with_master_core_response_reader.cs,CreateResultCommandReadResponse,The following statement contains a magic number: return new ClientMessage.ReadStreamEventsForwardCompleted(message.CorrelationId' message.EventStreamId'  				message.FromEventNumber' message.MaxCount'  				ReadStreamResult.Success' evnts' null' false' String.Empty' message.FromEventNumber + 1'  				message.FromEventNumber' true' 10000);
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,specification_with_parallel_processing_load_balancer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\specification_with_parallel_processing_load_balancer.cs,GivenMaxUnmeasuredTasksPerWorker,The following statement contains a magic number: return 2;
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,specification_with_parallel_processing_load_balancer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\specification_with_parallel_processing_load_balancer.cs,GivenMaxScheduledSizePerWorker,The following statement contains a magic number: return 1000;
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,specification_with_parallel_processing_load_balancer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\specification_with_parallel_processing_load_balancer.cs,GivenWorkers,The following statement contains a magic number: return 2;
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_accounting_completed_task,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_accounting_completed_task.cs,Given,The following statement contains a magic number: _balancer.AccountMeasured("task1"' 1000);
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_accounting_completed_task,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_accounting_completed_task.cs,Given,The following statement contains a magic number: _balancer.AccountMeasured("task2"' 100);
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_accounting_measured_tasks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_accounting_measured_tasks.cs,When,The following statement contains a magic number: _balancer.AccountMeasured("task1"' 1000);
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_accounting_measured_tasks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_accounting_measured_tasks.cs,When,The following statement contains a magic number: _balancer.AccountMeasured("task2"' 100);
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_completing_a_task_and_others_pending,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_completing_a_task_and_others_pending.cs,Given,The following statement contains a magic number: _balancer.AccountMeasured("task1"' 1000);
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_completing_a_task_and_others_pending,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_completing_a_task_and_others_pending.cs,Given,The following statement contains a magic number: _balancer.AccountMeasured("task2"' 1000);
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_completing_a_task_and_others_pending,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_completing_a_task_and_others_pending.cs,Given,The following statement contains a magic number: _balancer.AccountMeasured("task3"' 10);
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_completing_a_task_and_others_pending,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_completing_a_task_and_others_pending.cs,Given,The following statement contains a magic number: _balancer.AccountMeasured("task4"' 10);
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_creating.cs,can_be_created,The following statement contains a magic number: TestHelper.Consume(new ParallelProcessingLoadBalancer(2' 10' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_creating.cs,can_be_created,The following statement contains a magic number: TestHelper.Consume(new ParallelProcessingLoadBalancer(2' 10' 1));
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_creating.cs,zero_workers_throws_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(  				() => { TestHelper.Consume(new ParallelProcessingLoadBalancer(0' 10' 1)); });
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_creating.cs,negative_workers_throws_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => {  				TestHelper.Consume(new ParallelProcessingLoadBalancer(-1' 10' 1));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_creating.cs,zero_max_scheduled_size_throws_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => {  				TestHelper.Consume(new ParallelProcessingLoadBalancer(2' 0' 1));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_creating.cs,negative_max_scheduled_size_throws_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(  				() => { TestHelper.Consume(new ParallelProcessingLoadBalancer(2' -1' 1)); });
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_creating.cs,zero_max_unmeasured_tasks_throws_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(  				() => { TestHelper.Consume(new ParallelProcessingLoadBalancer(2' 10' 0)); });
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_creating.cs,zero_max_unmeasured_tasks_throws_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(  				() => { TestHelper.Consume(new ParallelProcessingLoadBalancer(2' 10' 0)); });
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_creating.cs,negative_max_unmeasured_tasks_throws_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => {  				TestHelper.Consume(new ParallelProcessingLoadBalancer(2' 10' -2));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_creating.cs,negative_max_unmeasured_tasks_throws_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => {  				TestHelper.Consume(new ParallelProcessingLoadBalancer(2' 10' -2));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_creating.cs,negative_max_unmeasured_tasks_throws_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => {  				TestHelper.Consume(new ParallelProcessingLoadBalancer(2' 10' -2));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_scheduling_first_tasks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_scheduling_first_tasks.cs,schedules_all_tasks,The following statement contains a magic number: Assert.AreEqual(2' _scheduled);
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_scheduling_first_tasks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_scheduling_first_tasks.cs,schedules_on_different_workers,The following statement contains a magic number: Assert.That(_scheduledOnWorkers.Distinct().Count() == 2);
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_scheduling_many_measured_tasks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_scheduling_many_measured_tasks.cs,Given,The following statement contains a magic number: _balancer.AccountMeasured("task1"' 1000);
Magic Number,EventStore.Projections.Core.Tests.Services.parallel_processing_load_balancer,when_scheduling_many_measured_tasks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\parallel_processing_load_balancer\when_scheduling_many_measured_tasks.cs,Given,The following statement contains a magic number: _balancer.AccountMeasured("task2"' 1000);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state\partition_state.cs,throws_argument_null_exception_if_state_is_null,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  					new PartitionState(null' "result"' CheckpointTag.FromPosition(0' 100' 50));  				});
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state\partition_state.cs,throws_argument_null_exception_if_state_is_null,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  					new PartitionState(null' "result"' CheckpointTag.FromPosition(0' 100' 50));  				});
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state\partition_state.cs,can_be_created,The following statement contains a magic number: new PartitionState("state"' "result"' CheckpointTag.FromPosition(0' 100' 50));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state,when_creating,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state\partition_state.cs,can_be_created,The following statement contains a magic number: new PartitionState("state"' "result"' CheckpointTag.FromPosition(0' 100' 50));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state,can_be_deserialized_from_serialized_form,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state\partition_state.cs,null_deserialization,The following statement contains a magic number: var deserialized = PartitionState.Deserialize(null' CheckpointTag.FromPosition(0' 100' 50));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state,can_be_deserialized_from_serialized_form,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state\partition_state.cs,null_deserialization,The following statement contains a magic number: var deserialized = PartitionState.Deserialize(null' CheckpointTag.FromPosition(0' 100' 50));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state,can_be_deserialized_from_serialized_form,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state\partition_state.cs,AssertCorrect,The following statement contains a magic number: var partitionState = new PartitionState(state' result' CheckpointTag.FromPosition(0' 100' 50));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state,can_be_deserialized_from_serialized_form,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state\partition_state.cs,AssertCorrect,The following statement contains a magic number: var partitionState = new PartitionState(state' result' CheckpointTag.FromPosition(0' 100' 50));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state,can_be_deserialized_from_serialized_form,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state\partition_state.cs,AssertCorrect,The following statement contains a magic number: var deserialized = PartitionState.Deserialize(serialized' CheckpointTag.FromPosition(0' 100' 50));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state,can_be_deserialized_from_serialized_form,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state\partition_state.cs,AssertCorrect,The following statement contains a magic number: var deserialized = PartitionState.Deserialize(serialized' CheckpointTag.FromPosition(0' 100' 50));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_caching_a_parition_state,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_caching_a_parition_state.cs,when,The following statement contains a magic number: _cachedAtCheckpointTag = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_caching_a_parition_state,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_caching_a_parition_state.cs,when,The following statement contains a magic number: _cachedAtCheckpointTag = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_caching_a_parition_state,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_caching_a_parition_state.cs,the_state_can_be_retrieved_as_unlocked_and_relocked_at_later_position,The following statement contains a magic number: var state = _cache.TryGetAndLockPartitionState("partition"' CheckpointTag.FromPosition(0' 1500' 1400));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_caching_a_parition_state,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_caching_a_parition_state.cs,the_state_can_be_retrieved_as_unlocked_and_relocked_at_later_position,The following statement contains a magic number: var state = _cache.TryGetAndLockPartitionState("partition"' CheckpointTag.FromPosition(0' 1500' 1400));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_caching_a_parition_state_as_locked,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_caching_a_parition_state_as_locked.cs,when,The following statement contains a magic number: _cachedAtCheckpointTag = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_caching_a_parition_state_as_locked,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_caching_a_parition_state_as_locked.cs,when,The following statement contains a magic number: _cachedAtCheckpointTag = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_caching_a_parition_state_as_locked,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_caching_a_parition_state_as_locked.cs,the_state_can_be_retrieved_as_unlocked_and_relocked_at_later_position,The following statement contains a magic number: var state = _cache.TryGetAndLockPartitionState("partition"' CheckpointTag.FromPosition(0' 1500' 1400));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_caching_a_parition_state_as_locked,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_caching_a_parition_state_as_locked.cs,the_state_can_be_retrieved_as_unlocked_and_relocked_at_later_position,The following statement contains a magic number: var state = _cache.TryGetAndLockPartitionState("partition"' CheckpointTag.FromPosition(0' 1500' 1400));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_relocking_the_state_at_earlier_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_relocking_the_state_at_earlier_position.cs,given,The following statement contains a magic number: _cachedAtCheckpointTag = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_relocking_the_state_at_earlier_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_relocking_the_state_at_earlier_position.cs,given,The following statement contains a magic number: _cachedAtCheckpointTag = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_relocking_the_state_at_earlier_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_relocking_the_state_at_earlier_position.cs,thorws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_cache.TryGetAndLockPartitionState("partition"' CheckpointTag.FromPosition(0' 500' 400));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_relocking_the_state_at_earlier_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_relocking_the_state_at_earlier_position.cs,thorws_invalid_operation_exception,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_cache.TryGetAndLockPartitionState("partition"' CheckpointTag.FromPosition(0' 500' 400));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_relocking_the_state_at_later_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_relocking_the_state_at_later_position.cs,given,The following statement contains a magic number: _cachedAtCheckpointTag = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_relocking_the_state_at_later_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_relocking_the_state_at_later_position.cs,given,The following statement contains a magic number: _cachedAtCheckpointTag = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_relocking_the_state_at_later_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_relocking_the_state_at_later_position.cs,given,The following statement contains a magic number: _relockedData = _cache.TryGetAndLockPartitionState("partition"' CheckpointTag.FromPosition(0' 2000' 1900));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_relocking_the_state_at_later_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_relocking_the_state_at_later_position.cs,given,The following statement contains a magic number: _relockedData = _cache.TryGetAndLockPartitionState("partition"' CheckpointTag.FromPosition(0' 2000' 1900));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_relocking_the_state_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_relocking_the_state_at_the_same_position.cs,given,The following statement contains a magic number: _cachedAtCheckpointTag = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_relocking_the_state_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_relocking_the_state_at_the_same_position.cs,given,The following statement contains a magic number: _cachedAtCheckpointTag = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_relocking_the_state_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_relocking_the_state_at_the_same_position.cs,thorws_invalid_operation_exception_if_not_allowed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_cache.TryGetAndLockPartitionState("partition"' CheckpointTag.FromPosition(0' 1000' 900));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_relocking_the_state_at_the_same_position,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_relocking_the_state_at_the_same_position.cs,thorws_invalid_operation_exception_if_not_allowed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_cache.TryGetAndLockPartitionState("partition"' CheckpointTag.FromPosition(0' 1000' 900));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_created.cs,state_can_be_cached,The following statement contains a magic number: CheckpointTag at = CheckpointTag.FromPosition(0' 100' 90);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_created.cs,state_can_be_cached,The following statement contains a magic number: CheckpointTag at = CheckpointTag.FromPosition(0' 100' 90);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_created.cs,random_item_cannot_be_retrieved_as_locked,The following statement contains a magic number: Assert.IsNull(  				_cache.TryGetAndLockPartitionState(  					"random"' CheckpointTag.FromPosition(0' 200' 190))'  				"Cache should be empty");
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_created.cs,random_item_cannot_be_retrieved_as_locked,The following statement contains a magic number: Assert.IsNull(  				_cache.TryGetAndLockPartitionState(  					"random"' CheckpointTag.FromPosition(0' 200' 190))'  				"Cache should be empty");
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_created.cs,root_partition_state_cannot_be_retrieved,The following statement contains a magic number: Assert.IsNull(  				_cache.TryGetAndLockPartitionState(  					""' CheckpointTag.FromPosition(0' 200' 190))'  				"Cache should be empty");
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_created.cs,root_partition_state_cannot_be_retrieved,The following statement contains a magic number: Assert.IsNull(  				_cache.TryGetAndLockPartitionState(  					""' CheckpointTag.FromPosition(0' 200' 190))'  				"Cache should be empty");
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_created.cs,unlock_succeeds,The following statement contains a magic number: _cache.Unlock(CheckpointTag.FromPosition(0' 300' 290));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_created.cs,unlock_succeeds,The following statement contains a magic number: _cache.Unlock(CheckpointTag.FromPosition(0' 300' 290));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,setup,The following statement contains a magic number: _cache = new PartitionStateCache(10);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag1 = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag1 = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,setup,The following statement contains a magic number: CheckpointTag at = CheckpointTag.FromPosition(0' 1000 + (i * 100)' 1000 + (i * 100) - 50);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,setup,The following statement contains a magic number: CheckpointTag at = CheckpointTag.FromPosition(0' 1000 + (i * 100)' 1000 + (i * 100) - 50);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,setup,The following statement contains a magic number: CheckpointTag at = CheckpointTag.FromPosition(0' 1000 + (i * 100)' 1000 + (i * 100) - 50);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,setup,The following statement contains a magic number: CheckpointTag at = CheckpointTag.FromPosition(0' 1000 + (i * 100)' 1000 + (i * 100) - 50);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,setup,The following statement contains a magic number: CheckpointTag at = CheckpointTag.FromPosition(0' 1000 + (i * 100)' 1000 + (i * 100) - 50);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,setup,The following statement contains a magic number: i < 15
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag2 = CheckpointTag.FromPosition(0' 20100' 20050);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag2 = CheckpointTag.FromPosition(0' 20100' 20050);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag3 = CheckpointTag.FromPosition(0' 20200' 20150);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag3 = CheckpointTag.FromPosition(0' 20200' 20150);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,state_can_be_cached,The following statement contains a magic number: CheckpointTag at = CheckpointTag.FromPosition(0' 100' 90);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,state_can_be_cached,The following statement contains a magic number: CheckpointTag at = CheckpointTag.FromPosition(0' 100' 90);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,random_item_cannot_be_retrieved_as_locked,The following statement contains a magic number: Assert.IsNull(  				_cache.TryGetAndLockPartitionState(  					"random"' CheckpointTag.FromPosition(0' 200' 190))'  				"Cache should be empty");
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,random_item_cannot_be_retrieved_as_locked,The following statement contains a magic number: Assert.IsNull(  				_cache.TryGetAndLockPartitionState(  					"random"' CheckpointTag.FromPosition(0' 200' 190))'  				"Cache should be empty");
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,root_partition_state_cannot_be_retrieved,The following statement contains a magic number: Assert.IsNull(  				_cache.TryGetAndLockPartitionState(  					""' CheckpointTag.FromPosition(0' 200' 190))'  				"Cache should be empty");
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,root_partition_state_cannot_be_retrieved,The following statement contains a magic number: Assert.IsNull(  				_cache.TryGetAndLockPartitionState(  					""' CheckpointTag.FromPosition(0' 200' 190))'  				"Cache should be empty");
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,unlock_succeeds,The following statement contains a magic number: _cache.Unlock(CheckpointTag.FromPosition(0' 300' 290));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_the_partition_state_cache_has_been_reinitialized,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_the_partition_state_cache_has_been_reinitialized.cs,unlock_succeeds,The following statement contains a magic number: _cache.Unlock(CheckpointTag.FromPosition(0' 300' 290));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_and_forgetting_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_and_forgetting_part_of_cached_states.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag1 = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_and_forgetting_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_and_forgetting_part_of_cached_states.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag1 = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_and_forgetting_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_and_forgetting_part_of_cached_states.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag2 = CheckpointTag.FromPosition(0' 1200' 1100);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_and_forgetting_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_and_forgetting_part_of_cached_states.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag2 = CheckpointTag.FromPosition(0' 1200' 1100);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_and_forgetting_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_and_forgetting_part_of_cached_states.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag3 = CheckpointTag.FromPosition(0' 1400' 1300);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_and_forgetting_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_and_forgetting_part_of_cached_states.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag3 = CheckpointTag.FromPosition(0' 1400' 1300);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_and_forgetting_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_and_forgetting_part_of_cached_states.cs,partitions_locked_before_the_unlock_position_cannot_be_retrieved_and_relocked_at_later_position,The following statement contains a magic number: var data = _cache.TryGetAndLockPartitionState("partition1"' CheckpointTag.FromPosition(0' 1600' 1500));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_and_forgetting_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_and_forgetting_part_of_cached_states.cs,partitions_locked_before_the_unlock_position_cannot_be_retrieved_and_relocked_at_later_position,The following statement contains a magic number: var data = _cache.TryGetAndLockPartitionState("partition1"' CheckpointTag.FromPosition(0' 1600' 1500));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_an_overflowed_cache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_an_overflowed_cache.cs,setup,The following statement contains a magic number: _cache = new PartitionStateCache(10);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_an_overflowed_cache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_an_overflowed_cache.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag1 = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_an_overflowed_cache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_an_overflowed_cache.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag1 = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_an_overflowed_cache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_an_overflowed_cache.cs,setup,The following statement contains a magic number: CheckpointTag at = CheckpointTag.FromPosition(0' 1000 + (i * 100)' 1000 + (i * 100) - 50);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_an_overflowed_cache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_an_overflowed_cache.cs,setup,The following statement contains a magic number: CheckpointTag at = CheckpointTag.FromPosition(0' 1000 + (i * 100)' 1000 + (i * 100) - 50);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_an_overflowed_cache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_an_overflowed_cache.cs,setup,The following statement contains a magic number: CheckpointTag at = CheckpointTag.FromPosition(0' 1000 + (i * 100)' 1000 + (i * 100) - 50);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_an_overflowed_cache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_an_overflowed_cache.cs,setup,The following statement contains a magic number: CheckpointTag at = CheckpointTag.FromPosition(0' 1000 + (i * 100)' 1000 + (i * 100) - 50);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_an_overflowed_cache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_an_overflowed_cache.cs,setup,The following statement contains a magic number: CheckpointTag at = CheckpointTag.FromPosition(0' 1000 + (i * 100)' 1000 + (i * 100) - 50);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_an_overflowed_cache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_an_overflowed_cache.cs,setup,The following statement contains a magic number: i < 15
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_an_overflowed_cache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_an_overflowed_cache.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag2 = CheckpointTag.FromPosition(0' 20100' 20050);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_an_overflowed_cache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_an_overflowed_cache.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag2 = CheckpointTag.FromPosition(0' 20100' 20050);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_an_overflowed_cache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_an_overflowed_cache.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag3 = CheckpointTag.FromPosition(0' 20200' 20150);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_an_overflowed_cache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_an_overflowed_cache.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag3 = CheckpointTag.FromPosition(0' 20200' 20150);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_an_overflowed_cache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_an_overflowed_cache.cs,the_first_partition_locked_before_the_unlock_position_cannot_be_retrieved_and_relocked_at_later_position,The following statement contains a magic number: var data = _cache.TryGetAndLockPartitionState(  				"partition1"' CheckpointTag.FromPosition(0' 25000' 24000));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_an_overflowed_cache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_an_overflowed_cache.cs,the_first_partition_locked_before_the_unlock_position_cannot_be_retrieved_and_relocked_at_later_position,The following statement contains a magic number: var data = _cache.TryGetAndLockPartitionState(  				"partition1"' CheckpointTag.FromPosition(0' 25000' 24000));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_an_overflowed_cache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_an_overflowed_cache.cs,partitions_locked_at_the_unlock_position_can_be_retrieved_and_relocked_at_later_position,The following statement contains a magic number: var data = _cache.TryGetAndLockPartitionState(  				"partition2"' CheckpointTag.FromPosition(0' 25000' 24000));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_an_overflowed_cache,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_an_overflowed_cache.cs,partitions_locked_at_the_unlock_position_can_be_retrieved_and_relocked_at_later_position,The following statement contains a magic number: var data = _cache.TryGetAndLockPartitionState(  				"partition2"' CheckpointTag.FromPosition(0' 25000' 24000));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_part_of_cached_states.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag1 = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_part_of_cached_states.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag1 = CheckpointTag.FromPosition(0' 1000' 900);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_part_of_cached_states.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag2 = CheckpointTag.FromPosition(0' 1200' 1100);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_part_of_cached_states.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag2 = CheckpointTag.FromPosition(0' 1200' 1100);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_part_of_cached_states.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag3 = CheckpointTag.FromPosition(0' 1400' 1300);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_part_of_cached_states.cs,setup,The following statement contains a magic number: _cachedAtCheckpointTag3 = CheckpointTag.FromPosition(0' 1400' 1300);
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_part_of_cached_states.cs,partitions_locked_before_the_unlock_position_can_be_retrieved_and_relocked_at_later_position,The following statement contains a magic number: var data = _cache.TryGetAndLockPartitionState(  				"partition1"' CheckpointTag.FromPosition(0' 1600' 1500));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_part_of_cached_states.cs,partitions_locked_before_the_unlock_position_can_be_retrieved_and_relocked_at_later_position,The following statement contains a magic number: var data = _cache.TryGetAndLockPartitionState(  				"partition1"' CheckpointTag.FromPosition(0' 1600' 1500));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_part_of_cached_states.cs,partitions_locked_at_the_unlock_position_cannot_be_retrieved_as_relocked_at_later_position,The following statement contains a magic number: var data = _cache.TryGetAndLockPartitionState(  				"partition2"' CheckpointTag.FromPosition(0' 1600' 1500));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_part_of_cached_states.cs,partitions_locked_at_the_unlock_position_cannot_be_retrieved_as_relocked_at_later_position,The following statement contains a magic number: var data = _cache.TryGetAndLockPartitionState(  				"partition2"' CheckpointTag.FromPosition(0' 1600' 1500));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_part_of_cached_states.cs,no_other_partition_states_can_be_locked_before_the_unlock_position,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				CheckpointTag at = CheckpointTag.FromPosition(0' 1040' 1030);  				_cache.CacheAndLockPartitionState("partition4"' new PartitionState("data4"' null' at)' at);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_part_of_cached_states.cs,no_other_partition_states_can_be_locked_before_the_unlock_position,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				CheckpointTag at = CheckpointTag.FromPosition(0' 1040' 1030);  				_cache.CacheAndLockPartitionState("partition4"' new PartitionState("data4"' null' at)' at);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_part_of_cached_states.cs,cached_partition_states_cannot_be_locked_before_the_unlock_position,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_cache.TryGetAndLockPartitionState(  					"partition1"' CheckpointTag.FromPosition(0' 1040' 1030));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_cache,when_unlocking_part_of_cached_states,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_cache\when_unlocking_part_of_cached_states.cs,cached_partition_states_cannot_be_locked_before_the_unlock_position,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				_cache.TryGetAndLockPartitionState(  					"partition1"' CheckpointTag.FromPosition(0' 1040' 1030));  			});
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_update_manager,when_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_update_manager\when_created.cs,handles_state_updated,The following statement contains a magic number: _updateManager.StateUpdated("partition"'  				new PartitionState("state"' null' CheckpointTag.FromPosition(0' 100' 50))'  				CheckpointTag.FromPosition(0' 200' 150));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_update_manager,when_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_update_manager\when_created.cs,handles_state_updated,The following statement contains a magic number: _updateManager.StateUpdated("partition"'  				new PartitionState("state"' null' CheckpointTag.FromPosition(0' 100' 50))'  				CheckpointTag.FromPosition(0' 200' 150));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_update_manager,when_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_update_manager\when_created.cs,handles_state_updated,The following statement contains a magic number: _updateManager.StateUpdated("partition"'  				new PartitionState("state"' null' CheckpointTag.FromPosition(0' 100' 50))'  				CheckpointTag.FromPosition(0' 200' 150));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_update_manager,when_created,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_update_manager\when_created.cs,handles_state_updated,The following statement contains a magic number: _updateManager.StateUpdated("partition"'  				new PartitionState("state"' null' CheckpointTag.FromPosition(0' 100' 50))'  				CheckpointTag.FromPosition(0' 200' 150));
Magic Number,EventStore.Projections.Core.Tests.Services.partition_state_update_manager,when_two_states_were_updated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\partition_state_update_manager\when_two_states_were_updated.cs,emit_events_writes_both_state_updated_event,The following statement contains a magic number: Assert.AreEqual(2' (eventWriter.Writes.SelectMany(write => write)).Count());
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,setup,The following statement contains a magic number: _zeroEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(-1' 120)' new TFPos(20' 10)' "$et-type1"' 0' "stream1"' 0' true'  				Guid.NewGuid()' "type1"' true' Helper.UTF8NoBom.GetBytes("{}")' new byte[0]' null' 10f);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,setup,The following statement contains a magic number: _zeroEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(-1' 120)' new TFPos(20' 10)' "$et-type1"' 0' "stream1"' 0' true'  				Guid.NewGuid()' "type1"' true' Helper.UTF8NoBom.GetBytes("{}")' new byte[0]' null' 10f);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,setup,The following statement contains a magic number: _zeroEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(-1' 120)' new TFPos(20' 10)' "$et-type1"' 0' "stream1"' 0' true'  				Guid.NewGuid()' "type1"' true' Helper.UTF8NoBom.GetBytes("{}")' new byte[0]' null' 10f);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,setup,The following statement contains a magic number: _zeroEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(-1' 120)' new TFPos(20' 10)' "$et-type1"' 0' "stream1"' 0' true'  				Guid.NewGuid()' "type1"' true' Helper.UTF8NoBom.GetBytes("{}")' new byte[0]' null' 10f);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,setup,The following statement contains a magic number: _firstEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(-1' 130)' new TFPos(30' 20)' "$et-type2"' 0' "stream1"' 1' true'  				Guid.NewGuid()' "type2"' true' Helper.UTF8NoBom.GetBytes("{}")' new byte[0]' null' 20f);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,setup,The following statement contains a magic number: _firstEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(-1' 130)' new TFPos(30' 20)' "$et-type2"' 0' "stream1"' 1' true'  				Guid.NewGuid()' "type2"' true' Helper.UTF8NoBom.GetBytes("{}")' new byte[0]' null' 20f);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,setup,The following statement contains a magic number: _firstEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(-1' 130)' new TFPos(30' 20)' "$et-type2"' 0' "stream1"' 1' true'  				Guid.NewGuid()' "type2"' true' Helper.UTF8NoBom.GetBytes("{}")' new byte[0]' null' 20f);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,setup,The following statement contains a magic number: _firstEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(-1' 130)' new TFPos(30' 20)' "$et-type2"' 0' "stream1"' 1' true'  				Guid.NewGuid()' "type2"' true' Helper.UTF8NoBom.GetBytes("{}")' new byte[0]' null' 20f);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,setup,The following statement contains a magic number: _secondEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(-1' 140)' new TFPos(50' 40)' "$et-type1"' 1' "stream2"' 0' false'  				Guid.NewGuid()' "type1"' true' Helper.UTF8NoBom.GetBytes("{}")' new byte[0]' null' 30f);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,setup,The following statement contains a magic number: _secondEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(-1' 140)' new TFPos(50' 40)' "$et-type1"' 1' "stream2"' 0' false'  				Guid.NewGuid()' "type1"' true' Helper.UTF8NoBom.GetBytes("{}")' new byte[0]' null' 30f);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,setup,The following statement contains a magic number: _secondEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(-1' 140)' new TFPos(50' 40)' "$et-type1"' 1' "stream2"' 0' false'  				Guid.NewGuid()' "type1"' true' Helper.UTF8NoBom.GetBytes("{}")' new byte[0]' null' 30f);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,setup,The following statement contains a magic number: _secondEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(-1' 140)' new TFPos(50' 40)' "$et-type1"' 1' "stream2"' 0' false'  				Guid.NewGuid()' "type1"' true' Helper.UTF8NoBom.GetBytes("{}")' new byte[0]' null' 30f);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,setup,The following statement contains a magic number: _thirdEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(-1' 150)' new TFPos(70' 60)' "$et-type2"' 1' "stream2"' 1' false'  				Guid.NewGuid()' "type2"' true' Helper.UTF8NoBom.GetBytes("{}")' new byte[0]' null' 40f);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,setup,The following statement contains a magic number: _thirdEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(-1' 150)' new TFPos(70' 60)' "$et-type2"' 1' "stream2"' 1' false'  				Guid.NewGuid()' "type2"' true' Helper.UTF8NoBom.GetBytes("{}")' new byte[0]' null' 40f);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,setup,The following statement contains a magic number: _thirdEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(-1' 150)' new TFPos(70' 60)' "$et-type2"' 1' "stream2"' 1' false'  				Guid.NewGuid()' "type2"' true' Helper.UTF8NoBom.GetBytes("{}")' new byte[0]' null' 40f);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,setup,The following statement contains a magic number: _thirdEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(-1' 150)' new TFPos(70' 60)' "$et-type2"' 1' "stream2"' 1' false'  				Guid.NewGuid()' "type2"' true' Helper.UTF8NoBom.GetBytes("{}")' new byte[0]' null' 40f);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,is_message_after_checkpoint_tag_after_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(10' 5)'  						new Dictionary<string' long> {{"type1"' 0}' {"type2"' -1}})' _firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,is_message_after_checkpoint_tag_after_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(10' 5)'  						new Dictionary<string' long> {{"type1"' 0}' {"type2"' -1}})' _firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,is_message_after_checkpoint_tag_tf_only_after_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(10' 5)'  						new Dictionary<string' long> {{"type1"' 0}' {"type2"' 0}})' _firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,is_message_after_checkpoint_tag_tf_only_after_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(10' 5)'  						new Dictionary<string' long> {{"type1"' 0}' {"type2"' 0}})' _firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,is_message_after_checkpoint_tag_before_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(40' 35)'  						new Dictionary<string' long> {{"type1"' 2}' {"type2"' 2}})'  					_firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,is_message_after_checkpoint_tag_before_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(40' 35)'  						new Dictionary<string' long> {{"type1"' 2}' {"type2"' 2}})'  					_firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,is_message_after_checkpoint_tag_before_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(40' 35)'  						new Dictionary<string' long> {{"type1"' 2}' {"type2"' 2}})'  					_firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,is_message_after_checkpoint_tag_before_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(40' 35)'  						new Dictionary<string' long> {{"type1"' 2}' {"type2"' 2}})'  					_firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,is_message_after_checkpoint_tag_tf_only_before_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(40' 35)'  						new Dictionary<string' long> {{"type1"' 0}' {"type2"' 0}})'  					_firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,is_message_after_checkpoint_tag_tf_only_before_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(40' 35)'  						new Dictionary<string' long> {{"type1"' 0}' {"type2"' 0}})'  					_firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,is_message_after_checkpoint_tag_equal_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(30' 20)'  						new Dictionary<string' long> {{"type1"' 0}' {"type2"' 0}})'  					_firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,is_message_after_checkpoint_tag_equal_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(30' 20)'  						new Dictionary<string' long> {{"type1"' 0}' {"type2"' 0}})'  					_firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,is_message_after_checkpoint_tag_tf_only_equal_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(30' 20)'  						new Dictionary<string' long> {{"type1"' -1}' {"type2"' -1}})'  					_firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,is_message_after_checkpoint_tag_tf_only_equal_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(30' 20)'  						new Dictionary<string' long> {{"type1"' -1}' {"type2"' -1}})'  					_firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,is_message_after_checkpoint_tag_incompatible_streams_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(30' 20)'  						new Dictionary<string' long> {{"type1"' -1}' {"type3"' -1}})'  					_firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,is_message_after_checkpoint_tag_incompatible_streams_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(30' 20)'  						new Dictionary<string' long> {{"type1"' -1}' {"type3"' -1}})'  					_firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,position_checkpoint_tag_is_incompatible,The following statement contains a magic number: Assert.IsFalse(t.IsCompatible(CheckpointTag.FromPosition(0' 1000' 500)));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,position_checkpoint_tag_is_incompatible,The following statement contains a magic number: Assert.IsFalse(t.IsCompatible(CheckpointTag.FromPosition(0' 1000' 500)));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,streams_checkpoint_tag_is_incompatible,The following statement contains a magic number: Assert.IsFalse(  				t.IsCompatible(  					CheckpointTag.FromStreamPositions(0'  						new Dictionary<string' long> {{"$et-type1"' 100}' {"$et-type2"' 150}})));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,streams_checkpoint_tag_is_incompatible,The following statement contains a magic number: Assert.IsFalse(  				t.IsCompatible(  					CheckpointTag.FromStreamPositions(0'  						new Dictionary<string' long> {{"$et-type1"' 100}' {"$et-type2"' 150}})));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,another_events_checkpoint_tag_is_compatible,The following statement contains a magic number: Assert.IsFalse(  				t.IsCompatible(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  						new Dictionary<string' long> {{"type1"' 100}' {"type3"' 150}})));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,another_events_checkpoint_tag_is_compatible,The following statement contains a magic number: Assert.IsFalse(  				t.IsCompatible(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  						new Dictionary<string' long> {{"type1"' 100}' {"type3"' 150}})));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,another_events_checkpoint_tag_is_compatible,The following statement contains a magic number: Assert.IsFalse(  				t.IsCompatible(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  						new Dictionary<string' long> {{"type1"' 100}' {"type3"' 150}})));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,another_events_checkpoint_tag_is_compatible,The following statement contains a magic number: Assert.IsFalse(  				t.IsCompatible(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  						new Dictionary<string' long> {{"type1"' 100}' {"type3"' 150}})));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,the_same_events_checkpoint_tag_is_compatible,The following statement contains a magic number: Assert.IsTrue(  				t.IsCompatible(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  						new Dictionary<string' long> {{"type1"' 100}' {"type2"' 150}})));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,the_same_events_checkpoint_tag_is_compatible,The following statement contains a magic number: Assert.IsTrue(  				t.IsCompatible(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  						new Dictionary<string' long> {{"type1"' 100}' {"type2"' 150}})));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,the_same_events_checkpoint_tag_is_compatible,The following statement contains a magic number: Assert.IsTrue(  				t.IsCompatible(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  						new Dictionary<string' long> {{"type1"' 100}' {"type2"' 150}})));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,the_same_events_checkpoint_tag_is_compatible,The following statement contains a magic number: Assert.IsTrue(  				t.IsCompatible(  					CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  						new Dictionary<string' long> {{"type1"' 100}' {"type2"' 150}})));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,adjust_compatible_tag_returns_the_same_tag,The following statement contains a magic number: var tag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,adjust_compatible_tag_returns_the_same_tag,The following statement contains a magic number: var tag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,adjust_compatible_tag_returns_the_same_tag,The following statement contains a magic number: var tag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,can_adjust_tf_position_tag,The following statement contains a magic number: var tag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,can_adjust_tf_position_tag,The following statement contains a magic number: var tag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,can_adjust_tf_position_tag,The following statement contains a magic number: var tag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,can_adjust_tf_position_tag,The following statement contains a magic number: var original = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,can_adjust_tf_position_tag,The following statement contains a magic number: var original = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,can_update_by_tf_event_if_with_prior_index_position,The following statement contains a magic number: var linkEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(180' 170)' "$et-type2"' 1' false' Guid.NewGuid()' "$>"' false'  				Helper.UTF8NoBom.GetBytes("0@stream2")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,can_update_by_tf_event_if_with_prior_index_position,The following statement contains a magic number: var linkEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(180' 170)' "$et-type2"' 1' false' Guid.NewGuid()' "$>"' false'  				Helper.UTF8NoBom.GetBytes("0@stream2")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,can_update_by_tf_event_if_with_prior_index_position,The following statement contains a magic number: var tag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(70' 60)'  				new Dictionary<string' long> {{"type1"' 2}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,can_update_by_tf_event_if_with_prior_index_position,The following statement contains a magic number: var tag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(70' 60)'  				new Dictionary<string' long> {{"type1"' 2}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,can_update_by_tf_event_if_with_prior_index_position,The following statement contains a magic number: var tag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(70' 60)'  				new Dictionary<string' long> {{"type1"' 2}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,can_update_by_tf_event_if_with_prior_index_position,The following statement contains a magic number: var tag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(70' 60)'  				new Dictionary<string' long> {{"type1"' 2}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,can_update_by_tf_event_if_with_prior_index_position,The following statement contains a magic number: Assert.AreEqual(new TFPos(180' 170)' updated.Position);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,can_update_by_tf_event_if_with_prior_index_position,The following statement contains a magic number: Assert.AreEqual(new TFPos(180' 170)' updated.Position);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,can_update_by_tf_event_if_with_prior_index_position,The following statement contains a magic number: Assert.AreEqual(2' updated.Streams["type1"]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,can_update_by_tf_event_if_with_prior_index_position,The following statement contains a magic number: Assert.AreEqual(2' updated.Streams["type2"]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,cannot_update_by_prior_tf_position,The following statement contains a magic number: var linkEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(180' 170)' "$et-type2"' 1' false' Guid.NewGuid()' "$>"' false'  				Helper.UTF8NoBom.GetBytes("0@stream2")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,cannot_update_by_prior_tf_position,The following statement contains a magic number: var linkEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(180' 170)' "$et-type2"' 1' false' Guid.NewGuid()' "$>"' false'  				Helper.UTF8NoBom.GetBytes("0@stream2")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,cannot_update_by_prior_tf_position,The following statement contains a magic number: var tag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(270' 260)'  				new Dictionary<string' long> {{"type1"' 2}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,cannot_update_by_prior_tf_position,The following statement contains a magic number: var tag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(270' 260)'  				new Dictionary<string' long> {{"type1"' 2}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,cannot_update_by_prior_tf_position,The following statement contains a magic number: var tag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(270' 260)'  				new Dictionary<string' long> {{"type1"' 2}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,event_by_type_index_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\event_by_type_index_position_tagger.cs,cannot_update_by_prior_tf_position,The following statement contains a magic number: var tag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(270' 260)'  				new Dictionary<string' long> {{"type1"' 2}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_creating_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_creating_event_by_type_index_position_tracker.cs,it_can_be_updated_with_correct_event_types,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 10}' {"type2"' 20}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_creating_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_creating_event_by_type_index_position_tracker.cs,it_can_be_updated_with_correct_event_types,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 10}' {"type2"' 20}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_creating_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_creating_event_by_type_index_position_tracker.cs,it_can_be_updated_with_correct_event_types,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 10}' {"type2"' 20}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_creating_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_creating_event_by_type_index_position_tracker.cs,it_can_be_updated_with_correct_event_types,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 10}' {"type2"' 20}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_creating_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_creating_event_by_type_index_position_tracker.cs,it_cannot_be_updated_with_other_event_types,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 10}' {"type3"' 20}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_creating_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_creating_event_by_type_index_position_tracker.cs,it_cannot_be_updated_with_other_event_types,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 10}' {"type3"' 20}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_creating_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_creating_event_by_type_index_position_tracker.cs,it_cannot_be_updated_with_other_event_types,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 10}' {"type3"' 20}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_creating_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_creating_event_by_type_index_position_tracker.cs,it_cannot_be_updated_with_other_event_types,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 10}' {"type3"' 20}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_creating_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_creating_event_by_type_index_position_tracker.cs,it_cannot_be_updated_forward,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 10}' {"type2"' 20}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_creating_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_creating_event_by_type_index_position_tracker.cs,it_cannot_be_updated_forward,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 10}' {"type2"' 20}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_creating_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_creating_event_by_type_index_position_tracker.cs,it_cannot_be_updated_forward,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 10}' {"type2"' 20}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_creating_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_creating_event_by_type_index_position_tracker.cs,it_cannot_be_updated_forward,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 10}' {"type2"' 20}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_creating_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_creating_event_by_type_index_position_tracker.cs,initial_position_cannot_be_set_twice,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  					new Dictionary<string' long> {{"type1"' 10}' {"type2"' 20}});  				_positionTracker.UpdateByCheckpointTagForward(newTag);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_creating_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_creating_event_by_type_index_position_tracker.cs,initial_position_cannot_be_set_twice,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  					new Dictionary<string' long> {{"type1"' 10}' {"type2"' 20}});  				_positionTracker.UpdateByCheckpointTagForward(newTag);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_creating_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_creating_event_by_type_index_position_tracker.cs,initial_position_cannot_be_set_twice,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  					new Dictionary<string' long> {{"type1"' 10}' {"type2"' 20}});  				_positionTracker.UpdateByCheckpointTagForward(newTag);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_creating_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_creating_event_by_type_index_position_tracker.cs,initial_position_cannot_be_set_twice,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  					new Dictionary<string' long> {{"type1"' 10}' {"type2"' 20}});  				_positionTracker.UpdateByCheckpointTagForward(newTag);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_event_by_type_index_position_tracker_from_a_tag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_event_by_type_index_position_tracker_from_a_tag.cs,When,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(10' 5)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_event_by_type_index_position_tracker_from_a_tag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_event_by_type_index_position_tracker_from_a_tag.cs,When,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(10' 5)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_event_by_type_index_position_tracker_from_a_tag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_event_by_type_index_position_tracker_from_a_tag.cs,When,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(10' 5)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_event_by_type_index_position_tracker_from_a_tag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_event_by_type_index_position_tracker_from_a_tag.cs,stream_position_is_updated,The following statement contains a magic number: Assert.AreEqual(2' _positionTracker.LastTag.Streams["type2"]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_event_by_type_index_position_tracker_from_a_tag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_event_by_type_index_position_tracker_from_a_tag.cs,tf_stream_position_is_updated,The following statement contains a magic number: Assert.AreEqual(new TFPos(10' 5)' _positionTracker.LastTag.Position);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_event_by_type_index_position_tracker_from_a_tag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_event_by_type_index_position_tracker_from_a_tag.cs,tf_stream_position_is_updated,The following statement contains a magic number: Assert.AreEqual(new TFPos(10' 5)' _positionTracker.LastTag.Position);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,When,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(10' 5)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,When,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(10' 5)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,When,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(10' 5)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,When,The following statement contains a magic number: var newTag2 = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(20' 15)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 3}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,When,The following statement contains a magic number: var newTag2 = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(20' 15)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 3}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,When,The following statement contains a magic number: var newTag2 = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(20' 15)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 3}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,stream_position_is_updated,The following statement contains a magic number: Assert.AreEqual(3' _positionTracker.LastTag.Streams["type2"]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,tf_position_is_updated,The following statement contains a magic number: Assert.AreEqual(new TFPos(20' 15)' _positionTracker.LastTag.Position);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,tf_position_is_updated,The following statement contains a magic number: Assert.AreEqual(new TFPos(20' 15)' _positionTracker.LastTag.Position);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,cannot_update_to_the_same_position,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(20' 15)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 3}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,cannot_update_to_the_same_position,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(20' 15)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 3}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,cannot_update_to_the_same_position,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(20' 15)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 3}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,can_update_to_the_same_index_position_but_tf,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(30' 25)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 3}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,can_update_to_the_same_index_position_but_tf,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(30' 25)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 3}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,can_update_to_the_same_index_position_but_tf,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(30' 25)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 3}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,it_cannot_be_updated_with_other_stream,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(30' 25)'  				new Dictionary<string' long> {{"type1"' 1}' {"type3"' 3}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,it_cannot_be_updated_with_other_stream,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(30' 25)'  				new Dictionary<string' long> {{"type1"' 1}' {"type3"' 3}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger,when_updating_postion_event_by_type_index_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\event_by_type_index_position_tagger\when_updating_postion_event_by_type_index_position_tracker.cs,it_cannot_be_updated_with_other_stream,The following statement contains a magic number: var newTag = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(30' 25)'  				new Dictionary<string' long> {{"type1"' 1}' {"type3"' 3}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,multistream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\multistream_position_tagger.cs,setup,The following statement contains a magic number: _zeroEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(10' 0)' "stream1"' 0' false' Guid.NewGuid()' "StreamCreated"' false'  				new byte[0]' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,multistream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\multistream_position_tagger.cs,setup,The following statement contains a magic number: _firstEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(30' 20)' "stream1"' 1' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,multistream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\multistream_position_tagger.cs,setup,The following statement contains a magic number: _firstEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(30' 20)' "stream1"' 1' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,multistream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\multistream_position_tagger.cs,setup,The following statement contains a magic number: _secondEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(50' 40)' "stream2"' 0' false' Guid.NewGuid()' "StreamCreated"' false'  				new byte[0]' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,multistream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\multistream_position_tagger.cs,setup,The following statement contains a magic number: _secondEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(50' 40)' "stream2"' 0' false' Guid.NewGuid()' "StreamCreated"' false'  				new byte[0]' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,multistream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\multistream_position_tagger.cs,setup,The following statement contains a magic number: _thirdEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(70' 60)' "stream2"' 1' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,multistream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\multistream_position_tagger.cs,setup,The following statement contains a magic number: _thirdEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(70' 60)' "stream2"' 1' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,multistream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\multistream_position_tagger.cs,is_message_after_checkpoint_tag_before_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromStreamPositions(0' new Dictionary<string' long> {{"stream1"' 2}' {"stream2"' 2}})'  					_firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,multistream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\multistream_position_tagger.cs,is_message_after_checkpoint_tag_before_case,The following statement contains a magic number: var result =  				t.IsMessageAfterCheckpointTag(  					CheckpointTag.FromStreamPositions(0' new Dictionary<string' long> {{"stream1"' 2}' {"stream2"' 2}})'  					_firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,multistream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\multistream_position_tagger.cs,position_checkpoint_tag_is_incompatible,The following statement contains a magic number: Assert.IsFalse(t.IsCompatible(CheckpointTag.FromPosition(0' 1000' 500)));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,multistream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\multistream_position_tagger.cs,position_checkpoint_tag_is_incompatible,The following statement contains a magic number: Assert.IsFalse(t.IsCompatible(CheckpointTag.FromPosition(0' 1000' 500)));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,multistream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\multistream_position_tagger.cs,another_streams_checkpoint_tag_is_incompatible,The following statement contains a magic number: Assert.IsFalse(  				t.IsCompatible(  					CheckpointTag.FromStreamPositions(0'  						new Dictionary<string' long> {{"stream2"' 100}' {"stream3"' 150}})));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,multistream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\multistream_position_tagger.cs,another_streams_checkpoint_tag_is_incompatible,The following statement contains a magic number: Assert.IsFalse(  				t.IsCompatible(  					CheckpointTag.FromStreamPositions(0'  						new Dictionary<string' long> {{"stream2"' 100}' {"stream3"' 150}})));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,multistream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\multistream_position_tagger.cs,the_same_stream_checkpoint_tag_is_compatible,The following statement contains a magic number: Assert.IsTrue(  				t.IsCompatible(  					CheckpointTag.FromStreamPositions(0'  						new Dictionary<string' long> {{"stream1"' 100}' {"stream2"' 150}})));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,multistream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\multistream_position_tagger.cs,the_same_stream_checkpoint_tag_is_compatible,The following statement contains a magic number: Assert.IsTrue(  				t.IsCompatible(  					CheckpointTag.FromStreamPositions(0'  						new Dictionary<string' long> {{"stream1"' 100}' {"stream2"' 150}})));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,multistream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\multistream_position_tagger.cs,adjust_compatible_tag_returns_the_same_tag,The following statement contains a magic number: var tag = CheckpointTag.FromStreamPositions(0'  				new Dictionary<string' long> {{"stream1"' 1}' {"stream2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,when_creating_multistream_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\when_creating_multistream_postion_tracker.cs,it_can_be_updated_with_correct_streams,The following statement contains a magic number: var newTag =  				CheckpointTag.FromStreamPositions(0' new Dictionary<string' long> {{"stream1"' 10}' {"stream2"' 20}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,when_creating_multistream_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\when_creating_multistream_postion_tracker.cs,it_can_be_updated_with_correct_streams,The following statement contains a magic number: var newTag =  				CheckpointTag.FromStreamPositions(0' new Dictionary<string' long> {{"stream1"' 10}' {"stream2"' 20}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,when_creating_multistream_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\when_creating_multistream_postion_tracker.cs,it_cannot_be_updated_with_other_streams,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromStreamPositions(0'  					new Dictionary<string' long> {{"stream1"' 10}' {"stream3"' 20}});  				_positionTracker.UpdateByCheckpointTagInitial(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,when_creating_multistream_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\when_creating_multistream_postion_tracker.cs,it_cannot_be_updated_with_other_streams,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromStreamPositions(0'  					new Dictionary<string' long> {{"stream1"' 10}' {"stream3"' 20}});  				_positionTracker.UpdateByCheckpointTagInitial(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,when_creating_multistream_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\when_creating_multistream_postion_tracker.cs,it_cannot_be_updated_forward,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromStreamPositions(0'  					new Dictionary<string' long> {{"stream1"' 10}' {"stream2"' 20}});  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,when_creating_multistream_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\when_creating_multistream_postion_tracker.cs,it_cannot_be_updated_forward,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromStreamPositions(0'  					new Dictionary<string' long> {{"stream1"' 10}' {"stream2"' 20}});  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,when_creating_multistream_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\when_creating_multistream_postion_tracker.cs,initial_position_cannot_be_set_twice,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromStreamPositions(0'  					new Dictionary<string' long> {{"stream1"' 10}' {"stream2"' 20}});  				_positionTracker.UpdateByCheckpointTagForward(newTag);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,when_creating_multistream_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\when_creating_multistream_postion_tracker.cs,initial_position_cannot_be_set_twice,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromStreamPositions(0'  					new Dictionary<string' long> {{"stream1"' 10}' {"stream2"' 20}});  				_positionTracker.UpdateByCheckpointTagForward(newTag);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,when_updating_multistream_postion_tracker_from_a_tag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\when_updating_multistream_postion_tracker_from_a_tag.cs,When,The following statement contains a magic number: var newTag =  				CheckpointTag.FromStreamPositions(0' new Dictionary<string' long> {{"stream1"' 1}' {"stream2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,when_updating_multistream_postion_tracker_from_a_tag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\when_updating_multistream_postion_tracker_from_a_tag.cs,stream_position_is_updated,The following statement contains a magic number: Assert.AreEqual(2' _positionTracker.LastTag.Streams["stream2"]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,when_updating_postion_multistream_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\when_updating_postion_multistream_position_tracker.cs,When,The following statement contains a magic number: var newTag =  				CheckpointTag.FromStreamPositions(0' new Dictionary<string' long> {{"stream1"' 1}' {"stream2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,when_updating_postion_multistream_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\when_updating_postion_multistream_position_tracker.cs,When,The following statement contains a magic number: var newTag2 =  				CheckpointTag.FromStreamPositions(0' new Dictionary<string' long> {{"stream1"' 1}' {"stream2"' 3}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,when_updating_postion_multistream_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\when_updating_postion_multistream_position_tracker.cs,stream_position_is_updated,The following statement contains a magic number: Assert.AreEqual(3' _positionTracker.LastTag.Streams["stream2"]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,when_updating_postion_multistream_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\when_updating_postion_multistream_position_tracker.cs,cannot_update_to_the_same_postion,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag =  					CheckpointTag.FromStreamPositions(0' new Dictionary<string' long> {{"stream1"' 1}' {"stream2"' 3}});  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,when_updating_postion_multistream_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\when_updating_postion_multistream_position_tracker.cs,it_cannot_be_updated_with_other_stream,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				// even not initialized (UpdateToZero can be removed)  				var newTag =  					CheckpointTag.FromStreamPositions(0' new Dictionary<string' long> {{"stream1"' 3}' {"stream3"' 2}});  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.multistream_position_tagger,when_updating_postion_multistream_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\multistream_position_tagger\when_updating_postion_multistream_position_tracker.cs,it_cannot_be_updated_with_other_stream,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				// even not initialized (UpdateToZero can be removed)  				var newTag =  					CheckpointTag.FromStreamPositions(0' new Dictionary<string' long> {{"stream1"' 3}' {"stream3"' 2}});  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,prepare_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\prepare_position_tagger.cs,setup,The following statement contains a magic number: _zeroEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(10' 0)' "stream"' 0' false' Guid.NewGuid()' "StreamCreated"' false'  				new byte[0]' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,prepare_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\prepare_position_tagger.cs,setup,The following statement contains a magic number: _firstEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(0' 20)' "stream"' 1' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,prepare_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\prepare_position_tagger.cs,setup,The following statement contains a magic number: _secondEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(50' 40)' "stream"' 2' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,prepare_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\prepare_position_tagger.cs,setup,The following statement contains a magic number: _secondEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(50' 40)' "stream"' 2' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,prepare_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\prepare_position_tagger.cs,setup,The following statement contains a magic number: _secondEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(50' 40)' "stream"' 2' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,prepare_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\prepare_position_tagger.cs,is_message_after_checkpoint_tag_after_case,The following statement contains a magic number: var result = t.IsMessageAfterCheckpointTag(CheckpointTag.FromPreparePosition(0' 10)' _firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,prepare_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\prepare_position_tagger.cs,is_message_after_checkpoint_tag_before_case,The following statement contains a magic number: var result = t.IsMessageAfterCheckpointTag(CheckpointTag.FromPreparePosition(0' 40)' _firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,prepare_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\prepare_position_tagger.cs,is_message_after_checkpoint_tag_equal_case,The following statement contains a magic number: var result = t.IsMessageAfterCheckpointTag(CheckpointTag.FromPreparePosition(0' 20)' _firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,prepare_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\prepare_position_tagger.cs,prepare_position_checkpoint_tag_is_compatible,The following statement contains a magic number: Assert.IsTrue(t.IsCompatible(CheckpointTag.FromPreparePosition(0' 500)));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,prepare_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\prepare_position_tagger.cs,tf_position_checkpoint_tag_is_incompatible,The following statement contains a magic number: Assert.IsFalse(t.IsCompatible(CheckpointTag.FromPosition(0' 510' 500)));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,prepare_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\prepare_position_tagger.cs,tf_position_checkpoint_tag_is_incompatible,The following statement contains a magic number: Assert.IsFalse(t.IsCompatible(CheckpointTag.FromPosition(0' 510' 500)));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,prepare_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\prepare_position_tagger.cs,stream_checkpoint_tag_is_incompatible,The following statement contains a magic number: Assert.IsFalse(t.IsCompatible(CheckpointTag.FromStreamPosition(0' "stream2"' 100)));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,when_creating_prepare_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\when_creating_prepare_postion_tracker.cs,it_can_be_updated,The following statement contains a magic number: var newTag = CheckpointTag.FromPreparePosition(0' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,when_creating_prepare_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\when_creating_prepare_postion_tracker.cs,initial_position_cannot_be_set_twice,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromPreparePosition(0' 50);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,when_creating_prepare_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\when_creating_prepare_postion_tracker.cs,it_cannot_be_updated_forward,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromPreparePosition(0' 50);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,when_reinitializing_prepapre_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\when_reinitializing_prepapre_postion_tracker.cs,When,The following statement contains a magic number: var newTag = CheckpointTag.FromPreparePosition(0' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,when_reinitializing_prepapre_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\when_reinitializing_prepapre_postion_tracker.cs,it_can_be_updated,The following statement contains a magic number: var newTag = CheckpointTag.FromPreparePosition(0' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,when_reinitializing_prepapre_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\when_reinitializing_prepapre_postion_tracker.cs,initial_position_cannot_be_set_twice,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromPreparePosition(0' 50);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,when_reinitializing_prepapre_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\when_reinitializing_prepapre_postion_tracker.cs,it_cannot_be_updated_forward,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromPreparePosition(0' 50);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,when_updating_postion_tagger_from_a_tag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\when_updating_postion_tagger_from_a_tag.cs,When,The following statement contains a magic number: var newTag = CheckpointTag.FromPreparePosition(0' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,when_updating_postion_tagger_from_a_tag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\when_updating_postion_tagger_from_a_tag.cs,position_is_updated,The following statement contains a magic number: Assert.AreEqual(50' _positionTracker.LastTag.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,when_updating_prepare_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\when_updating_prepare_postion_tracker.cs,When,The following statement contains a magic number: var newTag = CheckpointTag.FromPreparePosition(0' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,when_updating_prepare_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\when_updating_prepare_postion_tracker.cs,checkpoint_tag_is_for_correct_position,The following statement contains a magic number: Assert.AreEqual(50' _positionTracker.LastTag.Position.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.prepare_position_tagger,when_updating_prepare_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\prepare_position_tagger\when_updating_prepare_postion_tracker.cs,cannot_update_to_the_same_postion,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromPreparePosition(0' 50);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.stream_position_tagger,stream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\stream_position_tagger\stream_position_tagger.cs,setup,The following statement contains a magic number: _zeroEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(10' 0)' "stream1"' 0' false' Guid.NewGuid()' "StreamCreated"' false'  				new byte[0]' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.stream_position_tagger,stream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\stream_position_tagger\stream_position_tagger.cs,setup,The following statement contains a magic number: _firstEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(30' 20)' "stream1"' 1' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.stream_position_tagger,stream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\stream_position_tagger\stream_position_tagger.cs,setup,The following statement contains a magic number: _firstEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(30' 20)' "stream1"' 1' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.stream_position_tagger,stream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\stream_position_tagger\stream_position_tagger.cs,setup,The following statement contains a magic number: _secondEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(50' 40)' "stream1"' 2' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.stream_position_tagger,stream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\stream_position_tagger\stream_position_tagger.cs,setup,The following statement contains a magic number: _secondEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(50' 40)' "stream1"' 2' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.stream_position_tagger,stream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\stream_position_tagger\stream_position_tagger.cs,setup,The following statement contains a magic number: _secondEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(50' 40)' "stream1"' 2' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.stream_position_tagger,stream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\stream_position_tagger\stream_position_tagger.cs,is_message_after_checkpoint_tag_before_case,The following statement contains a magic number: var result = t.IsMessageAfterCheckpointTag(CheckpointTag.FromStreamPosition(0' "stream1"' 2)' _firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.stream_position_tagger,stream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\stream_position_tagger\stream_position_tagger.cs,position_checkpoint_tag_is_incompatible,The following statement contains a magic number: Assert.IsFalse(t.IsCompatible(CheckpointTag.FromPosition(0' 1000' 500)));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.stream_position_tagger,stream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\stream_position_tagger\stream_position_tagger.cs,position_checkpoint_tag_is_incompatible,The following statement contains a magic number: Assert.IsFalse(t.IsCompatible(CheckpointTag.FromPosition(0' 1000' 500)));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.stream_position_tagger,stream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\stream_position_tagger\stream_position_tagger.cs,anothe_stream_checkpoint_tag_is_incompatible,The following statement contains a magic number: Assert.IsFalse(t.IsCompatible(CheckpointTag.FromStreamPosition(0' "stream2"' 100)));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.stream_position_tagger,stream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\stream_position_tagger\stream_position_tagger.cs,the_same_stream_checkpoint_tag_is_compatible,The following statement contains a magic number: Assert.IsTrue(t.IsCompatible(CheckpointTag.FromStreamPosition(0' "stream1"' 100)));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.stream_position_tagger,stream_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\stream_position_tagger\stream_position_tagger.cs,can_adjust_multi_stream_position_tag,The following statement contains a magic number: var original =  				CheckpointTag.FromStreamPositions(0' new Dictionary<string' long> {{"stream1"' 1}' {"stream2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.stream_position_tagger,when_updating_postion_stream_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\stream_position_tagger\when_updating_postion_stream_position_tracker.cs,When,The following statement contains a magic number: var newTag2 = CheckpointTag.FromStreamPosition(0' "stream1"' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.stream_position_tagger,when_updating_postion_stream_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\stream_position_tagger\when_updating_postion_stream_position_tracker.cs,stream_position_is_updated,The following statement contains a magic number: Assert.AreEqual(2' _positionTracker.LastTag.Streams["stream1"]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.stream_position_tagger,when_updating_postion_stream_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\stream_position_tagger\when_updating_postion_stream_position_tracker.cs,cannot_update_to_the_same_postion,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromStreamPosition(0' "stream1"' 2);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.stream_position_tagger,when_updating_postion_stream_position_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\stream_position_tagger\when_updating_postion_stream_position_tracker.cs,it_cannot_be_updated_with_other_stream,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				// even not initialized (UpdateToZero can be removed)  				var newTag = CheckpointTag.FromStreamPosition(0' "other_stream1"' 2);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,setup,The following statement contains a magic number: _zeroEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(10' 0)' "stream"' 0' false' Guid.NewGuid()' "StreamCreated"' false'  				new byte[0]' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,setup,The following statement contains a magic number: _firstEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(30' 20)' "stream"' 1' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,setup,The following statement contains a magic number: _firstEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(30' 20)' "stream"' 1' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,setup,The following statement contains a magic number: _secondEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(50' 40)' "stream"' 2' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,setup,The following statement contains a magic number: _secondEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(50' 40)' "stream"' 2' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,setup,The following statement contains a magic number: _secondEvent = ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  				Guid.NewGuid()' new TFPos(50' 40)' "stream"' 2' false' Guid.NewGuid()' "Data"' true'  				Helper.UTF8NoBom.GetBytes("{}")' new byte[0]);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,is_message_after_checkpoint_tag_after_case,The following statement contains a magic number: var result = t.IsMessageAfterCheckpointTag(CheckpointTag.FromPosition(0' 20' 10)' _firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,is_message_after_checkpoint_tag_after_case,The following statement contains a magic number: var result = t.IsMessageAfterCheckpointTag(CheckpointTag.FromPosition(0' 20' 10)' _firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,is_message_after_checkpoint_tag_before_case,The following statement contains a magic number: var result = t.IsMessageAfterCheckpointTag(CheckpointTag.FromPosition(0' 50' 40)' _firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,is_message_after_checkpoint_tag_before_case,The following statement contains a magic number: var result = t.IsMessageAfterCheckpointTag(CheckpointTag.FromPosition(0' 50' 40)' _firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,is_message_after_checkpoint_tag_equal_case,The following statement contains a magic number: var result = t.IsMessageAfterCheckpointTag(CheckpointTag.FromPosition(0' 30' 20)' _firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,is_message_after_checkpoint_tag_equal_case,The following statement contains a magic number: var result = t.IsMessageAfterCheckpointTag(CheckpointTag.FromPosition(0' 30' 20)' _firstEvent);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,position_checkpoint_tag_is_compatible,The following statement contains a magic number: Assert.IsTrue(t.IsCompatible(CheckpointTag.FromPosition(0' 1000' 500)));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,position_checkpoint_tag_is_compatible,The following statement contains a magic number: Assert.IsTrue(t.IsCompatible(CheckpointTag.FromPosition(0' 1000' 500)));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,stream_checkpoint_tag_is_incompatible,The following statement contains a magic number: Assert.IsFalse(t.IsCompatible(CheckpointTag.FromStreamPosition(0' "stream2"' 100)));
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,adjust_compatible_tag_returns_the_same_tag,The following statement contains a magic number: var tag = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,adjust_compatible_tag_returns_the_same_tag,The following statement contains a magic number: var tag = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,can_adjust_tf_position_tag,The following statement contains a magic number: var tag = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,can_adjust_tf_position_tag,The following statement contains a magic number: var tag = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,can_adjust_tf_position_tag,The following statement contains a magic number: var original = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,can_adjust_tf_position_tag,The following statement contains a magic number: var original = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,transaction_file_position_tagger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\transaction_file_position_tagger.cs,can_adjust_tf_position_tag,The following statement contains a magic number: var original = CheckpointTag.FromEventTypeIndexPositions(0' new TFPos(100' 50)'  				new Dictionary<string' long> {{"type1"' 1}' {"type2"' 2}});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_creating_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_creating_transaction_file_postion_tracker.cs,it_can_be_updated,The following statement contains a magic number: var newTag = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_creating_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_creating_transaction_file_postion_tracker.cs,it_can_be_updated,The following statement contains a magic number: var newTag = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_creating_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_creating_transaction_file_postion_tracker.cs,initial_position_cannot_be_set_twice,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromPosition(0' 100' 50);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_creating_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_creating_transaction_file_postion_tracker.cs,initial_position_cannot_be_set_twice,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromPosition(0' 100' 50);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_creating_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_creating_transaction_file_postion_tracker.cs,it_cannot_be_updated_forward,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromPosition(0' 100' 50);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_creating_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_creating_transaction_file_postion_tracker.cs,it_cannot_be_updated_forward,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromPosition(0' 100' 50);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_reinitializing_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_reinitializing_transaction_file_postion_tracker.cs,When,The following statement contains a magic number: var newTag = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_reinitializing_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_reinitializing_transaction_file_postion_tracker.cs,When,The following statement contains a magic number: var newTag = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_reinitializing_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_reinitializing_transaction_file_postion_tracker.cs,it_can_be_updated,The following statement contains a magic number: var newTag = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_reinitializing_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_reinitializing_transaction_file_postion_tracker.cs,it_can_be_updated,The following statement contains a magic number: var newTag = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_reinitializing_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_reinitializing_transaction_file_postion_tracker.cs,initial_position_cannot_be_set_twice,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromPosition(0' 100' 50);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_reinitializing_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_reinitializing_transaction_file_postion_tracker.cs,initial_position_cannot_be_set_twice,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromPosition(0' 100' 50);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_reinitializing_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_reinitializing_transaction_file_postion_tracker.cs,it_cannot_be_updated_forward,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromPosition(0' 100' 50);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_reinitializing_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_reinitializing_transaction_file_postion_tracker.cs,it_cannot_be_updated_forward,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromPosition(0' 100' 50);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_updating_postion_tagger_from_a_tag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_updating_postion_tagger_from_a_tag.cs,When,The following statement contains a magic number: var newTag = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_updating_postion_tagger_from_a_tag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_updating_postion_tagger_from_a_tag.cs,When,The following statement contains a magic number: var newTag = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_updating_postion_tagger_from_a_tag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_updating_postion_tagger_from_a_tag.cs,position_is_updated,The following statement contains a magic number: Assert.AreEqual(50' _positionTracker.LastTag.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_updating_postion_tagger_from_a_tag,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_updating_postion_tagger_from_a_tag.cs,position_is_updated,The following statement contains a magic number: Assert.AreEqual(100' _positionTracker.LastTag.CommitPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_updating_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_updating_transaction_file_postion_tracker.cs,When,The following statement contains a magic number: var newTag = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_updating_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_updating_transaction_file_postion_tracker.cs,When,The following statement contains a magic number: var newTag = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_updating_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_updating_transaction_file_postion_tracker.cs,checkpoint_tag_is_for_correct_position,The following statement contains a magic number: Assert.AreEqual(new TFPos(100' 50)' _positionTracker.LastTag.Position);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_updating_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_updating_transaction_file_postion_tracker.cs,checkpoint_tag_is_for_correct_position,The following statement contains a magic number: Assert.AreEqual(new TFPos(100' 50)' _positionTracker.LastTag.Position);
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_updating_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_updating_transaction_file_postion_tracker.cs,cannot_update_to_the_same_postion,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromPosition(0' 100' 50);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.position_tagging.transaction_file_position_tagger,when_updating_transaction_file_postion_tracker,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\position_tagging\transaction_file_position_tagger\when_updating_transaction_file_postion_tracker.cs,cannot_update_to_the_same_postion,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => {  				var newTag = CheckpointTag.FromPosition(0' 100' 50);  				_positionTracker.UpdateByCheckpointTagForward(newTag);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.bi_state,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\bi_state\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream1"' 1' "stream1"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.bi_state,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\bi_state\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream1"' 1' "stream1"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.bi_state,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\bi_state\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream1"' 1' "stream1"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.bi_state,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\bi_state\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream1"' 1' "stream1"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.bi_state,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\bi_state\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream1"' 1' "stream1"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.bi_state,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\bi_state\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream1"' 1' "stream1"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.bi_state,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\bi_state\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream2"' 1' "stream2"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.bi_state,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\bi_state\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream2"' 1' "stream2"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.bi_state,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\bi_state\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream2"' 1' "stream2"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.bi_state,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\bi_state\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream2"' 1' "stream2"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.bi_state,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\bi_state\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream2"' 1' "stream2"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.bi_state,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\bi_state\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream2"' 1' "stream2"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.bi_state,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\bi_state\a_new_posted_projection.cs,writes_both_stream_and_shared_partition_checkpoints,The following statement contains a magic number: Assert.AreEqual(2' writeCheckpoints.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_and_prepare_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_and_prepare_message.cs,Given,The following statement contains a magic number: _config = new ProjectionConfig(  				new OpenGenericPrincipal("user"' "a"' "b")'  				1000'  				100000'  				2000'  				200'  				true'  				true'  				true'  				true'  				true'  				true'  				10000'  				1);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_and_prepare_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_and_prepare_message.cs,Given,The following statement contains a magic number: _config = new ProjectionConfig(  				new OpenGenericPrincipal("user"' "a"' "b")'  				1000'  				100000'  				2000'  				200'  				true'  				true'  				true'  				true'  				true'  				true'  				10000'  				1);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_and_prepare_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_and_prepare_message.cs,Given,The following statement contains a magic number: _config = new ProjectionConfig(  				new OpenGenericPrincipal("user"' "a"' "b")'  				1000'  				100000'  				2000'  				200'  				true'  				true'  				true'  				true'  				true'  				true'  				10000'  				1);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_and_prepare_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_and_prepare_message.cs,Given,The following statement contains a magic number: _config = new ProjectionConfig(  				new OpenGenericPrincipal("user"' "a"' "b")'  				1000'  				100000'  				2000'  				200'  				true'  				true'  				true'  				true'  				true'  				true'  				10000'  				1);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_and_prepare_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_and_prepare_message.cs,Given,The following statement contains a magic number: _config = new ProjectionConfig(  				new OpenGenericPrincipal("user"' "a"' "b")'  				1000'  				100000'  				2000'  				200'  				true'  				true'  				true'  				true'  				true'  				true'  				10000'  				1);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_and_prepare_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_and_prepare_message.cs,When,The following statement contains a magic number: _projectionVersion = new ProjectionVersion(1' 2' 3);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_and_prepare_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_and_prepare_message.cs,When,The following statement contains a magic number: _projectionVersion = new ProjectionVersion(1' 2' 3);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_and_prepare_slave_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_and_prepare_slave_message.cs,Given,The following statement contains a magic number: _config = new ProjectionConfig(  				new OpenGenericPrincipal("user"' "a"' "b")'  				1000'  				100000'  				2000'  				200'  				true'  				true'  				true'  				true'  				true'  				true'  				10000'  				1);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_and_prepare_slave_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_and_prepare_slave_message.cs,Given,The following statement contains a magic number: _config = new ProjectionConfig(  				new OpenGenericPrincipal("user"' "a"' "b")'  				1000'  				100000'  				2000'  				200'  				true'  				true'  				true'  				true'  				true'  				true'  				10000'  				1);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_and_prepare_slave_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_and_prepare_slave_message.cs,Given,The following statement contains a magic number: _config = new ProjectionConfig(  				new OpenGenericPrincipal("user"' "a"' "b")'  				1000'  				100000'  				2000'  				200'  				true'  				true'  				true'  				true'  				true'  				true'  				10000'  				1);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_and_prepare_slave_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_and_prepare_slave_message.cs,Given,The following statement contains a magic number: _config = new ProjectionConfig(  				new OpenGenericPrincipal("user"' "a"' "b")'  				1000'  				100000'  				2000'  				200'  				true'  				true'  				true'  				true'  				true'  				true'  				10000'  				1);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_and_prepare_slave_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_and_prepare_slave_message.cs,Given,The following statement contains a magic number: _config = new ProjectionConfig(  				new OpenGenericPrincipal("user"' "a"' "b")'  				1000'  				100000'  				2000'  				200'  				true'  				true'  				true'  				true'  				true'  				true'  				10000'  				1);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_and_prepare_slave_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_and_prepare_slave_message.cs,When,The following statement contains a magic number: _projectionVersion = new ProjectionVersion(1' 2' 3);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_and_prepare_slave_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_and_prepare_slave_message.cs,When,The following statement contains a magic number: _projectionVersion = new ProjectionVersion(1' 2' 3);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_prepared_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_prepared_message.cs,Given,The following statement contains a magic number: _config = new ProjectionConfig(  				new OpenGenericPrincipal("user"' "a"' "b")'  				1000'  				100000'  				2000'  				200'  				true'  				true'  				true'  				true'  				true'  				true'  				10000'  				1);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_prepared_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_prepared_message.cs,Given,The following statement contains a magic number: _config = new ProjectionConfig(  				new OpenGenericPrincipal("user"' "a"' "b")'  				1000'  				100000'  				2000'  				200'  				true'  				true'  				true'  				true'  				true'  				true'  				10000'  				1);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_prepared_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_prepared_message.cs,Given,The following statement contains a magic number: _config = new ProjectionConfig(  				new OpenGenericPrincipal("user"' "a"' "b")'  				1000'  				100000'  				2000'  				200'  				true'  				true'  				true'  				true'  				true'  				true'  				10000'  				1);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_prepared_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_prepared_message.cs,Given,The following statement contains a magic number: _config = new ProjectionConfig(  				new OpenGenericPrincipal("user"' "a"' "b")'  				1000'  				100000'  				2000'  				200'  				true'  				true'  				true'  				true'  				true'  				true'  				10000'  				1);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_prepared_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_prepared_message.cs,Given,The following statement contains a magic number: _config = new ProjectionConfig(  				new OpenGenericPrincipal("user"' "a"' "b")'  				1000'  				100000'  				2000'  				200'  				true'  				true'  				true'  				true'  				true'  				true'  				10000'  				1);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_prepared_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_prepared_message.cs,When,The following statement contains a magic number: _projectionVersion = new ProjectionVersion(1' 2' 3);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.command_writer,when_handling_create_prepared_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\command_writer\when_handling_create_prepared_message.cs,When,The following statement contains a magic number: _projectionVersion = new ProjectionVersion(1' 2' 3);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: _timeProvider.AddTime(TimeSpan.FromMinutes(6));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  						(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  							_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  							Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  						(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  							_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  							Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  						(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  							_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  							Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  						(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  							_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  							Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  						(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  							_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  							Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  						(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  							_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  							Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_failing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"fail"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_failing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"fail"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_failing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"fail"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_failing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"fail"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_failing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"fail"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_failing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"fail"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  						(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  							_reader' new TFPos(100 * i + 200' 150)' new TFPos(100 * i + 200' 150)' "stream"' 1 + i + 1'  							"stream"' 1 + i + 1' false' Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]'  							100 * i + 200' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  						(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  							_reader' new TFPos(100 * i + 200' 150)' new TFPos(100 * i + 200' 150)' "stream"' 1 + i + 1'  							"stream"' 1 + i + 1' false' Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]'  							100 * i + 200' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  						(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  							_reader' new TFPos(100 * i + 200' 150)' new TFPos(100 * i + 200' 150)' "stream"' 1 + i + 1'  							"stream"' 1 + i + 1' false' Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]'  							100 * i + 200' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  						(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  							_reader' new TFPos(100 * i + 200' 150)' new TFPos(100 * i + 200' 150)' "stream"' 1 + i + 1'  							"stream"' 1 + i + 1' false' Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]'  							100 * i + 200' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  						(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  							_reader' new TFPos(100 * i + 200' 150)' new TFPos(100 * i + 200' 150)' "stream"' 1 + i + 1'  							"stream"' 1 + i + 1' false' Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]'  							100 * i + 200' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  						(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  							_reader' new TFPos(100 * i + 200' 150)' new TFPos(100 * i + 200' 150)' "stream"' 1 + i + 1'  							"stream"' 1 + i + 1' false' Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]'  							100 * i + 200' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  						(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  							_reader' new TFPos(100 * i + 200' 150)' new TFPos(100 * i + 200' 150)' "stream"' 1 + i + 1'  							"stream"' 1 + i + 1' false' Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]'  							100 * i + 200' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  						(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  							_reader' new TFPos(100 * i + 200' 150)' new TFPos(100 * i + 200' 150)' "stream"' 1 + i + 1'  							"stream"' 1 + i + 1' false' Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]'  							100 * i + 200' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  						(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  							_reader' new TFPos(100 * i + 200' 150)' new TFPos(100 * i + 200' 150)' "stream"' 1 + i + 1'  							"stream"' 1 + i + 1' false' Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]'  							100 * i + 200' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_stopping,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: i < 50
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_handling_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream"' 2' "stream"' 2' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_handling_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream"' 2' "stream"' 2' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_handling_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream"' 2' "stream"' 2' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_handling_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream"' 2' "stream"' 2' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_handling_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream"' 2' "stream"' 2' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_handling_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream"' 2' "stream"' 2' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_handling_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream"' 2' "stream"' 2' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_handling_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream"' 2' "stream"' 2' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_resetting_and_starting,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 150)' new TFPos(100' 150)' "stream"' 1 + 1' "stream"' 1 + 1' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 200' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_resetting_and_starting,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 150)' new TFPos(100' 150)' "stream"' 1 + 1' "stream"' 1 + 1' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 200' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_resetting_and_starting,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 150)' new TFPos(100' 150)' "stream"' 1 + 1' "stream"' 1 + 1' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 200' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_resetting_and_starting,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 150)' new TFPos(100' 150)' "stream"' 1 + 1' "stream"' 1 + 1' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 200' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_resetting_and_starting,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 150)' new TFPos(100' 150)' "stream"' 1 + 1' "stream"' 1 + 1' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 200' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_resetting_and_starting,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 150)' new TFPos(100' 150)' "stream"' 1 + 1' "stream"' 1 + 1' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 200' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.continuous,when_resetting_and_starting,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\continuous\a_running_projection.cs,the_projection_epoch_changes,The following statement contains a magic number: Assert.AreEqual(  					2'  					_consumer.HandledMessages.OfType<ProjectionManagementMessage.Statistics>()  						.Single()  						.Projections.Single()  						.Version);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager,TestFixtureWithJsProjection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\TestFixtureWithJsProjection.cs,Teardown,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager,TestFixtureWithProjectionCoreAndManagementServices,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\TestFixtureWithProjectionCoreAndManagementServices.cs,SetUpCoreServices,The following statement contains a magic number: ICheckpoint writerCheckpoint = new InMemoryCheckpoint(1000);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager,TestFixtureWithProjectionCoreAndManagementServices,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\TestFixtureWithProjectionCoreAndManagementServices.cs,SetUpCoreServices,The following statement contains a magic number: var readerService = new EventReaderCoreService(  				output'  				_ioDispatcher'  				10'  				writerCheckpoint'  				runHeadingReader: true' faultOutOfOrderProjections: true);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager,when_requesting_partition_state_from_a_stopped_foreach_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\when_requesting_partition_state_from_a_stopped_foreach_projection.cs,the_projection_state_can_be_retrieved,The following statement contains a magic number: Assert.AreEqual(2' _consumer.HandledMessages.OfType<ProjectionManagementMessage.ProjectionState>().Count());
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager,when_writing_the_projections_initialized_event_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\when_the_projections_initialized_write_fails.cs,retries_writing_with_the_same_event_id,The following statement contains a magic number: retryCount < 5
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.managed_projection,projection_config_test_base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\managed_projection\when_updating_projection_config.cs,CreateConfig,The following statement contains a magic number: return new ProjectionManagementMessage.Command.UpdateConfig(  				new NoopEnvelope()' "name"' true' false' 100' 200' 300' 400' 500' 600'  				ProjectionManagementMessage.RunAs.Anonymous);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.managed_projection,projection_config_test_base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\managed_projection\when_updating_projection_config.cs,CreateConfig,The following statement contains a magic number: return new ProjectionManagementMessage.Command.UpdateConfig(  				new NoopEnvelope()' "name"' true' false' 100' 200' 300' 400' 500' 600'  				ProjectionManagementMessage.RunAs.Anonymous);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.managed_projection,projection_config_test_base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\managed_projection\when_updating_projection_config.cs,CreateConfig,The following statement contains a magic number: return new ProjectionManagementMessage.Command.UpdateConfig(  				new NoopEnvelope()' "name"' true' false' 100' 200' 300' 400' 500' 600'  				ProjectionManagementMessage.RunAs.Anonymous);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.managed_projection,projection_config_test_base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\managed_projection\when_updating_projection_config.cs,CreateConfig,The following statement contains a magic number: return new ProjectionManagementMessage.Command.UpdateConfig(  				new NoopEnvelope()' "name"' true' false' 100' 200' 300' 400' 500' 600'  				ProjectionManagementMessage.RunAs.Anonymous);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.managed_projection,projection_config_test_base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\managed_projection\when_updating_projection_config.cs,CreateConfig,The following statement contains a magic number: return new ProjectionManagementMessage.Command.UpdateConfig(  				new NoopEnvelope()' "name"' true' false' 100' 200' 300' 400' 500' 600'  				ProjectionManagementMessage.RunAs.Anonymous);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.managed_projection,projection_config_test_base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\managed_projection\when_updating_projection_config.cs,CreateConfig,The following statement contains a magic number: return new ProjectionManagementMessage.Command.UpdateConfig(  				new NoopEnvelope()' "name"' true' false' 100' 200' 300' 400' 500' 600'  				ProjectionManagementMessage.RunAs.Anonymous);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_prepared_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_prepared_response.cs,publishes_prepared_message,The following statement contains a magic number: Assert.AreEqual(100000' projectionSourceDefinition.LimitingCommitPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_result_report_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_result_report_response.cs,When,The following statement contains a magic number: _position = CheckpointTag.FromStreamPosition(1' "stream"' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_state_report_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_state_report_response.cs,When,The following statement contains a magic number: _position = CheckpointTag.FromStreamPosition(1' "stream"' 2);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_statistics_report_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_statistics_report_response.cs,When,The following statement contains a magic number: _bufferedEvents = 100;
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_statistics_report_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_statistics_report_response.cs,When,The following statement contains a magic number: _coreProcessingTime = 10;
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_statistics_report_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_statistics_report_response.cs,When,The following statement contains a magic number: _epoch = 10;
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_statistics_report_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_statistics_report_response.cs,When,The following statement contains a magic number: _eventsProcessedAfterRestart = 12345;
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_statistics_report_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_statistics_report_response.cs,When,The following statement contains a magic number: _partitionsCached = 123;
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_statistics_report_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_statistics_report_response.cs,When,The following statement contains a magic number: _position = CheckpointTag.FromPosition(0' 1000' 900).ToString();
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_statistics_report_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_statistics_report_response.cs,When,The following statement contains a magic number: _position = CheckpointTag.FromPosition(0' 1000' 900).ToString();
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_statistics_report_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_statistics_report_response.cs,When,The following statement contains a magic number: _progress = 100;
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_statistics_report_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_statistics_report_response.cs,When,The following statement contains a magic number: _projectionIdNum = 1234;
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_statistics_report_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_statistics_report_response.cs,When,The following statement contains a magic number: _readsInProgress = 2;
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_statistics_report_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_statistics_report_response.cs,When,The following statement contains a magic number: _writePendingEventsAfterCheckpoint = 3;
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_statistics_report_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_statistics_report_response.cs,When,The following statement contains a magic number: _writePendingEventsBeforeCheckpoint = 4;
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_receiving_statistics_report_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_receiving_statistics_report_response.cs,When,The following statement contains a magic number: _writesInProgress = 5;
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.projection_manager_response_reader,when_timeout_received_after_read_succeeds,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\projection_manager_response_reader\when_timeout_received_after_read_succeeds.cs,When,The following statement contains a magic number: readStreamMessage.Envelope.ReplyWith(new ClientMessage.ReadStreamEventsForwardCompleted(  				_readStreamEventsCorrelationId' _projectionsMasterStream' readStreamMessage.FromEventNumber'  				readStreamMessage.MaxCount'  				ReadStreamResult.Success' new ResolvedEvent[0]' null' false' ""' readStreamMessage.FromEventNumber'  				readStreamMessage.FromEventNumber'  				true' 1000));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: _timeProvider.AddTime(TimeSpan.FromMinutes(6));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return (  					ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()' "type"'  						false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return (  					ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()' "type"'  						false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return (  					ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()' "type"'  						false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return (  					ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()' "type"'  						false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return (  					ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()' "type"'  						false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return (  					ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()' "type"'  						false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"event"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"event"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"event"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"event"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"event"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"event"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream1"' 1' "stream1"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream1"' 1' "stream1"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream1"' 1' "stream1"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream1"' 1' "stream1"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream1"' 1' "stream1"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream1"' 1' "stream1"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream2"' 1' "stream2"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream2"' 1' "stream2"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream2"' 1' "stream2"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream2"' 1' "stream2"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream2"' 1' "stream2"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream2"' 1' "stream2"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(300' 250)' new TFPos(300' 250)' "stream3"' 1' "stream3"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(300' 250)' new TFPos(300' 250)' "stream3"' 1' "stream3"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(300' 250)' new TFPos(300' 250)' "stream3"' 1' "stream3"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(300' 250)' new TFPos(300' 250)' "stream3"' 1' "stream3"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(300' 250)' new TFPos(300' 250)' "stream3"' 1' "stream3"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(300' 250)' new TFPos(300' 250)' "stream3"' 1' "stream3"' 1' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(400' 350)' new TFPos(400' 350)' "stream1"' 2' "stream1"' 2' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(400' 350)' new TFPos(400' 350)' "stream1"' 2' "stream1"' 2' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(400' 350)' new TFPos(400' 350)' "stream1"' 2' "stream1"' 2' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(400' 350)' new TFPos(400' 350)' "stream1"' 2' "stream1"' 2' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(400' 350)' new TFPos(400' 350)' "stream1"' 2' "stream1"' 2' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(400' 350)' new TFPos(400' 350)' "stream1"' 2' "stream1"' 2' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(400' 350)' new TFPos(400' 350)' "stream1"' 2' "stream1"' 2' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(400' 350)' new TFPos(400' 350)' "stream1"' 2' "stream1"' 2' false'  						Guid.NewGuid()'  						"type"' false' Helper.UTF8NoBom.GetBytes("1")' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\an_expired_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,when_failing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"fail"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,when_failing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"fail"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,when_failing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"fail"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,when_failing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"fail"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,when_failing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"fail"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,when_failing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_new_posted_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false' Guid.NewGuid()'  						"fail"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.query,when_receiving_eof,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_running_foreach_stream_projection.cs,writes_result_stream,The following statement contains a magic number: Assert.AreEqual(3 + 1 /* $Eof */' resultsStream.Count);
Magic Number,a_completed_projection,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_completed_projection.cs,When,The following statement contains a magic number: yield return (  					ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()' "type"'  						false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_completed_projection,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_completed_projection.cs,When,The following statement contains a magic number: yield return (  					ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()' "type"'  						false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_completed_projection,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_completed_projection.cs,When,The following statement contains a magic number: yield return (  					ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()' "type"'  						false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_completed_projection,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_completed_projection.cs,When,The following statement contains a magic number: yield return (  					ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()' "type"'  						false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_completed_projection,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_completed_projection.cs,When,The following statement contains a magic number: yield return (  					ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()' "type"'  						false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_completed_projection,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_completed_projection.cs,When,The following statement contains a magic number: yield return (  					ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()' "type"'  						false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_running_projection,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_running_projection,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_running_projection,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_running_projection,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_running_projection,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_running_projection,Base,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(100' 50)' new TFPos(100' 50)' "stream"' 1' "stream"' 1' false'  						Guid.NewGuid()'  						"type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_running_projection,when_handling_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream"' 2' "stream"' 1' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_running_projection,when_handling_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream"' 2' "stream"' 1' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_running_projection,when_handling_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream"' 2' "stream"' 1' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_running_projection,when_handling_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream"' 2' "stream"' 1' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_running_projection,when_handling_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream"' 2' "stream"' 1' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_running_projection,when_handling_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream"' 2' "stream"' 1' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,a_running_projection,when_handling_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\query\a_running_projection.cs,When,The following statement contains a magic number: yield return  					(ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  						_reader' new TFPos(200' 150)' new TFPos(200' 150)' "stream"' 2' "stream"' 1' false'  						Guid.NewGuid()' "type"' false' new byte[0]' new byte[0]' 100' 33.3f));
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.slave_projection,specification_with_slave_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\slave_projection\specification_with_slave_projection.cs,When,The following statement contains a magic number: yield return  				new CoreProjectionManagementMessage.CreateAndPrepareSlave(  					_coreProjectionCorrelationId'  					Guid.NewGuid()'  					"projection"'  					new ProjectionVersion(1' 0' 0)'  					new ProjectionConfig(  						SystemAccount.Principal'  						0'  						0'  						1000'  						1000'  						false'  						false'  						false'  						true'  						true'  						true'  						10000'  						1)'  					_masterWorkerId'  					_coreProjectionCorrelationId'  					//(handlerType' query) => new FakeProjectionStateHandler(  					//    configureBuilder: builder =>  					//    {  					//        builder.FromCatalogStream("catalog");  					//        builder.AllEvents();  					//        builder.SetByStream();  					//        builder.SetLimitingCommitPosition(10000);  					//    })'  					typeof(FakeProjectionStateHandler).GetNativeHandlerName()'  					"");
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.slave_projection,specification_with_slave_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\slave_projection\specification_with_slave_projection.cs,When,The following statement contains a magic number: yield return  				new CoreProjectionManagementMessage.CreateAndPrepareSlave(  					_coreProjectionCorrelationId'  					Guid.NewGuid()'  					"projection"'  					new ProjectionVersion(1' 0' 0)'  					new ProjectionConfig(  						SystemAccount.Principal'  						0'  						0'  						1000'  						1000'  						false'  						false'  						false'  						true'  						true'  						true'  						10000'  						1)'  					_masterWorkerId'  					_coreProjectionCorrelationId'  					//(handlerType' query) => new FakeProjectionStateHandler(  					//    configureBuilder: builder =>  					//    {  					//        builder.FromCatalogStream("catalog");  					//        builder.AllEvents();  					//        builder.SetByStream();  					//        builder.SetLimitingCommitPosition(10000);  					//    })'  					typeof(FakeProjectionStateHandler).GetNativeHandlerName()'  					"");
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.slave_projection,specification_with_slave_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\slave_projection\specification_with_slave_projection.cs,When,The following statement contains a magic number: yield return  				new CoreProjectionManagementMessage.CreateAndPrepareSlave(  					_coreProjectionCorrelationId'  					Guid.NewGuid()'  					"projection"'  					new ProjectionVersion(1' 0' 0)'  					new ProjectionConfig(  						SystemAccount.Principal'  						0'  						0'  						1000'  						1000'  						false'  						false'  						false'  						true'  						true'  						true'  						10000'  						1)'  					_masterWorkerId'  					_coreProjectionCorrelationId'  					//(handlerType' query) => new FakeProjectionStateHandler(  					//    configureBuilder: builder =>  					//    {  					//        builder.FromCatalogStream("catalog");  					//        builder.AllEvents();  					//        builder.SetByStream();  					//        builder.SetLimitingCommitPosition(10000);  					//    })'  					typeof(FakeProjectionStateHandler).GetNativeHandlerName()'  					"");
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.slave_projection,when_processing_a_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\slave_projection\specification_with_slave_projection.cs,When,The following statement contains a magic number: yield return  				new ReaderSubscriptionManagement.SpoolStreamReadingCore(_subscriptionId'  					"test-stream"'  					0'  					10000);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.slave_projection,when_processing_a_non_existing_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\slave_projection\specification_with_slave_projection.cs,When,The following statement contains a magic number: yield return  				new ReaderSubscriptionManagement.SpoolStreamReadingCore(_subscriptionId'  					"test-stream"'  					0'  					10000);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.slave_projection,when_processing_multiple_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\slave_projection\specification_with_slave_projection.cs,When,The following statement contains a magic number: yield return  				new ReaderSubscriptionManagement.SpoolStreamReadingCore(_subscriptionId'  					"test-stream"'  					0'  					10000);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.slave_projection,when_processing_multiple_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\slave_projection\specification_with_slave_projection.cs,When,The following statement contains a magic number: yield return  				new ReaderSubscriptionManagement.SpoolStreamReadingCore(_subscriptionId'  					"test-stream2"'  					1'  					10000);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.slave_projection,when_processing_multiple_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\slave_projection\specification_with_slave_projection.cs,When,The following statement contains a magic number: yield return  				new ReaderSubscriptionManagement.SpoolStreamReadingCore(_subscriptionId'  					"test-stream3"'  					2'  					10000);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.slave_projection,when_processing_multiple_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\slave_projection\specification_with_slave_projection.cs,When,The following statement contains a magic number: yield return  				new ReaderSubscriptionManagement.SpoolStreamReadingCore(_subscriptionId'  					"test-stream3"'  					2'  					10000);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.slave_projection,when_processing_multiple_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\slave_projection\specification_with_slave_projection.cs,publishes_partition_result_message,The following statement contains a magic number: Assert.AreEqual(3' results.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.projections_manager.slave_projection,when_processing_multiple_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_manager\slave_projection\specification_with_slave_projection.cs,publishes_partition_result_message,The following statement contains a magic number: Assert.IsNull(results[2].Result);
Magic Number,updating_projection_sources,when_adding_an_event_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 5' 6}}' _stateData);
Magic Number,updating_projection_sources,when_adding_an_event_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 5' 6}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_an_event_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 5' 6' 10}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_an_event_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 5' 6' 10}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_an_event_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 5' 6' 10}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_an_event_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 5' 6' 10}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_an_event_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 5' 6' 10}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_any_with_an_event_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 4' 5' 6}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_any_with_an_event_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 4' 5' 6}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_any_with_an_event_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 4' 5' 6}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_any_with_an_event_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 4' 5' 6}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_any_with_an_event_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 4' 5' 6}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_specific_event_types_with_any,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 5' 6' 7' 8' 9' 10}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_specific_event_types_with_any,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 5' 6' 7' 8' 9' 10}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_specific_event_types_with_any,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 5' 6' 7' 8' 9' 10}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_specific_event_types_with_any,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 5' 6' 7' 8' 9' 10}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_specific_event_types_with_any,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 5' 6' 7' 8' 9' 10}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_specific_event_types_with_any,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 5' 6' 7' 8' 9' 10}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_specific_event_types_with_any,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 5' 6' 7' 8' 9' 10}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_specific_event_types_with_any,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 5' 6' 7' 8' 9' 10}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_stream_with_multiple_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 6}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_stream_with_multiple_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 6}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_multiple_streams_with_one_of_them,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 6}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_multiple_streams_with_one_of_them,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 6}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_multiple_streams_with_one_of_them,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 6}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_a_stream_in_multiple_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 6' 7' 8}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_a_stream_in_multiple_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 6' 7' 8}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_a_stream_in_multiple_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 6' 7' 8}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_a_stream_in_multiple_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 6' 7' 8}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_a_stream_in_multiple_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,correct_event_sequence_has_been_processed,The following statement contains a magic number: HelperExtensions.AssertJson(new {d = new[] {1' 2' 3' 6' 7' 8}}' _stateData);
Magic Number,updating_projection_sources,when_replacing_a_stream_in_multiple_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\updating_projections\updating_projection_sources.cs,projection_position_is_correct,The following statement contains a magic number: Assert.AreEqual(  					CheckpointTag.FromStreamPositions(0' new Dictionary<string' long> {{"stream2"' 1}' {"stream3"' 3}})'  					_state.Position);
Magic Number,startup,when_starting_with_empty_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\when_starting_up.cs,system_projections_are_registered,The following statement contains a magic number: Assert.AreEqual(5' statistics.Projections.Length);
Magic Number,startup,when_starting_as_slave,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\when_starting_up.cs,PreWhen,The following statement contains a magic number: yield return (new SystemMessage.BecomeSlave(Guid.NewGuid()'  					new EventStore.Core.Data.VNodeInfo(Guid.NewGuid()' 1'  						new IPEndPoint(IPAddress.Loopback' 1111)'  						new IPEndPoint(IPAddress.Loopback' 1112)'  						new IPEndPoint(IPAddress.Loopback' 1113)'  						new IPEndPoint(IPAddress.Loopback' 1114)'  						new IPEndPoint(IPAddress.Loopback' 1115)'  						new IPEndPoint(IPAddress.Loopback' 1116)  					)));
Magic Number,startup,when_starting_as_slave,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\when_starting_up.cs,PreWhen,The following statement contains a magic number: yield return (new SystemMessage.BecomeSlave(Guid.NewGuid()'  					new EventStore.Core.Data.VNodeInfo(Guid.NewGuid()' 1'  						new IPEndPoint(IPAddress.Loopback' 1111)'  						new IPEndPoint(IPAddress.Loopback' 1112)'  						new IPEndPoint(IPAddress.Loopback' 1113)'  						new IPEndPoint(IPAddress.Loopback' 1114)'  						new IPEndPoint(IPAddress.Loopback' 1115)'  						new IPEndPoint(IPAddress.Loopback' 1116)  					)));
Magic Number,startup,when_starting_as_slave,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\when_starting_up.cs,PreWhen,The following statement contains a magic number: yield return (new SystemMessage.BecomeSlave(Guid.NewGuid()'  					new EventStore.Core.Data.VNodeInfo(Guid.NewGuid()' 1'  						new IPEndPoint(IPAddress.Loopback' 1111)'  						new IPEndPoint(IPAddress.Loopback' 1112)'  						new IPEndPoint(IPAddress.Loopback' 1113)'  						new IPEndPoint(IPAddress.Loopback' 1114)'  						new IPEndPoint(IPAddress.Loopback' 1115)'  						new IPEndPoint(IPAddress.Loopback' 1116)  					)));
Magic Number,startup,when_starting_as_slave,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\when_starting_up.cs,PreWhen,The following statement contains a magic number: yield return (new SystemMessage.BecomeSlave(Guid.NewGuid()'  					new EventStore.Core.Data.VNodeInfo(Guid.NewGuid()' 1'  						new IPEndPoint(IPAddress.Loopback' 1111)'  						new IPEndPoint(IPAddress.Loopback' 1112)'  						new IPEndPoint(IPAddress.Loopback' 1113)'  						new IPEndPoint(IPAddress.Loopback' 1114)'  						new IPEndPoint(IPAddress.Loopback' 1115)'  						new IPEndPoint(IPAddress.Loopback' 1116)  					)));
Magic Number,startup,when_starting_as_slave,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\when_starting_up.cs,PreWhen,The following statement contains a magic number: yield return (new SystemMessage.BecomeSlave(Guid.NewGuid()'  					new EventStore.Core.Data.VNodeInfo(Guid.NewGuid()' 1'  						new IPEndPoint(IPAddress.Loopback' 1111)'  						new IPEndPoint(IPAddress.Loopback' 1112)'  						new IPEndPoint(IPAddress.Loopback' 1113)'  						new IPEndPoint(IPAddress.Loopback' 1114)'  						new IPEndPoint(IPAddress.Loopback' 1115)'  						new IPEndPoint(IPAddress.Loopback' 1116)  					)));
Magic Number,startup,when_starting_as_slave,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projections_system\when_starting_up.cs,PreWhen,The following statement contains a magic number: yield return (new SystemMessage.BecomeSlave(Guid.NewGuid()'  					new EventStore.Core.Data.VNodeInfo(Guid.NewGuid()' 1'  						new IPEndPoint(IPAddress.Loopback' 1111)'  						new IPEndPoint(IPAddress.Loopback' 1112)'  						new IPEndPoint(IPAddress.Loopback' 1113)'  						new IPEndPoint(IPAddress.Loopback' 1114)'  						new IPEndPoint(IPAddress.Loopback' 1115)'  						new IPEndPoint(IPAddress.Loopback' 1116)  					)));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_command_reader,when_receiving_create_and_prepare_command,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_command_reader\when_receiving_create_and_prepare_command.cs,publishes_projection_create_prepapre_message,The following statement contains a magic number: Assert.AreEqual(1000' createPrepare.Config.CheckpointHandledThreshold);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_command_reader,when_receiving_create_and_prepare_command,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_command_reader\when_receiving_create_and_prepare_command.cs,publishes_projection_create_prepapre_message,The following statement contains a magic number: Assert.AreEqual(10000' createPrepare.Config.CheckpointUnhandledBytesThreshold);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_command_reader,when_receiving_create_and_prepare_command,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_command_reader\when_receiving_create_and_prepare_command.cs,publishes_projection_create_prepapre_message,The following statement contains a magic number: Assert.AreEqual(5000' createPrepare.Config.PendingEventsThreshold);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_command_reader,when_receiving_create_and_prepare_command,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_command_reader\when_receiving_create_and_prepare_command.cs,publishes_projection_create_prepapre_message,The following statement contains a magic number: Assert.AreEqual(100' createPrepare.Config.MaxWriteBatchLength);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_command_reader,when_receiving_create_and_prepare_slave_command,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_command_reader\when_receiving_create_and_prepare_slave_command.cs,publishes_projection_create_prepapre_slave_message,The following statement contains a magic number: Assert.AreEqual(1000' createPrepareSlave.Config.CheckpointHandledThreshold);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_command_reader,when_receiving_create_and_prepare_slave_command,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_command_reader\when_receiving_create_and_prepare_slave_command.cs,publishes_projection_create_prepapre_slave_message,The following statement contains a magic number: Assert.AreEqual(10000' createPrepareSlave.Config.CheckpointUnhandledBytesThreshold);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_command_reader,when_receiving_create_and_prepare_slave_command,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_command_reader\when_receiving_create_and_prepare_slave_command.cs,publishes_projection_create_prepapre_slave_message,The following statement contains a magic number: Assert.AreEqual(5000' createPrepareSlave.Config.PendingEventsThreshold);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_command_reader,when_receiving_create_and_prepare_slave_command,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_command_reader\when_receiving_create_and_prepare_slave_command.cs,publishes_projection_create_prepapre_slave_message,The following statement contains a magic number: Assert.AreEqual(100' createPrepareSlave.Config.MaxWriteBatchLength);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_command_reader,when_receiving_create_prepared_command,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_command_reader\when_receiving_create_prepared_command.cs,publishes_projection_create_prepapred_message,The following statement contains a magic number: Assert.AreEqual(1000' createPrepared.Config.CheckpointHandledThreshold);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_command_reader,when_receiving_create_prepared_command,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_command_reader\when_receiving_create_prepared_command.cs,publishes_projection_create_prepapred_message,The following statement contains a magic number: Assert.AreEqual(10000' createPrepared.Config.CheckpointUnhandledBytesThreshold);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_command_reader,when_receiving_create_prepared_command,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_command_reader\when_receiving_create_prepared_command.cs,publishes_projection_create_prepapred_message,The following statement contains a magic number: Assert.AreEqual(5000' createPrepared.Config.PendingEventsThreshold);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_command_reader,when_receiving_create_prepared_command,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_command_reader\when_receiving_create_prepared_command.cs,publishes_projection_create_prepapred_message,The following statement contains a magic number: Assert.AreEqual(100' createPrepared.Config.MaxWriteBatchLength);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_command_reader,when_receiving_create_prepared_command,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_command_reader\when_receiving_create_prepared_command.cs,publishes_projection_create_prepapred_message,The following statement contains a magic number: Assert.AreEqual(100000' projectionSourceDefinition.LimitingCommitPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_command_reader,when_receiving_spool_stream_reading_command,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_command_reader\when_receiving_spool_stream_reading_command.cs,publishesspool_stream_reading_message,The following statement contains a magic number: Assert.AreEqual(100' spoolStreamReading.CatalogSequenceNumber);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_command_reader,when_receiving_spool_stream_reading_command,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_command_reader\when_receiving_spool_stream_reading_command.cs,publishesspool_stream_reading_message,The following statement contains a magic number: Assert.AreEqual(123456789123456789' spoolStreamReading.LimitingCommitPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_command_reader,when_receiving_two_commands,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_command_reader\when_receiving_two_commands.cs,publishes_projection_start_message,The following statement contains a magic number: Assert.AreEqual(2' startProjectionCommands.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_response_writer,when_handling_result_report_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_response_writer\when_handling_result_report_message.cs,Given,The following statement contains a magic number: _position = CheckpointTag.FromStreamPosition(1' "stream"' 10);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_response_writer,when_handling_state_report_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_response_writer\when_handling_state_report_message.cs,Given,The following statement contains a magic number: _position = CheckpointTag.FromStreamPosition(1' "stream"' 10);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_response_writer,when_handling_statistics_report_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_response_writer\when_handling_statistics_report_message.cs,Given,The following statement contains a magic number: _statistics = new ProjectionStatistics {  				BufferedEvents = 100'  				CheckpointStatus = "checkpoint-status"'  				CoreProcessingTime = 10'  				ResultStreamName = "result-stream"'  				EffectiveName = "effective-name"'  				Enabled = true'  				Epoch = 10'  				EventsProcessedAfterRestart = 12345'  				LastCheckpoint = "last-chgeckpoint"'  				MasterStatus = ManagedProjectionState.Completed'  				Mode = ProjectionMode.OneTime'  				PartitionsCached = 123'  				Name = "name"'  				Position = CheckpointTag.FromPosition(0' 1000' 900).ToString()'  				Progress = 100'  				ProjectionId = 1234'  				ReadsInProgress = 2'  				StateReason = "reason"'  				Status = "status"'  				Version = 1'  				WritePendingEventsAfterCheckpoint = 3'  				WritePendingEventsBeforeCheckpoint = 4'  				WritesInProgress = 5'  			};
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_response_writer,when_handling_statistics_report_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_response_writer\when_handling_statistics_report_message.cs,Given,The following statement contains a magic number: _statistics = new ProjectionStatistics {  				BufferedEvents = 100'  				CheckpointStatus = "checkpoint-status"'  				CoreProcessingTime = 10'  				ResultStreamName = "result-stream"'  				EffectiveName = "effective-name"'  				Enabled = true'  				Epoch = 10'  				EventsProcessedAfterRestart = 12345'  				LastCheckpoint = "last-chgeckpoint"'  				MasterStatus = ManagedProjectionState.Completed'  				Mode = ProjectionMode.OneTime'  				PartitionsCached = 123'  				Name = "name"'  				Position = CheckpointTag.FromPosition(0' 1000' 900).ToString()'  				Progress = 100'  				ProjectionId = 1234'  				ReadsInProgress = 2'  				StateReason = "reason"'  				Status = "status"'  				Version = 1'  				WritePendingEventsAfterCheckpoint = 3'  				WritePendingEventsBeforeCheckpoint = 4'  				WritesInProgress = 5'  			};
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_response_writer,when_handling_statistics_report_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_response_writer\when_handling_statistics_report_message.cs,Given,The following statement contains a magic number: _statistics = new ProjectionStatistics {  				BufferedEvents = 100'  				CheckpointStatus = "checkpoint-status"'  				CoreProcessingTime = 10'  				ResultStreamName = "result-stream"'  				EffectiveName = "effective-name"'  				Enabled = true'  				Epoch = 10'  				EventsProcessedAfterRestart = 12345'  				LastCheckpoint = "last-chgeckpoint"'  				MasterStatus = ManagedProjectionState.Completed'  				Mode = ProjectionMode.OneTime'  				PartitionsCached = 123'  				Name = "name"'  				Position = CheckpointTag.FromPosition(0' 1000' 900).ToString()'  				Progress = 100'  				ProjectionId = 1234'  				ReadsInProgress = 2'  				StateReason = "reason"'  				Status = "status"'  				Version = 1'  				WritePendingEventsAfterCheckpoint = 3'  				WritePendingEventsBeforeCheckpoint = 4'  				WritesInProgress = 5'  			};
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_response_writer,when_handling_statistics_report_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_response_writer\when_handling_statistics_report_message.cs,Given,The following statement contains a magic number: _statistics = new ProjectionStatistics {  				BufferedEvents = 100'  				CheckpointStatus = "checkpoint-status"'  				CoreProcessingTime = 10'  				ResultStreamName = "result-stream"'  				EffectiveName = "effective-name"'  				Enabled = true'  				Epoch = 10'  				EventsProcessedAfterRestart = 12345'  				LastCheckpoint = "last-chgeckpoint"'  				MasterStatus = ManagedProjectionState.Completed'  				Mode = ProjectionMode.OneTime'  				PartitionsCached = 123'  				Name = "name"'  				Position = CheckpointTag.FromPosition(0' 1000' 900).ToString()'  				Progress = 100'  				ProjectionId = 1234'  				ReadsInProgress = 2'  				StateReason = "reason"'  				Status = "status"'  				Version = 1'  				WritePendingEventsAfterCheckpoint = 3'  				WritePendingEventsBeforeCheckpoint = 4'  				WritesInProgress = 5'  			};
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_response_writer,when_handling_statistics_report_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_response_writer\when_handling_statistics_report_message.cs,Given,The following statement contains a magic number: _statistics = new ProjectionStatistics {  				BufferedEvents = 100'  				CheckpointStatus = "checkpoint-status"'  				CoreProcessingTime = 10'  				ResultStreamName = "result-stream"'  				EffectiveName = "effective-name"'  				Enabled = true'  				Epoch = 10'  				EventsProcessedAfterRestart = 12345'  				LastCheckpoint = "last-chgeckpoint"'  				MasterStatus = ManagedProjectionState.Completed'  				Mode = ProjectionMode.OneTime'  				PartitionsCached = 123'  				Name = "name"'  				Position = CheckpointTag.FromPosition(0' 1000' 900).ToString()'  				Progress = 100'  				ProjectionId = 1234'  				ReadsInProgress = 2'  				StateReason = "reason"'  				Status = "status"'  				Version = 1'  				WritePendingEventsAfterCheckpoint = 3'  				WritePendingEventsBeforeCheckpoint = 4'  				WritesInProgress = 5'  			};
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_response_writer,when_handling_statistics_report_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_response_writer\when_handling_statistics_report_message.cs,Given,The following statement contains a magic number: _statistics = new ProjectionStatistics {  				BufferedEvents = 100'  				CheckpointStatus = "checkpoint-status"'  				CoreProcessingTime = 10'  				ResultStreamName = "result-stream"'  				EffectiveName = "effective-name"'  				Enabled = true'  				Epoch = 10'  				EventsProcessedAfterRestart = 12345'  				LastCheckpoint = "last-chgeckpoint"'  				MasterStatus = ManagedProjectionState.Completed'  				Mode = ProjectionMode.OneTime'  				PartitionsCached = 123'  				Name = "name"'  				Position = CheckpointTag.FromPosition(0' 1000' 900).ToString()'  				Progress = 100'  				ProjectionId = 1234'  				ReadsInProgress = 2'  				StateReason = "reason"'  				Status = "status"'  				Version = 1'  				WritePendingEventsAfterCheckpoint = 3'  				WritePendingEventsBeforeCheckpoint = 4'  				WritesInProgress = 5'  			};
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_response_writer,when_handling_statistics_report_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_response_writer\when_handling_statistics_report_message.cs,Given,The following statement contains a magic number: _statistics = new ProjectionStatistics {  				BufferedEvents = 100'  				CheckpointStatus = "checkpoint-status"'  				CoreProcessingTime = 10'  				ResultStreamName = "result-stream"'  				EffectiveName = "effective-name"'  				Enabled = true'  				Epoch = 10'  				EventsProcessedAfterRestart = 12345'  				LastCheckpoint = "last-chgeckpoint"'  				MasterStatus = ManagedProjectionState.Completed'  				Mode = ProjectionMode.OneTime'  				PartitionsCached = 123'  				Name = "name"'  				Position = CheckpointTag.FromPosition(0' 1000' 900).ToString()'  				Progress = 100'  				ProjectionId = 1234'  				ReadsInProgress = 2'  				StateReason = "reason"'  				Status = "status"'  				Version = 1'  				WritePendingEventsAfterCheckpoint = 3'  				WritePendingEventsBeforeCheckpoint = 4'  				WritesInProgress = 5'  			};
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_response_writer,when_handling_statistics_report_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_response_writer\when_handling_statistics_report_message.cs,Given,The following statement contains a magic number: _statistics = new ProjectionStatistics {  				BufferedEvents = 100'  				CheckpointStatus = "checkpoint-status"'  				CoreProcessingTime = 10'  				ResultStreamName = "result-stream"'  				EffectiveName = "effective-name"'  				Enabled = true'  				Epoch = 10'  				EventsProcessedAfterRestart = 12345'  				LastCheckpoint = "last-chgeckpoint"'  				MasterStatus = ManagedProjectionState.Completed'  				Mode = ProjectionMode.OneTime'  				PartitionsCached = 123'  				Name = "name"'  				Position = CheckpointTag.FromPosition(0' 1000' 900).ToString()'  				Progress = 100'  				ProjectionId = 1234'  				ReadsInProgress = 2'  				StateReason = "reason"'  				Status = "status"'  				Version = 1'  				WritePendingEventsAfterCheckpoint = 3'  				WritePendingEventsBeforeCheckpoint = 4'  				WritesInProgress = 5'  			};
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_response_writer,when_handling_statistics_report_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_response_writer\when_handling_statistics_report_message.cs,Given,The following statement contains a magic number: _statistics = new ProjectionStatistics {  				BufferedEvents = 100'  				CheckpointStatus = "checkpoint-status"'  				CoreProcessingTime = 10'  				ResultStreamName = "result-stream"'  				EffectiveName = "effective-name"'  				Enabled = true'  				Epoch = 10'  				EventsProcessedAfterRestart = 12345'  				LastCheckpoint = "last-chgeckpoint"'  				MasterStatus = ManagedProjectionState.Completed'  				Mode = ProjectionMode.OneTime'  				PartitionsCached = 123'  				Name = "name"'  				Position = CheckpointTag.FromPosition(0' 1000' 900).ToString()'  				Progress = 100'  				ProjectionId = 1234'  				ReadsInProgress = 2'  				StateReason = "reason"'  				Status = "status"'  				Version = 1'  				WritePendingEventsAfterCheckpoint = 3'  				WritePendingEventsBeforeCheckpoint = 4'  				WritesInProgress = 5'  			};
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_response_writer,when_handling_statistics_report_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_response_writer\when_handling_statistics_report_message.cs,Given,The following statement contains a magic number: _statistics = new ProjectionStatistics {  				BufferedEvents = 100'  				CheckpointStatus = "checkpoint-status"'  				CoreProcessingTime = 10'  				ResultStreamName = "result-stream"'  				EffectiveName = "effective-name"'  				Enabled = true'  				Epoch = 10'  				EventsProcessedAfterRestart = 12345'  				LastCheckpoint = "last-chgeckpoint"'  				MasterStatus = ManagedProjectionState.Completed'  				Mode = ProjectionMode.OneTime'  				PartitionsCached = 123'  				Name = "name"'  				Position = CheckpointTag.FromPosition(0' 1000' 900).ToString()'  				Progress = 100'  				ProjectionId = 1234'  				ReadsInProgress = 2'  				StateReason = "reason"'  				Status = "status"'  				Version = 1'  				WritePendingEventsAfterCheckpoint = 3'  				WritePendingEventsBeforeCheckpoint = 4'  				WritesInProgress = 5'  			};
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_response_writer,when_handling_statistics_report_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_response_writer\when_handling_statistics_report_message.cs,Given,The following statement contains a magic number: _statistics = new ProjectionStatistics {  				BufferedEvents = 100'  				CheckpointStatus = "checkpoint-status"'  				CoreProcessingTime = 10'  				ResultStreamName = "result-stream"'  				EffectiveName = "effective-name"'  				Enabled = true'  				Epoch = 10'  				EventsProcessedAfterRestart = 12345'  				LastCheckpoint = "last-chgeckpoint"'  				MasterStatus = ManagedProjectionState.Completed'  				Mode = ProjectionMode.OneTime'  				PartitionsCached = 123'  				Name = "name"'  				Position = CheckpointTag.FromPosition(0' 1000' 900).ToString()'  				Progress = 100'  				ProjectionId = 1234'  				ReadsInProgress = 2'  				StateReason = "reason"'  				Status = "status"'  				Version = 1'  				WritePendingEventsAfterCheckpoint = 3'  				WritePendingEventsBeforeCheckpoint = 4'  				WritesInProgress = 5'  			};
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_response_writer,when_handling_statistics_report_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_response_writer\when_handling_statistics_report_message.cs,Given,The following statement contains a magic number: _statistics = new ProjectionStatistics {  				BufferedEvents = 100'  				CheckpointStatus = "checkpoint-status"'  				CoreProcessingTime = 10'  				ResultStreamName = "result-stream"'  				EffectiveName = "effective-name"'  				Enabled = true'  				Epoch = 10'  				EventsProcessedAfterRestart = 12345'  				LastCheckpoint = "last-chgeckpoint"'  				MasterStatus = ManagedProjectionState.Completed'  				Mode = ProjectionMode.OneTime'  				PartitionsCached = 123'  				Name = "name"'  				Position = CheckpointTag.FromPosition(0' 1000' 900).ToString()'  				Progress = 100'  				ProjectionId = 1234'  				ReadsInProgress = 2'  				StateReason = "reason"'  				Status = "status"'  				Version = 1'  				WritePendingEventsAfterCheckpoint = 3'  				WritePendingEventsBeforeCheckpoint = 4'  				WritesInProgress = 5'  			};
Magic Number,EventStore.Projections.Core.Tests.Services.projection_core_service_response_writer,when_handling_statistics_report_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_core_service_response_writer\when_handling_statistics_report_message.cs,Given,The following statement contains a magic number: _statistics = new ProjectionStatistics {  				BufferedEvents = 100'  				CheckpointStatus = "checkpoint-status"'  				CoreProcessingTime = 10'  				ResultStreamName = "result-stream"'  				EffectiveName = "effective-name"'  				Enabled = true'  				Epoch = 10'  				EventsProcessedAfterRestart = 12345'  				LastCheckpoint = "last-chgeckpoint"'  				MasterStatus = ManagedProjectionState.Completed'  				Mode = ProjectionMode.OneTime'  				PartitionsCached = 123'  				Name = "name"'  				Position = CheckpointTag.FromPosition(0' 1000' 900).ToString()'  				Progress = 100'  				ProjectionId = 1234'  				ReadsInProgress = 2'  				StateReason = "reason"'  				Status = "status"'  				Version = 1'  				WritePendingEventsAfterCheckpoint = 3'  				WritePendingEventsBeforeCheckpoint = 4'  				WritesInProgress = 5'  			};
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,TestFixtureWithProjectionSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\TestFixtureWithProjectionSubscription.cs,setup,The following statement contains a magic number: _checkpointUnhandledBytesThreshold = 1000;
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,TestFixtureWithProjectionSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\TestFixtureWithProjectionSubscription.cs,setup,The following statement contains a magic number: _checkpointProcessedEventsThreshold = 2000;
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,TestFixtureWithProjectionSubscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\TestFixtureWithProjectionSubscription.cs,setup,The following statement contains a magic number: _checkpointAfterMs = 10000;
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_creating_projection_subscription.cs,it_can_be_created,The following statement contains a magic number: new ReaderSubscription(  				"Test Subscription"'  				new FakePublisher()'  				Guid.NewGuid()'  				CheckpointTag.FromPosition(0' 0' -1)'  				CreateReaderStrategy()'  				new FakeTimeProvider()'  				1000'  				2000'  				10000);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_creating_projection_subscription.cs,it_can_be_created,The following statement contains a magic number: new ReaderSubscription(  				"Test Subscription"'  				new FakePublisher()'  				Guid.NewGuid()'  				CheckpointTag.FromPosition(0' 0' -1)'  				CreateReaderStrategy()'  				new FakeTimeProvider()'  				1000'  				2000'  				10000);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_creating_projection_subscription.cs,it_can_be_created,The following statement contains a magic number: new ReaderSubscription(  				"Test Subscription"'  				new FakePublisher()'  				Guid.NewGuid()'  				CheckpointTag.FromPosition(0' 0' -1)'  				CreateReaderStrategy()'  				new FakeTimeProvider()'  				1000'  				2000'  				10000);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_creating_projection_subscription.cs,null_publisher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ReaderSubscription(  					"Test Subscription"'  					null'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					CreateReaderStrategy()'  					new FakeTimeProvider()'  					1000'  					2000'  					10000);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_creating_projection_subscription.cs,null_publisher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ReaderSubscription(  					"Test Subscription"'  					null'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					CreateReaderStrategy()'  					new FakeTimeProvider()'  					1000'  					2000'  					10000);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_creating_projection_subscription.cs,null_publisher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ReaderSubscription(  					"Test Subscription"'  					null'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					CreateReaderStrategy()'  					new FakeTimeProvider()'  					1000'  					2000'  					10000);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_creating_projection_subscription.cs,null_checkpoint_strategy_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ReaderSubscription(  					"Test Subscription"'  					new FakePublisher()'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					null'  					new FakeTimeProvider()'  					1000'  					2000'  					10000);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_creating_projection_subscription.cs,null_checkpoint_strategy_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ReaderSubscription(  					"Test Subscription"'  					new FakePublisher()'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					null'  					new FakeTimeProvider()'  					1000'  					2000'  					10000);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_creating_projection_subscription.cs,null_checkpoint_strategy_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ReaderSubscription(  					"Test Subscription"'  					new FakePublisher()'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					null'  					new FakeTimeProvider()'  					1000'  					2000'  					10000);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_creating_projection_subscription.cs,null_time_provider_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ReaderSubscription(  					"Test Subscription"'  					new FakePublisher()'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					CreateReaderStrategy()'  					null'  					1000'  					2000'  					10000);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_creating_projection_subscription.cs,null_time_provider_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ReaderSubscription(  					"Test Subscription"'  					new FakePublisher()'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					CreateReaderStrategy()'  					null'  					1000'  					2000'  					10000);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_creating_projection_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_creating_projection_subscription.cs,null_time_provider_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => {  				new ReaderSubscription(  					"Test Subscription"'  					new FakePublisher()'  					Guid.NewGuid()'  					CheckpointTag.FromPosition(0' 0' -1)'  					CreateReaderStrategy()'  					null'  					1000'  					2000'  					10000);  			});
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_committed_event_passing_the_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_committed_event_passing_the_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_committed_event_passing_the_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_committed_event_passing_the_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_duplicate_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_duplicate_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_duplicate_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(100' 50)' "test-stream"' 0' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_duplicate_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(100' 50)' "test-stream"' 0' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_duplicate_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_duplicate_events.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses.cs,Given,The following statement contains a magic number: _checkpointAfterMs = 1000;
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 200)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 200)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 300)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 300)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses_and_not_passing_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses.cs,Given,The following statement contains a magic number: _checkpointAfterMs = 1000;
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses_and_not_passing_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses.cs,Given,The following statement contains a magic number: _checkpointUnhandledBytesThreshold = 50;
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses_and_not_passing_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 200)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses_and_not_passing_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 200)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses_and_not_passing_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 300)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses_and_not_passing_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 300)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses_and_not_passing_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(400' 400)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses_and_not_passing_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(400' 400)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses.cs,Given,The following statement contains a magic number: _checkpointAfterMs = 1000;
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 200)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 200)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 300)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 300)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses_and_not_passing_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses.cs,Given,The following statement contains a magic number: _checkpointAfterMs = 1000;
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses_and_not_passing_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses.cs,Given,The following statement contains a magic number: _checkpointUnhandledBytesThreshold = 50;
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses_and_not_passing_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 200)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses_and_not_passing_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 200)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses_and_not_passing_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 300)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses_and_not_passing_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 300)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses_and_not_passing_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(400' 400)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses_and_not_passing_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(400' 400)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_multiple_committed_event_passing_the_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_multiple_committed_event_passing_the_filter.cs,Given,The following statement contains a magic number: _checkpointProcessedEventsThreshold = 2;
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_multiple_committed_event_passing_the_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_multiple_committed_event_passing_the_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_multiple_committed_event_passing_the_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_multiple_committed_event_passing_the_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_multiple_committed_event_passing_the_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_multiple_committed_event_passing_the_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 250)' "test-stream"' 2' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_multiple_committed_event_passing_the_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_multiple_committed_event_passing_the_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 250)' "test-stream"' 2' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_multiple_committed_event_passing_the_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_multiple_committed_event_passing_the_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(300' 250)' "test-stream"' 2' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_multiple_committed_event_passing_the_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_multiple_committed_event_passing_the_filter.cs,events_passed_to_downstream_handler_have_correct_subscription_sequence_numbers,The following statement contains a magic number: Assert.AreEqual(2' _eventHandler.HandledMessages.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_multiple_committed_event_passing_the_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_multiple_committed_event_passing_the_filter.cs,suggests_a_checkpoint,The following statement contains a magic number: Assert.AreEqual(CheckpointTag.FromPosition(0' 300' 250)'  				_checkpointHandler.HandledMessages[0].CheckpointTag);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_handling_multiple_committed_event_passing_the_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_handling_multiple_committed_event_passing_the_filter.cs,suggests_a_checkpoint,The following statement contains a magic number: Assert.AreEqual(CheckpointTag.FromPosition(0' 300' 250)'  				_checkpointHandler.HandledMessages[0].CheckpointTag);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(200' 150)' "test-stream"' 1' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(2000' 1950)' "test-stream"' 2' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(2000' 1950)' "test-stream"' 2' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(2000' 1950)' "test-stream"' 2' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(2100' 2050)' "test-stream"' 2' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(2100' 2050)' "test-stream"' 2' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,When,The following statement contains a magic number: _subscription.Handle(  				ReaderSubscriptionMessage.CommittedEventDistributed.Sample(  					Guid.NewGuid()' new TFPos(2100' 2050)' "test-stream"' 2' false' Guid.NewGuid()'  					"bad-event-type"' false' new byte[0]' new byte[0]));
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,checkpoint_suggested_message_is_published_once_for_interval,The following statement contains a magic number: Assert.AreEqual(2000' _checkpointHandler.HandledMessages[0].CheckpointTag.CommitPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_subscription,when_receiving_multiple_events_not_passing_event_filter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_subscription\when_receiving_multiple_events_not_passing_event_filter.cs,checkpoint_suggested_message_is_published_once_for_interval,The following statement contains a magic number: Assert.AreEqual(1950' _checkpointHandler.HandledMessages[0].CheckpointTag.PreparePosition);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,equal,The following statement contains a magic number: var v1 = new ProjectionVersion(10' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,equal,The following statement contains a magic number: var v1 = new ProjectionVersion(10' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,equal,The following statement contains a magic number: var v1 = new ProjectionVersion(10' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,equal,The following statement contains a magic number: var v2 = new ProjectionVersion(10' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,equal,The following statement contains a magic number: var v2 = new ProjectionVersion(10' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,equal,The following statement contains a magic number: var v2 = new ProjectionVersion(10' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_id,The following statement contains a magic number: var v1 = new ProjectionVersion(10' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_id,The following statement contains a magic number: var v1 = new ProjectionVersion(10' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_id,The following statement contains a magic number: var v1 = new ProjectionVersion(10' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_id,The following statement contains a magic number: var v2 = new ProjectionVersion(11' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_id,The following statement contains a magic number: var v2 = new ProjectionVersion(11' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_id,The following statement contains a magic number: var v2 = new ProjectionVersion(11' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_epoch,The following statement contains a magic number: var v1 = new ProjectionVersion(10' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_epoch,The following statement contains a magic number: var v1 = new ProjectionVersion(10' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_epoch,The following statement contains a magic number: var v1 = new ProjectionVersion(10' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_epoch,The following statement contains a magic number: var v2 = new ProjectionVersion(11' 6' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_epoch,The following statement contains a magic number: var v2 = new ProjectionVersion(11' 6' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_epoch,The following statement contains a magic number: var v2 = new ProjectionVersion(11' 6' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_version,The following statement contains a magic number: var v1 = new ProjectionVersion(10' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_version,The following statement contains a magic number: var v1 = new ProjectionVersion(10' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_version,The following statement contains a magic number: var v1 = new ProjectionVersion(10' 5' 6);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_version,The following statement contains a magic number: var v2 = new ProjectionVersion(10' 5' 7);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_version,The following statement contains a magic number: var v2 = new ProjectionVersion(10' 5' 7);
Magic Number,EventStore.Projections.Core.Tests.Services.projection_version,when_comparing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\projection_version\when_comparing.cs,not_equal_version,The following statement contains a magic number: var v2 = new ProjectionVersion(10' 5' 7);
Magic Number,EventStore.Projections.Core.Tests.Services.result_emitter,when_result_updated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\result_emitter\result_emitter.cs,Given,The following statement contains a magic number: _resultAt = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.result_emitter,when_result_updated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\result_emitter\result_emitter.cs,Given,The following statement contains a magic number: _resultAt = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.result_emitter,when_result_updated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\result_emitter\result_emitter.cs,emits_result_event,The following statement contains a magic number: Assert.AreEqual(2' _emittedEvents.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.result_emitter,when_result_removed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\result_emitter\result_emitter.cs,Given,The following statement contains a magic number: _resultAt = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.result_emitter,when_result_removed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\result_emitter\result_emitter.cs,Given,The following statement contains a magic number: _resultAt = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.result_emitter,when_result_removed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\result_emitter\result_emitter.cs,emits_result_event,The following statement contains a magic number: Assert.AreEqual(2' _emittedEvents.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.result_emitter,when_result_updated_on_root_partition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\result_emitter\result_emitter.cs,Given,The following statement contains a magic number: _resultAt = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.result_emitter,when_result_updated_on_root_partition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\result_emitter\result_emitter.cs,Given,The following statement contains a magic number: _resultAt = CheckpointTag.FromPosition(0' 100' 50);
Magic Number,EventStore.Projections.Core.Tests.Services.slave_projection_response_writer,when_handling_partition_measured_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\slave_projection_response_writer\when_handling_partition_measured_message.cs,Given,The following statement contains a magic number: _size = 123;
Magic Number,EventStore.Projections.Core.Tests.Services.slave_projection_response_writer,when_handling_partition_progress_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\slave_projection_response_writer\when_handling_partition_progress_message.cs,Given,The following statement contains a magic number: _progress = 123.4f;
Magic Number,EventStore.Projections.Core.Tests.Services.slave_projection_response_writer,when_handling_spool_stream_reading_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\slave_projection_response_writer\when_handling_spool_stream_reading_message.cs,When,The following statement contains a magic number: _sut.Handle(  				new ReaderSubscriptionManagement.SpoolStreamReading(_workerId' _subscriptionId' "stream1"' 100'  					1000000));
Magic Number,EventStore.Projections.Core.Tests.Services.slave_projection_response_writer,when_handling_spool_stream_reading_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\slave_projection_response_writer\when_handling_spool_stream_reading_message.cs,When,The following statement contains a magic number: _sut.Handle(  				new ReaderSubscriptionManagement.SpoolStreamReading(_workerId' _subscriptionId' "stream1"' 100'  					1000000));
Magic Number,EventStore.Projections.Core.Tests.Services.slave_projection_response_writer,when_handling_spool_stream_reading_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\slave_projection_response_writer\when_handling_spool_stream_reading_message.cs,publishes_partition_measured_response,The following statement contains a magic number: Assert.AreEqual(100' body.CatalogSequenceNumber);
Magic Number,EventStore.Projections.Core.Tests.Services.slave_projection_response_writer,when_handling_spool_stream_reading_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\slave_projection_response_writer\when_handling_spool_stream_reading_message.cs,publishes_partition_measured_response,The following statement contains a magic number: Assert.AreEqual(1000000' body.LimitingCommitPosition);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,v8_internals,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\v8_internals.cs,long_execution_of_non_v8_code_does_not_crash,The following statement contains a magic number: Assert.Throws<Js1Exception>(() => {  				_cancelCallbackFactory = (timeout' action) => ThreadPool.QueueUserWorkItem(state => {  					Console.WriteLine("Calling a callback in " + timeout + "ms");  					Thread.Sleep(timeout);  					action();  				});  				Action<string' object[]> logger = (m' _) => Console.WriteLine(m);      				Func<string' Tuple<string' string>> getModuleSource = name => {  					var fullScriptFileName = Path.GetFullPath(Path.Combine(_jsPath' name + ".js"));  					var scriptSource = File.ReadAllText(fullScriptFileName' Helper.UTF8NoBom);  					return Tuple.Create(scriptSource' fullScriptFileName);  				};      				var preludeSource = getModuleSource("1Prelude");  				var prelude = new PreludeScript(preludeSource.Item1' preludeSource.Item2' getModuleSource'  					_cancelCallbackFactory' logger);  				try {  					//var cancelToken = 123;  					prelude.ScheduleTerminateExecution();  					Thread.Sleep(500);  					_commandHandlerRegisteredCallback = (name' handle) => { };  					_reverseCommandHandlerDelegate = (name' body) => { };  					Js1.CompileQuery(  						prelude.GetHandle()' "log(1);"' "fn"' _commandHandlerRegisteredCallback'  						_reverseCommandHandlerDelegate);    					prelude.CancelTerminateExecution();  				} catch {  					prelude.Dispose(); // clean up unmanaged resources if failed to create  					throw;  				}  			});
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_compiling_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_compiling_v8_projection.cs,can_compile_million_times,The following statement contains a magic number: i < 10000000
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_compiling_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_compiling_v8_projection.cs,can_compile_prelude_million_times,The following statement contains a magic number: i < 10000000
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_compiling_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_compiling_v8_projection.cs,can_compile_script_million_times,The following statement contains a magic number: i < 10000000
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_creating_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_creating_v8_projection.cs,long_execution_times_out,The following statement contains a magic number: h.ProcessEvent(  						"partition"' CheckpointTag.FromPosition(0' 100' 50)' "stream"' "event"' ""' Guid.NewGuid()' 1'  						""' "{}"'  						out newState' out emittedevents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_creating_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_creating_v8_projection.cs,long_execution_times_out,The following statement contains a magic number: h.ProcessEvent(  						"partition"' CheckpointTag.FromPosition(0' 100' 50)' "stream"' "event"' ""' Guid.NewGuid()' 1'  						""' "{}"'  						out newState' out emittedevents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_creating_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_creating_v8_projection.cs,long_post_processing_times_out,The following statement contains a magic number: h.ProcessEvent(  						"partition"' CheckpointTag.FromPosition(0' 100' 50)' "stream"' "event"' ""' Guid.NewGuid()' 1'  						""' "{}"'  						out newState' out emittedevents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_creating_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_creating_v8_projection.cs,long_post_processing_times_out,The following statement contains a magic number: h.ProcessEvent(  						"partition"' CheckpointTag.FromPosition(0' 100' 50)' "stream"' "event"' ""' Guid.NewGuid()' 1'  						""' "{}"'  						out newState' out emittedevents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_creating_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_creating_v8_projection.cs,long_execution_times_out_many,The following statement contains a magic number: h.ProcessEvent(  							"partition"' CheckpointTag.FromPosition(0' 100' 50)' "stream"' "event"' ""' Guid.NewGuid()'  							1'  							""' "{}"' out newState' out emittedevents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_creating_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_creating_v8_projection.cs,long_execution_times_out_many,The following statement contains a magic number: h.ProcessEvent(  							"partition"' CheckpointTag.FromPosition(0' 100' 50)' "stream"' "event"' ""' Guid.NewGuid()'  							1'  							""' "{}"' out newState' out emittedevents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_creating_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_creating_v8_projection.cs,long_execution_times_out_many,The following statement contains a magic number: i < 10
Magic Number,EventStore.Projections.Core.Tests.Services.v8,with_multiple_from_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_defining_a_v8_projection.cs,source_definition_is_correct,The following statement contains a magic number: Assert.AreEqual(3' _source.Streams.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,with_multiple_from_streams,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_defining_a_v8_projection.cs,source_definition_is_correct,The following statement contains a magic number: Assert.AreEqual("stream3"' _source.Streams[2]);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,with_multiple_from_streams_plain,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_defining_a_v8_projection.cs,source_definition_is_correct,The following statement contains a magic number: Assert.AreEqual(3' _source.Streams.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,with_multiple_from_streams_plain,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_defining_a_v8_projection.cs,source_definition_is_correct,The following statement contains a magic number: Assert.AreEqual("stream3"' _source.Streams[2]);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,with_multiple_from_categories,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_defining_a_v8_projection.cs,source_definition_is_correct,The following statement contains a magic number: Assert.AreEqual(3' _source.Streams.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,with_multiple_from_categories,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_defining_a_v8_projection.cs,source_definition_is_correct,The following statement contains a magic number: Assert.AreEqual("$ce-category3"' _source.Streams[2]);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,with_multiple_from_categories_plain,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_defining_a_v8_projection.cs,source_definition_is_correct,The following statement contains a magic number: Assert.AreEqual(3' _source.Streams.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,with_multiple_from_categories_plain,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_defining_a_v8_projection.cs,source_definition_is_correct,The following statement contains a magic number: Assert.AreEqual("$ce-category3"' _source.Streams[2]);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,with_reorder_events_option,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_defining_a_v8_projection.cs,source_definition_is_correct,The following statement contains a magic number: Assert.AreEqual(500' _source.ProcessingLagOption);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,with_multiple_option_statements,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_defining_a_v8_projection.cs,source_definition_is_correct,The following statement contains a magic number: Assert.AreEqual(500' _source.ProcessingLagOption);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,with_no_when_statement,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_defining_a_v8_projection.cs,Given,The following statement contains a magic number: _handledEvent = CreateSampleEvent("stream"' 0' "event_type"' "{\"data\":1}"' new TFPos(100' 50));
Magic Number,EventStore.Projections.Core.Tests.Services.v8,with_no_when_statement,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_defining_a_v8_projection.cs,Given,The following statement contains a magic number: _handledEvent = CreateSampleEvent("stream"' 0' "event_type"' "{\"data\":1}"' new TFPos(100' 50));
Magic Number,EventStore.Projections.Core.Tests.Services.v8,with_return_link_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_defining_a_v8_projection.cs,Given,The following statement contains a magic number: _handledEvent = CreateSampleEvent("stream"' 0' "event_type"' "{\"data\":1}"' new TFPos(100' 50));
Magic Number,EventStore.Projections.Core.Tests.Services.v8,with_return_link_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_defining_a_v8_projection.cs,Given,The following statement contains a magic number: _handledEvent = CreateSampleEvent("stream"' 0' "event_type"' "{\"data\":1}"' new TFPos(100' 50));
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_initializing_state,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_initializing_state.cs,process_event_should_return_initialized_state,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"'  				Guid.NewGuid()' 0' "metadata"' @"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_initializing_state,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_initializing_state.cs,process_event_should_return_initialized_state,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"'  				Guid.NewGuid()' 0' "metadata"' @"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_not_returning_state_from_a_js_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_not_returning_state_from_a_js_handler.cs,process_event_should_return_updated_state,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"'  				Guid.NewGuid()' 0' "metadata"' @"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_not_returning_state_from_a_js_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_not_returning_state_from_a_js_handler.cs,process_event_should_return_updated_state,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"'  				Guid.NewGuid()' 0' "metadata"' @"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_not_returning_state_from_a_js_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_not_returning_state_from_a_js_handler.cs,process_event_returns_true,The following statement contains a magic number: var result = _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"'  				Guid.NewGuid()' 0' "metadata"' @"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_not_returning_state_from_a_js_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_not_returning_state_from_a_js_handler.cs,process_event_returns_true,The following statement contains a magic number: var result = _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"'  				Guid.NewGuid()' 0' "metadata"' @"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_partitioning_by_custom_rule,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_partitioning_by_custom_rule.cs,get_state_partition_returns_correct_result,The following statement contains a magic number: var result = _stateHandler.GetStatePartition(  				CheckpointTag.FromPosition(0' 100' 50)' "category"'  				new ResolvedEvent(  					"stream1"' 0' "stream1"' 0' false' new TFPos(100' 50)' Guid.NewGuid()' "type1"' true'  					@"{""region"":""Europe""}"' "metadata"));
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_partitioning_by_custom_rule,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_partitioning_by_custom_rule.cs,get_state_partition_returns_correct_result,The following statement contains a magic number: var result = _stateHandler.GetStatePartition(  				CheckpointTag.FromPosition(0' 100' 50)' "category"'  				new ResolvedEvent(  					"stream1"' 0' "stream1"' 0' false' new TFPos(100' 50)' Guid.NewGuid()' "type1"' true'  					@"{""region"":""Europe""}"' "metadata"));
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_partitioning_by_custom_rule,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_partitioning_by_custom_rule.cs,get_state_partition_returns_correct_result,The following statement contains a magic number: var result = _stateHandler.GetStatePartition(  				CheckpointTag.FromPosition(0' 100' 50)' "category"'  				new ResolvedEvent(  					"stream1"' 0' "stream1"' 0' false' new TFPos(100' 50)' Guid.NewGuid()' "type1"' true'  					@"{""region"":""Europe""}"' "metadata"));
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_partitioning_by_custom_rule,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_partitioning_by_custom_rule.cs,get_state_partition_returns_correct_result,The following statement contains a magic number: var result = _stateHandler.GetStatePartition(  				CheckpointTag.FromPosition(0' 100' 50)' "category"'  				new ResolvedEvent(  					"stream1"' 0' "stream1"' 0' false' new TFPos(100' 50)' Guid.NewGuid()' "type1"' true'  					@"{""region"":""Europe""}"' "metadata"));
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_event_handler_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_faulting_v8_projection.cs,process_event_throws_js1_exception,The following statement contains a magic number: _stateHandler.ProcessEvent(  						""' CheckpointTag.FromPosition(0' 10' 5)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  						"metadata"'  						@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_event_handler_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_faulting_v8_projection.cs,process_event_throws_js1_exception,The following statement contains a magic number: _stateHandler.ProcessEvent(  						""' CheckpointTag.FromPosition(0' 10' 5)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  						"metadata"'  						@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_state_transform_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_faulting_v8_projection.cs,process_event_throws_js1_exception,The following statement contains a magic number: Assert.DoesNotThrow(() => _stateHandler.ProcessEvent(  						""' CheckpointTag.FromPosition(0' 10' 5)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  						"metadata"'  						@"{""a"":""b""}"' out state' out emittedEvents));
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_state_transform_throws,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_faulting_v8_projection.cs,process_event_throws_js1_exception,The following statement contains a magic number: Assert.DoesNotThrow(() => _stateHandler.ProcessEvent(  						""' CheckpointTag.FromPosition(0' 10' 5)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  						"metadata"'  						@"{""a"":""b""}"' out state' out emittedEvents));
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_projection_with_created_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_projection_with_created_handler.cs,invokes_created_handler,The following statement contains a magic number: var e = new ResolvedEvent(  				"stream"' 0' "stream"' 0' false' new TFPos(1000' 900)' Guid.NewGuid()' "event"' true' "{}"'  				"{\"m\":1}");
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_projection_with_created_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_projection_with_created_handler.cs,invokes_created_handler,The following statement contains a magic number: var e = new ResolvedEvent(  				"stream"' 0' "stream"' 0' false' new TFPos(1000' 900)' Guid.NewGuid()' "event"' true' "{}"'  				"{\"m\":1}");
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_projection_with_created_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_projection_with_created_handler.cs,invokes_created_handler,The following statement contains a magic number: _stateHandler.ProcessPartitionCreated(  				"partition"' CheckpointTag.FromPosition(0' 10' 5)' e' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_projection_with_created_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_projection_with_created_handler.cs,invokes_created_handler,The following statement contains a magic number: _stateHandler.ProcessPartitionCreated(  				"partition"' CheckpointTag.FromPosition(0' 10' 5)' e' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_projection_with_created_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_projection_with_created_handler.cs,invokes_created_handler,The following statement contains a magic number: Assert.AreEqual(5' _logged.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_projection_with_created_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_projection_with_created_handler.cs,invokes_created_handler,The following statement contains a magic number: Assert.AreEqual(@"event"' _logged[2]);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_projection_with_created_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_projection_with_created_handler.cs,invokes_created_handler,The following statement contains a magic number: Assert.AreEqual(@"{}"' _logged[3]);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_projection_with_created_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_projection_with_created_handler.cs,invokes_created_handler,The following statement contains a magic number: Assert.AreEqual(@"{""m"":1}"' _logged[4]);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_projection_with_created_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_projection_with_created_handler.cs,returns_emitted_events,The following statement contains a magic number: var e = new ResolvedEvent(  				"stream"' 0' "stream"' 0' false' new TFPos(1000' 900)' Guid.NewGuid()' "event"' true' "{}"'  				"{\"m\":1}");
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_projection_with_created_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_projection_with_created_handler.cs,returns_emitted_events,The following statement contains a magic number: var e = new ResolvedEvent(  				"stream"' 0' "stream"' 0' false' new TFPos(1000' 900)' Guid.NewGuid()' "event"' true' "{}"'  				"{\"m\":1}");
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_projection_with_created_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_projection_with_created_handler.cs,returns_emitted_events,The following statement contains a magic number: _stateHandler.ProcessPartitionCreated(  				"partition"' CheckpointTag.FromPosition(0' 10' 5)' e' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_projection_with_created_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_projection_with_created_handler.cs,returns_emitted_events,The following statement contains a magic number: _stateHandler.ProcessPartitionCreated(  				"partition"' CheckpointTag.FromPosition(0' 10' 5)' e' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_emitting_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_emitting_metadata.cs,process_event_returns_true,The following statement contains a magic number: var result = _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_emitting_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_emitting_metadata.cs,process_event_returns_true,The following statement contains a magic number: var result = _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_emitting_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_emitting_metadata.cs,process_event_returns_emitted_event,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_emitting_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_emitting_metadata.cs,process_event_returns_emitted_event,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_emitting_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_emitting_metadata.cs,process_event_returns_emitted_event,The following statement contains a magic number: Assert.AreEqual(2' extraMetaData.Length);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_emitting_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_emitting_metadata.cs,can_pass_though_millions_of_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' i * 10 + 20' i * 10 + 10)' "stream" + i' "type" + i' "category"'  					Guid.NewGuid()' i' "metadata"' @"{""a"":""" + i + @"""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_emitting_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_emitting_metadata.cs,can_pass_though_millions_of_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' i * 10 + 20' i * 10 + 10)' "stream" + i' "type" + i' "category"'  					Guid.NewGuid()' i' "metadata"' @"{""a"":""" + i + @"""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_emitting_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_emitting_metadata.cs,can_pass_though_millions_of_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' i * 10 + 20' i * 10 + 10)' "stream" + i' "type" + i' "category"'  					Guid.NewGuid()' i' "metadata"' @"{""a"":""" + i + @"""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_emitting_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_emitting_metadata.cs,can_pass_though_millions_of_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' i * 10 + 20' i * 10 + 10)' "stream" + i' "type" + i' "category"'  					Guid.NewGuid()' i' "metadata"' @"{""a"":""" + i + @"""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_emitting_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_emitting_metadata.cs,can_pass_though_millions_of_events,The following statement contains a magic number: i % 10000 == 0
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_emitting_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_emitting_metadata.cs,can_pass_though_millions_of_events,The following statement contains a magic number: i < 100000000
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_emitting_stream_links,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_emitting_stream_links.cs,process_event_returns_true,The following statement contains a magic number: var result = _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_emitting_stream_links,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_emitting_stream_links.cs,process_event_returns_true,The following statement contains a magic number: var result = _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_emitting_stream_links,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_emitting_stream_links.cs,process_event_returns_emitted_event,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_emitting_stream_links,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_emitting_stream_links.cs,process_event_returns_emitted_event,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_with_not_passing_filter_by,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_with_not_passing_filter_by.cs,filter_by_that_passes_returns_correct_result,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""2""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_with_not_passing_filter_by,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_with_not_passing_filter_by.cs,filter_by_that_passes_returns_correct_result,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""2""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_with_not_passing_filter_by,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_with_not_passing_filter_by.cs,filter_by_that_does_not_pass_returns_correct_result,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""3""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_with_not_passing_filter_by,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_with_not_passing_filter_by.cs,filter_by_that_does_not_pass_returns_correct_result,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""3""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_with_transform_by,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_with_transform_by.cs,transform_state_returns_correct_result,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_a_v8_projection_with_transform_by,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_a_v8_projection_with_transform_by.cs,transform_state_returns_correct_result,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_bi_state_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_bi_state_v8_projection.cs,process_event_counts_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 10' 5)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0' "metadata"'  				@"{""a"":""b""}"' out state' out sharedState' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_bi_state_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_bi_state_v8_projection.cs,process_event_counts_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 10' 5)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0' "metadata"'  				@"{""a"":""b""}"' out state' out sharedState' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_bi_state_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_bi_state_v8_projection.cs,process_event_counts_events,The following statement contains a magic number: Assert.AreEqual(2' _logged.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_body_reflecting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_body_reflecting_v8_projection.cs,process_event_should_reflect_event,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_body_reflecting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_body_reflecting_v8_projection.cs,process_event_should_reflect_event,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_body_reflecting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_body_reflecting_v8_projection.cs,process_event_should_not_reflect_non_json_events_even_if_valid_json,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents' isJson: false);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_body_reflecting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_body_reflecting_v8_projection.cs,process_event_should_not_reflect_non_json_events_even_if_valid_json,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents' isJson: false);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_counting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_counting_v8_projection.cs,process_event_counts_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 10' 5)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0' "metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_counting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_counting_v8_projection.cs,process_event_counts_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 10' 5)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0' "metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_counting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_counting_v8_projection.cs,process_event_counts_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 15)' "stream1"' "type1"' "category"' Guid.NewGuid()' 1'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_counting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_counting_v8_projection.cs,process_event_counts_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 15)' "stream1"' "type1"' "category"' Guid.NewGuid()' 1'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_counting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_counting_v8_projection.cs,process_event_counts_events,The following statement contains a magic number: Assert.AreEqual(2' _logged.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_counting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_counting_v8_projection.cs,can_handle_million_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' i * 10' i * 10 - 5)' "stream" + i' "type" + i' "category"'  					Guid.NewGuid()' 0'  					"metadata"' @"{""a"":""" + i + @"""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_counting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_counting_v8_projection.cs,can_handle_million_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' i * 10' i * 10 - 5)' "stream" + i' "type" + i' "category"'  					Guid.NewGuid()' 0'  					"metadata"' @"{""a"":""" + i + @"""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_counting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_counting_v8_projection.cs,can_handle_million_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' i * 10' i * 10 - 5)' "stream" + i' "type" + i' "category"'  					Guid.NewGuid()' 0'  					"metadata"' @"{""a"":""" + i + @"""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_counting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_counting_v8_projection.cs,can_handle_million_events,The following statement contains a magic number: i < 1000000
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_emitting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_emitting_v8_projection.cs,process_event_returns_true,The following statement contains a magic number: var result = _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_emitting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_emitting_v8_projection.cs,process_event_returns_true,The following statement contains a magic number: var result = _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_emitting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_emitting_v8_projection.cs,process_event_returns_emitted_event,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_emitting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_emitting_v8_projection.cs,process_event_returns_emitted_event,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_emitting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_emitting_v8_projection.cs,can_pass_though_millions_of_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' i * 10 + 20' i * 10 + 10)' "stream" + i' "type" + i' "category"'  					Guid.NewGuid()' i'  					"metadata"' @"{""a"":""" + i + @"""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_emitting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_emitting_v8_projection.cs,can_pass_though_millions_of_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' i * 10 + 20' i * 10 + 10)' "stream" + i' "type" + i' "category"'  					Guid.NewGuid()' i'  					"metadata"' @"{""a"":""" + i + @"""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_emitting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_emitting_v8_projection.cs,can_pass_though_millions_of_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' i * 10 + 20' i * 10 + 10)' "stream" + i' "type" + i' "category"'  					Guid.NewGuid()' i'  					"metadata"' @"{""a"":""" + i + @"""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_emitting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_emitting_v8_projection.cs,can_pass_though_millions_of_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  					""' CheckpointTag.FromPosition(0' i * 10 + 20' i * 10 + 10)' "stream" + i' "type" + i' "category"'  					Guid.NewGuid()' i'  					"metadata"' @"{""a"":""" + i + @"""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_emitting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_emitting_v8_projection.cs,can_pass_though_millions_of_events,The following statement contains a magic number: i % 10000 == 0
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_emitting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_emitting_v8_projection.cs,can_pass_though_millions_of_events,The following statement contains a magic number: i < 100000000
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_reflecting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_reflecting_v8_projection.cs,process_event_should_reflect_event,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				@"{""metadata"":1}"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_reflecting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_reflecting_v8_projection.cs,process_event_should_reflect_event,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				@"{""metadata"":1}"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_reflecting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_reflecting_v8_projection.cs,process_event_should_reflect_event_2,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				@"{""metadata"":1}"'  				@"{""a"":1}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_reflecting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_reflecting_v8_projection.cs,process_event_should_reflect_event_2,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				@"{""metadata"":1}"'  				@"{""a"":1}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_reflecting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_reflecting_v8_projection.cs,multiple_process_event_should_reflect_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				@"{""metadata"":0}"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_reflecting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_reflecting_v8_projection.cs,multiple_process_event_should_reflect_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				@"{""metadata"":0}"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_reflecting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_reflecting_v8_projection.cs,multiple_process_event_should_reflect_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 40' 30)' "stream1"' "type1"' "category"' Guid.NewGuid()' 1'  				@"{""metadata"":1}"'  				@"{""c"":""d""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_reflecting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_reflecting_v8_projection.cs,multiple_process_event_should_reflect_events,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 40' 30)' "stream1"' "type1"' "category"' Guid.NewGuid()' 1'  				@"{""metadata"":1}"'  				@"{""c"":""d""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_reflecting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_reflecting_v8_projection.cs,multiple_process_event_should_reflect_events,The following statement contains a magic number: Assert.AreEqual(2' _logged.Count);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_reflecting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_reflecting_v8_projection.cs,process_event_returns_true,The following statement contains a magic number: var result = _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				@"{""metadata"":1}"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_reflecting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_reflecting_v8_projection.cs,process_event_returns_true,The following statement contains a magic number: var result = _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				@"{""metadata"":1}"'  				@"{""a"":""b""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_reflecting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_reflecting_v8_projection.cs,process_event_with_null_category_returns_true,The following statement contains a magic number: var result = _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' null' Guid.NewGuid()' 0'  				@"{""metadata"":1}"' @"{""a"":""b""}"'  				out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_running_reflecting_v8_projection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_running_reflecting_v8_projection.cs,process_event_with_null_category_returns_true,The following statement contains a magic number: var result = _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' null' Guid.NewGuid()' 0'  				@"{""metadata"":1}"' @"{""a"":""b""}"'  				out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_v8_projection_loading_state,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_v8_projection_loading_state.cs,the_state_is_loaded,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""x"":""y""}"' out state' out emittedEvents);
Magic Number,EventStore.Projections.Core.Tests.Services.v8,when_v8_projection_loading_state,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\v8\when_v8_projection_loading_state.cs,the_state_is_loaded,The following statement contains a magic number: _stateHandler.ProcessEvent(  				""' CheckpointTag.FromPosition(0' 20' 10)' "stream1"' "type1"' "category"' Guid.NewGuid()' 0'  				"metadata"'  				@"{""x"":""y""}"' out state' out emittedEvents);
Magic Number,creating,when_processing_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\write_query_result_phase\creating.cs,writes_query_results,The following statement contains a magic number: Assert.AreEqual(3' _checkpointManager.EmittedEvents.Count(v => v.Event.EventType == "Result"));
Magic Number,creating,when_completed_query_processing_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\write_query_result_phase\creating.cs,writes_query_results_only_once,The following statement contains a magic number: Assert.AreEqual(3' _checkpointManager.EmittedEvents.Count(v => v.Event.EventType == "Result"));
Missing Default,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,AssertStreamTail,The following switch statement is missing a default case: switch (result.Status) {  				case SliceReadStatus.StreamDeleted:  					Assert.Fail("Stream '{0}' is deleted"' streamId);  					break;  				case SliceReadStatus.StreamNotFound:  					Assert.Fail("Stream '{0}' does not exist"' streamId);  					break;  				case SliceReadStatus.Success:  					var resultEventsReversed = result.Events.Reverse().ToArray();  					if (resultEventsReversed.Length < events.Length)  						DumpFailed("Stream does not contain enough events"' streamId' events' result.Events);  					else {  						for (var index = 0; index < events.Length; index++) {  							var parts = events[index].Split(new char[] {':'}' 2);  							var eventType = parts[0];  							var eventData = parts[1];    							if (resultEventsReversed[index].Event.EventType != eventType)  								DumpFailed("Invalid event type"' streamId' events' resultEventsReversed);  							else if (resultEventsReversed[index].Event.DebugDataView != eventData)  								DumpFailed("Invalid event body"' streamId' events' resultEventsReversed);  						}  					}    					break;  			}
Missing Default,EventStore.Projections.Core.Tests.ClientAPI.Cluster,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\Cluster\specification_with_standard_projections_runnning.cs,DumpStream,The following switch statement is missing a default case: switch (result.Status) {  				case SliceReadStatus.StreamDeleted:  					Assert.Fail("Stream '{0}' is deleted"' streamId);  					break;  				case SliceReadStatus.StreamNotFound:  					Assert.Fail("Stream '{0}' does not exist"' streamId);  					break;  				case SliceReadStatus.Success:  					Dump("Dumping.."' streamId' result.Events.Reverse().ToArray());  					break;  			}
Missing Default,EventStore.Projections.Core.Tests.ClientAPI,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\specification_with_standard_projections_runnning.cs,AssertStreamTail,The following switch statement is missing a default case: switch (result.Status) {  				case SliceReadStatus.StreamDeleted:  					Assert.Fail("Stream '{0}' is deleted"' streamId);  					break;  				case SliceReadStatus.StreamNotFound:  					Assert.Fail("Stream '{0}' does not exist"' streamId);  					break;  				case SliceReadStatus.Success:  					var resultEventsReversed = result.Events.Reverse().ToArray();  					if (resultEventsReversed.Length < events.Length)  						DumpFailed("Stream does not contain enough events"' streamId' events' result.Events);  					else {  						for (var index = 0; index < events.Length; index++) {  							var parts = events[index].Split(new char[] {':'}' 2);  							var eventType = parts[0];  							var eventData = parts[1];    							if (resultEventsReversed[index].Event.EventType != eventType)  								DumpFailed("Invalid event type"' streamId' events' resultEventsReversed);  							else if (resultEventsReversed[index].Event.DebugDataView != eventData)  								DumpFailed("Invalid event body"' streamId' events' resultEventsReversed);  						}  					}    					break;  			}
Missing Default,EventStore.Projections.Core.Tests.ClientAPI,specification_with_standard_projections_runnning,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\ClientAPI\specification_with_standard_projections_runnning.cs,DumpStream,The following switch statement is missing a default case: switch (result.Status) {  				case SliceReadStatus.StreamDeleted:  					Assert.Fail("Stream '{0}' is deleted"' streamId);  					break;  				case SliceReadStatus.StreamNotFound:  					Assert.Fail("Stream '{0}' does not exist"' streamId);  					break;  				case SliceReadStatus.Success:  					Dump("Dumping.."' streamId' result.Events.Reverse().ToArray());  					break;  			}
Missing Default,EventStore.Projections.Core.Tests.Services.handlers,when_handling_link_to_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Projections.Core.Tests\Services\handlers\categorize_events_by_correlation_id.cs,emits_correct_link,The following switch statement is missing a default case: switch (kvp.Key) {  						case "$eventTimestamp":  							eventTimestampJson = kvp.Value;  							break;  						case "$link":  							linkJson = kvp.Value;  							break;  					}
