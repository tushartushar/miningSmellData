Implementation smell,Namespace,Class,File,Method,Description
Complex Method,EventStore.Transport.Http,MediaType,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\MediaType.cs,TryParseInternal,Cyclomatic complexity of the method is 13
Complex Method,EventStore.Transport.Http.EntityManagement,HttpEntity,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntity.cs,BuildRequestedUrl,Cyclomatic complexity of the method is 10
Complex Method,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,ForwardReply,Cyclomatic complexity of the method is 19
Complex Method,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,CompressResponse,Cyclomatic complexity of the method is 10
Complex Method,EventStore.Transport.Http.Atom,EntryElement,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Atom\Feed.cs,WriteXml,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,ContextAcquired,Cyclomatic complexity of the method is 15
Long Parameter List,EventStore.Transport.Http.Codecs,Codec,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Codecs\Codec.cs,CreateCustom,The method has 5 parameters.
Long Parameter List,EventStore.Transport.Http.Codecs,CustomCodec,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Codecs\CustomCodec.cs,CustomCodec,The method has 5 parameters.
Long Parameter List,EventStore.Transport.Http,MediaType,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\MediaType.cs,MediaType,The method has 6 parameters.
Long Parameter List,EventStore.Transport.Http.Client,HttpAsyncClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Client\HttpAsyncClient.cs,Post,The method has 5 parameters.
Long Parameter List,EventStore.Transport.Http.Client,HttpAsyncClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Client\HttpAsyncClient.cs,Post,The method has 6 parameters.
Long Parameter List,EventStore.Transport.Http.Client,HttpAsyncClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Client\HttpAsyncClient.cs,Put,The method has 5 parameters.
Long Parameter List,EventStore.Transport.Http.Client,HttpAsyncClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Client\HttpAsyncClient.cs,Receive,The method has 5 parameters.
Long Parameter List,EventStore.Transport.Http.Client,HttpAsyncClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Client\HttpAsyncClient.cs,Send,The method has 7 parameters.
Long Parameter List,EventStore.Transport.Http.Client,IHttpClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Client\IHttpClient.cs,Post,The method has 5 parameters.
Long Parameter List,EventStore.Transport.Http.Client,IHttpClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Client\IHttpClient.cs,Put,The method has 5 parameters.
Long Parameter List,EventStore.Transport.Http.EntityManagement,HttpEntity,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntity.cs,HttpEntity,The method has 6 parameters.
Long Parameter List,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,HttpEntityManager,The method has 6 parameters.
Long Parameter List,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,BeginReply,The method has 5 parameters.
Long Parameter List,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,Reply,The method has 7 parameters.
Long Parameter List,EventStore.Transport.Http.EntityManagement,HttpEntityManagerExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManagerExtensions.cs,ReplyStatus,The method has 5 parameters.
Long Parameter List,EventStore.Transport.Http.EntityManagement,HttpEntityManagerExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManagerExtensions.cs,ReplyContent,The method has 7 parameters.
Long Parameter List,EventStore.Transport.Http.EntityManagement,HttpEntityManagerExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManagerExtensions.cs,ReplyTextContent,The method has 7 parameters.
Long Statement,EventStore.Transport.Http.Codecs,CustomCodec,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Codecs\CustomCodec.cs,SuitableForResponse,The length of the statement  "	return component.Type == "*" || (string.Equals (component.Type' _type' StringComparison.OrdinalIgnoreCase) && (component.Subtype == "*" || string.Equals (component.Subtype' _subtype' StringComparison.OrdinalIgnoreCase))); " is 221.
Long Statement,EventStore.Transport.Http.Codecs,JsonCodec,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Codecs\JsonCodec.cs,SuitableForResponse,The length of the statement  "	return component.Type == "*" || (string.Equals (component.Type' "application"' StringComparison.OrdinalIgnoreCase) && (component.Subtype == "*" || string.Equals (component.Subtype' "json"' StringComparison.OrdinalIgnoreCase))); " is 227.
Long Statement,EventStore.Transport.Http.Codecs,TextCodec,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Codecs\TextCodec.cs,SuitableForResponse,The length of the statement  "	return component.Type == "*" || (string.Equals (component.Type' "text"' StringComparison.OrdinalIgnoreCase) && (component.Subtype == "*" || string.Equals (component.Subtype' "plain"' StringComparison.OrdinalIgnoreCase))); " is 221.
Long Statement,EventStore.Transport.Http.Codecs,XmlCodec,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Codecs\XmlCodec.cs,SuitableForResponse,The length of the statement  "	return component.Type == "*" || (string.Equals (component.Type' "text"' StringComparison.OrdinalIgnoreCase) && (component.Subtype == "*" || string.Equals (component.Subtype' "xml"' StringComparison.OrdinalIgnoreCase))); " is 219.
Long Statement,EventStore.Transport.Http,MediaType,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\MediaType.cs,TryParseInternal,The length of the statement  "					encoding = encName.Equals ("utf-8"' StringComparison.OrdinalIgnoreCase) ? Helper.UTF8NoBom : Encoding.GetEncoding (encName); " is 124.
Long Statement,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,SetRequiredHeaders,The length of the statement  "		HttpEntity.Response.AddHeader ("Access-Control-Allow-Headers"' "Content-Type' X-Requested-With' X-Forwarded-Host' X-Forwarded-Prefix' X-PINGOTHER' Authorization' ES-LongPoll' ES-ExpectedVersion' ES-EventId' ES-EventType' ES-RequiresMaster' ES-HardDelete' ES-ResolveLinkTos"); " is 275.
Long Statement,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,ForwardReply,The length of the statement  "				new AsyncStreamCopier<HttpListenerResponse> (task.Result' HttpEntity.Response.OutputStream' HttpEntity.Response' copier => { " is 124.
Long Statement,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,ContinueWriteResponseAsync,The length of the statement  "		_asyncWriter = new AsyncQueuedBufferWriter (_currentOutputStream' () => DisposeStreamAndCloseConnection ("Close connection error")); " is 132.
Long Statement,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,CompressResponse,The length of the statement  "		outputStream = new MemoryStream (bufferManagerArraySegment.Array' bufferManagerArraySegment.Offset' bufferManagerArraySegment.Count); " is 133.
Long Statement,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,CompressResponse,The length of the statement  "		//since Gzip/Deflate compression ratio doesn't go below 20% in most cases' we can initialize the array to a quarter of the original response length " is 147.
Long Statement,EventStore.Transport.Http.EntityManagement,HttpEntityManagerExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManagerExtensions.cs,ReplyTextContent,The length of the statement  "	self.Reply (Helper.UTF8NoBom.GetBytes (response ?? string.Empty)' code' description' type' Helper.UTF8NoBom' headers' onError); " is 127.
Long Statement,EventStore.Transport.Http.Atom,FeedElement,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Atom\Feed.cs,WriteXml,The length of the statement  "		ThrowHelper.ThrowSpecificationViolation ("atom:feed elements SHOULD contain one atom:link element with a " + "rel attribute value of 'self'. This is the preferred URI for retrieving Atom Feed Documents representing this Atom feed."); " is 233.
Long Statement,EventStore.Transport.Http.Atom,LinkElement,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Atom\Feed.cs,WriteXml,The length of the statement  "		ThrowHelper.ThrowSpecificationViolation ("atom:link elements MUST have an href attribute' whose value MUST be a URI reference"); " is 128.
Long Statement,EventStore.Transport.Http.Atom,CollectionElement,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Atom\ServiceDocument.cs,WriteXml,The length of the statement  "		ThrowHelper.ThrowSpecificationViolation ("The app:collection element MUST contain an 'href' attribute' " + "whose value gives the IRI of the Collection."); " is 155.
Long Statement,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,TryAddAcl,The length of the statement  "	var args = string.Format ("http add urlacl url={0} user=\"{1}\\{2}\""' address' Environment.UserDomainName' Environment.UserName); " is 130.
Complex Conditional,EventStore.Transport.Http.EntityManagement,HttpEntityManagerExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManagerExtensions.cs,ReadTextRequestAsync,The conditional expression  "bytes.Length >= 3 && bytes [0] == 0xEF && bytes [1] == 0xBB && bytes [2] == 0xBF"  is complex.
Empty Catch Block,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,SetResponseCode,The method has an empty catch block.
Empty Catch Block,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,SetResponseDescription,The method has an empty catch block.
Empty Catch Block,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,SetContentType,The method has an empty catch block.
Empty Catch Block,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,SetResponseLength,The method has an empty catch block.
Empty Catch Block,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,SetRequiredHeaders,The method has an empty catch block.
Empty Catch Block,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,SetAdditionalHeaders,The method has an empty catch block.
Empty Catch Block,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,Shutdown,The method has an empty catch block.
Empty Catch Block,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,ContextAcquired,The method has an empty catch block.
Empty Catch Block,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,ContextAcquired,The method has an empty catch block.
Empty Catch Block,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,ContextAcquired,The method has an empty catch block.
Empty Catch Block,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,ContextAcquired,The method has an empty catch block.
Empty Catch Block,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,ContextAcquired,The method has an empty catch block.
Empty Catch Block,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,ContextAcquired,The method has an empty catch block.
Empty Catch Block,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,ContextAcquired,The method has an empty catch block.
Empty Catch Block,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,ContextAcquired,The method has an empty catch block.
Empty Catch Block,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,ContextAcquired,The method has an empty catch block.
Empty Catch Block,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,ContextAcquired,The method has an empty catch block.
Magic Number,EventStore.Transport.Http.Codecs,CustomCodec,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Codecs\CustomCodec.cs,CustomCodec,The following statement contains a magic number: if (parts.Length != 2)  	throw new ArgumentException ("contentType");  
Magic Number,EventStore.Transport.Http,MediaType,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\MediaType.cs,TryParseInternal,The following statement contains a magic number: if (typeParts.Length != 2) {  	if (throwExceptions)  		throw new ArgumentException ("componentText");  	return false;  }  
Magic Number,EventStore.Transport.Http,MediaType,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\MediaType.cs,TryParseInternal,The following statement contains a magic number: if (parts.Length > 1) {  	for (var i = 1; i < parts.Length; i++) {  		var part = parts [i].ToLowerInvariant ().Trim ();  		if (part.StartsWith ("q=")) {  			var quality = part.Substring (2);  			float q;  			if (float.TryParse (quality' NumberStyles.Float' CultureInfo.InvariantCulture' out q)) {  				priority = q;  			}  		} else if (part.StartsWith ("charset=")) {  			encodingSpecified = true;  			try {  				var encName = part.Substring (8);  				encoding = encName.Equals ("utf-8"' StringComparison.OrdinalIgnoreCase) ? Helper.UTF8NoBom : Encoding.GetEncoding (encName);  			} catch (ArgumentException) {  				encoding = null;  			}  		}  	}  }  
Magic Number,EventStore.Transport.Http,MediaType,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\MediaType.cs,TryParseInternal,The following statement contains a magic number: if (parts.Length > 1) {  	for (var i = 1; i < parts.Length; i++) {  		var part = parts [i].ToLowerInvariant ().Trim ();  		if (part.StartsWith ("q=")) {  			var quality = part.Substring (2);  			float q;  			if (float.TryParse (quality' NumberStyles.Float' CultureInfo.InvariantCulture' out q)) {  				priority = q;  			}  		} else if (part.StartsWith ("charset=")) {  			encodingSpecified = true;  			try {  				var encName = part.Substring (8);  				encoding = encName.Equals ("utf-8"' StringComparison.OrdinalIgnoreCase) ? Helper.UTF8NoBom : Encoding.GetEncoding (encName);  			} catch (ArgumentException) {  				encoding = null;  			}  		}  	}  }  
Magic Number,EventStore.Transport.Http,MediaType,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\MediaType.cs,TryParseInternal,The following statement contains a magic number: for (var i = 1; i < parts.Length; i++) {  	var part = parts [i].ToLowerInvariant ().Trim ();  	if (part.StartsWith ("q=")) {  		var quality = part.Substring (2);  		float q;  		if (float.TryParse (quality' NumberStyles.Float' CultureInfo.InvariantCulture' out q)) {  			priority = q;  		}  	} else if (part.StartsWith ("charset=")) {  		encodingSpecified = true;  		try {  			var encName = part.Substring (8);  			encoding = encName.Equals ("utf-8"' StringComparison.OrdinalIgnoreCase) ? Helper.UTF8NoBom : Encoding.GetEncoding (encName);  		} catch (ArgumentException) {  			encoding = null;  		}  	}  }  
Magic Number,EventStore.Transport.Http,MediaType,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\MediaType.cs,TryParseInternal,The following statement contains a magic number: for (var i = 1; i < parts.Length; i++) {  	var part = parts [i].ToLowerInvariant ().Trim ();  	if (part.StartsWith ("q=")) {  		var quality = part.Substring (2);  		float q;  		if (float.TryParse (quality' NumberStyles.Float' CultureInfo.InvariantCulture' out q)) {  			priority = q;  		}  	} else if (part.StartsWith ("charset=")) {  		encodingSpecified = true;  		try {  			var encName = part.Substring (8);  			encoding = encName.Equals ("utf-8"' StringComparison.OrdinalIgnoreCase) ? Helper.UTF8NoBom : Encoding.GetEncoding (encName);  		} catch (ArgumentException) {  			encoding = null;  		}  	}  }  
Magic Number,EventStore.Transport.Http,MediaType,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\MediaType.cs,TryParseInternal,The following statement contains a magic number: if (part.StartsWith ("q=")) {  	var quality = part.Substring (2);  	float q;  	if (float.TryParse (quality' NumberStyles.Float' CultureInfo.InvariantCulture' out q)) {  		priority = q;  	}  } else if (part.StartsWith ("charset=")) {  	encodingSpecified = true;  	try {  		var encName = part.Substring (8);  		encoding = encName.Equals ("utf-8"' StringComparison.OrdinalIgnoreCase) ? Helper.UTF8NoBom : Encoding.GetEncoding (encName);  	} catch (ArgumentException) {  		encoding = null;  	}  }  
Magic Number,EventStore.Transport.Http,MediaType,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\MediaType.cs,TryParseInternal,The following statement contains a magic number: if (part.StartsWith ("q=")) {  	var quality = part.Substring (2);  	float q;  	if (float.TryParse (quality' NumberStyles.Float' CultureInfo.InvariantCulture' out q)) {  		priority = q;  	}  } else if (part.StartsWith ("charset=")) {  	encodingSpecified = true;  	try {  		var encName = part.Substring (8);  		encoding = encName.Equals ("utf-8"' StringComparison.OrdinalIgnoreCase) ? Helper.UTF8NoBom : Encoding.GetEncoding (encName);  	} catch (ArgumentException) {  		encoding = null;  	}  }  
Magic Number,EventStore.Transport.Http,MediaType,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\MediaType.cs,TryParseInternal,The following statement contains a magic number: if (part.StartsWith ("charset=")) {  	encodingSpecified = true;  	try {  		var encName = part.Substring (8);  		encoding = encName.Equals ("utf-8"' StringComparison.OrdinalIgnoreCase) ? Helper.UTF8NoBom : Encoding.GetEncoding (encName);  	} catch (ArgumentException) {  		encoding = null;  	}  }  
Magic Number,EventStore.Transport.Http,MediaType,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\MediaType.cs,TryParseInternal,The following statement contains a magic number: try {  	var encName = part.Substring (8);  	encoding = encName.Equals ("utf-8"' StringComparison.OrdinalIgnoreCase) ? Helper.UTF8NoBom : Encoding.GetEncoding (encName);  } catch (ArgumentException) {  	encoding = null;  }  
Magic Number,EventStore.Transport.Http.Client,HttpAsyncClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Client\HttpAsyncClient.cs,HttpAsyncClient,The following statement contains a magic number: ServicePointManager.MaxServicePointIdleTime = 10000;  
Magic Number,EventStore.Transport.Http.Client,HttpAsyncClient,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Client\HttpAsyncClient.cs,HttpAsyncClient,The following statement contains a magic number: ServicePointManager.DefaultConnectionLimit = 500;  
Magic Number,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,CompressResponse,The following statement contains a magic number: if (useBufferManager) {  	//use buffer manager to handle responses less than ~50kb long to prevent excessive memory allocations  	bufferManagerArraySegment = _compressionBufferManager.CheckOut ();  	outputStream = new MemoryStream (bufferManagerArraySegment.Array' bufferManagerArraySegment.Offset' bufferManagerArraySegment.Count);  	outputStream.SetLength (0);  } else {  	//since Gzip/Deflate compression ratio doesn't go below 20% in most cases' we can initialize the array to a quarter of the original response length  	//this also limits memory stream growth operations to at most 2.  	outputStream = new MemoryStream ((response.Length + 4 - 1) / 4);  }  
Magic Number,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,CompressResponse,The following statement contains a magic number: if (useBufferManager) {  	//use buffer manager to handle responses less than ~50kb long to prevent excessive memory allocations  	bufferManagerArraySegment = _compressionBufferManager.CheckOut ();  	outputStream = new MemoryStream (bufferManagerArraySegment.Array' bufferManagerArraySegment.Offset' bufferManagerArraySegment.Count);  	outputStream.SetLength (0);  } else {  	//since Gzip/Deflate compression ratio doesn't go below 20% in most cases' we can initialize the array to a quarter of the original response length  	//this also limits memory stream growth operations to at most 2.  	outputStream = new MemoryStream ((response.Length + 4 - 1) / 4);  }  
Magic Number,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,CompressResponse,The following statement contains a magic number: outputStream = new MemoryStream ((response.Length + 4 - 1) / 4);  
Magic Number,EventStore.Transport.Http.EntityManagement,HttpEntityManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManager.cs,CompressResponse,The following statement contains a magic number: outputStream = new MemoryStream ((response.Length + 4 - 1) / 4);  
Magic Number,EventStore.Transport.Http.EntityManagement,HttpEntityManagerExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManagerExtensions.cs,ReadTextRequestAsync,The following statement contains a magic number: self.ReadRequestAsync ((manager' bytes) => {  	int offset = 0;  	// check for UTF-8 BOM (0xEF' 0xBB' 0xBF) and skip it safely' if any  	if (bytes.Length >= 3 && bytes [0] == 0xEF && bytes [1] == 0xBB && bytes [2] == 0xBF)  		offset = 3;  	onSuccess (manager' Helper.UTF8NoBom.GetString (bytes' offset' bytes.Length - offset));  }' onError);  
Magic Number,EventStore.Transport.Http.EntityManagement,HttpEntityManagerExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManagerExtensions.cs,ReadTextRequestAsync,The following statement contains a magic number: self.ReadRequestAsync ((manager' bytes) => {  	int offset = 0;  	// check for UTF-8 BOM (0xEF' 0xBB' 0xBF) and skip it safely' if any  	if (bytes.Length >= 3 && bytes [0] == 0xEF && bytes [1] == 0xBB && bytes [2] == 0xBF)  		offset = 3;  	onSuccess (manager' Helper.UTF8NoBom.GetString (bytes' offset' bytes.Length - offset));  }' onError);  
Magic Number,EventStore.Transport.Http.EntityManagement,HttpEntityManagerExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManagerExtensions.cs,ReadTextRequestAsync,The following statement contains a magic number: self.ReadRequestAsync ((manager' bytes) => {  	int offset = 0;  	// check for UTF-8 BOM (0xEF' 0xBB' 0xBF) and skip it safely' if any  	if (bytes.Length >= 3 && bytes [0] == 0xEF && bytes [1] == 0xBB && bytes [2] == 0xBF)  		offset = 3;  	onSuccess (manager' Helper.UTF8NoBom.GetString (bytes' offset' bytes.Length - offset));  }' onError);  
Magic Number,EventStore.Transport.Http.EntityManagement,HttpEntityManagerExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManagerExtensions.cs,ReadTextRequestAsync,The following statement contains a magic number: if (bytes.Length >= 3 && bytes [0] == 0xEF && bytes [1] == 0xBB && bytes [2] == 0xBF)  	offset = 3;  
Magic Number,EventStore.Transport.Http.EntityManagement,HttpEntityManagerExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManagerExtensions.cs,ReadTextRequestAsync,The following statement contains a magic number: if (bytes.Length >= 3 && bytes [0] == 0xEF && bytes [1] == 0xBB && bytes [2] == 0xBF)  	offset = 3;  
Magic Number,EventStore.Transport.Http.EntityManagement,HttpEntityManagerExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManagerExtensions.cs,ReadTextRequestAsync,The following statement contains a magic number: if (bytes.Length >= 3 && bytes [0] == 0xEF && bytes [1] == 0xBB && bytes [2] == 0xBF)  	offset = 3;  
Magic Number,EventStore.Transport.Http.EntityManagement,HttpEntityManagerExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\EntityManagement\HttpEntityManagerExtensions.cs,ReadTextRequestAsync,The following statement contains a magic number: offset = 3;  
Magic Number,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,TryStart,The following statement contains a magic number: try {  	Logger.Info ("Starting HTTP server on [{0}]..."' string.Join ("'"' _listener.Prefixes));  	try {  		_listener.Start ();  	} catch (HttpListenerException ex) {  		if (ex.ErrorCode == 5)//Access error don't see any better way of getting it  		 {  			if (_listenPrefixes.Length > 0)  				TryAddAcl (_listenPrefixes [0]);  			CreateListener (_listenPrefixes);  			Logger.Info ("Retrying HTTP server on [{0}]..."' string.Join ("'"' _listener.Prefixes));  			_listener.Start ();  		}  	}  	_listener.BeginGetContext (ContextAcquired' null);  	Logger.Info ("HTTP server is up and listening on [{0}]"' string.Join ("'"' _listener.Prefixes));  	return true;  } catch (Exception e) {  	Logger.FatalException (e' "Failed to start http server");  	return false;  }  
Magic Number,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,TryStart,The following statement contains a magic number: try {  	_listener.Start ();  } catch (HttpListenerException ex) {  	if (ex.ErrorCode == 5)//Access error don't see any better way of getting it  	 {  		if (_listenPrefixes.Length > 0)  			TryAddAcl (_listenPrefixes [0]);  		CreateListener (_listenPrefixes);  		Logger.Info ("Retrying HTTP server on [{0}]..."' string.Join ("'"' _listener.Prefixes));  		_listener.Start ();  	}  }  
Magic Number,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,TryStart,The following statement contains a magic number: if (ex.ErrorCode == 5)//Access error don't see any better way of getting it   {  	if (_listenPrefixes.Length > 0)  		TryAddAcl (_listenPrefixes [0]);  	CreateListener (_listenPrefixes);  	Logger.Info ("Retrying HTTP server on [{0}]..."' string.Join ("'"' _listener.Prefixes));  	_listener.Start ();  }  
Magic Number,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,Shutdown,The following statement contains a magic number: try {  	var counter = 10;  	while (_listener.IsListening && counter-- > 0) {  		_listener.Abort ();  		_listener.Stop ();  		_listener.Close ();  		if (_listener.IsListening)  			System.Threading.Thread.Sleep (50);  	}  } catch (ObjectDisposedException) {  	// that's ok  } catch (Exception e) {  	Logger.ErrorException (e' "Error while shutting down http server");  }  
Magic Number,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,Shutdown,The following statement contains a magic number: try {  	var counter = 10;  	while (_listener.IsListening && counter-- > 0) {  		_listener.Abort ();  		_listener.Stop ();  		_listener.Close ();  		if (_listener.IsListening)  			System.Threading.Thread.Sleep (50);  	}  } catch (ObjectDisposedException) {  	// that's ok  } catch (Exception e) {  	Logger.ErrorException (e' "Error while shutting down http server");  }  
Magic Number,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,Shutdown,The following statement contains a magic number: while (_listener.IsListening && counter-- > 0) {  	_listener.Abort ();  	_listener.Stop ();  	_listener.Close ();  	if (_listener.IsListening)  		System.Threading.Thread.Sleep (50);  }  
Magic Number,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,Shutdown,The following statement contains a magic number: if (_listener.IsListening)  	System.Threading.Thread.Sleep (50);  
Magic Number,EventStore.Transport.Http.Server,HttpAsyncServer,F:\newReposMay17\EventStore_EventStore\src\EventStore.Transport.Http\Server\HttpAsyncServer.cs,Shutdown,The following statement contains a magic number: System.Threading.Thread.Sleep (50);  
