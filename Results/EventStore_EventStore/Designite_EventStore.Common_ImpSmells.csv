Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,EventStore.Common.Log,LogManager,C:\repos\EventStore_EventStore\src\EventStore.Common\Log\LogManager.cs,Init,The length of the parameter potentialNLogConfigurationFilePaths is 35.
Long Statement,EventStore.Common.Log,LogManager,C:\repos\EventStore_EventStore\src\EventStore.Common\Log\LogManager.cs,Init,The length of the statement  "                Console.Error.WriteLine("Event Store's Logging ({0}) configuration file was not found in:\n{1}.\nFalling back to defaults."' " is 124.
Long Statement,EventStore.Common.Options,EventStoreOptions,C:\repos\EventStore_EventStore\src\EventStore.Common\Options\EventStoreOptions.cs,GetConfig,The length of the statement  "            yield return EnvironmentVariables.Parse<TOptions>(x => NameTranslators.PrefixEnvironmentVariable(x' environmentPrefix).ToUpper()); " is 130.
Long Statement,EventStore.Common.Options,EventStoreOptions,C:\repos\EventStore_EventStore\src\EventStore.Common\Options\EventStoreOptions.cs,DumpOptions,The length of the statement  "                dumpOptionsBuilder.AppendLine(String.Format("\t{0'-25} {1} ({2})"' optionName + ":"' String.IsNullOrEmpty(valueToDump) ? "<empty>" : valueToDump' option.Source)); " is 162.
Long Statement,EventStore.Common.Options,RagsExtensions,C:\repos\EventStore_EventStore\src\EventStore.Common\Options\EventStoreOptions.cs,EnsureCorrectType,The length of the statement  "                    throw new OptionException(String.Format("The value {0} could not be converted to {1}"' optionSource.Value' property.PropertyType.Name)' property.Name); " is 151.
Long Statement,EventStore.Common.Utils,EndpointExtensions,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\EndpointExtensions.cs,ToHttpUrl,The length of the statement  "                return CreateHttpUrl(schema' ipEndPoint.Address.ToString()' ipEndPoint.Port' rawUrl != null ? rawUrl.TrimStart('/') : string.Empty); " is 132.
Long Statement,EventStore.Common.Utils,EndpointExtensions,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\EndpointExtensions.cs,ToHttpUrl,The length of the statement  "                return CreateHttpUrl(schema' dnsEndpoint.Host' dnsEndpoint.Port' rawUrl != null ? rawUrl.TrimStart('/') : string.Empty); " is 120.
Long Statement,EventStore.Common.Utils,EndpointExtensions,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\EndpointExtensions.cs,ToHttpUrl,The length of the statement  "                return CreateHttpUrl(schema' ipEndPoint.Address.ToString()' ipEndPoint.Port' string.Format(formatString.TrimStart('/')' args)); " is 127.
Long Statement,EventStore.Common.Utils,FileStreamExtensions,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\FileStreamExtensions.cs,ConfigureFlush,The length of the statement  "                    Expression expr = Expression.Field(arg' typeof(FileStream).GetField("_handle"' BindingFlags.Instance | BindingFlags.NonPublic)); " is 128.
Long Statement,EventStore.Common.Utils,IPEndPointArrayConverter,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\IPEndPointArrayConverter.cs,ConvertFrom,The length of the statement  "                    var ipEndPointList = valueAsString.Split(new[] { "'" }' StringSplitOptions.None).Select(x => (IPEndPoint)new IPEndPointConverter().ConvertFrom(x)); " is 147.
Long Statement,EventStore.Common.Utils,Platforms,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\Platforms.cs,GetPlatform,The length of the statement  "                    if (Directory.Exists("/Applications") & Directory.Exists("/System") & Directory.Exists("/Users") & Directory.Exists("/Volumes")) " is 128.
Long Statement,EventStore.Common.Utils,Ensure,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\Ensure.cs,Equal,The length of the statement  "                throw new ArgumentException(string.Format("{0} expected value: {1}' actual value: {2}"' argumentName' expected' actual)); " is 121.
Long Statement,EventStore.Common.Utils,Ensure,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\Ensure.cs,Equal,The length of the statement  "                throw new ArgumentException(string.Format("{0} expected value: {1}' actual value: {2}"' argumentName' expected' actual)); " is 121.
Long Statement,EventStore.Common.Utils,Ensure,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\Ensure.cs,Equal,The length of the statement  "                throw new ArgumentException(string.Format("{0} expected value: {1}' actual value: {2}"' argumentName' expected' actual)); " is 121.
Empty Catch Block,EventStore.Common.Utils,Helper,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,EatException,The method has an empty catch block.
Magic Number,EventStore.Common.Log,LogManager,C:\repos\EventStore_EventStore\src\EventStore.Common\Log\LogManager.cs,Init,The following statement contains a magic number: AppDomain.CurrentDomain.UnhandledException += (s' e) =>              {                  var exc = e.ExceptionObject as Exception;                  if (exc != null)                      GlobalLogger.FatalException(exc' "Global Unhandled Exception occurred.");                  else                      GlobalLogger.Fatal("Global Unhandled Exception object: {0}."' e.ExceptionObject);                  GlobalLogger.Flush(TimeSpan.FromMilliseconds(500));              };
Magic Number,EventStore.Common.Log,NLogger,C:\repos\EventStore_EventStore\src\EventStore.Common\Log\NLogger.cs,FlushLog,The following statement contains a magic number: countdown.Wait(maxTimeToWait ?? TimeSpan.FromMilliseconds(500));
Magic Number,EventStore.Common.Options,EventStoreOptions,C:\repos\EventStore_EventStore\src\EventStore.Common\Options\EventStoreOptions.cs,ResolvePrecedence,The following statement contains a magic number: var options = optionSources.OrderBy(x =>                  x.Source == "Command Line" ? 0 :                  x.Source == "Environment Variable" ? 1 :                  x.Source == "Config File" ? 2 : 3);
Magic Number,EventStore.Common.Options,EventStoreOptions,C:\repos\EventStore_EventStore\src\EventStore.Common\Options\EventStoreOptions.cs,ResolvePrecedence,The following statement contains a magic number: var options = optionSources.OrderBy(x =>                  x.Source == "Command Line" ? 0 :                  x.Source == "Environment Variable" ? 1 :                  x.Source == "Config File" ? 2 : 3);
Magic Number,EventStore.Common.Utils,Helper,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row)              {                  sb.AppendFormat("{0:000000}:"' row * 16);                  for (int i = 0; i < 16; ++i' ++cur)                  {                      if (cur >= len)                          sb.Append("   ");                      else                          sb.AppendFormat(" {0:X2}"' logBulk.Array[logBulk.Offset + cur]);                  }                  sb.Append("  | ");                  cur -= 16;                  for (int i = 0; i < 16; ++i' ++cur)                  {                      if (cur < len)                      {                          var b = (char)logBulk.Array[logBulk.Offset + cur];                          sb.Append(char.IsControl(b) ? '.' : b);                      }                  }                  sb.AppendLine();              }
Magic Number,EventStore.Common.Utils,Helper,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row)              {                  sb.AppendFormat("{0:000000}:"' row * 16);                  for (int i = 0; i < 16; ++i' ++cur)                  {                      if (cur >= len)                          sb.Append("   ");                      else                          sb.AppendFormat(" {0:X2}"' logBulk.Array[logBulk.Offset + cur]);                  }                  sb.Append("  | ");                  cur -= 16;                  for (int i = 0; i < 16; ++i' ++cur)                  {                      if (cur < len)                      {                          var b = (char)logBulk.Array[logBulk.Offset + cur];                          sb.Append(char.IsControl(b) ? '.' : b);                      }                  }                  sb.AppendLine();              }
Magic Number,EventStore.Common.Utils,Helper,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row)              {                  sb.AppendFormat("{0:000000}:"' row * 16);                  for (int i = 0; i < 16; ++i' ++cur)                  {                      if (cur >= len)                          sb.Append("   ");                      else                          sb.AppendFormat(" {0:X2}"' logBulk.Array[logBulk.Offset + cur]);                  }                  sb.Append("  | ");                  cur -= 16;                  for (int i = 0; i < 16; ++i' ++cur)                  {                      if (cur < len)                      {                          var b = (char)logBulk.Array[logBulk.Offset + cur];                          sb.Append(char.IsControl(b) ? '.' : b);                      }                  }                  sb.AppendLine();              }
Magic Number,EventStore.Common.Utils,Helper,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row)              {                  sb.AppendFormat("{0:000000}:"' row * 16);                  for (int i = 0; i < 16; ++i' ++cur)                  {                      if (cur >= len)                          sb.Append("   ");                      else                          sb.AppendFormat(" {0:X2}"' logBulk.Array[logBulk.Offset + cur]);                  }                  sb.Append("  | ");                  cur -= 16;                  for (int i = 0; i < 16; ++i' ++cur)                  {                      if (cur < len)                      {                          var b = (char)logBulk.Array[logBulk.Offset + cur];                          sb.Append(char.IsControl(b) ? '.' : b);                      }                  }                  sb.AppendLine();              }
Magic Number,EventStore.Common.Utils,Helper,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row)              {                  sb.AppendFormat("{0:000000}:"' row * 16);                  for (int i = 0; i < 16; ++i' ++cur)                  {                      if (cur >= len)                          sb.Append("   ");                      else                          sb.AppendFormat(" {0:X2}"' logBulk.Array[logBulk.Offset + cur]);                  }                  sb.Append("  | ");                  cur -= 16;                  for (int i = 0; i < 16; ++i' ++cur)                  {                      if (cur < len)                      {                          var b = (char)logBulk.Array[logBulk.Offset + cur];                          sb.Append(char.IsControl(b) ? '.' : b);                      }                  }                  sb.AppendLine();              }
Magic Number,EventStore.Common.Utils,Helper,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row)              {                  sb.AppendFormat("{0:000000}:"' row * 16);                  for (int i = 0; i < 16; ++i' ++cur)                  {                      if (cur >= len)                          sb.Append("   ");                      else                          sb.AppendFormat(" {0:X2}"' logBulk.Array[logBulk.Offset + cur]);                  }                  sb.Append("  | ");                  cur -= 16;                  for (int i = 0; i < 16; ++i' ++cur)                  {                      if (cur < len)                      {                          var b = (char)logBulk.Array[logBulk.Offset + cur];                          sb.Append(char.IsControl(b) ? '.' : b);                      }                  }                  sb.AppendLine();              }
Magic Number,EventStore.Common.Utils,BytesFormatter,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\BytesFormatter.cs,FormatLong,The following statement contains a magic number: const int scale = 1024;
Magic Number,EventStore.Common.Utils,BytesFormatter,C:\repos\EventStore_EventStore\src\EventStore.Common\Utils\BytesFormatter.cs,FormatSpeed,The following statement contains a magic number: const int scale = 1024;
