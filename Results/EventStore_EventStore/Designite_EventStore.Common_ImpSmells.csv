Implementation smell,Namespace,Class,File,Method,Description
Complex Method,EventStore.Common.Utils,Locations,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\Locations.cs,Locations,Cyclomatic complexity of the method is 14
Long Identifier,EventStore.Common.Log,LogManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Log\LogManager.cs,Init,The length of the parameter potentialNLogConfigurationFilePaths is 35.
Long Statement,EventStore.Common.Log,ConsoleLogger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Log\ConsoleLogger.cs,Log,The length of the statement  "	return string.Format ("[{0:00000}'{1:00}'{2:HH:mm:ss.fff}'{3}] {4}"' ProcessId' Thread.CurrentThread.ManagedThreadId' DateTime.UtcNow' level' args.Length == 0 ? format : string.Format (format' args)); " is 200.
Long Statement,EventStore.Common.Log,ConsoleLogger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Log\ConsoleLogger.cs,Log,The length of the statement  "	return string.Format ("[{0:00000}'{1:00}'{2:HH:mm:ss.fff}'{3}] {4}\nEXCEPTION(S) OCCURRED:{5}"' ProcessId' Thread.CurrentThread.ManagedThreadId' DateTime.UtcNow' level' args.Length == 0 ? format : string.Format (format' args)' sb); " is 231.
Long Statement,EventStore.Common.Log,LogManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Log\LogManager.cs,Init,The length of the statement  "		Console.Error.WriteLine ("Event Store's Logging ({0}) configuration file was not found in:\n{1}.\nFalling back to defaults."' EVENTSTORE_LOG_FILENAME' String.Join ("'\n"' potentialNLogConfigurationFilePaths)); " is 209.
Long Statement,EventStore.Common.Log,LogManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Log\LogManager.cs,SetDefaultLog,The length of the statement  "	NLog.LogManager.Configuration.LoggingRules.Add (new NLog.Config.LoggingRule ("*"' NLog.LogLevel.Trace' new NLog.Targets.ColoredConsoleTarget { " is 142.
Long Statement,EventStore.Common.Options,EventStoreOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Options\EventStoreOptions.cs,Parse,The length of the statement  "	_effectiveOptions = GetConfig<TOptions> (args' environmentPrefix' defaultConfigLocation).Flatten ().Cleanup ().UseAliases<TOptions> ().ToLookup (x => x.Name.ToLower ()).Select (ResolvePrecedence).EnsureExistence<TOptions> ().EnsureCorrectType<TOptions> ().FixNames<TOptions> (); " is 278.
Long Statement,EventStore.Common.Options,EventStoreOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Options\EventStoreOptions.cs,GetConfig,The length of the statement  "	yield return EnvironmentVariables.Parse<TOptions> (x => NameTranslators.PrefixEnvironmentVariable (x' environmentPrefix).ToUpper ()); " is 133.
Long Statement,EventStore.Common.Options,EventStoreOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Options\EventStoreOptions.cs,ResolvePrecedence,The length of the statement  "	var options = optionSources.OrderBy (x => x.Source == "Command Line" ? 0 : x.Source == "Environment Variable" ? 1 : x.Source == "Config File" ? 2 : 3); " is 151.
Long Statement,EventStore.Common.Options,EventStoreOptions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Options\EventStoreOptions.cs,DumpOptions,The length of the statement  "		dumpOptionsBuilder.AppendLine (String.Format ("\t{0'-25} {1} ({2})"' optionName + ":"' String.IsNullOrEmpty (valueToDump) ? "<empty>" : valueToDump' option.Source)); " is 165.
Long Statement,EventStore.Common.Options,RagsExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Options\EventStoreOptions.cs,EnsureExistence,The length of the statement  "			throw new OptionException (String.Format ("The option {0} is not a known option"' optionSource.Name)' optionSource.Name); " is 121.
Long Statement,EventStore.Common.Options,RagsExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Options\EventStoreOptions.cs,EnsureCorrectType,The length of the statement  "			throw new OptionException (String.Format ("The value {0} could not be converted to {1}"' optionSource.Value' property.PropertyType.Name)' property.Name); " is 153.
Long Statement,EventStore.Common.Utils,FileStreamExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\FileStreamExtensions.cs,ConfigureFlush,The length of the statement  "			Expression expr = Expression.Field (arg' typeof(FileStream).GetField ("_handle"' BindingFlags.Instance | BindingFlags.NonPublic)); " is 130.
Long Statement,EventStore.Common.Utils,Platforms,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\Platforms.cs,GetPlatform,The length of the statement  "		if (Directory.Exists ("/Applications") & Directory.Exists ("/System") & Directory.Exists ("/Users") & Directory.Exists ("/Volumes")) " is 132.
Long Statement,EventStore.Common.Utils,OS,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\OS.cs,GetHomeFolder,The length of the statement  "	return IsUnix ? Environment.GetEnvironmentVariable ("HOME") : Environment.ExpandEnvironmentVariables ("%HOMEDRIVE%%HOMEPATH%"); " is 127.
Long Statement,EventStore.Common.Utils,BytesFormatter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\BytesFormatter.cs,FormatLong,The length of the statement  "	var friendlyStr = string.Format (CultureInfo.InvariantCulture' "{0}{1:##0.##}{2}"' isNegative ? "-" : string.Empty' bytes * 1.0 / (double)max' finalOrder); " is 155.
Long Statement,EventStore.Common.Utils,BytesFormatter,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\BytesFormatter.cs,FormatSpeed,The length of the statement  "	var friendlyStr = string.Format (CultureInfo.InvariantCulture' "{0}{1:##0.##}{2}"' isNegative ? "-" : string.Empty' bytesPerSec / (double)max' finalOrder); " is 155.
Long Statement,EventStore.Common.Utils,IPEndPointExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\IPEndpointExtensions.cs,ToHttpUrl,The length of the statement  "	return string.Format ("http://{0}:{1}/{2}"' endPoint.Address' endPoint.Port' rawUrl != null ? rawUrl.TrimStart ('/') : string.Empty); " is 133.
Long Statement,EventStore.Common.Utils,IPEndPointExtensions,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\IPEndpointExtensions.cs,ToHttpUrl,The length of the statement  "	return string.Format ("http://{0}:{1}/{2}"' endPoint.Address' endPoint.Port' string.Format (formatString.TrimStart ('/')' args)); " is 129.
Long Statement,EventStore.Common.Utils,Ensure,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\Ensure.cs,Equal,The length of the statement  "		throw new ArgumentException (string.Format ("{0} expected value: {1}' actual value: {2}"' argumentName' expected' actual)); " is 123.
Long Statement,EventStore.Common.Utils,Ensure,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\Ensure.cs,Equal,The length of the statement  "		throw new ArgumentException (string.Format ("{0} expected value: {1}' actual value: {2}"' argumentName' expected' actual)); " is 123.
Long Statement,EventStore.Common.Utils,Ensure,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\Ensure.cs,Equal,The length of the statement  "		throw new ArgumentException (string.Format ("{0} expected value: {1}' actual value: {2}"' argumentName' expected' actual)); " is 123.
Empty Catch Block,EventStore.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,EatException,The method has an empty catch block.
Magic Number,EventStore.Common.Log,LogManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Log\LogManager.cs,Init,The following statement contains a magic number: AppDomain.CurrentDomain.UnhandledException += (s' e) => {  	var exc = e.ExceptionObject as Exception;  	if (exc != null)  		GlobalLogger.FatalException (exc' "Global Unhandled Exception occurred.");  	else  		GlobalLogger.Fatal ("Global Unhandled Exception object: {0}."' e.ExceptionObject);  	GlobalLogger.Flush (TimeSpan.FromMilliseconds (500));  };  
Magic Number,EventStore.Common.Log,LogManager,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Log\LogManager.cs,Init,The following statement contains a magic number: GlobalLogger.Flush (TimeSpan.FromMilliseconds (500));  
Magic Number,EventStore.Common.Log,NLogger,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Log\NLogger.cs,FlushLog,The following statement contains a magic number: countdown.Wait (maxTimeToWait ?? TimeSpan.FromMilliseconds (500));  
Magic Number,EventStore.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row) {  	sb.AppendFormat ("{0:000000}:"' row * 16);  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur >= len)  			sb.Append ("   ");  		else  			sb.AppendFormat (" {0:X2}"' logBulk.Array [logBulk.Offset + cur]);  	}  	sb.Append ("  | ");  	cur -= 16;  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur < len) {  			var b = (char)logBulk.Array [logBulk.Offset + cur];  			sb.Append (char.IsControl (b) ? '.' : b);  		}  	}  	sb.AppendLine ();  }  
Magic Number,EventStore.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row) {  	sb.AppendFormat ("{0:000000}:"' row * 16);  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur >= len)  			sb.Append ("   ");  		else  			sb.AppendFormat (" {0:X2}"' logBulk.Array [logBulk.Offset + cur]);  	}  	sb.Append ("  | ");  	cur -= 16;  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur < len) {  			var b = (char)logBulk.Array [logBulk.Offset + cur];  			sb.Append (char.IsControl (b) ? '.' : b);  		}  	}  	sb.AppendLine ();  }  
Magic Number,EventStore.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row) {  	sb.AppendFormat ("{0:000000}:"' row * 16);  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur >= len)  			sb.Append ("   ");  		else  			sb.AppendFormat (" {0:X2}"' logBulk.Array [logBulk.Offset + cur]);  	}  	sb.Append ("  | ");  	cur -= 16;  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur < len) {  			var b = (char)logBulk.Array [logBulk.Offset + cur];  			sb.Append (char.IsControl (b) ? '.' : b);  		}  	}  	sb.AppendLine ();  }  
Magic Number,EventStore.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row) {  	sb.AppendFormat ("{0:000000}:"' row * 16);  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur >= len)  			sb.Append ("   ");  		else  			sb.AppendFormat (" {0:X2}"' logBulk.Array [logBulk.Offset + cur]);  	}  	sb.Append ("  | ");  	cur -= 16;  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur < len) {  			var b = (char)logBulk.Array [logBulk.Offset + cur];  			sb.Append (char.IsControl (b) ? '.' : b);  		}  	}  	sb.AppendLine ();  }  
Magic Number,EventStore.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row) {  	sb.AppendFormat ("{0:000000}:"' row * 16);  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur >= len)  			sb.Append ("   ");  		else  			sb.AppendFormat (" {0:X2}"' logBulk.Array [logBulk.Offset + cur]);  	}  	sb.Append ("  | ");  	cur -= 16;  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur < len) {  			var b = (char)logBulk.Array [logBulk.Offset + cur];  			sb.Append (char.IsControl (b) ? '.' : b);  		}  	}  	sb.AppendLine ();  }  
Magic Number,EventStore.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int row = 0' rows = (logBulk.Count + 15) / 16; row < rows; ++row) {  	sb.AppendFormat ("{0:000000}:"' row * 16);  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur >= len)  			sb.Append ("   ");  		else  			sb.AppendFormat (" {0:X2}"' logBulk.Array [logBulk.Offset + cur]);  	}  	sb.Append ("  | ");  	cur -= 16;  	for (int i = 0; i < 16; ++i' ++cur) {  		if (cur < len) {  			var b = (char)logBulk.Array [logBulk.Offset + cur];  			sb.Append (char.IsControl (b) ? '.' : b);  		}  	}  	sb.AppendLine ();  }  
Magic Number,EventStore.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: sb.AppendFormat ("{0:000000}:"' row * 16);  
Magic Number,EventStore.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int i = 0; i < 16; ++i' ++cur) {  	if (cur >= len)  		sb.Append ("   ");  	else  		sb.AppendFormat (" {0:X2}"' logBulk.Array [logBulk.Offset + cur]);  }  
Magic Number,EventStore.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: cur -= 16;  
Magic Number,EventStore.Common.Utils,Helper,F:\newReposMay17\EventStore_EventStore\src\EventStore.Common\Utils\Helper.cs,FormatBinaryDump,The following statement contains a magic number: for (int i = 0; i < 16; ++i' ++cur) {  	if (cur < len) {  		var b = (char)logBulk.Array [logBulk.Offset + cur];  		sb.Append (char.IsControl (b) ? '.' : b);  	}  }  
